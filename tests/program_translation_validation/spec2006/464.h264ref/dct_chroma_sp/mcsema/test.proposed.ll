; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_475150.sign(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4acd10.levrun_linfo_c2x2(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4ace70.levrun_linfo_inter(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x4b2a50_type = type <{ [4 x i8] }>
@G_0x4b2a50= global %G_0x4b2a50_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6d4690_type = type <{ [8 x i8] }>
@G_0x6d4690= global %G_0x6d4690_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6d4750_type = type <{ [1 x i8] }>
@G_0x6d4750= global %G_0x6d4750_type <{ [1 x i8] c"\00" }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
@G_0x70fcf0= global %G_0x70fcf0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xa44c9__rip__type = type <{ [8 x i8] }>
@G_0xa44c9__rip_= global %G_0xa44c9__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xa4585__rip__type = type <{ [8 x i8] }>
@G_0xa4585__rip_= global %G_0xa4585__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4b23a0_type = type <{ [8 x i8] }>
@G__0x4b23a0= global %G__0x4b23a0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4b2750_type = type <{ [8 x i8] }>
@G__0x4b2750= global %G__0x4b2750_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4b28d0_type = type <{ [8 x i8] }>
@G__0x4b28d0= global %G__0x4b28d0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4b2a50_type = type <{ [8 x i8] }>
@G__0x4b2a50= global %G__0x4b2a50_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @dct_chroma_sp(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .dct_chroma_sp:	 RIP: 40d2b0	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 40d2b0	 Bytes: 1
  %loadMem_40d2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2b0 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2b0)
  store %struct.Memory* %call_40d2b0, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 40d2b1	 Bytes: 3
  %loadMem_40d2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2b1 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2b1)
  store %struct.Memory* %call_40d2b1, %struct.Memory** %MEMORY

  ; Code: subq $0x310, %rsp	 RIP: 40d2b4	 Bytes: 7
  %loadMem_40d2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2b4 = call %struct.Memory* @routine_subq__0x310___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2b4)
  store %struct.Memory* %call_40d2b4, %struct.Memory** %MEMORY

  ; Code: movsd 0xa4585(%rip), %xmm0	 RIP: 40d2bb	 Bytes: 8
  %loadMem_40d2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2bb = call %struct.Memory* @routine_movsd_0xa4585__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2bb)
  store %struct.Memory* %call_40d2bb, %struct.Memory** %MEMORY

  ; Code: movsd 0xa4585(%rip), %xmm1	 RIP: 40d2c3	 Bytes: 8
  %loadMem_40d2c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2c3 = call %struct.Memory* @routine_movsd_0xa4585__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2c3)
  store %struct.Memory* %call_40d2c3, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x4(%rbp)	 RIP: 40d2cb	 Bytes: 3
  %loadMem_40d2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2cb = call %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2cb)
  store %struct.Memory* %call_40d2cb, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x8(%rbp)	 RIP: 40d2ce	 Bytes: 3
  %loadMem_40d2ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2ce = call %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2ce)
  store %struct.Memory* %call_40d2ce, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40d2d1	 Bytes: 8
  %loadMem_40d2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2d1 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2d1)
  store %struct.Memory* %call_40d2d1, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 40d2d9	 Bytes: 7
  %loadMem_40d2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2d9 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2d9)
  store %struct.Memory* %call_40d2d9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d2e0	 Bytes: 8
  %loadMem_40d2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2e0 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2e0)
  store %struct.Memory* %call_40d2e0, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rcx), %rcx	 RIP: 40d2e8	 Bytes: 4
  %loadMem_40d2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2e8 = call %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2e8)
  store %struct.Memory* %call_40d2e8, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 40d2ec	 Bytes: 7
  %loadMem_40d2ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2ec = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2ec)
  store %struct.Memory* %call_40d2ec, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40d2f3	 Bytes: 3
  %loadMem_40d2f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2f3 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2f3)
  store %struct.Memory* %call_40d2f3, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x1b8(%rbp)	 RIP: 40d2f6	 Bytes: 7
  %loadMem_40d2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2f6 = call %struct.Memory* @routine_movq__rax__MINUS0x1b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2f6)
  store %struct.Memory* %call_40d2f6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40d2fd	 Bytes: 8
  %loadMem_40d2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d2fd = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d2fd)
  store %struct.Memory* %call_40d2fd, %struct.Memory** %MEMORY

  ; Code: movq 0x3740(%rax), %rax	 RIP: 40d305	 Bytes: 7
  %loadMem_40d305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d305 = call %struct.Memory* @routine_movq_0x3740__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d305)
  store %struct.Memory* %call_40d305, %struct.Memory** %MEMORY

  ; Code: movl -0x4(%rbp), %esi	 RIP: 40d30c	 Bytes: 3
  %loadMem_40d30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d30c = call %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d30c)
  store %struct.Memory* %call_40d30c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 40d30f	 Bytes: 3
  %loadMem_40d30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d30f = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d30f)
  store %struct.Memory* %call_40d30f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 40d312	 Bytes: 3
  %loadMem_40d312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d312 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d312)
  store %struct.Memory* %call_40d312, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 40d315	 Bytes: 4
  %loadMem_40d315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d315 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d315)
  store %struct.Memory* %call_40d315, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 40d319	 Bytes: 3
  %loadMem_40d319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d319 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d319)
  store %struct.Memory* %call_40d319, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x1e0(%rbp)	 RIP: 40d31c	 Bytes: 7
  %loadMem_40d31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d31c = call %struct.Memory* @routine_movq__rax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d31c)
  store %struct.Memory* %call_40d31c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40d323	 Bytes: 8
  %loadMem_40d323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d323 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d323)
  store %struct.Memory* %call_40d323, %struct.Memory** %MEMORY

  ; Code: movq 0x3740(%rax), %rax	 RIP: 40d32b	 Bytes: 7
  %loadMem_40d32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d32b = call %struct.Memory* @routine_movq_0x3740__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d32b)
  store %struct.Memory* %call_40d32b, %struct.Memory** %MEMORY

  ; Code: movl -0x4(%rbp), %esi	 RIP: 40d332	 Bytes: 3
  %loadMem_40d332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d332 = call %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d332)
  store %struct.Memory* %call_40d332, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 40d335	 Bytes: 3
  %loadMem_40d335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d335 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d335)
  store %struct.Memory* %call_40d335, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 40d338	 Bytes: 3
  %loadMem_40d338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d338 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d338)
  store %struct.Memory* %call_40d338, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 40d33b	 Bytes: 4
  %loadMem_40d33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d33b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d33b)
  store %struct.Memory* %call_40d33b, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 40d33f	 Bytes: 4
  %loadMem_40d33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d33f = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d33f)
  store %struct.Memory* %call_40d33f, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x1e8(%rbp)	 RIP: 40d343	 Bytes: 7
  %loadMem_40d343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d343 = call %struct.Memory* @routine_movq__rax__MINUS0x1e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d343)
  store %struct.Memory* %call_40d343, %struct.Memory** %MEMORY

  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d34a	 Bytes: 7
  %loadMem_40d34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d34a = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d34a)
  store %struct.Memory* %call_40d34a, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %esi	 RIP: 40d351	 Bytes: 3
  %loadMem_40d351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d351 = call %struct.Memory* @routine_movl_0xc__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d351)
  store %struct.Memory* %call_40d351, %struct.Memory** %MEMORY

  ; Code: subl $0xc, %esi	 RIP: 40d354	 Bytes: 3
  %loadMem_40d354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d354 = call %struct.Memory* @routine_subl__0xc___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d354)
  store %struct.Memory* %call_40d354, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %esi, %xmm2	 RIP: 40d357	 Bytes: 4
  %loadMem_40d357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d357 = call %struct.Memory* @routine_cvtsi2sdl__esi___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d357)
  store %struct.Memory* %call_40d357, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm2	 RIP: 40d35b	 Bytes: 4
  %loadMem_40d35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d35b = call %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d35b)
  store %struct.Memory* %call_40d35b, %struct.Memory** %MEMORY

  ; Code: movaps %xmm2, %xmm1	 RIP: 40d35f	 Bytes: 3
  %loadMem_40d35f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d35f = call %struct.Memory* @routine_movaps__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d35f)
  store %struct.Memory* %call_40d35f, %struct.Memory** %MEMORY

  ; Code: callq .pow_plt	 RIP: 40d362	 Bytes: 5
  %loadMem1_40d362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40d362 = call %struct.Memory* @routine_callq_.pow_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40d362, i64 -49890, i64 5, i64 5)
  store %struct.Memory* %call1_40d362, %struct.Memory** %MEMORY

  %loadMem2_40d362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40d362 = load i64, i64* %3
  %call2_40d362 = call %struct.Memory* @ext_pow(%struct.State* %0, i64  %loadPC_40d362, %struct.Memory* %loadMem2_40d362)
  store %struct.Memory* %call2_40d362, %struct.Memory** %MEMORY

  ; Code: movsd 0xa44c9(%rip), %xmm1	 RIP: 40d367	 Bytes: 8
  %loadMem_40d367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d367 = call %struct.Memory* @routine_movsd_0xa44c9__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d367)
  store %struct.Memory* %call_40d367, %struct.Memory** %MEMORY

  ; Code: movsd 0xa44c9(%rip), %xmm2	 RIP: 40d36f	 Bytes: 8
  %loadMem_40d36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d36f = call %struct.Memory* @routine_movsd_0xa44c9__rip____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d36f)
  store %struct.Memory* %call_40d36f, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm0, %xmm2	 RIP: 40d377	 Bytes: 4
  %loadMem_40d377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d377 = call %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d377)
  store %struct.Memory* %call_40d377, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm1, %xmm2	 RIP: 40d37b	 Bytes: 4
  %loadMem_40d37b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d37b = call %struct.Memory* @routine_mulsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d37b)
  store %struct.Memory* %call_40d37b, %struct.Memory** %MEMORY

  ; Code: movsd %xmm2, -0x228(%rbp)	 RIP: 40d37f	 Bytes: 8
  %loadMem_40d37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d37f = call %struct.Memory* @routine_movsd__xmm2__MINUS0x228__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d37f)
  store %struct.Memory* %call_40d37f, %struct.Memory** %MEMORY

  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d387	 Bytes: 7
  %loadMem_40d387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d387 = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d387)
  store %struct.Memory* %call_40d387, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %esi	 RIP: 40d38e	 Bytes: 3
  %loadMem_40d38e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d38e = call %struct.Memory* @routine_movl_0xc__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d38e)
  store %struct.Memory* %call_40d38e, %struct.Memory** %MEMORY

  ; Code: movq 0x6d4690, %rax	 RIP: 40d391	 Bytes: 8
  %loadMem_40d391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d391 = call %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d391)
  store %struct.Memory* %call_40d391, %struct.Memory** %MEMORY

  ; Code: addl 0xd0(%rax), %esi	 RIP: 40d399	 Bytes: 6
  %loadMem_40d399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d399 = call %struct.Memory* @routine_addl_0xd0__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d399)
  store %struct.Memory* %call_40d399, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %esi	 RIP: 40d39f	 Bytes: 3
  %loadMem_40d39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d39f = call %struct.Memory* @routine_cmpl__0x0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d39f)
  store %struct.Memory* %call_40d39f, %struct.Memory** %MEMORY

  ; Code: jge .L_40d3b5	 RIP: 40d3a2	 Bytes: 6
  %loadMem_40d3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3a2 = call %struct.Memory* @routine_jge_.L_40d3b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3a2, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_40d3a2, %struct.Memory** %MEMORY

  %loadBr_40d3a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d3a2 = icmp eq i8 %loadBr_40d3a2, 1
  br i1 %cmpBr_40d3a2, label %block_.L_40d3b5, label %block_40d3a8

block_40d3a8:
  ; Code: xorl %eax, %eax	 RIP: 40d3a8	 Bytes: 2
  %loadMem_40d3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3a8 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3a8)
  store %struct.Memory* %call_40d3a8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x234(%rbp)	 RIP: 40d3aa	 Bytes: 6
  %loadMem_40d3aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3aa = call %struct.Memory* @routine_movl__eax__MINUS0x234__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3aa)
  store %struct.Memory* %call_40d3aa, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d410	 RIP: 40d3b0	 Bytes: 5
  %loadMem_40d3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3b0 = call %struct.Memory* @routine_jmpq_.L_40d410(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3b0, i64 96, i64 5)
  store %struct.Memory* %call_40d3b0, %struct.Memory** %MEMORY

  br label %block_.L_40d410

  ; Code: .L_40d3b5:	 RIP: 40d3b5	 Bytes: 0
block_.L_40d3b5:

  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d3b5	 Bytes: 7
  %loadMem_40d3b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3b5 = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3b5)
  store %struct.Memory* %call_40d3b5, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %ecx	 RIP: 40d3bc	 Bytes: 3
  %loadMem_40d3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3bc = call %struct.Memory* @routine_movl_0xc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3bc)
  store %struct.Memory* %call_40d3bc, %struct.Memory** %MEMORY

  ; Code: movq 0x6d4690, %rax	 RIP: 40d3bf	 Bytes: 8
  %loadMem_40d3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3bf = call %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3bf)
  store %struct.Memory* %call_40d3bf, %struct.Memory** %MEMORY

  ; Code: addl 0xd0(%rax), %ecx	 RIP: 40d3c7	 Bytes: 6
  %loadMem_40d3c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3c7 = call %struct.Memory* @routine_addl_0xd0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3c7)
  store %struct.Memory* %call_40d3c7, %struct.Memory** %MEMORY

  ; Code: cmpl $0x33, %ecx	 RIP: 40d3cd	 Bytes: 3
  %loadMem_40d3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3cd = call %struct.Memory* @routine_cmpl__0x33___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3cd)
  store %struct.Memory* %call_40d3cd, %struct.Memory** %MEMORY

  ; Code: jle .L_40d3e6	 RIP: 40d3d0	 Bytes: 6
  %loadMem_40d3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3d0 = call %struct.Memory* @routine_jle_.L_40d3e6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3d0, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_40d3d0, %struct.Memory** %MEMORY

  %loadBr_40d3d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d3d0 = icmp eq i8 %loadBr_40d3d0, 1
  br i1 %cmpBr_40d3d0, label %block_.L_40d3e6, label %block_40d3d6

block_40d3d6:
  ; Code: movl $0x33, %eax	 RIP: 40d3d6	 Bytes: 5
  %loadMem_40d3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3d6 = call %struct.Memory* @routine_movl__0x33___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3d6)
  store %struct.Memory* %call_40d3d6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x238(%rbp)	 RIP: 40d3db	 Bytes: 6
  %loadMem_40d3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3db = call %struct.Memory* @routine_movl__eax__MINUS0x238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3db)
  store %struct.Memory* %call_40d3db, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d404	 RIP: 40d3e1	 Bytes: 5
  %loadMem_40d3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3e1 = call %struct.Memory* @routine_jmpq_.L_40d404(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3e1, i64 35, i64 5)
  store %struct.Memory* %call_40d3e1, %struct.Memory** %MEMORY

  br label %block_.L_40d404

  ; Code: .L_40d3e6:	 RIP: 40d3e6	 Bytes: 0
block_.L_40d3e6:

  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d3e6	 Bytes: 7
  %loadMem_40d3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3e6 = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3e6)
  store %struct.Memory* %call_40d3e6, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %ecx	 RIP: 40d3ed	 Bytes: 3
  %loadMem_40d3ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3ed = call %struct.Memory* @routine_movl_0xc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3ed)
  store %struct.Memory* %call_40d3ed, %struct.Memory** %MEMORY

  ; Code: movq 0x6d4690, %rax	 RIP: 40d3f0	 Bytes: 8
  %loadMem_40d3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3f0 = call %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3f0)
  store %struct.Memory* %call_40d3f0, %struct.Memory** %MEMORY

  ; Code: addl 0xd0(%rax), %ecx	 RIP: 40d3f8	 Bytes: 6
  %loadMem_40d3f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3f8 = call %struct.Memory* @routine_addl_0xd0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3f8)
  store %struct.Memory* %call_40d3f8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x238(%rbp)	 RIP: 40d3fe	 Bytes: 6
  %loadMem_40d3fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d3fe = call %struct.Memory* @routine_movl__ecx__MINUS0x238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d3fe)
  store %struct.Memory* %call_40d3fe, %struct.Memory** %MEMORY

  ; Code: .L_40d404:	 RIP: 40d404	 Bytes: 0
  br label %block_.L_40d404
block_.L_40d404:

  ; Code: movl -0x238(%rbp), %eax	 RIP: 40d404	 Bytes: 6
  %loadMem_40d404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d404 = call %struct.Memory* @routine_movl_MINUS0x238__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d404)
  store %struct.Memory* %call_40d404, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x234(%rbp)	 RIP: 40d40a	 Bytes: 6
  %loadMem_40d40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d40a = call %struct.Memory* @routine_movl__eax__MINUS0x234__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d40a)
  store %struct.Memory* %call_40d40a, %struct.Memory** %MEMORY

  ; Code: .L_40d410:	 RIP: 40d410	 Bytes: 0
  br label %block_.L_40d410
block_.L_40d410:

  ; Code: movl -0x234(%rbp), %eax	 RIP: 40d410	 Bytes: 6
  %loadMem_40d410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d410 = call %struct.Memory* @routine_movl_MINUS0x234__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d410)
  store %struct.Memory* %call_40d410, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x22c(%rbp)	 RIP: 40d416	 Bytes: 6
  %loadMem_40d416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d416 = call %struct.Memory* @routine_movl__eax__MINUS0x22c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d416)
  store %struct.Memory* %call_40d416, %struct.Memory** %MEMORY

  ; Code: movq -0x1b8(%rbp), %rcx	 RIP: 40d41c	 Bytes: 7
  %loadMem_40d41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d41c = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d41c)
  store %struct.Memory* %call_40d41c, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%rcx), %eax	 RIP: 40d423	 Bytes: 3
  %loadMem_40d423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d423 = call %struct.Memory* @routine_movl_0x10__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d423)
  store %struct.Memory* %call_40d423, %struct.Memory** %MEMORY

  ; Code: movq 0x6d4690, %rcx	 RIP: 40d426	 Bytes: 8
  %loadMem_40d426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d426 = call %struct.Memory* @routine_movq_0x6d4690___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d426)
  store %struct.Memory* %call_40d426, %struct.Memory** %MEMORY

  ; Code: addl 0xd0(%rcx), %eax	 RIP: 40d42e	 Bytes: 6
  %loadMem_40d42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d42e = call %struct.Memory* @routine_addl_0xd0__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d42e)
  store %struct.Memory* %call_40d42e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40d434	 Bytes: 3
  %loadMem_40d434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d434 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d434)
  store %struct.Memory* %call_40d434, %struct.Memory** %MEMORY

  ; Code: jge .L_40d44a	 RIP: 40d437	 Bytes: 6
  %loadMem_40d437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d437 = call %struct.Memory* @routine_jge_.L_40d44a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d437, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_40d437, %struct.Memory** %MEMORY

  %loadBr_40d437 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d437 = icmp eq i8 %loadBr_40d437, 1
  br i1 %cmpBr_40d437, label %block_.L_40d44a, label %block_40d43d

block_40d43d:
  ; Code: xorl %eax, %eax	 RIP: 40d43d	 Bytes: 2
  %loadMem_40d43d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d43d = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d43d)
  store %struct.Memory* %call_40d43d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x23c(%rbp)	 RIP: 40d43f	 Bytes: 6
  %loadMem_40d43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d43f = call %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d43f)
  store %struct.Memory* %call_40d43f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d4a5	 RIP: 40d445	 Bytes: 5
  %loadMem_40d445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d445 = call %struct.Memory* @routine_jmpq_.L_40d4a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d445, i64 96, i64 5)
  store %struct.Memory* %call_40d445, %struct.Memory** %MEMORY

  br label %block_.L_40d4a5

  ; Code: .L_40d44a:	 RIP: 40d44a	 Bytes: 0
block_.L_40d44a:

  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d44a	 Bytes: 7
  %loadMem_40d44a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d44a = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d44a)
  store %struct.Memory* %call_40d44a, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%rax), %ecx	 RIP: 40d451	 Bytes: 3
  %loadMem_40d451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d451 = call %struct.Memory* @routine_movl_0x10__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d451)
  store %struct.Memory* %call_40d451, %struct.Memory** %MEMORY

  ; Code: movq 0x6d4690, %rax	 RIP: 40d454	 Bytes: 8
  %loadMem_40d454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d454 = call %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d454)
  store %struct.Memory* %call_40d454, %struct.Memory** %MEMORY

  ; Code: addl 0xd0(%rax), %ecx	 RIP: 40d45c	 Bytes: 6
  %loadMem_40d45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d45c = call %struct.Memory* @routine_addl_0xd0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d45c)
  store %struct.Memory* %call_40d45c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x33, %ecx	 RIP: 40d462	 Bytes: 3
  %loadMem_40d462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d462 = call %struct.Memory* @routine_cmpl__0x33___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d462)
  store %struct.Memory* %call_40d462, %struct.Memory** %MEMORY

  ; Code: jle .L_40d47b	 RIP: 40d465	 Bytes: 6
  %loadMem_40d465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d465 = call %struct.Memory* @routine_jle_.L_40d47b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d465, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_40d465, %struct.Memory** %MEMORY

  %loadBr_40d465 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d465 = icmp eq i8 %loadBr_40d465, 1
  br i1 %cmpBr_40d465, label %block_.L_40d47b, label %block_40d46b

block_40d46b:
  ; Code: movl $0x33, %eax	 RIP: 40d46b	 Bytes: 5
  %loadMem_40d46b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d46b = call %struct.Memory* @routine_movl__0x33___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d46b)
  store %struct.Memory* %call_40d46b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x240(%rbp)	 RIP: 40d470	 Bytes: 6
  %loadMem_40d470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d470 = call %struct.Memory* @routine_movl__eax__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d470)
  store %struct.Memory* %call_40d470, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d499	 RIP: 40d476	 Bytes: 5
  %loadMem_40d476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d476 = call %struct.Memory* @routine_jmpq_.L_40d499(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d476, i64 35, i64 5)
  store %struct.Memory* %call_40d476, %struct.Memory** %MEMORY

  br label %block_.L_40d499

  ; Code: .L_40d47b:	 RIP: 40d47b	 Bytes: 0
block_.L_40d47b:

  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d47b	 Bytes: 7
  %loadMem_40d47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d47b = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d47b)
  store %struct.Memory* %call_40d47b, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%rax), %ecx	 RIP: 40d482	 Bytes: 3
  %loadMem_40d482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d482 = call %struct.Memory* @routine_movl_0x10__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d482)
  store %struct.Memory* %call_40d482, %struct.Memory** %MEMORY

  ; Code: movq 0x6d4690, %rax	 RIP: 40d485	 Bytes: 8
  %loadMem_40d485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d485 = call %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d485)
  store %struct.Memory* %call_40d485, %struct.Memory** %MEMORY

  ; Code: addl 0xd0(%rax), %ecx	 RIP: 40d48d	 Bytes: 6
  %loadMem_40d48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d48d = call %struct.Memory* @routine_addl_0xd0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d48d)
  store %struct.Memory* %call_40d48d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x240(%rbp)	 RIP: 40d493	 Bytes: 6
  %loadMem_40d493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d493 = call %struct.Memory* @routine_movl__ecx__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d493)
  store %struct.Memory* %call_40d493, %struct.Memory** %MEMORY

  ; Code: .L_40d499:	 RIP: 40d499	 Bytes: 0
  br label %block_.L_40d499
block_.L_40d499:

  ; Code: movl -0x240(%rbp), %eax	 RIP: 40d499	 Bytes: 6
  %loadMem_40d499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d499 = call %struct.Memory* @routine_movl_MINUS0x240__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d499)
  store %struct.Memory* %call_40d499, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x23c(%rbp)	 RIP: 40d49f	 Bytes: 6
  %loadMem_40d49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d49f = call %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d49f)
  store %struct.Memory* %call_40d49f, %struct.Memory** %MEMORY

  ; Code: .L_40d4a5:	 RIP: 40d4a5	 Bytes: 0
  br label %block_.L_40d4a5
block_.L_40d4a5:

  ; Code: movl -0x23c(%rbp), %eax	 RIP: 40d4a5	 Bytes: 6
  %loadMem_40d4a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4a5 = call %struct.Memory* @routine_movl_MINUS0x23c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4a5)
  store %struct.Memory* %call_40d4a5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x230(%rbp)	 RIP: 40d4ab	 Bytes: 6
  %loadMem_40d4ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4ab = call %struct.Memory* @routine_movl__eax__MINUS0x230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4ab)
  store %struct.Memory* %call_40d4ab, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x22c(%rbp)	 RIP: 40d4b1	 Bytes: 7
  %loadMem_40d4b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4b1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x22c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4b1)
  store %struct.Memory* %call_40d4b1, %struct.Memory** %MEMORY

  ; Code: jge .L_40d4cf	 RIP: 40d4b8	 Bytes: 6
  %loadMem_40d4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4b8 = call %struct.Memory* @routine_jge_.L_40d4cf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4b8, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40d4b8, %struct.Memory** %MEMORY

  %loadBr_40d4b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d4b8 = icmp eq i8 %loadBr_40d4b8, 1
  br i1 %cmpBr_40d4b8, label %block_.L_40d4cf, label %block_40d4be

block_40d4be:
  ; Code: movl -0x22c(%rbp), %eax	 RIP: 40d4be	 Bytes: 6
  %loadMem_40d4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4be = call %struct.Memory* @routine_movl_MINUS0x22c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4be)
  store %struct.Memory* %call_40d4be, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x244(%rbp)	 RIP: 40d4c4	 Bytes: 6
  %loadMem_40d4c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4c4 = call %struct.Memory* @routine_movl__eax__MINUS0x244__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4c4)
  store %struct.Memory* %call_40d4c4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d4e4	 RIP: 40d4ca	 Bytes: 5
  %loadMem_40d4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4ca = call %struct.Memory* @routine_jmpq_.L_40d4e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4ca, i64 26, i64 5)
  store %struct.Memory* %call_40d4ca, %struct.Memory** %MEMORY

  br label %block_.L_40d4e4

  ; Code: .L_40d4cf:	 RIP: 40d4cf	 Bytes: 0
block_.L_40d4cf:

  ; Code: movslq -0x22c(%rbp), %rax	 RIP: 40d4cf	 Bytes: 7
  %loadMem_40d4cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4cf = call %struct.Memory* @routine_movslq_MINUS0x22c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4cf)
  store %struct.Memory* %call_40d4cf, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2320(,%rax,1), %ecx	 RIP: 40d4d6	 Bytes: 8
  %loadMem_40d4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4d6 = call %struct.Memory* @routine_movzbl_0x4b2320___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4d6)
  store %struct.Memory* %call_40d4d6, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x244(%rbp)	 RIP: 40d4de	 Bytes: 6
  %loadMem_40d4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4de = call %struct.Memory* @routine_movl__ecx__MINUS0x244__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4de)
  store %struct.Memory* %call_40d4de, %struct.Memory** %MEMORY

  ; Code: .L_40d4e4:	 RIP: 40d4e4	 Bytes: 0
  br label %block_.L_40d4e4
block_.L_40d4e4:

  ; Code: movl -0x244(%rbp), %eax	 RIP: 40d4e4	 Bytes: 6
  %loadMem_40d4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4e4 = call %struct.Memory* @routine_movl_MINUS0x244__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4e4)
  store %struct.Memory* %call_40d4e4, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %ecx	 RIP: 40d4ea	 Bytes: 5
  %loadMem_40d4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4ea = call %struct.Memory* @routine_movl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4ea)
  store %struct.Memory* %call_40d4ea, %struct.Memory** %MEMORY

  ; Code: subl $0x0, %eax	 RIP: 40d4ef	 Bytes: 3
  %loadMem_40d4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4ef = call %struct.Memory* @routine_subl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4ef)
  store %struct.Memory* %call_40d4ef, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40d4f2	 Bytes: 1
  %loadMem_40d4f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4f2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4f2)
  store %struct.Memory* %call_40d4f2, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 40d4f3	 Bytes: 2
  %loadMem_40d4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4f3 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4f3)
  store %struct.Memory* %call_40d4f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1bc(%rbp)	 RIP: 40d4f5	 Bytes: 6
  %loadMem_40d4f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4f5 = call %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4f5)
  store %struct.Memory* %call_40d4f5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x22c(%rbp)	 RIP: 40d4fb	 Bytes: 7
  %loadMem_40d4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d4fb = call %struct.Memory* @routine_cmpl__0x0__MINUS0x22c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d4fb)
  store %struct.Memory* %call_40d4fb, %struct.Memory** %MEMORY

  ; Code: jge .L_40d519	 RIP: 40d502	 Bytes: 6
  %loadMem_40d502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d502 = call %struct.Memory* @routine_jge_.L_40d519(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d502, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40d502, %struct.Memory** %MEMORY

  %loadBr_40d502 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d502 = icmp eq i8 %loadBr_40d502, 1
  br i1 %cmpBr_40d502, label %block_.L_40d519, label %block_40d508

block_40d508:
  ; Code: movl -0x22c(%rbp), %eax	 RIP: 40d508	 Bytes: 6
  %loadMem_40d508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d508 = call %struct.Memory* @routine_movl_MINUS0x22c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d508)
  store %struct.Memory* %call_40d508, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x248(%rbp)	 RIP: 40d50e	 Bytes: 6
  %loadMem_40d50e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d50e = call %struct.Memory* @routine_movl__eax__MINUS0x248__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d50e)
  store %struct.Memory* %call_40d50e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d52e	 RIP: 40d514	 Bytes: 5
  %loadMem_40d514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d514 = call %struct.Memory* @routine_jmpq_.L_40d52e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d514, i64 26, i64 5)
  store %struct.Memory* %call_40d514, %struct.Memory** %MEMORY

  br label %block_.L_40d52e

  ; Code: .L_40d519:	 RIP: 40d519	 Bytes: 0
block_.L_40d519:

  ; Code: movslq -0x22c(%rbp), %rax	 RIP: 40d519	 Bytes: 7
  %loadMem_40d519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d519 = call %struct.Memory* @routine_movslq_MINUS0x22c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d519)
  store %struct.Memory* %call_40d519, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2320(,%rax,1), %ecx	 RIP: 40d520	 Bytes: 8
  %loadMem_40d520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d520 = call %struct.Memory* @routine_movzbl_0x4b2320___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d520)
  store %struct.Memory* %call_40d520, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x248(%rbp)	 RIP: 40d528	 Bytes: 6
  %loadMem_40d528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d528 = call %struct.Memory* @routine_movl__ecx__MINUS0x248__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d528)
  store %struct.Memory* %call_40d528, %struct.Memory** %MEMORY

  ; Code: .L_40d52e:	 RIP: 40d52e	 Bytes: 0
  br label %block_.L_40d52e
block_.L_40d52e:

  ; Code: movl -0x248(%rbp), %eax	 RIP: 40d52e	 Bytes: 6
  %loadMem_40d52e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d52e = call %struct.Memory* @routine_movl_MINUS0x248__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d52e)
  store %struct.Memory* %call_40d52e, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %ecx	 RIP: 40d534	 Bytes: 5
  %loadMem_40d534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d534 = call %struct.Memory* @routine_movl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d534)
  store %struct.Memory* %call_40d534, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 40d539	 Bytes: 5
  %loadMem_40d539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d539 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d539)
  store %struct.Memory* %call_40d539, %struct.Memory** %MEMORY

  ; Code: subl $0x0, %eax	 RIP: 40d53e	 Bytes: 3
  %loadMem_40d53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d53e = call %struct.Memory* @routine_subl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d53e)
  store %struct.Memory* %call_40d53e, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x24c(%rbp)	 RIP: 40d541	 Bytes: 6
  %loadMem_40d541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d541 = call %struct.Memory* @routine_movl__edx__MINUS0x24c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d541)
  store %struct.Memory* %call_40d541, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40d547	 Bytes: 1
  %loadMem_40d547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d547 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d547)
  store %struct.Memory* %call_40d547, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 40d548	 Bytes: 2
  %loadMem_40d548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d548 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d548)
  store %struct.Memory* %call_40d548, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1c0(%rbp)	 RIP: 40d54a	 Bytes: 6
  %loadMem_40d54a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d54a = call %struct.Memory* @routine_movl__edx__MINUS0x1c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d54a)
  store %struct.Memory* %call_40d54a, %struct.Memory** %MEMORY

  ; Code: movl -0x1bc(%rbp), %edx	 RIP: 40d550	 Bytes: 6
  %loadMem_40d550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d550 = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d550)
  store %struct.Memory* %call_40d550, %struct.Memory** %MEMORY

  ; Code: addl $0xf, %edx	 RIP: 40d556	 Bytes: 3
  %loadMem_40d556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d556 = call %struct.Memory* @routine_addl__0xf___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d556)
  store %struct.Memory* %call_40d556, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1c4(%rbp)	 RIP: 40d559	 Bytes: 6
  %loadMem_40d559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d559 = call %struct.Memory* @routine_movl__edx__MINUS0x1c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d559)
  store %struct.Memory* %call_40d559, %struct.Memory** %MEMORY

  ; Code: movl -0x1c4(%rbp), %edx	 RIP: 40d55f	 Bytes: 6
  %loadMem_40d55f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d55f = call %struct.Memory* @routine_movl_MINUS0x1c4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d55f)
  store %struct.Memory* %call_40d55f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x250(%rbp)	 RIP: 40d565	 Bytes: 6
  %loadMem_40d565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d565 = call %struct.Memory* @routine_movl__ecx__MINUS0x250__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d565)
  store %struct.Memory* %call_40d565, %struct.Memory** %MEMORY

  ; Code: movl %edx, %ecx	 RIP: 40d56b	 Bytes: 2
  %loadMem_40d56b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d56b = call %struct.Memory* @routine_movl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d56b)
  store %struct.Memory* %call_40d56b, %struct.Memory** %MEMORY

  ; Code: movl -0x24c(%rbp), %edx	 RIP: 40d56d	 Bytes: 6
  %loadMem_40d56d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d56d = call %struct.Memory* @routine_movl_MINUS0x24c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d56d)
  store %struct.Memory* %call_40d56d, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 40d573	 Bytes: 2
  %loadMem_40d573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d573 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d573)
  store %struct.Memory* %call_40d573, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 40d575	 Bytes: 2
  %loadMem_40d575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d575 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d575)
  store %struct.Memory* %call_40d575, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40d577	 Bytes: 1
  %loadMem_40d577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d577 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d577)
  store %struct.Memory* %call_40d577, %struct.Memory** %MEMORY

  ; Code: movl -0x250(%rbp), %esi	 RIP: 40d578	 Bytes: 6
  %loadMem_40d578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d578 = call %struct.Memory* @routine_movl_MINUS0x250__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d578)
  store %struct.Memory* %call_40d578, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40d57e	 Bytes: 2
  %loadMem_40d57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d57e = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d57e)
  store %struct.Memory* %call_40d57e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 40d580	 Bytes: 3
  %loadMem_40d580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d580 = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d580)
  store %struct.Memory* %call_40d580, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x230(%rbp)	 RIP: 40d583	 Bytes: 7
  %loadMem_40d583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d583 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d583)
  store %struct.Memory* %call_40d583, %struct.Memory** %MEMORY

  ; Code: jge .L_40d5a5	 RIP: 40d58a	 Bytes: 6
  %loadMem_40d58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d58a = call %struct.Memory* @routine_jge_.L_40d5a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d58a, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_40d58a, %struct.Memory** %MEMORY

  %loadBr_40d58a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d58a = icmp eq i8 %loadBr_40d58a, 1
  br i1 %cmpBr_40d58a, label %block_.L_40d5a5, label %block_40d590

block_40d590:
  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d590	 Bytes: 7
  %loadMem_40d590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d590 = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d590)
  store %struct.Memory* %call_40d590, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%rax), %ecx	 RIP: 40d597	 Bytes: 3
  %loadMem_40d597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d597 = call %struct.Memory* @routine_movl_0x10__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d597)
  store %struct.Memory* %call_40d597, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x254(%rbp)	 RIP: 40d59a	 Bytes: 6
  %loadMem_40d59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d59a = call %struct.Memory* @routine_movl__ecx__MINUS0x254__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d59a)
  store %struct.Memory* %call_40d59a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d5ba	 RIP: 40d5a0	 Bytes: 5
  %loadMem_40d5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5a0 = call %struct.Memory* @routine_jmpq_.L_40d5ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5a0, i64 26, i64 5)
  store %struct.Memory* %call_40d5a0, %struct.Memory** %MEMORY

  br label %block_.L_40d5ba

  ; Code: .L_40d5a5:	 RIP: 40d5a5	 Bytes: 0
block_.L_40d5a5:

  ; Code: movslq -0x230(%rbp), %rax	 RIP: 40d5a5	 Bytes: 7
  %loadMem_40d5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5a5 = call %struct.Memory* @routine_movslq_MINUS0x230__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5a5)
  store %struct.Memory* %call_40d5a5, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2320(,%rax,1), %ecx	 RIP: 40d5ac	 Bytes: 8
  %loadMem_40d5ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5ac = call %struct.Memory* @routine_movzbl_0x4b2320___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5ac)
  store %struct.Memory* %call_40d5ac, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x254(%rbp)	 RIP: 40d5b4	 Bytes: 6
  %loadMem_40d5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5b4 = call %struct.Memory* @routine_movl__ecx__MINUS0x254__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5b4)
  store %struct.Memory* %call_40d5b4, %struct.Memory** %MEMORY

  ; Code: .L_40d5ba:	 RIP: 40d5ba	 Bytes: 0
  br label %block_.L_40d5ba
block_.L_40d5ba:

  ; Code: movl -0x254(%rbp), %eax	 RIP: 40d5ba	 Bytes: 6
  %loadMem_40d5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5ba = call %struct.Memory* @routine_movl_MINUS0x254__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5ba)
  store %struct.Memory* %call_40d5ba, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %ecx	 RIP: 40d5c0	 Bytes: 5
  %loadMem_40d5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5c0 = call %struct.Memory* @routine_movl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5c0)
  store %struct.Memory* %call_40d5c0, %struct.Memory** %MEMORY

  ; Code: subl $0x0, %eax	 RIP: 40d5c5	 Bytes: 3
  %loadMem_40d5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5c5 = call %struct.Memory* @routine_subl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5c5)
  store %struct.Memory* %call_40d5c5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40d5c8	 Bytes: 1
  %loadMem_40d5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5c8 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5c8)
  store %struct.Memory* %call_40d5c8, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 40d5c9	 Bytes: 2
  %loadMem_40d5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5c9 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5c9)
  store %struct.Memory* %call_40d5c9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c8(%rbp)	 RIP: 40d5cb	 Bytes: 6
  %loadMem_40d5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5cb = call %struct.Memory* @routine_movl__eax__MINUS0x1c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5cb)
  store %struct.Memory* %call_40d5cb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x230(%rbp)	 RIP: 40d5d1	 Bytes: 7
  %loadMem_40d5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5d1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5d1)
  store %struct.Memory* %call_40d5d1, %struct.Memory** %MEMORY

  ; Code: jge .L_40d5f3	 RIP: 40d5d8	 Bytes: 6
  %loadMem_40d5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5d8 = call %struct.Memory* @routine_jge_.L_40d5f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5d8, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_40d5d8, %struct.Memory** %MEMORY

  %loadBr_40d5d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d5d8 = icmp eq i8 %loadBr_40d5d8, 1
  br i1 %cmpBr_40d5d8, label %block_.L_40d5f3, label %block_40d5de

block_40d5de:
  ; Code: movq -0x1b8(%rbp), %rax	 RIP: 40d5de	 Bytes: 7
  %loadMem_40d5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5de = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5de)
  store %struct.Memory* %call_40d5de, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%rax), %ecx	 RIP: 40d5e5	 Bytes: 3
  %loadMem_40d5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5e5 = call %struct.Memory* @routine_movl_0x10__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5e5)
  store %struct.Memory* %call_40d5e5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x258(%rbp)	 RIP: 40d5e8	 Bytes: 6
  %loadMem_40d5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5e8 = call %struct.Memory* @routine_movl__ecx__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5e8)
  store %struct.Memory* %call_40d5e8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d608	 RIP: 40d5ee	 Bytes: 5
  %loadMem_40d5ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5ee = call %struct.Memory* @routine_jmpq_.L_40d608(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5ee, i64 26, i64 5)
  store %struct.Memory* %call_40d5ee, %struct.Memory** %MEMORY

  br label %block_.L_40d608

  ; Code: .L_40d5f3:	 RIP: 40d5f3	 Bytes: 0
block_.L_40d5f3:

  ; Code: movslq -0x230(%rbp), %rax	 RIP: 40d5f3	 Bytes: 7
  %loadMem_40d5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5f3 = call %struct.Memory* @routine_movslq_MINUS0x230__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5f3)
  store %struct.Memory* %call_40d5f3, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2320(,%rax,1), %ecx	 RIP: 40d5fa	 Bytes: 8
  %loadMem_40d5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d5fa = call %struct.Memory* @routine_movzbl_0x4b2320___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d5fa)
  store %struct.Memory* %call_40d5fa, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x258(%rbp)	 RIP: 40d602	 Bytes: 6
  %loadMem_40d602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d602 = call %struct.Memory* @routine_movl__ecx__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d602)
  store %struct.Memory* %call_40d602, %struct.Memory** %MEMORY

  ; Code: .L_40d608:	 RIP: 40d608	 Bytes: 0
  br label %block_.L_40d608
block_.L_40d608:

  ; Code: movl -0x258(%rbp), %eax	 RIP: 40d608	 Bytes: 6
  %loadMem_40d608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d608 = call %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d608)
  store %struct.Memory* %call_40d608, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 40d60e	 Bytes: 5
  %loadMem_40d60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d60e = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d60e)
  store %struct.Memory* %call_40d60e, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 40d613	 Bytes: 5
  %loadMem_40d613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d613 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d613)
  store %struct.Memory* %call_40d613, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %esi	 RIP: 40d618	 Bytes: 5
  %loadMem_40d618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d618 = call %struct.Memory* @routine_movl__0x6___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d618)
  store %struct.Memory* %call_40d618, %struct.Memory** %MEMORY

  ; Code: subl $0x0, %eax	 RIP: 40d61d	 Bytes: 3
  %loadMem_40d61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d61d = call %struct.Memory* @routine_subl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d61d)
  store %struct.Memory* %call_40d61d, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x25c(%rbp)	 RIP: 40d620	 Bytes: 6
  %loadMem_40d620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d620 = call %struct.Memory* @routine_movl__edx__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d620)
  store %struct.Memory* %call_40d620, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40d626	 Bytes: 1
  %loadMem_40d626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d626 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d626)
  store %struct.Memory* %call_40d626, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40d627	 Bytes: 2
  %loadMem_40d627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d627 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d627)
  store %struct.Memory* %call_40d627, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1cc(%rbp)	 RIP: 40d629	 Bytes: 6
  %loadMem_40d629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d629 = call %struct.Memory* @routine_movl__edx__MINUS0x1cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d629)
  store %struct.Memory* %call_40d629, %struct.Memory** %MEMORY

  ; Code: movl -0x1c8(%rbp), %edx	 RIP: 40d62f	 Bytes: 6
  %loadMem_40d62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d62f = call %struct.Memory* @routine_movl_MINUS0x1c8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d62f)
  store %struct.Memory* %call_40d62f, %struct.Memory** %MEMORY

  ; Code: addl $0xf, %edx	 RIP: 40d635	 Bytes: 3
  %loadMem_40d635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d635 = call %struct.Memory* @routine_addl__0xf___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d635)
  store %struct.Memory* %call_40d635, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1d0(%rbp)	 RIP: 40d638	 Bytes: 6
  %loadMem_40d638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d638 = call %struct.Memory* @routine_movl__edx__MINUS0x1d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d638)
  store %struct.Memory* %call_40d638, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %edx	 RIP: 40d63e	 Bytes: 6
  %loadMem_40d63e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d63e = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d63e)
  store %struct.Memory* %call_40d63e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x260(%rbp)	 RIP: 40d644	 Bytes: 6
  %loadMem_40d644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d644 = call %struct.Memory* @routine_movl__ecx__MINUS0x260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d644)
  store %struct.Memory* %call_40d644, %struct.Memory** %MEMORY

  ; Code: movl %edx, %ecx	 RIP: 40d64a	 Bytes: 2
  %loadMem_40d64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d64a = call %struct.Memory* @routine_movl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d64a)
  store %struct.Memory* %call_40d64a, %struct.Memory** %MEMORY

  ; Code: movl -0x25c(%rbp), %edx	 RIP: 40d64c	 Bytes: 6
  %loadMem_40d64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d64c = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d64c)
  store %struct.Memory* %call_40d64c, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 40d652	 Bytes: 2
  %loadMem_40d652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d652 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d652)
  store %struct.Memory* %call_40d652, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 40d654	 Bytes: 2
  %loadMem_40d654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d654 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d654)
  store %struct.Memory* %call_40d654, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40d656	 Bytes: 1
  %loadMem_40d656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d656 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d656)
  store %struct.Memory* %call_40d656, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %esi	 RIP: 40d657	 Bytes: 6
  %loadMem_40d657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d657 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d657)
  store %struct.Memory* %call_40d657, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40d65d	 Bytes: 2
  %loadMem_40d65d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d65d = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d65d)
  store %struct.Memory* %call_40d65d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x194(%rbp)	 RIP: 40d65f	 Bytes: 6
  %loadMem_40d65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d65f = call %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d65f)
  store %struct.Memory* %call_40d65f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40d665	 Bytes: 7
  %loadMem_40d665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d665 = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d665)
  store %struct.Memory* %call_40d665, %struct.Memory** %MEMORY

  ; Code: .L_40d66c:	 RIP: 40d66c	 Bytes: 0
  br label %block_.L_40d66c
block_.L_40d66c:

  ; Code: cmpl $0x8, -0x10(%rbp)	 RIP: 40d66c	 Bytes: 4
  %loadMem_40d66c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d66c = call %struct.Memory* @routine_cmpl__0x8__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d66c)
  store %struct.Memory* %call_40d66c, %struct.Memory** %MEMORY

  ; Code: jge .L_40d729	 RIP: 40d670	 Bytes: 6
  %loadMem_40d670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d670 = call %struct.Memory* @routine_jge_.L_40d729(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d670, i8* %BRANCH_TAKEN, i64 185, i64 6, i64 6)
  store %struct.Memory* %call_40d670, %struct.Memory** %MEMORY

  %loadBr_40d670 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d670 = icmp eq i8 %loadBr_40d670, 1
  br i1 %cmpBr_40d670, label %block_.L_40d729, label %block_40d676

block_40d676:
  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40d676	 Bytes: 7
  %loadMem_40d676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d676 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d676)
  store %struct.Memory* %call_40d676, %struct.Memory** %MEMORY

  ; Code: .L_40d67d:	 RIP: 40d67d	 Bytes: 0
  br label %block_.L_40d67d
block_.L_40d67d:

  ; Code: cmpl $0x8, -0xc(%rbp)	 RIP: 40d67d	 Bytes: 4
  %loadMem_40d67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d67d = call %struct.Memory* @routine_cmpl__0x8__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d67d)
  store %struct.Memory* %call_40d67d, %struct.Memory** %MEMORY

  ; Code: jge .L_40d716	 RIP: 40d681	 Bytes: 6
  %loadMem_40d681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d681 = call %struct.Memory* @routine_jge_.L_40d716(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d681, i8* %BRANCH_TAKEN, i64 149, i64 6, i64 6)
  store %struct.Memory* %call_40d681, %struct.Memory** %MEMORY

  %loadBr_40d681 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d681 = icmp eq i8 %loadBr_40d681, 1
  br i1 %cmpBr_40d681, label %block_.L_40d716, label %block_40d687

block_40d687:
  ; Code: leaq -0x190(%rbp), %rax	 RIP: 40d687	 Bytes: 7
  %loadMem_40d687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d687 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d687)
  store %struct.Memory* %call_40d687, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d68e	 Bytes: 8
  %loadMem_40d68e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d68e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d68e)
  store %struct.Memory* %call_40d68e, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rcx	 RIP: 40d696	 Bytes: 7
  %loadMem_40d696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d696 = call %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d696)
  store %struct.Memory* %call_40d696, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40d69d	 Bytes: 4
  %loadMem_40d69d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d69d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d69d)
  store %struct.Memory* %call_40d69d, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40d6a1	 Bytes: 4
  %loadMem_40d6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6a1 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6a1)
  store %struct.Memory* %call_40d6a1, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d6a5	 Bytes: 3
  %loadMem_40d6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6a5 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6a5)
  store %struct.Memory* %call_40d6a5, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40d6a8	 Bytes: 4
  %loadMem_40d6a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6a8 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6a8)
  store %struct.Memory* %call_40d6a8, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 40d6ac	 Bytes: 4
  %loadMem_40d6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6ac = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6ac)
  store %struct.Memory* %call_40d6ac, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d6b0	 Bytes: 8
  %loadMem_40d6b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6b0 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6b0)
  store %struct.Memory* %call_40d6b0, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d6b8	 Bytes: 7
  %loadMem_40d6b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6b8 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6b8)
  store %struct.Memory* %call_40d6b8, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40d6bf	 Bytes: 4
  %loadMem_40d6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6bf = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6bf)
  store %struct.Memory* %call_40d6bf, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d6c3	 Bytes: 4
  %loadMem_40d6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6c3 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6c3)
  store %struct.Memory* %call_40d6c3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d6c7	 Bytes: 3
  %loadMem_40d6c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6c7 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6c7)
  store %struct.Memory* %call_40d6c7, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40d6ca	 Bytes: 4
  %loadMem_40d6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6ca = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6ca)
  store %struct.Memory* %call_40d6ca, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %esi	 RIP: 40d6ce	 Bytes: 3
  %loadMem_40d6ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6ce = call %struct.Memory* @routine_addl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6ce)
  store %struct.Memory* %call_40d6ce, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rcx,%rdx,4)	 RIP: 40d6d1	 Bytes: 3
  %loadMem_40d6d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6d1 = call %struct.Memory* @routine_movl__esi____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6d1)
  store %struct.Memory* %call_40d6d1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d6d4	 Bytes: 8
  %loadMem_40d6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6d4 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6d4)
  store %struct.Memory* %call_40d6d4, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rcx	 RIP: 40d6dc	 Bytes: 7
  %loadMem_40d6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6dc = call %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6dc)
  store %struct.Memory* %call_40d6dc, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40d6e3	 Bytes: 4
  %loadMem_40d6e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6e3 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6e3)
  store %struct.Memory* %call_40d6e3, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40d6e7	 Bytes: 4
  %loadMem_40d6e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6e7 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6e7)
  store %struct.Memory* %call_40d6e7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d6eb	 Bytes: 3
  %loadMem_40d6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6eb = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6eb)
  store %struct.Memory* %call_40d6eb, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40d6ee	 Bytes: 4
  %loadMem_40d6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6ee = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6ee)
  store %struct.Memory* %call_40d6ee, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 40d6f2	 Bytes: 4
  %loadMem_40d6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6f2 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6f2)
  store %struct.Memory* %call_40d6f2, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 40d6f6	 Bytes: 4
  %loadMem_40d6f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6f6 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6f6)
  store %struct.Memory* %call_40d6f6, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 40d6fa	 Bytes: 4
  %loadMem_40d6fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6fa = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6fa)
  store %struct.Memory* %call_40d6fa, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40d6fe	 Bytes: 3
  %loadMem_40d6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d6fe = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d6fe)
  store %struct.Memory* %call_40d6fe, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 40d701	 Bytes: 4
  %loadMem_40d701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d701 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d701)
  store %struct.Memory* %call_40d701, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 40d705	 Bytes: 3
  %loadMem_40d705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d705 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d705)
  store %struct.Memory* %call_40d705, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40d708	 Bytes: 3
  %loadMem_40d708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d708 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d708)
  store %struct.Memory* %call_40d708, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40d70b	 Bytes: 3
  %loadMem_40d70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d70b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d70b)
  store %struct.Memory* %call_40d70b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40d70e	 Bytes: 3
  %loadMem_40d70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d70e = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d70e)
  store %struct.Memory* %call_40d70e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d67d	 RIP: 40d711	 Bytes: 5
  %loadMem_40d711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d711 = call %struct.Memory* @routine_jmpq_.L_40d67d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d711, i64 -148, i64 5)
  store %struct.Memory* %call_40d711, %struct.Memory** %MEMORY

  br label %block_.L_40d67d

  ; Code: .L_40d716:	 RIP: 40d716	 Bytes: 0
block_.L_40d716:

  ; Code: jmpq .L_40d71b	 RIP: 40d716	 Bytes: 5
  %loadMem_40d716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d716 = call %struct.Memory* @routine_jmpq_.L_40d71b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d716, i64 5, i64 5)
  store %struct.Memory* %call_40d716, %struct.Memory** %MEMORY

  br label %block_.L_40d71b

  ; Code: .L_40d71b:	 RIP: 40d71b	 Bytes: 0
block_.L_40d71b:

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40d71b	 Bytes: 3
  %loadMem_40d71b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d71b = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d71b)
  store %struct.Memory* %call_40d71b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40d71e	 Bytes: 3
  %loadMem_40d71e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d71e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d71e)
  store %struct.Memory* %call_40d71e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40d721	 Bytes: 3
  %loadMem_40d721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d721 = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d721)
  store %struct.Memory* %call_40d721, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d66c	 RIP: 40d724	 Bytes: 5
  %loadMem_40d724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d724 = call %struct.Memory* @routine_jmpq_.L_40d66c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d724, i64 -184, i64 5)
  store %struct.Memory* %call_40d724, %struct.Memory** %MEMORY

  br label %block_.L_40d66c

  ; Code: .L_40d729:	 RIP: 40d729	 Bytes: 0
block_.L_40d729:

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 40d729	 Bytes: 7
  %loadMem_40d729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d729 = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d729)
  store %struct.Memory* %call_40d729, %struct.Memory** %MEMORY

  ; Code: .L_40d730:	 RIP: 40d730	 Bytes: 0
  br label %block_.L_40d730
block_.L_40d730:

  ; Code: cmpl $0x4, -0x20(%rbp)	 RIP: 40d730	 Bytes: 4
  %loadMem_40d730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d730 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d730)
  store %struct.Memory* %call_40d730, %struct.Memory** %MEMORY

  ; Code: jg .L_40dad0	 RIP: 40d734	 Bytes: 6
  %loadMem_40d734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d734 = call %struct.Memory* @routine_jg_.L_40dad0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d734, i8* %BRANCH_TAKEN, i64 924, i64 6, i64 6)
  store %struct.Memory* %call_40d734, %struct.Memory** %MEMORY

  %loadBr_40d734 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d734 = icmp eq i8 %loadBr_40d734, 1
  br i1 %cmpBr_40d734, label %block_.L_40dad0, label %block_40d73a

block_40d73a:
  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 40d73a	 Bytes: 7
  %loadMem_40d73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d73a = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d73a)
  store %struct.Memory* %call_40d73a, %struct.Memory** %MEMORY

  ; Code: .L_40d741:	 RIP: 40d741	 Bytes: 0
  br label %block_.L_40d741
block_.L_40d741:

  ; Code: cmpl $0x4, -0x24(%rbp)	 RIP: 40d741	 Bytes: 4
  %loadMem_40d741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d741 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d741)
  store %struct.Memory* %call_40d741, %struct.Memory** %MEMORY

  ; Code: jg .L_40dabd	 RIP: 40d745	 Bytes: 6
  %loadMem_40d745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d745 = call %struct.Memory* @routine_jg_.L_40dabd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d745, i8* %BRANCH_TAKEN, i64 888, i64 6, i64 6)
  store %struct.Memory* %call_40d745, %struct.Memory** %MEMORY

  %loadBr_40d745 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d745 = icmp eq i8 %loadBr_40d745, 1
  br i1 %cmpBr_40d745, label %block_.L_40dabd, label %block_40d74b

block_40d74b:
  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40d74b	 Bytes: 7
  %loadMem_40d74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d74b = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d74b)
  store %struct.Memory* %call_40d74b, %struct.Memory** %MEMORY

  ; Code: .L_40d752:	 RIP: 40d752	 Bytes: 0
  br label %block_.L_40d752
block_.L_40d752:

  ; Code: cmpl $0x4, -0x10(%rbp)	 RIP: 40d752	 Bytes: 4
  %loadMem_40d752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d752 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d752)
  store %struct.Memory* %call_40d752, %struct.Memory** %MEMORY

  ; Code: jge .L_40d8f8	 RIP: 40d756	 Bytes: 6
  %loadMem_40d756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d756 = call %struct.Memory* @routine_jge_.L_40d8f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d756, i8* %BRANCH_TAKEN, i64 418, i64 6, i64 6)
  store %struct.Memory* %call_40d756, %struct.Memory** %MEMORY

  %loadBr_40d756 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d756 = icmp eq i8 %loadBr_40d756, 1
  br i1 %cmpBr_40d756, label %block_.L_40d8f8, label %block_40d75c

block_40d75c:
  ; Code: movl -0x20(%rbp), %eax	 RIP: 40d75c	 Bytes: 3
  %loadMem_40d75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d75c = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d75c)
  store %struct.Memory* %call_40d75c, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40d75f	 Bytes: 3
  %loadMem_40d75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d75f = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d75f)
  store %struct.Memory* %call_40d75f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 40d762	 Bytes: 3
  %loadMem_40d762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d762 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d762)
  store %struct.Memory* %call_40d762, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40d765	 Bytes: 7
  %loadMem_40d765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d765 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d765)
  store %struct.Memory* %call_40d765, %struct.Memory** %MEMORY

  ; Code: .L_40d76c:	 RIP: 40d76c	 Bytes: 0
  br label %block_.L_40d76c
block_.L_40d76c:

  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 40d76c	 Bytes: 4
  %loadMem_40d76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d76c = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d76c)
  store %struct.Memory* %call_40d76c, %struct.Memory** %MEMORY

  ; Code: jge .L_40d837	 RIP: 40d770	 Bytes: 6
  %loadMem_40d770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d770 = call %struct.Memory* @routine_jge_.L_40d837(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d770, i8* %BRANCH_TAKEN, i64 199, i64 6, i64 6)
  store %struct.Memory* %call_40d770, %struct.Memory** %MEMORY

  %loadBr_40d770 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d770 = icmp eq i8 %loadBr_40d770, 1
  br i1 %cmpBr_40d770, label %block_.L_40d837, label %block_40d776

block_40d776:
  ; Code: movl $0x3, %eax	 RIP: 40d776	 Bytes: 5
  %loadMem_40d776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d776 = call %struct.Memory* @routine_movl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d776)
  store %struct.Memory* %call_40d776, %struct.Memory** %MEMORY

  ; Code: subl -0xc(%rbp), %eax	 RIP: 40d77b	 Bytes: 3
  %loadMem_40d77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d77b = call %struct.Memory* @routine_subl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d77b)
  store %struct.Memory* %call_40d77b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 40d77e	 Bytes: 3
  %loadMem_40d77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d77e = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d77e)
  store %struct.Memory* %call_40d77e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d781	 Bytes: 8
  %loadMem_40d781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d781 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d781)
  store %struct.Memory* %call_40d781, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d789	 Bytes: 7
  %loadMem_40d789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d789 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d789)
  store %struct.Memory* %call_40d789, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40d790	 Bytes: 3
  %loadMem_40d790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d790 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d790)
  store %struct.Memory* %call_40d790, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %eax	 RIP: 40d793	 Bytes: 3
  %loadMem_40d793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d793 = call %struct.Memory* @routine_addl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d793)
  store %struct.Memory* %call_40d793, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 40d796	 Bytes: 3
  %loadMem_40d796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d796 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d796)
  store %struct.Memory* %call_40d796, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d799	 Bytes: 4
  %loadMem_40d799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d799 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d799)
  store %struct.Memory* %call_40d799, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d79d	 Bytes: 3
  %loadMem_40d79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d79d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d79d)
  store %struct.Memory* %call_40d79d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d7a0	 Bytes: 4
  %loadMem_40d7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7a0 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7a0)
  store %struct.Memory* %call_40d7a0, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %eax	 RIP: 40d7a4	 Bytes: 3
  %loadMem_40d7a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7a4 = call %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7a4)
  store %struct.Memory* %call_40d7a4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d7a7	 Bytes: 8
  %loadMem_40d7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7a7 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7a7)
  store %struct.Memory* %call_40d7a7, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d7af	 Bytes: 7
  %loadMem_40d7af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7af = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7af)
  store %struct.Memory* %call_40d7af, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 40d7b6	 Bytes: 3
  %loadMem_40d7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7b6 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7b6)
  store %struct.Memory* %call_40d7b6, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %esi	 RIP: 40d7b9	 Bytes: 3
  %loadMem_40d7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7b9 = call %struct.Memory* @routine_addl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7b9)
  store %struct.Memory* %call_40d7b9, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40d7bc	 Bytes: 3
  %loadMem_40d7bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7bc = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7bc)
  store %struct.Memory* %call_40d7bc, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d7bf	 Bytes: 4
  %loadMem_40d7bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7bf = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7bf)
  store %struct.Memory* %call_40d7bf, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d7c3	 Bytes: 3
  %loadMem_40d7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7c3 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7c3)
  store %struct.Memory* %call_40d7c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d7c6	 Bytes: 4
  %loadMem_40d7c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7c6 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7c6)
  store %struct.Memory* %call_40d7c6, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %eax	 RIP: 40d7ca	 Bytes: 3
  %loadMem_40d7ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7ca = call %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7ca)
  store %struct.Memory* %call_40d7ca, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 40d7cd	 Bytes: 4
  %loadMem_40d7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7cd = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7cd)
  store %struct.Memory* %call_40d7cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp,%rcx,4)	 RIP: 40d7d1	 Bytes: 4
  %loadMem_40d7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7d1 = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7d1)
  store %struct.Memory* %call_40d7d1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d7d5	 Bytes: 8
  %loadMem_40d7d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7d5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7d5)
  store %struct.Memory* %call_40d7d5, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d7dd	 Bytes: 7
  %loadMem_40d7dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7dd = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7dd)
  store %struct.Memory* %call_40d7dd, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40d7e4	 Bytes: 3
  %loadMem_40d7e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7e4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7e4)
  store %struct.Memory* %call_40d7e4, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %eax	 RIP: 40d7e7	 Bytes: 3
  %loadMem_40d7e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7e7 = call %struct.Memory* @routine_addl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7e7)
  store %struct.Memory* %call_40d7e7, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 40d7ea	 Bytes: 3
  %loadMem_40d7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7ea = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7ea)
  store %struct.Memory* %call_40d7ea, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d7ed	 Bytes: 4
  %loadMem_40d7ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7ed = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7ed)
  store %struct.Memory* %call_40d7ed, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d7f1	 Bytes: 3
  %loadMem_40d7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7f1 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7f1)
  store %struct.Memory* %call_40d7f1, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d7f4	 Bytes: 4
  %loadMem_40d7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7f4 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7f4)
  store %struct.Memory* %call_40d7f4, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %eax	 RIP: 40d7f8	 Bytes: 3
  %loadMem_40d7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7f8 = call %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7f8)
  store %struct.Memory* %call_40d7f8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d7fb	 Bytes: 8
  %loadMem_40d7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d7fb = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d7fb)
  store %struct.Memory* %call_40d7fb, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d803	 Bytes: 7
  %loadMem_40d803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d803 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d803)
  store %struct.Memory* %call_40d803, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 40d80a	 Bytes: 3
  %loadMem_40d80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d80a = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d80a)
  store %struct.Memory* %call_40d80a, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %esi	 RIP: 40d80d	 Bytes: 3
  %loadMem_40d80d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d80d = call %struct.Memory* @routine_addl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d80d)
  store %struct.Memory* %call_40d80d, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40d810	 Bytes: 3
  %loadMem_40d810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d810 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d810)
  store %struct.Memory* %call_40d810, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d813	 Bytes: 4
  %loadMem_40d813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d813 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d813)
  store %struct.Memory* %call_40d813, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d817	 Bytes: 3
  %loadMem_40d817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d817 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d817)
  store %struct.Memory* %call_40d817, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d81a	 Bytes: 4
  %loadMem_40d81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d81a = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d81a)
  store %struct.Memory* %call_40d81a, %struct.Memory** %MEMORY

  ; Code: subl (%rcx,%rdx,4), %eax	 RIP: 40d81e	 Bytes: 3
  %loadMem_40d81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d81e = call %struct.Memory* @routine_subl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d81e)
  store %struct.Memory* %call_40d81e, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 40d821	 Bytes: 4
  %loadMem_40d821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d821 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d821)
  store %struct.Memory* %call_40d821, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp,%rcx,4)	 RIP: 40d825	 Bytes: 4
  %loadMem_40d825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d825 = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d825)
  store %struct.Memory* %call_40d825, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40d829	 Bytes: 3
  %loadMem_40d829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d829 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d829)
  store %struct.Memory* %call_40d829, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40d82c	 Bytes: 3
  %loadMem_40d82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d82c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d82c)
  store %struct.Memory* %call_40d82c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40d82f	 Bytes: 3
  %loadMem_40d82f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d82f = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d82f)
  store %struct.Memory* %call_40d82f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d76c	 RIP: 40d832	 Bytes: 5
  %loadMem_40d832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d832 = call %struct.Memory* @routine_jmpq_.L_40d76c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d832, i64 -198, i64 5)
  store %struct.Memory* %call_40d832, %struct.Memory** %MEMORY

  br label %block_.L_40d76c

  ; Code: .L_40d837:	 RIP: 40d837	 Bytes: 0
block_.L_40d837:

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40d837	 Bytes: 3
  %loadMem_40d837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d837 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d837)
  store %struct.Memory* %call_40d837, %struct.Memory** %MEMORY

  ; Code: addl -0x6c(%rbp), %eax	 RIP: 40d83a	 Bytes: 3
  %loadMem_40d83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d83a = call %struct.Memory* @routine_addl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d83a)
  store %struct.Memory* %call_40d83a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d83d	 Bytes: 8
  %loadMem_40d83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d83d = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d83d)
  store %struct.Memory* %call_40d83d, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d845	 Bytes: 7
  %loadMem_40d845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d845 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d845)
  store %struct.Memory* %call_40d845, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 40d84c	 Bytes: 4
  %loadMem_40d84c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d84c = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d84c)
  store %struct.Memory* %call_40d84c, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d850	 Bytes: 4
  %loadMem_40d850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d850 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d850)
  store %struct.Memory* %call_40d850, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d854	 Bytes: 3
  %loadMem_40d854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d854 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d854)
  store %struct.Memory* %call_40d854, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d857	 Bytes: 4
  %loadMem_40d857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d857 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d857)
  store %struct.Memory* %call_40d857, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40d85b	 Bytes: 3
  %loadMem_40d85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d85b = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d85b)
  store %struct.Memory* %call_40d85b, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40d85e	 Bytes: 3
  %loadMem_40d85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d85e = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d85e)
  store %struct.Memory* %call_40d85e, %struct.Memory** %MEMORY

  ; Code: subl -0x6c(%rbp), %eax	 RIP: 40d861	 Bytes: 3
  %loadMem_40d861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d861 = call %struct.Memory* @routine_subl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d861)
  store %struct.Memory* %call_40d861, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d864	 Bytes: 8
  %loadMem_40d864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d864 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d864)
  store %struct.Memory* %call_40d864, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d86c	 Bytes: 7
  %loadMem_40d86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d86c = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d86c)
  store %struct.Memory* %call_40d86c, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40d873	 Bytes: 3
  %loadMem_40d873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d873 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d873)
  store %struct.Memory* %call_40d873, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 40d876	 Bytes: 3
  %loadMem_40d876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d876 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d876)
  store %struct.Memory* %call_40d876, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40d879	 Bytes: 3
  %loadMem_40d879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d879 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d879)
  store %struct.Memory* %call_40d879, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d87c	 Bytes: 4
  %loadMem_40d87c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d87c = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d87c)
  store %struct.Memory* %call_40d87c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d880	 Bytes: 3
  %loadMem_40d880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d880 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d880)
  store %struct.Memory* %call_40d880, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d883	 Bytes: 4
  %loadMem_40d883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d883 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d883)
  store %struct.Memory* %call_40d883, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40d887	 Bytes: 3
  %loadMem_40d887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d887 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d887)
  store %struct.Memory* %call_40d887, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 40d88a	 Bytes: 3
  %loadMem_40d88a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d88a = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d88a)
  store %struct.Memory* %call_40d88a, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 40d88d	 Bytes: 3
  %loadMem_40d88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d88d = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d88d)
  store %struct.Memory* %call_40d88d, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 40d890	 Bytes: 3
  %loadMem_40d890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d890 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d890)
  store %struct.Memory* %call_40d890, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d893	 Bytes: 8
  %loadMem_40d893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d893 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d893)
  store %struct.Memory* %call_40d893, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d89b	 Bytes: 7
  %loadMem_40d89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d89b = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d89b)
  store %struct.Memory* %call_40d89b, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40d8a2	 Bytes: 3
  %loadMem_40d8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8a2 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8a2)
  store %struct.Memory* %call_40d8a2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 40d8a5	 Bytes: 3
  %loadMem_40d8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8a5 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8a5)
  store %struct.Memory* %call_40d8a5, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40d8a8	 Bytes: 3
  %loadMem_40d8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8a8 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8a8)
  store %struct.Memory* %call_40d8a8, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d8ab	 Bytes: 4
  %loadMem_40d8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8ab = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8ab)
  store %struct.Memory* %call_40d8ab, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d8af	 Bytes: 3
  %loadMem_40d8af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8af = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8af)
  store %struct.Memory* %call_40d8af, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d8b2	 Bytes: 4
  %loadMem_40d8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8b2 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8b2)
  store %struct.Memory* %call_40d8b2, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40d8b6	 Bytes: 3
  %loadMem_40d8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8b6 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8b6)
  store %struct.Memory* %call_40d8b6, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 40d8b9	 Bytes: 3
  %loadMem_40d8b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8b9 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8b9)
  store %struct.Memory* %call_40d8b9, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %esi	 RIP: 40d8bc	 Bytes: 3
  %loadMem_40d8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8bc = call %struct.Memory* @routine_movl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8bc)
  store %struct.Memory* %call_40d8bc, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %esi	 RIP: 40d8bf	 Bytes: 3
  %loadMem_40d8bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8bf = call %struct.Memory* @routine_shll__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8bf)
  store %struct.Memory* %call_40d8bf, %struct.Memory** %MEMORY

  ; Code: subl %esi, %eax	 RIP: 40d8c2	 Bytes: 2
  %loadMem_40d8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8c2 = call %struct.Memory* @routine_subl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8c2)
  store %struct.Memory* %call_40d8c2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d8c4	 Bytes: 8
  %loadMem_40d8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8c4 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8c4)
  store %struct.Memory* %call_40d8c4, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d8cc	 Bytes: 7
  %loadMem_40d8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8cc = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8cc)
  store %struct.Memory* %call_40d8cc, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40d8d3	 Bytes: 3
  %loadMem_40d8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8d3 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8d3)
  store %struct.Memory* %call_40d8d3, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %esi	 RIP: 40d8d6	 Bytes: 3
  %loadMem_40d8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8d6 = call %struct.Memory* @routine_addl__0x3___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8d6)
  store %struct.Memory* %call_40d8d6, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40d8d9	 Bytes: 3
  %loadMem_40d8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8d9 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8d9)
  store %struct.Memory* %call_40d8d9, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d8dc	 Bytes: 4
  %loadMem_40d8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8dc = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8dc)
  store %struct.Memory* %call_40d8dc, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d8e0	 Bytes: 3
  %loadMem_40d8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8e0 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8e0)
  store %struct.Memory* %call_40d8e0, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40d8e3	 Bytes: 4
  %loadMem_40d8e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8e3 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8e3)
  store %struct.Memory* %call_40d8e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40d8e7	 Bytes: 3
  %loadMem_40d8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8e7 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8e7)
  store %struct.Memory* %call_40d8e7, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40d8ea	 Bytes: 3
  %loadMem_40d8ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8ea = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8ea)
  store %struct.Memory* %call_40d8ea, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40d8ed	 Bytes: 3
  %loadMem_40d8ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8ed = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8ed)
  store %struct.Memory* %call_40d8ed, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40d8f0	 Bytes: 3
  %loadMem_40d8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8f0 = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8f0)
  store %struct.Memory* %call_40d8f0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d752	 RIP: 40d8f3	 Bytes: 5
  %loadMem_40d8f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8f3 = call %struct.Memory* @routine_jmpq_.L_40d752(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8f3, i64 -417, i64 5)
  store %struct.Memory* %call_40d8f3, %struct.Memory** %MEMORY

  br label %block_.L_40d752

  ; Code: .L_40d8f8:	 RIP: 40d8f8	 Bytes: 0
block_.L_40d8f8:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40d8f8	 Bytes: 7
  %loadMem_40d8f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8f8 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8f8)
  store %struct.Memory* %call_40d8f8, %struct.Memory** %MEMORY

  ; Code: .L_40d8ff:	 RIP: 40d8ff	 Bytes: 0
  br label %block_.L_40d8ff
block_.L_40d8ff:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 40d8ff	 Bytes: 4
  %loadMem_40d8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d8ff = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d8ff)
  store %struct.Memory* %call_40d8ff, %struct.Memory** %MEMORY

  ; Code: jge .L_40daaa	 RIP: 40d903	 Bytes: 6
  %loadMem_40d903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d903 = call %struct.Memory* @routine_jge_.L_40daaa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d903, i8* %BRANCH_TAKEN, i64 423, i64 6, i64 6)
  store %struct.Memory* %call_40d903, %struct.Memory** %MEMORY

  %loadBr_40d903 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d903 = icmp eq i8 %loadBr_40d903, 1
  br i1 %cmpBr_40d903, label %block_.L_40daaa, label %block_40d909

block_40d909:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 40d909	 Bytes: 3
  %loadMem_40d909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d909 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d909)
  store %struct.Memory* %call_40d909, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %eax	 RIP: 40d90c	 Bytes: 3
  %loadMem_40d90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d90c = call %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d90c)
  store %struct.Memory* %call_40d90c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 40d90f	 Bytes: 3
  %loadMem_40d90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d90f = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d90f)
  store %struct.Memory* %call_40d90f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40d912	 Bytes: 7
  %loadMem_40d912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d912 = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d912)
  store %struct.Memory* %call_40d912, %struct.Memory** %MEMORY

  ; Code: .L_40d919:	 RIP: 40d919	 Bytes: 0
  br label %block_.L_40d919
block_.L_40d919:

  ; Code: cmpl $0x2, -0x10(%rbp)	 RIP: 40d919	 Bytes: 4
  %loadMem_40d919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d919 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d919)
  store %struct.Memory* %call_40d919, %struct.Memory** %MEMORY

  ; Code: jge .L_40d9e4	 RIP: 40d91d	 Bytes: 6
  %loadMem_40d91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d91d = call %struct.Memory* @routine_jge_.L_40d9e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d91d, i8* %BRANCH_TAKEN, i64 199, i64 6, i64 6)
  store %struct.Memory* %call_40d91d, %struct.Memory** %MEMORY

  %loadBr_40d91d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d91d = icmp eq i8 %loadBr_40d91d, 1
  br i1 %cmpBr_40d91d, label %block_.L_40d9e4, label %block_40d923

block_40d923:
  ; Code: movl $0x3, %eax	 RIP: 40d923	 Bytes: 5
  %loadMem_40d923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d923 = call %struct.Memory* @routine_movl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d923)
  store %struct.Memory* %call_40d923, %struct.Memory** %MEMORY

  ; Code: subl -0x10(%rbp), %eax	 RIP: 40d928	 Bytes: 3
  %loadMem_40d928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d928 = call %struct.Memory* @routine_subl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d928)
  store %struct.Memory* %call_40d928, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 40d92b	 Bytes: 3
  %loadMem_40d92b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d92b = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d92b)
  store %struct.Memory* %call_40d92b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d92e	 Bytes: 8
  %loadMem_40d92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d92e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d92e)
  store %struct.Memory* %call_40d92e, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d936	 Bytes: 7
  %loadMem_40d936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d936 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d936)
  store %struct.Memory* %call_40d936, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40d93d	 Bytes: 4
  %loadMem_40d93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d93d = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d93d)
  store %struct.Memory* %call_40d93d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d941	 Bytes: 4
  %loadMem_40d941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d941 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d941)
  store %struct.Memory* %call_40d941, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d945	 Bytes: 3
  %loadMem_40d945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d945 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d945)
  store %struct.Memory* %call_40d945, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40d948	 Bytes: 3
  %loadMem_40d948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d948 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d948)
  store %struct.Memory* %call_40d948, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40d94b	 Bytes: 3
  %loadMem_40d94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d94b = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d94b)
  store %struct.Memory* %call_40d94b, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 40d94e	 Bytes: 3
  %loadMem_40d94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d94e = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d94e)
  store %struct.Memory* %call_40d94e, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %eax	 RIP: 40d951	 Bytes: 3
  %loadMem_40d951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d951 = call %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d951)
  store %struct.Memory* %call_40d951, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d954	 Bytes: 8
  %loadMem_40d954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d954 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d954)
  store %struct.Memory* %call_40d954, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d95c	 Bytes: 7
  %loadMem_40d95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d95c = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d95c)
  store %struct.Memory* %call_40d95c, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40d963	 Bytes: 4
  %loadMem_40d963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d963 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d963)
  store %struct.Memory* %call_40d963, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d967	 Bytes: 4
  %loadMem_40d967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d967 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d967)
  store %struct.Memory* %call_40d967, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d96b	 Bytes: 3
  %loadMem_40d96b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d96b = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d96b)
  store %struct.Memory* %call_40d96b, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40d96e	 Bytes: 3
  %loadMem_40d96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d96e = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d96e)
  store %struct.Memory* %call_40d96e, %struct.Memory** %MEMORY

  ; Code: addl -0x18(%rbp), %esi	 RIP: 40d971	 Bytes: 3
  %loadMem_40d971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d971 = call %struct.Memory* @routine_addl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d971)
  store %struct.Memory* %call_40d971, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40d974	 Bytes: 3
  %loadMem_40d974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d974 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d974)
  store %struct.Memory* %call_40d974, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %eax	 RIP: 40d977	 Bytes: 3
  %loadMem_40d977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d977 = call %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d977)
  store %struct.Memory* %call_40d977, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 40d97a	 Bytes: 4
  %loadMem_40d97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d97a = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d97a)
  store %struct.Memory* %call_40d97a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp,%rcx,4)	 RIP: 40d97e	 Bytes: 4
  %loadMem_40d97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d97e = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d97e)
  store %struct.Memory* %call_40d97e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d982	 Bytes: 8
  %loadMem_40d982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d982 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d982)
  store %struct.Memory* %call_40d982, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d98a	 Bytes: 7
  %loadMem_40d98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d98a = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d98a)
  store %struct.Memory* %call_40d98a, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40d991	 Bytes: 4
  %loadMem_40d991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d991 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d991)
  store %struct.Memory* %call_40d991, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d995	 Bytes: 4
  %loadMem_40d995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d995 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d995)
  store %struct.Memory* %call_40d995, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d999	 Bytes: 3
  %loadMem_40d999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d999 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d999)
  store %struct.Memory* %call_40d999, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40d99c	 Bytes: 3
  %loadMem_40d99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d99c = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d99c)
  store %struct.Memory* %call_40d99c, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40d99f	 Bytes: 3
  %loadMem_40d99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d99f = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d99f)
  store %struct.Memory* %call_40d99f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 40d9a2	 Bytes: 3
  %loadMem_40d9a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9a2 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9a2)
  store %struct.Memory* %call_40d9a2, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %eax	 RIP: 40d9a5	 Bytes: 3
  %loadMem_40d9a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9a5 = call %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9a5)
  store %struct.Memory* %call_40d9a5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d9a8	 Bytes: 8
  %loadMem_40d9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9a8 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9a8)
  store %struct.Memory* %call_40d9a8, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d9b0	 Bytes: 7
  %loadMem_40d9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9b0 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9b0)
  store %struct.Memory* %call_40d9b0, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40d9b7	 Bytes: 4
  %loadMem_40d9b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9b7 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9b7)
  store %struct.Memory* %call_40d9b7, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d9bb	 Bytes: 4
  %loadMem_40d9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9bb = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9bb)
  store %struct.Memory* %call_40d9bb, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40d9bf	 Bytes: 3
  %loadMem_40d9bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9bf = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9bf)
  store %struct.Memory* %call_40d9bf, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40d9c2	 Bytes: 3
  %loadMem_40d9c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9c2 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9c2)
  store %struct.Memory* %call_40d9c2, %struct.Memory** %MEMORY

  ; Code: addl -0x18(%rbp), %esi	 RIP: 40d9c5	 Bytes: 3
  %loadMem_40d9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9c5 = call %struct.Memory* @routine_addl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9c5)
  store %struct.Memory* %call_40d9c5, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40d9c8	 Bytes: 3
  %loadMem_40d9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9c8 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9c8)
  store %struct.Memory* %call_40d9c8, %struct.Memory** %MEMORY

  ; Code: subl (%rcx,%rdx,4), %eax	 RIP: 40d9cb	 Bytes: 3
  %loadMem_40d9cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9cb = call %struct.Memory* @routine_subl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9cb)
  store %struct.Memory* %call_40d9cb, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 40d9ce	 Bytes: 4
  %loadMem_40d9ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9ce = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9ce)
  store %struct.Memory* %call_40d9ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp,%rcx,4)	 RIP: 40d9d2	 Bytes: 4
  %loadMem_40d9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9d2 = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9d2)
  store %struct.Memory* %call_40d9d2, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40d9d6	 Bytes: 3
  %loadMem_40d9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9d6 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9d6)
  store %struct.Memory* %call_40d9d6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40d9d9	 Bytes: 3
  %loadMem_40d9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9d9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9d9)
  store %struct.Memory* %call_40d9d9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40d9dc	 Bytes: 3
  %loadMem_40d9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9dc = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9dc)
  store %struct.Memory* %call_40d9dc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d919	 RIP: 40d9df	 Bytes: 5
  %loadMem_40d9df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9df = call %struct.Memory* @routine_jmpq_.L_40d919(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9df, i64 -198, i64 5)
  store %struct.Memory* %call_40d9df, %struct.Memory** %MEMORY

  br label %block_.L_40d919

  ; Code: .L_40d9e4:	 RIP: 40d9e4	 Bytes: 0
block_.L_40d9e4:

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40d9e4	 Bytes: 3
  %loadMem_40d9e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9e4 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9e4)
  store %struct.Memory* %call_40d9e4, %struct.Memory** %MEMORY

  ; Code: addl -0x6c(%rbp), %eax	 RIP: 40d9e7	 Bytes: 3
  %loadMem_40d9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9e7 = call %struct.Memory* @routine_addl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9e7)
  store %struct.Memory* %call_40d9e7, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40d9ea	 Bytes: 8
  %loadMem_40d9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9ea = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9ea)
  store %struct.Memory* %call_40d9ea, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40d9f2	 Bytes: 7
  %loadMem_40d9f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9f2 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9f2)
  store %struct.Memory* %call_40d9f2, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40d9f9	 Bytes: 4
  %loadMem_40d9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9f9 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9f9)
  store %struct.Memory* %call_40d9f9, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40d9fd	 Bytes: 4
  %loadMem_40d9fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40d9fd = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40d9fd)
  store %struct.Memory* %call_40d9fd, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40da01	 Bytes: 3
  %loadMem_40da01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da01 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da01)
  store %struct.Memory* %call_40da01, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40da04	 Bytes: 3
  %loadMem_40da04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da04 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da04)
  store %struct.Memory* %call_40da04, %struct.Memory** %MEMORY

  ; Code: addl $0x0, %esi	 RIP: 40da07	 Bytes: 3
  %loadMem_40da07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da07 = call %struct.Memory* @routine_addl__0x0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da07)
  store %struct.Memory* %call_40da07, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40da0a	 Bytes: 3
  %loadMem_40da0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da0a = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da0a)
  store %struct.Memory* %call_40da0a, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40da0d	 Bytes: 3
  %loadMem_40da0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da0d = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da0d)
  store %struct.Memory* %call_40da0d, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40da10	 Bytes: 3
  %loadMem_40da10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da10 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da10)
  store %struct.Memory* %call_40da10, %struct.Memory** %MEMORY

  ; Code: subl -0x6c(%rbp), %eax	 RIP: 40da13	 Bytes: 3
  %loadMem_40da13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da13 = call %struct.Memory* @routine_subl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da13)
  store %struct.Memory* %call_40da13, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40da16	 Bytes: 8
  %loadMem_40da16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da16 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da16)
  store %struct.Memory* %call_40da16, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40da1e	 Bytes: 7
  %loadMem_40da1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da1e = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da1e)
  store %struct.Memory* %call_40da1e, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40da25	 Bytes: 4
  %loadMem_40da25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da25 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da25)
  store %struct.Memory* %call_40da25, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40da29	 Bytes: 4
  %loadMem_40da29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da29 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da29)
  store %struct.Memory* %call_40da29, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40da2d	 Bytes: 3
  %loadMem_40da2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da2d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da2d)
  store %struct.Memory* %call_40da2d, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40da30	 Bytes: 3
  %loadMem_40da30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da30 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da30)
  store %struct.Memory* %call_40da30, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 40da33	 Bytes: 3
  %loadMem_40da33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da33 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da33)
  store %struct.Memory* %call_40da33, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40da36	 Bytes: 3
  %loadMem_40da36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da36 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da36)
  store %struct.Memory* %call_40da36, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40da39	 Bytes: 3
  %loadMem_40da39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da39 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da39)
  store %struct.Memory* %call_40da39, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 40da3c	 Bytes: 3
  %loadMem_40da3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da3c = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da3c)
  store %struct.Memory* %call_40da3c, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 40da3f	 Bytes: 3
  %loadMem_40da3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da3f = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da3f)
  store %struct.Memory* %call_40da3f, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 40da42	 Bytes: 3
  %loadMem_40da42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da42 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da42)
  store %struct.Memory* %call_40da42, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40da45	 Bytes: 8
  %loadMem_40da45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da45 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da45)
  store %struct.Memory* %call_40da45, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40da4d	 Bytes: 7
  %loadMem_40da4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da4d = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da4d)
  store %struct.Memory* %call_40da4d, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40da54	 Bytes: 4
  %loadMem_40da54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da54 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da54)
  store %struct.Memory* %call_40da54, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40da58	 Bytes: 4
  %loadMem_40da58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da58 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da58)
  store %struct.Memory* %call_40da58, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40da5c	 Bytes: 3
  %loadMem_40da5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da5c = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da5c)
  store %struct.Memory* %call_40da5c, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40da5f	 Bytes: 3
  %loadMem_40da5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da5f = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da5f)
  store %struct.Memory* %call_40da5f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 40da62	 Bytes: 3
  %loadMem_40da62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da62 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da62)
  store %struct.Memory* %call_40da62, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40da65	 Bytes: 3
  %loadMem_40da65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da65 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da65)
  store %struct.Memory* %call_40da65, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40da68	 Bytes: 3
  %loadMem_40da68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da68 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da68)
  store %struct.Memory* %call_40da68, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %eax	 RIP: 40da6b	 Bytes: 3
  %loadMem_40da6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da6b = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da6b)
  store %struct.Memory* %call_40da6b, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %esi	 RIP: 40da6e	 Bytes: 3
  %loadMem_40da6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da6e = call %struct.Memory* @routine_movl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da6e)
  store %struct.Memory* %call_40da6e, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %esi	 RIP: 40da71	 Bytes: 3
  %loadMem_40da71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da71 = call %struct.Memory* @routine_shll__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da71)
  store %struct.Memory* %call_40da71, %struct.Memory** %MEMORY

  ; Code: subl %esi, %eax	 RIP: 40da74	 Bytes: 2
  %loadMem_40da74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da74 = call %struct.Memory* @routine_subl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da74)
  store %struct.Memory* %call_40da74, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40da76	 Bytes: 8
  %loadMem_40da76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da76 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da76)
  store %struct.Memory* %call_40da76, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40da7e	 Bytes: 7
  %loadMem_40da7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da7e = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da7e)
  store %struct.Memory* %call_40da7e, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40da85	 Bytes: 4
  %loadMem_40da85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da85 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da85)
  store %struct.Memory* %call_40da85, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40da89	 Bytes: 4
  %loadMem_40da89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da89 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da89)
  store %struct.Memory* %call_40da89, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40da8d	 Bytes: 3
  %loadMem_40da8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da8d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da8d)
  store %struct.Memory* %call_40da8d, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40da90	 Bytes: 3
  %loadMem_40da90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da90 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da90)
  store %struct.Memory* %call_40da90, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %esi	 RIP: 40da93	 Bytes: 3
  %loadMem_40da93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da93 = call %struct.Memory* @routine_addl__0x3___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da93)
  store %struct.Memory* %call_40da93, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40da96	 Bytes: 3
  %loadMem_40da96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da96 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da96)
  store %struct.Memory* %call_40da96, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40da99	 Bytes: 3
  %loadMem_40da99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da99 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da99)
  store %struct.Memory* %call_40da99, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40da9c	 Bytes: 3
  %loadMem_40da9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da9c = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da9c)
  store %struct.Memory* %call_40da9c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40da9f	 Bytes: 3
  %loadMem_40da9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40da9f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40da9f)
  store %struct.Memory* %call_40da9f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40daa2	 Bytes: 3
  %loadMem_40daa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40daa2 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40daa2)
  store %struct.Memory* %call_40daa2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d8ff	 RIP: 40daa5	 Bytes: 5
  %loadMem_40daa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40daa5 = call %struct.Memory* @routine_jmpq_.L_40d8ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40daa5, i64 -422, i64 5)
  store %struct.Memory* %call_40daa5, %struct.Memory** %MEMORY

  br label %block_.L_40d8ff

  ; Code: .L_40daaa:	 RIP: 40daaa	 Bytes: 0
block_.L_40daaa:

  ; Code: jmpq .L_40daaf	 RIP: 40daaa	 Bytes: 5
  %loadMem_40daaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40daaa = call %struct.Memory* @routine_jmpq_.L_40daaf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40daaa, i64 5, i64 5)
  store %struct.Memory* %call_40daaa, %struct.Memory** %MEMORY

  br label %block_.L_40daaf

  ; Code: .L_40daaf:	 RIP: 40daaf	 Bytes: 0
block_.L_40daaf:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40daaf	 Bytes: 3
  %loadMem_40daaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40daaf = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40daaf)
  store %struct.Memory* %call_40daaf, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40dab2	 Bytes: 3
  %loadMem_40dab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dab2 = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dab2)
  store %struct.Memory* %call_40dab2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 40dab5	 Bytes: 3
  %loadMem_40dab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dab5 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dab5)
  store %struct.Memory* %call_40dab5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d741	 RIP: 40dab8	 Bytes: 5
  %loadMem_40dab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dab8 = call %struct.Memory* @routine_jmpq_.L_40d741(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dab8, i64 -887, i64 5)
  store %struct.Memory* %call_40dab8, %struct.Memory** %MEMORY

  br label %block_.L_40d741

  ; Code: .L_40dabd:	 RIP: 40dabd	 Bytes: 0
block_.L_40dabd:

  ; Code: jmpq .L_40dac2	 RIP: 40dabd	 Bytes: 5
  %loadMem_40dabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dabd = call %struct.Memory* @routine_jmpq_.L_40dac2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dabd, i64 5, i64 5)
  store %struct.Memory* %call_40dabd, %struct.Memory** %MEMORY

  br label %block_.L_40dac2

  ; Code: .L_40dac2:	 RIP: 40dac2	 Bytes: 0
block_.L_40dac2:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40dac2	 Bytes: 3
  %loadMem_40dac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dac2 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dac2)
  store %struct.Memory* %call_40dac2, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40dac5	 Bytes: 3
  %loadMem_40dac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dac5 = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dac5)
  store %struct.Memory* %call_40dac5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 40dac8	 Bytes: 3
  %loadMem_40dac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dac8 = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dac8)
  store %struct.Memory* %call_40dac8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40d730	 RIP: 40dacb	 Bytes: 5
  %loadMem_40dacb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dacb = call %struct.Memory* @routine_jmpq_.L_40d730(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dacb, i64 -923, i64 5)
  store %struct.Memory* %call_40dacb, %struct.Memory** %MEMORY

  br label %block_.L_40d730

  ; Code: .L_40dad0:	 RIP: 40dad0	 Bytes: 0
block_.L_40dad0:

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 40dad0	 Bytes: 7
  %loadMem_40dad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dad0 = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dad0)
  store %struct.Memory* %call_40dad0, %struct.Memory** %MEMORY

  ; Code: .L_40dad7:	 RIP: 40dad7	 Bytes: 0
  br label %block_.L_40dad7
block_.L_40dad7:

  ; Code: cmpl $0x4, -0x20(%rbp)	 RIP: 40dad7	 Bytes: 4
  %loadMem_40dad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dad7 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dad7)
  store %struct.Memory* %call_40dad7, %struct.Memory** %MEMORY

  ; Code: jg .L_40ddc7	 RIP: 40dadb	 Bytes: 6
  %loadMem_40dadb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dadb = call %struct.Memory* @routine_jg_.L_40ddc7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dadb, i8* %BRANCH_TAKEN, i64 748, i64 6, i64 6)
  store %struct.Memory* %call_40dadb, %struct.Memory** %MEMORY

  %loadBr_40dadb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40dadb = icmp eq i8 %loadBr_40dadb, 1
  br i1 %cmpBr_40dadb, label %block_.L_40ddc7, label %block_40dae1

block_40dae1:
  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 40dae1	 Bytes: 7
  %loadMem_40dae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dae1 = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dae1)
  store %struct.Memory* %call_40dae1, %struct.Memory** %MEMORY

  ; Code: .L_40dae8:	 RIP: 40dae8	 Bytes: 0
  br label %block_.L_40dae8
block_.L_40dae8:

  ; Code: cmpl $0x4, -0x24(%rbp)	 RIP: 40dae8	 Bytes: 4
  %loadMem_40dae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dae8 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dae8)
  store %struct.Memory* %call_40dae8, %struct.Memory** %MEMORY

  ; Code: jg .L_40ddb4	 RIP: 40daec	 Bytes: 6
  %loadMem_40daec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40daec = call %struct.Memory* @routine_jg_.L_40ddb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40daec, i8* %BRANCH_TAKEN, i64 712, i64 6, i64 6)
  store %struct.Memory* %call_40daec, %struct.Memory** %MEMORY

  %loadBr_40daec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40daec = icmp eq i8 %loadBr_40daec, 1
  br i1 %cmpBr_40daec, label %block_.L_40ddb4, label %block_40daf2

block_40daf2:
  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40daf2	 Bytes: 7
  %loadMem_40daf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40daf2 = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40daf2)
  store %struct.Memory* %call_40daf2, %struct.Memory** %MEMORY

  ; Code: .L_40daf9:	 RIP: 40daf9	 Bytes: 0
  br label %block_.L_40daf9
block_.L_40daf9:

  ; Code: cmpl $0x4, -0x10(%rbp)	 RIP: 40daf9	 Bytes: 4
  %loadMem_40daf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40daf9 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40daf9)
  store %struct.Memory* %call_40daf9, %struct.Memory** %MEMORY

  ; Code: jge .L_40dc47	 RIP: 40dafd	 Bytes: 6
  %loadMem_40dafd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dafd = call %struct.Memory* @routine_jge_.L_40dc47(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dafd, i8* %BRANCH_TAKEN, i64 330, i64 6, i64 6)
  store %struct.Memory* %call_40dafd, %struct.Memory** %MEMORY

  %loadBr_40dafd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40dafd = icmp eq i8 %loadBr_40dafd, 1
  br i1 %cmpBr_40dafd, label %block_.L_40dc47, label %block_40db03

block_40db03:
  ; Code: movl -0x20(%rbp), %eax	 RIP: 40db03	 Bytes: 3
  %loadMem_40db03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db03 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db03)
  store %struct.Memory* %call_40db03, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40db06	 Bytes: 3
  %loadMem_40db06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db06 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db06)
  store %struct.Memory* %call_40db06, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 40db09	 Bytes: 3
  %loadMem_40db09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db09 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db09)
  store %struct.Memory* %call_40db09, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40db0c	 Bytes: 7
  %loadMem_40db0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db0c = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db0c)
  store %struct.Memory* %call_40db0c, %struct.Memory** %MEMORY

  ; Code: .L_40db13:	 RIP: 40db13	 Bytes: 0
  br label %block_.L_40db13
block_.L_40db13:

  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 40db13	 Bytes: 4
  %loadMem_40db13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db13 = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db13)
  store %struct.Memory* %call_40db13, %struct.Memory** %MEMORY

  ; Code: jge .L_40dbb2	 RIP: 40db17	 Bytes: 6
  %loadMem_40db17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db17 = call %struct.Memory* @routine_jge_.L_40dbb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db17, i8* %BRANCH_TAKEN, i64 155, i64 6, i64 6)
  store %struct.Memory* %call_40db17, %struct.Memory** %MEMORY

  %loadBr_40db17 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40db17 = icmp eq i8 %loadBr_40db17, 1
  br i1 %cmpBr_40db17, label %block_.L_40dbb2, label %block_40db1d

block_40db1d:
  ; Code: leaq -0x190(%rbp), %rax	 RIP: 40db1d	 Bytes: 7
  %loadMem_40db1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db1d = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db1d)
  store %struct.Memory* %call_40db1d, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 40db24	 Bytes: 5
  %loadMem_40db24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db24 = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db24)
  store %struct.Memory* %call_40db24, %struct.Memory** %MEMORY

  ; Code: subl -0xc(%rbp), %ecx	 RIP: 40db29	 Bytes: 3
  %loadMem_40db29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db29 = call %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db29)
  store %struct.Memory* %call_40db29, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x14(%rbp)	 RIP: 40db2c	 Bytes: 3
  %loadMem_40db2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db2c = call %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db2c)
  store %struct.Memory* %call_40db2c, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %ecx	 RIP: 40db2f	 Bytes: 3
  %loadMem_40db2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db2f = call %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db2f)
  store %struct.Memory* %call_40db2f, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %ecx	 RIP: 40db32	 Bytes: 3
  %loadMem_40db32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db32 = call %struct.Memory* @routine_addl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db32)
  store %struct.Memory* %call_40db32, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40db35	 Bytes: 3
  %loadMem_40db35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db35 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db35)
  store %struct.Memory* %call_40db35, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40db38	 Bytes: 4
  %loadMem_40db38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db38 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db38)
  store %struct.Memory* %call_40db38, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40db3c	 Bytes: 3
  %loadMem_40db3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db3c = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db3c)
  store %struct.Memory* %call_40db3c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40db3f	 Bytes: 3
  %loadMem_40db3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db3f = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db3f)
  store %struct.Memory* %call_40db3f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40db42	 Bytes: 4
  %loadMem_40db42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db42 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db42)
  store %struct.Memory* %call_40db42, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 40db46	 Bytes: 3
  %loadMem_40db46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db46 = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db46)
  store %struct.Memory* %call_40db46, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %edi	 RIP: 40db49	 Bytes: 3
  %loadMem_40db49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db49 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db49)
  store %struct.Memory* %call_40db49, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %edi	 RIP: 40db4c	 Bytes: 3
  %loadMem_40db4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db4c = call %struct.Memory* @routine_addl_MINUS0x24__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db4c)
  store %struct.Memory* %call_40db4c, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40db4f	 Bytes: 3
  %loadMem_40db4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db4f = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db4f)
  store %struct.Memory* %call_40db4f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40db52	 Bytes: 4
  %loadMem_40db52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db52 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db52)
  store %struct.Memory* %call_40db52, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40db56	 Bytes: 3
  %loadMem_40db56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db56 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db56)
  store %struct.Memory* %call_40db56, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40db59	 Bytes: 3
  %loadMem_40db59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db59 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db59)
  store %struct.Memory* %call_40db59, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40db5c	 Bytes: 4
  %loadMem_40db5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db5c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db5c)
  store %struct.Memory* %call_40db5c, %struct.Memory** %MEMORY

  ; Code: addl (%rsi,%rdx,4), %ecx	 RIP: 40db60	 Bytes: 3
  %loadMem_40db60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db60 = call %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db60)
  store %struct.Memory* %call_40db60, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40db63	 Bytes: 4
  %loadMem_40db63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db63 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db63)
  store %struct.Memory* %call_40db63, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x70(%rbp,%rdx,4)	 RIP: 40db67	 Bytes: 4
  %loadMem_40db67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db67 = call %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db67)
  store %struct.Memory* %call_40db67, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %ecx	 RIP: 40db6b	 Bytes: 3
  %loadMem_40db6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db6b = call %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db6b)
  store %struct.Memory* %call_40db6b, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %ecx	 RIP: 40db6e	 Bytes: 3
  %loadMem_40db6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db6e = call %struct.Memory* @routine_addl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db6e)
  store %struct.Memory* %call_40db6e, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40db71	 Bytes: 3
  %loadMem_40db71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db71 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db71)
  store %struct.Memory* %call_40db71, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40db74	 Bytes: 4
  %loadMem_40db74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db74 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db74)
  store %struct.Memory* %call_40db74, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40db78	 Bytes: 3
  %loadMem_40db78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db78 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db78)
  store %struct.Memory* %call_40db78, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40db7b	 Bytes: 3
  %loadMem_40db7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db7b = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db7b)
  store %struct.Memory* %call_40db7b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40db7e	 Bytes: 4
  %loadMem_40db7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db7e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db7e)
  store %struct.Memory* %call_40db7e, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 40db82	 Bytes: 3
  %loadMem_40db82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db82 = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db82)
  store %struct.Memory* %call_40db82, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %edi	 RIP: 40db85	 Bytes: 3
  %loadMem_40db85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db85 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db85)
  store %struct.Memory* %call_40db85, %struct.Memory** %MEMORY

  ; Code: addl -0x24(%rbp), %edi	 RIP: 40db88	 Bytes: 3
  %loadMem_40db88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db88 = call %struct.Memory* @routine_addl_MINUS0x24__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db88)
  store %struct.Memory* %call_40db88, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40db8b	 Bytes: 3
  %loadMem_40db8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db8b = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db8b)
  store %struct.Memory* %call_40db8b, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40db8e	 Bytes: 4
  %loadMem_40db8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db8e = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db8e)
  store %struct.Memory* %call_40db8e, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40db92	 Bytes: 3
  %loadMem_40db92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db92 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db92)
  store %struct.Memory* %call_40db92, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40db95	 Bytes: 4
  %loadMem_40db95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db95 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db95)
  store %struct.Memory* %call_40db95, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rdx,4), %ecx	 RIP: 40db99	 Bytes: 3
  %loadMem_40db99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db99 = call %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db99)
  store %struct.Memory* %call_40db99, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rax	 RIP: 40db9c	 Bytes: 4
  %loadMem_40db9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40db9c = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40db9c)
  store %struct.Memory* %call_40db9c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x70(%rbp,%rax,4)	 RIP: 40dba0	 Bytes: 4
  %loadMem_40dba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dba0 = call %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dba0)
  store %struct.Memory* %call_40dba0, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40dba4	 Bytes: 3
  %loadMem_40dba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dba4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dba4)
  store %struct.Memory* %call_40dba4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40dba7	 Bytes: 3
  %loadMem_40dba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dba7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dba7)
  store %struct.Memory* %call_40dba7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40dbaa	 Bytes: 3
  %loadMem_40dbaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbaa = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbaa)
  store %struct.Memory* %call_40dbaa, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40db13	 RIP: 40dbad	 Bytes: 5
  %loadMem_40dbad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbad = call %struct.Memory* @routine_jmpq_.L_40db13(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbad, i64 -154, i64 5)
  store %struct.Memory* %call_40dbad, %struct.Memory** %MEMORY

  br label %block_.L_40db13

  ; Code: .L_40dbb2:	 RIP: 40dbb2	 Bytes: 0
block_.L_40dbb2:

  ; Code: leaq -0x190(%rbp), %rax	 RIP: 40dbb2	 Bytes: 7
  %loadMem_40dbb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbb2 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbb2)
  store %struct.Memory* %call_40dbb2, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 40dbb9	 Bytes: 3
  %loadMem_40dbb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbb9 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbb9)
  store %struct.Memory* %call_40dbb9, %struct.Memory** %MEMORY

  ; Code: addl -0x6c(%rbp), %ecx	 RIP: 40dbbc	 Bytes: 3
  %loadMem_40dbbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbbc = call %struct.Memory* @routine_addl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbbc)
  store %struct.Memory* %call_40dbbc, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 40dbbf	 Bytes: 4
  %loadMem_40dbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbbf = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbbf)
  store %struct.Memory* %call_40dbbf, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dbc3	 Bytes: 4
  %loadMem_40dbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbc3 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbc3)
  store %struct.Memory* %call_40dbc3, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dbc7	 Bytes: 3
  %loadMem_40dbc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbc7 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbc7)
  store %struct.Memory* %call_40dbc7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dbca	 Bytes: 3
  %loadMem_40dbca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbca = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbca)
  store %struct.Memory* %call_40dbca, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40dbcd	 Bytes: 4
  %loadMem_40dbcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbcd = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbcd)
  store %struct.Memory* %call_40dbcd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 40dbd1	 Bytes: 3
  %loadMem_40dbd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbd1 = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbd1)
  store %struct.Memory* %call_40dbd1, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 40dbd4	 Bytes: 3
  %loadMem_40dbd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbd4 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbd4)
  store %struct.Memory* %call_40dbd4, %struct.Memory** %MEMORY

  ; Code: subl -0x6c(%rbp), %ecx	 RIP: 40dbd7	 Bytes: 3
  %loadMem_40dbd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbd7 = call %struct.Memory* @routine_subl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbd7)
  store %struct.Memory* %call_40dbd7, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edi	 RIP: 40dbda	 Bytes: 3
  %loadMem_40dbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbda = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbda)
  store %struct.Memory* %call_40dbda, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edi	 RIP: 40dbdd	 Bytes: 3
  %loadMem_40dbdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbdd = call %struct.Memory* @routine_addl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbdd)
  store %struct.Memory* %call_40dbdd, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dbe0	 Bytes: 3
  %loadMem_40dbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbe0 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbe0)
  store %struct.Memory* %call_40dbe0, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dbe3	 Bytes: 4
  %loadMem_40dbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbe3 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbe3)
  store %struct.Memory* %call_40dbe3, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dbe7	 Bytes: 3
  %loadMem_40dbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbe7 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbe7)
  store %struct.Memory* %call_40dbe7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dbea	 Bytes: 3
  %loadMem_40dbea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbea = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbea)
  store %struct.Memory* %call_40dbea, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40dbed	 Bytes: 4
  %loadMem_40dbed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbed = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbed)
  store %struct.Memory* %call_40dbed, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 40dbf1	 Bytes: 3
  %loadMem_40dbf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbf1 = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbf1)
  store %struct.Memory* %call_40dbf1, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 40dbf4	 Bytes: 3
  %loadMem_40dbf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbf4 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbf4)
  store %struct.Memory* %call_40dbf4, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 40dbf7	 Bytes: 3
  %loadMem_40dbf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbf7 = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbf7)
  store %struct.Memory* %call_40dbf7, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %ecx	 RIP: 40dbfa	 Bytes: 3
  %loadMem_40dbfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbfa = call %struct.Memory* @routine_addl_MINUS0x68__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbfa)
  store %struct.Memory* %call_40dbfa, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edi	 RIP: 40dbfd	 Bytes: 3
  %loadMem_40dbfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dbfd = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dbfd)
  store %struct.Memory* %call_40dbfd, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edi	 RIP: 40dc00	 Bytes: 3
  %loadMem_40dc00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc00 = call %struct.Memory* @routine_addl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc00)
  store %struct.Memory* %call_40dc00, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dc03	 Bytes: 3
  %loadMem_40dc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc03 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc03)
  store %struct.Memory* %call_40dc03, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dc06	 Bytes: 4
  %loadMem_40dc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc06 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc06)
  store %struct.Memory* %call_40dc06, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dc0a	 Bytes: 3
  %loadMem_40dc0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc0a = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc0a)
  store %struct.Memory* %call_40dc0a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dc0d	 Bytes: 3
  %loadMem_40dc0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc0d = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc0d)
  store %struct.Memory* %call_40dc0d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40dc10	 Bytes: 4
  %loadMem_40dc10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc10 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc10)
  store %struct.Memory* %call_40dc10, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 40dc14	 Bytes: 3
  %loadMem_40dc14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc14 = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc14)
  store %struct.Memory* %call_40dc14, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 40dc17	 Bytes: 3
  %loadMem_40dc17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc17 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc17)
  store %struct.Memory* %call_40dc17, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edi	 RIP: 40dc1a	 Bytes: 3
  %loadMem_40dc1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc1a = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc1a)
  store %struct.Memory* %call_40dc1a, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edi	 RIP: 40dc1d	 Bytes: 3
  %loadMem_40dc1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc1d = call %struct.Memory* @routine_shll__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc1d)
  store %struct.Memory* %call_40dc1d, %struct.Memory** %MEMORY

  ; Code: subl %edi, %ecx	 RIP: 40dc20	 Bytes: 2
  %loadMem_40dc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc20 = call %struct.Memory* @routine_subl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc20)
  store %struct.Memory* %call_40dc20, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edi	 RIP: 40dc22	 Bytes: 3
  %loadMem_40dc22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc22 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc22)
  store %struct.Memory* %call_40dc22, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %edi	 RIP: 40dc25	 Bytes: 3
  %loadMem_40dc25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc25 = call %struct.Memory* @routine_addl__0x3___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc25)
  store %struct.Memory* %call_40dc25, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dc28	 Bytes: 3
  %loadMem_40dc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc28 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc28)
  store %struct.Memory* %call_40dc28, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dc2b	 Bytes: 4
  %loadMem_40dc2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc2b = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc2b)
  store %struct.Memory* %call_40dc2b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40dc2f	 Bytes: 3
  %loadMem_40dc2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc2f = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc2f)
  store %struct.Memory* %call_40dc2f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 40dc32	 Bytes: 4
  %loadMem_40dc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc32 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc32)
  store %struct.Memory* %call_40dc32, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 40dc36	 Bytes: 3
  %loadMem_40dc36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc36 = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc36)
  store %struct.Memory* %call_40dc36, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40dc39	 Bytes: 3
  %loadMem_40dc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc39 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc39)
  store %struct.Memory* %call_40dc39, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40dc3c	 Bytes: 3
  %loadMem_40dc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc3c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc3c)
  store %struct.Memory* %call_40dc3c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40dc3f	 Bytes: 3
  %loadMem_40dc3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc3f = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc3f)
  store %struct.Memory* %call_40dc3f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40daf9	 RIP: 40dc42	 Bytes: 5
  %loadMem_40dc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc42 = call %struct.Memory* @routine_jmpq_.L_40daf9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc42, i64 -329, i64 5)
  store %struct.Memory* %call_40dc42, %struct.Memory** %MEMORY

  br label %block_.L_40daf9

  ; Code: .L_40dc47:	 RIP: 40dc47	 Bytes: 0
block_.L_40dc47:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40dc47	 Bytes: 7
  %loadMem_40dc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc47 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc47)
  store %struct.Memory* %call_40dc47, %struct.Memory** %MEMORY

  ; Code: .L_40dc4e:	 RIP: 40dc4e	 Bytes: 0
  br label %block_.L_40dc4e
block_.L_40dc4e:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 40dc4e	 Bytes: 4
  %loadMem_40dc4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc4e = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc4e)
  store %struct.Memory* %call_40dc4e, %struct.Memory** %MEMORY

  ; Code: jge .L_40dda1	 RIP: 40dc52	 Bytes: 6
  %loadMem_40dc52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc52 = call %struct.Memory* @routine_jge_.L_40dda1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc52, i8* %BRANCH_TAKEN, i64 335, i64 6, i64 6)
  store %struct.Memory* %call_40dc52, %struct.Memory** %MEMORY

  %loadBr_40dc52 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40dc52 = icmp eq i8 %loadBr_40dc52, 1
  br i1 %cmpBr_40dc52, label %block_.L_40dda1, label %block_40dc58

block_40dc58:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 40dc58	 Bytes: 3
  %loadMem_40dc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc58 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc58)
  store %struct.Memory* %call_40dc58, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %eax	 RIP: 40dc5b	 Bytes: 3
  %loadMem_40dc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc5b = call %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc5b)
  store %struct.Memory* %call_40dc5b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 40dc5e	 Bytes: 3
  %loadMem_40dc5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc5e = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc5e)
  store %struct.Memory* %call_40dc5e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40dc61	 Bytes: 7
  %loadMem_40dc61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc61 = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc61)
  store %struct.Memory* %call_40dc61, %struct.Memory** %MEMORY

  ; Code: .L_40dc68:	 RIP: 40dc68	 Bytes: 0
  br label %block_.L_40dc68
block_.L_40dc68:

  ; Code: cmpl $0x2, -0x10(%rbp)	 RIP: 40dc68	 Bytes: 4
  %loadMem_40dc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc68 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc68)
  store %struct.Memory* %call_40dc68, %struct.Memory** %MEMORY

  ; Code: jge .L_40dd07	 RIP: 40dc6c	 Bytes: 6
  %loadMem_40dc6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc6c = call %struct.Memory* @routine_jge_.L_40dd07(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc6c, i8* %BRANCH_TAKEN, i64 155, i64 6, i64 6)
  store %struct.Memory* %call_40dc6c, %struct.Memory** %MEMORY

  %loadBr_40dc6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40dc6c = icmp eq i8 %loadBr_40dc6c, 1
  br i1 %cmpBr_40dc6c, label %block_.L_40dd07, label %block_40dc72

block_40dc72:
  ; Code: leaq -0x190(%rbp), %rax	 RIP: 40dc72	 Bytes: 7
  %loadMem_40dc72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc72 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc72)
  store %struct.Memory* %call_40dc72, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 40dc79	 Bytes: 5
  %loadMem_40dc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc79 = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc79)
  store %struct.Memory* %call_40dc79, %struct.Memory** %MEMORY

  ; Code: subl -0x10(%rbp), %ecx	 RIP: 40dc7e	 Bytes: 3
  %loadMem_40dc7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc7e = call %struct.Memory* @routine_subl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc7e)
  store %struct.Memory* %call_40dc7e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 40dc81	 Bytes: 3
  %loadMem_40dc81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc81 = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc81)
  store %struct.Memory* %call_40dc81, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dc84	 Bytes: 4
  %loadMem_40dc84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc84 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc84)
  store %struct.Memory* %call_40dc84, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dc88	 Bytes: 4
  %loadMem_40dc88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc88 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc88)
  store %struct.Memory* %call_40dc88, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dc8c	 Bytes: 3
  %loadMem_40dc8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc8c = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc8c)
  store %struct.Memory* %call_40dc8c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dc8f	 Bytes: 3
  %loadMem_40dc8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc8f = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc8f)
  store %struct.Memory* %call_40dc8f, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40dc92	 Bytes: 3
  %loadMem_40dc92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc92 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc92)
  store %struct.Memory* %call_40dc92, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %ecx	 RIP: 40dc95	 Bytes: 3
  %loadMem_40dc95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc95 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc95)
  store %struct.Memory* %call_40dc95, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40dc98	 Bytes: 3
  %loadMem_40dc98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc98 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc98)
  store %struct.Memory* %call_40dc98, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 40dc9b	 Bytes: 3
  %loadMem_40dc9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc9b = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc9b)
  store %struct.Memory* %call_40dc9b, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dc9e	 Bytes: 4
  %loadMem_40dc9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dc9e = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dc9e)
  store %struct.Memory* %call_40dc9e, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dca2	 Bytes: 4
  %loadMem_40dca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dca2 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dca2)
  store %struct.Memory* %call_40dca2, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dca6	 Bytes: 3
  %loadMem_40dca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dca6 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dca6)
  store %struct.Memory* %call_40dca6, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dca9	 Bytes: 3
  %loadMem_40dca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dca9 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dca9)
  store %struct.Memory* %call_40dca9, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 40dcac	 Bytes: 3
  %loadMem_40dcac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcac = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcac)
  store %struct.Memory* %call_40dcac, %struct.Memory** %MEMORY

  ; Code: addl -0x18(%rbp), %edi	 RIP: 40dcaf	 Bytes: 3
  %loadMem_40dcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcaf = call %struct.Memory* @routine_addl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcaf)
  store %struct.Memory* %call_40dcaf, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dcb2	 Bytes: 3
  %loadMem_40dcb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcb2 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcb2)
  store %struct.Memory* %call_40dcb2, %struct.Memory** %MEMORY

  ; Code: addl (%rsi,%rdx,4), %ecx	 RIP: 40dcb5	 Bytes: 3
  %loadMem_40dcb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcb5 = call %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcb5)
  store %struct.Memory* %call_40dcb5, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40dcb8	 Bytes: 4
  %loadMem_40dcb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcb8 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcb8)
  store %struct.Memory* %call_40dcb8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x70(%rbp,%rdx,4)	 RIP: 40dcbc	 Bytes: 4
  %loadMem_40dcbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcbc = call %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcbc)
  store %struct.Memory* %call_40dcbc, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dcc0	 Bytes: 4
  %loadMem_40dcc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcc0 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcc0)
  store %struct.Memory* %call_40dcc0, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dcc4	 Bytes: 4
  %loadMem_40dcc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcc4 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcc4)
  store %struct.Memory* %call_40dcc4, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dcc8	 Bytes: 3
  %loadMem_40dcc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcc8 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcc8)
  store %struct.Memory* %call_40dcc8, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dccb	 Bytes: 3
  %loadMem_40dccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dccb = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dccb)
  store %struct.Memory* %call_40dccb, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40dcce	 Bytes: 3
  %loadMem_40dcce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcce = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcce)
  store %struct.Memory* %call_40dcce, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %ecx	 RIP: 40dcd1	 Bytes: 3
  %loadMem_40dcd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcd1 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcd1)
  store %struct.Memory* %call_40dcd1, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40dcd4	 Bytes: 3
  %loadMem_40dcd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcd4 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcd4)
  store %struct.Memory* %call_40dcd4, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 40dcd7	 Bytes: 3
  %loadMem_40dcd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcd7 = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcd7)
  store %struct.Memory* %call_40dcd7, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dcda	 Bytes: 4
  %loadMem_40dcda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcda = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcda)
  store %struct.Memory* %call_40dcda, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dcde	 Bytes: 4
  %loadMem_40dcde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcde = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcde)
  store %struct.Memory* %call_40dcde, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40dce2	 Bytes: 3
  %loadMem_40dce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dce2 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dce2)
  store %struct.Memory* %call_40dce2, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 40dce5	 Bytes: 3
  %loadMem_40dce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dce5 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dce5)
  store %struct.Memory* %call_40dce5, %struct.Memory** %MEMORY

  ; Code: addl -0x18(%rbp), %edi	 RIP: 40dce8	 Bytes: 3
  %loadMem_40dce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dce8 = call %struct.Memory* @routine_addl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dce8)
  store %struct.Memory* %call_40dce8, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dceb	 Bytes: 3
  %loadMem_40dceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dceb = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dceb)
  store %struct.Memory* %call_40dceb, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rdx,4), %ecx	 RIP: 40dcee	 Bytes: 3
  %loadMem_40dcee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcee = call %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcee)
  store %struct.Memory* %call_40dcee, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 40dcf1	 Bytes: 4
  %loadMem_40dcf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcf1 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcf1)
  store %struct.Memory* %call_40dcf1, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x70(%rbp,%rax,4)	 RIP: 40dcf5	 Bytes: 4
  %loadMem_40dcf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcf5 = call %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcf5)
  store %struct.Memory* %call_40dcf5, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40dcf9	 Bytes: 3
  %loadMem_40dcf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcf9 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcf9)
  store %struct.Memory* %call_40dcf9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40dcfc	 Bytes: 3
  %loadMem_40dcfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcfc = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcfc)
  store %struct.Memory* %call_40dcfc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40dcff	 Bytes: 3
  %loadMem_40dcff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dcff = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dcff)
  store %struct.Memory* %call_40dcff, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40dc68	 RIP: 40dd02	 Bytes: 5
  %loadMem_40dd02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd02 = call %struct.Memory* @routine_jmpq_.L_40dc68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd02, i64 -154, i64 5)
  store %struct.Memory* %call_40dd02, %struct.Memory** %MEMORY

  br label %block_.L_40dc68

  ; Code: .L_40dd07:	 RIP: 40dd07	 Bytes: 0
block_.L_40dd07:

  ; Code: leaq -0x190(%rbp), %rax	 RIP: 40dd07	 Bytes: 7
  %loadMem_40dd07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd07 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd07)
  store %struct.Memory* %call_40dd07, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 40dd0e	 Bytes: 3
  %loadMem_40dd0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd0e = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd0e)
  store %struct.Memory* %call_40dd0e, %struct.Memory** %MEMORY

  ; Code: addl -0x6c(%rbp), %ecx	 RIP: 40dd11	 Bytes: 3
  %loadMem_40dd11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd11 = call %struct.Memory* @routine_addl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd11)
  store %struct.Memory* %call_40dd11, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dd14	 Bytes: 4
  %loadMem_40dd14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd14 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd14)
  store %struct.Memory* %call_40dd14, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dd18	 Bytes: 4
  %loadMem_40dd18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd18 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd18)
  store %struct.Memory* %call_40dd18, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dd1c	 Bytes: 3
  %loadMem_40dd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd1c = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd1c)
  store %struct.Memory* %call_40dd1c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dd1f	 Bytes: 3
  %loadMem_40dd1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd1f = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd1f)
  store %struct.Memory* %call_40dd1f, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 40dd22	 Bytes: 3
  %loadMem_40dd22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd22 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd22)
  store %struct.Memory* %call_40dd22, %struct.Memory** %MEMORY

  ; Code: addl $0x0, %edi	 RIP: 40dd25	 Bytes: 3
  %loadMem_40dd25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd25 = call %struct.Memory* @routine_addl__0x0___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd25)
  store %struct.Memory* %call_40dd25, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dd28	 Bytes: 3
  %loadMem_40dd28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd28 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd28)
  store %struct.Memory* %call_40dd28, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 40dd2b	 Bytes: 3
  %loadMem_40dd2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd2b = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd2b)
  store %struct.Memory* %call_40dd2b, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 40dd2e	 Bytes: 3
  %loadMem_40dd2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd2e = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd2e)
  store %struct.Memory* %call_40dd2e, %struct.Memory** %MEMORY

  ; Code: subl -0x6c(%rbp), %ecx	 RIP: 40dd31	 Bytes: 3
  %loadMem_40dd31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd31 = call %struct.Memory* @routine_subl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd31)
  store %struct.Memory* %call_40dd31, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dd34	 Bytes: 4
  %loadMem_40dd34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd34 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd34)
  store %struct.Memory* %call_40dd34, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dd38	 Bytes: 4
  %loadMem_40dd38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd38 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd38)
  store %struct.Memory* %call_40dd38, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dd3c	 Bytes: 3
  %loadMem_40dd3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd3c = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd3c)
  store %struct.Memory* %call_40dd3c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dd3f	 Bytes: 3
  %loadMem_40dd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd3f = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd3f)
  store %struct.Memory* %call_40dd3f, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 40dd42	 Bytes: 3
  %loadMem_40dd42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd42 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd42)
  store %struct.Memory* %call_40dd42, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edi	 RIP: 40dd45	 Bytes: 3
  %loadMem_40dd45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd45 = call %struct.Memory* @routine_addl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd45)
  store %struct.Memory* %call_40dd45, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dd48	 Bytes: 3
  %loadMem_40dd48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd48 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd48)
  store %struct.Memory* %call_40dd48, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 40dd4b	 Bytes: 3
  %loadMem_40dd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd4b = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd4b)
  store %struct.Memory* %call_40dd4b, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 40dd4e	 Bytes: 3
  %loadMem_40dd4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd4e = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd4e)
  store %struct.Memory* %call_40dd4e, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 40dd51	 Bytes: 3
  %loadMem_40dd51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd51 = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd51)
  store %struct.Memory* %call_40dd51, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %ecx	 RIP: 40dd54	 Bytes: 3
  %loadMem_40dd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd54 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd54)
  store %struct.Memory* %call_40dd54, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dd57	 Bytes: 4
  %loadMem_40dd57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd57 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd57)
  store %struct.Memory* %call_40dd57, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dd5b	 Bytes: 4
  %loadMem_40dd5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd5b = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd5b)
  store %struct.Memory* %call_40dd5b, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40dd5f	 Bytes: 3
  %loadMem_40dd5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd5f = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd5f)
  store %struct.Memory* %call_40dd5f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dd62	 Bytes: 3
  %loadMem_40dd62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd62 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd62)
  store %struct.Memory* %call_40dd62, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 40dd65	 Bytes: 3
  %loadMem_40dd65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd65 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd65)
  store %struct.Memory* %call_40dd65, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edi	 RIP: 40dd68	 Bytes: 3
  %loadMem_40dd68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd68 = call %struct.Memory* @routine_addl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd68)
  store %struct.Memory* %call_40dd68, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dd6b	 Bytes: 3
  %loadMem_40dd6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd6b = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd6b)
  store %struct.Memory* %call_40dd6b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 40dd6e	 Bytes: 3
  %loadMem_40dd6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd6e = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd6e)
  store %struct.Memory* %call_40dd6e, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 40dd71	 Bytes: 3
  %loadMem_40dd71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd71 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd71)
  store %struct.Memory* %call_40dd71, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edi	 RIP: 40dd74	 Bytes: 3
  %loadMem_40dd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd74 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd74)
  store %struct.Memory* %call_40dd74, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edi	 RIP: 40dd77	 Bytes: 3
  %loadMem_40dd77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd77 = call %struct.Memory* @routine_shll__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd77)
  store %struct.Memory* %call_40dd77, %struct.Memory** %MEMORY

  ; Code: subl %edi, %ecx	 RIP: 40dd7a	 Bytes: 2
  %loadMem_40dd7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd7a = call %struct.Memory* @routine_subl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd7a)
  store %struct.Memory* %call_40dd7a, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 40dd7c	 Bytes: 4
  %loadMem_40dd7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd7c = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd7c)
  store %struct.Memory* %call_40dd7c, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40dd80	 Bytes: 4
  %loadMem_40dd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd80 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd80)
  store %struct.Memory* %call_40dd80, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40dd84	 Bytes: 3
  %loadMem_40dd84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd84 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd84)
  store %struct.Memory* %call_40dd84, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 40dd87	 Bytes: 3
  %loadMem_40dd87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd87 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd87)
  store %struct.Memory* %call_40dd87, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %edi	 RIP: 40dd8a	 Bytes: 3
  %loadMem_40dd8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd8a = call %struct.Memory* @routine_addl__0x3___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd8a)
  store %struct.Memory* %call_40dd8a, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 40dd8d	 Bytes: 3
  %loadMem_40dd8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd8d = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd8d)
  store %struct.Memory* %call_40dd8d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 40dd90	 Bytes: 3
  %loadMem_40dd90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd90 = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd90)
  store %struct.Memory* %call_40dd90, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40dd93	 Bytes: 3
  %loadMem_40dd93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd93 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd93)
  store %struct.Memory* %call_40dd93, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40dd96	 Bytes: 3
  %loadMem_40dd96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd96 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd96)
  store %struct.Memory* %call_40dd96, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40dd99	 Bytes: 3
  %loadMem_40dd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd99 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd99)
  store %struct.Memory* %call_40dd99, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40dc4e	 RIP: 40dd9c	 Bytes: 5
  %loadMem_40dd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dd9c = call %struct.Memory* @routine_jmpq_.L_40dc4e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dd9c, i64 -334, i64 5)
  store %struct.Memory* %call_40dd9c, %struct.Memory** %MEMORY

  br label %block_.L_40dc4e

  ; Code: .L_40dda1:	 RIP: 40dda1	 Bytes: 0
block_.L_40dda1:

  ; Code: jmpq .L_40dda6	 RIP: 40dda1	 Bytes: 5
  %loadMem_40dda1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dda1 = call %struct.Memory* @routine_jmpq_.L_40dda6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dda1, i64 5, i64 5)
  store %struct.Memory* %call_40dda1, %struct.Memory** %MEMORY

  br label %block_.L_40dda6

  ; Code: .L_40dda6:	 RIP: 40dda6	 Bytes: 0
block_.L_40dda6:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40dda6	 Bytes: 3
  %loadMem_40dda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dda6 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dda6)
  store %struct.Memory* %call_40dda6, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40dda9	 Bytes: 3
  %loadMem_40dda9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dda9 = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dda9)
  store %struct.Memory* %call_40dda9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 40ddac	 Bytes: 3
  %loadMem_40ddac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddac = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddac)
  store %struct.Memory* %call_40ddac, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40dae8	 RIP: 40ddaf	 Bytes: 5
  %loadMem_40ddaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddaf = call %struct.Memory* @routine_jmpq_.L_40dae8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddaf, i64 -711, i64 5)
  store %struct.Memory* %call_40ddaf, %struct.Memory** %MEMORY

  br label %block_.L_40dae8

  ; Code: .L_40ddb4:	 RIP: 40ddb4	 Bytes: 0
block_.L_40ddb4:

  ; Code: jmpq .L_40ddb9	 RIP: 40ddb4	 Bytes: 5
  %loadMem_40ddb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddb4 = call %struct.Memory* @routine_jmpq_.L_40ddb9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddb4, i64 5, i64 5)
  store %struct.Memory* %call_40ddb4, %struct.Memory** %MEMORY

  br label %block_.L_40ddb9

  ; Code: .L_40ddb9:	 RIP: 40ddb9	 Bytes: 0
block_.L_40ddb9:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40ddb9	 Bytes: 3
  %loadMem_40ddb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddb9 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddb9)
  store %struct.Memory* %call_40ddb9, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40ddbc	 Bytes: 3
  %loadMem_40ddbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddbc = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddbc)
  store %struct.Memory* %call_40ddbc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 40ddbf	 Bytes: 3
  %loadMem_40ddbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddbf = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddbf)
  store %struct.Memory* %call_40ddbf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40dad7	 RIP: 40ddc2	 Bytes: 5
  %loadMem_40ddc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddc2 = call %struct.Memory* @routine_jmpq_.L_40dad7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddc2, i64 -747, i64 5)
  store %struct.Memory* %call_40ddc2, %struct.Memory** %MEMORY

  br label %block_.L_40dad7

  ; Code: .L_40ddc7:	 RIP: 40ddc7	 Bytes: 0
block_.L_40ddc7:

  ; Code: movq 0x6cb900, %rax	 RIP: 40ddc7	 Bytes: 8
  %loadMem_40ddc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddc7 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddc7)
  store %struct.Memory* %call_40ddc7, %struct.Memory** %MEMORY

  ; Code: movl 0x3338(%rax), %ecx	 RIP: 40ddcf	 Bytes: 6
  %loadMem_40ddcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddcf = call %struct.Memory* @routine_movl_0x3338__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddcf)
  store %struct.Memory* %call_40ddcf, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40ddd5	 Bytes: 8
  %loadMem_40ddd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddd5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddd5)
  store %struct.Memory* %call_40ddd5, %struct.Memory** %MEMORY

  ; Code: addl 0x3438(%rax), %ecx	 RIP: 40dddd	 Bytes: 6
  %loadMem_40dddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dddd = call %struct.Memory* @routine_addl_0x3438__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dddd)
  store %struct.Memory* %call_40dddd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40dde3	 Bytes: 8
  %loadMem_40dde3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dde3 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dde3)
  store %struct.Memory* %call_40dde3, %struct.Memory** %MEMORY

  ; Code: addl 0x3348(%rax), %ecx	 RIP: 40ddeb	 Bytes: 6
  %loadMem_40ddeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddeb = call %struct.Memory* @routine_addl_0x3348__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddeb)
  store %struct.Memory* %call_40ddeb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40ddf1	 Bytes: 8
  %loadMem_40ddf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddf1 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddf1)
  store %struct.Memory* %call_40ddf1, %struct.Memory** %MEMORY

  ; Code: addl 0x3448(%rax), %ecx	 RIP: 40ddf9	 Bytes: 6
  %loadMem_40ddf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddf9 = call %struct.Memory* @routine_addl_0x3448__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddf9)
  store %struct.Memory* %call_40ddf9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x60(%rbp)	 RIP: 40ddff	 Bytes: 3
  %loadMem_40ddff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ddff = call %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ddff)
  store %struct.Memory* %call_40ddff, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de02	 Bytes: 8
  %loadMem_40de02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de02 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de02)
  store %struct.Memory* %call_40de02, %struct.Memory** %MEMORY

  ; Code: movl 0x3338(%rax), %ecx	 RIP: 40de0a	 Bytes: 6
  %loadMem_40de0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de0a = call %struct.Memory* @routine_movl_0x3338__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de0a)
  store %struct.Memory* %call_40de0a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de10	 Bytes: 8
  %loadMem_40de10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de10 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de10)
  store %struct.Memory* %call_40de10, %struct.Memory** %MEMORY

  ; Code: subl 0x3438(%rax), %ecx	 RIP: 40de18	 Bytes: 6
  %loadMem_40de18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de18 = call %struct.Memory* @routine_subl_0x3438__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de18)
  store %struct.Memory* %call_40de18, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de1e	 Bytes: 8
  %loadMem_40de1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de1e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de1e)
  store %struct.Memory* %call_40de1e, %struct.Memory** %MEMORY

  ; Code: addl 0x3348(%rax), %ecx	 RIP: 40de26	 Bytes: 6
  %loadMem_40de26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de26 = call %struct.Memory* @routine_addl_0x3348__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de26)
  store %struct.Memory* %call_40de26, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de2c	 Bytes: 8
  %loadMem_40de2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de2c = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de2c)
  store %struct.Memory* %call_40de2c, %struct.Memory** %MEMORY

  ; Code: subl 0x3448(%rax), %ecx	 RIP: 40de34	 Bytes: 6
  %loadMem_40de34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de34 = call %struct.Memory* @routine_subl_0x3448__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de34)
  store %struct.Memory* %call_40de34, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5c(%rbp)	 RIP: 40de3a	 Bytes: 3
  %loadMem_40de3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de3a = call %struct.Memory* @routine_movl__ecx__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de3a)
  store %struct.Memory* %call_40de3a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de3d	 Bytes: 8
  %loadMem_40de3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de3d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de3d)
  store %struct.Memory* %call_40de3d, %struct.Memory** %MEMORY

  ; Code: movl 0x3338(%rax), %ecx	 RIP: 40de45	 Bytes: 6
  %loadMem_40de45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de45 = call %struct.Memory* @routine_movl_0x3338__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de45)
  store %struct.Memory* %call_40de45, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de4b	 Bytes: 8
  %loadMem_40de4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de4b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de4b)
  store %struct.Memory* %call_40de4b, %struct.Memory** %MEMORY

  ; Code: addl 0x3438(%rax), %ecx	 RIP: 40de53	 Bytes: 6
  %loadMem_40de53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de53 = call %struct.Memory* @routine_addl_0x3438__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de53)
  store %struct.Memory* %call_40de53, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de59	 Bytes: 8
  %loadMem_40de59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de59 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de59)
  store %struct.Memory* %call_40de59, %struct.Memory** %MEMORY

  ; Code: subl 0x3348(%rax), %ecx	 RIP: 40de61	 Bytes: 6
  %loadMem_40de61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de61 = call %struct.Memory* @routine_subl_0x3348__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de61)
  store %struct.Memory* %call_40de61, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de67	 Bytes: 8
  %loadMem_40de67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de67 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de67)
  store %struct.Memory* %call_40de67, %struct.Memory** %MEMORY

  ; Code: subl 0x3448(%rax), %ecx	 RIP: 40de6f	 Bytes: 6
  %loadMem_40de6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de6f = call %struct.Memory* @routine_subl_0x3448__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de6f)
  store %struct.Memory* %call_40de6f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x58(%rbp)	 RIP: 40de75	 Bytes: 3
  %loadMem_40de75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de75 = call %struct.Memory* @routine_movl__ecx__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de75)
  store %struct.Memory* %call_40de75, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de78	 Bytes: 8
  %loadMem_40de78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de78 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de78)
  store %struct.Memory* %call_40de78, %struct.Memory** %MEMORY

  ; Code: movl 0x3338(%rax), %ecx	 RIP: 40de80	 Bytes: 6
  %loadMem_40de80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de80 = call %struct.Memory* @routine_movl_0x3338__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de80)
  store %struct.Memory* %call_40de80, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de86	 Bytes: 8
  %loadMem_40de86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de86 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de86)
  store %struct.Memory* %call_40de86, %struct.Memory** %MEMORY

  ; Code: subl 0x3438(%rax), %ecx	 RIP: 40de8e	 Bytes: 6
  %loadMem_40de8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de8e = call %struct.Memory* @routine_subl_0x3438__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de8e)
  store %struct.Memory* %call_40de8e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40de94	 Bytes: 8
  %loadMem_40de94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de94 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de94)
  store %struct.Memory* %call_40de94, %struct.Memory** %MEMORY

  ; Code: subl 0x3348(%rax), %ecx	 RIP: 40de9c	 Bytes: 6
  %loadMem_40de9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40de9c = call %struct.Memory* @routine_subl_0x3348__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40de9c)
  store %struct.Memory* %call_40de9c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 40dea2	 Bytes: 8
  %loadMem_40dea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dea2 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dea2)
  store %struct.Memory* %call_40dea2, %struct.Memory** %MEMORY

  ; Code: addl 0x3448(%rax), %ecx	 RIP: 40deaa	 Bytes: 6
  %loadMem_40deaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40deaa = call %struct.Memory* @routine_addl_0x3448__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40deaa)
  store %struct.Memory* %call_40deaa, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x54(%rbp)	 RIP: 40deb0	 Bytes: 3
  %loadMem_40deb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40deb0 = call %struct.Memory* @routine_movl__ecx__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40deb0)
  store %struct.Memory* %call_40deb0, %struct.Memory** %MEMORY

  ; Code: movl -0x190(%rbp), %ecx	 RIP: 40deb3	 Bytes: 6
  %loadMem_40deb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40deb3 = call %struct.Memory* @routine_movl_MINUS0x190__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40deb3)
  store %struct.Memory* %call_40deb3, %struct.Memory** %MEMORY

  ; Code: addl -0x110(%rbp), %ecx	 RIP: 40deb9	 Bytes: 6
  %loadMem_40deb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40deb9 = call %struct.Memory* @routine_addl_MINUS0x110__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40deb9)
  store %struct.Memory* %call_40deb9, %struct.Memory** %MEMORY

  ; Code: addl -0x180(%rbp), %ecx	 RIP: 40debf	 Bytes: 6
  %loadMem_40debf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40debf = call %struct.Memory* @routine_addl_MINUS0x180__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40debf)
  store %struct.Memory* %call_40debf, %struct.Memory** %MEMORY

  ; Code: addl -0x100(%rbp), %ecx	 RIP: 40dec5	 Bytes: 6
  %loadMem_40dec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dec5 = call %struct.Memory* @routine_addl_MINUS0x100__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dec5)
  store %struct.Memory* %call_40dec5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1b0(%rbp)	 RIP: 40decb	 Bytes: 6
  %loadMem_40decb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40decb = call %struct.Memory* @routine_movl__ecx__MINUS0x1b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40decb)
  store %struct.Memory* %call_40decb, %struct.Memory** %MEMORY

  ; Code: movl -0x190(%rbp), %ecx	 RIP: 40ded1	 Bytes: 6
  %loadMem_40ded1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ded1 = call %struct.Memory* @routine_movl_MINUS0x190__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ded1)
  store %struct.Memory* %call_40ded1, %struct.Memory** %MEMORY

  ; Code: subl -0x110(%rbp), %ecx	 RIP: 40ded7	 Bytes: 6
  %loadMem_40ded7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ded7 = call %struct.Memory* @routine_subl_MINUS0x110__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ded7)
  store %struct.Memory* %call_40ded7, %struct.Memory** %MEMORY

  ; Code: addl -0x180(%rbp), %ecx	 RIP: 40dedd	 Bytes: 6
  %loadMem_40dedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dedd = call %struct.Memory* @routine_addl_MINUS0x180__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dedd)
  store %struct.Memory* %call_40dedd, %struct.Memory** %MEMORY

  ; Code: subl -0x100(%rbp), %ecx	 RIP: 40dee3	 Bytes: 6
  %loadMem_40dee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dee3 = call %struct.Memory* @routine_subl_MINUS0x100__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dee3)
  store %struct.Memory* %call_40dee3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1ac(%rbp)	 RIP: 40dee9	 Bytes: 6
  %loadMem_40dee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dee9 = call %struct.Memory* @routine_movl__ecx__MINUS0x1ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dee9)
  store %struct.Memory* %call_40dee9, %struct.Memory** %MEMORY

  ; Code: movl -0x190(%rbp), %ecx	 RIP: 40deef	 Bytes: 6
  %loadMem_40deef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40deef = call %struct.Memory* @routine_movl_MINUS0x190__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40deef)
  store %struct.Memory* %call_40deef, %struct.Memory** %MEMORY

  ; Code: addl -0x110(%rbp), %ecx	 RIP: 40def5	 Bytes: 6
  %loadMem_40def5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40def5 = call %struct.Memory* @routine_addl_MINUS0x110__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40def5)
  store %struct.Memory* %call_40def5, %struct.Memory** %MEMORY

  ; Code: subl -0x180(%rbp), %ecx	 RIP: 40defb	 Bytes: 6
  %loadMem_40defb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40defb = call %struct.Memory* @routine_subl_MINUS0x180__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40defb)
  store %struct.Memory* %call_40defb, %struct.Memory** %MEMORY

  ; Code: subl -0x100(%rbp), %ecx	 RIP: 40df01	 Bytes: 6
  %loadMem_40df01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df01 = call %struct.Memory* @routine_subl_MINUS0x100__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df01)
  store %struct.Memory* %call_40df01, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1a8(%rbp)	 RIP: 40df07	 Bytes: 6
  %loadMem_40df07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df07 = call %struct.Memory* @routine_movl__ecx__MINUS0x1a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df07)
  store %struct.Memory* %call_40df07, %struct.Memory** %MEMORY

  ; Code: movl -0x190(%rbp), %ecx	 RIP: 40df0d	 Bytes: 6
  %loadMem_40df0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df0d = call %struct.Memory* @routine_movl_MINUS0x190__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df0d)
  store %struct.Memory* %call_40df0d, %struct.Memory** %MEMORY

  ; Code: subl -0x110(%rbp), %ecx	 RIP: 40df13	 Bytes: 6
  %loadMem_40df13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df13 = call %struct.Memory* @routine_subl_MINUS0x110__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df13)
  store %struct.Memory* %call_40df13, %struct.Memory** %MEMORY

  ; Code: subl -0x180(%rbp), %ecx	 RIP: 40df19	 Bytes: 6
  %loadMem_40df19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df19 = call %struct.Memory* @routine_subl_MINUS0x180__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df19)
  store %struct.Memory* %call_40df19, %struct.Memory** %MEMORY

  ; Code: addl -0x100(%rbp), %ecx	 RIP: 40df1f	 Bytes: 6
  %loadMem_40df1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df1f = call %struct.Memory* @routine_addl_MINUS0x100__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df1f)
  store %struct.Memory* %call_40df1f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1a4(%rbp)	 RIP: 40df25	 Bytes: 6
  %loadMem_40df25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df25 = call %struct.Memory* @routine_movl__ecx__MINUS0x1a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df25)
  store %struct.Memory* %call_40df25, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x44(%rbp)	 RIP: 40df2b	 Bytes: 7
  %loadMem_40df2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df2b = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df2b)
  store %struct.Memory* %call_40df2b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x40(%rbp)	 RIP: 40df32	 Bytes: 7
  %loadMem_40df32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df32 = call %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df32)
  store %struct.Memory* %call_40df32, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 40df39	 Bytes: 7
  %loadMem_40df39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df39 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df39)
  store %struct.Memory* %call_40df39, %struct.Memory** %MEMORY

  ; Code: .L_40df40:	 RIP: 40df40	 Bytes: 0
  br label %block_.L_40df40
block_.L_40df40:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 40df40	 Bytes: 4
  %loadMem_40df40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df40 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df40)
  store %struct.Memory* %call_40df40, %struct.Memory** %MEMORY

  ; Code: jge .L_40e594	 RIP: 40df44	 Bytes: 6
  %loadMem_40df44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df44 = call %struct.Memory* @routine_jge_.L_40e594(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df44, i8* %BRANCH_TAKEN, i64 1616, i64 6, i64 6)
  store %struct.Memory* %call_40df44, %struct.Memory** %MEMORY

  %loadBr_40df44 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40df44 = icmp eq i8 %loadBr_40df44, 1
  br i1 %cmpBr_40df44, label %block_.L_40e594, label %block_40df4a

block_40df4a:
  ; Code: movl -0x44(%rbp), %eax	 RIP: 40df4a	 Bytes: 3
  %loadMem_40df4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df4a = call %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df4a)
  store %struct.Memory* %call_40df4a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40df4d	 Bytes: 3
  %loadMem_40df4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df4d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df4d)
  store %struct.Memory* %call_40df4d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x44(%rbp)	 RIP: 40df50	 Bytes: 3
  %loadMem_40df50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df50 = call %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df50)
  store %struct.Memory* %call_40df50, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1c(%rbp)	 RIP: 40df53	 Bytes: 7
  %loadMem_40df53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df53 = call %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df53)
  store %struct.Memory* %call_40df53, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 40df5a	 Bytes: 4
  %loadMem_40df5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df5a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df5a)
  store %struct.Memory* %call_40df5a, %struct.Memory** %MEMORY

  ; Code: movl -0x1b0(%rbp,%rcx,4), %edi	 RIP: 40df5e	 Bytes: 7
  %loadMem_40df5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df5e = call %struct.Memory* @routine_movl_MINUS0x1b0__rbp__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df5e)
  store %struct.Memory* %call_40df5e, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40df65	 Bytes: 5
  %loadMem1_40df65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40df65 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40df65, i64 -53093, i64 5, i64 5)
  store %struct.Memory* %call1_40df65, %struct.Memory** %MEMORY

  %loadMem2_40df65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40df65 = load i64, i64* %3
  %call2_40df65 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40df65, %struct.Memory* %loadMem2_40df65)
  store %struct.Memory* %call2_40df65, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %rcx	 RIP: 40df6a	 Bytes: 10
  %loadMem_40df6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df6a = call %struct.Memory* @routine_movq__0x4b2750___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df6a)
  store %struct.Memory* %call_40df6a, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %rdx	 RIP: 40df74	 Bytes: 7
  %loadMem_40df74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df74 = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df74)
  store %struct.Memory* %call_40df74, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40df7b	 Bytes: 4
  %loadMem_40df7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df7b = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df7b)
  store %struct.Memory* %call_40df7b, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 40df7f	 Bytes: 3
  %loadMem_40df7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df7f = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df7f)
  store %struct.Memory* %call_40df7f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40df82	 Bytes: 3
  %loadMem_40df82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df82 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df82)
  store %struct.Memory* %call_40df82, %struct.Memory** %MEMORY

  ; Code: imull (%rsi), %eax	 RIP: 40df85	 Bytes: 3
  %loadMem_40df85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df85 = call %struct.Memory* @routine_imull___rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df85)
  store %struct.Memory* %call_40df85, %struct.Memory** %MEMORY

  ; Code: movl -0x194(%rbp), %edi	 RIP: 40df88	 Bytes: 6
  %loadMem_40df88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df88 = call %struct.Memory* @routine_movl_MINUS0x194__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df88)
  store %struct.Memory* %call_40df88, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edi	 RIP: 40df8e	 Bytes: 3
  %loadMem_40df8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df8e = call %struct.Memory* @routine_shll__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df8e)
  store %struct.Memory* %call_40df8e, %struct.Memory** %MEMORY

  ; Code: addl %edi, %eax	 RIP: 40df91	 Bytes: 2
  %loadMem_40df91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df91 = call %struct.Memory* @routine_addl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df91)
  store %struct.Memory* %call_40df91, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %edi	 RIP: 40df93	 Bytes: 6
  %loadMem_40df93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df93 = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df93)
  store %struct.Memory* %call_40df93, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edi	 RIP: 40df99	 Bytes: 3
  %loadMem_40df99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df99 = call %struct.Memory* @routine_addl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df99)
  store %struct.Memory* %call_40df99, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x268(%rbp)	 RIP: 40df9c	 Bytes: 7
  %loadMem_40df9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40df9c = call %struct.Memory* @routine_movq__rcx__MINUS0x268__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40df9c)
  store %struct.Memory* %call_40df9c, %struct.Memory** %MEMORY

  ; Code: movl %edi, %ecx	 RIP: 40dfa3	 Bytes: 2
  %loadMem_40dfa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfa3 = call %struct.Memory* @routine_movl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfa3)
  store %struct.Memory* %call_40dfa3, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40dfa5	 Bytes: 2
  %loadMem_40dfa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfa5 = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfa5)
  store %struct.Memory* %call_40dfa5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1fc(%rbp)	 RIP: 40dfa7	 Bytes: 6
  %loadMem_40dfa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfa7 = call %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfa7)
  store %struct.Memory* %call_40dfa7, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40dfad	 Bytes: 6
  %loadMem_40dfad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfad = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfad)
  store %struct.Memory* %call_40dfad, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %edi	 RIP: 40dfb3	 Bytes: 6
  %loadMem_40dfb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfb3 = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfb3)
  store %struct.Memory* %call_40dfb3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edi	 RIP: 40dfb9	 Bytes: 3
  %loadMem_40dfb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfb9 = call %struct.Memory* @routine_addl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfb9)
  store %struct.Memory* %call_40dfb9, %struct.Memory** %MEMORY

  ; Code: movl %edi, %ecx	 RIP: 40dfbc	 Bytes: 2
  %loadMem_40dfbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfbc = call %struct.Memory* @routine_movl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfbc)
  store %struct.Memory* %call_40dfbc, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40dfbe	 Bytes: 2
  %loadMem_40dfbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfbe = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfbe)
  store %struct.Memory* %call_40dfbe, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %rdx	 RIP: 40dfc0	 Bytes: 7
  %loadMem_40dfc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfc0 = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfc0)
  store %struct.Memory* %call_40dfc0, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40dfc7	 Bytes: 4
  %loadMem_40dfc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfc7 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfc7)
  store %struct.Memory* %call_40dfc7, %struct.Memory** %MEMORY

  ; Code: movq -0x268(%rbp), %rsi	 RIP: 40dfcb	 Bytes: 7
  %loadMem_40dfcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfcb = call %struct.Memory* @routine_movq_MINUS0x268__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfcb)
  store %struct.Memory* %call_40dfcb, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40dfd2	 Bytes: 3
  %loadMem_40dfd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfd2 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfd2)
  store %struct.Memory* %call_40dfd2, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40dfd5	 Bytes: 1
  %loadMem_40dfd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfd5 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfd5)
  store %struct.Memory* %call_40dfd5, %struct.Memory** %MEMORY

  ; Code: idivl (%rsi)	 RIP: 40dfd6	 Bytes: 2
  %loadMem_40dfd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfd6 = call %struct.Memory* @routine_idivl___rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfd6)
  store %struct.Memory* %call_40dfd6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1fc(%rbp)	 RIP: 40dfd8	 Bytes: 6
  %loadMem_40dfd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfd8 = call %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfd8)
  store %struct.Memory* %call_40dfd8, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 40dfde	 Bytes: 4
  %loadMem_40dfde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfde = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfde)
  store %struct.Memory* %call_40dfde, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp,%rsi,4), %eax	 RIP: 40dfe2	 Bytes: 4
  %loadMem_40dfe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfe2 = call %struct.Memory* @routine_movl_MINUS0x60__rbp__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfe2)
  store %struct.Memory* %call_40dfe2, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %edi	 RIP: 40dfe6	 Bytes: 6
  %loadMem_40dfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfe6 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfe6)
  store %struct.Memory* %call_40dfe6, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 40dfec	 Bytes: 4
  %loadMem_40dfec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dfec = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dfec)
  store %struct.Memory* %call_40dfec, %struct.Memory** %MEMORY

  ; Code: movl -0x1b0(%rbp,%rsi,4), %esi	 RIP: 40dff0	 Bytes: 7
  %loadMem_40dff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dff0 = call %struct.Memory* @routine_movl_MINUS0x1b0__rbp__rsi_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dff0)
  store %struct.Memory* %call_40dff0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x26c(%rbp)	 RIP: 40dff7	 Bytes: 6
  %loadMem_40dff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40dff7 = call %struct.Memory* @routine_movl__eax__MINUS0x26c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40dff7)
  store %struct.Memory* %call_40dff7, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40dffd	 Bytes: 5
  %loadMem1_40dffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40dffd = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40dffd, i64 422227, i64 5, i64 5)
  store %struct.Memory* %call1_40dffd, %struct.Memory** %MEMORY

  %loadMem2_40dffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40dffd = load i64, i64* %3
  %call2_40dffd = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40dffd, %struct.Memory* %loadMem2_40dffd)
  store %struct.Memory* %call2_40dffd, %struct.Memory** %MEMORY

  ; Code: movl -0x26c(%rbp), %esi	 RIP: 40e002	 Bytes: 6
  %loadMem_40e002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e002 = call %struct.Memory* @routine_movl_MINUS0x26c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e002)
  store %struct.Memory* %call_40e002, %struct.Memory** %MEMORY

  ; Code: subl %eax, %esi	 RIP: 40e008	 Bytes: 2
  %loadMem_40e008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e008 = call %struct.Memory* @routine_subl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e008)
  store %struct.Memory* %call_40e008, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x1fc(%rbp)	 RIP: 40e00a	 Bytes: 6
  %loadMem_40e00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e00a = call %struct.Memory* @routine_movl__esi__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e00a)
  store %struct.Memory* %call_40e00a, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %edi	 RIP: 40e010	 Bytes: 6
  %loadMem_40e010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e010 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e010)
  store %struct.Memory* %call_40e010, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e016	 Bytes: 5
  %loadMem1_40e016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e016 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e016, i64 -53270, i64 5, i64 5)
  store %struct.Memory* %call1_40e016, %struct.Memory** %MEMORY

  %loadMem2_40e016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e016 = load i64, i64* %3
  %call2_40e016 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e016, %struct.Memory* %loadMem2_40e016)
  store %struct.Memory* %call2_40e016, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %r8	 RIP: 40e01b	 Bytes: 10
  %loadMem_40e01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e01b = call %struct.Memory* @routine_movq__0x4b2750___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e01b)
  store %struct.Memory* %call_40e01b, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r9	 RIP: 40e025	 Bytes: 7
  %loadMem_40e025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e025 = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e025)
  store %struct.Memory* %call_40e025, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r9	 RIP: 40e02c	 Bytes: 4
  %loadMem_40e02c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e02c = call %struct.Memory* @routine_shlq__0x6___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e02c)
  store %struct.Memory* %call_40e02c, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40e030	 Bytes: 3
  %loadMem_40e030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e030 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e030)
  store %struct.Memory* %call_40e030, %struct.Memory** %MEMORY

  ; Code: imull (%r8), %eax	 RIP: 40e033	 Bytes: 4
  %loadMem_40e033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e033 = call %struct.Memory* @routine_imull___r8____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e033)
  store %struct.Memory* %call_40e033, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %esi	 RIP: 40e037	 Bytes: 3
  %loadMem_40e037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e037 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e037)
  store %struct.Memory* %call_40e037, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %esi	 RIP: 40e03a	 Bytes: 3
  %loadMem_40e03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e03a = call %struct.Memory* @routine_shll__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e03a)
  store %struct.Memory* %call_40e03a, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 40e03d	 Bytes: 2
  %loadMem_40e03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e03d = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e03d)
  store %struct.Memory* %call_40e03d, %struct.Memory** %MEMORY

  ; Code: movl -0x1c4(%rbp), %esi	 RIP: 40e03f	 Bytes: 6
  %loadMem_40e03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e03f = call %struct.Memory* @routine_movl_MINUS0x1c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e03f)
  store %struct.Memory* %call_40e03f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 40e045	 Bytes: 3
  %loadMem_40e045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e045 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e045)
  store %struct.Memory* %call_40e045, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40e048	 Bytes: 2
  %loadMem_40e048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e048 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e048)
  store %struct.Memory* %call_40e048, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40e04a	 Bytes: 2
  %loadMem_40e04a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e04a = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e04a)
  store %struct.Memory* %call_40e04a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x204(%rbp)	 RIP: 40e04c	 Bytes: 6
  %loadMem_40e04c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e04c = call %struct.Memory* @routine_movl__eax__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e04c)
  store %struct.Memory* %call_40e04c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r8	 RIP: 40e052	 Bytes: 4
  %loadMem_40e052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e052 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e052)
  store %struct.Memory* %call_40e052, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp,%r8,4), %eax	 RIP: 40e056	 Bytes: 5
  %loadMem_40e056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e056 = call %struct.Memory* @routine_movl_MINUS0x60__rbp__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e056)
  store %struct.Memory* %call_40e056, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r8	 RIP: 40e05b	 Bytes: 4
  %loadMem_40e05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e05b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e05b)
  store %struct.Memory* %call_40e05b, %struct.Memory** %MEMORY

  ; Code: subl -0x1b0(%rbp,%r8,4), %eax	 RIP: 40e05f	 Bytes: 8
  %loadMem_40e05f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e05f = call %struct.Memory* @routine_subl_MINUS0x1b0__rbp__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e05f)
  store %struct.Memory* %call_40e05f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x200(%rbp)	 RIP: 40e067	 Bytes: 6
  %loadMem_40e067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e067 = call %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e067)
  store %struct.Memory* %call_40e067, %struct.Memory** %MEMORY

  ; Code: movl -0x200(%rbp), %edi	 RIP: 40e06d	 Bytes: 6
  %loadMem_40e06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e06d = call %struct.Memory* @routine_movl_MINUS0x200__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e06d)
  store %struct.Memory* %call_40e06d, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e073	 Bytes: 5
  %loadMem1_40e073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e073 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e073, i64 -53363, i64 5, i64 5)
  store %struct.Memory* %call1_40e073, %struct.Memory** %MEMORY

  %loadMem2_40e073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e073 = load i64, i64* %3
  %call2_40e073 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e073, %struct.Memory* %loadMem2_40e073)
  store %struct.Memory* %call2_40e073, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %r8	 RIP: 40e078	 Bytes: 10
  %loadMem_40e078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e078 = call %struct.Memory* @routine_movq__0x4b2750___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e078)
  store %struct.Memory* %call_40e078, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r9	 RIP: 40e082	 Bytes: 7
  %loadMem_40e082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e082 = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e082)
  store %struct.Memory* %call_40e082, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r9	 RIP: 40e089	 Bytes: 4
  %loadMem_40e089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e089 = call %struct.Memory* @routine_shlq__0x6___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e089)
  store %struct.Memory* %call_40e089, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40e08d	 Bytes: 3
  %loadMem_40e08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e08d = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e08d)
  store %struct.Memory* %call_40e08d, %struct.Memory** %MEMORY

  ; Code: imull (%r8), %eax	 RIP: 40e090	 Bytes: 4
  %loadMem_40e090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e090 = call %struct.Memory* @routine_imull___r8____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e090)
  store %struct.Memory* %call_40e090, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %esi	 RIP: 40e094	 Bytes: 3
  %loadMem_40e094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e094 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e094)
  store %struct.Memory* %call_40e094, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %esi	 RIP: 40e097	 Bytes: 3
  %loadMem_40e097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e097 = call %struct.Memory* @routine_shll__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e097)
  store %struct.Memory* %call_40e097, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 40e09a	 Bytes: 2
  %loadMem_40e09a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e09a = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e09a)
  store %struct.Memory* %call_40e09a, %struct.Memory** %MEMORY

  ; Code: movl -0x1c4(%rbp), %esi	 RIP: 40e09c	 Bytes: 6
  %loadMem_40e09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e09c = call %struct.Memory* @routine_movl_MINUS0x1c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e09c)
  store %struct.Memory* %call_40e09c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 40e0a2	 Bytes: 3
  %loadMem_40e0a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0a2 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0a2)
  store %struct.Memory* %call_40e0a2, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40e0a5	 Bytes: 2
  %loadMem_40e0a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0a5 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0a5)
  store %struct.Memory* %call_40e0a5, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40e0a7	 Bytes: 2
  %loadMem_40e0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0a7 = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0a7)
  store %struct.Memory* %call_40e0a7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x208(%rbp)	 RIP: 40e0a9	 Bytes: 6
  %loadMem_40e0a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0a9 = call %struct.Memory* @routine_movl__eax__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0a9)
  store %struct.Memory* %call_40e0a9, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %eax	 RIP: 40e0af	 Bytes: 6
  %loadMem_40e0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0af = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0af)
  store %struct.Memory* %call_40e0af, %struct.Memory** %MEMORY

  ; Code: cmpl -0x208(%rbp), %eax	 RIP: 40e0b5	 Bytes: 6
  %loadMem_40e0b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0b5 = call %struct.Memory* @routine_cmpl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0b5)
  store %struct.Memory* %call_40e0b5, %struct.Memory** %MEMORY

  ; Code: je .L_40e350	 RIP: 40e0bb	 Bytes: 6
  %loadMem_40e0bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0bb = call %struct.Memory* @routine_je_.L_40e350(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0bb, i8* %BRANCH_TAKEN, i64 661, i64 6, i64 6)
  store %struct.Memory* %call_40e0bb, %struct.Memory** %MEMORY

  %loadBr_40e0bb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e0bb = icmp eq i8 %loadBr_40e0bb, 1
  br i1 %cmpBr_40e0bb, label %block_.L_40e350, label %block_40e0c1

block_40e0c1:
  ; Code: cmpl $0x0, -0x204(%rbp)	 RIP: 40e0c1	 Bytes: 7
  %loadMem_40e0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0c1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0c1)
  store %struct.Memory* %call_40e0c1, %struct.Memory** %MEMORY

  ; Code: je .L_40e350	 RIP: 40e0c8	 Bytes: 6
  %loadMem_40e0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0c8 = call %struct.Memory* @routine_je_.L_40e350(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0c8, i8* %BRANCH_TAKEN, i64 648, i64 6, i64 6)
  store %struct.Memory* %call_40e0c8, %struct.Memory** %MEMORY

  %loadBr_40e0c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e0c8 = icmp eq i8 %loadBr_40e0c8, 1
  br i1 %cmpBr_40e0c8, label %block_.L_40e350, label %block_40e0ce

block_40e0ce:
  ; Code: cmpl $0x0, -0x208(%rbp)	 RIP: 40e0ce	 Bytes: 7
  %loadMem_40e0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0ce = call %struct.Memory* @routine_cmpl__0x0__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0ce)
  store %struct.Memory* %call_40e0ce, %struct.Memory** %MEMORY

  ; Code: je .L_40e350	 RIP: 40e0d5	 Bytes: 6
  %loadMem_40e0d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0d5 = call %struct.Memory* @routine_je_.L_40e350(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0d5, i8* %BRANCH_TAKEN, i64 635, i64 6, i64 6)
  store %struct.Memory* %call_40e0d5, %struct.Memory** %MEMORY

  %loadBr_40e0d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e0d5 = icmp eq i8 %loadBr_40e0d5, 1
  br i1 %cmpBr_40e0d5, label %block_.L_40e350, label %block_40e0db

block_40e0db:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 40e0db	 Bytes: 4
  %loadMem_40e0db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0db = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0db)
  store %struct.Memory* %call_40e0db, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp,%rax,4), %ecx	 RIP: 40e0df	 Bytes: 4
  %loadMem_40e0df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0df = call %struct.Memory* @routine_movl_MINUS0x60__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0df)
  store %struct.Memory* %call_40e0df, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %edi	 RIP: 40e0e3	 Bytes: 6
  %loadMem_40e0e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0e3 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0e3)
  store %struct.Memory* %call_40e0e3, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %esi	 RIP: 40e0e9	 Bytes: 6
  %loadMem_40e0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0e9 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0e9)
  store %struct.Memory* %call_40e0e9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x270(%rbp)	 RIP: 40e0ef	 Bytes: 6
  %loadMem_40e0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0ef = call %struct.Memory* @routine_movl__ecx__MINUS0x270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0ef)
  store %struct.Memory* %call_40e0ef, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40e0f5	 Bytes: 5
  %loadMem1_40e0f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e0f5 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e0f5, i64 421979, i64 5, i64 5)
  store %struct.Memory* %call1_40e0f5, %struct.Memory** %MEMORY

  %loadMem2_40e0f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e0f5 = load i64, i64* %3
  %call2_40e0f5 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40e0f5, %struct.Memory* %loadMem2_40e0f5)
  store %struct.Memory* %call2_40e0f5, %struct.Memory** %MEMORY

  ; Code: leaq -0x20c(%rbp), %rdx	 RIP: 40e0fa	 Bytes: 7
  %loadMem_40e0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e0fa = call %struct.Memory* @routine_leaq_MINUS0x20c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e0fa)
  store %struct.Memory* %call_40e0fa, %struct.Memory** %MEMORY

  ; Code: leaq -0x210(%rbp), %rcx	 RIP: 40e101	 Bytes: 7
  %loadMem_40e101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e101 = call %struct.Memory* @routine_leaq_MINUS0x210__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e101)
  store %struct.Memory* %call_40e101, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %r8	 RIP: 40e108	 Bytes: 10
  %loadMem_40e108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e108 = call %struct.Memory* @routine_movq__0x4b28d0___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e108)
  store %struct.Memory* %call_40e108, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r9	 RIP: 40e112	 Bytes: 7
  %loadMem_40e112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e112 = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e112)
  store %struct.Memory* %call_40e112, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r9	 RIP: 40e119	 Bytes: 4
  %loadMem_40e119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e119 = call %struct.Memory* @routine_shlq__0x6___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e119)
  store %struct.Memory* %call_40e119, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40e11d	 Bytes: 3
  %loadMem_40e11d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e11d = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e11d)
  store %struct.Memory* %call_40e11d, %struct.Memory** %MEMORY

  ; Code: imull (%r8), %eax	 RIP: 40e120	 Bytes: 4
  %loadMem_40e120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e120 = call %struct.Memory* @routine_imull___r8____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e120)
  store %struct.Memory* %call_40e120, %struct.Memory** %MEMORY

  ; Code: imull 0x4b2a50, %eax	 RIP: 40e124	 Bytes: 8
  %loadMem_40e124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e124 = call %struct.Memory* @routine_imull_0x4b2a50___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e124)
  store %struct.Memory* %call_40e124, %struct.Memory** %MEMORY

  ; Code: movl -0x1bc(%rbp), %esi	 RIP: 40e12c	 Bytes: 6
  %loadMem_40e12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e12c = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e12c)
  store %struct.Memory* %call_40e12c, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x278(%rbp)	 RIP: 40e132	 Bytes: 7
  %loadMem_40e132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e132 = call %struct.Memory* @routine_movq__rcx__MINUS0x278__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e132)
  store %struct.Memory* %call_40e132, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40e139	 Bytes: 2
  %loadMem_40e139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e139 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e139)
  store %struct.Memory* %call_40e139, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40e13b	 Bytes: 2
  %loadMem_40e13b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e13b = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e13b)
  store %struct.Memory* %call_40e13b, %struct.Memory** %MEMORY

  ; Code: sarl $0x5, %eax	 RIP: 40e13d	 Bytes: 3
  %loadMem_40e13d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e13d = call %struct.Memory* @routine_sarl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e13d)
  store %struct.Memory* %call_40e13d, %struct.Memory** %MEMORY

  ; Code: movl -0x270(%rbp), %esi	 RIP: 40e140	 Bytes: 6
  %loadMem_40e140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e140 = call %struct.Memory* @routine_movl_MINUS0x270__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e140)
  store %struct.Memory* %call_40e140, %struct.Memory** %MEMORY

  ; Code: subl %eax, %esi	 RIP: 40e146	 Bytes: 2
  %loadMem_40e146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e146 = call %struct.Memory* @routine_subl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e146)
  store %struct.Memory* %call_40e146, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r8	 RIP: 40e148	 Bytes: 4
  %loadMem_40e148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e148 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e148)
  store %struct.Memory* %call_40e148, %struct.Memory** %MEMORY

  ; Code: subl -0x1b0(%rbp,%r8,4), %esi	 RIP: 40e14c	 Bytes: 8
  %loadMem_40e14c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e14c = call %struct.Memory* @routine_subl_MINUS0x1b0__rbp__r8_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e14c)
  store %struct.Memory* %call_40e14c, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %esi, %xmm0	 RIP: 40e154	 Bytes: 4
  %loadMem_40e154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e154 = call %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e154)
  store %struct.Memory* %call_40e154, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x218(%rbp)	 RIP: 40e158	 Bytes: 8
  %loadMem_40e158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e158 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e158)
  store %struct.Memory* %call_40e158, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %edi	 RIP: 40e160	 Bytes: 6
  %loadMem_40e160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e160 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e160)
  store %struct.Memory* %call_40e160, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %esi	 RIP: 40e166	 Bytes: 3
  %loadMem_40e166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e166 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e166)
  store %struct.Memory* %call_40e166, %struct.Memory** %MEMORY

  ; Code: movq -0x278(%rbp), %rcx	 RIP: 40e169	 Bytes: 7
  %loadMem_40e169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e169 = call %struct.Memory* @routine_movq_MINUS0x278__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e169)
  store %struct.Memory* %call_40e169, %struct.Memory** %MEMORY

  ; Code: callq .levrun_linfo_c2x2	 RIP: 40e170	 Bytes: 5
  %loadMem1_40e170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e170 = call %struct.Memory* @routine_callq_.levrun_linfo_c2x2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e170, i64 650144, i64 5, i64 5)
  store %struct.Memory* %call1_40e170, %struct.Memory** %MEMORY

  %loadMem2_40e170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e170 = load i64, i64* %3
  %call2_40e170 = call %struct.Memory* @sub_4acd10.levrun_linfo_c2x2(%struct.State* %0, i64  %loadPC_40e170, %struct.Memory* %loadMem2_40e170)
  store %struct.Memory* %call2_40e170, %struct.Memory** %MEMORY

  ; Code: movsd -0x218(%rbp), %xmm0	 RIP: 40e175	 Bytes: 8
  %loadMem_40e175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e175 = call %struct.Memory* @routine_movsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e175)
  store %struct.Memory* %call_40e175, %struct.Memory** %MEMORY

  ; Code: mulsd -0x218(%rbp), %xmm0	 RIP: 40e17d	 Bytes: 8
  %loadMem_40e17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e17d = call %struct.Memory* @routine_mulsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e17d)
  store %struct.Memory* %call_40e17d, %struct.Memory** %MEMORY

  ; Code: movsd -0x228(%rbp), %xmm1	 RIP: 40e185	 Bytes: 8
  %loadMem_40e185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e185 = call %struct.Memory* @routine_movsd_MINUS0x228__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e185)
  store %struct.Memory* %call_40e185, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x20c(%rbp), %xmm2	 RIP: 40e18d	 Bytes: 8
  %loadMem_40e18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e18d = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x20c__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e18d)
  store %struct.Memory* %call_40e18d, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 40e195	 Bytes: 4
  %loadMem_40e195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e195 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e195)
  store %struct.Memory* %call_40e195, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 40e199	 Bytes: 4
  %loadMem_40e199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e199 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e199)
  store %struct.Memory* %call_40e199, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x218(%rbp)	 RIP: 40e19d	 Bytes: 8
  %loadMem_40e19d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e19d = call %struct.Memory* @routine_movsd__xmm0__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e19d)
  store %struct.Memory* %call_40e19d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 40e1a5	 Bytes: 4
  %loadMem_40e1a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1a5 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1a5)
  store %struct.Memory* %call_40e1a5, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp,%rcx,4), %eax	 RIP: 40e1a9	 Bytes: 4
  %loadMem_40e1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1a9 = call %struct.Memory* @routine_movl_MINUS0x60__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1a9)
  store %struct.Memory* %call_40e1a9, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %edi	 RIP: 40e1ad	 Bytes: 6
  %loadMem_40e1ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1ad = call %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1ad)
  store %struct.Memory* %call_40e1ad, %struct.Memory** %MEMORY

  ; Code: movl -0x200(%rbp), %esi	 RIP: 40e1b3	 Bytes: 6
  %loadMem_40e1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1b3 = call %struct.Memory* @routine_movl_MINUS0x200__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1b3)
  store %struct.Memory* %call_40e1b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x27c(%rbp)	 RIP: 40e1b9	 Bytes: 6
  %loadMem_40e1b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1b9 = call %struct.Memory* @routine_movl__eax__MINUS0x27c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1b9)
  store %struct.Memory* %call_40e1b9, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40e1bf	 Bytes: 5
  %loadMem1_40e1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e1bf = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e1bf, i64 421777, i64 5, i64 5)
  store %struct.Memory* %call1_40e1bf, %struct.Memory** %MEMORY

  %loadMem2_40e1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e1bf = load i64, i64* %3
  %call2_40e1bf = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40e1bf, %struct.Memory* %loadMem2_40e1bf)
  store %struct.Memory* %call2_40e1bf, %struct.Memory** %MEMORY

  ; Code: leaq -0x20c(%rbp), %rdx	 RIP: 40e1c4	 Bytes: 7
  %loadMem_40e1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1c4 = call %struct.Memory* @routine_leaq_MINUS0x20c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1c4)
  store %struct.Memory* %call_40e1c4, %struct.Memory** %MEMORY

  ; Code: leaq -0x210(%rbp), %rcx	 RIP: 40e1cb	 Bytes: 7
  %loadMem_40e1cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1cb = call %struct.Memory* @routine_leaq_MINUS0x210__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1cb)
  store %struct.Memory* %call_40e1cb, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %r8	 RIP: 40e1d2	 Bytes: 10
  %loadMem_40e1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1d2 = call %struct.Memory* @routine_movq__0x4b28d0___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1d2)
  store %struct.Memory* %call_40e1d2, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r9	 RIP: 40e1dc	 Bytes: 7
  %loadMem_40e1dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1dc = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1dc)
  store %struct.Memory* %call_40e1dc, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r9	 RIP: 40e1e3	 Bytes: 4
  %loadMem_40e1e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1e3 = call %struct.Memory* @routine_shlq__0x6___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1e3)
  store %struct.Memory* %call_40e1e3, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40e1e7	 Bytes: 3
  %loadMem_40e1e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1e7 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1e7)
  store %struct.Memory* %call_40e1e7, %struct.Memory** %MEMORY

  ; Code: imull (%r8), %eax	 RIP: 40e1ea	 Bytes: 4
  %loadMem_40e1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1ea = call %struct.Memory* @routine_imull___r8____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1ea)
  store %struct.Memory* %call_40e1ea, %struct.Memory** %MEMORY

  ; Code: imull 0x4b2a50, %eax	 RIP: 40e1ee	 Bytes: 8
  %loadMem_40e1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1ee = call %struct.Memory* @routine_imull_0x4b2a50___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1ee)
  store %struct.Memory* %call_40e1ee, %struct.Memory** %MEMORY

  ; Code: movl -0x1bc(%rbp), %esi	 RIP: 40e1f6	 Bytes: 6
  %loadMem_40e1f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1f6 = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1f6)
  store %struct.Memory* %call_40e1f6, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x288(%rbp)	 RIP: 40e1fc	 Bytes: 7
  %loadMem_40e1fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e1fc = call %struct.Memory* @routine_movq__rcx__MINUS0x288__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e1fc)
  store %struct.Memory* %call_40e1fc, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40e203	 Bytes: 2
  %loadMem_40e203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e203 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e203)
  store %struct.Memory* %call_40e203, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40e205	 Bytes: 2
  %loadMem_40e205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e205 = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e205)
  store %struct.Memory* %call_40e205, %struct.Memory** %MEMORY

  ; Code: sarl $0x5, %eax	 RIP: 40e207	 Bytes: 3
  %loadMem_40e207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e207 = call %struct.Memory* @routine_sarl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e207)
  store %struct.Memory* %call_40e207, %struct.Memory** %MEMORY

  ; Code: movl -0x27c(%rbp), %esi	 RIP: 40e20a	 Bytes: 6
  %loadMem_40e20a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e20a = call %struct.Memory* @routine_movl_MINUS0x27c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e20a)
  store %struct.Memory* %call_40e20a, %struct.Memory** %MEMORY

  ; Code: subl %eax, %esi	 RIP: 40e210	 Bytes: 2
  %loadMem_40e210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e210 = call %struct.Memory* @routine_subl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e210)
  store %struct.Memory* %call_40e210, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r8	 RIP: 40e212	 Bytes: 4
  %loadMem_40e212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e212 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e212)
  store %struct.Memory* %call_40e212, %struct.Memory** %MEMORY

  ; Code: subl -0x1b0(%rbp,%r8,4), %esi	 RIP: 40e216	 Bytes: 8
  %loadMem_40e216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e216 = call %struct.Memory* @routine_subl_MINUS0x1b0__rbp__r8_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e216)
  store %struct.Memory* %call_40e216, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %esi, %xmm0	 RIP: 40e21e	 Bytes: 4
  %loadMem_40e21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e21e = call %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e21e)
  store %struct.Memory* %call_40e21e, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x220(%rbp)	 RIP: 40e222	 Bytes: 8
  %loadMem_40e222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e222 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e222)
  store %struct.Memory* %call_40e222, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %edi	 RIP: 40e22a	 Bytes: 6
  %loadMem_40e22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e22a = call %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e22a)
  store %struct.Memory* %call_40e22a, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %esi	 RIP: 40e230	 Bytes: 3
  %loadMem_40e230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e230 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e230)
  store %struct.Memory* %call_40e230, %struct.Memory** %MEMORY

  ; Code: movq -0x288(%rbp), %rcx	 RIP: 40e233	 Bytes: 7
  %loadMem_40e233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e233 = call %struct.Memory* @routine_movq_MINUS0x288__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e233)
  store %struct.Memory* %call_40e233, %struct.Memory** %MEMORY

  ; Code: callq .levrun_linfo_c2x2	 RIP: 40e23a	 Bytes: 5
  %loadMem1_40e23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e23a = call %struct.Memory* @routine_callq_.levrun_linfo_c2x2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e23a, i64 649942, i64 5, i64 5)
  store %struct.Memory* %call1_40e23a, %struct.Memory** %MEMORY

  %loadMem2_40e23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e23a = load i64, i64* %3
  %call2_40e23a = call %struct.Memory* @sub_4acd10.levrun_linfo_c2x2(%struct.State* %0, i64  %loadPC_40e23a, %struct.Memory* %loadMem2_40e23a)
  store %struct.Memory* %call2_40e23a, %struct.Memory** %MEMORY

  ; Code: movsd -0x220(%rbp), %xmm0	 RIP: 40e23f	 Bytes: 8
  %loadMem_40e23f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e23f = call %struct.Memory* @routine_movsd_MINUS0x220__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e23f)
  store %struct.Memory* %call_40e23f, %struct.Memory** %MEMORY

  ; Code: mulsd -0x220(%rbp), %xmm0	 RIP: 40e247	 Bytes: 8
  %loadMem_40e247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e247 = call %struct.Memory* @routine_mulsd_MINUS0x220__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e247)
  store %struct.Memory* %call_40e247, %struct.Memory** %MEMORY

  ; Code: movsd -0x228(%rbp), %xmm1	 RIP: 40e24f	 Bytes: 8
  %loadMem_40e24f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e24f = call %struct.Memory* @routine_movsd_MINUS0x228__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e24f)
  store %struct.Memory* %call_40e24f, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x20c(%rbp), %xmm2	 RIP: 40e257	 Bytes: 8
  %loadMem_40e257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e257 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x20c__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e257)
  store %struct.Memory* %call_40e257, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 40e25f	 Bytes: 4
  %loadMem_40e25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e25f = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e25f)
  store %struct.Memory* %call_40e25f, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 40e263	 Bytes: 4
  %loadMem_40e263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e263 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e263)
  store %struct.Memory* %call_40e263, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x220(%rbp)	 RIP: 40e267	 Bytes: 8
  %loadMem_40e267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e267 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e267)
  store %struct.Memory* %call_40e267, %struct.Memory** %MEMORY

  ; Code: movsd -0x218(%rbp), %xmm0	 RIP: 40e26f	 Bytes: 8
  %loadMem_40e26f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e26f = call %struct.Memory* @routine_movsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e26f)
  store %struct.Memory* %call_40e26f, %struct.Memory** %MEMORY

  ; Code: ucomisd -0x220(%rbp), %xmm0	 RIP: 40e277	 Bytes: 8
  %loadMem_40e277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e277 = call %struct.Memory* @routine_ucomisd_MINUS0x220__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e277)
  store %struct.Memory* %call_40e277, %struct.Memory** %MEMORY

  ; Code: jne .L_40e2e0	 RIP: 40e27f	 Bytes: 6
  %loadMem_40e27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e27f = call %struct.Memory* @routine_jne_.L_40e2e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e27f, i8* %BRANCH_TAKEN, i64 97, i64 6, i64 6)
  store %struct.Memory* %call_40e27f, %struct.Memory** %MEMORY

  %loadBr_40e27f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e27f = icmp eq i8 %loadBr_40e27f, 1
  br i1 %cmpBr_40e27f, label %block_.L_40e2e0, label %block_40e285

block_40e285:
  ; Code: jp .L_40e2e0	 RIP: 40e285	 Bytes: 6
  %loadMem_40e285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e285 = call %struct.Memory* @routine_jp_.L_40e2e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e285, i8* %BRANCH_TAKEN, i64 91, i64 6, i64 6)
  store %struct.Memory* %call_40e285, %struct.Memory** %MEMORY

  %loadBr_40e285 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e285 = icmp eq i8 %loadBr_40e285, 1
  br i1 %cmpBr_40e285, label %block_.L_40e2e0, label %block_40e28b

block_40e28b:
  ; Code: movl -0x204(%rbp), %edi	 RIP: 40e28b	 Bytes: 6
  %loadMem_40e28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e28b = call %struct.Memory* @routine_movl_MINUS0x204__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e28b)
  store %struct.Memory* %call_40e28b, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e291	 Bytes: 5
  %loadMem1_40e291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e291 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e291, i64 -53905, i64 5, i64 5)
  store %struct.Memory* %call1_40e291, %struct.Memory** %MEMORY

  %loadMem2_40e291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e291 = load i64, i64* %3
  %call2_40e291 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e291, %struct.Memory* %loadMem2_40e291)
  store %struct.Memory* %call2_40e291, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %edi	 RIP: 40e296	 Bytes: 6
  %loadMem_40e296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e296 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e296)
  store %struct.Memory* %call_40e296, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28c(%rbp)	 RIP: 40e29c	 Bytes: 6
  %loadMem_40e29c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e29c = call %struct.Memory* @routine_movl__eax__MINUS0x28c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e29c)
  store %struct.Memory* %call_40e29c, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e2a2	 Bytes: 5
  %loadMem1_40e2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e2a2 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e2a2, i64 -53922, i64 5, i64 5)
  store %struct.Memory* %call1_40e2a2, %struct.Memory** %MEMORY

  %loadMem2_40e2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e2a2 = load i64, i64* %3
  %call2_40e2a2 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e2a2, %struct.Memory* %loadMem2_40e2a2)
  store %struct.Memory* %call2_40e2a2, %struct.Memory** %MEMORY

  ; Code: movl -0x28c(%rbp), %edi	 RIP: 40e2a7	 Bytes: 6
  %loadMem_40e2a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2a7 = call %struct.Memory* @routine_movl_MINUS0x28c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2a7)
  store %struct.Memory* %call_40e2a7, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %edi	 RIP: 40e2ad	 Bytes: 2
  %loadMem_40e2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2ad = call %struct.Memory* @routine_cmpl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2ad)
  store %struct.Memory* %call_40e2ad, %struct.Memory** %MEMORY

  ; Code: jge .L_40e2c6	 RIP: 40e2af	 Bytes: 6
  %loadMem_40e2af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2af = call %struct.Memory* @routine_jge_.L_40e2c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2af, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40e2af, %struct.Memory** %MEMORY

  %loadBr_40e2af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e2af = icmp eq i8 %loadBr_40e2af, 1
  br i1 %cmpBr_40e2af, label %block_.L_40e2c6, label %block_40e2b5

block_40e2b5:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40e2b5	 Bytes: 6
  %loadMem_40e2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2b5 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2b5)
  store %struct.Memory* %call_40e2b5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x290(%rbp)	 RIP: 40e2bb	 Bytes: 6
  %loadMem_40e2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2bb = call %struct.Memory* @routine_movl__eax__MINUS0x290__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2bb)
  store %struct.Memory* %call_40e2bb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e2d2	 RIP: 40e2c1	 Bytes: 5
  %loadMem_40e2c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2c1 = call %struct.Memory* @routine_jmpq_.L_40e2d2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2c1, i64 17, i64 5)
  store %struct.Memory* %call_40e2c1, %struct.Memory** %MEMORY

  br label %block_.L_40e2d2

  ; Code: .L_40e2c6:	 RIP: 40e2c6	 Bytes: 0
block_.L_40e2c6:

  ; Code: movl -0x208(%rbp), %eax	 RIP: 40e2c6	 Bytes: 6
  %loadMem_40e2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2c6 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2c6)
  store %struct.Memory* %call_40e2c6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x290(%rbp)	 RIP: 40e2cc	 Bytes: 6
  %loadMem_40e2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2cc = call %struct.Memory* @routine_movl__eax__MINUS0x290__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2cc)
  store %struct.Memory* %call_40e2cc, %struct.Memory** %MEMORY

  ; Code: .L_40e2d2:	 RIP: 40e2d2	 Bytes: 0
  br label %block_.L_40e2d2
block_.L_40e2d2:

  ; Code: movl -0x290(%rbp), %eax	 RIP: 40e2d2	 Bytes: 6
  %loadMem_40e2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2d2 = call %struct.Memory* @routine_movl_MINUS0x290__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2d2)
  store %struct.Memory* %call_40e2d2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40e2d8	 Bytes: 3
  %loadMem_40e2d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2d8 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2d8)
  store %struct.Memory* %call_40e2d8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e316	 RIP: 40e2db	 Bytes: 5
  %loadMem_40e2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2db = call %struct.Memory* @routine_jmpq_.L_40e316(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2db, i64 59, i64 5)
  store %struct.Memory* %call_40e2db, %struct.Memory** %MEMORY

  br label %block_.L_40e316

  ; Code: .L_40e2e0:	 RIP: 40e2e0	 Bytes: 0
block_.L_40e2e0:

  ; Code: movsd -0x218(%rbp), %xmm0	 RIP: 40e2e0	 Bytes: 8
  %loadMem_40e2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2e0 = call %struct.Memory* @routine_movsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2e0)
  store %struct.Memory* %call_40e2e0, %struct.Memory** %MEMORY

  ; Code: movsd -0x220(%rbp), %xmm1	 RIP: 40e2e8	 Bytes: 8
  %loadMem_40e2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2e8 = call %struct.Memory* @routine_movsd_MINUS0x220__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2e8)
  store %struct.Memory* %call_40e2e8, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 40e2f0	 Bytes: 4
  %loadMem_40e2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2f0 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2f0)
  store %struct.Memory* %call_40e2f0, %struct.Memory** %MEMORY

  ; Code: jbe .L_40e308	 RIP: 40e2f4	 Bytes: 6
  %loadMem_40e2f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2f4 = call %struct.Memory* @routine_jbe_.L_40e308(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2f4, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_40e2f4, %struct.Memory** %MEMORY

  %loadBr_40e2f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e2f4 = icmp eq i8 %loadBr_40e2f4, 1
  br i1 %cmpBr_40e2f4, label %block_.L_40e308, label %block_40e2fa

block_40e2fa:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40e2fa	 Bytes: 6
  %loadMem_40e2fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e2fa = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e2fa)
  store %struct.Memory* %call_40e2fa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40e300	 Bytes: 3
  %loadMem_40e300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e300 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e300)
  store %struct.Memory* %call_40e300, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e311	 RIP: 40e303	 Bytes: 5
  %loadMem_40e303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e303 = call %struct.Memory* @routine_jmpq_.L_40e311(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e303, i64 14, i64 5)
  store %struct.Memory* %call_40e303, %struct.Memory** %MEMORY

  br label %block_.L_40e311

  ; Code: .L_40e308:	 RIP: 40e308	 Bytes: 0
block_.L_40e308:

  ; Code: movl -0x208(%rbp), %eax	 RIP: 40e308	 Bytes: 6
  %loadMem_40e308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e308 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e308)
  store %struct.Memory* %call_40e308, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40e30e	 Bytes: 3
  %loadMem_40e30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e30e = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e30e)
  store %struct.Memory* %call_40e30e, %struct.Memory** %MEMORY

  ; Code: .L_40e311:	 RIP: 40e311	 Bytes: 0
  br label %block_.L_40e311
block_.L_40e311:

  ; Code: jmpq .L_40e316	 RIP: 40e311	 Bytes: 5
  %loadMem_40e311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e311 = call %struct.Memory* @routine_jmpq_.L_40e316(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e311, i64 5, i64 5)
  store %struct.Memory* %call_40e311, %struct.Memory** %MEMORY

  br label %block_.L_40e316

  ; Code: .L_40e316:	 RIP: 40e316	 Bytes: 0
block_.L_40e316:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 40e316	 Bytes: 3
  %loadMem_40e316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e316 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e316)
  store %struct.Memory* %call_40e316, %struct.Memory** %MEMORY

  ; Code: cmpl -0x204(%rbp), %eax	 RIP: 40e319	 Bytes: 6
  %loadMem_40e319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e319 = call %struct.Memory* @routine_cmpl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e319)
  store %struct.Memory* %call_40e319, %struct.Memory** %MEMORY

  ; Code: jne .L_40e336	 RIP: 40e31f	 Bytes: 6
  %loadMem_40e31f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e31f = call %struct.Memory* @routine_jne_.L_40e336(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e31f, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40e31f, %struct.Memory** %MEMORY

  %loadBr_40e31f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e31f = icmp eq i8 %loadBr_40e31f, 1
  br i1 %cmpBr_40e31f, label %block_.L_40e336, label %block_40e325

block_40e325:
  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40e325	 Bytes: 6
  %loadMem_40e325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e325 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e325)
  store %struct.Memory* %call_40e325, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x294(%rbp)	 RIP: 40e32b	 Bytes: 6
  %loadMem_40e32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e32b = call %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e32b)
  store %struct.Memory* %call_40e32b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e342	 RIP: 40e331	 Bytes: 5
  %loadMem_40e331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e331 = call %struct.Memory* @routine_jmpq_.L_40e342(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e331, i64 17, i64 5)
  store %struct.Memory* %call_40e331, %struct.Memory** %MEMORY

  br label %block_.L_40e342

  ; Code: .L_40e336:	 RIP: 40e336	 Bytes: 0
block_.L_40e336:

  ; Code: movl -0x200(%rbp), %eax	 RIP: 40e336	 Bytes: 6
  %loadMem_40e336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e336 = call %struct.Memory* @routine_movl_MINUS0x200__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e336)
  store %struct.Memory* %call_40e336, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x294(%rbp)	 RIP: 40e33c	 Bytes: 6
  %loadMem_40e33c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e33c = call %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e33c)
  store %struct.Memory* %call_40e33c, %struct.Memory** %MEMORY

  ; Code: .L_40e342:	 RIP: 40e342	 Bytes: 0
  br label %block_.L_40e342
block_.L_40e342:

  ; Code: movl -0x294(%rbp), %eax	 RIP: 40e342	 Bytes: 6
  %loadMem_40e342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e342 = call %struct.Memory* @routine_movl_MINUS0x294__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e342)
  store %struct.Memory* %call_40e342, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 40e348	 Bytes: 3
  %loadMem_40e348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e348 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e348)
  store %struct.Memory* %call_40e348, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e3e4	 RIP: 40e34b	 Bytes: 5
  %loadMem_40e34b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e34b = call %struct.Memory* @routine_jmpq_.L_40e3e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e34b, i64 153, i64 5)
  store %struct.Memory* %call_40e34b, %struct.Memory** %MEMORY

  br label %block_.L_40e3e4

  ; Code: .L_40e350:	 RIP: 40e350	 Bytes: 0
block_.L_40e350:

  ; Code: movl -0x204(%rbp), %eax	 RIP: 40e350	 Bytes: 6
  %loadMem_40e350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e350 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e350)
  store %struct.Memory* %call_40e350, %struct.Memory** %MEMORY

  ; Code: cmpl -0x208(%rbp), %eax	 RIP: 40e356	 Bytes: 6
  %loadMem_40e356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e356 = call %struct.Memory* @routine_cmpl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e356)
  store %struct.Memory* %call_40e356, %struct.Memory** %MEMORY

  ; Code: jne .L_40e379	 RIP: 40e35c	 Bytes: 6
  %loadMem_40e35c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e35c = call %struct.Memory* @routine_jne_.L_40e379(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e35c, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_40e35c, %struct.Memory** %MEMORY

  %loadBr_40e35c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e35c = icmp eq i8 %loadBr_40e35c, 1
  br i1 %cmpBr_40e35c, label %block_.L_40e379, label %block_40e362

block_40e362:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40e362	 Bytes: 6
  %loadMem_40e362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e362 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e362)
  store %struct.Memory* %call_40e362, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40e368	 Bytes: 3
  %loadMem_40e368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e368 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e368)
  store %struct.Memory* %call_40e368, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40e36b	 Bytes: 6
  %loadMem_40e36b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e36b = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e36b)
  store %struct.Memory* %call_40e36b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 40e371	 Bytes: 3
  %loadMem_40e371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e371 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e371)
  store %struct.Memory* %call_40e371, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e3df	 RIP: 40e374	 Bytes: 5
  %loadMem_40e374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e374 = call %struct.Memory* @routine_jmpq_.L_40e3df(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e374, i64 107, i64 5)
  store %struct.Memory* %call_40e374, %struct.Memory** %MEMORY

  br label %block_.L_40e3df

  ; Code: .L_40e379:	 RIP: 40e379	 Bytes: 0
block_.L_40e379:

  ; Code: cmpl $0x0, -0x204(%rbp)	 RIP: 40e379	 Bytes: 7
  %loadMem_40e379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e379 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e379)
  store %struct.Memory* %call_40e379, %struct.Memory** %MEMORY

  ; Code: jne .L_40e397	 RIP: 40e380	 Bytes: 6
  %loadMem_40e380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e380 = call %struct.Memory* @routine_jne_.L_40e397(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e380, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40e380, %struct.Memory** %MEMORY

  %loadBr_40e380 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e380 = icmp eq i8 %loadBr_40e380, 1
  br i1 %cmpBr_40e380, label %block_.L_40e397, label %block_40e386

block_40e386:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40e386	 Bytes: 6
  %loadMem_40e386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e386 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e386)
  store %struct.Memory* %call_40e386, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x298(%rbp)	 RIP: 40e38c	 Bytes: 6
  %loadMem_40e38c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e38c = call %struct.Memory* @routine_movl__eax__MINUS0x298__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e38c)
  store %struct.Memory* %call_40e38c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e3a3	 RIP: 40e392	 Bytes: 5
  %loadMem_40e392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e392 = call %struct.Memory* @routine_jmpq_.L_40e3a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e392, i64 17, i64 5)
  store %struct.Memory* %call_40e392, %struct.Memory** %MEMORY

  br label %block_.L_40e3a3

  ; Code: .L_40e397:	 RIP: 40e397	 Bytes: 0
block_.L_40e397:

  ; Code: movl -0x208(%rbp), %eax	 RIP: 40e397	 Bytes: 6
  %loadMem_40e397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e397 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e397)
  store %struct.Memory* %call_40e397, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x298(%rbp)	 RIP: 40e39d	 Bytes: 6
  %loadMem_40e39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e39d = call %struct.Memory* @routine_movl__eax__MINUS0x298__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e39d)
  store %struct.Memory* %call_40e39d, %struct.Memory** %MEMORY

  ; Code: .L_40e3a3:	 RIP: 40e3a3	 Bytes: 0
  br label %block_.L_40e3a3
block_.L_40e3a3:

  ; Code: movl -0x298(%rbp), %eax	 RIP: 40e3a3	 Bytes: 6
  %loadMem_40e3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3a3 = call %struct.Memory* @routine_movl_MINUS0x298__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3a3)
  store %struct.Memory* %call_40e3a3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40e3a9	 Bytes: 3
  %loadMem_40e3a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3a9 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3a9)
  store %struct.Memory* %call_40e3a9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x204(%rbp)	 RIP: 40e3ac	 Bytes: 7
  %loadMem_40e3ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3ac = call %struct.Memory* @routine_cmpl__0x0__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3ac)
  store %struct.Memory* %call_40e3ac, %struct.Memory** %MEMORY

  ; Code: jne .L_40e3ca	 RIP: 40e3b3	 Bytes: 6
  %loadMem_40e3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3b3 = call %struct.Memory* @routine_jne_.L_40e3ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3b3, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40e3b3, %struct.Memory** %MEMORY

  %loadBr_40e3b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e3b3 = icmp eq i8 %loadBr_40e3b3, 1
  br i1 %cmpBr_40e3b3, label %block_.L_40e3ca, label %block_40e3b9

block_40e3b9:
  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40e3b9	 Bytes: 6
  %loadMem_40e3b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3b9 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3b9)
  store %struct.Memory* %call_40e3b9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x29c(%rbp)	 RIP: 40e3bf	 Bytes: 6
  %loadMem_40e3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3bf = call %struct.Memory* @routine_movl__eax__MINUS0x29c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3bf)
  store %struct.Memory* %call_40e3bf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e3d6	 RIP: 40e3c5	 Bytes: 5
  %loadMem_40e3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3c5 = call %struct.Memory* @routine_jmpq_.L_40e3d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3c5, i64 17, i64 5)
  store %struct.Memory* %call_40e3c5, %struct.Memory** %MEMORY

  br label %block_.L_40e3d6

  ; Code: .L_40e3ca:	 RIP: 40e3ca	 Bytes: 0
block_.L_40e3ca:

  ; Code: movl -0x200(%rbp), %eax	 RIP: 40e3ca	 Bytes: 6
  %loadMem_40e3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3ca = call %struct.Memory* @routine_movl_MINUS0x200__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3ca)
  store %struct.Memory* %call_40e3ca, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x29c(%rbp)	 RIP: 40e3d0	 Bytes: 6
  %loadMem_40e3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3d0 = call %struct.Memory* @routine_movl__eax__MINUS0x29c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3d0)
  store %struct.Memory* %call_40e3d0, %struct.Memory** %MEMORY

  ; Code: .L_40e3d6:	 RIP: 40e3d6	 Bytes: 0
  br label %block_.L_40e3d6
block_.L_40e3d6:

  ; Code: movl -0x29c(%rbp), %eax	 RIP: 40e3d6	 Bytes: 6
  %loadMem_40e3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3d6 = call %struct.Memory* @routine_movl_MINUS0x29c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3d6)
  store %struct.Memory* %call_40e3d6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 40e3dc	 Bytes: 3
  %loadMem_40e3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3dc = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3dc)
  store %struct.Memory* %call_40e3dc, %struct.Memory** %MEMORY

  ; Code: .L_40e3df:	 RIP: 40e3df	 Bytes: 0
  br label %block_.L_40e3df
block_.L_40e3df:

  ; Code: jmpq .L_40e3e4	 RIP: 40e3df	 Bytes: 5
  %loadMem_40e3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3df = call %struct.Memory* @routine_jmpq_.L_40e3e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3df, i64 5, i64 5)
  store %struct.Memory* %call_40e3df, %struct.Memory** %MEMORY

  br label %block_.L_40e3e4

  ; Code: .L_40e3e4:	 RIP: 40e3e4	 Bytes: 0
block_.L_40e3e4:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 40e3e4	 Bytes: 8
  %loadMem_40e3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3e4 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3e4)
  store %struct.Memory* %call_40e3e4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x934(%rax)	 RIP: 40e3ec	 Bytes: 7
  %loadMem_40e3ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3ec = call %struct.Memory* @routine_cmpl__0x0__0x934__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3ec)
  store %struct.Memory* %call_40e3ec, %struct.Memory** %MEMORY

  ; Code: jne .L_40e424	 RIP: 40e3f3	 Bytes: 6
  %loadMem_40e3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3f3 = call %struct.Memory* @routine_jne_.L_40e424(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3f3, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_40e3f3, %struct.Memory** %MEMORY

  %loadBr_40e3f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e3f3 = icmp eq i8 %loadBr_40e3f3, 1
  br i1 %cmpBr_40e3f3, label %block_.L_40e424, label %block_40e3f9

block_40e3f9:
  ; Code: movq 0x6cb900, %rax	 RIP: 40e3f9	 Bytes: 8
  %loadMem_40e3f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e3f9 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e3f9)
  store %struct.Memory* %call_40e3f9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, 0x28(%rax)	 RIP: 40e401	 Bytes: 4
  %loadMem_40e401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e401 = call %struct.Memory* @routine_cmpl__0x4__0x28__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e401)
  store %struct.Memory* %call_40e401, %struct.Memory** %MEMORY

  ; Code: jge .L_40e424	 RIP: 40e405	 Bytes: 6
  %loadMem_40e405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e405 = call %struct.Memory* @routine_jge_.L_40e424(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e405, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_40e405, %struct.Memory** %MEMORY

  %loadBr_40e405 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e405 = icmp eq i8 %loadBr_40e405, 1
  br i1 %cmpBr_40e405, label %block_.L_40e424, label %block_40e40b

block_40e40b:
  ; Code: cmpl $0x80f, -0x3c(%rbp)	 RIP: 40e40b	 Bytes: 7
  %loadMem_40e40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e40b = call %struct.Memory* @routine_cmpl__0x80f__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e40b)
  store %struct.Memory* %call_40e40b, %struct.Memory** %MEMORY

  ; Code: jle .L_40e41f	 RIP: 40e412	 Bytes: 6
  %loadMem_40e412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e412 = call %struct.Memory* @routine_jle_.L_40e41f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e412, i8* %BRANCH_TAKEN, i64 13, i64 6, i64 6)
  store %struct.Memory* %call_40e412, %struct.Memory** %MEMORY

  %loadBr_40e412 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e412 = icmp eq i8 %loadBr_40e412, 1
  br i1 %cmpBr_40e412, label %block_.L_40e41f, label %block_40e418

block_40e418:
  ; Code: movl $0x80f, -0x3c(%rbp)	 RIP: 40e418	 Bytes: 7
  %loadMem_40e418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e418 = call %struct.Memory* @routine_movl__0x80f__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e418)
  store %struct.Memory* %call_40e418, %struct.Memory** %MEMORY

  ; Code: .L_40e41f:	 RIP: 40e41f	 Bytes: 0
  br label %block_.L_40e41f
block_.L_40e41f:

  ; Code: jmpq .L_40e424	 RIP: 40e41f	 Bytes: 5
  %loadMem_40e41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e41f = call %struct.Memory* @routine_jmpq_.L_40e424(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e41f, i64 5, i64 5)
  store %struct.Memory* %call_40e41f, %struct.Memory** %MEMORY

  br label %block_.L_40e424

  ; Code: .L_40e424:	 RIP: 40e424	 Bytes: 0
block_.L_40e424:

  ; Code: cmpl $0x0, -0x3c(%rbp)	 RIP: 40e424	 Bytes: 4
  %loadMem_40e424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e424 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e424)
  store %struct.Memory* %call_40e424, %struct.Memory** %MEMORY

  ; Code: je .L_40e507	 RIP: 40e428	 Bytes: 6
  %loadMem_40e428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e428 = call %struct.Memory* @routine_je_.L_40e507(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e428, i8* %BRANCH_TAKEN, i64 223, i64 6, i64 6)
  store %struct.Memory* %call_40e428, %struct.Memory** %MEMORY

  %loadBr_40e428 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e428 = icmp eq i8 %loadBr_40e428, 1
  br i1 %cmpBr_40e428, label %block_.L_40e507, label %block_40e42e

block_40e42e:
  ; Code: movl $0x1, %eax	 RIP: 40e42e	 Bytes: 5
  %loadMem_40e42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e42e = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e42e)
  store %struct.Memory* %call_40e42e, %struct.Memory** %MEMORY

  ; Code: movl $0xf0000, %ecx	 RIP: 40e433	 Bytes: 5
  %loadMem_40e433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e433 = call %struct.Memory* @routine_movl__0xf0000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e433)
  store %struct.Memory* %call_40e433, %struct.Memory** %MEMORY

  ; Code: movl -0x4(%rbp), %edx	 RIP: 40e438	 Bytes: 3
  %loadMem_40e438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e438 = call %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e438)
  store %struct.Memory* %call_40e438, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 40e43b	 Bytes: 3
  %loadMem_40e43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e43b = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e43b)
  store %struct.Memory* %call_40e43b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2a0(%rbp)	 RIP: 40e43e	 Bytes: 6
  %loadMem_40e43e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e43e = call %struct.Memory* @routine_movl__ecx__MINUS0x2a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e43e)
  store %struct.Memory* %call_40e43e, %struct.Memory** %MEMORY

  ; Code: movl %edx, %ecx	 RIP: 40e444	 Bytes: 2
  %loadMem_40e444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e444 = call %struct.Memory* @routine_movl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e444)
  store %struct.Memory* %call_40e444, %struct.Memory** %MEMORY

  ; Code: movl -0x2a0(%rbp), %edx	 RIP: 40e446	 Bytes: 6
  %loadMem_40e446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e446 = call %struct.Memory* @routine_movl_MINUS0x2a0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e446)
  store %struct.Memory* %call_40e446, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 40e44c	 Bytes: 2
  %loadMem_40e44c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e44c = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e44c)
  store %struct.Memory* %call_40e44c, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40e44e	 Bytes: 3
  %loadMem_40e44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e44e = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e44e)
  store %struct.Memory* %call_40e44e, %struct.Memory** %MEMORY

  ; Code: movq -0x1b8(%rbp), %rdi	 RIP: 40e451	 Bytes: 7
  %loadMem_40e451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e451 = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e451)
  store %struct.Memory* %call_40e451, %struct.Memory** %MEMORY

  ; Code: orq 0x1d0(%rdi), %rsi	 RIP: 40e458	 Bytes: 7
  %loadMem_40e458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e458 = call %struct.Memory* @routine_orq_0x1d0__rdi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e458)
  store %struct.Memory* %call_40e458, %struct.Memory** %MEMORY

  ; Code: movq %rsi, 0x1d0(%rdi)	 RIP: 40e45f	 Bytes: 7
  %loadMem_40e45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e45f = call %struct.Memory* @routine_movq__rsi__0x1d0__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e45f)
  store %struct.Memory* %call_40e45f, %struct.Memory** %MEMORY

  ; Code: cmpl -0x8(%rbp), %eax	 RIP: 40e466	 Bytes: 3
  %loadMem_40e466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e466 = call %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e466)
  store %struct.Memory* %call_40e466, %struct.Memory** %MEMORY

  ; Code: jle .L_40e47f	 RIP: 40e469	 Bytes: 6
  %loadMem_40e469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e469 = call %struct.Memory* @routine_jle_.L_40e47f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e469, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_40e469, %struct.Memory** %MEMORY

  %loadBr_40e469 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e469 = icmp eq i8 %loadBr_40e469, 1
  br i1 %cmpBr_40e469, label %block_.L_40e47f, label %block_40e46f

block_40e46f:
  ; Code: movl $0x1, %eax	 RIP: 40e46f	 Bytes: 5
  %loadMem_40e46f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e46f = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e46f)
  store %struct.Memory* %call_40e46f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a4(%rbp)	 RIP: 40e474	 Bytes: 6
  %loadMem_40e474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e474 = call %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e474)
  store %struct.Memory* %call_40e474, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e488	 RIP: 40e47a	 Bytes: 5
  %loadMem_40e47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e47a = call %struct.Memory* @routine_jmpq_.L_40e488(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e47a, i64 14, i64 5)
  store %struct.Memory* %call_40e47a, %struct.Memory** %MEMORY

  br label %block_.L_40e488

  ; Code: .L_40e47f:	 RIP: 40e47f	 Bytes: 0
block_.L_40e47f:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 40e47f	 Bytes: 3
  %loadMem_40e47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e47f = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e47f)
  store %struct.Memory* %call_40e47f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a4(%rbp)	 RIP: 40e482	 Bytes: 6
  %loadMem_40e482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e482 = call %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e482)
  store %struct.Memory* %call_40e482, %struct.Memory** %MEMORY

  ; Code: .L_40e488:	 RIP: 40e488	 Bytes: 0
  br label %block_.L_40e488
block_.L_40e488:

  ; Code: movl -0x2a4(%rbp), %eax	 RIP: 40e488	 Bytes: 6
  %loadMem_40e488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e488 = call %struct.Memory* @routine_movl_MINUS0x2a4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e488)
  store %struct.Memory* %call_40e488, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 40e48e	 Bytes: 3
  %loadMem_40e48e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e48e = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e48e)
  store %struct.Memory* %call_40e48e, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %edi	 RIP: 40e491	 Bytes: 3
  %loadMem_40e491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e491 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e491)
  store %struct.Memory* %call_40e491, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %esi	 RIP: 40e494	 Bytes: 3
  %loadMem_40e494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e494 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e494)
  store %struct.Memory* %call_40e494, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40e497	 Bytes: 5
  %loadMem1_40e497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e497 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e497, i64 421049, i64 5, i64 5)
  store %struct.Memory* %call1_40e497, %struct.Memory** %MEMORY

  %loadMem2_40e497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e497 = load i64, i64* %3
  %call2_40e497 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40e497, %struct.Memory* %loadMem2_40e497)
  store %struct.Memory* %call2_40e497, %struct.Memory** %MEMORY

  ; Code: movq -0x1e0(%rbp), %rcx	 RIP: 40e49c	 Bytes: 7
  %loadMem_40e49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e49c = call %struct.Memory* @routine_movq_MINUS0x1e0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e49c)
  store %struct.Memory* %call_40e49c, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rdx	 RIP: 40e4a3	 Bytes: 4
  %loadMem_40e4a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4a3 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4a3)
  store %struct.Memory* %call_40e4a3, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40e4a7	 Bytes: 3
  %loadMem_40e4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4a7 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4a7)
  store %struct.Memory* %call_40e4a7, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %eax	 RIP: 40e4aa	 Bytes: 3
  %loadMem_40e4aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4aa = call %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4aa)
  store %struct.Memory* %call_40e4aa, %struct.Memory** %MEMORY

  ; Code: movq -0x1e8(%rbp), %rcx	 RIP: 40e4ad	 Bytes: 7
  %loadMem_40e4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4ad = call %struct.Memory* @routine_movq_MINUS0x1e8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4ad)
  store %struct.Memory* %call_40e4ad, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rdx	 RIP: 40e4b4	 Bytes: 4
  %loadMem_40e4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4b4 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4b4)
  store %struct.Memory* %call_40e4b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40e4b8	 Bytes: 3
  %loadMem_40e4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4b8 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4b8)
  store %struct.Memory* %call_40e4b8, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %eax	 RIP: 40e4bb	 Bytes: 3
  %loadMem_40e4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4bb = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4bb)
  store %struct.Memory* %call_40e4bb, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40e4be	 Bytes: 3
  %loadMem_40e4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4be = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4be)
  store %struct.Memory* %call_40e4be, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 40e4c1	 Bytes: 3
  %loadMem_40e4c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4c1 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4c1)
  store %struct.Memory* %call_40e4c1, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x44(%rbp)	 RIP: 40e4c4	 Bytes: 7
  %loadMem_40e4c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4c4 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4c4)
  store %struct.Memory* %call_40e4c4, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %edi	 RIP: 40e4cb	 Bytes: 3
  %loadMem_40e4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4cb = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4cb)
  store %struct.Memory* %call_40e4cb, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %esi	 RIP: 40e4ce	 Bytes: 3
  %loadMem_40e4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4ce = call %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4ce)
  store %struct.Memory* %call_40e4ce, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40e4d1	 Bytes: 5
  %loadMem1_40e4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e4d1 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e4d1, i64 420991, i64 5, i64 5)
  store %struct.Memory* %call1_40e4d1, %struct.Memory** %MEMORY

  %loadMem2_40e4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e4d1 = load i64, i64* %3
  %call2_40e4d1 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40e4d1, %struct.Memory* %loadMem2_40e4d1)
  store %struct.Memory* %call2_40e4d1, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %rcx	 RIP: 40e4d6	 Bytes: 10
  %loadMem_40e4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4d6 = call %struct.Memory* @routine_movq__0x4b28d0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4d6)
  store %struct.Memory* %call_40e4d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %rdx	 RIP: 40e4e0	 Bytes: 7
  %loadMem_40e4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4e0 = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4e0)
  store %struct.Memory* %call_40e4e0, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40e4e7	 Bytes: 4
  %loadMem_40e4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4e7 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4e7)
  store %struct.Memory* %call_40e4e7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40e4eb	 Bytes: 3
  %loadMem_40e4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4eb = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4eb)
  store %struct.Memory* %call_40e4eb, %struct.Memory** %MEMORY

  ; Code: imull (%rcx), %eax	 RIP: 40e4ee	 Bytes: 3
  %loadMem_40e4ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4ee = call %struct.Memory* @routine_imull___rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4ee)
  store %struct.Memory* %call_40e4ee, %struct.Memory** %MEMORY

  ; Code: imull 0x4b2a50, %eax	 RIP: 40e4f1	 Bytes: 8
  %loadMem_40e4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4f1 = call %struct.Memory* @routine_imull_0x4b2a50___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4f1)
  store %struct.Memory* %call_40e4f1, %struct.Memory** %MEMORY

  ; Code: movl -0x1bc(%rbp), %ecx	 RIP: 40e4f9	 Bytes: 6
  %loadMem_40e4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4f9 = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4f9)
  store %struct.Memory* %call_40e4f9, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40e4ff	 Bytes: 2
  %loadMem_40e4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e4ff = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e4ff)
  store %struct.Memory* %call_40e4ff, %struct.Memory** %MEMORY

  ; Code: sarl $0x5, %eax	 RIP: 40e501	 Bytes: 3
  %loadMem_40e501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e501 = call %struct.Memory* @routine_sarl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e501)
  store %struct.Memory* %call_40e501, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 40e504	 Bytes: 3
  %loadMem_40e504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e504 = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e504)
  store %struct.Memory* %call_40e504, %struct.Memory** %MEMORY

  ; Code: .L_40e507:	 RIP: 40e507	 Bytes: 0
  br label %block_.L_40e507
block_.L_40e507:

  ; Code: movslq -0x30(%rbp), %rax	 RIP: 40e507	 Bytes: 4
  %loadMem_40e507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e507 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e507)
  store %struct.Memory* %call_40e507, %struct.Memory** %MEMORY

  ; Code: movl -0x1b0(%rbp,%rax,4), %ecx	 RIP: 40e50b	 Bytes: 7
  %loadMem_40e50b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e50b = call %struct.Memory* @routine_movl_MINUS0x1b0__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e50b)
  store %struct.Memory* %call_40e50b, %struct.Memory** %MEMORY

  ; Code: addl -0x1c(%rbp), %ecx	 RIP: 40e512	 Bytes: 3
  %loadMem_40e512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e512 = call %struct.Memory* @routine_addl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e512)
  store %struct.Memory* %call_40e512, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1c(%rbp)	 RIP: 40e515	 Bytes: 3
  %loadMem_40e515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e515 = call %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e515)
  store %struct.Memory* %call_40e515, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edi	 RIP: 40e518	 Bytes: 3
  %loadMem_40e518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e518 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e518)
  store %struct.Memory* %call_40e518, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e51b	 Bytes: 5
  %loadMem1_40e51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e51b = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e51b, i64 -54555, i64 5, i64 5)
  store %struct.Memory* %call1_40e51b, %struct.Memory** %MEMORY

  %loadMem2_40e51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e51b = load i64, i64* %3
  %call2_40e51b = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e51b, %struct.Memory* %loadMem2_40e51b)
  store %struct.Memory* %call2_40e51b, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %rdx	 RIP: 40e520	 Bytes: 10
  %loadMem_40e520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e520 = call %struct.Memory* @routine_movq__0x4b2750___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e520)
  store %struct.Memory* %call_40e520, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %rsi	 RIP: 40e52a	 Bytes: 7
  %loadMem_40e52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e52a = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e52a)
  store %struct.Memory* %call_40e52a, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 40e531	 Bytes: 4
  %loadMem_40e531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e531 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e531)
  store %struct.Memory* %call_40e531, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 40e535	 Bytes: 3
  %loadMem_40e535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e535 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e535)
  store %struct.Memory* %call_40e535, %struct.Memory** %MEMORY

  ; Code: imull (%rdx), %eax	 RIP: 40e538	 Bytes: 3
  %loadMem_40e538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e538 = call %struct.Memory* @routine_imull___rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e538)
  store %struct.Memory* %call_40e538, %struct.Memory** %MEMORY

  ; Code: movl -0x194(%rbp), %ecx	 RIP: 40e53b	 Bytes: 6
  %loadMem_40e53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e53b = call %struct.Memory* @routine_movl_MINUS0x194__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e53b)
  store %struct.Memory* %call_40e53b, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 40e541	 Bytes: 3
  %loadMem_40e541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e541 = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e541)
  store %struct.Memory* %call_40e541, %struct.Memory** %MEMORY

  ; Code: addl %ecx, %eax	 RIP: 40e544	 Bytes: 2
  %loadMem_40e544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e544 = call %struct.Memory* @routine_addl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e544)
  store %struct.Memory* %call_40e544, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %ecx	 RIP: 40e546	 Bytes: 6
  %loadMem_40e546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e546 = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e546)
  store %struct.Memory* %call_40e546, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 40e54c	 Bytes: 3
  %loadMem_40e54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e54c = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e54c)
  store %struct.Memory* %call_40e54c, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40e54f	 Bytes: 2
  %loadMem_40e54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e54f = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e54f)
  store %struct.Memory* %call_40e54f, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 40e551	 Bytes: 3
  %loadMem_40e551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e551 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e551)
  store %struct.Memory* %call_40e551, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 40e554	 Bytes: 2
  %loadMem_40e554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e554 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e554)
  store %struct.Memory* %call_40e554, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40e556	 Bytes: 5
  %loadMem1_40e556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e556 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e556, i64 420858, i64 5, i64 5)
  store %struct.Memory* %call1_40e556, %struct.Memory** %MEMORY

  %loadMem2_40e556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e556 = load i64, i64* %3
  %call2_40e556 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40e556, %struct.Memory* %loadMem2_40e556)
  store %struct.Memory* %call2_40e556, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %rdx	 RIP: 40e55b	 Bytes: 10
  %loadMem_40e55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e55b = call %struct.Memory* @routine_movq__0x4b28d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e55b)
  store %struct.Memory* %call_40e55b, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %r8	 RIP: 40e565	 Bytes: 7
  %loadMem_40e565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e565 = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e565)
  store %struct.Memory* %call_40e565, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40e56c	 Bytes: 4
  %loadMem_40e56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e56c = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e56c)
  store %struct.Memory* %call_40e56c, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdx	 RIP: 40e570	 Bytes: 3
  %loadMem_40e570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e570 = call %struct.Memory* @routine_addq__r8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e570)
  store %struct.Memory* %call_40e570, %struct.Memory** %MEMORY

  ; Code: imull (%rdx), %eax	 RIP: 40e573	 Bytes: 3
  %loadMem_40e573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e573 = call %struct.Memory* @routine_imull___rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e573)
  store %struct.Memory* %call_40e573, %struct.Memory** %MEMORY

  ; Code: movl -0x1c8(%rbp), %ecx	 RIP: 40e576	 Bytes: 6
  %loadMem_40e576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e576 = call %struct.Memory* @routine_movl_MINUS0x1c8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e576)
  store %struct.Memory* %call_40e576, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40e57c	 Bytes: 2
  %loadMem_40e57c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e57c = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e57c)
  store %struct.Memory* %call_40e57c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 40e57e	 Bytes: 4
  %loadMem_40e57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e57e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e57e)
  store %struct.Memory* %call_40e57e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp,%rdx,4)	 RIP: 40e582	 Bytes: 4
  %loadMem_40e582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e582 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e582)
  store %struct.Memory* %call_40e582, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 40e586	 Bytes: 3
  %loadMem_40e586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e586 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e586)
  store %struct.Memory* %call_40e586, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40e589	 Bytes: 3
  %loadMem_40e589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e589 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e589)
  store %struct.Memory* %call_40e589, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 40e58c	 Bytes: 3
  %loadMem_40e58c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e58c = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e58c)
  store %struct.Memory* %call_40e58c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40df40	 RIP: 40e58f	 Bytes: 5
  %loadMem_40e58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e58f = call %struct.Memory* @routine_jmpq_.L_40df40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e58f, i64 -1615, i64 5)
  store %struct.Memory* %call_40e58f, %struct.Memory** %MEMORY

  br label %block_.L_40df40

  ; Code: .L_40e594:	 RIP: 40e594	 Bytes: 0
block_.L_40e594:

  ; Code: movl $0x2, %eax	 RIP: 40e594	 Bytes: 5
  %loadMem_40e594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e594 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e594)
  store %struct.Memory* %call_40e594, %struct.Memory** %MEMORY

  ; Code: movq -0x1e0(%rbp), %rcx	 RIP: 40e599	 Bytes: 7
  %loadMem_40e599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e599 = call %struct.Memory* @routine_movq_MINUS0x1e0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e599)
  store %struct.Memory* %call_40e599, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rdx	 RIP: 40e5a0	 Bytes: 4
  %loadMem_40e5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5a0 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5a0)
  store %struct.Memory* %call_40e5a0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rcx,%rdx,4)	 RIP: 40e5a4	 Bytes: 7
  %loadMem_40e5a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5a4 = call %struct.Memory* @routine_movl__0x0____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5a4)
  store %struct.Memory* %call_40e5a4, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %esi	 RIP: 40e5ab	 Bytes: 3
  %loadMem_40e5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5ab = call %struct.Memory* @routine_movl_MINUS0x60__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5ab)
  store %struct.Memory* %call_40e5ab, %struct.Memory** %MEMORY

  ; Code: addl -0x5c(%rbp), %esi	 RIP: 40e5ae	 Bytes: 3
  %loadMem_40e5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5ae = call %struct.Memory* @routine_addl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5ae)
  store %struct.Memory* %call_40e5ae, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %esi	 RIP: 40e5b1	 Bytes: 3
  %loadMem_40e5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5b1 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5b1)
  store %struct.Memory* %call_40e5b1, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %esi	 RIP: 40e5b4	 Bytes: 3
  %loadMem_40e5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5b4 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5b4)
  store %struct.Memory* %call_40e5b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a8(%rbp)	 RIP: 40e5b7	 Bytes: 6
  %loadMem_40e5b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5b7 = call %struct.Memory* @routine_movl__eax__MINUS0x2a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5b7)
  store %struct.Memory* %call_40e5b7, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 40e5bd	 Bytes: 2
  %loadMem_40e5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5bd = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5bd)
  store %struct.Memory* %call_40e5bd, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40e5bf	 Bytes: 1
  %loadMem_40e5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5bf = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5bf)
  store %struct.Memory* %call_40e5bf, %struct.Memory** %MEMORY

  ; Code: movl -0x2a8(%rbp), %esi	 RIP: 40e5c0	 Bytes: 6
  %loadMem_40e5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5c0 = call %struct.Memory* @routine_movl_MINUS0x2a8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5c0)
  store %struct.Memory* %call_40e5c0, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40e5c6	 Bytes: 2
  %loadMem_40e5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5c6 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5c6)
  store %struct.Memory* %call_40e5c6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40e5c8	 Bytes: 8
  %loadMem_40e5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5c8 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5c8)
  store %struct.Memory* %call_40e5c8, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x3338(%rcx)	 RIP: 40e5d0	 Bytes: 6
  %loadMem_40e5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5d0 = call %struct.Memory* @routine_movl__eax__0x3338__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5d0)
  store %struct.Memory* %call_40e5d0, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 40e5d6	 Bytes: 3
  %loadMem_40e5d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5d6 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5d6)
  store %struct.Memory* %call_40e5d6, %struct.Memory** %MEMORY

  ; Code: subl -0x5c(%rbp), %eax	 RIP: 40e5d9	 Bytes: 3
  %loadMem_40e5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5d9 = call %struct.Memory* @routine_subl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5d9)
  store %struct.Memory* %call_40e5d9, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %eax	 RIP: 40e5dc	 Bytes: 3
  %loadMem_40e5dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5dc = call %struct.Memory* @routine_addl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5dc)
  store %struct.Memory* %call_40e5dc, %struct.Memory** %MEMORY

  ; Code: subl -0x54(%rbp), %eax	 RIP: 40e5df	 Bytes: 3
  %loadMem_40e5df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5df = call %struct.Memory* @routine_subl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5df)
  store %struct.Memory* %call_40e5df, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40e5e2	 Bytes: 1
  %loadMem_40e5e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5e2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5e2)
  store %struct.Memory* %call_40e5e2, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40e5e3	 Bytes: 2
  %loadMem_40e5e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5e3 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5e3)
  store %struct.Memory* %call_40e5e3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40e5e5	 Bytes: 8
  %loadMem_40e5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5e5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5e5)
  store %struct.Memory* %call_40e5e5, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x3438(%rcx)	 RIP: 40e5ed	 Bytes: 6
  %loadMem_40e5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5ed = call %struct.Memory* @routine_movl__eax__0x3438__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5ed)
  store %struct.Memory* %call_40e5ed, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 40e5f3	 Bytes: 3
  %loadMem_40e5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5f3 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5f3)
  store %struct.Memory* %call_40e5f3, %struct.Memory** %MEMORY

  ; Code: addl -0x5c(%rbp), %eax	 RIP: 40e5f6	 Bytes: 3
  %loadMem_40e5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5f6 = call %struct.Memory* @routine_addl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5f6)
  store %struct.Memory* %call_40e5f6, %struct.Memory** %MEMORY

  ; Code: subl -0x58(%rbp), %eax	 RIP: 40e5f9	 Bytes: 3
  %loadMem_40e5f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5f9 = call %struct.Memory* @routine_subl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5f9)
  store %struct.Memory* %call_40e5f9, %struct.Memory** %MEMORY

  ; Code: subl -0x54(%rbp), %eax	 RIP: 40e5fc	 Bytes: 3
  %loadMem_40e5fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5fc = call %struct.Memory* @routine_subl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5fc)
  store %struct.Memory* %call_40e5fc, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40e5ff	 Bytes: 1
  %loadMem_40e5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e5ff = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e5ff)
  store %struct.Memory* %call_40e5ff, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40e600	 Bytes: 2
  %loadMem_40e600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e600 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e600)
  store %struct.Memory* %call_40e600, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40e602	 Bytes: 8
  %loadMem_40e602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e602 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e602)
  store %struct.Memory* %call_40e602, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x3348(%rcx)	 RIP: 40e60a	 Bytes: 6
  %loadMem_40e60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e60a = call %struct.Memory* @routine_movl__eax__0x3348__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e60a)
  store %struct.Memory* %call_40e60a, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 40e610	 Bytes: 3
  %loadMem_40e610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e610 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e610)
  store %struct.Memory* %call_40e610, %struct.Memory** %MEMORY

  ; Code: subl -0x5c(%rbp), %eax	 RIP: 40e613	 Bytes: 3
  %loadMem_40e613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e613 = call %struct.Memory* @routine_subl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e613)
  store %struct.Memory* %call_40e613, %struct.Memory** %MEMORY

  ; Code: subl -0x58(%rbp), %eax	 RIP: 40e616	 Bytes: 3
  %loadMem_40e616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e616 = call %struct.Memory* @routine_subl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e616)
  store %struct.Memory* %call_40e616, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %eax	 RIP: 40e619	 Bytes: 3
  %loadMem_40e619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e619 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e619)
  store %struct.Memory* %call_40e619, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40e61c	 Bytes: 1
  %loadMem_40e61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e61c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e61c)
  store %struct.Memory* %call_40e61c, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40e61d	 Bytes: 2
  %loadMem_40e61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e61d = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e61d)
  store %struct.Memory* %call_40e61d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40e61f	 Bytes: 8
  %loadMem_40e61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e61f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e61f)
  store %struct.Memory* %call_40e61f, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x3448(%rcx)	 RIP: 40e627	 Bytes: 6
  %loadMem_40e627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e627 = call %struct.Memory* @routine_movl__eax__0x3448__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e627)
  store %struct.Memory* %call_40e627, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x84(%rbp)	 RIP: 40e62d	 Bytes: 10
  %loadMem_40e62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e62d = call %struct.Memory* @routine_movl__0x0__MINUS0x84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e62d)
  store %struct.Memory* %call_40e62d, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x88(%rbp)	 RIP: 40e637	 Bytes: 10
  %loadMem_40e637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e637 = call %struct.Memory* @routine_movl__0x0__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e637)
  store %struct.Memory* %call_40e637, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 40e641	 Bytes: 7
  %loadMem_40e641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e641 = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e641)
  store %struct.Memory* %call_40e641, %struct.Memory** %MEMORY

  ; Code: .L_40e648:	 RIP: 40e648	 Bytes: 0
  br label %block_.L_40e648
block_.L_40e648:

  ; Code: cmpl $0x4, -0x20(%rbp)	 RIP: 40e648	 Bytes: 4
  %loadMem_40e648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e648 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e648)
  store %struct.Memory* %call_40e648, %struct.Memory** %MEMORY

  ; Code: jg .L_40eff5	 RIP: 40e64c	 Bytes: 6
  %loadMem_40e64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e64c = call %struct.Memory* @routine_jg_.L_40eff5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e64c, i8* %BRANCH_TAKEN, i64 2473, i64 6, i64 6)
  store %struct.Memory* %call_40e64c, %struct.Memory** %MEMORY

  %loadBr_40e64c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e64c = icmp eq i8 %loadBr_40e64c, 1
  br i1 %cmpBr_40e64c, label %block_.L_40eff5, label %block_40e652

block_40e652:
  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 40e652	 Bytes: 7
  %loadMem_40e652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e652 = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e652)
  store %struct.Memory* %call_40e652, %struct.Memory** %MEMORY

  ; Code: .L_40e659:	 RIP: 40e659	 Bytes: 0
  br label %block_.L_40e659
block_.L_40e659:

  ; Code: cmpl $0x4, -0x24(%rbp)	 RIP: 40e659	 Bytes: 4
  %loadMem_40e659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e659 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e659)
  store %struct.Memory* %call_40e659, %struct.Memory** %MEMORY

  ; Code: jg .L_40efe2	 RIP: 40e65d	 Bytes: 6
  %loadMem_40e65d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e65d = call %struct.Memory* @routine_jg_.L_40efe2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e65d, i8* %BRANCH_TAKEN, i64 2437, i64 6, i64 6)
  store %struct.Memory* %call_40e65d, %struct.Memory** %MEMORY

  %loadBr_40e65d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e65d = icmp eq i8 %loadBr_40e65d, 1
  br i1 %cmpBr_40e65d, label %block_.L_40efe2, label %block_40e663

block_40e663:
  ; Code: movl $0x4, %eax	 RIP: 40e663	 Bytes: 5
  %loadMem_40e663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e663 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e663)
  store %struct.Memory* %call_40e663, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40e668	 Bytes: 3
  %loadMem_40e668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e668 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e668)
  store %struct.Memory* %call_40e668, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ac(%rbp)	 RIP: 40e66b	 Bytes: 6
  %loadMem_40e66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e66b = call %struct.Memory* @routine_movl__eax__MINUS0x2ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e66b)
  store %struct.Memory* %call_40e66b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 40e671	 Bytes: 2
  %loadMem_40e671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e671 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e671)
  store %struct.Memory* %call_40e671, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40e673	 Bytes: 1
  %loadMem_40e673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e673 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e673)
  store %struct.Memory* %call_40e673, %struct.Memory** %MEMORY

  ; Code: movl -0x2ac(%rbp), %ecx	 RIP: 40e674	 Bytes: 6
  %loadMem_40e674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e674 = call %struct.Memory* @routine_movl_MINUS0x2ac__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e674)
  store %struct.Memory* %call_40e674, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 40e67a	 Bytes: 2
  %loadMem_40e67a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e67a = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e67a)
  store %struct.Memory* %call_40e67a, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 40e67c	 Bytes: 3
  %loadMem_40e67c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e67c = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e67c)
  store %struct.Memory* %call_40e67c, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40e67f	 Bytes: 3
  %loadMem_40e67f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e67f = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e67f)
  store %struct.Memory* %call_40e67f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2b0(%rbp)	 RIP: 40e682	 Bytes: 6
  %loadMem_40e682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e682 = call %struct.Memory* @routine_movl__eax__MINUS0x2b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e682)
  store %struct.Memory* %call_40e682, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 40e688	 Bytes: 2
  %loadMem_40e688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e688 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e688)
  store %struct.Memory* %call_40e688, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40e68a	 Bytes: 1
  %loadMem_40e68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e68a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e68a)
  store %struct.Memory* %call_40e68a, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 40e68b	 Bytes: 2
  %loadMem_40e68b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e68b = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e68b)
  store %struct.Memory* %call_40e68b, %struct.Memory** %MEMORY

  ; Code: movl -0x2b0(%rbp), %esi	 RIP: 40e68d	 Bytes: 6
  %loadMem_40e68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e68d = call %struct.Memory* @routine_movl_MINUS0x2b0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e68d)
  store %struct.Memory* %call_40e68d, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 40e693	 Bytes: 2
  %loadMem_40e693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e693 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e693)
  store %struct.Memory* %call_40e693, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x1d4(%rbp)	 RIP: 40e695	 Bytes: 6
  %loadMem_40e695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e695 = call %struct.Memory* @routine_movl__esi__MINUS0x1d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e695)
  store %struct.Memory* %call_40e695, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdi	 RIP: 40e69b	 Bytes: 8
  %loadMem_40e69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e69b = call %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e69b)
  store %struct.Memory* %call_40e69b, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rdi), %rdi	 RIP: 40e6a3	 Bytes: 7
  %loadMem_40e6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6a3 = call %struct.Memory* @routine_movq_0x3738__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6a3)
  store %struct.Memory* %call_40e6a3, %struct.Memory** %MEMORY

  ; Code: movl -0x4(%rbp), %eax	 RIP: 40e6aa	 Bytes: 3
  %loadMem_40e6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6aa = call %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6aa)
  store %struct.Memory* %call_40e6aa, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40e6ad	 Bytes: 3
  %loadMem_40e6ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6ad = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6ad)
  store %struct.Memory* %call_40e6ad, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r8	 RIP: 40e6b0	 Bytes: 3
  %loadMem_40e6b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6b0 = call %struct.Memory* @routine_movslq__eax___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6b0)
  store %struct.Memory* %call_40e6b0, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 40e6b3	 Bytes: 4
  %loadMem_40e6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6b3 = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6b3)
  store %struct.Memory* %call_40e6b3, %struct.Memory** %MEMORY

  ; Code: movslq -0x1d4(%rbp), %r8	 RIP: 40e6b7	 Bytes: 7
  %loadMem_40e6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6b7 = call %struct.Memory* @routine_movslq_MINUS0x1d4__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6b7)
  store %struct.Memory* %call_40e6b7, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 40e6be	 Bytes: 4
  %loadMem_40e6be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6be = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6be)
  store %struct.Memory* %call_40e6be, %struct.Memory** %MEMORY

  ; Code: movq (%rdi), %rdi	 RIP: 40e6c2	 Bytes: 3
  %loadMem_40e6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6c2 = call %struct.Memory* @routine_movq___rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6c2)
  store %struct.Memory* %call_40e6c2, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x1f0(%rbp)	 RIP: 40e6c5	 Bytes: 7
  %loadMem_40e6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6c5 = call %struct.Memory* @routine_movq__rdi__MINUS0x1f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6c5)
  store %struct.Memory* %call_40e6c5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdi	 RIP: 40e6cc	 Bytes: 8
  %loadMem_40e6cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6cc = call %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6cc)
  store %struct.Memory* %call_40e6cc, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rdi), %rdi	 RIP: 40e6d4	 Bytes: 7
  %loadMem_40e6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6d4 = call %struct.Memory* @routine_movq_0x3738__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6d4)
  store %struct.Memory* %call_40e6d4, %struct.Memory** %MEMORY

  ; Code: movl -0x4(%rbp), %eax	 RIP: 40e6db	 Bytes: 3
  %loadMem_40e6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6db = call %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6db)
  store %struct.Memory* %call_40e6db, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40e6de	 Bytes: 3
  %loadMem_40e6de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6de = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6de)
  store %struct.Memory* %call_40e6de, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r8	 RIP: 40e6e1	 Bytes: 3
  %loadMem_40e6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6e1 = call %struct.Memory* @routine_movslq__eax___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6e1)
  store %struct.Memory* %call_40e6e1, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 40e6e4	 Bytes: 4
  %loadMem_40e6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6e4 = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6e4)
  store %struct.Memory* %call_40e6e4, %struct.Memory** %MEMORY

  ; Code: movslq -0x1d4(%rbp), %r8	 RIP: 40e6e8	 Bytes: 7
  %loadMem_40e6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6e8 = call %struct.Memory* @routine_movslq_MINUS0x1d4__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6e8)
  store %struct.Memory* %call_40e6e8, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 40e6ef	 Bytes: 4
  %loadMem_40e6ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6ef = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6ef)
  store %struct.Memory* %call_40e6ef, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdi), %rdi	 RIP: 40e6f3	 Bytes: 4
  %loadMem_40e6f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6f3 = call %struct.Memory* @routine_movq_0x8__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6f3)
  store %struct.Memory* %call_40e6f3, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x1f8(%rbp)	 RIP: 40e6f7	 Bytes: 7
  %loadMem_40e6f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6f7 = call %struct.Memory* @routine_movq__rdi__MINUS0x1f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6f7)
  store %struct.Memory* %call_40e6f7, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x44(%rbp)	 RIP: 40e6fe	 Bytes: 7
  %loadMem_40e6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e6fe = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e6fe)
  store %struct.Memory* %call_40e6fe, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x40(%rbp)	 RIP: 40e705	 Bytes: 7
  %loadMem_40e705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e705 = call %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e705)
  store %struct.Memory* %call_40e705, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x30(%rbp)	 RIP: 40e70c	 Bytes: 7
  %loadMem_40e70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e70c = call %struct.Memory* @routine_movl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e70c)
  store %struct.Memory* %call_40e70c, %struct.Memory** %MEMORY

  ; Code: .L_40e713:	 RIP: 40e713	 Bytes: 0
  br label %block_.L_40e713
block_.L_40e713:

  ; Code: cmpl $0x10, -0x30(%rbp)	 RIP: 40e713	 Bytes: 4
  %loadMem_40e713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e713 = call %struct.Memory* @routine_cmpl__0x10__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e713)
  store %struct.Memory* %call_40e713, %struct.Memory** %MEMORY

  ; Code: jge .L_40efc2	 RIP: 40e717	 Bytes: 6
  %loadMem_40e717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e717 = call %struct.Memory* @routine_jge_.L_40efc2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e717, i8* %BRANCH_TAKEN, i64 2219, i64 6, i64 6)
  store %struct.Memory* %call_40e717, %struct.Memory** %MEMORY

  %loadBr_40e717 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e717 = icmp eq i8 %loadBr_40e717, 1
  br i1 %cmpBr_40e717, label %block_.L_40efc2, label %block_40e71d

block_40e71d:
  ; Code: movq 0x6cb900, %rax	 RIP: 40e71d	 Bytes: 8
  %loadMem_40e71d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e71d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e71d)
  store %struct.Memory* %call_40e71d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11afc(%rax)	 RIP: 40e725	 Bytes: 7
  %loadMem_40e725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e725 = call %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e725)
  store %struct.Memory* %call_40e725, %struct.Memory** %MEMORY

  ; Code: jne .L_40e755	 RIP: 40e72c	 Bytes: 6
  %loadMem_40e72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e72c = call %struct.Memory* @routine_jne_.L_40e755(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e72c, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_40e72c, %struct.Memory** %MEMORY

  %loadBr_40e72c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e72c = icmp eq i8 %loadBr_40e72c, 1
  br i1 %cmpBr_40e72c, label %block_.L_40e755, label %block_40e732

block_40e732:
  ; Code: cmpl $0x0, 0x6d4750	 RIP: 40e732	 Bytes: 8
  %loadMem_40e732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e732 = call %struct.Memory* @routine_cmpl__0x0__0x6d4750(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e732)
  store %struct.Memory* %call_40e732, %struct.Memory** %MEMORY

  ; Code: je .L_40e778	 RIP: 40e73a	 Bytes: 6
  %loadMem_40e73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e73a = call %struct.Memory* @routine_je_.L_40e778(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e73a, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_40e73a, %struct.Memory** %MEMORY

  %loadBr_40e73a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e73a = icmp eq i8 %loadBr_40e73a, 1
  br i1 %cmpBr_40e73a, label %block_.L_40e778, label %block_40e740

block_40e740:
  ; Code: movq 0x6cb900, %rax	 RIP: 40e740	 Bytes: 8
  %loadMem_40e740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e740 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e740)
  store %struct.Memory* %call_40e740, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11948(%rax)	 RIP: 40e748	 Bytes: 7
  %loadMem_40e748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e748 = call %struct.Memory* @routine_cmpl__0x0__0x11948__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e748)
  store %struct.Memory* %call_40e748, %struct.Memory** %MEMORY

  ; Code: je .L_40e778	 RIP: 40e74f	 Bytes: 6
  %loadMem_40e74f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e74f = call %struct.Memory* @routine_je_.L_40e778(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e74f, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_40e74f, %struct.Memory** %MEMORY

  %loadBr_40e74f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e74f = icmp eq i8 %loadBr_40e74f, 1
  br i1 %cmpBr_40e74f, label %block_.L_40e778, label %block_.L_40e755

  ; Code: .L_40e755:	 RIP: 40e755	 Bytes: 0
block_.L_40e755:

  ; Code: movslq -0x30(%rbp), %rax	 RIP: 40e755	 Bytes: 4
  %loadMem_40e755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e755 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e755)
  store %struct.Memory* %call_40e755, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2380(,%rax,2), %ecx	 RIP: 40e759	 Bytes: 8
  %loadMem_40e759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e759 = call %struct.Memory* @routine_movzbl_0x4b2380___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e759)
  store %struct.Memory* %call_40e759, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc(%rbp)	 RIP: 40e761	 Bytes: 3
  %loadMem_40e761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e761 = call %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e761)
  store %struct.Memory* %call_40e761, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rax	 RIP: 40e764	 Bytes: 4
  %loadMem_40e764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e764 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e764)
  store %struct.Memory* %call_40e764, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2381(,%rax,2), %ecx	 RIP: 40e768	 Bytes: 8
  %loadMem_40e768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e768 = call %struct.Memory* @routine_movzbl_0x4b2381___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e768)
  store %struct.Memory* %call_40e768, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x10(%rbp)	 RIP: 40e770	 Bytes: 3
  %loadMem_40e770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e770 = call %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e770)
  store %struct.Memory* %call_40e770, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e796	 RIP: 40e773	 Bytes: 5
  %loadMem_40e773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e773 = call %struct.Memory* @routine_jmpq_.L_40e796(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e773, i64 35, i64 5)
  store %struct.Memory* %call_40e773, %struct.Memory** %MEMORY

  br label %block_.L_40e796

  ; Code: .L_40e778:	 RIP: 40e778	 Bytes: 0
block_.L_40e778:

  ; Code: movslq -0x30(%rbp), %rax	 RIP: 40e778	 Bytes: 4
  %loadMem_40e778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e778 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e778)
  store %struct.Memory* %call_40e778, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2360(,%rax,2), %ecx	 RIP: 40e77c	 Bytes: 8
  %loadMem_40e77c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e77c = call %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e77c)
  store %struct.Memory* %call_40e77c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc(%rbp)	 RIP: 40e784	 Bytes: 3
  %loadMem_40e784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e784 = call %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e784)
  store %struct.Memory* %call_40e784, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rax	 RIP: 40e787	 Bytes: 4
  %loadMem_40e787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e787 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e787)
  store %struct.Memory* %call_40e787, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2361(,%rax,2), %ecx	 RIP: 40e78b	 Bytes: 8
  %loadMem_40e78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e78b = call %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e78b)
  store %struct.Memory* %call_40e78b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x10(%rbp)	 RIP: 40e793	 Bytes: 3
  %loadMem_40e793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e793 = call %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e793)
  store %struct.Memory* %call_40e793, %struct.Memory** %MEMORY

  ; Code: .L_40e796:	 RIP: 40e796	 Bytes: 0
  br label %block_.L_40e796
block_.L_40e796:

  ; Code: leaq -0x190(%rbp), %rax	 RIP: 40e796	 Bytes: 7
  %loadMem_40e796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e796 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e796)
  store %struct.Memory* %call_40e796, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %ecx	 RIP: 40e79d	 Bytes: 3
  %loadMem_40e79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e79d = call %struct.Memory* @routine_movl_MINUS0x44__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e79d)
  store %struct.Memory* %call_40e79d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 40e7a0	 Bytes: 3
  %loadMem_40e7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7a0 = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7a0)
  store %struct.Memory* %call_40e7a0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x44(%rbp)	 RIP: 40e7a3	 Bytes: 3
  %loadMem_40e7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7a3 = call %struct.Memory* @routine_movl__ecx__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7a3)
  store %struct.Memory* %call_40e7a3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1c(%rbp)	 RIP: 40e7a6	 Bytes: 7
  %loadMem_40e7a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7a6 = call %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7a6)
  store %struct.Memory* %call_40e7a6, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 40e7ad	 Bytes: 3
  %loadMem_40e7ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7ad = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7ad)
  store %struct.Memory* %call_40e7ad, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %ecx	 RIP: 40e7b0	 Bytes: 3
  %loadMem_40e7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7b0 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7b0)
  store %struct.Memory* %call_40e7b0, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40e7b3	 Bytes: 3
  %loadMem_40e7b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7b3 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7b3)
  store %struct.Memory* %call_40e7b3, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40e7b6	 Bytes: 4
  %loadMem_40e7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7b6 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7b6)
  store %struct.Memory* %call_40e7b6, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40e7ba	 Bytes: 3
  %loadMem_40e7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7ba = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7ba)
  store %struct.Memory* %call_40e7ba, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40e7bd	 Bytes: 3
  %loadMem_40e7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7bd = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7bd)
  store %struct.Memory* %call_40e7bd, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %ecx	 RIP: 40e7c0	 Bytes: 3
  %loadMem_40e7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7c0 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7c0)
  store %struct.Memory* %call_40e7c0, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40e7c3	 Bytes: 3
  %loadMem_40e7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7c3 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7c3)
  store %struct.Memory* %call_40e7c3, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %edi	 RIP: 40e7c6	 Bytes: 3
  %loadMem_40e7c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7c6 = call %struct.Memory* @routine_movl___rax__rdx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7c6)
  store %struct.Memory* %call_40e7c6, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e7c9	 Bytes: 5
  %loadMem1_40e7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e7c9 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e7c9, i64 -55241, i64 5, i64 5)
  store %struct.Memory* %call1_40e7c9, %struct.Memory** %MEMORY

  %loadMem2_40e7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e7c9 = load i64, i64* %3
  %call2_40e7c9 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e7c9, %struct.Memory* %loadMem2_40e7c9)
  store %struct.Memory* %call2_40e7c9, %struct.Memory** %MEMORY

  ; Code: leaq -0x190(%rbp), %rdx	 RIP: 40e7ce	 Bytes: 7
  %loadMem_40e7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7ce = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7ce)
  store %struct.Memory* %call_40e7ce, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %rsi	 RIP: 40e7d5	 Bytes: 10
  %loadMem_40e7d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7d5 = call %struct.Memory* @routine_movq__0x4b2750___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7d5)
  store %struct.Memory* %call_40e7d5, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %r8	 RIP: 40e7df	 Bytes: 7
  %loadMem_40e7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7df = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7df)
  store %struct.Memory* %call_40e7df, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40e7e6	 Bytes: 4
  %loadMem_40e7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7e6 = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7e6)
  store %struct.Memory* %call_40e7e6, %struct.Memory** %MEMORY

  ; Code: movq %rsi, %r9	 RIP: 40e7ea	 Bytes: 3
  %loadMem_40e7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7ea = call %struct.Memory* @routine_movq__rsi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7ea)
  store %struct.Memory* %call_40e7ea, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 40e7ed	 Bytes: 3
  %loadMem_40e7ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7ed = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7ed)
  store %struct.Memory* %call_40e7ed, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 40e7f0	 Bytes: 4
  %loadMem_40e7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7f0 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7f0)
  store %struct.Memory* %call_40e7f0, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 40e7f4	 Bytes: 4
  %loadMem_40e7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7f4 = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7f4)
  store %struct.Memory* %call_40e7f4, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 40e7f8	 Bytes: 3
  %loadMem_40e7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7f8 = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7f8)
  store %struct.Memory* %call_40e7f8, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r8	 RIP: 40e7fb	 Bytes: 4
  %loadMem_40e7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7fb = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7fb)
  store %struct.Memory* %call_40e7fb, %struct.Memory** %MEMORY

  ; Code: imull (%r9,%r8,4), %eax	 RIP: 40e7ff	 Bytes: 5
  %loadMem_40e7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e7ff = call %struct.Memory* @routine_imull___r9__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e7ff)
  store %struct.Memory* %call_40e7ff, %struct.Memory** %MEMORY

  ; Code: addl -0x194(%rbp), %eax	 RIP: 40e804	 Bytes: 6
  %loadMem_40e804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e804 = call %struct.Memory* @routine_addl_MINUS0x194__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e804)
  store %struct.Memory* %call_40e804, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %ecx	 RIP: 40e80a	 Bytes: 6
  %loadMem_40e80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e80a = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e80a)
  store %struct.Memory* %call_40e80a, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40e810	 Bytes: 2
  %loadMem_40e810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e810 = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e810)
  store %struct.Memory* %call_40e810, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1fc(%rbp)	 RIP: 40e812	 Bytes: 6
  %loadMem_40e812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e812 = call %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e812)
  store %struct.Memory* %call_40e812, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40e818	 Bytes: 6
  %loadMem_40e818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e818 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e818)
  store %struct.Memory* %call_40e818, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %ecx	 RIP: 40e81e	 Bytes: 6
  %loadMem_40e81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e81e = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e81e)
  store %struct.Memory* %call_40e81e, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40e824	 Bytes: 2
  %loadMem_40e824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e824 = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e824)
  store %struct.Memory* %call_40e824, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %r8	 RIP: 40e826	 Bytes: 7
  %loadMem_40e826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e826 = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e826)
  store %struct.Memory* %call_40e826, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40e82d	 Bytes: 4
  %loadMem_40e82d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e82d = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e82d)
  store %struct.Memory* %call_40e82d, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 40e831	 Bytes: 3
  %loadMem_40e831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e831 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e831)
  store %struct.Memory* %call_40e831, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 40e834	 Bytes: 4
  %loadMem_40e834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e834 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e834)
  store %struct.Memory* %call_40e834, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 40e838	 Bytes: 4
  %loadMem_40e838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e838 = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e838)
  store %struct.Memory* %call_40e838, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 40e83c	 Bytes: 3
  %loadMem_40e83c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e83c = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e83c)
  store %struct.Memory* %call_40e83c, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r8	 RIP: 40e83f	 Bytes: 4
  %loadMem_40e83f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e83f = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e83f)
  store %struct.Memory* %call_40e83f, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x2b8(%rbp)	 RIP: 40e843	 Bytes: 7
  %loadMem_40e843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e843 = call %struct.Memory* @routine_movq__rdx__MINUS0x2b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e843)
  store %struct.Memory* %call_40e843, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40e84a	 Bytes: 1
  %loadMem_40e84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e84a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e84a)
  store %struct.Memory* %call_40e84a, %struct.Memory** %MEMORY

  ; Code: idivl (%rsi,%r8,4)	 RIP: 40e84b	 Bytes: 4
  %loadMem_40e84b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e84b = call %struct.Memory* @routine_idivl___rsi__r8_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e84b)
  store %struct.Memory* %call_40e84b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1fc(%rbp)	 RIP: 40e84f	 Bytes: 6
  %loadMem_40e84f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e84f = call %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e84f)
  store %struct.Memory* %call_40e84f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 40e855	 Bytes: 8
  %loadMem_40e855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e855 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e855)
  store %struct.Memory* %call_40e855, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rsi	 RIP: 40e85d	 Bytes: 7
  %loadMem_40e85d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e85d = call %struct.Memory* @routine_addq__0x3338___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e85d)
  store %struct.Memory* %call_40e85d, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40e864	 Bytes: 3
  %loadMem_40e864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e864 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e864)
  store %struct.Memory* %call_40e864, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %eax	 RIP: 40e867	 Bytes: 3
  %loadMem_40e867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e867 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e867)
  store %struct.Memory* %call_40e867, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r8	 RIP: 40e86a	 Bytes: 3
  %loadMem_40e86a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e86a = call %struct.Memory* @routine_movslq__eax___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e86a)
  store %struct.Memory* %call_40e86a, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40e86d	 Bytes: 4
  %loadMem_40e86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e86d = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e86d)
  store %struct.Memory* %call_40e86d, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 40e871	 Bytes: 3
  %loadMem_40e871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e871 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e871)
  store %struct.Memory* %call_40e871, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40e874	 Bytes: 3
  %loadMem_40e874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e874 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e874)
  store %struct.Memory* %call_40e874, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40e877	 Bytes: 3
  %loadMem_40e877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e877 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e877)
  store %struct.Memory* %call_40e877, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r8	 RIP: 40e87a	 Bytes: 3
  %loadMem_40e87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e87a = call %struct.Memory* @routine_movslq__eax___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e87a)
  store %struct.Memory* %call_40e87a, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%r8,4), %eax	 RIP: 40e87d	 Bytes: 4
  %loadMem_40e87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e87d = call %struct.Memory* @routine_movl___rsi__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e87d)
  store %struct.Memory* %call_40e87d, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %edi	 RIP: 40e881	 Bytes: 6
  %loadMem_40e881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e881 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e881)
  store %struct.Memory* %call_40e881, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %r10d	 RIP: 40e887	 Bytes: 4
  %loadMem_40e887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e887 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e887)
  store %struct.Memory* %call_40e887, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %r10d	 RIP: 40e88b	 Bytes: 4
  %loadMem_40e88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e88b = call %struct.Memory* @routine_addl_MINUS0xc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e88b)
  store %struct.Memory* %call_40e88b, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 40e88f	 Bytes: 3
  %loadMem_40e88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e88f = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e88f)
  store %struct.Memory* %call_40e88f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 40e892	 Bytes: 4
  %loadMem_40e892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e892 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e892)
  store %struct.Memory* %call_40e892, %struct.Memory** %MEMORY

  ; Code: movq -0x2b8(%rbp), %r8	 RIP: 40e896	 Bytes: 7
  %loadMem_40e896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e896 = call %struct.Memory* @routine_movq_MINUS0x2b8__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e896)
  store %struct.Memory* %call_40e896, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %r8	 RIP: 40e89d	 Bytes: 3
  %loadMem_40e89d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e89d = call %struct.Memory* @routine_addq__rsi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e89d)
  store %struct.Memory* %call_40e89d, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %r10d	 RIP: 40e8a0	 Bytes: 4
  %loadMem_40e8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8a0 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8a0)
  store %struct.Memory* %call_40e8a0, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %r10d	 RIP: 40e8a4	 Bytes: 4
  %loadMem_40e8a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8a4 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8a4)
  store %struct.Memory* %call_40e8a4, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 40e8a8	 Bytes: 3
  %loadMem_40e8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8a8 = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8a8)
  store %struct.Memory* %call_40e8a8, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rsi,4), %esi	 RIP: 40e8ab	 Bytes: 4
  %loadMem_40e8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8ab = call %struct.Memory* @routine_movl___r8__rsi_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8ab)
  store %struct.Memory* %call_40e8ab, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2bc(%rbp)	 RIP: 40e8af	 Bytes: 6
  %loadMem_40e8af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8af = call %struct.Memory* @routine_movl__eax__MINUS0x2bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8af)
  store %struct.Memory* %call_40e8af, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40e8b5	 Bytes: 5
  %loadMem1_40e8b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e8b5 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e8b5, i64 419995, i64 5, i64 5)
  store %struct.Memory* %call1_40e8b5, %struct.Memory** %MEMORY

  %loadMem2_40e8b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e8b5 = load i64, i64* %3
  %call2_40e8b5 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40e8b5, %struct.Memory* %loadMem2_40e8b5)
  store %struct.Memory* %call2_40e8b5, %struct.Memory** %MEMORY

  ; Code: movl -0x2bc(%rbp), %esi	 RIP: 40e8ba	 Bytes: 6
  %loadMem_40e8ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8ba = call %struct.Memory* @routine_movl_MINUS0x2bc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8ba)
  store %struct.Memory* %call_40e8ba, %struct.Memory** %MEMORY

  ; Code: subl %eax, %esi	 RIP: 40e8c0	 Bytes: 2
  %loadMem_40e8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8c0 = call %struct.Memory* @routine_subl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8c0)
  store %struct.Memory* %call_40e8c0, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x1fc(%rbp)	 RIP: 40e8c2	 Bytes: 6
  %loadMem_40e8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8c2 = call %struct.Memory* @routine_movl__esi__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8c2)
  store %struct.Memory* %call_40e8c2, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %edi	 RIP: 40e8c8	 Bytes: 6
  %loadMem_40e8c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8c8 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8c8)
  store %struct.Memory* %call_40e8c8, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e8ce	 Bytes: 5
  %loadMem1_40e8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e8ce = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e8ce, i64 -55502, i64 5, i64 5)
  store %struct.Memory* %call1_40e8ce, %struct.Memory** %MEMORY

  %loadMem2_40e8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e8ce = load i64, i64* %3
  %call2_40e8ce = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e8ce, %struct.Memory* %loadMem2_40e8ce)
  store %struct.Memory* %call2_40e8ce, %struct.Memory** %MEMORY

  ; Code: leaq -0x190(%rbp), %r8	 RIP: 40e8d3	 Bytes: 7
  %loadMem_40e8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8d3 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8d3)
  store %struct.Memory* %call_40e8d3, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %r9	 RIP: 40e8da	 Bytes: 10
  %loadMem_40e8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8da = call %struct.Memory* @routine_movq__0x4b2750___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8da)
  store %struct.Memory* %call_40e8da, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r11	 RIP: 40e8e4	 Bytes: 7
  %loadMem_40e8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8e4 = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8e4)
  store %struct.Memory* %call_40e8e4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r11	 RIP: 40e8eb	 Bytes: 4
  %loadMem_40e8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8eb = call %struct.Memory* @routine_shlq__0x6___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8eb)
  store %struct.Memory* %call_40e8eb, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r9	 RIP: 40e8ef	 Bytes: 3
  %loadMem_40e8ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8ef = call %struct.Memory* @routine_addq__r11___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8ef)
  store %struct.Memory* %call_40e8ef, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r11	 RIP: 40e8f2	 Bytes: 4
  %loadMem_40e8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8f2 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8f2)
  store %struct.Memory* %call_40e8f2, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r11	 RIP: 40e8f6	 Bytes: 4
  %loadMem_40e8f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8f6 = call %struct.Memory* @routine_shlq__0x4___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8f6)
  store %struct.Memory* %call_40e8f6, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r9	 RIP: 40e8fa	 Bytes: 3
  %loadMem_40e8fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8fa = call %struct.Memory* @routine_addq__r11___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8fa)
  store %struct.Memory* %call_40e8fa, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r11	 RIP: 40e8fd	 Bytes: 4
  %loadMem_40e8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e8fd = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e8fd)
  store %struct.Memory* %call_40e8fd, %struct.Memory** %MEMORY

  ; Code: imull (%r9,%r11,4), %eax	 RIP: 40e901	 Bytes: 5
  %loadMem_40e901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e901 = call %struct.Memory* @routine_imull___r9__r11_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e901)
  store %struct.Memory* %call_40e901, %struct.Memory** %MEMORY

  ; Code: addl -0x34(%rbp), %eax	 RIP: 40e906	 Bytes: 3
  %loadMem_40e906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e906 = call %struct.Memory* @routine_addl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e906)
  store %struct.Memory* %call_40e906, %struct.Memory** %MEMORY

  ; Code: movl -0x1c4(%rbp), %ecx	 RIP: 40e909	 Bytes: 6
  %loadMem_40e909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e909 = call %struct.Memory* @routine_movl_MINUS0x1c4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e909)
  store %struct.Memory* %call_40e909, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40e90f	 Bytes: 2
  %loadMem_40e90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e90f = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e90f)
  store %struct.Memory* %call_40e90f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x204(%rbp)	 RIP: 40e911	 Bytes: 6
  %loadMem_40e911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e911 = call %struct.Memory* @routine_movl__eax__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e911)
  store %struct.Memory* %call_40e911, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r9	 RIP: 40e917	 Bytes: 8
  %loadMem_40e917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e917 = call %struct.Memory* @routine_movq_0x6cb900___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e917)
  store %struct.Memory* %call_40e917, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %r9	 RIP: 40e91f	 Bytes: 7
  %loadMem_40e91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e91f = call %struct.Memory* @routine_addq__0x3338___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e91f)
  store %struct.Memory* %call_40e91f, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40e926	 Bytes: 3
  %loadMem_40e926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e926 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e926)
  store %struct.Memory* %call_40e926, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %eax	 RIP: 40e929	 Bytes: 3
  %loadMem_40e929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e929 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e929)
  store %struct.Memory* %call_40e929, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r11	 RIP: 40e92c	 Bytes: 3
  %loadMem_40e92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e92c = call %struct.Memory* @routine_movslq__eax___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e92c)
  store %struct.Memory* %call_40e92c, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r11	 RIP: 40e92f	 Bytes: 4
  %loadMem_40e92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e92f = call %struct.Memory* @routine_shlq__0x6___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e92f)
  store %struct.Memory* %call_40e92f, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r9	 RIP: 40e933	 Bytes: 3
  %loadMem_40e933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e933 = call %struct.Memory* @routine_addq__r11___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e933)
  store %struct.Memory* %call_40e933, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40e936	 Bytes: 3
  %loadMem_40e936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e936 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e936)
  store %struct.Memory* %call_40e936, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40e939	 Bytes: 3
  %loadMem_40e939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e939 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e939)
  store %struct.Memory* %call_40e939, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r11	 RIP: 40e93c	 Bytes: 3
  %loadMem_40e93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e93c = call %struct.Memory* @routine_movslq__eax___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e93c)
  store %struct.Memory* %call_40e93c, %struct.Memory** %MEMORY

  ; Code: movl (%r9,%r11,4), %eax	 RIP: 40e93f	 Bytes: 4
  %loadMem_40e93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e93f = call %struct.Memory* @routine_movl___r9__r11_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e93f)
  store %struct.Memory* %call_40e93f, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40e943	 Bytes: 3
  %loadMem_40e943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e943 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e943)
  store %struct.Memory* %call_40e943, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %esi	 RIP: 40e946	 Bytes: 3
  %loadMem_40e946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e946 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e946)
  store %struct.Memory* %call_40e946, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 40e949	 Bytes: 3
  %loadMem_40e949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e949 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e949)
  store %struct.Memory* %call_40e949, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 40e94c	 Bytes: 4
  %loadMem_40e94c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e94c = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e94c)
  store %struct.Memory* %call_40e94c, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40e950	 Bytes: 3
  %loadMem_40e950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e950 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e950)
  store %struct.Memory* %call_40e950, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40e953	 Bytes: 3
  %loadMem_40e953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e953 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e953)
  store %struct.Memory* %call_40e953, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %esi	 RIP: 40e956	 Bytes: 3
  %loadMem_40e956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e956 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e956)
  store %struct.Memory* %call_40e956, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r9	 RIP: 40e959	 Bytes: 3
  %loadMem_40e959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e959 = call %struct.Memory* @routine_movslq__esi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e959)
  store %struct.Memory* %call_40e959, %struct.Memory** %MEMORY

  ; Code: subl (%r8,%r9,4), %eax	 RIP: 40e95c	 Bytes: 4
  %loadMem_40e95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e95c = call %struct.Memory* @routine_subl___r8__r9_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e95c)
  store %struct.Memory* %call_40e95c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x200(%rbp)	 RIP: 40e960	 Bytes: 6
  %loadMem_40e960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e960 = call %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e960)
  store %struct.Memory* %call_40e960, %struct.Memory** %MEMORY

  ; Code: movl -0x200(%rbp), %edi	 RIP: 40e966	 Bytes: 6
  %loadMem_40e966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e966 = call %struct.Memory* @routine_movl_MINUS0x200__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e966)
  store %struct.Memory* %call_40e966, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40e96c	 Bytes: 5
  %loadMem1_40e96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40e96c = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40e96c, i64 -55660, i64 5, i64 5)
  store %struct.Memory* %call1_40e96c, %struct.Memory** %MEMORY

  %loadMem2_40e96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40e96c = load i64, i64* %3
  %call2_40e96c = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40e96c, %struct.Memory* %loadMem2_40e96c)
  store %struct.Memory* %call2_40e96c, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %r8	 RIP: 40e971	 Bytes: 10
  %loadMem_40e971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e971 = call %struct.Memory* @routine_movq__0x4b2750___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e971)
  store %struct.Memory* %call_40e971, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r9	 RIP: 40e97b	 Bytes: 7
  %loadMem_40e97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e97b = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e97b)
  store %struct.Memory* %call_40e97b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r9	 RIP: 40e982	 Bytes: 4
  %loadMem_40e982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e982 = call %struct.Memory* @routine_shlq__0x6___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e982)
  store %struct.Memory* %call_40e982, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40e986	 Bytes: 3
  %loadMem_40e986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e986 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e986)
  store %struct.Memory* %call_40e986, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r9	 RIP: 40e989	 Bytes: 4
  %loadMem_40e989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e989 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e989)
  store %struct.Memory* %call_40e989, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r9	 RIP: 40e98d	 Bytes: 4
  %loadMem_40e98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e98d = call %struct.Memory* @routine_shlq__0x4___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e98d)
  store %struct.Memory* %call_40e98d, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40e991	 Bytes: 3
  %loadMem_40e991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e991 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e991)
  store %struct.Memory* %call_40e991, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r9	 RIP: 40e994	 Bytes: 4
  %loadMem_40e994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e994 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e994)
  store %struct.Memory* %call_40e994, %struct.Memory** %MEMORY

  ; Code: imull (%r8,%r9,4), %eax	 RIP: 40e998	 Bytes: 5
  %loadMem_40e998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e998 = call %struct.Memory* @routine_imull___r8__r9_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e998)
  store %struct.Memory* %call_40e998, %struct.Memory** %MEMORY

  ; Code: addl -0x34(%rbp), %eax	 RIP: 40e99d	 Bytes: 3
  %loadMem_40e99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e99d = call %struct.Memory* @routine_addl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e99d)
  store %struct.Memory* %call_40e99d, %struct.Memory** %MEMORY

  ; Code: movl -0x1c4(%rbp), %ecx	 RIP: 40e9a0	 Bytes: 6
  %loadMem_40e9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9a0 = call %struct.Memory* @routine_movl_MINUS0x1c4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9a0)
  store %struct.Memory* %call_40e9a0, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40e9a6	 Bytes: 2
  %loadMem_40e9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9a6 = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9a6)
  store %struct.Memory* %call_40e9a6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x208(%rbp)	 RIP: 40e9a8	 Bytes: 6
  %loadMem_40e9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9a8 = call %struct.Memory* @routine_movl__eax__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9a8)
  store %struct.Memory* %call_40e9a8, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %eax	 RIP: 40e9ae	 Bytes: 6
  %loadMem_40e9ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9ae = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9ae)
  store %struct.Memory* %call_40e9ae, %struct.Memory** %MEMORY

  ; Code: cmpl -0x208(%rbp), %eax	 RIP: 40e9b4	 Bytes: 6
  %loadMem_40e9b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9b4 = call %struct.Memory* @routine_cmpl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9b4)
  store %struct.Memory* %call_40e9b4, %struct.Memory** %MEMORY

  ; Code: je .L_40ed10	 RIP: 40e9ba	 Bytes: 6
  %loadMem_40e9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9ba = call %struct.Memory* @routine_je_.L_40ed10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9ba, i8* %BRANCH_TAKEN, i64 854, i64 6, i64 6)
  store %struct.Memory* %call_40e9ba, %struct.Memory** %MEMORY

  %loadBr_40e9ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e9ba = icmp eq i8 %loadBr_40e9ba, 1
  br i1 %cmpBr_40e9ba, label %block_.L_40ed10, label %block_40e9c0

block_40e9c0:
  ; Code: cmpl $0x0, -0x204(%rbp)	 RIP: 40e9c0	 Bytes: 7
  %loadMem_40e9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9c0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9c0)
  store %struct.Memory* %call_40e9c0, %struct.Memory** %MEMORY

  ; Code: je .L_40ed10	 RIP: 40e9c7	 Bytes: 6
  %loadMem_40e9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9c7 = call %struct.Memory* @routine_je_.L_40ed10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9c7, i8* %BRANCH_TAKEN, i64 841, i64 6, i64 6)
  store %struct.Memory* %call_40e9c7, %struct.Memory** %MEMORY

  %loadBr_40e9c7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e9c7 = icmp eq i8 %loadBr_40e9c7, 1
  br i1 %cmpBr_40e9c7, label %block_.L_40ed10, label %block_40e9cd

block_40e9cd:
  ; Code: cmpl $0x0, -0x208(%rbp)	 RIP: 40e9cd	 Bytes: 7
  %loadMem_40e9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9cd = call %struct.Memory* @routine_cmpl__0x0__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9cd)
  store %struct.Memory* %call_40e9cd, %struct.Memory** %MEMORY

  ; Code: je .L_40ed10	 RIP: 40e9d4	 Bytes: 6
  %loadMem_40e9d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9d4 = call %struct.Memory* @routine_je_.L_40ed10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9d4, i8* %BRANCH_TAKEN, i64 828, i64 6, i64 6)
  store %struct.Memory* %call_40e9d4, %struct.Memory** %MEMORY

  %loadBr_40e9d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40e9d4 = icmp eq i8 %loadBr_40e9d4, 1
  br i1 %cmpBr_40e9d4, label %block_.L_40ed10, label %block_40e9da

block_40e9da:
  ; Code: movq 0x6cb900, %rax	 RIP: 40e9da	 Bytes: 8
  %loadMem_40e9da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9da = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9da)
  store %struct.Memory* %call_40e9da, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 40e9e2	 Bytes: 6
  %loadMem_40e9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9e2 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9e2)
  store %struct.Memory* %call_40e9e2, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 40e9e8	 Bytes: 3
  %loadMem_40e9e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9e8 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9e8)
  store %struct.Memory* %call_40e9e8, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %ecx	 RIP: 40e9eb	 Bytes: 3
  %loadMem_40e9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9eb = call %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9eb)
  store %struct.Memory* %call_40e9eb, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40e9ee	 Bytes: 3
  %loadMem_40e9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9ee = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9ee)
  store %struct.Memory* %call_40e9ee, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40e9f1	 Bytes: 4
  %loadMem_40e9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9f1 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9f1)
  store %struct.Memory* %call_40e9f1, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40e9f5	 Bytes: 3
  %loadMem_40e9f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9f5 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9f5)
  store %struct.Memory* %call_40e9f5, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40e9f8	 Bytes: 3
  %loadMem_40e9f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9f8 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9f8)
  store %struct.Memory* %call_40e9f8, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %ecx	 RIP: 40e9fb	 Bytes: 3
  %loadMem_40e9fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9fb = call %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9fb)
  store %struct.Memory* %call_40e9fb, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40e9fe	 Bytes: 3
  %loadMem_40e9fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40e9fe = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40e9fe)
  store %struct.Memory* %call_40e9fe, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %ecx	 RIP: 40ea01	 Bytes: 3
  %loadMem_40ea01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea01 = call %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea01)
  store %struct.Memory* %call_40ea01, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %edi	 RIP: 40ea04	 Bytes: 6
  %loadMem_40ea04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea04 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea04)
  store %struct.Memory* %call_40ea04, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %esi	 RIP: 40ea0a	 Bytes: 6
  %loadMem_40ea0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea0a = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea0a)
  store %struct.Memory* %call_40ea0a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2c0(%rbp)	 RIP: 40ea10	 Bytes: 6
  %loadMem_40ea10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea10 = call %struct.Memory* @routine_movl__ecx__MINUS0x2c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea10)
  store %struct.Memory* %call_40ea10, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40ea16	 Bytes: 5
  %loadMem1_40ea16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ea16 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ea16, i64 419642, i64 5, i64 5)
  store %struct.Memory* %call1_40ea16, %struct.Memory** %MEMORY

  %loadMem2_40ea16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ea16 = load i64, i64* %3
  %call2_40ea16 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40ea16, %struct.Memory* %loadMem2_40ea16)
  store %struct.Memory* %call2_40ea16, %struct.Memory** %MEMORY

  ; Code: leaq -0x20c(%rbp), %rdx	 RIP: 40ea1b	 Bytes: 7
  %loadMem_40ea1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea1b = call %struct.Memory* @routine_leaq_MINUS0x20c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea1b)
  store %struct.Memory* %call_40ea1b, %struct.Memory** %MEMORY

  ; Code: leaq -0x210(%rbp), %rcx	 RIP: 40ea22	 Bytes: 7
  %loadMem_40ea22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea22 = call %struct.Memory* @routine_leaq_MINUS0x210__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea22)
  store %struct.Memory* %call_40ea22, %struct.Memory** %MEMORY

  ; Code: leaq -0x190(%rbp), %r8	 RIP: 40ea29	 Bytes: 7
  %loadMem_40ea29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea29 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea29)
  store %struct.Memory* %call_40ea29, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2a50, %r9	 RIP: 40ea30	 Bytes: 10
  %loadMem_40ea30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea30 = call %struct.Memory* @routine_movq__0x4b2a50___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea30)
  store %struct.Memory* %call_40ea30, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %r10	 RIP: 40ea3a	 Bytes: 10
  %loadMem_40ea3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea3a = call %struct.Memory* @routine_movq__0x4b28d0___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea3a)
  store %struct.Memory* %call_40ea3a, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r11	 RIP: 40ea44	 Bytes: 7
  %loadMem_40ea44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea44 = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea44)
  store %struct.Memory* %call_40ea44, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r11	 RIP: 40ea4b	 Bytes: 4
  %loadMem_40ea4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea4b = call %struct.Memory* @routine_shlq__0x6___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea4b)
  store %struct.Memory* %call_40ea4b, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r10	 RIP: 40ea4f	 Bytes: 3
  %loadMem_40ea4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea4f = call %struct.Memory* @routine_addq__r11___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea4f)
  store %struct.Memory* %call_40ea4f, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r11	 RIP: 40ea52	 Bytes: 4
  %loadMem_40ea52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea52 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea52)
  store %struct.Memory* %call_40ea52, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r11	 RIP: 40ea56	 Bytes: 4
  %loadMem_40ea56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea56 = call %struct.Memory* @routine_shlq__0x4___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea56)
  store %struct.Memory* %call_40ea56, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r10	 RIP: 40ea5a	 Bytes: 3
  %loadMem_40ea5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea5a = call %struct.Memory* @routine_addq__r11___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea5a)
  store %struct.Memory* %call_40ea5a, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r11	 RIP: 40ea5d	 Bytes: 4
  %loadMem_40ea5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea5d = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea5d)
  store %struct.Memory* %call_40ea5d, %struct.Memory** %MEMORY

  ; Code: imull (%r10,%r11,4), %eax	 RIP: 40ea61	 Bytes: 5
  %loadMem_40ea61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea61 = call %struct.Memory* @routine_imull___r10__r11_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea61)
  store %struct.Memory* %call_40ea61, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r10	 RIP: 40ea66	 Bytes: 4
  %loadMem_40ea66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea66 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea66)
  store %struct.Memory* %call_40ea66, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r10	 RIP: 40ea6a	 Bytes: 4
  %loadMem_40ea6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea6a = call %struct.Memory* @routine_shlq__0x4___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea6a)
  store %struct.Memory* %call_40ea6a, %struct.Memory** %MEMORY

  ; Code: addq %r10, %r9	 RIP: 40ea6e	 Bytes: 3
  %loadMem_40ea6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea6e = call %struct.Memory* @routine_addq__r10___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea6e)
  store %struct.Memory* %call_40ea6e, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r10	 RIP: 40ea71	 Bytes: 4
  %loadMem_40ea71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea71 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea71)
  store %struct.Memory* %call_40ea71, %struct.Memory** %MEMORY

  ; Code: imull (%r9,%r10,4), %eax	 RIP: 40ea75	 Bytes: 5
  %loadMem_40ea75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea75 = call %struct.Memory* @routine_imull___r9__r10_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea75)
  store %struct.Memory* %call_40ea75, %struct.Memory** %MEMORY

  ; Code: movl -0x1bc(%rbp), %esi	 RIP: 40ea7a	 Bytes: 6
  %loadMem_40ea7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea7a = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea7a)
  store %struct.Memory* %call_40ea7a, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x2c8(%rbp)	 RIP: 40ea80	 Bytes: 7
  %loadMem_40ea80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea80 = call %struct.Memory* @routine_movq__rcx__MINUS0x2c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea80)
  store %struct.Memory* %call_40ea80, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40ea87	 Bytes: 2
  %loadMem_40ea87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea87 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea87)
  store %struct.Memory* %call_40ea87, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40ea89	 Bytes: 2
  %loadMem_40ea89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea89 = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea89)
  store %struct.Memory* %call_40ea89, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %eax	 RIP: 40ea8b	 Bytes: 3
  %loadMem_40ea8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea8b = call %struct.Memory* @routine_sarl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea8b)
  store %struct.Memory* %call_40ea8b, %struct.Memory** %MEMORY

  ; Code: movl -0x2c0(%rbp), %esi	 RIP: 40ea8e	 Bytes: 6
  %loadMem_40ea8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea8e = call %struct.Memory* @routine_movl_MINUS0x2c0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea8e)
  store %struct.Memory* %call_40ea8e, %struct.Memory** %MEMORY

  ; Code: subl %eax, %esi	 RIP: 40ea94	 Bytes: 2
  %loadMem_40ea94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea94 = call %struct.Memory* @routine_subl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea94)
  store %struct.Memory* %call_40ea94, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40ea96	 Bytes: 3
  %loadMem_40ea96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea96 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea96)
  store %struct.Memory* %call_40ea96, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %eax	 RIP: 40ea99	 Bytes: 3
  %loadMem_40ea99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea99 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea99)
  store %struct.Memory* %call_40ea99, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r9	 RIP: 40ea9c	 Bytes: 3
  %loadMem_40ea9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea9c = call %struct.Memory* @routine_movslq__eax___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea9c)
  store %struct.Memory* %call_40ea9c, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 40ea9f	 Bytes: 4
  %loadMem_40ea9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ea9f = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ea9f)
  store %struct.Memory* %call_40ea9f, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40eaa3	 Bytes: 3
  %loadMem_40eaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaa3 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaa3)
  store %struct.Memory* %call_40eaa3, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40eaa6	 Bytes: 3
  %loadMem_40eaa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaa6 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaa6)
  store %struct.Memory* %call_40eaa6, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40eaa9	 Bytes: 3
  %loadMem_40eaa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaa9 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaa9)
  store %struct.Memory* %call_40eaa9, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r9	 RIP: 40eaac	 Bytes: 3
  %loadMem_40eaac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaac = call %struct.Memory* @routine_movslq__eax___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaac)
  store %struct.Memory* %call_40eaac, %struct.Memory** %MEMORY

  ; Code: subl (%r8,%r9,4), %esi	 RIP: 40eaaf	 Bytes: 4
  %loadMem_40eaaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaaf = call %struct.Memory* @routine_subl___r8__r9_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaaf)
  store %struct.Memory* %call_40eaaf, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %esi, %xmm0	 RIP: 40eab3	 Bytes: 4
  %loadMem_40eab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eab3 = call %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eab3)
  store %struct.Memory* %call_40eab3, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x218(%rbp)	 RIP: 40eab7	 Bytes: 8
  %loadMem_40eab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eab7 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eab7)
  store %struct.Memory* %call_40eab7, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %edi	 RIP: 40eabf	 Bytes: 6
  %loadMem_40eabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eabf = call %struct.Memory* @routine_movl_MINUS0x204__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eabf)
  store %struct.Memory* %call_40eabf, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %esi	 RIP: 40eac5	 Bytes: 3
  %loadMem_40eac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eac5 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eac5)
  store %struct.Memory* %call_40eac5, %struct.Memory** %MEMORY

  ; Code: movq -0x2c8(%rbp), %rcx	 RIP: 40eac8	 Bytes: 7
  %loadMem_40eac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eac8 = call %struct.Memory* @routine_movq_MINUS0x2c8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eac8)
  store %struct.Memory* %call_40eac8, %struct.Memory** %MEMORY

  ; Code: callq .levrun_linfo_inter	 RIP: 40eacf	 Bytes: 5
  %loadMem1_40eacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40eacf = call %struct.Memory* @routine_callq_.levrun_linfo_inter(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40eacf, i64 648097, i64 5, i64 5)
  store %struct.Memory* %call1_40eacf, %struct.Memory** %MEMORY

  %loadMem2_40eacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40eacf = load i64, i64* %3
  %call2_40eacf = call %struct.Memory* @sub_4ace70.levrun_linfo_inter(%struct.State* %0, i64  %loadPC_40eacf, %struct.Memory* %loadMem2_40eacf)
  store %struct.Memory* %call2_40eacf, %struct.Memory** %MEMORY

  ; Code: movsd -0x218(%rbp), %xmm0	 RIP: 40ead4	 Bytes: 8
  %loadMem_40ead4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ead4 = call %struct.Memory* @routine_movsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ead4)
  store %struct.Memory* %call_40ead4, %struct.Memory** %MEMORY

  ; Code: mulsd -0x218(%rbp), %xmm0	 RIP: 40eadc	 Bytes: 8
  %loadMem_40eadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eadc = call %struct.Memory* @routine_mulsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eadc)
  store %struct.Memory* %call_40eadc, %struct.Memory** %MEMORY

  ; Code: movsd -0x228(%rbp), %xmm1	 RIP: 40eae4	 Bytes: 8
  %loadMem_40eae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eae4 = call %struct.Memory* @routine_movsd_MINUS0x228__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eae4)
  store %struct.Memory* %call_40eae4, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x20c(%rbp), %xmm2	 RIP: 40eaec	 Bytes: 8
  %loadMem_40eaec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaec = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x20c__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaec)
  store %struct.Memory* %call_40eaec, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 40eaf4	 Bytes: 4
  %loadMem_40eaf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaf4 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaf4)
  store %struct.Memory* %call_40eaf4, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 40eaf8	 Bytes: 4
  %loadMem_40eaf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eaf8 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eaf8)
  store %struct.Memory* %call_40eaf8, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x218(%rbp)	 RIP: 40eafc	 Bytes: 8
  %loadMem_40eafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eafc = call %struct.Memory* @routine_movsd__xmm0__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eafc)
  store %struct.Memory* %call_40eafc, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40eb04	 Bytes: 8
  %loadMem_40eb04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb04 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb04)
  store %struct.Memory* %call_40eb04, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40eb0c	 Bytes: 7
  %loadMem_40eb0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb0c = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb0c)
  store %struct.Memory* %call_40eb0c, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40eb13	 Bytes: 3
  %loadMem_40eb13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb13 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb13)
  store %struct.Memory* %call_40eb13, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %eax	 RIP: 40eb16	 Bytes: 3
  %loadMem_40eb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb16 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb16)
  store %struct.Memory* %call_40eb16, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 40eb19	 Bytes: 3
  %loadMem_40eb19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb19 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb19)
  store %struct.Memory* %call_40eb19, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40eb1c	 Bytes: 4
  %loadMem_40eb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb1c = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb1c)
  store %struct.Memory* %call_40eb1c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40eb20	 Bytes: 3
  %loadMem_40eb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb20 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb20)
  store %struct.Memory* %call_40eb20, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40eb23	 Bytes: 3
  %loadMem_40eb23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb23 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb23)
  store %struct.Memory* %call_40eb23, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40eb26	 Bytes: 3
  %loadMem_40eb26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb26 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb26)
  store %struct.Memory* %call_40eb26, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 40eb29	 Bytes: 3
  %loadMem_40eb29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb29 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb29)
  store %struct.Memory* %call_40eb29, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %eax	 RIP: 40eb2c	 Bytes: 3
  %loadMem_40eb2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb2c = call %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb2c)
  store %struct.Memory* %call_40eb2c, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %edi	 RIP: 40eb2f	 Bytes: 6
  %loadMem_40eb2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb2f = call %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb2f)
  store %struct.Memory* %call_40eb2f, %struct.Memory** %MEMORY

  ; Code: movl -0x200(%rbp), %esi	 RIP: 40eb35	 Bytes: 6
  %loadMem_40eb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb35 = call %struct.Memory* @routine_movl_MINUS0x200__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb35)
  store %struct.Memory* %call_40eb35, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2cc(%rbp)	 RIP: 40eb3b	 Bytes: 6
  %loadMem_40eb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb3b = call %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb3b)
  store %struct.Memory* %call_40eb3b, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40eb41	 Bytes: 5
  %loadMem1_40eb41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40eb41 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40eb41, i64 419343, i64 5, i64 5)
  store %struct.Memory* %call1_40eb41, %struct.Memory** %MEMORY

  %loadMem2_40eb41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40eb41 = load i64, i64* %3
  %call2_40eb41 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40eb41, %struct.Memory* %loadMem2_40eb41)
  store %struct.Memory* %call2_40eb41, %struct.Memory** %MEMORY

  ; Code: leaq -0x20c(%rbp), %rdx	 RIP: 40eb46	 Bytes: 7
  %loadMem_40eb46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb46 = call %struct.Memory* @routine_leaq_MINUS0x20c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb46)
  store %struct.Memory* %call_40eb46, %struct.Memory** %MEMORY

  ; Code: leaq -0x210(%rbp), %rcx	 RIP: 40eb4d	 Bytes: 7
  %loadMem_40eb4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb4d = call %struct.Memory* @routine_leaq_MINUS0x210__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb4d)
  store %struct.Memory* %call_40eb4d, %struct.Memory** %MEMORY

  ; Code: leaq -0x190(%rbp), %r8	 RIP: 40eb54	 Bytes: 7
  %loadMem_40eb54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb54 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb54)
  store %struct.Memory* %call_40eb54, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2a50, %r9	 RIP: 40eb5b	 Bytes: 10
  %loadMem_40eb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb5b = call %struct.Memory* @routine_movq__0x4b2a50___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb5b)
  store %struct.Memory* %call_40eb5b, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %r10	 RIP: 40eb65	 Bytes: 10
  %loadMem_40eb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb65 = call %struct.Memory* @routine_movq__0x4b28d0___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb65)
  store %struct.Memory* %call_40eb65, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r11	 RIP: 40eb6f	 Bytes: 7
  %loadMem_40eb6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb6f = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb6f)
  store %struct.Memory* %call_40eb6f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r11	 RIP: 40eb76	 Bytes: 4
  %loadMem_40eb76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb76 = call %struct.Memory* @routine_shlq__0x6___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb76)
  store %struct.Memory* %call_40eb76, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r10	 RIP: 40eb7a	 Bytes: 3
  %loadMem_40eb7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb7a = call %struct.Memory* @routine_addq__r11___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb7a)
  store %struct.Memory* %call_40eb7a, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r11	 RIP: 40eb7d	 Bytes: 4
  %loadMem_40eb7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb7d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb7d)
  store %struct.Memory* %call_40eb7d, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r11	 RIP: 40eb81	 Bytes: 4
  %loadMem_40eb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb81 = call %struct.Memory* @routine_shlq__0x4___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb81)
  store %struct.Memory* %call_40eb81, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r10	 RIP: 40eb85	 Bytes: 3
  %loadMem_40eb85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb85 = call %struct.Memory* @routine_addq__r11___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb85)
  store %struct.Memory* %call_40eb85, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r11	 RIP: 40eb88	 Bytes: 4
  %loadMem_40eb88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb88 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb88)
  store %struct.Memory* %call_40eb88, %struct.Memory** %MEMORY

  ; Code: imull (%r10,%r11,4), %eax	 RIP: 40eb8c	 Bytes: 5
  %loadMem_40eb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb8c = call %struct.Memory* @routine_imull___r10__r11_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb8c)
  store %struct.Memory* %call_40eb8c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r10	 RIP: 40eb91	 Bytes: 4
  %loadMem_40eb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb91 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb91)
  store %struct.Memory* %call_40eb91, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r10	 RIP: 40eb95	 Bytes: 4
  %loadMem_40eb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb95 = call %struct.Memory* @routine_shlq__0x4___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb95)
  store %struct.Memory* %call_40eb95, %struct.Memory** %MEMORY

  ; Code: addq %r10, %r9	 RIP: 40eb99	 Bytes: 3
  %loadMem_40eb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb99 = call %struct.Memory* @routine_addq__r10___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb99)
  store %struct.Memory* %call_40eb99, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r10	 RIP: 40eb9c	 Bytes: 4
  %loadMem_40eb9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eb9c = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eb9c)
  store %struct.Memory* %call_40eb9c, %struct.Memory** %MEMORY

  ; Code: imull (%r9,%r10,4), %eax	 RIP: 40eba0	 Bytes: 5
  %loadMem_40eba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eba0 = call %struct.Memory* @routine_imull___r9__r10_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eba0)
  store %struct.Memory* %call_40eba0, %struct.Memory** %MEMORY

  ; Code: movl -0x1bc(%rbp), %esi	 RIP: 40eba5	 Bytes: 6
  %loadMem_40eba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eba5 = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eba5)
  store %struct.Memory* %call_40eba5, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x2d8(%rbp)	 RIP: 40ebab	 Bytes: 7
  %loadMem_40ebab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebab = call %struct.Memory* @routine_movq__rcx__MINUS0x2d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebab)
  store %struct.Memory* %call_40ebab, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40ebb2	 Bytes: 2
  %loadMem_40ebb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebb2 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebb2)
  store %struct.Memory* %call_40ebb2, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40ebb4	 Bytes: 2
  %loadMem_40ebb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebb4 = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebb4)
  store %struct.Memory* %call_40ebb4, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %eax	 RIP: 40ebb6	 Bytes: 3
  %loadMem_40ebb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebb6 = call %struct.Memory* @routine_sarl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebb6)
  store %struct.Memory* %call_40ebb6, %struct.Memory** %MEMORY

  ; Code: movl -0x2cc(%rbp), %esi	 RIP: 40ebb9	 Bytes: 6
  %loadMem_40ebb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebb9 = call %struct.Memory* @routine_movl_MINUS0x2cc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebb9)
  store %struct.Memory* %call_40ebb9, %struct.Memory** %MEMORY

  ; Code: subl %eax, %esi	 RIP: 40ebbf	 Bytes: 2
  %loadMem_40ebbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebbf = call %struct.Memory* @routine_subl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebbf)
  store %struct.Memory* %call_40ebbf, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40ebc1	 Bytes: 3
  %loadMem_40ebc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebc1 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebc1)
  store %struct.Memory* %call_40ebc1, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %eax	 RIP: 40ebc4	 Bytes: 3
  %loadMem_40ebc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebc4 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebc4)
  store %struct.Memory* %call_40ebc4, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r9	 RIP: 40ebc7	 Bytes: 3
  %loadMem_40ebc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebc7 = call %struct.Memory* @routine_movslq__eax___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebc7)
  store %struct.Memory* %call_40ebc7, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 40ebca	 Bytes: 4
  %loadMem_40ebca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebca = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebca)
  store %struct.Memory* %call_40ebca, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 40ebce	 Bytes: 3
  %loadMem_40ebce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebce = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebce)
  store %struct.Memory* %call_40ebce, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40ebd1	 Bytes: 3
  %loadMem_40ebd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebd1 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebd1)
  store %struct.Memory* %call_40ebd1, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %eax	 RIP: 40ebd4	 Bytes: 3
  %loadMem_40ebd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebd4 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebd4)
  store %struct.Memory* %call_40ebd4, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r9	 RIP: 40ebd7	 Bytes: 3
  %loadMem_40ebd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebd7 = call %struct.Memory* @routine_movslq__eax___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebd7)
  store %struct.Memory* %call_40ebd7, %struct.Memory** %MEMORY

  ; Code: subl (%r8,%r9,4), %esi	 RIP: 40ebda	 Bytes: 4
  %loadMem_40ebda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebda = call %struct.Memory* @routine_subl___r8__r9_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebda)
  store %struct.Memory* %call_40ebda, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %esi, %xmm0	 RIP: 40ebde	 Bytes: 4
  %loadMem_40ebde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebde = call %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebde)
  store %struct.Memory* %call_40ebde, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x220(%rbp)	 RIP: 40ebe2	 Bytes: 8
  %loadMem_40ebe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebe2 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebe2)
  store %struct.Memory* %call_40ebe2, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %edi	 RIP: 40ebea	 Bytes: 6
  %loadMem_40ebea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebea = call %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebea)
  store %struct.Memory* %call_40ebea, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %esi	 RIP: 40ebf0	 Bytes: 3
  %loadMem_40ebf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebf0 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebf0)
  store %struct.Memory* %call_40ebf0, %struct.Memory** %MEMORY

  ; Code: movq -0x2d8(%rbp), %rcx	 RIP: 40ebf3	 Bytes: 7
  %loadMem_40ebf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebf3 = call %struct.Memory* @routine_movq_MINUS0x2d8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebf3)
  store %struct.Memory* %call_40ebf3, %struct.Memory** %MEMORY

  ; Code: callq .levrun_linfo_inter	 RIP: 40ebfa	 Bytes: 5
  %loadMem1_40ebfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ebfa = call %struct.Memory* @routine_callq_.levrun_linfo_inter(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ebfa, i64 647798, i64 5, i64 5)
  store %struct.Memory* %call1_40ebfa, %struct.Memory** %MEMORY

  %loadMem2_40ebfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ebfa = load i64, i64* %3
  %call2_40ebfa = call %struct.Memory* @sub_4ace70.levrun_linfo_inter(%struct.State* %0, i64  %loadPC_40ebfa, %struct.Memory* %loadMem2_40ebfa)
  store %struct.Memory* %call2_40ebfa, %struct.Memory** %MEMORY

  ; Code: movsd -0x220(%rbp), %xmm0	 RIP: 40ebff	 Bytes: 8
  %loadMem_40ebff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ebff = call %struct.Memory* @routine_movsd_MINUS0x220__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ebff)
  store %struct.Memory* %call_40ebff, %struct.Memory** %MEMORY

  ; Code: mulsd -0x220(%rbp), %xmm0	 RIP: 40ec07	 Bytes: 8
  %loadMem_40ec07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec07 = call %struct.Memory* @routine_mulsd_MINUS0x220__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec07)
  store %struct.Memory* %call_40ec07, %struct.Memory** %MEMORY

  ; Code: movsd -0x228(%rbp), %xmm1	 RIP: 40ec0f	 Bytes: 8
  %loadMem_40ec0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec0f = call %struct.Memory* @routine_movsd_MINUS0x228__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec0f)
  store %struct.Memory* %call_40ec0f, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x20c(%rbp), %xmm2	 RIP: 40ec17	 Bytes: 8
  %loadMem_40ec17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec17 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x20c__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec17)
  store %struct.Memory* %call_40ec17, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 40ec1f	 Bytes: 4
  %loadMem_40ec1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec1f = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec1f)
  store %struct.Memory* %call_40ec1f, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 40ec23	 Bytes: 4
  %loadMem_40ec23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec23 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec23)
  store %struct.Memory* %call_40ec23, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x220(%rbp)	 RIP: 40ec27	 Bytes: 8
  %loadMem_40ec27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec27 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec27)
  store %struct.Memory* %call_40ec27, %struct.Memory** %MEMORY

  ; Code: movsd -0x218(%rbp), %xmm0	 RIP: 40ec2f	 Bytes: 8
  %loadMem_40ec2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec2f = call %struct.Memory* @routine_movsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec2f)
  store %struct.Memory* %call_40ec2f, %struct.Memory** %MEMORY

  ; Code: ucomisd -0x220(%rbp), %xmm0	 RIP: 40ec37	 Bytes: 8
  %loadMem_40ec37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec37 = call %struct.Memory* @routine_ucomisd_MINUS0x220__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec37)
  store %struct.Memory* %call_40ec37, %struct.Memory** %MEMORY

  ; Code: jne .L_40eca0	 RIP: 40ec3f	 Bytes: 6
  %loadMem_40ec3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec3f = call %struct.Memory* @routine_jne_.L_40eca0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec3f, i8* %BRANCH_TAKEN, i64 97, i64 6, i64 6)
  store %struct.Memory* %call_40ec3f, %struct.Memory** %MEMORY

  %loadBr_40ec3f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ec3f = icmp eq i8 %loadBr_40ec3f, 1
  br i1 %cmpBr_40ec3f, label %block_.L_40eca0, label %block_40ec45

block_40ec45:
  ; Code: jp .L_40eca0	 RIP: 40ec45	 Bytes: 6
  %loadMem_40ec45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec45 = call %struct.Memory* @routine_jp_.L_40eca0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec45, i8* %BRANCH_TAKEN, i64 91, i64 6, i64 6)
  store %struct.Memory* %call_40ec45, %struct.Memory** %MEMORY

  %loadBr_40ec45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ec45 = icmp eq i8 %loadBr_40ec45, 1
  br i1 %cmpBr_40ec45, label %block_.L_40eca0, label %block_40ec4b

block_40ec4b:
  ; Code: movl -0x204(%rbp), %edi	 RIP: 40ec4b	 Bytes: 6
  %loadMem_40ec4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec4b = call %struct.Memory* @routine_movl_MINUS0x204__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec4b)
  store %struct.Memory* %call_40ec4b, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40ec51	 Bytes: 5
  %loadMem1_40ec51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ec51 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ec51, i64 -56401, i64 5, i64 5)
  store %struct.Memory* %call1_40ec51, %struct.Memory** %MEMORY

  %loadMem2_40ec51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ec51 = load i64, i64* %3
  %call2_40ec51 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40ec51, %struct.Memory* %loadMem2_40ec51)
  store %struct.Memory* %call2_40ec51, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %edi	 RIP: 40ec56	 Bytes: 6
  %loadMem_40ec56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec56 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec56)
  store %struct.Memory* %call_40ec56, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2dc(%rbp)	 RIP: 40ec5c	 Bytes: 6
  %loadMem_40ec5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec5c = call %struct.Memory* @routine_movl__eax__MINUS0x2dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec5c)
  store %struct.Memory* %call_40ec5c, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40ec62	 Bytes: 5
  %loadMem1_40ec62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ec62 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ec62, i64 -56418, i64 5, i64 5)
  store %struct.Memory* %call1_40ec62, %struct.Memory** %MEMORY

  %loadMem2_40ec62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ec62 = load i64, i64* %3
  %call2_40ec62 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40ec62, %struct.Memory* %loadMem2_40ec62)
  store %struct.Memory* %call2_40ec62, %struct.Memory** %MEMORY

  ; Code: movl -0x2dc(%rbp), %edi	 RIP: 40ec67	 Bytes: 6
  %loadMem_40ec67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec67 = call %struct.Memory* @routine_movl_MINUS0x2dc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec67)
  store %struct.Memory* %call_40ec67, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %edi	 RIP: 40ec6d	 Bytes: 2
  %loadMem_40ec6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec6d = call %struct.Memory* @routine_cmpl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec6d)
  store %struct.Memory* %call_40ec6d, %struct.Memory** %MEMORY

  ; Code: jge .L_40ec86	 RIP: 40ec6f	 Bytes: 6
  %loadMem_40ec6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec6f = call %struct.Memory* @routine_jge_.L_40ec86(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec6f, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40ec6f, %struct.Memory** %MEMORY

  %loadBr_40ec6f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ec6f = icmp eq i8 %loadBr_40ec6f, 1
  br i1 %cmpBr_40ec6f, label %block_.L_40ec86, label %block_40ec75

block_40ec75:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40ec75	 Bytes: 6
  %loadMem_40ec75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec75 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec75)
  store %struct.Memory* %call_40ec75, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e0(%rbp)	 RIP: 40ec7b	 Bytes: 6
  %loadMem_40ec7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec7b = call %struct.Memory* @routine_movl__eax__MINUS0x2e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec7b)
  store %struct.Memory* %call_40ec7b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ec92	 RIP: 40ec81	 Bytes: 5
  %loadMem_40ec81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec81 = call %struct.Memory* @routine_jmpq_.L_40ec92(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec81, i64 17, i64 5)
  store %struct.Memory* %call_40ec81, %struct.Memory** %MEMORY

  br label %block_.L_40ec92

  ; Code: .L_40ec86:	 RIP: 40ec86	 Bytes: 0
block_.L_40ec86:

  ; Code: movl -0x208(%rbp), %eax	 RIP: 40ec86	 Bytes: 6
  %loadMem_40ec86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec86 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec86)
  store %struct.Memory* %call_40ec86, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e0(%rbp)	 RIP: 40ec8c	 Bytes: 6
  %loadMem_40ec8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec8c = call %struct.Memory* @routine_movl__eax__MINUS0x2e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec8c)
  store %struct.Memory* %call_40ec8c, %struct.Memory** %MEMORY

  ; Code: .L_40ec92:	 RIP: 40ec92	 Bytes: 0
  br label %block_.L_40ec92
block_.L_40ec92:

  ; Code: movl -0x2e0(%rbp), %eax	 RIP: 40ec92	 Bytes: 6
  %loadMem_40ec92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec92 = call %struct.Memory* @routine_movl_MINUS0x2e0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec92)
  store %struct.Memory* %call_40ec92, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40ec98	 Bytes: 3
  %loadMem_40ec98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec98 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec98)
  store %struct.Memory* %call_40ec98, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ecd6	 RIP: 40ec9b	 Bytes: 5
  %loadMem_40ec9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ec9b = call %struct.Memory* @routine_jmpq_.L_40ecd6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ec9b, i64 59, i64 5)
  store %struct.Memory* %call_40ec9b, %struct.Memory** %MEMORY

  br label %block_.L_40ecd6

  ; Code: .L_40eca0:	 RIP: 40eca0	 Bytes: 0
block_.L_40eca0:

  ; Code: movsd -0x218(%rbp), %xmm0	 RIP: 40eca0	 Bytes: 8
  %loadMem_40eca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eca0 = call %struct.Memory* @routine_movsd_MINUS0x218__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eca0)
  store %struct.Memory* %call_40eca0, %struct.Memory** %MEMORY

  ; Code: movsd -0x220(%rbp), %xmm1	 RIP: 40eca8	 Bytes: 8
  %loadMem_40eca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eca8 = call %struct.Memory* @routine_movsd_MINUS0x220__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eca8)
  store %struct.Memory* %call_40eca8, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 40ecb0	 Bytes: 4
  %loadMem_40ecb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecb0 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecb0)
  store %struct.Memory* %call_40ecb0, %struct.Memory** %MEMORY

  ; Code: jbe .L_40ecc8	 RIP: 40ecb4	 Bytes: 6
  %loadMem_40ecb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecb4 = call %struct.Memory* @routine_jbe_.L_40ecc8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecb4, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_40ecb4, %struct.Memory** %MEMORY

  %loadBr_40ecb4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ecb4 = icmp eq i8 %loadBr_40ecb4, 1
  br i1 %cmpBr_40ecb4, label %block_.L_40ecc8, label %block_40ecba

block_40ecba:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40ecba	 Bytes: 6
  %loadMem_40ecba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecba = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecba)
  store %struct.Memory* %call_40ecba, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40ecc0	 Bytes: 3
  %loadMem_40ecc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecc0 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecc0)
  store %struct.Memory* %call_40ecc0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ecd1	 RIP: 40ecc3	 Bytes: 5
  %loadMem_40ecc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecc3 = call %struct.Memory* @routine_jmpq_.L_40ecd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecc3, i64 14, i64 5)
  store %struct.Memory* %call_40ecc3, %struct.Memory** %MEMORY

  br label %block_.L_40ecd1

  ; Code: .L_40ecc8:	 RIP: 40ecc8	 Bytes: 0
block_.L_40ecc8:

  ; Code: movl -0x208(%rbp), %eax	 RIP: 40ecc8	 Bytes: 6
  %loadMem_40ecc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecc8 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecc8)
  store %struct.Memory* %call_40ecc8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40ecce	 Bytes: 3
  %loadMem_40ecce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecce = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecce)
  store %struct.Memory* %call_40ecce, %struct.Memory** %MEMORY

  ; Code: .L_40ecd1:	 RIP: 40ecd1	 Bytes: 0
  br label %block_.L_40ecd1
block_.L_40ecd1:

  ; Code: jmpq .L_40ecd6	 RIP: 40ecd1	 Bytes: 5
  %loadMem_40ecd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecd1 = call %struct.Memory* @routine_jmpq_.L_40ecd6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecd1, i64 5, i64 5)
  store %struct.Memory* %call_40ecd1, %struct.Memory** %MEMORY

  br label %block_.L_40ecd6

  ; Code: .L_40ecd6:	 RIP: 40ecd6	 Bytes: 0
block_.L_40ecd6:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 40ecd6	 Bytes: 3
  %loadMem_40ecd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecd6 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecd6)
  store %struct.Memory* %call_40ecd6, %struct.Memory** %MEMORY

  ; Code: cmpl -0x204(%rbp), %eax	 RIP: 40ecd9	 Bytes: 6
  %loadMem_40ecd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecd9 = call %struct.Memory* @routine_cmpl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecd9)
  store %struct.Memory* %call_40ecd9, %struct.Memory** %MEMORY

  ; Code: jne .L_40ecf6	 RIP: 40ecdf	 Bytes: 6
  %loadMem_40ecdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecdf = call %struct.Memory* @routine_jne_.L_40ecf6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecdf, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40ecdf, %struct.Memory** %MEMORY

  %loadBr_40ecdf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ecdf = icmp eq i8 %loadBr_40ecdf, 1
  br i1 %cmpBr_40ecdf, label %block_.L_40ecf6, label %block_40ece5

block_40ece5:
  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40ece5	 Bytes: 6
  %loadMem_40ece5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ece5 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ece5)
  store %struct.Memory* %call_40ece5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e4(%rbp)	 RIP: 40eceb	 Bytes: 6
  %loadMem_40eceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eceb = call %struct.Memory* @routine_movl__eax__MINUS0x2e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eceb)
  store %struct.Memory* %call_40eceb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ed02	 RIP: 40ecf1	 Bytes: 5
  %loadMem_40ecf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecf1 = call %struct.Memory* @routine_jmpq_.L_40ed02(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecf1, i64 17, i64 5)
  store %struct.Memory* %call_40ecf1, %struct.Memory** %MEMORY

  br label %block_.L_40ed02

  ; Code: .L_40ecf6:	 RIP: 40ecf6	 Bytes: 0
block_.L_40ecf6:

  ; Code: movl -0x200(%rbp), %eax	 RIP: 40ecf6	 Bytes: 6
  %loadMem_40ecf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecf6 = call %struct.Memory* @routine_movl_MINUS0x200__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecf6)
  store %struct.Memory* %call_40ecf6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e4(%rbp)	 RIP: 40ecfc	 Bytes: 6
  %loadMem_40ecfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ecfc = call %struct.Memory* @routine_movl__eax__MINUS0x2e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ecfc)
  store %struct.Memory* %call_40ecfc, %struct.Memory** %MEMORY

  ; Code: .L_40ed02:	 RIP: 40ed02	 Bytes: 0
  br label %block_.L_40ed02
block_.L_40ed02:

  ; Code: movl -0x2e4(%rbp), %eax	 RIP: 40ed02	 Bytes: 6
  %loadMem_40ed02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed02 = call %struct.Memory* @routine_movl_MINUS0x2e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed02)
  store %struct.Memory* %call_40ed02, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 40ed08	 Bytes: 3
  %loadMem_40ed08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed08 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed08)
  store %struct.Memory* %call_40ed08, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40eda4	 RIP: 40ed0b	 Bytes: 5
  %loadMem_40ed0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed0b = call %struct.Memory* @routine_jmpq_.L_40eda4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed0b, i64 153, i64 5)
  store %struct.Memory* %call_40ed0b, %struct.Memory** %MEMORY

  br label %block_.L_40eda4

  ; Code: .L_40ed10:	 RIP: 40ed10	 Bytes: 0
block_.L_40ed10:

  ; Code: movl -0x204(%rbp), %eax	 RIP: 40ed10	 Bytes: 6
  %loadMem_40ed10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed10 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed10)
  store %struct.Memory* %call_40ed10, %struct.Memory** %MEMORY

  ; Code: cmpl -0x208(%rbp), %eax	 RIP: 40ed16	 Bytes: 6
  %loadMem_40ed16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed16 = call %struct.Memory* @routine_cmpl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed16)
  store %struct.Memory* %call_40ed16, %struct.Memory** %MEMORY

  ; Code: jne .L_40ed39	 RIP: 40ed1c	 Bytes: 6
  %loadMem_40ed1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed1c = call %struct.Memory* @routine_jne_.L_40ed39(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed1c, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_40ed1c, %struct.Memory** %MEMORY

  %loadBr_40ed1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ed1c = icmp eq i8 %loadBr_40ed1c, 1
  br i1 %cmpBr_40ed1c, label %block_.L_40ed39, label %block_40ed22

block_40ed22:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40ed22	 Bytes: 6
  %loadMem_40ed22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed22 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed22)
  store %struct.Memory* %call_40ed22, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40ed28	 Bytes: 3
  %loadMem_40ed28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed28 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed28)
  store %struct.Memory* %call_40ed28, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40ed2b	 Bytes: 6
  %loadMem_40ed2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed2b = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed2b)
  store %struct.Memory* %call_40ed2b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 40ed31	 Bytes: 3
  %loadMem_40ed31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed31 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed31)
  store %struct.Memory* %call_40ed31, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ed9f	 RIP: 40ed34	 Bytes: 5
  %loadMem_40ed34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed34 = call %struct.Memory* @routine_jmpq_.L_40ed9f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed34, i64 107, i64 5)
  store %struct.Memory* %call_40ed34, %struct.Memory** %MEMORY

  br label %block_.L_40ed9f

  ; Code: .L_40ed39:	 RIP: 40ed39	 Bytes: 0
block_.L_40ed39:

  ; Code: cmpl $0x0, -0x204(%rbp)	 RIP: 40ed39	 Bytes: 7
  %loadMem_40ed39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed39 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed39)
  store %struct.Memory* %call_40ed39, %struct.Memory** %MEMORY

  ; Code: jne .L_40ed57	 RIP: 40ed40	 Bytes: 6
  %loadMem_40ed40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed40 = call %struct.Memory* @routine_jne_.L_40ed57(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed40, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40ed40, %struct.Memory** %MEMORY

  %loadBr_40ed40 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ed40 = icmp eq i8 %loadBr_40ed40, 1
  br i1 %cmpBr_40ed40, label %block_.L_40ed57, label %block_40ed46

block_40ed46:
  ; Code: movl -0x204(%rbp), %eax	 RIP: 40ed46	 Bytes: 6
  %loadMem_40ed46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed46 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed46)
  store %struct.Memory* %call_40ed46, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e8(%rbp)	 RIP: 40ed4c	 Bytes: 6
  %loadMem_40ed4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed4c = call %struct.Memory* @routine_movl__eax__MINUS0x2e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed4c)
  store %struct.Memory* %call_40ed4c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ed63	 RIP: 40ed52	 Bytes: 5
  %loadMem_40ed52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed52 = call %struct.Memory* @routine_jmpq_.L_40ed63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed52, i64 17, i64 5)
  store %struct.Memory* %call_40ed52, %struct.Memory** %MEMORY

  br label %block_.L_40ed63

  ; Code: .L_40ed57:	 RIP: 40ed57	 Bytes: 0
block_.L_40ed57:

  ; Code: movl -0x208(%rbp), %eax	 RIP: 40ed57	 Bytes: 6
  %loadMem_40ed57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed57 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed57)
  store %struct.Memory* %call_40ed57, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e8(%rbp)	 RIP: 40ed5d	 Bytes: 6
  %loadMem_40ed5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed5d = call %struct.Memory* @routine_movl__eax__MINUS0x2e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed5d)
  store %struct.Memory* %call_40ed5d, %struct.Memory** %MEMORY

  ; Code: .L_40ed63:	 RIP: 40ed63	 Bytes: 0
  br label %block_.L_40ed63
block_.L_40ed63:

  ; Code: movl -0x2e8(%rbp), %eax	 RIP: 40ed63	 Bytes: 6
  %loadMem_40ed63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed63 = call %struct.Memory* @routine_movl_MINUS0x2e8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed63)
  store %struct.Memory* %call_40ed63, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 40ed69	 Bytes: 3
  %loadMem_40ed69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed69 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed69)
  store %struct.Memory* %call_40ed69, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x204(%rbp)	 RIP: 40ed6c	 Bytes: 7
  %loadMem_40ed6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed6c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed6c)
  store %struct.Memory* %call_40ed6c, %struct.Memory** %MEMORY

  ; Code: jne .L_40ed8a	 RIP: 40ed73	 Bytes: 6
  %loadMem_40ed73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed73 = call %struct.Memory* @routine_jne_.L_40ed8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed73, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_40ed73, %struct.Memory** %MEMORY

  %loadBr_40ed73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ed73 = icmp eq i8 %loadBr_40ed73, 1
  br i1 %cmpBr_40ed73, label %block_.L_40ed8a, label %block_40ed79

block_40ed79:
  ; Code: movl -0x1fc(%rbp), %eax	 RIP: 40ed79	 Bytes: 6
  %loadMem_40ed79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed79 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed79)
  store %struct.Memory* %call_40ed79, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ec(%rbp)	 RIP: 40ed7f	 Bytes: 6
  %loadMem_40ed7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed7f = call %struct.Memory* @routine_movl__eax__MINUS0x2ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed7f)
  store %struct.Memory* %call_40ed7f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ed96	 RIP: 40ed85	 Bytes: 5
  %loadMem_40ed85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed85 = call %struct.Memory* @routine_jmpq_.L_40ed96(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed85, i64 17, i64 5)
  store %struct.Memory* %call_40ed85, %struct.Memory** %MEMORY

  br label %block_.L_40ed96

  ; Code: .L_40ed8a:	 RIP: 40ed8a	 Bytes: 0
block_.L_40ed8a:

  ; Code: movl -0x200(%rbp), %eax	 RIP: 40ed8a	 Bytes: 6
  %loadMem_40ed8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed8a = call %struct.Memory* @routine_movl_MINUS0x200__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed8a)
  store %struct.Memory* %call_40ed8a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ec(%rbp)	 RIP: 40ed90	 Bytes: 6
  %loadMem_40ed90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed90 = call %struct.Memory* @routine_movl__eax__MINUS0x2ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed90)
  store %struct.Memory* %call_40ed90, %struct.Memory** %MEMORY

  ; Code: .L_40ed96:	 RIP: 40ed96	 Bytes: 0
  br label %block_.L_40ed96
block_.L_40ed96:

  ; Code: movl -0x2ec(%rbp), %eax	 RIP: 40ed96	 Bytes: 6
  %loadMem_40ed96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed96 = call %struct.Memory* @routine_movl_MINUS0x2ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed96)
  store %struct.Memory* %call_40ed96, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 40ed9c	 Bytes: 3
  %loadMem_40ed9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed9c = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed9c)
  store %struct.Memory* %call_40ed9c, %struct.Memory** %MEMORY

  ; Code: .L_40ed9f:	 RIP: 40ed9f	 Bytes: 0
  br label %block_.L_40ed9f
block_.L_40ed9f:

  ; Code: jmpq .L_40eda4	 RIP: 40ed9f	 Bytes: 5
  %loadMem_40ed9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ed9f = call %struct.Memory* @routine_jmpq_.L_40eda4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ed9f, i64 5, i64 5)
  store %struct.Memory* %call_40ed9f, %struct.Memory** %MEMORY

  br label %block_.L_40eda4

  ; Code: .L_40eda4:	 RIP: 40eda4	 Bytes: 0
block_.L_40eda4:

  ; Code: cmpl $0x0, -0x3c(%rbp)	 RIP: 40eda4	 Bytes: 4
  %loadMem_40eda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eda4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eda4)
  store %struct.Memory* %call_40eda4, %struct.Memory** %MEMORY

  ; Code: je .L_40eee0	 RIP: 40eda8	 Bytes: 6
  %loadMem_40eda8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eda8 = call %struct.Memory* @routine_je_.L_40eee0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eda8, i8* %BRANCH_TAKEN, i64 312, i64 6, i64 6)
  store %struct.Memory* %call_40eda8, %struct.Memory** %MEMORY

  %loadBr_40eda8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40eda8 = icmp eq i8 %loadBr_40eda8, 1
  br i1 %cmpBr_40eda8, label %block_.L_40eee0, label %block_40edae

block_40edae:
  ; Code: movl $0x1, %eax	 RIP: 40edae	 Bytes: 5
  %loadMem_40edae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edae = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edae)
  store %struct.Memory* %call_40edae, %struct.Memory** %MEMORY

  ; Code: movl -0x4(%rbp), %ecx	 RIP: 40edb3	 Bytes: 3
  %loadMem_40edb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edb3 = call %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edb3)
  store %struct.Memory* %call_40edb3, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %ecx	 RIP: 40edb6	 Bytes: 3
  %loadMem_40edb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edb6 = call %struct.Memory* @routine_shll__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edb6)
  store %struct.Memory* %call_40edb6, %struct.Memory** %MEMORY

  ; Code: addl $0x10, %ecx	 RIP: 40edb9	 Bytes: 3
  %loadMem_40edb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edb9 = call %struct.Memory* @routine_addl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edb9)
  store %struct.Memory* %call_40edb9, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edx	 RIP: 40edbc	 Bytes: 3
  %loadMem_40edbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edbc = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edbc)
  store %struct.Memory* %call_40edbc, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 40edbf	 Bytes: 3
  %loadMem_40edbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edbf = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edbf)
  store %struct.Memory* %call_40edbf, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40edc2	 Bytes: 3
  %loadMem_40edc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edc2 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edc2)
  store %struct.Memory* %call_40edc2, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 40edc5	 Bytes: 3
  %loadMem_40edc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edc5 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edc5)
  store %struct.Memory* %call_40edc5, %struct.Memory** %MEMORY

  ; Code: addl %esi, %edx	 RIP: 40edc8	 Bytes: 2
  %loadMem_40edc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edc8 = call %struct.Memory* @routine_addl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edc8)
  store %struct.Memory* %call_40edc8, %struct.Memory** %MEMORY

  ; Code: addl %edx, %ecx	 RIP: 40edca	 Bytes: 2
  %loadMem_40edca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edca = call %struct.Memory* @routine_addl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edca)
  store %struct.Memory* %call_40edca, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40edcc	 Bytes: 2
  %loadMem_40edcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edcc = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edcc)
  store %struct.Memory* %call_40edcc, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 40edce	 Bytes: 3
  %loadMem_40edce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edce = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edce)
  store %struct.Memory* %call_40edce, %struct.Memory** %MEMORY

  ; Code: movq -0x1b8(%rbp), %r8	 RIP: 40edd1	 Bytes: 7
  %loadMem_40edd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edd1 = call %struct.Memory* @routine_movq_MINUS0x1b8__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edd1)
  store %struct.Memory* %call_40edd1, %struct.Memory** %MEMORY

  ; Code: orq 0x1d0(%r8), %rdi	 RIP: 40edd8	 Bytes: 7
  %loadMem_40edd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edd8 = call %struct.Memory* @routine_orq_0x1d0__r8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edd8)
  store %struct.Memory* %call_40edd8, %struct.Memory** %MEMORY

  ; Code: movq %rdi, 0x1d0(%r8)	 RIP: 40eddf	 Bytes: 7
  %loadMem_40eddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eddf = call %struct.Memory* @routine_movq__rdi__0x1d0__r8_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eddf)
  store %struct.Memory* %call_40eddf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x3c(%rbp)	 RIP: 40ede6	 Bytes: 4
  %loadMem_40ede6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ede6 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ede6)
  store %struct.Memory* %call_40ede6, %struct.Memory** %MEMORY

  ; Code: jle .L_40ee06	 RIP: 40edea	 Bytes: 6
  %loadMem_40edea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edea = call %struct.Memory* @routine_jle_.L_40ee06(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edea, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_40edea, %struct.Memory** %MEMORY

  %loadBr_40edea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40edea = icmp eq i8 %loadBr_40edea, 1
  br i1 %cmpBr_40edea, label %block_.L_40ee06, label %block_40edf0

block_40edf0:
  ; Code: movl -0x84(%rbp), %eax	 RIP: 40edf0	 Bytes: 6
  %loadMem_40edf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edf0 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edf0)
  store %struct.Memory* %call_40edf0, %struct.Memory** %MEMORY

  ; Code: addl $0xf423f, %eax	 RIP: 40edf6	 Bytes: 5
  %loadMem_40edf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edf6 = call %struct.Memory* @routine_addl__0xf423f___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edf6)
  store %struct.Memory* %call_40edf6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x84(%rbp)	 RIP: 40edfb	 Bytes: 6
  %loadMem_40edfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40edfb = call %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40edfb)
  store %struct.Memory* %call_40edfb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40ee3a	 RIP: 40ee01	 Bytes: 5
  %loadMem_40ee01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee01 = call %struct.Memory* @routine_jmpq_.L_40ee3a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee01, i64 57, i64 5)
  store %struct.Memory* %call_40ee01, %struct.Memory** %MEMORY

  br label %block_.L_40ee3a

  ; Code: .L_40ee06:	 RIP: 40ee06	 Bytes: 0
block_.L_40ee06:

  ; Code: movq $0x4b23a0, %rax	 RIP: 40ee06	 Bytes: 10
  %loadMem_40ee06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee06 = call %struct.Memory* @routine_movq__0x4b23a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee06)
  store %struct.Memory* %call_40ee06, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 40ee10	 Bytes: 8
  %loadMem_40ee10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee10 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee10)
  store %struct.Memory* %call_40ee10, %struct.Memory** %MEMORY

  ; Code: movslq 0x9a4(%rcx), %rcx	 RIP: 40ee18	 Bytes: 7
  %loadMem_40ee18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee18 = call %struct.Memory* @routine_movslq_0x9a4__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee18)
  store %struct.Memory* %call_40ee18, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 40ee1f	 Bytes: 4
  %loadMem_40ee1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee1f = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee1f)
  store %struct.Memory* %call_40ee1f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40ee23	 Bytes: 3
  %loadMem_40ee23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee23 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee23)
  store %struct.Memory* %call_40ee23, %struct.Memory** %MEMORY

  ; Code: movslq -0x44(%rbp), %rcx	 RIP: 40ee26	 Bytes: 4
  %loadMem_40ee26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee26 = call %struct.Memory* @routine_movslq_MINUS0x44__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee26)
  store %struct.Memory* %call_40ee26, %struct.Memory** %MEMORY

  ; Code: movzbl (%rax,%rcx,1), %edx	 RIP: 40ee2a	 Bytes: 4
  %loadMem_40ee2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee2a = call %struct.Memory* @routine_movzbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee2a)
  store %struct.Memory* %call_40ee2a, %struct.Memory** %MEMORY

  ; Code: addl -0x84(%rbp), %edx	 RIP: 40ee2e	 Bytes: 6
  %loadMem_40ee2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee2e = call %struct.Memory* @routine_addl_MINUS0x84__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee2e)
  store %struct.Memory* %call_40ee2e, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x84(%rbp)	 RIP: 40ee34	 Bytes: 6
  %loadMem_40ee34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee34 = call %struct.Memory* @routine_movl__edx__MINUS0x84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee34)
  store %struct.Memory* %call_40ee34, %struct.Memory** %MEMORY

  ; Code: .L_40ee3a:	 RIP: 40ee3a	 Bytes: 0
  br label %block_.L_40ee3a
block_.L_40ee3a:

  ; Code: movl $0x2, -0x88(%rbp)	 RIP: 40ee3a	 Bytes: 10
  %loadMem_40ee3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee3a = call %struct.Memory* @routine_movl__0x2__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee3a)
  store %struct.Memory* %call_40ee3a, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %edi	 RIP: 40ee44	 Bytes: 3
  %loadMem_40ee44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee44 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee44)
  store %struct.Memory* %call_40ee44, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %esi	 RIP: 40ee47	 Bytes: 3
  %loadMem_40ee47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee47 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee47)
  store %struct.Memory* %call_40ee47, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40ee4a	 Bytes: 5
  %loadMem1_40ee4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ee4a = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ee4a, i64 418566, i64 5, i64 5)
  store %struct.Memory* %call1_40ee4a, %struct.Memory** %MEMORY

  %loadMem2_40ee4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ee4a = load i64, i64* %3
  %call2_40ee4a = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40ee4a, %struct.Memory* %loadMem2_40ee4a)
  store %struct.Memory* %call2_40ee4a, %struct.Memory** %MEMORY

  ; Code: movq -0x1f0(%rbp), %rcx	 RIP: 40ee4f	 Bytes: 7
  %loadMem_40ee4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee4f = call %struct.Memory* @routine_movq_MINUS0x1f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee4f)
  store %struct.Memory* %call_40ee4f, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rdx	 RIP: 40ee56	 Bytes: 4
  %loadMem_40ee56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee56 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee56)
  store %struct.Memory* %call_40ee56, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40ee5a	 Bytes: 3
  %loadMem_40ee5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee5a = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee5a)
  store %struct.Memory* %call_40ee5a, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %eax	 RIP: 40ee5d	 Bytes: 3
  %loadMem_40ee5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee5d = call %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee5d)
  store %struct.Memory* %call_40ee5d, %struct.Memory** %MEMORY

  ; Code: movq -0x1f8(%rbp), %rcx	 RIP: 40ee60	 Bytes: 7
  %loadMem_40ee60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee60 = call %struct.Memory* @routine_movq_MINUS0x1f8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee60)
  store %struct.Memory* %call_40ee60, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rdx	 RIP: 40ee67	 Bytes: 4
  %loadMem_40ee67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee67 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee67)
  store %struct.Memory* %call_40ee67, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 40ee6b	 Bytes: 3
  %loadMem_40ee6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee6b = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee6b)
  store %struct.Memory* %call_40ee6b, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %eax	 RIP: 40ee6e	 Bytes: 3
  %loadMem_40ee6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee6e = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee6e)
  store %struct.Memory* %call_40ee6e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40ee71	 Bytes: 3
  %loadMem_40ee71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee71 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee71)
  store %struct.Memory* %call_40ee71, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 40ee74	 Bytes: 3
  %loadMem_40ee74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee74 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee74)
  store %struct.Memory* %call_40ee74, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x44(%rbp)	 RIP: 40ee77	 Bytes: 7
  %loadMem_40ee77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee77 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee77)
  store %struct.Memory* %call_40ee77, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %edi	 RIP: 40ee7e	 Bytes: 3
  %loadMem_40ee7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee7e = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee7e)
  store %struct.Memory* %call_40ee7e, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %esi	 RIP: 40ee81	 Bytes: 3
  %loadMem_40ee81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee81 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee81)
  store %struct.Memory* %call_40ee81, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40ee84	 Bytes: 5
  %loadMem1_40ee84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ee84 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ee84, i64 418508, i64 5, i64 5)
  store %struct.Memory* %call1_40ee84, %struct.Memory** %MEMORY

  %loadMem2_40ee84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ee84 = load i64, i64* %3
  %call2_40ee84 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40ee84, %struct.Memory* %loadMem2_40ee84)
  store %struct.Memory* %call2_40ee84, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2a50, %rcx	 RIP: 40ee89	 Bytes: 10
  %loadMem_40ee89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee89 = call %struct.Memory* @routine_movq__0x4b2a50___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee89)
  store %struct.Memory* %call_40ee89, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %rdx	 RIP: 40ee93	 Bytes: 10
  %loadMem_40ee93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee93 = call %struct.Memory* @routine_movq__0x4b28d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee93)
  store %struct.Memory* %call_40ee93, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c0(%rbp), %r8	 RIP: 40ee9d	 Bytes: 7
  %loadMem_40ee9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ee9d = call %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ee9d)
  store %struct.Memory* %call_40ee9d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40eea4	 Bytes: 4
  %loadMem_40eea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eea4 = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eea4)
  store %struct.Memory* %call_40eea4, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdx	 RIP: 40eea8	 Bytes: 3
  %loadMem_40eea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eea8 = call %struct.Memory* @routine_addq__r8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eea8)
  store %struct.Memory* %call_40eea8, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 40eeab	 Bytes: 4
  %loadMem_40eeab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeab = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeab)
  store %struct.Memory* %call_40eeab, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 40eeaf	 Bytes: 4
  %loadMem_40eeaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeaf = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeaf)
  store %struct.Memory* %call_40eeaf, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdx	 RIP: 40eeb3	 Bytes: 3
  %loadMem_40eeb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeb3 = call %struct.Memory* @routine_addq__r8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeb3)
  store %struct.Memory* %call_40eeb3, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r8	 RIP: 40eeb6	 Bytes: 4
  %loadMem_40eeb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeb6 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeb6)
  store %struct.Memory* %call_40eeb6, %struct.Memory** %MEMORY

  ; Code: imull (%rdx,%r8,4), %eax	 RIP: 40eeba	 Bytes: 5
  %loadMem_40eeba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeba = call %struct.Memory* @routine_imull___rdx__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeba)
  store %struct.Memory* %call_40eeba, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40eebf	 Bytes: 4
  %loadMem_40eebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eebf = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eebf)
  store %struct.Memory* %call_40eebf, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 40eec3	 Bytes: 4
  %loadMem_40eec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eec3 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eec3)
  store %struct.Memory* %call_40eec3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40eec7	 Bytes: 3
  %loadMem_40eec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eec7 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eec7)
  store %struct.Memory* %call_40eec7, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40eeca	 Bytes: 4
  %loadMem_40eeca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeca = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeca)
  store %struct.Memory* %call_40eeca, %struct.Memory** %MEMORY

  ; Code: imull (%rcx,%rdx,4), %eax	 RIP: 40eece	 Bytes: 4
  %loadMem_40eece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eece = call %struct.Memory* @routine_imull___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eece)
  store %struct.Memory* %call_40eece, %struct.Memory** %MEMORY

  ; Code: movl -0x1bc(%rbp), %ecx	 RIP: 40eed2	 Bytes: 6
  %loadMem_40eed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eed2 = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eed2)
  store %struct.Memory* %call_40eed2, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40eed8	 Bytes: 2
  %loadMem_40eed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eed8 = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eed8)
  store %struct.Memory* %call_40eed8, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %eax	 RIP: 40eeda	 Bytes: 3
  %loadMem_40eeda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeda = call %struct.Memory* @routine_sarl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeda)
  store %struct.Memory* %call_40eeda, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 40eedd	 Bytes: 3
  %loadMem_40eedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eedd = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eedd)
  store %struct.Memory* %call_40eedd, %struct.Memory** %MEMORY

  ; Code: .L_40eee0:	 RIP: 40eee0	 Bytes: 0
  br label %block_.L_40eee0
block_.L_40eee0:

  ; Code: leaq -0x190(%rbp), %rax	 RIP: 40eee0	 Bytes: 7
  %loadMem_40eee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eee0 = call %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eee0)
  store %struct.Memory* %call_40eee0, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 40eee7	 Bytes: 3
  %loadMem_40eee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eee7 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eee7)
  store %struct.Memory* %call_40eee7, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %ecx	 RIP: 40eeea	 Bytes: 3
  %loadMem_40eeea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeea = call %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeea)
  store %struct.Memory* %call_40eeea, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40eeed	 Bytes: 3
  %loadMem_40eeed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eeed = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eeed)
  store %struct.Memory* %call_40eeed, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 40eef0	 Bytes: 4
  %loadMem_40eef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eef0 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eef0)
  store %struct.Memory* %call_40eef0, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40eef4	 Bytes: 3
  %loadMem_40eef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eef4 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eef4)
  store %struct.Memory* %call_40eef4, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40eef7	 Bytes: 3
  %loadMem_40eef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eef7 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eef7)
  store %struct.Memory* %call_40eef7, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %ecx	 RIP: 40eefa	 Bytes: 3
  %loadMem_40eefa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eefa = call %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eefa)
  store %struct.Memory* %call_40eefa, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40eefd	 Bytes: 3
  %loadMem_40eefd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eefd = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eefd)
  store %struct.Memory* %call_40eefd, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %ecx	 RIP: 40ef00	 Bytes: 3
  %loadMem_40ef00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef00 = call %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef00)
  store %struct.Memory* %call_40ef00, %struct.Memory** %MEMORY

  ; Code: addl -0x1c(%rbp), %ecx	 RIP: 40ef03	 Bytes: 3
  %loadMem_40ef03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef03 = call %struct.Memory* @routine_addl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef03)
  store %struct.Memory* %call_40ef03, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1c(%rbp)	 RIP: 40ef06	 Bytes: 3
  %loadMem_40ef06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef06 = call %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef06)
  store %struct.Memory* %call_40ef06, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edi	 RIP: 40ef09	 Bytes: 3
  %loadMem_40ef09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef09 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef09)
  store %struct.Memory* %call_40ef09, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 40ef0c	 Bytes: 5
  %loadMem1_40ef0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ef0c = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ef0c, i64 -57100, i64 5, i64 5)
  store %struct.Memory* %call1_40ef0c, %struct.Memory** %MEMORY

  %loadMem2_40ef0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ef0c = load i64, i64* %3
  %call2_40ef0c = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_40ef0c, %struct.Memory* %loadMem2_40ef0c)
  store %struct.Memory* %call2_40ef0c, %struct.Memory** %MEMORY

  ; Code: movq $0x4b2750, %rdx	 RIP: 40ef11	 Bytes: 10
  %loadMem_40ef11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef11 = call %struct.Memory* @routine_movq__0x4b2750___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef11)
  store %struct.Memory* %call_40ef11, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %rsi	 RIP: 40ef1b	 Bytes: 7
  %loadMem_40ef1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef1b = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef1b)
  store %struct.Memory* %call_40ef1b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 40ef22	 Bytes: 4
  %loadMem_40ef22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef22 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef22)
  store %struct.Memory* %call_40ef22, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 40ef26	 Bytes: 3
  %loadMem_40ef26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef26 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef26)
  store %struct.Memory* %call_40ef26, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 40ef29	 Bytes: 4
  %loadMem_40ef29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef29 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef29)
  store %struct.Memory* %call_40ef29, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 40ef2d	 Bytes: 4
  %loadMem_40ef2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef2d = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef2d)
  store %struct.Memory* %call_40ef2d, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 40ef31	 Bytes: 3
  %loadMem_40ef31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef31 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef31)
  store %struct.Memory* %call_40ef31, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 40ef34	 Bytes: 4
  %loadMem_40ef34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef34 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef34)
  store %struct.Memory* %call_40ef34, %struct.Memory** %MEMORY

  ; Code: imull (%rdx,%rsi,4), %eax	 RIP: 40ef38	 Bytes: 4
  %loadMem_40ef38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef38 = call %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef38)
  store %struct.Memory* %call_40ef38, %struct.Memory** %MEMORY

  ; Code: addl -0x194(%rbp), %eax	 RIP: 40ef3c	 Bytes: 6
  %loadMem_40ef3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef3c = call %struct.Memory* @routine_addl_MINUS0x194__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef3c)
  store %struct.Memory* %call_40ef3c, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %ecx	 RIP: 40ef42	 Bytes: 6
  %loadMem_40ef42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef42 = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef42)
  store %struct.Memory* %call_40ef42, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 40ef48	 Bytes: 2
  %loadMem_40ef48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef48 = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef48)
  store %struct.Memory* %call_40ef48, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 40ef4a	 Bytes: 3
  %loadMem_40ef4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef4a = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef4a)
  store %struct.Memory* %call_40ef4a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 40ef4d	 Bytes: 2
  %loadMem_40ef4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef4d = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef4d)
  store %struct.Memory* %call_40ef4d, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 40ef4f	 Bytes: 5
  %loadMem1_40ef4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40ef4f = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40ef4f, i64 418305, i64 5, i64 5)
  store %struct.Memory* %call1_40ef4f, %struct.Memory** %MEMORY

  %loadMem2_40ef4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ef4f = load i64, i64* %3
  %call2_40ef4f = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_40ef4f, %struct.Memory* %loadMem2_40ef4f)
  store %struct.Memory* %call2_40ef4f, %struct.Memory** %MEMORY

  ; Code: movq $0x4b28d0, %rdx	 RIP: 40ef54	 Bytes: 10
  %loadMem_40ef54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef54 = call %struct.Memory* @routine_movq__0x4b28d0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef54)
  store %struct.Memory* %call_40ef54, %struct.Memory** %MEMORY

  ; Code: movslq -0x1cc(%rbp), %r8	 RIP: 40ef5e	 Bytes: 7
  %loadMem_40ef5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef5e = call %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef5e)
  store %struct.Memory* %call_40ef5e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40ef65	 Bytes: 4
  %loadMem_40ef65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef65 = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef65)
  store %struct.Memory* %call_40ef65, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdx	 RIP: 40ef69	 Bytes: 3
  %loadMem_40ef69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef69 = call %struct.Memory* @routine_addq__r8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef69)
  store %struct.Memory* %call_40ef69, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 40ef6c	 Bytes: 4
  %loadMem_40ef6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef6c = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef6c)
  store %struct.Memory* %call_40ef6c, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 40ef70	 Bytes: 4
  %loadMem_40ef70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef70 = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef70)
  store %struct.Memory* %call_40ef70, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdx	 RIP: 40ef74	 Bytes: 3
  %loadMem_40ef74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef74 = call %struct.Memory* @routine_addq__r8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef74)
  store %struct.Memory* %call_40ef74, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %r8	 RIP: 40ef77	 Bytes: 4
  %loadMem_40ef77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef77 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef77)
  store %struct.Memory* %call_40ef77, %struct.Memory** %MEMORY

  ; Code: imull (%rdx,%r8,4), %eax	 RIP: 40ef7b	 Bytes: 5
  %loadMem_40ef7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef7b = call %struct.Memory* @routine_imull___rdx__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef7b)
  store %struct.Memory* %call_40ef7b, %struct.Memory** %MEMORY

  ; Code: movl -0x1c8(%rbp), %ecx	 RIP: 40ef80	 Bytes: 6
  %loadMem_40ef80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef80 = call %struct.Memory* @routine_movl_MINUS0x1c8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef80)
  store %struct.Memory* %call_40ef80, %struct.Memory** %MEMORY

  ; Code: shll %cl, %eax	 RIP: 40ef86	 Bytes: 2
  %loadMem_40ef86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef86 = call %struct.Memory* @routine_shll__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef86)
  store %struct.Memory* %call_40ef86, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 40ef88	 Bytes: 8
  %loadMem_40ef88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef88 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef88)
  store %struct.Memory* %call_40ef88, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 40ef90	 Bytes: 7
  %loadMem_40ef90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef90 = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef90)
  store %struct.Memory* %call_40ef90, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40ef97	 Bytes: 3
  %loadMem_40ef97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef97 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef97)
  store %struct.Memory* %call_40ef97, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %esi	 RIP: 40ef9a	 Bytes: 3
  %loadMem_40ef9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef9a = call %struct.Memory* @routine_addl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef9a)
  store %struct.Memory* %call_40ef9a, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r8	 RIP: 40ef9d	 Bytes: 3
  %loadMem_40ef9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40ef9d = call %struct.Memory* @routine_movslq__esi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40ef9d)
  store %struct.Memory* %call_40ef9d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40efa0	 Bytes: 4
  %loadMem_40efa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efa0 = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efa0)
  store %struct.Memory* %call_40efa0, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdx	 RIP: 40efa4	 Bytes: 3
  %loadMem_40efa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efa4 = call %struct.Memory* @routine_addq__r8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efa4)
  store %struct.Memory* %call_40efa4, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40efa7	 Bytes: 3
  %loadMem_40efa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efa7 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efa7)
  store %struct.Memory* %call_40efa7, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %esi	 RIP: 40efaa	 Bytes: 3
  %loadMem_40efaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efaa = call %struct.Memory* @routine_addl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efaa)
  store %struct.Memory* %call_40efaa, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r8	 RIP: 40efad	 Bytes: 3
  %loadMem_40efad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efad = call %struct.Memory* @routine_movslq__esi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efad)
  store %struct.Memory* %call_40efad, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%r8,4)	 RIP: 40efb0	 Bytes: 4
  %loadMem_40efb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efb0 = call %struct.Memory* @routine_movl__eax____rdx__r8_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efb0)
  store %struct.Memory* %call_40efb0, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %eax	 RIP: 40efb4	 Bytes: 3
  %loadMem_40efb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efb4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efb4)
  store %struct.Memory* %call_40efb4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40efb7	 Bytes: 3
  %loadMem_40efb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efb7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efb7)
  store %struct.Memory* %call_40efb7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 40efba	 Bytes: 3
  %loadMem_40efba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efba = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efba)
  store %struct.Memory* %call_40efba, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e713	 RIP: 40efbd	 Bytes: 5
  %loadMem_40efbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efbd = call %struct.Memory* @routine_jmpq_.L_40e713(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efbd, i64 -2218, i64 5)
  store %struct.Memory* %call_40efbd, %struct.Memory** %MEMORY

  br label %block_.L_40e713

  ; Code: .L_40efc2:	 RIP: 40efc2	 Bytes: 0
block_.L_40efc2:

  ; Code: movq -0x1f0(%rbp), %rax	 RIP: 40efc2	 Bytes: 7
  %loadMem_40efc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efc2 = call %struct.Memory* @routine_movq_MINUS0x1f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efc2)
  store %struct.Memory* %call_40efc2, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rcx	 RIP: 40efc9	 Bytes: 4
  %loadMem_40efc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efc9 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efc9)
  store %struct.Memory* %call_40efc9, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax,%rcx,4)	 RIP: 40efcd	 Bytes: 7
  %loadMem_40efcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efcd = call %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efcd)
  store %struct.Memory* %call_40efcd, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40efd4	 Bytes: 3
  %loadMem_40efd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efd4 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efd4)
  store %struct.Memory* %call_40efd4, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40efd7	 Bytes: 3
  %loadMem_40efd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efd7 = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efd7)
  store %struct.Memory* %call_40efd7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 40efda	 Bytes: 3
  %loadMem_40efda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efda = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efda)
  store %struct.Memory* %call_40efda, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e659	 RIP: 40efdd	 Bytes: 5
  %loadMem_40efdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efdd = call %struct.Memory* @routine_jmpq_.L_40e659(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efdd, i64 -2436, i64 5)
  store %struct.Memory* %call_40efdd, %struct.Memory** %MEMORY

  br label %block_.L_40e659

  ; Code: .L_40efe2:	 RIP: 40efe2	 Bytes: 0
block_.L_40efe2:

  ; Code: jmpq .L_40efe7	 RIP: 40efe2	 Bytes: 5
  %loadMem_40efe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efe2 = call %struct.Memory* @routine_jmpq_.L_40efe7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efe2, i64 5, i64 5)
  store %struct.Memory* %call_40efe2, %struct.Memory** %MEMORY

  br label %block_.L_40efe7

  ; Code: .L_40efe7:	 RIP: 40efe7	 Bytes: 0
block_.L_40efe7:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40efe7	 Bytes: 3
  %loadMem_40efe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efe7 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efe7)
  store %struct.Memory* %call_40efe7, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40efea	 Bytes: 3
  %loadMem_40efea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efea = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efea)
  store %struct.Memory* %call_40efea, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 40efed	 Bytes: 3
  %loadMem_40efed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40efed = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40efed)
  store %struct.Memory* %call_40efed, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40e648	 RIP: 40eff0	 Bytes: 5
  %loadMem_40eff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eff0 = call %struct.Memory* @routine_jmpq_.L_40e648(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eff0, i64 -2472, i64 5)
  store %struct.Memory* %call_40eff0, %struct.Memory** %MEMORY

  br label %block_.L_40e648

  ; Code: .L_40eff5:	 RIP: 40eff5	 Bytes: 0
block_.L_40eff5:

  ; Code: cmpl $0x2, -0x88(%rbp)	 RIP: 40eff5	 Bytes: 7
  %loadMem_40eff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40eff5 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40eff5)
  store %struct.Memory* %call_40eff5, %struct.Memory** %MEMORY

  ; Code: jne .L_40f009	 RIP: 40effc	 Bytes: 6
  %loadMem_40effc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40effc = call %struct.Memory* @routine_jne_.L_40f009(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40effc, i8* %BRANCH_TAKEN, i64 13, i64 6, i64 6)
  store %struct.Memory* %call_40effc, %struct.Memory** %MEMORY

  %loadBr_40effc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40effc = icmp eq i8 %loadBr_40effc, 1
  br i1 %cmpBr_40effc, label %block_.L_40f009, label %block_40f002

block_40f002:
  ; Code: movl $0x2, -0x8(%rbp)	 RIP: 40f002	 Bytes: 7
  %loadMem_40f002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f002 = call %struct.Memory* @routine_movl__0x2__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f002)
  store %struct.Memory* %call_40f002, %struct.Memory** %MEMORY

  ; Code: .L_40f009:	 RIP: 40f009	 Bytes: 0
  br label %block_.L_40f009
block_.L_40f009:

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 40f009	 Bytes: 7
  %loadMem_40f009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f009 = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f009)
  store %struct.Memory* %call_40f009, %struct.Memory** %MEMORY

  ; Code: .L_40f010:	 RIP: 40f010	 Bytes: 0
  br label %block_.L_40f010
block_.L_40f010:

  ; Code: cmpl $0x4, -0x20(%rbp)	 RIP: 40f010	 Bytes: 4
  %loadMem_40f010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f010 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f010)
  store %struct.Memory* %call_40f010, %struct.Memory** %MEMORY

  ; Code: jg .L_40f47d	 RIP: 40f014	 Bytes: 6
  %loadMem_40f014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f014 = call %struct.Memory* @routine_jg_.L_40f47d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f014, i8* %BRANCH_TAKEN, i64 1129, i64 6, i64 6)
  store %struct.Memory* %call_40f014, %struct.Memory** %MEMORY

  %loadBr_40f014 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f014 = icmp eq i8 %loadBr_40f014, 1
  br i1 %cmpBr_40f014, label %block_.L_40f47d, label %block_40f01a

block_40f01a:
  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 40f01a	 Bytes: 7
  %loadMem_40f01a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f01a = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f01a)
  store %struct.Memory* %call_40f01a, %struct.Memory** %MEMORY

  ; Code: .L_40f021:	 RIP: 40f021	 Bytes: 0
  br label %block_.L_40f021
block_.L_40f021:

  ; Code: cmpl $0x4, -0x24(%rbp)	 RIP: 40f021	 Bytes: 4
  %loadMem_40f021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f021 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f021)
  store %struct.Memory* %call_40f021, %struct.Memory** %MEMORY

  ; Code: jg .L_40f46a	 RIP: 40f025	 Bytes: 6
  %loadMem_40f025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f025 = call %struct.Memory* @routine_jg_.L_40f46a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f025, i8* %BRANCH_TAKEN, i64 1093, i64 6, i64 6)
  store %struct.Memory* %call_40f025, %struct.Memory** %MEMORY

  %loadBr_40f025 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f025 = icmp eq i8 %loadBr_40f025, 1
  br i1 %cmpBr_40f025, label %block_.L_40f46a, label %block_40f02b

block_40f02b:
  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40f02b	 Bytes: 7
  %loadMem_40f02b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f02b = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f02b)
  store %struct.Memory* %call_40f02b, %struct.Memory** %MEMORY

  ; Code: .L_40f032:	 RIP: 40f032	 Bytes: 0
  br label %block_.L_40f032
block_.L_40f032:

  ; Code: cmpl $0x4, -0x10(%rbp)	 RIP: 40f032	 Bytes: 4
  %loadMem_40f032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f032 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f032)
  store %struct.Memory* %call_40f032, %struct.Memory** %MEMORY

  ; Code: jge .L_40f16c	 RIP: 40f036	 Bytes: 6
  %loadMem_40f036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f036 = call %struct.Memory* @routine_jge_.L_40f16c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f036, i8* %BRANCH_TAKEN, i64 310, i64 6, i64 6)
  store %struct.Memory* %call_40f036, %struct.Memory** %MEMORY

  %loadBr_40f036 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f036 = icmp eq i8 %loadBr_40f036, 1
  br i1 %cmpBr_40f036, label %block_.L_40f16c, label %block_40f03c

block_40f03c:
  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40f03c	 Bytes: 7
  %loadMem_40f03c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f03c = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f03c)
  store %struct.Memory* %call_40f03c, %struct.Memory** %MEMORY

  ; Code: .L_40f043:	 RIP: 40f043	 Bytes: 0
  br label %block_.L_40f043
block_.L_40f043:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 40f043	 Bytes: 4
  %loadMem_40f043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f043 = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f043)
  store %struct.Memory* %call_40f043, %struct.Memory** %MEMORY

  ; Code: jge .L_40f08d	 RIP: 40f047	 Bytes: 6
  %loadMem_40f047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f047 = call %struct.Memory* @routine_jge_.L_40f08d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f047, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_40f047, %struct.Memory** %MEMORY

  %loadBr_40f047 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f047 = icmp eq i8 %loadBr_40f047, 1
  br i1 %cmpBr_40f047, label %block_.L_40f08d, label %block_40f04d

block_40f04d:
  ; Code: movq 0x6cb900, %rax	 RIP: 40f04d	 Bytes: 8
  %loadMem_40f04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f04d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f04d)
  store %struct.Memory* %call_40f04d, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 40f055	 Bytes: 6
  %loadMem_40f055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f055 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f055)
  store %struct.Memory* %call_40f055, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 40f05b	 Bytes: 3
  %loadMem_40f05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f05b = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f05b)
  store %struct.Memory* %call_40f05b, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %ecx	 RIP: 40f05e	 Bytes: 3
  %loadMem_40f05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f05e = call %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f05e)
  store %struct.Memory* %call_40f05e, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40f061	 Bytes: 3
  %loadMem_40f061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f061 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f061)
  store %struct.Memory* %call_40f061, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40f064	 Bytes: 4
  %loadMem_40f064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f064 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f064)
  store %struct.Memory* %call_40f064, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40f068	 Bytes: 3
  %loadMem_40f068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f068 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f068)
  store %struct.Memory* %call_40f068, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40f06b	 Bytes: 3
  %loadMem_40f06b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f06b = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f06b)
  store %struct.Memory* %call_40f06b, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %ecx	 RIP: 40f06e	 Bytes: 3
  %loadMem_40f06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f06e = call %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f06e)
  store %struct.Memory* %call_40f06e, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40f071	 Bytes: 3
  %loadMem_40f071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f071 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f071)
  store %struct.Memory* %call_40f071, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %ecx	 RIP: 40f074	 Bytes: 3
  %loadMem_40f074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f074 = call %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f074)
  store %struct.Memory* %call_40f074, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rax	 RIP: 40f077	 Bytes: 4
  %loadMem_40f077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f077 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f077)
  store %struct.Memory* %call_40f077, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x70(%rbp,%rax,4)	 RIP: 40f07b	 Bytes: 4
  %loadMem_40f07b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f07b = call %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f07b)
  store %struct.Memory* %call_40f07b, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40f07f	 Bytes: 3
  %loadMem_40f07f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f07f = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f07f)
  store %struct.Memory* %call_40f07f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f082	 Bytes: 3
  %loadMem_40f082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f082 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f082)
  store %struct.Memory* %call_40f082, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40f085	 Bytes: 3
  %loadMem_40f085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f085 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f085)
  store %struct.Memory* %call_40f085, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f043	 RIP: 40f088	 Bytes: 5
  %loadMem_40f088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f088 = call %struct.Memory* @routine_jmpq_.L_40f043(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f088, i64 -69, i64 5)
  store %struct.Memory* %call_40f088, %struct.Memory** %MEMORY

  br label %block_.L_40f043

  ; Code: .L_40f08d:	 RIP: 40f08d	 Bytes: 0
block_.L_40f08d:

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40f08d	 Bytes: 3
  %loadMem_40f08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f08d = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f08d)
  store %struct.Memory* %call_40f08d, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 40f090	 Bytes: 3
  %loadMem_40f090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f090 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f090)
  store %struct.Memory* %call_40f090, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp)	 RIP: 40f093	 Bytes: 3
  %loadMem_40f093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f093 = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f093)
  store %struct.Memory* %call_40f093, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40f096	 Bytes: 3
  %loadMem_40f096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f096 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f096)
  store %struct.Memory* %call_40f096, %struct.Memory** %MEMORY

  ; Code: subl -0x68(%rbp), %eax	 RIP: 40f099	 Bytes: 3
  %loadMem_40f099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f099 = call %struct.Memory* @routine_subl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f099)
  store %struct.Memory* %call_40f099, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x7c(%rbp)	 RIP: 40f09c	 Bytes: 3
  %loadMem_40f09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f09c = call %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f09c)
  store %struct.Memory* %call_40f09c, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %eax	 RIP: 40f09f	 Bytes: 3
  %loadMem_40f09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f09f = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f09f)
  store %struct.Memory* %call_40f09f, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %eax	 RIP: 40f0a2	 Bytes: 3
  %loadMem_40f0a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0a2 = call %struct.Memory* @routine_sarl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0a2)
  store %struct.Memory* %call_40f0a2, %struct.Memory** %MEMORY

  ; Code: subl -0x64(%rbp), %eax	 RIP: 40f0a5	 Bytes: 3
  %loadMem_40f0a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0a5 = call %struct.Memory* @routine_subl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0a5)
  store %struct.Memory* %call_40f0a5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x78(%rbp)	 RIP: 40f0a8	 Bytes: 3
  %loadMem_40f0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0a8 = call %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0a8)
  store %struct.Memory* %call_40f0a8, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %eax	 RIP: 40f0ab	 Bytes: 3
  %loadMem_40f0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0ab = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0ab)
  store %struct.Memory* %call_40f0ab, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 40f0ae	 Bytes: 3
  %loadMem_40f0ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0ae = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0ae)
  store %struct.Memory* %call_40f0ae, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 40f0b1	 Bytes: 3
  %loadMem_40f0b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0b1 = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0b1)
  store %struct.Memory* %call_40f0b1, %struct.Memory** %MEMORY

  ; Code: addl %ecx, %eax	 RIP: 40f0b4	 Bytes: 2
  %loadMem_40f0b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0b4 = call %struct.Memory* @routine_addl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0b4)
  store %struct.Memory* %call_40f0b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x74(%rbp)	 RIP: 40f0b6	 Bytes: 3
  %loadMem_40f0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0b6 = call %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0b6)
  store %struct.Memory* %call_40f0b6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40f0b9	 Bytes: 7
  %loadMem_40f0b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0b9 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0b9)
  store %struct.Memory* %call_40f0b9, %struct.Memory** %MEMORY

  ; Code: .L_40f0c0:	 RIP: 40f0c0	 Bytes: 0
  br label %block_.L_40f0c0
block_.L_40f0c0:

  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 40f0c0	 Bytes: 4
  %loadMem_40f0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0c0 = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0c0)
  store %struct.Memory* %call_40f0c0, %struct.Memory** %MEMORY

  ; Code: jge .L_40f159	 RIP: 40f0c4	 Bytes: 6
  %loadMem_40f0c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0c4 = call %struct.Memory* @routine_jge_.L_40f159(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0c4, i8* %BRANCH_TAKEN, i64 149, i64 6, i64 6)
  store %struct.Memory* %call_40f0c4, %struct.Memory** %MEMORY

  %loadBr_40f0c4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f0c4 = icmp eq i8 %loadBr_40f0c4, 1
  br i1 %cmpBr_40f0c4, label %block_.L_40f159, label %block_40f0ca

block_40f0ca:
  ; Code: movl $0x3, %eax	 RIP: 40f0ca	 Bytes: 5
  %loadMem_40f0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0ca = call %struct.Memory* @routine_movl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0ca)
  store %struct.Memory* %call_40f0ca, %struct.Memory** %MEMORY

  ; Code: subl -0xc(%rbp), %eax	 RIP: 40f0cf	 Bytes: 3
  %loadMem_40f0cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0cf = call %struct.Memory* @routine_subl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0cf)
  store %struct.Memory* %call_40f0cf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 40f0d2	 Bytes: 3
  %loadMem_40f0d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0d2 = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0d2)
  store %struct.Memory* %call_40f0d2, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 40f0d5	 Bytes: 4
  %loadMem_40f0d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0d5 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0d5)
  store %struct.Memory* %call_40f0d5, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rcx,4), %eax	 RIP: 40f0d9	 Bytes: 4
  %loadMem_40f0d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0d9 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0d9)
  store %struct.Memory* %call_40f0d9, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 40f0dd	 Bytes: 4
  %loadMem_40f0dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0dd = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0dd)
  store %struct.Memory* %call_40f0dd, %struct.Memory** %MEMORY

  ; Code: addl -0x80(%rbp,%rcx,4), %eax	 RIP: 40f0e1	 Bytes: 4
  %loadMem_40f0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0e1 = call %struct.Memory* @routine_addl_MINUS0x80__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0e1)
  store %struct.Memory* %call_40f0e1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40f0e5	 Bytes: 8
  %loadMem_40f0e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0e5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0e5)
  store %struct.Memory* %call_40f0e5, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40f0ed	 Bytes: 7
  %loadMem_40f0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0ed = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0ed)
  store %struct.Memory* %call_40f0ed, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edx	 RIP: 40f0f4	 Bytes: 3
  %loadMem_40f0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0f4 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0f4)
  store %struct.Memory* %call_40f0f4, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %edx	 RIP: 40f0f7	 Bytes: 3
  %loadMem_40f0f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0f7 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0f7)
  store %struct.Memory* %call_40f0f7, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40f0fa	 Bytes: 3
  %loadMem_40f0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0fa = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0fa)
  store %struct.Memory* %call_40f0fa, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 40f0fd	 Bytes: 4
  %loadMem_40f0fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f0fd = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f0fd)
  store %struct.Memory* %call_40f0fd, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 40f101	 Bytes: 3
  %loadMem_40f101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f101 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f101)
  store %struct.Memory* %call_40f101, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edx	 RIP: 40f104	 Bytes: 3
  %loadMem_40f104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f104 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f104)
  store %struct.Memory* %call_40f104, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %edx	 RIP: 40f107	 Bytes: 3
  %loadMem_40f107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f107 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f107)
  store %struct.Memory* %call_40f107, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40f10a	 Bytes: 3
  %loadMem_40f10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f10a = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f10a)
  store %struct.Memory* %call_40f10a, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rsi,4)	 RIP: 40f10d	 Bytes: 3
  %loadMem_40f10d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f10d = call %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f10d)
  store %struct.Memory* %call_40f10d, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 40f110	 Bytes: 4
  %loadMem_40f110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f110 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f110)
  store %struct.Memory* %call_40f110, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rcx,4), %eax	 RIP: 40f114	 Bytes: 4
  %loadMem_40f114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f114 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f114)
  store %struct.Memory* %call_40f114, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 40f118	 Bytes: 4
  %loadMem_40f118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f118 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f118)
  store %struct.Memory* %call_40f118, %struct.Memory** %MEMORY

  ; Code: subl -0x80(%rbp,%rcx,4), %eax	 RIP: 40f11c	 Bytes: 4
  %loadMem_40f11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f11c = call %struct.Memory* @routine_subl_MINUS0x80__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f11c)
  store %struct.Memory* %call_40f11c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40f120	 Bytes: 8
  %loadMem_40f120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f120 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f120)
  store %struct.Memory* %call_40f120, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40f128	 Bytes: 7
  %loadMem_40f128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f128 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f128)
  store %struct.Memory* %call_40f128, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edx	 RIP: 40f12f	 Bytes: 3
  %loadMem_40f12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f12f = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f12f)
  store %struct.Memory* %call_40f12f, %struct.Memory** %MEMORY

  ; Code: addl -0x14(%rbp), %edx	 RIP: 40f132	 Bytes: 3
  %loadMem_40f132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f132 = call %struct.Memory* @routine_addl_MINUS0x14__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f132)
  store %struct.Memory* %call_40f132, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40f135	 Bytes: 3
  %loadMem_40f135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f135 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f135)
  store %struct.Memory* %call_40f135, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 40f138	 Bytes: 4
  %loadMem_40f138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f138 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f138)
  store %struct.Memory* %call_40f138, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 40f13c	 Bytes: 3
  %loadMem_40f13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f13c = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f13c)
  store %struct.Memory* %call_40f13c, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edx	 RIP: 40f13f	 Bytes: 3
  %loadMem_40f13f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f13f = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f13f)
  store %struct.Memory* %call_40f13f, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %edx	 RIP: 40f142	 Bytes: 3
  %loadMem_40f142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f142 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f142)
  store %struct.Memory* %call_40f142, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40f145	 Bytes: 3
  %loadMem_40f145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f145 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f145)
  store %struct.Memory* %call_40f145, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rsi,4)	 RIP: 40f148	 Bytes: 3
  %loadMem_40f148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f148 = call %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f148)
  store %struct.Memory* %call_40f148, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40f14b	 Bytes: 3
  %loadMem_40f14b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f14b = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f14b)
  store %struct.Memory* %call_40f14b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f14e	 Bytes: 3
  %loadMem_40f14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f14e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f14e)
  store %struct.Memory* %call_40f14e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40f151	 Bytes: 3
  %loadMem_40f151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f151 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f151)
  store %struct.Memory* %call_40f151, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f0c0	 RIP: 40f154	 Bytes: 5
  %loadMem_40f154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f154 = call %struct.Memory* @routine_jmpq_.L_40f0c0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f154, i64 -148, i64 5)
  store %struct.Memory* %call_40f154, %struct.Memory** %MEMORY

  br label %block_.L_40f0c0

  ; Code: .L_40f159:	 RIP: 40f159	 Bytes: 0
block_.L_40f159:

  ; Code: jmpq .L_40f15e	 RIP: 40f159	 Bytes: 5
  %loadMem_40f159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f159 = call %struct.Memory* @routine_jmpq_.L_40f15e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f159, i64 5, i64 5)
  store %struct.Memory* %call_40f159, %struct.Memory** %MEMORY

  br label %block_.L_40f15e

  ; Code: .L_40f15e:	 RIP: 40f15e	 Bytes: 0
block_.L_40f15e:

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40f15e	 Bytes: 3
  %loadMem_40f15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f15e = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f15e)
  store %struct.Memory* %call_40f15e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f161	 Bytes: 3
  %loadMem_40f161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f161 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f161)
  store %struct.Memory* %call_40f161, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40f164	 Bytes: 3
  %loadMem_40f164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f164 = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f164)
  store %struct.Memory* %call_40f164, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f032	 RIP: 40f167	 Bytes: 5
  %loadMem_40f167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f167 = call %struct.Memory* @routine_jmpq_.L_40f032(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f167, i64 -309, i64 5)
  store %struct.Memory* %call_40f167, %struct.Memory** %MEMORY

  br label %block_.L_40f032

  ; Code: .L_40f16c:	 RIP: 40f16c	 Bytes: 0
block_.L_40f16c:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40f16c	 Bytes: 7
  %loadMem_40f16c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f16c = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f16c)
  store %struct.Memory* %call_40f16c, %struct.Memory** %MEMORY

  ; Code: .L_40f173:	 RIP: 40f173	 Bytes: 0
  br label %block_.L_40f173
block_.L_40f173:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 40f173	 Bytes: 4
  %loadMem_40f173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f173 = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f173)
  store %struct.Memory* %call_40f173, %struct.Memory** %MEMORY

  ; Code: jge .L_40f457	 RIP: 40f177	 Bytes: 6
  %loadMem_40f177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f177 = call %struct.Memory* @routine_jge_.L_40f457(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f177, i8* %BRANCH_TAKEN, i64 736, i64 6, i64 6)
  store %struct.Memory* %call_40f177, %struct.Memory** %MEMORY

  %loadBr_40f177 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f177 = icmp eq i8 %loadBr_40f177, 1
  br i1 %cmpBr_40f177, label %block_.L_40f457, label %block_40f17d

block_40f17d:
  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40f17d	 Bytes: 7
  %loadMem_40f17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f17d = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f17d)
  store %struct.Memory* %call_40f17d, %struct.Memory** %MEMORY

  ; Code: .L_40f184:	 RIP: 40f184	 Bytes: 0
  br label %block_.L_40f184
block_.L_40f184:

  ; Code: cmpl $0x4, -0x10(%rbp)	 RIP: 40f184	 Bytes: 4
  %loadMem_40f184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f184 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f184)
  store %struct.Memory* %call_40f184, %struct.Memory** %MEMORY

  ; Code: jge .L_40f1ce	 RIP: 40f188	 Bytes: 6
  %loadMem_40f188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f188 = call %struct.Memory* @routine_jge_.L_40f1ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f188, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_40f188, %struct.Memory** %MEMORY

  %loadBr_40f188 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f188 = icmp eq i8 %loadBr_40f188, 1
  br i1 %cmpBr_40f188, label %block_.L_40f1ce, label %block_40f18e

block_40f18e:
  ; Code: movq 0x6cb900, %rax	 RIP: 40f18e	 Bytes: 8
  %loadMem_40f18e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f18e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f18e)
  store %struct.Memory* %call_40f18e, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 40f196	 Bytes: 6
  %loadMem_40f196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f196 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f196)
  store %struct.Memory* %call_40f196, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 40f19c	 Bytes: 3
  %loadMem_40f19c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f19c = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f19c)
  store %struct.Memory* %call_40f19c, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %ecx	 RIP: 40f19f	 Bytes: 3
  %loadMem_40f19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f19f = call %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f19f)
  store %struct.Memory* %call_40f19f, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40f1a2	 Bytes: 3
  %loadMem_40f1a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1a2 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1a2)
  store %struct.Memory* %call_40f1a2, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40f1a5	 Bytes: 4
  %loadMem_40f1a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1a5 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1a5)
  store %struct.Memory* %call_40f1a5, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40f1a9	 Bytes: 3
  %loadMem_40f1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1a9 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1a9)
  store %struct.Memory* %call_40f1a9, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %ecx	 RIP: 40f1ac	 Bytes: 3
  %loadMem_40f1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1ac = call %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1ac)
  store %struct.Memory* %call_40f1ac, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %ecx	 RIP: 40f1af	 Bytes: 3
  %loadMem_40f1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1af = call %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1af)
  store %struct.Memory* %call_40f1af, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 40f1b2	 Bytes: 3
  %loadMem_40f1b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1b2 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1b2)
  store %struct.Memory* %call_40f1b2, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %ecx	 RIP: 40f1b5	 Bytes: 3
  %loadMem_40f1b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1b5 = call %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1b5)
  store %struct.Memory* %call_40f1b5, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rax	 RIP: 40f1b8	 Bytes: 4
  %loadMem_40f1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1b8 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1b8)
  store %struct.Memory* %call_40f1b8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x70(%rbp,%rax,4)	 RIP: 40f1bc	 Bytes: 4
  %loadMem_40f1bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1bc = call %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1bc)
  store %struct.Memory* %call_40f1bc, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40f1c0	 Bytes: 3
  %loadMem_40f1c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1c0 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1c0)
  store %struct.Memory* %call_40f1c0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f1c3	 Bytes: 3
  %loadMem_40f1c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1c3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1c3)
  store %struct.Memory* %call_40f1c3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40f1c6	 Bytes: 3
  %loadMem_40f1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1c6 = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1c6)
  store %struct.Memory* %call_40f1c6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f184	 RIP: 40f1c9	 Bytes: 5
  %loadMem_40f1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1c9 = call %struct.Memory* @routine_jmpq_.L_40f184(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1c9, i64 -69, i64 5)
  store %struct.Memory* %call_40f1c9, %struct.Memory** %MEMORY

  br label %block_.L_40f184

  ; Code: .L_40f1ce:	 RIP: 40f1ce	 Bytes: 0
block_.L_40f1ce:

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40f1ce	 Bytes: 3
  %loadMem_40f1ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1ce = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1ce)
  store %struct.Memory* %call_40f1ce, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 40f1d1	 Bytes: 3
  %loadMem_40f1d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1d1 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1d1)
  store %struct.Memory* %call_40f1d1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp)	 RIP: 40f1d4	 Bytes: 3
  %loadMem_40f1d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1d4 = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1d4)
  store %struct.Memory* %call_40f1d4, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %eax	 RIP: 40f1d7	 Bytes: 3
  %loadMem_40f1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1d7 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1d7)
  store %struct.Memory* %call_40f1d7, %struct.Memory** %MEMORY

  ; Code: subl -0x68(%rbp), %eax	 RIP: 40f1da	 Bytes: 3
  %loadMem_40f1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1da = call %struct.Memory* @routine_subl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1da)
  store %struct.Memory* %call_40f1da, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x7c(%rbp)	 RIP: 40f1dd	 Bytes: 3
  %loadMem_40f1dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1dd = call %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1dd)
  store %struct.Memory* %call_40f1dd, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %eax	 RIP: 40f1e0	 Bytes: 3
  %loadMem_40f1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1e0 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1e0)
  store %struct.Memory* %call_40f1e0, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %eax	 RIP: 40f1e3	 Bytes: 3
  %loadMem_40f1e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1e3 = call %struct.Memory* @routine_sarl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1e3)
  store %struct.Memory* %call_40f1e3, %struct.Memory** %MEMORY

  ; Code: subl -0x64(%rbp), %eax	 RIP: 40f1e6	 Bytes: 3
  %loadMem_40f1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1e6 = call %struct.Memory* @routine_subl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1e6)
  store %struct.Memory* %call_40f1e6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x78(%rbp)	 RIP: 40f1e9	 Bytes: 3
  %loadMem_40f1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1e9 = call %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1e9)
  store %struct.Memory* %call_40f1e9, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %eax	 RIP: 40f1ec	 Bytes: 3
  %loadMem_40f1ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1ec = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1ec)
  store %struct.Memory* %call_40f1ec, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %ecx	 RIP: 40f1ef	 Bytes: 3
  %loadMem_40f1ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1ef = call %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1ef)
  store %struct.Memory* %call_40f1ef, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 40f1f2	 Bytes: 3
  %loadMem_40f1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1f2 = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1f2)
  store %struct.Memory* %call_40f1f2, %struct.Memory** %MEMORY

  ; Code: addl %ecx, %eax	 RIP: 40f1f5	 Bytes: 2
  %loadMem_40f1f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1f5 = call %struct.Memory* @routine_addl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1f5)
  store %struct.Memory* %call_40f1f5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x74(%rbp)	 RIP: 40f1f7	 Bytes: 3
  %loadMem_40f1f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1f7 = call %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1f7)
  store %struct.Memory* %call_40f1f7, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40f1fa	 Bytes: 7
  %loadMem_40f1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f1fa = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f1fa)
  store %struct.Memory* %call_40f1fa, %struct.Memory** %MEMORY

  ; Code: .L_40f201:	 RIP: 40f201	 Bytes: 0
  br label %block_.L_40f201
block_.L_40f201:

  ; Code: cmpl $0x2, -0x10(%rbp)	 RIP: 40f201	 Bytes: 4
  %loadMem_40f201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f201 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f201)
  store %struct.Memory* %call_40f201, %struct.Memory** %MEMORY

  ; Code: jge .L_40f444	 RIP: 40f205	 Bytes: 6
  %loadMem_40f205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f205 = call %struct.Memory* @routine_jge_.L_40f444(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f205, i8* %BRANCH_TAKEN, i64 575, i64 6, i64 6)
  store %struct.Memory* %call_40f205, %struct.Memory** %MEMORY

  %loadBr_40f205 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f205 = icmp eq i8 %loadBr_40f205, 1
  br i1 %cmpBr_40f205, label %block_.L_40f444, label %block_40f20b

block_40f20b:
  ; Code: xorl %eax, %eax	 RIP: 40f20b	 Bytes: 2
  %loadMem_40f20b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f20b = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f20b)
  store %struct.Memory* %call_40f20b, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 40f20d	 Bytes: 5
  %loadMem_40f20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f20d = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f20d)
  store %struct.Memory* %call_40f20d, %struct.Memory** %MEMORY

  ; Code: subl -0x10(%rbp), %ecx	 RIP: 40f212	 Bytes: 3
  %loadMem_40f212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f212 = call %struct.Memory* @routine_subl_MINUS0x10__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f212)
  store %struct.Memory* %call_40f212, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 40f215	 Bytes: 3
  %loadMem_40f215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f215 = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f215)
  store %struct.Memory* %call_40f215, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 40f218	 Bytes: 8
  %loadMem_40f218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f218 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f218)
  store %struct.Memory* %call_40f218, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rdx), %ecx	 RIP: 40f220	 Bytes: 6
  %loadMem_40f220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f220 = call %struct.Memory* @routine_movl_0x11bf0__rdx____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f220)
  store %struct.Memory* %call_40f220, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40f226	 Bytes: 4
  %loadMem_40f226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f226 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f226)
  store %struct.Memory* %call_40f226, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rdx,4), %esi	 RIP: 40f22a	 Bytes: 4
  %loadMem_40f22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f22a = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f22a)
  store %struct.Memory* %call_40f22a, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 40f22e	 Bytes: 4
  %loadMem_40f22e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f22e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f22e)
  store %struct.Memory* %call_40f22e, %struct.Memory** %MEMORY

  ; Code: addl -0x80(%rbp,%rdx,4), %esi	 RIP: 40f232	 Bytes: 4
  %loadMem_40f232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f232 = call %struct.Memory* @routine_addl_MINUS0x80__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f232)
  store %struct.Memory* %call_40f232, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %esi	 RIP: 40f236	 Bytes: 3
  %loadMem_40f236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f236 = call %struct.Memory* @routine_addl__0x20___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f236)
  store %struct.Memory* %call_40f236, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %esi	 RIP: 40f239	 Bytes: 3
  %loadMem_40f239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f239 = call %struct.Memory* @routine_sarl__0x6___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f239)
  store %struct.Memory* %call_40f239, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %eax	 RIP: 40f23c	 Bytes: 2
  %loadMem_40f23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f23c = call %struct.Memory* @routine_cmpl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f23c)
  store %struct.Memory* %call_40f23c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2f0(%rbp)	 RIP: 40f23e	 Bytes: 6
  %loadMem_40f23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f23e = call %struct.Memory* @routine_movl__ecx__MINUS0x2f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f23e)
  store %struct.Memory* %call_40f23e, %struct.Memory** %MEMORY

  ; Code: jle .L_40f257	 RIP: 40f244	 Bytes: 6
  %loadMem_40f244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f244 = call %struct.Memory* @routine_jle_.L_40f257(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f244, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_40f244, %struct.Memory** %MEMORY

  %loadBr_40f244 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f244 = icmp eq i8 %loadBr_40f244, 1
  br i1 %cmpBr_40f244, label %block_.L_40f257, label %block_40f24a

block_40f24a:
  ; Code: xorl %eax, %eax	 RIP: 40f24a	 Bytes: 2
  %loadMem_40f24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f24a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f24a)
  store %struct.Memory* %call_40f24a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2f4(%rbp)	 RIP: 40f24c	 Bytes: 6
  %loadMem_40f24c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f24c = call %struct.Memory* @routine_movl__eax__MINUS0x2f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f24c)
  store %struct.Memory* %call_40f24c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f273	 RIP: 40f252	 Bytes: 5
  %loadMem_40f252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f252 = call %struct.Memory* @routine_jmpq_.L_40f273(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f252, i64 33, i64 5)
  store %struct.Memory* %call_40f252, %struct.Memory** %MEMORY

  br label %block_.L_40f273

  ; Code: .L_40f257:	 RIP: 40f257	 Bytes: 0
block_.L_40f257:

  ; Code: movslq -0x10(%rbp), %rax	 RIP: 40f257	 Bytes: 4
  %loadMem_40f257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f257 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f257)
  store %struct.Memory* %call_40f257, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f25b	 Bytes: 4
  %loadMem_40f25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f25b = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f25b)
  store %struct.Memory* %call_40f25b, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 40f25f	 Bytes: 4
  %loadMem_40f25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f25f = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f25f)
  store %struct.Memory* %call_40f25f, %struct.Memory** %MEMORY

  ; Code: addl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f263	 Bytes: 4
  %loadMem_40f263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f263 = call %struct.Memory* @routine_addl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f263)
  store %struct.Memory* %call_40f263, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %ecx	 RIP: 40f267	 Bytes: 3
  %loadMem_40f267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f267 = call %struct.Memory* @routine_addl__0x20___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f267)
  store %struct.Memory* %call_40f267, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %ecx	 RIP: 40f26a	 Bytes: 3
  %loadMem_40f26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f26a = call %struct.Memory* @routine_sarl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f26a)
  store %struct.Memory* %call_40f26a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2f4(%rbp)	 RIP: 40f26d	 Bytes: 6
  %loadMem_40f26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f26d = call %struct.Memory* @routine_movl__ecx__MINUS0x2f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f26d)
  store %struct.Memory* %call_40f26d, %struct.Memory** %MEMORY

  ; Code: .L_40f273:	 RIP: 40f273	 Bytes: 0
  br label %block_.L_40f273
block_.L_40f273:

  ; Code: movl -0x2f4(%rbp), %eax	 RIP: 40f273	 Bytes: 6
  %loadMem_40f273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f273 = call %struct.Memory* @routine_movl_MINUS0x2f4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f273)
  store %struct.Memory* %call_40f273, %struct.Memory** %MEMORY

  ; Code: movl -0x2f0(%rbp), %ecx	 RIP: 40f279	 Bytes: 6
  %loadMem_40f279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f279 = call %struct.Memory* @routine_movl_MINUS0x2f0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f279)
  store %struct.Memory* %call_40f279, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 40f27f	 Bytes: 2
  %loadMem_40f27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f27f = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f27f)
  store %struct.Memory* %call_40f27f, %struct.Memory** %MEMORY

  ; Code: jge .L_40f2a0	 RIP: 40f281	 Bytes: 6
  %loadMem_40f281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f281 = call %struct.Memory* @routine_jge_.L_40f2a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f281, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_40f281, %struct.Memory** %MEMORY

  %loadBr_40f281 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f281 = icmp eq i8 %loadBr_40f281, 1
  br i1 %cmpBr_40f281, label %block_.L_40f2a0, label %block_40f287

block_40f287:
  ; Code: movq 0x6cb900, %rax	 RIP: 40f287	 Bytes: 8
  %loadMem_40f287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f287 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f287)
  store %struct.Memory* %call_40f287, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 40f28f	 Bytes: 6
  %loadMem_40f28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f28f = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f28f)
  store %struct.Memory* %call_40f28f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2f8(%rbp)	 RIP: 40f295	 Bytes: 6
  %loadMem_40f295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f295 = call %struct.Memory* @routine_movl__ecx__MINUS0x2f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f295)
  store %struct.Memory* %call_40f295, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f2f5	 RIP: 40f29b	 Bytes: 5
  %loadMem_40f29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f29b = call %struct.Memory* @routine_jmpq_.L_40f2f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f29b, i64 90, i64 5)
  store %struct.Memory* %call_40f29b, %struct.Memory** %MEMORY

  br label %block_.L_40f2f5

  ; Code: .L_40f2a0:	 RIP: 40f2a0	 Bytes: 0
block_.L_40f2a0:

  ; Code: xorl %eax, %eax	 RIP: 40f2a0	 Bytes: 2
  %loadMem_40f2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2a0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2a0)
  store %struct.Memory* %call_40f2a0, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 40f2a2	 Bytes: 4
  %loadMem_40f2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2a2 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2a2)
  store %struct.Memory* %call_40f2a2, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rcx,4), %edx	 RIP: 40f2a6	 Bytes: 4
  %loadMem_40f2a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2a6 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2a6)
  store %struct.Memory* %call_40f2a6, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 40f2aa	 Bytes: 4
  %loadMem_40f2aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2aa = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2aa)
  store %struct.Memory* %call_40f2aa, %struct.Memory** %MEMORY

  ; Code: addl -0x80(%rbp,%rcx,4), %edx	 RIP: 40f2ae	 Bytes: 4
  %loadMem_40f2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2ae = call %struct.Memory* @routine_addl_MINUS0x80__rbp__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2ae)
  store %struct.Memory* %call_40f2ae, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %edx	 RIP: 40f2b2	 Bytes: 3
  %loadMem_40f2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2b2 = call %struct.Memory* @routine_addl__0x20___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2b2)
  store %struct.Memory* %call_40f2b2, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %edx	 RIP: 40f2b5	 Bytes: 3
  %loadMem_40f2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2b5 = call %struct.Memory* @routine_sarl__0x6___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2b5)
  store %struct.Memory* %call_40f2b5, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 40f2b8	 Bytes: 2
  %loadMem_40f2b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2b8 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2b8)
  store %struct.Memory* %call_40f2b8, %struct.Memory** %MEMORY

  ; Code: jle .L_40f2cd	 RIP: 40f2ba	 Bytes: 6
  %loadMem_40f2ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2ba = call %struct.Memory* @routine_jle_.L_40f2cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2ba, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_40f2ba, %struct.Memory** %MEMORY

  %loadBr_40f2ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f2ba = icmp eq i8 %loadBr_40f2ba, 1
  br i1 %cmpBr_40f2ba, label %block_.L_40f2cd, label %block_40f2c0

block_40f2c0:
  ; Code: xorl %eax, %eax	 RIP: 40f2c0	 Bytes: 2
  %loadMem_40f2c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2c0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2c0)
  store %struct.Memory* %call_40f2c0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2fc(%rbp)	 RIP: 40f2c2	 Bytes: 6
  %loadMem_40f2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2c2 = call %struct.Memory* @routine_movl__eax__MINUS0x2fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2c2)
  store %struct.Memory* %call_40f2c2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f2e9	 RIP: 40f2c8	 Bytes: 5
  %loadMem_40f2c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2c8 = call %struct.Memory* @routine_jmpq_.L_40f2e9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2c8, i64 33, i64 5)
  store %struct.Memory* %call_40f2c8, %struct.Memory** %MEMORY

  br label %block_.L_40f2e9

  ; Code: .L_40f2cd:	 RIP: 40f2cd	 Bytes: 0
block_.L_40f2cd:

  ; Code: movslq -0x10(%rbp), %rax	 RIP: 40f2cd	 Bytes: 4
  %loadMem_40f2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2cd = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2cd)
  store %struct.Memory* %call_40f2cd, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f2d1	 Bytes: 4
  %loadMem_40f2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2d1 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2d1)
  store %struct.Memory* %call_40f2d1, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 40f2d5	 Bytes: 4
  %loadMem_40f2d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2d5 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2d5)
  store %struct.Memory* %call_40f2d5, %struct.Memory** %MEMORY

  ; Code: addl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f2d9	 Bytes: 4
  %loadMem_40f2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2d9 = call %struct.Memory* @routine_addl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2d9)
  store %struct.Memory* %call_40f2d9, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %ecx	 RIP: 40f2dd	 Bytes: 3
  %loadMem_40f2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2dd = call %struct.Memory* @routine_addl__0x20___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2dd)
  store %struct.Memory* %call_40f2dd, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %ecx	 RIP: 40f2e0	 Bytes: 3
  %loadMem_40f2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2e0 = call %struct.Memory* @routine_sarl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2e0)
  store %struct.Memory* %call_40f2e0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2fc(%rbp)	 RIP: 40f2e3	 Bytes: 6
  %loadMem_40f2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2e3 = call %struct.Memory* @routine_movl__ecx__MINUS0x2fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2e3)
  store %struct.Memory* %call_40f2e3, %struct.Memory** %MEMORY

  ; Code: .L_40f2e9:	 RIP: 40f2e9	 Bytes: 0
  br label %block_.L_40f2e9
block_.L_40f2e9:

  ; Code: movl -0x2fc(%rbp), %eax	 RIP: 40f2e9	 Bytes: 6
  %loadMem_40f2e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2e9 = call %struct.Memory* @routine_movl_MINUS0x2fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2e9)
  store %struct.Memory* %call_40f2e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2f8(%rbp)	 RIP: 40f2ef	 Bytes: 6
  %loadMem_40f2ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2ef = call %struct.Memory* @routine_movl__eax__MINUS0x2f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2ef)
  store %struct.Memory* %call_40f2ef, %struct.Memory** %MEMORY

  ; Code: .L_40f2f5:	 RIP: 40f2f5	 Bytes: 0
  br label %block_.L_40f2f5
block_.L_40f2f5:

  ; Code: movl -0x2f8(%rbp), %eax	 RIP: 40f2f5	 Bytes: 6
  %loadMem_40f2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2f5 = call %struct.Memory* @routine_movl_MINUS0x2f8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2f5)
  store %struct.Memory* %call_40f2f5, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 40f2fb	 Bytes: 2
  %loadMem_40f2fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2fb = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2fb)
  store %struct.Memory* %call_40f2fb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 40f2fd	 Bytes: 8
  %loadMem_40f2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f2fd = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f2fd)
  store %struct.Memory* %call_40f2fd, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 40f305	 Bytes: 7
  %loadMem_40f305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f305 = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f305)
  store %struct.Memory* %call_40f305, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 40f30c	 Bytes: 3
  %loadMem_40f30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f30c = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f30c)
  store %struct.Memory* %call_40f30c, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %esi	 RIP: 40f30f	 Bytes: 3
  %loadMem_40f30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f30f = call %struct.Memory* @routine_addl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f30f)
  store %struct.Memory* %call_40f30f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 40f312	 Bytes: 3
  %loadMem_40f312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f312 = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f312)
  store %struct.Memory* %call_40f312, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 40f315	 Bytes: 4
  %loadMem_40f315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f315 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f315)
  store %struct.Memory* %call_40f315, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rdx	 RIP: 40f319	 Bytes: 3
  %loadMem_40f319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f319 = call %struct.Memory* @routine_addq__rdi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f319)
  store %struct.Memory* %call_40f319, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %esi	 RIP: 40f31c	 Bytes: 3
  %loadMem_40f31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f31c = call %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f31c)
  store %struct.Memory* %call_40f31c, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %esi	 RIP: 40f31f	 Bytes: 3
  %loadMem_40f31f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f31f = call %struct.Memory* @routine_addl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f31f)
  store %struct.Memory* %call_40f31f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 40f322	 Bytes: 3
  %loadMem_40f322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f322 = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f322)
  store %struct.Memory* %call_40f322, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdx,%rdi,4)	 RIP: 40f325	 Bytes: 3
  %loadMem_40f325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f325 = call %struct.Memory* @routine_movl__eax____rdx__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f325)
  store %struct.Memory* %call_40f325, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 40f328	 Bytes: 8
  %loadMem_40f328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f328 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f328)
  store %struct.Memory* %call_40f328, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rdx), %eax	 RIP: 40f330	 Bytes: 6
  %loadMem_40f330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f330 = call %struct.Memory* @routine_movl_0x11bf0__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f330)
  store %struct.Memory* %call_40f330, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40f336	 Bytes: 4
  %loadMem_40f336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f336 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f336)
  store %struct.Memory* %call_40f336, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rdx,4), %esi	 RIP: 40f33a	 Bytes: 4
  %loadMem_40f33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f33a = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f33a)
  store %struct.Memory* %call_40f33a, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 40f33e	 Bytes: 4
  %loadMem_40f33e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f33e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f33e)
  store %struct.Memory* %call_40f33e, %struct.Memory** %MEMORY

  ; Code: subl -0x80(%rbp,%rdx,4), %esi	 RIP: 40f342	 Bytes: 4
  %loadMem_40f342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f342 = call %struct.Memory* @routine_subl_MINUS0x80__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f342)
  store %struct.Memory* %call_40f342, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %esi	 RIP: 40f346	 Bytes: 3
  %loadMem_40f346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f346 = call %struct.Memory* @routine_addl__0x20___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f346)
  store %struct.Memory* %call_40f346, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %esi	 RIP: 40f349	 Bytes: 3
  %loadMem_40f349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f349 = call %struct.Memory* @routine_sarl__0x6___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f349)
  store %struct.Memory* %call_40f349, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %ecx	 RIP: 40f34c	 Bytes: 2
  %loadMem_40f34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f34c = call %struct.Memory* @routine_cmpl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f34c)
  store %struct.Memory* %call_40f34c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x300(%rbp)	 RIP: 40f34e	 Bytes: 6
  %loadMem_40f34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f34e = call %struct.Memory* @routine_movl__eax__MINUS0x300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f34e)
  store %struct.Memory* %call_40f34e, %struct.Memory** %MEMORY

  ; Code: jle .L_40f367	 RIP: 40f354	 Bytes: 6
  %loadMem_40f354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f354 = call %struct.Memory* @routine_jle_.L_40f367(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f354, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_40f354, %struct.Memory** %MEMORY

  %loadBr_40f354 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f354 = icmp eq i8 %loadBr_40f354, 1
  br i1 %cmpBr_40f354, label %block_.L_40f367, label %block_40f35a

block_40f35a:
  ; Code: xorl %eax, %eax	 RIP: 40f35a	 Bytes: 2
  %loadMem_40f35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f35a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f35a)
  store %struct.Memory* %call_40f35a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x304(%rbp)	 RIP: 40f35c	 Bytes: 6
  %loadMem_40f35c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f35c = call %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f35c)
  store %struct.Memory* %call_40f35c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f383	 RIP: 40f362	 Bytes: 5
  %loadMem_40f362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f362 = call %struct.Memory* @routine_jmpq_.L_40f383(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f362, i64 33, i64 5)
  store %struct.Memory* %call_40f362, %struct.Memory** %MEMORY

  br label %block_.L_40f383

  ; Code: .L_40f367:	 RIP: 40f367	 Bytes: 0
block_.L_40f367:

  ; Code: movslq -0x10(%rbp), %rax	 RIP: 40f367	 Bytes: 4
  %loadMem_40f367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f367 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f367)
  store %struct.Memory* %call_40f367, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f36b	 Bytes: 4
  %loadMem_40f36b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f36b = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f36b)
  store %struct.Memory* %call_40f36b, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 40f36f	 Bytes: 4
  %loadMem_40f36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f36f = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f36f)
  store %struct.Memory* %call_40f36f, %struct.Memory** %MEMORY

  ; Code: subl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f373	 Bytes: 4
  %loadMem_40f373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f373 = call %struct.Memory* @routine_subl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f373)
  store %struct.Memory* %call_40f373, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %ecx	 RIP: 40f377	 Bytes: 3
  %loadMem_40f377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f377 = call %struct.Memory* @routine_addl__0x20___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f377)
  store %struct.Memory* %call_40f377, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %ecx	 RIP: 40f37a	 Bytes: 3
  %loadMem_40f37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f37a = call %struct.Memory* @routine_sarl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f37a)
  store %struct.Memory* %call_40f37a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x304(%rbp)	 RIP: 40f37d	 Bytes: 6
  %loadMem_40f37d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f37d = call %struct.Memory* @routine_movl__ecx__MINUS0x304__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f37d)
  store %struct.Memory* %call_40f37d, %struct.Memory** %MEMORY

  ; Code: .L_40f383:	 RIP: 40f383	 Bytes: 0
  br label %block_.L_40f383
block_.L_40f383:

  ; Code: movl -0x304(%rbp), %eax	 RIP: 40f383	 Bytes: 6
  %loadMem_40f383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f383 = call %struct.Memory* @routine_movl_MINUS0x304__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f383)
  store %struct.Memory* %call_40f383, %struct.Memory** %MEMORY

  ; Code: movl -0x300(%rbp), %ecx	 RIP: 40f389	 Bytes: 6
  %loadMem_40f389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f389 = call %struct.Memory* @routine_movl_MINUS0x300__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f389)
  store %struct.Memory* %call_40f389, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 40f38f	 Bytes: 2
  %loadMem_40f38f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f38f = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f38f)
  store %struct.Memory* %call_40f38f, %struct.Memory** %MEMORY

  ; Code: jge .L_40f3b0	 RIP: 40f391	 Bytes: 6
  %loadMem_40f391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f391 = call %struct.Memory* @routine_jge_.L_40f3b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f391, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_40f391, %struct.Memory** %MEMORY

  %loadBr_40f391 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f391 = icmp eq i8 %loadBr_40f391, 1
  br i1 %cmpBr_40f391, label %block_.L_40f3b0, label %block_40f397

block_40f397:
  ; Code: movq 0x6cb900, %rax	 RIP: 40f397	 Bytes: 8
  %loadMem_40f397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f397 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f397)
  store %struct.Memory* %call_40f397, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 40f39f	 Bytes: 6
  %loadMem_40f39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f39f = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f39f)
  store %struct.Memory* %call_40f39f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x308(%rbp)	 RIP: 40f3a5	 Bytes: 6
  %loadMem_40f3a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3a5 = call %struct.Memory* @routine_movl__ecx__MINUS0x308__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3a5)
  store %struct.Memory* %call_40f3a5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f405	 RIP: 40f3ab	 Bytes: 5
  %loadMem_40f3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3ab = call %struct.Memory* @routine_jmpq_.L_40f405(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3ab, i64 90, i64 5)
  store %struct.Memory* %call_40f3ab, %struct.Memory** %MEMORY

  br label %block_.L_40f405

  ; Code: .L_40f3b0:	 RIP: 40f3b0	 Bytes: 0
block_.L_40f3b0:

  ; Code: xorl %eax, %eax	 RIP: 40f3b0	 Bytes: 2
  %loadMem_40f3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3b0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3b0)
  store %struct.Memory* %call_40f3b0, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 40f3b2	 Bytes: 4
  %loadMem_40f3b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3b2 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3b2)
  store %struct.Memory* %call_40f3b2, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rcx,4), %edx	 RIP: 40f3b6	 Bytes: 4
  %loadMem_40f3b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3b6 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3b6)
  store %struct.Memory* %call_40f3b6, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 40f3ba	 Bytes: 4
  %loadMem_40f3ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3ba = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3ba)
  store %struct.Memory* %call_40f3ba, %struct.Memory** %MEMORY

  ; Code: subl -0x80(%rbp,%rcx,4), %edx	 RIP: 40f3be	 Bytes: 4
  %loadMem_40f3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3be = call %struct.Memory* @routine_subl_MINUS0x80__rbp__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3be)
  store %struct.Memory* %call_40f3be, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %edx	 RIP: 40f3c2	 Bytes: 3
  %loadMem_40f3c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3c2 = call %struct.Memory* @routine_addl__0x20___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3c2)
  store %struct.Memory* %call_40f3c2, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %edx	 RIP: 40f3c5	 Bytes: 3
  %loadMem_40f3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3c5 = call %struct.Memory* @routine_sarl__0x6___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3c5)
  store %struct.Memory* %call_40f3c5, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 40f3c8	 Bytes: 2
  %loadMem_40f3c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3c8 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3c8)
  store %struct.Memory* %call_40f3c8, %struct.Memory** %MEMORY

  ; Code: jle .L_40f3dd	 RIP: 40f3ca	 Bytes: 6
  %loadMem_40f3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3ca = call %struct.Memory* @routine_jle_.L_40f3dd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3ca, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_40f3ca, %struct.Memory** %MEMORY

  %loadBr_40f3ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f3ca = icmp eq i8 %loadBr_40f3ca, 1
  br i1 %cmpBr_40f3ca, label %block_.L_40f3dd, label %block_40f3d0

block_40f3d0:
  ; Code: xorl %eax, %eax	 RIP: 40f3d0	 Bytes: 2
  %loadMem_40f3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3d0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3d0)
  store %struct.Memory* %call_40f3d0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30c(%rbp)	 RIP: 40f3d2	 Bytes: 6
  %loadMem_40f3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3d2 = call %struct.Memory* @routine_movl__eax__MINUS0x30c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3d2)
  store %struct.Memory* %call_40f3d2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f3f9	 RIP: 40f3d8	 Bytes: 5
  %loadMem_40f3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3d8 = call %struct.Memory* @routine_jmpq_.L_40f3f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3d8, i64 33, i64 5)
  store %struct.Memory* %call_40f3d8, %struct.Memory** %MEMORY

  br label %block_.L_40f3f9

  ; Code: .L_40f3dd:	 RIP: 40f3dd	 Bytes: 0
block_.L_40f3dd:

  ; Code: movslq -0x10(%rbp), %rax	 RIP: 40f3dd	 Bytes: 4
  %loadMem_40f3dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3dd = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3dd)
  store %struct.Memory* %call_40f3dd, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f3e1	 Bytes: 4
  %loadMem_40f3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3e1 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3e1)
  store %struct.Memory* %call_40f3e1, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 40f3e5	 Bytes: 4
  %loadMem_40f3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3e5 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3e5)
  store %struct.Memory* %call_40f3e5, %struct.Memory** %MEMORY

  ; Code: subl -0x80(%rbp,%rax,4), %ecx	 RIP: 40f3e9	 Bytes: 4
  %loadMem_40f3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3e9 = call %struct.Memory* @routine_subl_MINUS0x80__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3e9)
  store %struct.Memory* %call_40f3e9, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %ecx	 RIP: 40f3ed	 Bytes: 3
  %loadMem_40f3ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3ed = call %struct.Memory* @routine_addl__0x20___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3ed)
  store %struct.Memory* %call_40f3ed, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %ecx	 RIP: 40f3f0	 Bytes: 3
  %loadMem_40f3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3f0 = call %struct.Memory* @routine_sarl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3f0)
  store %struct.Memory* %call_40f3f0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x30c(%rbp)	 RIP: 40f3f3	 Bytes: 6
  %loadMem_40f3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3f3 = call %struct.Memory* @routine_movl__ecx__MINUS0x30c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3f3)
  store %struct.Memory* %call_40f3f3, %struct.Memory** %MEMORY

  ; Code: .L_40f3f9:	 RIP: 40f3f9	 Bytes: 0
  br label %block_.L_40f3f9
block_.L_40f3f9:

  ; Code: movl -0x30c(%rbp), %eax	 RIP: 40f3f9	 Bytes: 6
  %loadMem_40f3f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3f9 = call %struct.Memory* @routine_movl_MINUS0x30c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3f9)
  store %struct.Memory* %call_40f3f9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x308(%rbp)	 RIP: 40f3ff	 Bytes: 6
  %loadMem_40f3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f3ff = call %struct.Memory* @routine_movl__eax__MINUS0x308__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f3ff)
  store %struct.Memory* %call_40f3ff, %struct.Memory** %MEMORY

  ; Code: .L_40f405:	 RIP: 40f405	 Bytes: 0
  br label %block_.L_40f405
block_.L_40f405:

  ; Code: movl -0x308(%rbp), %eax	 RIP: 40f405	 Bytes: 6
  %loadMem_40f405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f405 = call %struct.Memory* @routine_movl_MINUS0x308__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f405)
  store %struct.Memory* %call_40f405, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40f40b	 Bytes: 8
  %loadMem_40f40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f40b = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f40b)
  store %struct.Memory* %call_40f40b, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 40f413	 Bytes: 7
  %loadMem_40f413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f413 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f413)
  store %struct.Memory* %call_40f413, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edx	 RIP: 40f41a	 Bytes: 3
  %loadMem_40f41a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f41a = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f41a)
  store %struct.Memory* %call_40f41a, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %edx	 RIP: 40f41d	 Bytes: 3
  %loadMem_40f41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f41d = call %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f41d)
  store %struct.Memory* %call_40f41d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40f420	 Bytes: 3
  %loadMem_40f420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f420 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f420)
  store %struct.Memory* %call_40f420, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 40f423	 Bytes: 4
  %loadMem_40f423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f423 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f423)
  store %struct.Memory* %call_40f423, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 40f427	 Bytes: 3
  %loadMem_40f427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f427 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f427)
  store %struct.Memory* %call_40f427, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edx	 RIP: 40f42a	 Bytes: 3
  %loadMem_40f42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f42a = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f42a)
  store %struct.Memory* %call_40f42a, %struct.Memory** %MEMORY

  ; Code: addl -0x18(%rbp), %edx	 RIP: 40f42d	 Bytes: 3
  %loadMem_40f42d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f42d = call %struct.Memory* @routine_addl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f42d)
  store %struct.Memory* %call_40f42d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40f430	 Bytes: 3
  %loadMem_40f430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f430 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f430)
  store %struct.Memory* %call_40f430, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rsi,4)	 RIP: 40f433	 Bytes: 3
  %loadMem_40f433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f433 = call %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f433)
  store %struct.Memory* %call_40f433, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40f436	 Bytes: 3
  %loadMem_40f436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f436 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f436)
  store %struct.Memory* %call_40f436, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f439	 Bytes: 3
  %loadMem_40f439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f439 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f439)
  store %struct.Memory* %call_40f439, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40f43c	 Bytes: 3
  %loadMem_40f43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f43c = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f43c)
  store %struct.Memory* %call_40f43c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f201	 RIP: 40f43f	 Bytes: 5
  %loadMem_40f43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f43f = call %struct.Memory* @routine_jmpq_.L_40f201(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f43f, i64 -574, i64 5)
  store %struct.Memory* %call_40f43f, %struct.Memory** %MEMORY

  br label %block_.L_40f201

  ; Code: .L_40f444:	 RIP: 40f444	 Bytes: 0
block_.L_40f444:

  ; Code: jmpq .L_40f449	 RIP: 40f444	 Bytes: 5
  %loadMem_40f444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f444 = call %struct.Memory* @routine_jmpq_.L_40f449(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f444, i64 5, i64 5)
  store %struct.Memory* %call_40f444, %struct.Memory** %MEMORY

  br label %block_.L_40f449

  ; Code: .L_40f449:	 RIP: 40f449	 Bytes: 0
block_.L_40f449:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40f449	 Bytes: 3
  %loadMem_40f449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f449 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f449)
  store %struct.Memory* %call_40f449, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f44c	 Bytes: 3
  %loadMem_40f44c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f44c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f44c)
  store %struct.Memory* %call_40f44c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40f44f	 Bytes: 3
  %loadMem_40f44f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f44f = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f44f)
  store %struct.Memory* %call_40f44f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f173	 RIP: 40f452	 Bytes: 5
  %loadMem_40f452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f452 = call %struct.Memory* @routine_jmpq_.L_40f173(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f452, i64 -735, i64 5)
  store %struct.Memory* %call_40f452, %struct.Memory** %MEMORY

  br label %block_.L_40f173

  ; Code: .L_40f457:	 RIP: 40f457	 Bytes: 0
block_.L_40f457:

  ; Code: jmpq .L_40f45c	 RIP: 40f457	 Bytes: 5
  %loadMem_40f457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f457 = call %struct.Memory* @routine_jmpq_.L_40f45c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f457, i64 5, i64 5)
  store %struct.Memory* %call_40f457, %struct.Memory** %MEMORY

  br label %block_.L_40f45c

  ; Code: .L_40f45c:	 RIP: 40f45c	 Bytes: 0
block_.L_40f45c:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 40f45c	 Bytes: 3
  %loadMem_40f45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f45c = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f45c)
  store %struct.Memory* %call_40f45c, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40f45f	 Bytes: 3
  %loadMem_40f45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f45f = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f45f)
  store %struct.Memory* %call_40f45f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 40f462	 Bytes: 3
  %loadMem_40f462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f462 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f462)
  store %struct.Memory* %call_40f462, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f021	 RIP: 40f465	 Bytes: 5
  %loadMem_40f465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f465 = call %struct.Memory* @routine_jmpq_.L_40f021(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f465, i64 -1092, i64 5)
  store %struct.Memory* %call_40f465, %struct.Memory** %MEMORY

  br label %block_.L_40f021

  ; Code: .L_40f46a:	 RIP: 40f46a	 Bytes: 0
block_.L_40f46a:

  ; Code: jmpq .L_40f46f	 RIP: 40f46a	 Bytes: 5
  %loadMem_40f46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f46a = call %struct.Memory* @routine_jmpq_.L_40f46f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f46a, i64 5, i64 5)
  store %struct.Memory* %call_40f46a, %struct.Memory** %MEMORY

  br label %block_.L_40f46f

  ; Code: .L_40f46f:	 RIP: 40f46f	 Bytes: 0
block_.L_40f46f:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 40f46f	 Bytes: 3
  %loadMem_40f46f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f46f = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f46f)
  store %struct.Memory* %call_40f46f, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 40f472	 Bytes: 3
  %loadMem_40f472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f472 = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f472)
  store %struct.Memory* %call_40f472, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 40f475	 Bytes: 3
  %loadMem_40f475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f475 = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f475)
  store %struct.Memory* %call_40f475, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f010	 RIP: 40f478	 Bytes: 5
  %loadMem_40f478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f478 = call %struct.Memory* @routine_jmpq_.L_40f010(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f478, i64 -1128, i64 5)
  store %struct.Memory* %call_40f478, %struct.Memory** %MEMORY

  br label %block_.L_40f010

  ; Code: .L_40f47d:	 RIP: 40f47d	 Bytes: 0
block_.L_40f47d:

  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 40f47d	 Bytes: 7
  %loadMem_40f47d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f47d = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f47d)
  store %struct.Memory* %call_40f47d, %struct.Memory** %MEMORY

  ; Code: .L_40f484:	 RIP: 40f484	 Bytes: 0
  br label %block_.L_40f484
block_.L_40f484:

  ; Code: cmpl $0x8, -0x10(%rbp)	 RIP: 40f484	 Bytes: 4
  %loadMem_40f484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f484 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f484)
  store %struct.Memory* %call_40f484, %struct.Memory** %MEMORY

  ; Code: jge .L_40f52a	 RIP: 40f488	 Bytes: 6
  %loadMem_40f488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f488 = call %struct.Memory* @routine_jge_.L_40f52a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f488, i8* %BRANCH_TAKEN, i64 162, i64 6, i64 6)
  store %struct.Memory* %call_40f488, %struct.Memory** %MEMORY

  %loadBr_40f488 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f488 = icmp eq i8 %loadBr_40f488, 1
  br i1 %cmpBr_40f488, label %block_.L_40f52a, label %block_40f48e

block_40f48e:
  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40f48e	 Bytes: 7
  %loadMem_40f48e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f48e = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f48e)
  store %struct.Memory* %call_40f48e, %struct.Memory** %MEMORY

  ; Code: .L_40f495:	 RIP: 40f495	 Bytes: 0
  br label %block_.L_40f495
block_.L_40f495:

  ; Code: cmpl $0x8, -0xc(%rbp)	 RIP: 40f495	 Bytes: 4
  %loadMem_40f495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f495 = call %struct.Memory* @routine_cmpl__0x8__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f495)
  store %struct.Memory* %call_40f495, %struct.Memory** %MEMORY

  ; Code: jge .L_40f517	 RIP: 40f499	 Bytes: 6
  %loadMem_40f499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f499 = call %struct.Memory* @routine_jge_.L_40f517(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f499, i8* %BRANCH_TAKEN, i64 126, i64 6, i64 6)
  store %struct.Memory* %call_40f499, %struct.Memory** %MEMORY

  %loadBr_40f499 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40f499 = icmp eq i8 %loadBr_40f499, 1
  br i1 %cmpBr_40f499, label %block_.L_40f517, label %block_40f49f

block_40f49f:
  ; Code: movq 0x6cb900, %rax	 RIP: 40f49f	 Bytes: 8
  %loadMem_40f49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f49f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f49f)
  store %struct.Memory* %call_40f49f, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 40f4a7	 Bytes: 6
  %loadMem_40f4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4a7 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4a7)
  store %struct.Memory* %call_40f4a7, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 40f4ad	 Bytes: 4
  %loadMem_40f4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4ad = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4ad)
  store %struct.Memory* %call_40f4ad, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 40f4b1	 Bytes: 4
  %loadMem_40f4b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4b1 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4b1)
  store %struct.Memory* %call_40f4b1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40f4b5	 Bytes: 3
  %loadMem_40f4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4b5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4b5)
  store %struct.Memory* %call_40f4b5, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 40f4b8	 Bytes: 4
  %loadMem_40f4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4b8 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4b8)
  store %struct.Memory* %call_40f4b8, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 40f4bc	 Bytes: 3
  %loadMem_40f4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4bc = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4bc)
  store %struct.Memory* %call_40f4bc, %struct.Memory** %MEMORY

  ; Code: movw %dx, %si	 RIP: 40f4bf	 Bytes: 3
  %loadMem_40f4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4bf = call %struct.Memory* @routine_movw__dx___si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4bf)
  store %struct.Memory* %call_40f4bf, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 40f4c2	 Bytes: 8
  %loadMem_40f4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4c2 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4c2)
  store %struct.Memory* %call_40f4c2, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 40f4ca	 Bytes: 7
  %loadMem_40f4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4ca = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4ca)
  store %struct.Memory* %call_40f4ca, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 40f4d1	 Bytes: 4
  %loadMem_40f4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4d1 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4d1)
  store %struct.Memory* %call_40f4d1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 40f4d5	 Bytes: 4
  %loadMem_40f4d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4d5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4d5)
  store %struct.Memory* %call_40f4d5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40f4d9	 Bytes: 8
  %loadMem_40f4d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4d9 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4d9)
  store %struct.Memory* %call_40f4d9, %struct.Memory** %MEMORY

  ; Code: movl 0xa4(%rcx), %edx	 RIP: 40f4e1	 Bytes: 6
  %loadMem_40f4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4e1 = call %struct.Memory* @routine_movl_0xa4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4e1)
  store %struct.Memory* %call_40f4e1, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %edx	 RIP: 40f4e7	 Bytes: 3
  %loadMem_40f4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4e7 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4e7)
  store %struct.Memory* %call_40f4e7, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 40f4ea	 Bytes: 3
  %loadMem_40f4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4ea = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4ea)
  store %struct.Memory* %call_40f4ea, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 40f4ed	 Bytes: 4
  %loadMem_40f4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4ed = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4ed)
  store %struct.Memory* %call_40f4ed, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40f4f1	 Bytes: 8
  %loadMem_40f4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4f1 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4f1)
  store %struct.Memory* %call_40f4f1, %struct.Memory** %MEMORY

  ; Code: movl 0xa0(%rcx), %edx	 RIP: 40f4f9	 Bytes: 6
  %loadMem_40f4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4f9 = call %struct.Memory* @routine_movl_0xa0__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4f9)
  store %struct.Memory* %call_40f4f9, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %edx	 RIP: 40f4ff	 Bytes: 3
  %loadMem_40f4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f4ff = call %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f4ff)
  store %struct.Memory* %call_40f4ff, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 40f502	 Bytes: 3
  %loadMem_40f502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f502 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f502)
  store %struct.Memory* %call_40f502, %struct.Memory** %MEMORY

  ; Code: movw %si, (%rax,%rcx,2)	 RIP: 40f505	 Bytes: 4
  %loadMem_40f505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f505 = call %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f505)
  store %struct.Memory* %call_40f505, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40f509	 Bytes: 3
  %loadMem_40f509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f509 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f509)
  store %struct.Memory* %call_40f509, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f50c	 Bytes: 3
  %loadMem_40f50c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f50c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f50c)
  store %struct.Memory* %call_40f50c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40f50f	 Bytes: 3
  %loadMem_40f50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f50f = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f50f)
  store %struct.Memory* %call_40f50f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f495	 RIP: 40f512	 Bytes: 5
  %loadMem_40f512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f512 = call %struct.Memory* @routine_jmpq_.L_40f495(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f512, i64 -125, i64 5)
  store %struct.Memory* %call_40f512, %struct.Memory** %MEMORY

  br label %block_.L_40f495

  ; Code: .L_40f517:	 RIP: 40f517	 Bytes: 0
block_.L_40f517:

  ; Code: jmpq .L_40f51c	 RIP: 40f517	 Bytes: 5
  %loadMem_40f517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f517 = call %struct.Memory* @routine_jmpq_.L_40f51c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f517, i64 5, i64 5)
  store %struct.Memory* %call_40f517, %struct.Memory** %MEMORY

  br label %block_.L_40f51c

  ; Code: .L_40f51c:	 RIP: 40f51c	 Bytes: 0
block_.L_40f51c:

  ; Code: movl -0x10(%rbp), %eax	 RIP: 40f51c	 Bytes: 3
  %loadMem_40f51c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f51c = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f51c)
  store %struct.Memory* %call_40f51c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40f51f	 Bytes: 3
  %loadMem_40f51f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f51f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f51f)
  store %struct.Memory* %call_40f51f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 40f522	 Bytes: 3
  %loadMem_40f522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f522 = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f522)
  store %struct.Memory* %call_40f522, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40f484	 RIP: 40f525	 Bytes: 5
  %loadMem_40f525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f525 = call %struct.Memory* @routine_jmpq_.L_40f484(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f525, i64 -161, i64 5)
  store %struct.Memory* %call_40f525, %struct.Memory** %MEMORY

  br label %block_.L_40f484

  ; Code: .L_40f52a:	 RIP: 40f52a	 Bytes: 0
block_.L_40f52a:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 40f52a	 Bytes: 3
  %loadMem_40f52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f52a = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f52a)
  store %struct.Memory* %call_40f52a, %struct.Memory** %MEMORY

  ; Code: addq $0x310, %rsp	 RIP: 40f52d	 Bytes: 7
  %loadMem_40f52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f52d = call %struct.Memory* @routine_addq__0x310___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f52d)
  store %struct.Memory* %call_40f52d, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 40f534	 Bytes: 1
  %loadMem_40f534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f534 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f534)
  store %struct.Memory* %call_40f534, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 40f535	 Bytes: 1
  %loadMem_40f535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40f535 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40f535)
  store %struct.Memory* %call_40f535, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_40f535
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x310___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 784)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0xa4585__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xa4585__rip__type* @G_0xa4585__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xa4585__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xa4585__rip__type* @G_0xa4585__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 632)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rax__MINUS0x1b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x3740__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq___rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x1e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}














define %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x1e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0xc__rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0xc___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 12)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = trunc i64 %3 to i32
  %6 = sitofp i32 %5 to double
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdl__esi___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fdiv double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = extractelement <2 x i32> %6, i32 0
  %11 = bitcast i8* %2 to i32*
  store i32 %10, i32* %11, align 1
  %12 = extractelement <2 x i32> %6, i32 1
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 0
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movaps__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.pow_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0xa44c9__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xa44c9__rip__type* @G_0xa44c9__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xa44c9__rip____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xa44c9__rip__type* @G_0xa44c9__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_mulsd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x228__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 552
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6d4690_type* @G_0x6d4690 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_0xd0__rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 208
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_40d3b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x234__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_40d410(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_0xc__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_0xd0__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 208
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__0x33___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 51)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_40d3e6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x33___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 51)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d404(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__ecx__MINUS0x238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x238__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x234__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x22c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x10__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6d4690___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6d4690_type* @G_0x6d4690 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addl_0xd0__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 208
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d44a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d4a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_0x10__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jle_.L_40d47b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d499(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__ecx__MINUS0x240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x240__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x23c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x230__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x22c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 556
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d4cf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x22c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x244__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d4e4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x22c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_0x4b2320___rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4924192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x244__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x244__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x6___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 6)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_subl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 0)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jge_.L_40d519(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x248__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d52e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__ecx__MINUS0x248__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x248__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__edx__MINUS0x24c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 588
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__edx__MINUS0x1c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0xf___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 15)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__MINUS0x1c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1c4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x250__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x24c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 588
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x250__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x230__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d5a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x254__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d5ba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x230__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x254__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__eax__MINUS0x1c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jge_.L_40d5f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x258__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d608(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 2)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x6___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 6)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__edx__MINUS0x25c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__edx__MINUS0x1cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1c8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x1d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1d0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x260__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x25c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x260__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d729(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d716(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x190__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 12600)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 6)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl___rcx__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__esi____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}
















define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d67d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40d71b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d66c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_40dad0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jg_.L_40dabd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d8f8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x10__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d837(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 3)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0xc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_addl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__eax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}






define %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x24__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -112
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}




































define %struct.Memory* @routine_subl___rcx__rdx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_40d76c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x6c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 108
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_subl_MINUS0x6c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 108
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x2___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






















define %struct.Memory* @routine_movl_MINUS0x68__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_addl__0x3___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 3)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jmpq_.L_40d752(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40daaa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0xc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40d9e4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl_MINUS0x10__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}
























define %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x18__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}














































define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_40d919(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_addl__0x0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 0)
  ret %struct.Memory* %12
}




















































































define %struct.Memory* @routine_jmpq_.L_40d8ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40daaf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d741(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40dac2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40d730(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jg_.L_40ddc7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jg_.L_40ddb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_40dc47(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jge_.L_40dbb2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x3___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 3)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x24__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rdx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x24__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -112
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


























define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -112
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}








define %struct.Memory* @routine_jmpq_.L_40db13(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x6c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 108
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_subl_MINUS0x6c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 108
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x2___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 2)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x68__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addl__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 1)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_subl__edi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addl__0x3___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 3)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_40daf9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_40dda1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jge_.L_40dd07(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_subl_MINUS0x10__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x10__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}














define %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x18__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








































define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_40dc68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_addl__0x0___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 0)
  ret %struct.Memory* %12
}












































































define %struct.Memory* @routine_jmpq_.L_40dc4e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40dda6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40dae8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40ddb9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40dad7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_0x3338__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 13112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_0x3438__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 13368
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addl_0x3348__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 13128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addl_0x3448__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 13384
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_subl_0x3438__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 13368
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_subl_0x3448__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 13384
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_subl_0x3348__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 13128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl__ecx__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


















define %struct.Memory* @routine_movl__ecx__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x190__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x110__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 272
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x180__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 384
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x100__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_subl_MINUS0x110__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 272
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_subl_MINUS0x100__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_subl_MINUS0x180__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 384
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__ecx__MINUS0x1a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl__ecx__MINUS0x1a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0x44__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40e594(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1b0__rbp__rcx_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -432
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_callq_.abs_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x4b2750___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x4b2750_type* @G__0x4b2750 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rcx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6
  %8 = shl i64 %3, 32
  %9 = ashr exact i64 %8, 32
  %10 = sext i32 %7 to i64
  %11 = mul  i64 %10, %9
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull___rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x194__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x1d0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rcx__MINUS0x268__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_shll__cl___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq_MINUS0x268__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = inttoptr i64 %2 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  %15 = shl  i64 %11, 32
  %16 = or i64 %15, %7
  %17 = sdiv i64 %16, %14
  %18 = shl i64 %17, 32
  %19 = ashr exact i64 %18, 32
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %25, label %21

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %23, %struct.Memory* %0) #21
  br label %37

; <label>:25:                                     ; preds = %3
  %26 = srem i64 %16, %14
  %27 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %28 = and i64 %17, 4294967295
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %30 = and i64 %26, 4294967295
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %25, %21
  %38 = phi %struct.Memory* [ %24, %21 ], [ %0, %25 ]
  ret %struct.Memory* %38
}

define %struct.Memory* @routine_idivl___rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x1fc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1b0__rbp__rsi_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -432
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__eax__MINUS0x26c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.sign(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x26c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x1fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4b2750___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x4b2750_type* @G__0x4b2750 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r9___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___r8____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x1c4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x204__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_subl_MINUS0x1b0__rbp__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -432
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 8
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x200__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




























define %struct.Memory* @routine_movl__eax__MINUS0x208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x208__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 520
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_40e350(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x204__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 516
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 520
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x204__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1fc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x270__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_leaq_MINUS0x20c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 524
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x210__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0x4b28d0___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x4b28d0_type* @G__0x4b28d0 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_imull_0x4b2a50___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x4b2a50_type* @G_0x4b2a50 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x278__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__0x5___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x270__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_subl_MINUS0x1b0__rbp__r8_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -432
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 8
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 536
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x44__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x278__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.levrun_linfo_c2x2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_MINUS0x218__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd_MINUS0x218__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 536
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsd_MINUS0x228__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 552
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sitofp i32 %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x20c__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 524
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_movl_MINUS0x60__rbp__rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x200__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x27c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






















define %struct.Memory* @routine_movq__rcx__MINUS0x288__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl_MINUS0x27c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movsd__xmm0__MINUS0x220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 544
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_MINUS0x288__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movsd_MINUS0x220__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_mulsd_MINUS0x220__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 544
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}













define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %3 to double*
  %8 = load double, double* %7
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd_MINUS0x220__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_40e2e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JPEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jp_.L_40e2e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JPEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x28c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x28c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_40e2c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x290__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e2d2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x208__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x290__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e316(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movsd_MINUS0x220__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = bitcast i8* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp ne i8 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %14 = select i1 %11, i64 %3, i64 %4
  store i64 %14, i64* %13, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jbe_.L_40e308(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_40e311(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x204__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 516
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_40e336(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e342(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x200__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x294__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e3e4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_40e379(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jmpq_.L_40e3df(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_40e397(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x298__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e3a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x298__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_40e3ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x29c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e3d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x29c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x934__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2356
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_40e424(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x4__0x28__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40e424(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x80f__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2063)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_40e41f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x80f__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2063)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_40e424(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_40e507(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0xf0000___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 983040)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__MINUS0x2a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2a0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__edx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x1b8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnImE2MnImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6
  %8 = or i64 %7, %3
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = trunc i64 %8 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = icmp eq i64 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i64 %8, 63
  %21 = trunc i64 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_orq_0x1d0__rdi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 464
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnImE2MnImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rsi__0x1d0__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 464
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_40e47f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e488(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x2a4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x1e0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x40__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_MINUS0x1e8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movq__0x4b28d0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x4b28d0_type* @G__0x4b28d0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_imull___rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x1b0__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -432
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl_MINUS0x1c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__0x4b2750___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4b2750_type* @G__0x4b2750 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rsi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x194__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x1d0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__0x4b28d0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4b28d0_type* @G__0x4b28d0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1c8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40df40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__0x0____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x5c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x2a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x2a8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__0x3338__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 13112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0x5c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x58__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x54__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl__eax__0x3438__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 13368
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addl_MINUS0x5c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x58__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movl__eax__0x3348__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 13128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_addl_MINUS0x54__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl__eax__0x3448__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 13384
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jg_.L_40eff5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jg_.L_40efe2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__MINUS0x2ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x2ac__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x2b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x2b0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x1d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x3738__rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__eax___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x1d4__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq___rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdi__MINUS0x1f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_movq_0x8__rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rdi__MINUS0x1f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl__0x1__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x10__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 16)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40efc2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72444
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_40e755(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x6d4750(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d4750_type* @G_0x6d4750 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_40e778(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11948__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72008
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movzbl_0x4b2380___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924288
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movzbl_0x4b2381___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924289
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40e796(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924257
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl_MINUS0x44__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx__MINUS0x44__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0xc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}














define %struct.Memory* @routine_movl___rax__rdx_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_leaq_MINUS0x190__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0x4b2750___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4b2750_type* @G__0x4b2750 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movq__rsi___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__r8___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___r9__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R9
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl_MINUS0x194__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 404
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_addq__r8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movq__rdx__MINUS0x2b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_idivl___rsi__r8_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x3338___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 13112)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl___rsi__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_movl_MINUS0x24__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0xc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 12
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r10d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x2b8__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__rsi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x10__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 16
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movl___r8__rsi_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x2bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 700
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2bc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_leaq_MINUS0x190__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0x4b2750___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x4b2750_type* @G__0x4b2750 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r11___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___r9__r11_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R9
  %17 = load i64, i64* %R11
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl_MINUS0x34__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x1c4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_0x6cb900___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x3338___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 13112)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq__eax___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl___r9__r11_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R9
  %16 = load i64, i64* %R11
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_addl_MINUS0xc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 5)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl_MINUS0x10__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_subl___r8__r9_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}
















define %struct.Memory* @routine_movslq_MINUS0xc__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___r8__r9_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}














define %struct.Memory* @routine_je_.L_40ed10(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_addq__0x3338___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}






define %struct.Memory* @routine_movl__ecx__MINUS0x2c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movq__0x4b2a50___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x4b2a50_type* @G__0x4b2a50 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x4b28d0___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 ptrtoint( %G__0x4b28d0_type* @G__0x4b28d0 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_addq__r11___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_imull___r10__r11_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R10
  %17 = load i64, i64* %R11
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r10___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x10__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___r9__r10_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R9
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movq__rcx__MINUS0x2c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_sarl__0x6___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x2c0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movslq__eax___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_subl___r8__r9_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15, i64 %19)
  ret %struct.Memory* %22
}










define %struct.Memory* @routine_movq_MINUS0x2c8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.levrun_linfo_inter(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










































define %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










































define %struct.Memory* @routine_movq__rcx__MINUS0x2d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl_MINUS0x2cc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






























define %struct.Memory* @routine_movq_MINUS0x2d8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_jne_.L_40eca0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jp_.L_40eca0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JPEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x2dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 732
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2dc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 732
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_40ec86(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40ec92(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x2e0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_40ecd6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jbe_.L_40ecc8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_40ecd1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_40ecf6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 740
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40ed02(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x2e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_40eda4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_40ed39(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jmpq_.L_40ed9f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_40ed57(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40ed63(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x2e8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_40ed8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40ed96(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x2ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_40eee0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__0x10___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 16)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_sarl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_sarl__0x2___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__esi___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movslq__eax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x1b8__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_orq_0x1d0__r8____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = add i64 %13, 464
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnImE2MnImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdi__0x1d0__r8_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 464
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_40ee06(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0xf423f___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 999999)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40ee3a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4b23a0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4b23a0_type* @G__0x4b23a0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_0x9a4__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2468
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x44__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl___rax__rcx_1____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %17)
  ret %struct.Memory* %20
}


define %struct.Memory* @routine_addl_MINUS0x84__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 132
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x2__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movq_MINUS0x1f0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x1f8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movq__0x4b2a50___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x4b2a50_type* @G__0x4b2a50 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movslq_MINUS0x1c0__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_imull___rdx__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 4)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_imull___rcx__rdx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}














































define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}




































define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x3338___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq__esi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax____rdx__r8_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_40e713(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_MINUS0x1f0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x40__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jmpq_.L_40e659(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40efe7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40e648(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_40f009(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jg_.L_40f47d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jg_.L_40f46a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_40f16c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_40f08d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_40f043(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_subl_MINUS0x68__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_sarl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_subl_MINUS0x64__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jge_.L_40f159(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_addl_MINUS0x80__rbp__rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_addq__rsi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x10__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_subl_MINUS0x80__rbp__rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_addl_MINUS0x14__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






















define %struct.Memory* @routine_jmpq_.L_40f0c0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40f15e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40f032(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_40f457(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_40f1ce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_40f184(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_jge_.L_40f444(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_0x11bf0__rdx____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x80__rbp__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_addl__0x20___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 32)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_sarl__0x6___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x2f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_40f257(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 756
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40f273(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x80__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_addl_MINUS0x80__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_addl__0x20___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 32)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_sarl__0x6___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__MINUS0x2f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 756
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2f4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 756
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2f0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_40f2a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x2f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 760
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40f2f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_addl_MINUS0x80__rbp__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_addl__0x20___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 32)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_sarl__0x6___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_40f2cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 764
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40f2e9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_movl__ecx__MINUS0x2fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 764
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2fc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 764
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x2f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 760
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2f8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 760
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movslq__esi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax____rdx__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movl_0x11bf0__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_subl_MINUS0x80__rbp__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_cmpl__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x300__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_40f367(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40f383(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_subl_MINUS0x80__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_movl__ecx__MINUS0x304__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x304__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x300__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_40f3b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x308__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 776
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40f405(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_subl_MINUS0x80__rbp__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jle_.L_40f3dd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x30c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40f3f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_movl__ecx__MINUS0x30c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x30c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x308__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 776
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x308__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 776
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_addl_MINUS0x18__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_jmpq_.L_40f201(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40f449(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40f173(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40f45c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40f021(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40f46f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40f010(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_40f52a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_40f517(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 6)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__dx___si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_0xa4__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__edx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_0xa0__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_40f495(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40f51c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40f484(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addq__0x310___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 784)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

