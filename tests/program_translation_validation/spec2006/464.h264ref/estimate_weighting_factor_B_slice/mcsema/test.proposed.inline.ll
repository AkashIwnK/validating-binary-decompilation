; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x232c__rip__type = type <{ [8 x i8] }>
%G_0x277050__rip__type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d4690_type = type <{ [8 x i8] }>
%G_0x6d4740_type = type <{ [8 x i8] }>
%G_0x6f9728_type = type <{ [8 x i8] }>
%G_0x70f6d0_type = type <{ [4 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G_0x70fcf8_type = type <{ [8 x i8] }>
%G_0x710790_type = type <{ [4 x i8] }>
%G_0x7107a0_type = type <{ [4 x i8] }>
%G_0x722b20_type = type <{ [8 x i8] }>
%G_0x722b28_type = type <{ [8 x i8] }>
%G_0x7242a0_type = type <{ [4 x i8] }>
%G_0x7247b0_type = type <{ [4 x i8] }>
%G_0x7247b4_type = type <{ [4 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x232c__rip_ = global %G_0x232c__rip__type zeroinitializer
@G_0x277050__rip_ = global %G_0x277050__rip__type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d4690 = global %G_0x6d4690_type zeroinitializer
@G_0x6d4740 = global %G_0x6d4740_type zeroinitializer
@G_0x6f9728 = global %G_0x6f9728_type zeroinitializer
@G_0x70f6d0 = global %G_0x70f6d0_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G_0x70fcf8 = global %G_0x70fcf8_type zeroinitializer
@G_0x710790 = global %G_0x710790_type zeroinitializer
@G_0x7107a0 = global %G_0x7107a0_type zeroinitializer
@G_0x722b20 = global %G_0x722b20_type zeroinitializer
@G_0x722b28 = global %G_0x722b28_type zeroinitializer
@G_0x7242a0 = global %G_0x7242a0_type zeroinitializer
@G_0x7247b0 = global %G_0x7247b0_type zeroinitializer
@G_0x7247b4 = global %G_0x7247b4_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @estimate_weighting_factor_B_slice(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_4ae790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_4ae790, %struct.Memory** %MEMORY
  %loadMem_4ae791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1068 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1068
  %27 = load i64, i64* %PC.i1067
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1067
  store i64 %26, i64* %RBP.i1069, align 8
  store %struct.Memory* %loadMem_4ae791, %struct.Memory** %MEMORY
  %loadMem_4ae794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i2235 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i2236 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i2236
  %36 = load i64, i64* %PC.i2235
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i2235
  %38 = sub i64 %35, 35472
  store i64 %38, i64* %RSP.i2236, align 8
  %39 = icmp ult i64 %35, 35472
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 35472, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_4ae794, %struct.Memory** %MEMORY
  %loadMem_4ae79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i2240 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %71 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %70, i64 0, i64 0
  %YMM0.i2241 = bitcast %union.VectorReg* %71 to %"class.std::bitset"*
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %73 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %72, i64 0, i64 0
  %XMM0.i2242 = bitcast %union.VectorReg* %73 to %union.vec128_t*
  %74 = bitcast %"class.std::bitset"* %YMM0.i2241 to i8*
  %75 = bitcast %"class.std::bitset"* %YMM0.i2241 to i8*
  %76 = bitcast %union.vec128_t* %XMM0.i2242 to i8*
  %77 = load i64, i64* %PC.i2240
  %78 = add i64 %77, 3
  store i64 %78, i64* %PC.i2240
  %79 = bitcast i8* %75 to i64*
  %80 = load i64, i64* %79, align 1
  %81 = getelementptr inbounds i8, i8* %75, i64 8
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = bitcast i8* %76 to i64*
  %85 = load i64, i64* %84, align 1
  %86 = getelementptr inbounds i8, i8* %76, i64 8
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 1
  %89 = xor i64 %85, %80
  %90 = xor i64 %88, %83
  %91 = trunc i64 %89 to i32
  %92 = lshr i64 %89, 32
  %93 = trunc i64 %92 to i32
  %94 = bitcast i8* %74 to i32*
  store i32 %91, i32* %94, align 1
  %95 = getelementptr inbounds i8, i8* %74, i64 4
  %96 = bitcast i8* %95 to i32*
  store i32 %93, i32* %96, align 1
  %97 = trunc i64 %90 to i32
  %98 = getelementptr inbounds i8, i8* %74, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 1
  %100 = lshr i64 %90, 32
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds i8, i8* %74, i64 12
  %103 = bitcast i8* %102 to i32*
  store i32 %101, i32* %103, align 1
  store %struct.Memory* %loadMem_4ae79b, %struct.Memory** %MEMORY
  %loadMem_4ae79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.GPR, %struct.GPR* %104, i32 0, i32 33
  %106 = getelementptr inbounds %struct.Reg, %struct.Reg* %105, i32 0, i32 0
  %PC.i2249 = bitcast %union.anon* %106 to i64*
  %107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %108 = getelementptr inbounds %struct.GPR, %struct.GPR* %107, i32 0, i32 15
  %109 = getelementptr inbounds %struct.Reg, %struct.Reg* %108, i32 0, i32 0
  %RBP.i2250 = bitcast %union.anon* %109 to i64*
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %111 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %110, i64 0, i64 0
  %XMM0.i2251 = bitcast %union.VectorReg* %111 to %union.vec128_t*
  %112 = load i64, i64* %RBP.i2250
  %113 = sub i64 %112, 32
  %114 = bitcast %union.vec128_t* %XMM0.i2251 to i8*
  %115 = load i64, i64* %PC.i2249
  %116 = add i64 %115, 5
  store i64 %116, i64* %PC.i2249
  %117 = bitcast i8* %114 to double*
  %118 = load double, double* %117, align 1
  %119 = inttoptr i64 %113 to double*
  store double %118, double* %119
  store %struct.Memory* %loadMem_4ae79e, %struct.Memory** %MEMORY
  %loadMem_4ae7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 33
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %PC.i2856 = bitcast %union.anon* %122 to i64*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 1
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RAX.i2857 = bitcast %union.anon* %125 to i64*
  %126 = load i64, i64* %PC.i2856
  %127 = add i64 %126, 8
  store i64 %127, i64* %PC.i2856
  %128 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %128, i64* %RAX.i2857, align 8
  store %struct.Memory* %loadMem_4ae7a3, %struct.Memory** %MEMORY
  %loadMem_4ae7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 33
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %PC.i2894 = bitcast %union.anon* %131 to i64*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 1
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %RAX.i2895 = bitcast %union.anon* %134 to i64*
  %135 = load i64, i64* %RAX.i2895
  %136 = add i64 %135, 72400
  %137 = load i64, i64* %PC.i2894
  %138 = add i64 %137, 7
  store i64 %138, i64* %PC.i2894
  %139 = inttoptr i64 %136 to i32*
  %140 = load i32, i32* %139
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %141, align 1
  %142 = and i32 %140, 255
  %143 = call i32 @llvm.ctpop.i32(i32 %142)
  %144 = trunc i32 %143 to i8
  %145 = and i8 %144, 1
  %146 = xor i8 %145, 1
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %146, i8* %147, align 1
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %148, align 1
  %149 = icmp eq i32 %140, 0
  %150 = zext i1 %149 to i8
  %151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %150, i8* %151, align 1
  %152 = lshr i32 %140, 31
  %153 = trunc i32 %152 to i8
  %154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %153, i8* %154, align 1
  %155 = lshr i32 %140, 31
  %156 = xor i32 %152, %155
  %157 = add i32 %156, %155
  %158 = icmp eq i32 %157, 2
  %159 = zext i1 %158 to i8
  %160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %159, i8* %160, align 1
  store %struct.Memory* %loadMem_4ae7ab, %struct.Memory** %MEMORY
  %loadMem_4ae7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 33
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %PC.i2893 = bitcast %union.anon* %163 to i64*
  %164 = load i64, i64* %PC.i2893
  %165 = add i64 %164, 111
  %166 = load i64, i64* %PC.i2893
  %167 = add i64 %166, 6
  %168 = load i64, i64* %PC.i2893
  %169 = add i64 %168, 6
  store i64 %169, i64* %PC.i2893
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %171 = load i8, i8* %170, align 1
  store i8 %171, i8* %BRANCH_TAKEN, align 1
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %173 = icmp ne i8 %171, 0
  %174 = select i1 %173, i64 %165, i64 %167
  store i64 %174, i64* %172, align 8
  store %struct.Memory* %loadMem_4ae7b2, %struct.Memory** %MEMORY
  %loadBr_4ae7b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae7b2 = icmp eq i8 %loadBr_4ae7b2, 1
  br i1 %cmpBr_4ae7b2, label %block_.L_4ae821, label %block_4ae7b8

block_4ae7b8:                                     ; preds = %entry
  %loadMem_4ae7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 33
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %PC.i2891 = bitcast %union.anon* %177 to i64*
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %179 = getelementptr inbounds %struct.GPR, %struct.GPR* %178, i32 0, i32 1
  %180 = getelementptr inbounds %struct.Reg, %struct.Reg* %179, i32 0, i32 0
  %RAX.i2892 = bitcast %union.anon* %180 to i64*
  %181 = load i64, i64* %PC.i2891
  %182 = add i64 %181, 8
  store i64 %182, i64* %PC.i2891
  %183 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %183, i64* %RAX.i2892, align 8
  store %struct.Memory* %loadMem_4ae7b8, %struct.Memory** %MEMORY
  %loadMem_4ae7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 33
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %PC.i2889 = bitcast %union.anon* %186 to i64*
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %188 = getelementptr inbounds %struct.GPR, %struct.GPR* %187, i32 0, i32 1
  %189 = getelementptr inbounds %struct.Reg, %struct.Reg* %188, i32 0, i32 0
  %RAX.i2890 = bitcast %union.anon* %189 to i64*
  %190 = load i64, i64* %RAX.i2890
  %191 = add i64 %190, 14168
  %192 = load i64, i64* %PC.i2889
  %193 = add i64 %192, 7
  store i64 %193, i64* %PC.i2889
  %194 = inttoptr i64 %191 to i64*
  %195 = load i64, i64* %194
  store i64 %195, i64* %RAX.i2890, align 8
  store %struct.Memory* %loadMem_4ae7c0, %struct.Memory** %MEMORY
  %loadMem_4ae7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %197 = getelementptr inbounds %struct.GPR, %struct.GPR* %196, i32 0, i32 33
  %198 = getelementptr inbounds %struct.Reg, %struct.Reg* %197, i32 0, i32 0
  %PC.i2887 = bitcast %union.anon* %198 to i64*
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %200 = getelementptr inbounds %struct.GPR, %struct.GPR* %199, i32 0, i32 5
  %201 = getelementptr inbounds %struct.Reg, %struct.Reg* %200, i32 0, i32 0
  %RCX.i2888 = bitcast %union.anon* %201 to i64*
  %202 = load i64, i64* %PC.i2887
  %203 = add i64 %202, 8
  store i64 %203, i64* %PC.i2887
  %204 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %204, i64* %RCX.i2888, align 8
  store %struct.Memory* %loadMem_4ae7c7, %struct.Memory** %MEMORY
  %loadMem_4ae7cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %206 = getelementptr inbounds %struct.GPR, %struct.GPR* %205, i32 0, i32 33
  %207 = getelementptr inbounds %struct.Reg, %struct.Reg* %206, i32 0, i32 0
  %PC.i2885 = bitcast %union.anon* %207 to i64*
  %208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %209 = getelementptr inbounds %struct.GPR, %struct.GPR* %208, i32 0, i32 5
  %210 = getelementptr inbounds %struct.Reg, %struct.Reg* %209, i32 0, i32 0
  %RCX.i2886 = bitcast %union.anon* %210 to i64*
  %211 = load i64, i64* %RCX.i2886
  %212 = add i64 %211, 12
  %213 = load i64, i64* %PC.i2885
  %214 = add i64 %213, 4
  store i64 %214, i64* %PC.i2885
  %215 = inttoptr i64 %212 to i32*
  %216 = load i32, i32* %215
  %217 = sext i32 %216 to i64
  store i64 %217, i64* %RCX.i2886, align 8
  store %struct.Memory* %loadMem_4ae7cf, %struct.Memory** %MEMORY
  %loadMem_4ae7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 33
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %PC.i2883 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 5
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %RCX.i2884 = bitcast %union.anon* %223 to i64*
  %224 = load i64, i64* %RCX.i2884
  %225 = load i64, i64* %PC.i2883
  %226 = add i64 %225, 7
  store i64 %226, i64* %PC.i2883
  %227 = sext i64 %224 to i128
  %228 = and i128 %227, -18446744073709551616
  %229 = zext i64 %224 to i128
  %230 = or i128 %228, %229
  %231 = mul i128 632, %230
  %232 = trunc i128 %231 to i64
  store i64 %232, i64* %RCX.i2884, align 8
  %233 = sext i64 %232 to i128
  %234 = icmp ne i128 %233, %231
  %235 = zext i1 %234 to i8
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %235, i8* %236, align 1
  %237 = trunc i128 %231 to i32
  %238 = and i32 %237, 255
  %239 = call i32 @llvm.ctpop.i32(i32 %238)
  %240 = trunc i32 %239 to i8
  %241 = and i8 %240, 1
  %242 = xor i8 %241, 1
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %242, i8* %243, align 1
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %244, align 1
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %245, align 1
  %246 = lshr i64 %232, 63
  %247 = trunc i64 %246 to i8
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %247, i8* %248, align 1
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %235, i8* %249, align 1
  store %struct.Memory* %loadMem_4ae7d3, %struct.Memory** %MEMORY
  %loadMem_4ae7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %251 = getelementptr inbounds %struct.GPR, %struct.GPR* %250, i32 0, i32 33
  %252 = getelementptr inbounds %struct.Reg, %struct.Reg* %251, i32 0, i32 0
  %PC.i2880 = bitcast %union.anon* %252 to i64*
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 1
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %RAX.i2881 = bitcast %union.anon* %255 to i64*
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %257 = getelementptr inbounds %struct.GPR, %struct.GPR* %256, i32 0, i32 5
  %258 = getelementptr inbounds %struct.Reg, %struct.Reg* %257, i32 0, i32 0
  %RCX.i2882 = bitcast %union.anon* %258 to i64*
  %259 = load i64, i64* %RAX.i2881
  %260 = load i64, i64* %RCX.i2882
  %261 = load i64, i64* %PC.i2880
  %262 = add i64 %261, 3
  store i64 %262, i64* %PC.i2880
  %263 = add i64 %260, %259
  store i64 %263, i64* %RAX.i2881, align 8
  %264 = icmp ult i64 %263, %259
  %265 = icmp ult i64 %263, %260
  %266 = or i1 %264, %265
  %267 = zext i1 %266 to i8
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %267, i8* %268, align 1
  %269 = trunc i64 %263 to i32
  %270 = and i32 %269, 255
  %271 = call i32 @llvm.ctpop.i32(i32 %270)
  %272 = trunc i32 %271 to i8
  %273 = and i8 %272, 1
  %274 = xor i8 %273, 1
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %274, i8* %275, align 1
  %276 = xor i64 %260, %259
  %277 = xor i64 %276, %263
  %278 = lshr i64 %277, 4
  %279 = trunc i64 %278 to i8
  %280 = and i8 %279, 1
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %280, i8* %281, align 1
  %282 = icmp eq i64 %263, 0
  %283 = zext i1 %282 to i8
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %283, i8* %284, align 1
  %285 = lshr i64 %263, 63
  %286 = trunc i64 %285 to i8
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %286, i8* %287, align 1
  %288 = lshr i64 %259, 63
  %289 = lshr i64 %260, 63
  %290 = xor i64 %285, %288
  %291 = xor i64 %285, %289
  %292 = add i64 %290, %291
  %293 = icmp eq i64 %292, 2
  %294 = zext i1 %293 to i8
  %295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %294, i8* %295, align 1
  store %struct.Memory* %loadMem_4ae7da, %struct.Memory** %MEMORY
  %loadMem_4ae7dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %297 = getelementptr inbounds %struct.GPR, %struct.GPR* %296, i32 0, i32 33
  %298 = getelementptr inbounds %struct.Reg, %struct.Reg* %297, i32 0, i32 0
  %PC.i2878 = bitcast %union.anon* %298 to i64*
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %300 = getelementptr inbounds %struct.GPR, %struct.GPR* %299, i32 0, i32 1
  %301 = getelementptr inbounds %struct.Reg, %struct.Reg* %300, i32 0, i32 0
  %RAX.i2879 = bitcast %union.anon* %301 to i64*
  %302 = load i64, i64* %RAX.i2879
  %303 = add i64 %302, 532
  %304 = load i64, i64* %PC.i2878
  %305 = add i64 %304, 7
  store i64 %305, i64* %PC.i2878
  %306 = inttoptr i64 %303 to i32*
  %307 = load i32, i32* %306
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %308, align 1
  %309 = and i32 %307, 255
  %310 = call i32 @llvm.ctpop.i32(i32 %309)
  %311 = trunc i32 %310 to i8
  %312 = and i8 %311, 1
  %313 = xor i8 %312, 1
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %313, i8* %314, align 1
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %315, align 1
  %316 = icmp eq i32 %307, 0
  %317 = zext i1 %316 to i8
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %317, i8* %318, align 1
  %319 = lshr i32 %307, 31
  %320 = trunc i32 %319 to i8
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %320, i8* %321, align 1
  %322 = lshr i32 %307, 31
  %323 = xor i32 %319, %322
  %324 = add i32 %323, %322
  %325 = icmp eq i32 %324, 2
  %326 = zext i1 %325 to i8
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %326, i8* %327, align 1
  store %struct.Memory* %loadMem_4ae7dd, %struct.Memory** %MEMORY
  %loadMem_4ae7e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %329 = getelementptr inbounds %struct.GPR, %struct.GPR* %328, i32 0, i32 33
  %330 = getelementptr inbounds %struct.Reg, %struct.Reg* %329, i32 0, i32 0
  %PC.i2877 = bitcast %union.anon* %330 to i64*
  %331 = load i64, i64* %PC.i2877
  %332 = add i64 %331, 61
  %333 = load i64, i64* %PC.i2877
  %334 = add i64 %333, 6
  %335 = load i64, i64* %PC.i2877
  %336 = add i64 %335, 6
  store i64 %336, i64* %PC.i2877
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %338 = load i8, i8* %337, align 1
  store i8 %338, i8* %BRANCH_TAKEN, align 1
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %340 = icmp ne i8 %338, 0
  %341 = select i1 %340, i64 %332, i64 %334
  store i64 %341, i64* %339, align 8
  store %struct.Memory* %loadMem_4ae7e4, %struct.Memory** %MEMORY
  %loadBr_4ae7e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae7e4 = icmp eq i8 %loadBr_4ae7e4, 1
  br i1 %cmpBr_4ae7e4, label %block_.L_4ae821, label %block_4ae7ea

block_4ae7ea:                                     ; preds = %block_4ae7b8
  %loadMem_4ae7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %343 = getelementptr inbounds %struct.GPR, %struct.GPR* %342, i32 0, i32 33
  %344 = getelementptr inbounds %struct.Reg, %struct.Reg* %343, i32 0, i32 0
  %PC.i2875 = bitcast %union.anon* %344 to i64*
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %346 = getelementptr inbounds %struct.GPR, %struct.GPR* %345, i32 0, i32 1
  %347 = getelementptr inbounds %struct.Reg, %struct.Reg* %346, i32 0, i32 0
  %RAX.i2876 = bitcast %union.anon* %347 to i64*
  %348 = load i64, i64* %PC.i2875
  %349 = add i64 %348, 5
  store i64 %349, i64* %PC.i2875
  store i64 2, i64* %RAX.i2876, align 8
  store %struct.Memory* %loadMem_4ae7ea, %struct.Memory** %MEMORY
  %loadMem_4ae7ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %351 = getelementptr inbounds %struct.GPR, %struct.GPR* %350, i32 0, i32 33
  %352 = getelementptr inbounds %struct.Reg, %struct.Reg* %351, i32 0, i32 0
  %PC.i2873 = bitcast %union.anon* %352 to i64*
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %354 = getelementptr inbounds %struct.GPR, %struct.GPR* %353, i32 0, i32 5
  %355 = getelementptr inbounds %struct.Reg, %struct.Reg* %354, i32 0, i32 0
  %RCX.i2874 = bitcast %union.anon* %355 to i64*
  %356 = load i64, i64* %PC.i2873
  %357 = add i64 %356, 5
  store i64 %357, i64* %PC.i2873
  store i64 4, i64* %RCX.i2874, align 8
  store %struct.Memory* %loadMem_4ae7ef, %struct.Memory** %MEMORY
  %loadMem_4ae7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %359 = getelementptr inbounds %struct.GPR, %struct.GPR* %358, i32 0, i32 33
  %360 = getelementptr inbounds %struct.Reg, %struct.Reg* %359, i32 0, i32 0
  %PC.i2871 = bitcast %union.anon* %360 to i64*
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %362 = getelementptr inbounds %struct.GPR, %struct.GPR* %361, i32 0, i32 7
  %363 = getelementptr inbounds %struct.Reg, %struct.Reg* %362, i32 0, i32 0
  %RDX.i2872 = bitcast %union.anon* %363 to i64*
  %364 = load i64, i64* %PC.i2871
  %365 = add i64 %364, 8
  store i64 %365, i64* %PC.i2871
  %366 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %366, i64* %RDX.i2872, align 8
  store %struct.Memory* %loadMem_4ae7f4, %struct.Memory** %MEMORY
  %loadMem_4ae7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %368 = getelementptr inbounds %struct.GPR, %struct.GPR* %367, i32 0, i32 33
  %369 = getelementptr inbounds %struct.Reg, %struct.Reg* %368, i32 0, i32 0
  %PC.i2868 = bitcast %union.anon* %369 to i64*
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %371 = getelementptr inbounds %struct.GPR, %struct.GPR* %370, i32 0, i32 7
  %372 = getelementptr inbounds %struct.Reg, %struct.Reg* %371, i32 0, i32 0
  %RDX.i2869 = bitcast %union.anon* %372 to i64*
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %374 = getelementptr inbounds %struct.GPR, %struct.GPR* %373, i32 0, i32 9
  %375 = getelementptr inbounds %struct.Reg, %struct.Reg* %374, i32 0, i32 0
  %RSI.i2870 = bitcast %union.anon* %375 to i64*
  %376 = load i64, i64* %RDX.i2869
  %377 = add i64 %376, 12
  %378 = load i64, i64* %PC.i2868
  %379 = add i64 %378, 3
  store i64 %379, i64* %PC.i2868
  %380 = inttoptr i64 %377 to i32*
  %381 = load i32, i32* %380
  %382 = zext i32 %381 to i64
  store i64 %382, i64* %RSI.i2870, align 8
  store %struct.Memory* %loadMem_4ae7fc, %struct.Memory** %MEMORY
  %loadMem_4ae7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 33
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %PC.i2865 = bitcast %union.anon* %385 to i64*
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 1
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %EAX.i2866 = bitcast %union.anon* %388 to i32*
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 15
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %RBP.i2867 = bitcast %union.anon* %391 to i64*
  %392 = load i64, i64* %RBP.i2867
  %393 = sub i64 %392, 35416
  %394 = load i32, i32* %EAX.i2866
  %395 = zext i32 %394 to i64
  %396 = load i64, i64* %PC.i2865
  %397 = add i64 %396, 6
  store i64 %397, i64* %PC.i2865
  %398 = inttoptr i64 %393 to i32*
  store i32 %394, i32* %398
  store %struct.Memory* %loadMem_4ae7ff, %struct.Memory** %MEMORY
  %loadMem_4ae805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 33
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %PC.i2862 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 9
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %ESI.i2863 = bitcast %union.anon* %404 to i32*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 1
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %RAX.i2864 = bitcast %union.anon* %407 to i64*
  %408 = load i32, i32* %ESI.i2863
  %409 = zext i32 %408 to i64
  %410 = load i64, i64* %PC.i2862
  %411 = add i64 %410, 2
  store i64 %411, i64* %PC.i2862
  %412 = and i64 %409, 4294967295
  store i64 %412, i64* %RAX.i2864, align 8
  store %struct.Memory* %loadMem_4ae805, %struct.Memory** %MEMORY
  %loadMem_4ae807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %414 = getelementptr inbounds %struct.GPR, %struct.GPR* %413, i32 0, i32 33
  %415 = getelementptr inbounds %struct.Reg, %struct.Reg* %414, i32 0, i32 0
  %PC.i2861 = bitcast %union.anon* %415 to i64*
  %416 = load i64, i64* %PC.i2861
  %417 = add i64 %416, 1
  store i64 %417, i64* %PC.i2861
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %420 = bitcast %union.anon* %419 to i32*
  %421 = load i32, i32* %420, align 8
  %422 = sext i32 %421 to i64
  %423 = lshr i64 %422, 32
  store i64 %423, i64* %418, align 8
  store %struct.Memory* %loadMem_4ae807, %struct.Memory** %MEMORY
  %loadMem_4ae808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %425 = getelementptr inbounds %struct.GPR, %struct.GPR* %424, i32 0, i32 33
  %426 = getelementptr inbounds %struct.Reg, %struct.Reg* %425, i32 0, i32 0
  %PC.i2858 = bitcast %union.anon* %426 to i64*
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 9
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %RSI.i2859 = bitcast %union.anon* %429 to i64*
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %431 = getelementptr inbounds %struct.GPR, %struct.GPR* %430, i32 0, i32 15
  %432 = getelementptr inbounds %struct.Reg, %struct.Reg* %431, i32 0, i32 0
  %RBP.i2860 = bitcast %union.anon* %432 to i64*
  %433 = load i64, i64* %RBP.i2860
  %434 = sub i64 %433, 35416
  %435 = load i64, i64* %PC.i2858
  %436 = add i64 %435, 6
  store i64 %436, i64* %PC.i2858
  %437 = inttoptr i64 %434 to i32*
  %438 = load i32, i32* %437
  %439 = zext i32 %438 to i64
  store i64 %439, i64* %RSI.i2859, align 8
  store %struct.Memory* %loadMem_4ae808, %struct.Memory** %MEMORY
  %loadMem_4ae80e = load %struct.Memory*, %struct.Memory** %MEMORY
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 33
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %PC.i2854 = bitcast %union.anon* %442 to i64*
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 9
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %ESI.i2855 = bitcast %union.anon* %445 to i32*
  %446 = load i32, i32* %ESI.i2855
  %447 = zext i32 %446 to i64
  %448 = load i64, i64* %PC.i2854
  %449 = add i64 %448, 2
  store i64 %449, i64* %PC.i2854
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %451 = bitcast %union.anon* %450 to i32*
  %452 = load i32, i32* %451, align 8
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %455 = bitcast %union.anon* %454 to i32*
  %456 = load i32, i32* %455, align 8
  %457 = zext i32 %456 to i64
  %458 = shl i64 %447, 32
  %459 = ashr exact i64 %458, 32
  %460 = shl i64 %457, 32
  %461 = or i64 %460, %453
  %462 = sdiv i64 %461, %459
  %463 = shl i64 %462, 32
  %464 = ashr exact i64 %463, 32
  %465 = icmp eq i64 %462, %464
  br i1 %465, label %470, label %466

; <label>:466:                                    ; preds = %block_4ae7ea
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %468 = load i64, i64* %467, align 8
  %469 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %468, %struct.Memory* %loadMem_4ae80e)
  br label %routine_idivl__esi.exit

; <label>:470:                                    ; preds = %block_4ae7ea
  %471 = srem i64 %461, %459
  %472 = getelementptr inbounds %union.anon, %union.anon* %450, i64 0, i32 0
  %473 = and i64 %462, 4294967295
  store i64 %473, i64* %472, align 8
  %474 = getelementptr inbounds %union.anon, %union.anon* %454, i64 0, i32 0
  %475 = and i64 %471, 4294967295
  store i64 %475, i64* %474, align 8
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %476, align 1
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %477, align 1
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %478, align 1
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %479, align 1
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %480, align 1
  %481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %481, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %466, %470
  %482 = phi %struct.Memory* [ %469, %466 ], [ %loadMem_4ae80e, %470 ]
  store %struct.Memory* %482, %struct.Memory** %MEMORY
  %loadMem_4ae810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 33
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %PC.i2852 = bitcast %union.anon* %485 to i64*
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 7
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %EDX.i2853 = bitcast %union.anon* %488 to i32*
  %489 = load i32, i32* %EDX.i2853
  %490 = zext i32 %489 to i64
  %491 = load i64, i64* %PC.i2852
  %492 = add i64 %491, 3
  store i64 %492, i64* %PC.i2852
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %493, align 1
  %494 = and i32 %489, 255
  %495 = call i32 @llvm.ctpop.i32(i32 %494)
  %496 = trunc i32 %495 to i8
  %497 = and i8 %496, 1
  %498 = xor i8 %497, 1
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %498, i8* %499, align 1
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %500, align 1
  %501 = icmp eq i32 %489, 0
  %502 = zext i1 %501 to i8
  %503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %502, i8* %503, align 1
  %504 = lshr i32 %489, 31
  %505 = trunc i32 %504 to i8
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %505, i8* %506, align 1
  %507 = lshr i32 %489, 31
  %508 = xor i32 %504, %507
  %509 = add i32 %508, %507
  %510 = icmp eq i32 %509, 2
  %511 = zext i1 %510 to i8
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %511, i8* %512, align 1
  store %struct.Memory* %loadMem_4ae810, %struct.Memory** %MEMORY
  %loadMem_4ae813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %514 = getelementptr inbounds %struct.GPR, %struct.GPR* %513, i32 0, i32 33
  %515 = getelementptr inbounds %struct.Reg, %struct.Reg* %514, i32 0, i32 0
  %PC.i2849 = bitcast %union.anon* %515 to i64*
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %517 = getelementptr inbounds %struct.GPR, %struct.GPR* %516, i32 0, i32 5
  %518 = getelementptr inbounds %struct.Reg, %struct.Reg* %517, i32 0, i32 0
  %ECX.i2850 = bitcast %union.anon* %518 to i32*
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %520 = getelementptr inbounds %struct.GPR, %struct.GPR* %519, i32 0, i32 9
  %521 = getelementptr inbounds %struct.Reg, %struct.Reg* %520, i32 0, i32 0
  %RSI.i2851 = bitcast %union.anon* %521 to i64*
  %522 = load i32, i32* %ECX.i2850
  %523 = zext i32 %522 to i64
  %524 = load i64, i64* %PC.i2849
  %525 = add i64 %524, 3
  store i64 %525, i64* %PC.i2849
  %526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 0
  %529 = load i64, i64* %RSI.i2851, align 8
  %530 = select i1 %528, i64 %523, i64 %529
  %531 = and i64 %530, 4294967295
  store i64 %531, i64* %RSI.i2851, align 8
  store %struct.Memory* %loadMem_4ae813, %struct.Memory** %MEMORY
  %loadMem_4ae816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 33
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %PC.i2846 = bitcast %union.anon* %534 to i64*
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 9
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %ESI.i2847 = bitcast %union.anon* %537 to i32*
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %539 = getelementptr inbounds %struct.GPR, %struct.GPR* %538, i32 0, i32 15
  %540 = getelementptr inbounds %struct.Reg, %struct.Reg* %539, i32 0, i32 0
  %RBP.i2848 = bitcast %union.anon* %540 to i64*
  %541 = load i64, i64* %RBP.i2848
  %542 = sub i64 %541, 35420
  %543 = load i32, i32* %ESI.i2847
  %544 = zext i32 %543 to i64
  %545 = load i64, i64* %PC.i2846
  %546 = add i64 %545, 6
  store i64 %546, i64* %PC.i2846
  %547 = inttoptr i64 %542 to i32*
  store i32 %543, i32* %547
  store %struct.Memory* %loadMem_4ae816, %struct.Memory** %MEMORY
  %loadMem_4ae81c = load %struct.Memory*, %struct.Memory** %MEMORY
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %549 = getelementptr inbounds %struct.GPR, %struct.GPR* %548, i32 0, i32 33
  %550 = getelementptr inbounds %struct.Reg, %struct.Reg* %549, i32 0, i32 0
  %PC.i2845 = bitcast %union.anon* %550 to i64*
  %551 = load i64, i64* %PC.i2845
  %552 = add i64 %551, 18
  %553 = load i64, i64* %PC.i2845
  %554 = add i64 %553, 5
  store i64 %554, i64* %PC.i2845
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %552, i64* %555, align 8
  store %struct.Memory* %loadMem_4ae81c, %struct.Memory** %MEMORY
  br label %block_.L_4ae82e

block_.L_4ae821:                                  ; preds = %block_4ae7b8, %entry
  %loadMem_4ae821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %557 = getelementptr inbounds %struct.GPR, %struct.GPR* %556, i32 0, i32 33
  %558 = getelementptr inbounds %struct.Reg, %struct.Reg* %557, i32 0, i32 0
  %PC.i2842 = bitcast %union.anon* %558 to i64*
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 1
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %EAX.i2843 = bitcast %union.anon* %561 to i32*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 1
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %RAX.i2844 = bitcast %union.anon* %564 to i64*
  %565 = load i64, i64* %RAX.i2844
  %566 = load i32, i32* %EAX.i2843
  %567 = zext i32 %566 to i64
  %568 = load i64, i64* %PC.i2842
  %569 = add i64 %568, 2
  store i64 %569, i64* %PC.i2842
  %570 = xor i64 %567, %565
  %571 = trunc i64 %570 to i32
  %572 = and i64 %570, 4294967295
  store i64 %572, i64* %RAX.i2844, align 8
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %573, align 1
  %574 = and i32 %571, 255
  %575 = call i32 @llvm.ctpop.i32(i32 %574)
  %576 = trunc i32 %575 to i8
  %577 = and i8 %576, 1
  %578 = xor i8 %577, 1
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %578, i8* %579, align 1
  %580 = icmp eq i32 %571, 0
  %581 = zext i1 %580 to i8
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %581, i8* %582, align 1
  %583 = lshr i32 %571, 31
  %584 = trunc i32 %583 to i8
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %584, i8* %585, align 1
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %586, align 1
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %587, align 1
  store %struct.Memory* %loadMem_4ae821, %struct.Memory** %MEMORY
  %loadMem_4ae823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %589 = getelementptr inbounds %struct.GPR, %struct.GPR* %588, i32 0, i32 33
  %590 = getelementptr inbounds %struct.Reg, %struct.Reg* %589, i32 0, i32 0
  %PC.i2839 = bitcast %union.anon* %590 to i64*
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 1
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %EAX.i2840 = bitcast %union.anon* %593 to i32*
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 15
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %RBP.i2841 = bitcast %union.anon* %596 to i64*
  %597 = load i64, i64* %RBP.i2841
  %598 = sub i64 %597, 35420
  %599 = load i32, i32* %EAX.i2840
  %600 = zext i32 %599 to i64
  %601 = load i64, i64* %PC.i2839
  %602 = add i64 %601, 6
  store i64 %602, i64* %PC.i2839
  %603 = inttoptr i64 %598 to i32*
  store i32 %599, i32* %603
  store %struct.Memory* %loadMem_4ae823, %struct.Memory** %MEMORY
  %loadMem_4ae829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %605 = getelementptr inbounds %struct.GPR, %struct.GPR* %604, i32 0, i32 33
  %606 = getelementptr inbounds %struct.Reg, %struct.Reg* %605, i32 0, i32 0
  %PC.i2838 = bitcast %union.anon* %606 to i64*
  %607 = load i64, i64* %PC.i2838
  %608 = add i64 %607, 5
  %609 = load i64, i64* %PC.i2838
  %610 = add i64 %609, 5
  store i64 %610, i64* %PC.i2838
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %608, i64* %611, align 8
  store %struct.Memory* %loadMem_4ae829, %struct.Memory** %MEMORY
  br label %block_.L_4ae82e

block_.L_4ae82e:                                  ; preds = %block_.L_4ae821, %routine_idivl__esi.exit
  %loadMem_4ae82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %613 = getelementptr inbounds %struct.GPR, %struct.GPR* %612, i32 0, i32 33
  %614 = getelementptr inbounds %struct.Reg, %struct.Reg* %613, i32 0, i32 0
  %PC.i2835 = bitcast %union.anon* %614 to i64*
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %616 = getelementptr inbounds %struct.GPR, %struct.GPR* %615, i32 0, i32 1
  %617 = getelementptr inbounds %struct.Reg, %struct.Reg* %616, i32 0, i32 0
  %RAX.i2836 = bitcast %union.anon* %617 to i64*
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %619 = getelementptr inbounds %struct.GPR, %struct.GPR* %618, i32 0, i32 15
  %620 = getelementptr inbounds %struct.Reg, %struct.Reg* %619, i32 0, i32 0
  %RBP.i2837 = bitcast %union.anon* %620 to i64*
  %621 = load i64, i64* %RBP.i2837
  %622 = sub i64 %621, 35420
  %623 = load i64, i64* %PC.i2835
  %624 = add i64 %623, 6
  store i64 %624, i64* %PC.i2835
  %625 = inttoptr i64 %622 to i32*
  %626 = load i32, i32* %625
  %627 = zext i32 %626 to i64
  store i64 %627, i64* %RAX.i2836, align 8
  store %struct.Memory* %loadMem_4ae82e, %struct.Memory** %MEMORY
  %loadMem_4ae834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 33
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %PC.i2832 = bitcast %union.anon* %630 to i64*
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %632 = getelementptr inbounds %struct.GPR, %struct.GPR* %631, i32 0, i32 1
  %633 = getelementptr inbounds %struct.Reg, %struct.Reg* %632, i32 0, i32 0
  %EAX.i2833 = bitcast %union.anon* %633 to i32*
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %635 = getelementptr inbounds %struct.GPR, %struct.GPR* %634, i32 0, i32 15
  %636 = getelementptr inbounds %struct.Reg, %struct.Reg* %635, i32 0, i32 0
  %RBP.i2834 = bitcast %union.anon* %636 to i64*
  %637 = load i64, i64* %RBP.i2834
  %638 = sub i64 %637, 808
  %639 = load i32, i32* %EAX.i2833
  %640 = zext i32 %639 to i64
  %641 = load i64, i64* %PC.i2832
  %642 = add i64 %641, 6
  store i64 %642, i64* %PC.i2832
  %643 = inttoptr i64 %638 to i32*
  store i32 %639, i32* %643
  store %struct.Memory* %loadMem_4ae834, %struct.Memory** %MEMORY
  %loadMem_4ae83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 33
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %PC.i2830 = bitcast %union.anon* %646 to i64*
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 5
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %RCX.i2831 = bitcast %union.anon* %649 to i64*
  %650 = load i64, i64* %PC.i2830
  %651 = add i64 %650, 8
  store i64 %651, i64* %PC.i2830
  %652 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %652, i64* %RCX.i2831, align 8
  store %struct.Memory* %loadMem_4ae83a, %struct.Memory** %MEMORY
  %loadMem_4ae842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %654 = getelementptr inbounds %struct.GPR, %struct.GPR* %653, i32 0, i32 33
  %655 = getelementptr inbounds %struct.Reg, %struct.Reg* %654, i32 0, i32 0
  %PC.i2828 = bitcast %union.anon* %655 to i64*
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 5
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %RCX.i2829 = bitcast %union.anon* %658 to i64*
  %659 = load i64, i64* %RCX.i2829
  %660 = add i64 %659, 196
  %661 = load i64, i64* %PC.i2828
  %662 = add i64 %661, 7
  store i64 %662, i64* %PC.i2828
  %663 = inttoptr i64 %660 to i32*
  %664 = load i32, i32* %663
  %665 = sub i32 %664, 2
  %666 = icmp ult i32 %664, 2
  %667 = zext i1 %666 to i8
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %667, i8* %668, align 1
  %669 = and i32 %665, 255
  %670 = call i32 @llvm.ctpop.i32(i32 %669)
  %671 = trunc i32 %670 to i8
  %672 = and i8 %671, 1
  %673 = xor i8 %672, 1
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %673, i8* %674, align 1
  %675 = xor i32 %664, 2
  %676 = xor i32 %675, %665
  %677 = lshr i32 %676, 4
  %678 = trunc i32 %677 to i8
  %679 = and i8 %678, 1
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %679, i8* %680, align 1
  %681 = icmp eq i32 %665, 0
  %682 = zext i1 %681 to i8
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %682, i8* %683, align 1
  %684 = lshr i32 %665, 31
  %685 = trunc i32 %684 to i8
  %686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %685, i8* %686, align 1
  %687 = lshr i32 %664, 31
  %688 = xor i32 %684, %687
  %689 = add i32 %688, %687
  %690 = icmp eq i32 %689, 2
  %691 = zext i1 %690 to i8
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %691, i8* %692, align 1
  store %struct.Memory* %loadMem_4ae842, %struct.Memory** %MEMORY
  %loadMem_4ae849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %694 = getelementptr inbounds %struct.GPR, %struct.GPR* %693, i32 0, i32 33
  %695 = getelementptr inbounds %struct.Reg, %struct.Reg* %694, i32 0, i32 0
  %PC.i2827 = bitcast %union.anon* %695 to i64*
  %696 = load i64, i64* %PC.i2827
  %697 = add i64 %696, 33
  %698 = load i64, i64* %PC.i2827
  %699 = add i64 %698, 6
  %700 = load i64, i64* %PC.i2827
  %701 = add i64 %700, 6
  store i64 %701, i64* %PC.i2827
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %703 = load i8, i8* %702, align 1
  %704 = icmp eq i8 %703, 0
  %705 = zext i1 %704 to i8
  store i8 %705, i8* %BRANCH_TAKEN, align 1
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %707 = select i1 %704, i64 %697, i64 %699
  store i64 %707, i64* %706, align 8
  store %struct.Memory* %loadMem_4ae849, %struct.Memory** %MEMORY
  %loadBr_4ae849 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae849 = icmp eq i8 %loadBr_4ae849, 1
  br i1 %cmpBr_4ae849, label %block_.L_4ae86a, label %block_4ae84f

block_4ae84f:                                     ; preds = %block_.L_4ae82e
  %loadMem_4ae84f = load %struct.Memory*, %struct.Memory** %MEMORY
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 33
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %PC.i2826 = bitcast %union.anon* %710 to i64*
  %711 = load i64, i64* %PC.i2826
  %712 = add i64 %711, 11
  store i64 %712, i64* %PC.i2826
  store i32 5, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  store %struct.Memory* %loadMem_4ae84f, %struct.Memory** %MEMORY
  %loadMem_4ae85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %714 = getelementptr inbounds %struct.GPR, %struct.GPR* %713, i32 0, i32 33
  %715 = getelementptr inbounds %struct.Reg, %struct.Reg* %714, i32 0, i32 0
  %PC.i2825 = bitcast %union.anon* %715 to i64*
  %716 = load i64, i64* %PC.i2825
  %717 = add i64 %716, 11
  store i64 %717, i64* %PC.i2825
  store i32 5, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  store %struct.Memory* %loadMem_4ae85a, %struct.Memory** %MEMORY
  %loadMem_4ae865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 33
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %PC.i2824 = bitcast %union.anon* %720 to i64*
  %721 = load i64, i64* %PC.i2824
  %722 = add i64 %721, 27
  %723 = load i64, i64* %PC.i2824
  %724 = add i64 %723, 5
  store i64 %724, i64* %PC.i2824
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %722, i64* %725, align 8
  store %struct.Memory* %loadMem_4ae865, %struct.Memory** %MEMORY
  br label %block_.L_4ae880

block_.L_4ae86a:                                  ; preds = %block_.L_4ae82e
  %loadMem_4ae86a = load %struct.Memory*, %struct.Memory** %MEMORY
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 33
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %PC.i2823 = bitcast %union.anon* %728 to i64*
  %729 = load i64, i64* %PC.i2823
  %730 = add i64 %729, 11
  store i64 %730, i64* %PC.i2823
  store i32 6, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  store %struct.Memory* %loadMem_4ae86a, %struct.Memory** %MEMORY
  %loadMem_4ae875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 33
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %PC.i2822 = bitcast %union.anon* %733 to i64*
  %734 = load i64, i64* %PC.i2822
  %735 = add i64 %734, 11
  store i64 %735, i64* %PC.i2822
  store i32 6, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  store %struct.Memory* %loadMem_4ae875, %struct.Memory** %MEMORY
  br label %block_.L_4ae880

block_.L_4ae880:                                  ; preds = %block_.L_4ae86a, %block_4ae84f
  %loadMem_4ae880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %737 = getelementptr inbounds %struct.GPR, %struct.GPR* %736, i32 0, i32 33
  %738 = getelementptr inbounds %struct.Reg, %struct.Reg* %737, i32 0, i32 0
  %PC.i2820 = bitcast %union.anon* %738 to i64*
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 1
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %RAX.i2821 = bitcast %union.anon* %741 to i64*
  %742 = load i64, i64* %PC.i2820
  %743 = add i64 %742, 5
  store i64 %743, i64* %PC.i2820
  store i64 1, i64* %RAX.i2821, align 8
  store %struct.Memory* %loadMem_4ae880, %struct.Memory** %MEMORY
  %loadMem_4ae885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %745 = getelementptr inbounds %struct.GPR, %struct.GPR* %744, i32 0, i32 33
  %746 = getelementptr inbounds %struct.Reg, %struct.Reg* %745, i32 0, i32 0
  %PC.i2818 = bitcast %union.anon* %746 to i64*
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %748 = getelementptr inbounds %struct.GPR, %struct.GPR* %747, i32 0, i32 5
  %749 = getelementptr inbounds %struct.Reg, %struct.Reg* %748, i32 0, i32 0
  %RCX.i2819 = bitcast %union.anon* %749 to i64*
  %750 = load i64, i64* %PC.i2818
  %751 = add i64 %750, 7
  store i64 %751, i64* %PC.i2818
  %752 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %753 = zext i32 %752 to i64
  store i64 %753, i64* %RCX.i2819, align 8
  store %struct.Memory* %loadMem_4ae885, %struct.Memory** %MEMORY
  %loadMem_4ae88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 33
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %PC.i2816 = bitcast %union.anon* %756 to i64*
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 5
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %RCX.i2817 = bitcast %union.anon* %759 to i64*
  %760 = load i64, i64* %RCX.i2817
  %761 = load i64, i64* %PC.i2816
  %762 = add i64 %761, 3
  store i64 %762, i64* %PC.i2816
  %763 = trunc i64 %760 to i32
  %764 = sub i32 %763, 1
  %765 = zext i32 %764 to i64
  store i64 %765, i64* %RCX.i2817, align 8
  %766 = icmp ult i32 %763, 1
  %767 = zext i1 %766 to i8
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %767, i8* %768, align 1
  %769 = and i32 %764, 255
  %770 = call i32 @llvm.ctpop.i32(i32 %769)
  %771 = trunc i32 %770 to i8
  %772 = and i8 %771, 1
  %773 = xor i8 %772, 1
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %773, i8* %774, align 1
  %775 = xor i64 1, %760
  %776 = trunc i64 %775 to i32
  %777 = xor i32 %776, %764
  %778 = lshr i32 %777, 4
  %779 = trunc i32 %778 to i8
  %780 = and i8 %779, 1
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %780, i8* %781, align 1
  %782 = icmp eq i32 %764, 0
  %783 = zext i1 %782 to i8
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %783, i8* %784, align 1
  %785 = lshr i32 %764, 31
  %786 = trunc i32 %785 to i8
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %786, i8* %787, align 1
  %788 = lshr i32 %763, 31
  %789 = xor i32 %785, %788
  %790 = add i32 %789, %788
  %791 = icmp eq i32 %790, 2
  %792 = zext i1 %791 to i8
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %792, i8* %793, align 1
  store %struct.Memory* %loadMem_4ae88c, %struct.Memory** %MEMORY
  %loadMem_4ae88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 33
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %PC.i2813 = bitcast %union.anon* %796 to i64*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 1
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %EAX.i2814 = bitcast %union.anon* %799 to i32*
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 7
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %RDX.i2815 = bitcast %union.anon* %802 to i64*
  %803 = load i32, i32* %EAX.i2814
  %804 = zext i32 %803 to i64
  %805 = load i64, i64* %PC.i2813
  %806 = add i64 %805, 2
  store i64 %806, i64* %PC.i2813
  %807 = and i64 %804, 4294967295
  store i64 %807, i64* %RDX.i2815, align 8
  store %struct.Memory* %loadMem_4ae88f, %struct.Memory** %MEMORY
  %loadMem_4ae891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 33
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %PC.i2809 = bitcast %union.anon* %810 to i64*
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 5
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %814 = bitcast %union.anon* %813 to %struct.anon.2*
  %CL.i2810 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %814, i32 0, i32 0
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 7
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RDX.i2811 = bitcast %union.anon* %817 to i64*
  %818 = load i64, i64* %RDX.i2811
  %819 = load i8, i8* %CL.i2810
  %820 = zext i8 %819 to i64
  %821 = load i64, i64* %PC.i2809
  %822 = add i64 %821, 2
  store i64 %822, i64* %PC.i2809
  %823 = trunc i64 %820 to i5
  switch i5 %823, label %830 [
    i5 0, label %routine_shll__cl___edx.exit2812
    i5 1, label %824
  ]

; <label>:824:                                    ; preds = %block_.L_4ae880
  %825 = trunc i64 %818 to i32
  %826 = shl i32 %825, 1
  %827 = icmp slt i32 %825, 0
  %828 = icmp slt i32 %826, 0
  %829 = xor i1 %827, %828
  br label %839

; <label>:830:                                    ; preds = %block_.L_4ae880
  %831 = and i64 %820, 31
  %832 = add i64 %831, 4294967295
  %833 = and i64 %818, 4294967295
  %834 = and i64 %832, 4294967295
  %835 = shl i64 %833, %834
  %836 = trunc i64 %835 to i32
  %837 = icmp slt i32 %836, 0
  %838 = shl i32 %836, 1
  br label %839

; <label>:839:                                    ; preds = %830, %824
  %840 = phi i1 [ %827, %824 ], [ %837, %830 ]
  %841 = phi i1 [ %829, %824 ], [ false, %830 ]
  %842 = phi i32 [ %826, %824 ], [ %838, %830 ]
  %843 = zext i32 %842 to i64
  store i64 %843, i64* %RDX.i2811, align 8
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %845 = zext i1 %840 to i8
  store i8 %845, i8* %844, align 1
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %847 = and i32 %842, 254
  %848 = call i32 @llvm.ctpop.i32(i32 %847)
  %849 = trunc i32 %848 to i8
  %850 = and i8 %849, 1
  %851 = xor i8 %850, 1
  store i8 %851, i8* %846, align 1
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %852, align 1
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %854 = icmp eq i32 %842, 0
  %855 = zext i1 %854 to i8
  store i8 %855, i8* %853, align 1
  %856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %857 = lshr i32 %842, 31
  %858 = trunc i32 %857 to i8
  store i8 %858, i8* %856, align 1
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %860 = zext i1 %841 to i8
  store i8 %860, i8* %859, align 1
  br label %routine_shll__cl___edx.exit2812

routine_shll__cl___edx.exit2812:                  ; preds = %block_.L_4ae880, %839
  store %struct.Memory* %loadMem_4ae891, %struct.Memory** %MEMORY
  %loadMem_4ae893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 33
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %PC.i2807 = bitcast %union.anon* %863 to i64*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 7
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %EDX.i2808 = bitcast %union.anon* %866 to i32*
  %867 = load i32, i32* %EDX.i2808
  %868 = zext i32 %867 to i64
  %869 = load i64, i64* %PC.i2807
  %870 = add i64 %869, 7
  store i64 %870, i64* %PC.i2807
  store i32 %867, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  store %struct.Memory* %loadMem_4ae893, %struct.Memory** %MEMORY
  %loadMem_4ae89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 33
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %PC.i2805 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 7
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %RDX.i2806 = bitcast %union.anon* %876 to i64*
  %877 = load i64, i64* %PC.i2805
  %878 = add i64 %877, 7
  store i64 %878, i64* %PC.i2805
  %879 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %880 = zext i32 %879 to i64
  store i64 %880, i64* %RDX.i2806, align 8
  store %struct.Memory* %loadMem_4ae89a, %struct.Memory** %MEMORY
  %loadMem_4ae8a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 33
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %PC.i2803 = bitcast %union.anon* %883 to i64*
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 7
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %RDX.i2804 = bitcast %union.anon* %886 to i64*
  %887 = load i64, i64* %RDX.i2804
  %888 = load i64, i64* %PC.i2803
  %889 = add i64 %888, 3
  store i64 %889, i64* %PC.i2803
  %890 = trunc i64 %887 to i32
  %891 = sub i32 %890, 1
  %892 = zext i32 %891 to i64
  store i64 %892, i64* %RDX.i2804, align 8
  %893 = icmp ult i32 %890, 1
  %894 = zext i1 %893 to i8
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %894, i8* %895, align 1
  %896 = and i32 %891, 255
  %897 = call i32 @llvm.ctpop.i32(i32 %896)
  %898 = trunc i32 %897 to i8
  %899 = and i8 %898, 1
  %900 = xor i8 %899, 1
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %900, i8* %901, align 1
  %902 = xor i64 1, %887
  %903 = trunc i64 %902 to i32
  %904 = xor i32 %903, %891
  %905 = lshr i32 %904, 4
  %906 = trunc i32 %905 to i8
  %907 = and i8 %906, 1
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %907, i8* %908, align 1
  %909 = icmp eq i32 %891, 0
  %910 = zext i1 %909 to i8
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %910, i8* %911, align 1
  %912 = lshr i32 %891, 31
  %913 = trunc i32 %912 to i8
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %913, i8* %914, align 1
  %915 = lshr i32 %890, 31
  %916 = xor i32 %912, %915
  %917 = add i32 %916, %915
  %918 = icmp eq i32 %917, 2
  %919 = zext i1 %918 to i8
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %919, i8* %920, align 1
  store %struct.Memory* %loadMem_4ae8a1, %struct.Memory** %MEMORY
  %loadMem_4ae8a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %922 = getelementptr inbounds %struct.GPR, %struct.GPR* %921, i32 0, i32 33
  %923 = getelementptr inbounds %struct.Reg, %struct.Reg* %922, i32 0, i32 0
  %PC.i2800 = bitcast %union.anon* %923 to i64*
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %925 = getelementptr inbounds %struct.GPR, %struct.GPR* %924, i32 0, i32 7
  %926 = getelementptr inbounds %struct.Reg, %struct.Reg* %925, i32 0, i32 0
  %EDX.i2801 = bitcast %union.anon* %926 to i32*
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %928 = getelementptr inbounds %struct.GPR, %struct.GPR* %927, i32 0, i32 5
  %929 = getelementptr inbounds %struct.Reg, %struct.Reg* %928, i32 0, i32 0
  %RCX.i2802 = bitcast %union.anon* %929 to i64*
  %930 = load i32, i32* %EDX.i2801
  %931 = zext i32 %930 to i64
  %932 = load i64, i64* %PC.i2800
  %933 = add i64 %932, 2
  store i64 %933, i64* %PC.i2800
  %934 = and i64 %931, 4294967295
  store i64 %934, i64* %RCX.i2802, align 8
  store %struct.Memory* %loadMem_4ae8a4, %struct.Memory** %MEMORY
  %loadMem_4ae8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 33
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %PC.i2797 = bitcast %union.anon* %937 to i64*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 1
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %EAX.i2798 = bitcast %union.anon* %940 to i32*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 7
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %RDX.i2799 = bitcast %union.anon* %943 to i64*
  %944 = load i32, i32* %EAX.i2798
  %945 = zext i32 %944 to i64
  %946 = load i64, i64* %PC.i2797
  %947 = add i64 %946, 2
  store i64 %947, i64* %PC.i2797
  %948 = and i64 %945, 4294967295
  store i64 %948, i64* %RDX.i2799, align 8
  store %struct.Memory* %loadMem_4ae8a6, %struct.Memory** %MEMORY
  %loadMem_4ae8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %950 = getelementptr inbounds %struct.GPR, %struct.GPR* %949, i32 0, i32 33
  %951 = getelementptr inbounds %struct.Reg, %struct.Reg* %950, i32 0, i32 0
  %PC.i2793 = bitcast %union.anon* %951 to i64*
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %953 = getelementptr inbounds %struct.GPR, %struct.GPR* %952, i32 0, i32 5
  %954 = getelementptr inbounds %struct.Reg, %struct.Reg* %953, i32 0, i32 0
  %955 = bitcast %union.anon* %954 to %struct.anon.2*
  %CL.i2794 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %955, i32 0, i32 0
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %957 = getelementptr inbounds %struct.GPR, %struct.GPR* %956, i32 0, i32 7
  %958 = getelementptr inbounds %struct.Reg, %struct.Reg* %957, i32 0, i32 0
  %RDX.i2795 = bitcast %union.anon* %958 to i64*
  %959 = load i64, i64* %RDX.i2795
  %960 = load i8, i8* %CL.i2794
  %961 = zext i8 %960 to i64
  %962 = load i64, i64* %PC.i2793
  %963 = add i64 %962, 2
  store i64 %963, i64* %PC.i2793
  %964 = trunc i64 %961 to i5
  switch i5 %964, label %971 [
    i5 0, label %routine_shll__cl___edx.exit2796
    i5 1, label %965
  ]

; <label>:965:                                    ; preds = %routine_shll__cl___edx.exit2812
  %966 = trunc i64 %959 to i32
  %967 = shl i32 %966, 1
  %968 = icmp slt i32 %966, 0
  %969 = icmp slt i32 %967, 0
  %970 = xor i1 %968, %969
  br label %980

; <label>:971:                                    ; preds = %routine_shll__cl___edx.exit2812
  %972 = and i64 %961, 31
  %973 = add i64 %972, 4294967295
  %974 = and i64 %959, 4294967295
  %975 = and i64 %973, 4294967295
  %976 = shl i64 %974, %975
  %977 = trunc i64 %976 to i32
  %978 = icmp slt i32 %977, 0
  %979 = shl i32 %977, 1
  br label %980

; <label>:980:                                    ; preds = %971, %965
  %981 = phi i1 [ %968, %965 ], [ %978, %971 ]
  %982 = phi i1 [ %970, %965 ], [ false, %971 ]
  %983 = phi i32 [ %967, %965 ], [ %979, %971 ]
  %984 = zext i32 %983 to i64
  store i64 %984, i64* %RDX.i2795, align 8
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %986 = zext i1 %981 to i8
  store i8 %986, i8* %985, align 1
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %988 = and i32 %983, 254
  %989 = call i32 @llvm.ctpop.i32(i32 %988)
  %990 = trunc i32 %989 to i8
  %991 = and i8 %990, 1
  %992 = xor i8 %991, 1
  store i8 %992, i8* %987, align 1
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %993, align 1
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %995 = icmp eq i32 %983, 0
  %996 = zext i1 %995 to i8
  store i8 %996, i8* %994, align 1
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %998 = lshr i32 %983, 31
  %999 = trunc i32 %998 to i8
  store i8 %999, i8* %997, align 1
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1001 = zext i1 %982 to i8
  store i8 %1001, i8* %1000, align 1
  br label %routine_shll__cl___edx.exit2796

routine_shll__cl___edx.exit2796:                  ; preds = %routine_shll__cl___edx.exit2812, %980
  store %struct.Memory* %loadMem_4ae8a8, %struct.Memory** %MEMORY
  %loadMem_4ae8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1003 = getelementptr inbounds %struct.GPR, %struct.GPR* %1002, i32 0, i32 33
  %1004 = getelementptr inbounds %struct.Reg, %struct.Reg* %1003, i32 0, i32 0
  %PC.i2791 = bitcast %union.anon* %1004 to i64*
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1006 = getelementptr inbounds %struct.GPR, %struct.GPR* %1005, i32 0, i32 7
  %1007 = getelementptr inbounds %struct.Reg, %struct.Reg* %1006, i32 0, i32 0
  %EDX.i2792 = bitcast %union.anon* %1007 to i32*
  %1008 = load i32, i32* %EDX.i2792
  %1009 = zext i32 %1008 to i64
  %1010 = load i64, i64* %PC.i2791
  %1011 = add i64 %1010, 7
  store i64 %1011, i64* %PC.i2791
  store i32 %1008, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  store %struct.Memory* %loadMem_4ae8aa, %struct.Memory** %MEMORY
  %loadMem_4ae8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 33
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %PC.i2789 = bitcast %union.anon* %1014 to i64*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 5
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %RCX.i2790 = bitcast %union.anon* %1017 to i64*
  %1018 = load i64, i64* %PC.i2789
  %1019 = add i64 %1018, 7
  store i64 %1019, i64* %PC.i2789
  %1020 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %1021 = zext i32 %1020 to i64
  store i64 %1021, i64* %RCX.i2790, align 8
  store %struct.Memory* %loadMem_4ae8b1, %struct.Memory** %MEMORY
  %loadMem_4ae8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1023 = getelementptr inbounds %struct.GPR, %struct.GPR* %1022, i32 0, i32 33
  %1024 = getelementptr inbounds %struct.Reg, %struct.Reg* %1023, i32 0, i32 0
  %PC.i2786 = bitcast %union.anon* %1024 to i64*
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1026 = getelementptr inbounds %struct.GPR, %struct.GPR* %1025, i32 0, i32 1
  %1027 = getelementptr inbounds %struct.Reg, %struct.Reg* %1026, i32 0, i32 0
  %EAX.i2787 = bitcast %union.anon* %1027 to i32*
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 7
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %RDX.i2788 = bitcast %union.anon* %1030 to i64*
  %1031 = load i32, i32* %EAX.i2787
  %1032 = zext i32 %1031 to i64
  %1033 = load i64, i64* %PC.i2786
  %1034 = add i64 %1033, 2
  store i64 %1034, i64* %PC.i2786
  %1035 = and i64 %1032, 4294967295
  store i64 %1035, i64* %RDX.i2788, align 8
  store %struct.Memory* %loadMem_4ae8b8, %struct.Memory** %MEMORY
  %loadMem_4ae8ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1037 = getelementptr inbounds %struct.GPR, %struct.GPR* %1036, i32 0, i32 33
  %1038 = getelementptr inbounds %struct.Reg, %struct.Reg* %1037, i32 0, i32 0
  %PC.i2782 = bitcast %union.anon* %1038 to i64*
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1040 = getelementptr inbounds %struct.GPR, %struct.GPR* %1039, i32 0, i32 5
  %1041 = getelementptr inbounds %struct.Reg, %struct.Reg* %1040, i32 0, i32 0
  %1042 = bitcast %union.anon* %1041 to %struct.anon.2*
  %CL.i2783 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1042, i32 0, i32 0
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 7
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %RDX.i2784 = bitcast %union.anon* %1045 to i64*
  %1046 = load i64, i64* %RDX.i2784
  %1047 = load i8, i8* %CL.i2783
  %1048 = zext i8 %1047 to i64
  %1049 = load i64, i64* %PC.i2782
  %1050 = add i64 %1049, 2
  store i64 %1050, i64* %PC.i2782
  %1051 = trunc i64 %1048 to i5
  switch i5 %1051, label %1058 [
    i5 0, label %routine_shll__cl___edx.exit2785
    i5 1, label %1052
  ]

; <label>:1052:                                   ; preds = %routine_shll__cl___edx.exit2796
  %1053 = trunc i64 %1046 to i32
  %1054 = shl i32 %1053, 1
  %1055 = icmp slt i32 %1053, 0
  %1056 = icmp slt i32 %1054, 0
  %1057 = xor i1 %1055, %1056
  br label %1067

; <label>:1058:                                   ; preds = %routine_shll__cl___edx.exit2796
  %1059 = and i64 %1048, 31
  %1060 = add i64 %1059, 4294967295
  %1061 = and i64 %1046, 4294967295
  %1062 = and i64 %1060, 4294967295
  %1063 = shl i64 %1061, %1062
  %1064 = trunc i64 %1063 to i32
  %1065 = icmp slt i32 %1064, 0
  %1066 = shl i32 %1064, 1
  br label %1067

; <label>:1067:                                   ; preds = %1058, %1052
  %1068 = phi i1 [ %1055, %1052 ], [ %1065, %1058 ]
  %1069 = phi i1 [ %1057, %1052 ], [ false, %1058 ]
  %1070 = phi i32 [ %1054, %1052 ], [ %1066, %1058 ]
  %1071 = zext i32 %1070 to i64
  store i64 %1071, i64* %RDX.i2784, align 8
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1073 = zext i1 %1068 to i8
  store i8 %1073, i8* %1072, align 1
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1075 = and i32 %1070, 254
  %1076 = call i32 @llvm.ctpop.i32(i32 %1075)
  %1077 = trunc i32 %1076 to i8
  %1078 = and i8 %1077, 1
  %1079 = xor i8 %1078, 1
  store i8 %1079, i8* %1074, align 1
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1080, align 1
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1082 = icmp eq i32 %1070, 0
  %1083 = zext i1 %1082 to i8
  store i8 %1083, i8* %1081, align 1
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1085 = lshr i32 %1070, 31
  %1086 = trunc i32 %1085 to i8
  store i8 %1086, i8* %1084, align 1
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1088 = zext i1 %1069 to i8
  store i8 %1088, i8* %1087, align 1
  br label %routine_shll__cl___edx.exit2785

routine_shll__cl___edx.exit2785:                  ; preds = %routine_shll__cl___edx.exit2796, %1067
  store %struct.Memory* %loadMem_4ae8ba, %struct.Memory** %MEMORY
  %loadMem_4ae8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 33
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %PC.i2779 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 7
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %EDX.i2780 = bitcast %union.anon* %1094 to i32*
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 15
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %RBP.i2781 = bitcast %union.anon* %1097 to i64*
  %1098 = load i64, i64* %RBP.i2781
  %1099 = sub i64 %1098, 804
  %1100 = load i32, i32* %EDX.i2780
  %1101 = zext i32 %1100 to i64
  %1102 = load i64, i64* %PC.i2779
  %1103 = add i64 %1102, 6
  store i64 %1103, i64* %PC.i2779
  %1104 = inttoptr i64 %1099 to i32*
  store i32 %1100, i32* %1104
  store %struct.Memory* %loadMem_4ae8bc, %struct.Memory** %MEMORY
  %loadMem_4ae8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 33
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %PC.i2777 = bitcast %union.anon* %1107 to i64*
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 5
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %RCX.i2778 = bitcast %union.anon* %1110 to i64*
  %1111 = load i64, i64* %PC.i2777
  %1112 = add i64 %1111, 7
  store i64 %1112, i64* %PC.i2777
  %1113 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %1114 = zext i32 %1113 to i64
  store i64 %1114, i64* %RCX.i2778, align 8
  store %struct.Memory* %loadMem_4ae8c2, %struct.Memory** %MEMORY
  %loadMem_4ae8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 33
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %PC.i2774 = bitcast %union.anon* %1117 to i64*
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1119 = getelementptr inbounds %struct.GPR, %struct.GPR* %1118, i32 0, i32 1
  %1120 = getelementptr inbounds %struct.Reg, %struct.Reg* %1119, i32 0, i32 0
  %EAX.i2775 = bitcast %union.anon* %1120 to i32*
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1122 = getelementptr inbounds %struct.GPR, %struct.GPR* %1121, i32 0, i32 7
  %1123 = getelementptr inbounds %struct.Reg, %struct.Reg* %1122, i32 0, i32 0
  %RDX.i2776 = bitcast %union.anon* %1123 to i64*
  %1124 = load i32, i32* %EAX.i2775
  %1125 = zext i32 %1124 to i64
  %1126 = load i64, i64* %PC.i2774
  %1127 = add i64 %1126, 2
  store i64 %1127, i64* %PC.i2774
  %1128 = and i64 %1125, 4294967295
  store i64 %1128, i64* %RDX.i2776, align 8
  store %struct.Memory* %loadMem_4ae8c9, %struct.Memory** %MEMORY
  %loadMem_4ae8cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1130 = getelementptr inbounds %struct.GPR, %struct.GPR* %1129, i32 0, i32 33
  %1131 = getelementptr inbounds %struct.Reg, %struct.Reg* %1130, i32 0, i32 0
  %PC.i2770 = bitcast %union.anon* %1131 to i64*
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 5
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %1135 = bitcast %union.anon* %1134 to %struct.anon.2*
  %CL.i2771 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1135, i32 0, i32 0
  %1136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1137 = getelementptr inbounds %struct.GPR, %struct.GPR* %1136, i32 0, i32 7
  %1138 = getelementptr inbounds %struct.Reg, %struct.Reg* %1137, i32 0, i32 0
  %RDX.i2772 = bitcast %union.anon* %1138 to i64*
  %1139 = load i64, i64* %RDX.i2772
  %1140 = load i8, i8* %CL.i2771
  %1141 = zext i8 %1140 to i64
  %1142 = load i64, i64* %PC.i2770
  %1143 = add i64 %1142, 2
  store i64 %1143, i64* %PC.i2770
  %1144 = trunc i64 %1141 to i5
  switch i5 %1144, label %1151 [
    i5 0, label %routine_shll__cl___edx.exit2773
    i5 1, label %1145
  ]

; <label>:1145:                                   ; preds = %routine_shll__cl___edx.exit2785
  %1146 = trunc i64 %1139 to i32
  %1147 = shl i32 %1146, 1
  %1148 = icmp slt i32 %1146, 0
  %1149 = icmp slt i32 %1147, 0
  %1150 = xor i1 %1148, %1149
  br label %1160

; <label>:1151:                                   ; preds = %routine_shll__cl___edx.exit2785
  %1152 = and i64 %1141, 31
  %1153 = add i64 %1152, 4294967295
  %1154 = and i64 %1139, 4294967295
  %1155 = and i64 %1153, 4294967295
  %1156 = shl i64 %1154, %1155
  %1157 = trunc i64 %1156 to i32
  %1158 = icmp slt i32 %1157, 0
  %1159 = shl i32 %1157, 1
  br label %1160

; <label>:1160:                                   ; preds = %1151, %1145
  %1161 = phi i1 [ %1148, %1145 ], [ %1158, %1151 ]
  %1162 = phi i1 [ %1150, %1145 ], [ false, %1151 ]
  %1163 = phi i32 [ %1147, %1145 ], [ %1159, %1151 ]
  %1164 = zext i32 %1163 to i64
  store i64 %1164, i64* %RDX.i2772, align 8
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1166 = zext i1 %1161 to i8
  store i8 %1166, i8* %1165, align 1
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1168 = and i32 %1163, 254
  %1169 = call i32 @llvm.ctpop.i32(i32 %1168)
  %1170 = trunc i32 %1169 to i8
  %1171 = and i8 %1170, 1
  %1172 = xor i8 %1171, 1
  store i8 %1172, i8* %1167, align 1
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1173, align 1
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1175 = icmp eq i32 %1163, 0
  %1176 = zext i1 %1175 to i8
  store i8 %1176, i8* %1174, align 1
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1178 = lshr i32 %1163, 31
  %1179 = trunc i32 %1178 to i8
  store i8 %1179, i8* %1177, align 1
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1181 = zext i1 %1162 to i8
  store i8 %1181, i8* %1180, align 1
  br label %routine_shll__cl___edx.exit2773

routine_shll__cl___edx.exit2773:                  ; preds = %routine_shll__cl___edx.exit2785, %1160
  store %struct.Memory* %loadMem_4ae8cb, %struct.Memory** %MEMORY
  %loadMem_4ae8cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1183 = getelementptr inbounds %struct.GPR, %struct.GPR* %1182, i32 0, i32 33
  %1184 = getelementptr inbounds %struct.Reg, %struct.Reg* %1183, i32 0, i32 0
  %PC.i2767 = bitcast %union.anon* %1184 to i64*
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1186 = getelementptr inbounds %struct.GPR, %struct.GPR* %1185, i32 0, i32 7
  %1187 = getelementptr inbounds %struct.Reg, %struct.Reg* %1186, i32 0, i32 0
  %EDX.i2768 = bitcast %union.anon* %1187 to i32*
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 15
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %RBP.i2769 = bitcast %union.anon* %1190 to i64*
  %1191 = load i64, i64* %RBP.i2769
  %1192 = sub i64 %1191, 800
  %1193 = load i32, i32* %EDX.i2768
  %1194 = zext i32 %1193 to i64
  %1195 = load i64, i64* %PC.i2767
  %1196 = add i64 %1195, 6
  store i64 %1196, i64* %PC.i2767
  %1197 = inttoptr i64 %1192 to i32*
  store i32 %1193, i32* %1197
  store %struct.Memory* %loadMem_4ae8cd, %struct.Memory** %MEMORY
  %loadMem_4ae8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 33
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %PC.i2765 = bitcast %union.anon* %1200 to i64*
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 5
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %RCX.i2766 = bitcast %union.anon* %1203 to i64*
  %1204 = load i64, i64* %PC.i2765
  %1205 = add i64 %1204, 7
  store i64 %1205, i64* %PC.i2765
  %1206 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %1207 = zext i32 %1206 to i64
  store i64 %1207, i64* %RCX.i2766, align 8
  store %struct.Memory* %loadMem_4ae8d3, %struct.Memory** %MEMORY
  %loadMem_4ae8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1209 = getelementptr inbounds %struct.GPR, %struct.GPR* %1208, i32 0, i32 33
  %1210 = getelementptr inbounds %struct.Reg, %struct.Reg* %1209, i32 0, i32 0
  %PC.i2761 = bitcast %union.anon* %1210 to i64*
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1212 = getelementptr inbounds %struct.GPR, %struct.GPR* %1211, i32 0, i32 5
  %1213 = getelementptr inbounds %struct.Reg, %struct.Reg* %1212, i32 0, i32 0
  %1214 = bitcast %union.anon* %1213 to %struct.anon.2*
  %CL.i2762 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1214, i32 0, i32 0
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1216 = getelementptr inbounds %struct.GPR, %struct.GPR* %1215, i32 0, i32 1
  %1217 = getelementptr inbounds %struct.Reg, %struct.Reg* %1216, i32 0, i32 0
  %RAX.i2763 = bitcast %union.anon* %1217 to i64*
  %1218 = load i64, i64* %RAX.i2763
  %1219 = load i8, i8* %CL.i2762
  %1220 = zext i8 %1219 to i64
  %1221 = load i64, i64* %PC.i2761
  %1222 = add i64 %1221, 2
  store i64 %1222, i64* %PC.i2761
  %1223 = trunc i64 %1220 to i5
  switch i5 %1223, label %1230 [
    i5 0, label %routine_shll__cl___eax.exit2764
    i5 1, label %1224
  ]

; <label>:1224:                                   ; preds = %routine_shll__cl___edx.exit2773
  %1225 = trunc i64 %1218 to i32
  %1226 = shl i32 %1225, 1
  %1227 = icmp slt i32 %1225, 0
  %1228 = icmp slt i32 %1226, 0
  %1229 = xor i1 %1227, %1228
  br label %1239

; <label>:1230:                                   ; preds = %routine_shll__cl___edx.exit2773
  %1231 = and i64 %1220, 31
  %1232 = add i64 %1231, 4294967295
  %1233 = and i64 %1218, 4294967295
  %1234 = and i64 %1232, 4294967295
  %1235 = shl i64 %1233, %1234
  %1236 = trunc i64 %1235 to i32
  %1237 = icmp slt i32 %1236, 0
  %1238 = shl i32 %1236, 1
  br label %1239

; <label>:1239:                                   ; preds = %1230, %1224
  %1240 = phi i1 [ %1227, %1224 ], [ %1237, %1230 ]
  %1241 = phi i1 [ %1229, %1224 ], [ false, %1230 ]
  %1242 = phi i32 [ %1226, %1224 ], [ %1238, %1230 ]
  %1243 = zext i32 %1242 to i64
  store i64 %1243, i64* %RAX.i2763, align 8
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1245 = zext i1 %1240 to i8
  store i8 %1245, i8* %1244, align 1
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1247 = and i32 %1242, 254
  %1248 = call i32 @llvm.ctpop.i32(i32 %1247)
  %1249 = trunc i32 %1248 to i8
  %1250 = and i8 %1249, 1
  %1251 = xor i8 %1250, 1
  store i8 %1251, i8* %1246, align 1
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1252, align 1
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1254 = icmp eq i32 %1242, 0
  %1255 = zext i1 %1254 to i8
  store i8 %1255, i8* %1253, align 1
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1257 = lshr i32 %1242, 31
  %1258 = trunc i32 %1257 to i8
  store i8 %1258, i8* %1256, align 1
  %1259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1260 = zext i1 %1241 to i8
  store i8 %1260, i8* %1259, align 1
  br label %routine_shll__cl___eax.exit2764

routine_shll__cl___eax.exit2764:                  ; preds = %routine_shll__cl___edx.exit2773, %1239
  store %struct.Memory* %loadMem_4ae8da, %struct.Memory** %MEMORY
  %loadMem_4ae8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 33
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %PC.i2758 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 1
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %EAX.i2759 = bitcast %union.anon* %1266 to i32*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 15
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %RBP.i2760 = bitcast %union.anon* %1269 to i64*
  %1270 = load i64, i64* %RBP.i2760
  %1271 = sub i64 %1270, 796
  %1272 = load i32, i32* %EAX.i2759
  %1273 = zext i32 %1272 to i64
  %1274 = load i64, i64* %PC.i2758
  %1275 = add i64 %1274, 6
  store i64 %1275, i64* %PC.i2758
  %1276 = inttoptr i64 %1271 to i32*
  store i32 %1272, i32* %1276
  store %struct.Memory* %loadMem_4ae8dc, %struct.Memory** %MEMORY
  %loadMem_4ae8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 33
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %PC.i2756 = bitcast %union.anon* %1279 to i64*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 15
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %RBP.i2757 = bitcast %union.anon* %1282 to i64*
  %1283 = load i64, i64* %RBP.i2757
  %1284 = sub i64 %1283, 4
  %1285 = load i64, i64* %PC.i2756
  %1286 = add i64 %1285, 7
  store i64 %1286, i64* %PC.i2756
  %1287 = inttoptr i64 %1284 to i32*
  store i32 0, i32* %1287
  store %struct.Memory* %loadMem_4ae8e2, %struct.Memory** %MEMORY
  br label %block_.L_4ae8e9

block_.L_4ae8e9:                                  ; preds = %block_.L_4ae9f9, %routine_shll__cl___eax.exit2764
  %loadMem_4ae8e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1289 = getelementptr inbounds %struct.GPR, %struct.GPR* %1288, i32 0, i32 33
  %1290 = getelementptr inbounds %struct.Reg, %struct.Reg* %1289, i32 0, i32 0
  %PC.i2753 = bitcast %union.anon* %1290 to i64*
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1292 = getelementptr inbounds %struct.GPR, %struct.GPR* %1291, i32 0, i32 1
  %1293 = getelementptr inbounds %struct.Reg, %struct.Reg* %1292, i32 0, i32 0
  %RAX.i2754 = bitcast %union.anon* %1293 to i64*
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1295 = getelementptr inbounds %struct.GPR, %struct.GPR* %1294, i32 0, i32 15
  %1296 = getelementptr inbounds %struct.Reg, %struct.Reg* %1295, i32 0, i32 0
  %RBP.i2755 = bitcast %union.anon* %1296 to i64*
  %1297 = load i64, i64* %RBP.i2755
  %1298 = sub i64 %1297, 4
  %1299 = load i64, i64* %PC.i2753
  %1300 = add i64 %1299, 3
  store i64 %1300, i64* %PC.i2753
  %1301 = inttoptr i64 %1298 to i32*
  %1302 = load i32, i32* %1301
  %1303 = zext i32 %1302 to i64
  store i64 %1303, i64* %RAX.i2754, align 8
  store %struct.Memory* %loadMem_4ae8e9, %struct.Memory** %MEMORY
  %loadMem_4ae8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1305 = getelementptr inbounds %struct.GPR, %struct.GPR* %1304, i32 0, i32 33
  %1306 = getelementptr inbounds %struct.Reg, %struct.Reg* %1305, i32 0, i32 0
  %PC.i2750 = bitcast %union.anon* %1306 to i64*
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1308 = getelementptr inbounds %struct.GPR, %struct.GPR* %1307, i32 0, i32 5
  %1309 = getelementptr inbounds %struct.Reg, %struct.Reg* %1308, i32 0, i32 0
  %RCX.i2751 = bitcast %union.anon* %1309 to i64*
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 15
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %RBP.i2752 = bitcast %union.anon* %1312 to i64*
  %1313 = load i64, i64* %RBP.i2752
  %1314 = sub i64 %1313, 808
  %1315 = load i64, i64* %PC.i2750
  %1316 = add i64 %1315, 6
  store i64 %1316, i64* %PC.i2750
  %1317 = inttoptr i64 %1314 to i32*
  %1318 = load i32, i32* %1317
  %1319 = zext i32 %1318 to i64
  store i64 %1319, i64* %RCX.i2751, align 8
  store %struct.Memory* %loadMem_4ae8ec, %struct.Memory** %MEMORY
  %loadMem_4ae8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 33
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %PC.i2748 = bitcast %union.anon* %1322 to i64*
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 5
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %RCX.i2749 = bitcast %union.anon* %1325 to i64*
  %1326 = load i64, i64* %RCX.i2749
  %1327 = load i64, i64* %PC.i2748
  %1328 = add i64 %1327, 3
  store i64 %1328, i64* %PC.i2748
  %1329 = trunc i64 %1326 to i32
  %1330 = add i32 2, %1329
  %1331 = zext i32 %1330 to i64
  store i64 %1331, i64* %RCX.i2749, align 8
  %1332 = icmp ult i32 %1330, %1329
  %1333 = icmp ult i32 %1330, 2
  %1334 = or i1 %1332, %1333
  %1335 = zext i1 %1334 to i8
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1335, i8* %1336, align 1
  %1337 = and i32 %1330, 255
  %1338 = call i32 @llvm.ctpop.i32(i32 %1337)
  %1339 = trunc i32 %1338 to i8
  %1340 = and i8 %1339, 1
  %1341 = xor i8 %1340, 1
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1341, i8* %1342, align 1
  %1343 = xor i64 2, %1326
  %1344 = trunc i64 %1343 to i32
  %1345 = xor i32 %1344, %1330
  %1346 = lshr i32 %1345, 4
  %1347 = trunc i32 %1346 to i8
  %1348 = and i8 %1347, 1
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1348, i8* %1349, align 1
  %1350 = icmp eq i32 %1330, 0
  %1351 = zext i1 %1350 to i8
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1351, i8* %1352, align 1
  %1353 = lshr i32 %1330, 31
  %1354 = trunc i32 %1353 to i8
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1354, i8* %1355, align 1
  %1356 = lshr i32 %1329, 31
  %1357 = xor i32 %1353, %1356
  %1358 = add i32 %1357, %1353
  %1359 = icmp eq i32 %1358, 2
  %1360 = zext i1 %1359 to i8
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1360, i8* %1361, align 1
  store %struct.Memory* %loadMem_4ae8f2, %struct.Memory** %MEMORY
  %loadMem_4ae8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 33
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %PC.i2745 = bitcast %union.anon* %1364 to i64*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 1
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %EAX.i2746 = bitcast %union.anon* %1367 to i32*
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 5
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %ECX.i2747 = bitcast %union.anon* %1370 to i32*
  %1371 = load i32, i32* %EAX.i2746
  %1372 = zext i32 %1371 to i64
  %1373 = load i32, i32* %ECX.i2747
  %1374 = zext i32 %1373 to i64
  %1375 = load i64, i64* %PC.i2745
  %1376 = add i64 %1375, 2
  store i64 %1376, i64* %PC.i2745
  %1377 = sub i32 %1371, %1373
  %1378 = icmp ult i32 %1371, %1373
  %1379 = zext i1 %1378 to i8
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1379, i8* %1380, align 1
  %1381 = and i32 %1377, 255
  %1382 = call i32 @llvm.ctpop.i32(i32 %1381)
  %1383 = trunc i32 %1382 to i8
  %1384 = and i8 %1383, 1
  %1385 = xor i8 %1384, 1
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1385, i8* %1386, align 1
  %1387 = xor i64 %1374, %1372
  %1388 = trunc i64 %1387 to i32
  %1389 = xor i32 %1388, %1377
  %1390 = lshr i32 %1389, 4
  %1391 = trunc i32 %1390 to i8
  %1392 = and i8 %1391, 1
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1392, i8* %1393, align 1
  %1394 = icmp eq i32 %1377, 0
  %1395 = zext i1 %1394 to i8
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1395, i8* %1396, align 1
  %1397 = lshr i32 %1377, 31
  %1398 = trunc i32 %1397 to i8
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1398, i8* %1399, align 1
  %1400 = lshr i32 %1371, 31
  %1401 = lshr i32 %1373, 31
  %1402 = xor i32 %1401, %1400
  %1403 = xor i32 %1397, %1400
  %1404 = add i32 %1403, %1402
  %1405 = icmp eq i32 %1404, 2
  %1406 = zext i1 %1405 to i8
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1406, i8* %1407, align 1
  store %struct.Memory* %loadMem_4ae8f5, %struct.Memory** %MEMORY
  %loadMem_4ae8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 33
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %PC.i2744 = bitcast %union.anon* %1410 to i64*
  %1411 = load i64, i64* %PC.i2744
  %1412 = add i64 %1411, 272
  %1413 = load i64, i64* %PC.i2744
  %1414 = add i64 %1413, 6
  %1415 = load i64, i64* %PC.i2744
  %1416 = add i64 %1415, 6
  store i64 %1416, i64* %PC.i2744
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1418 = load i8, i8* %1417, align 1
  %1419 = icmp ne i8 %1418, 0
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1421 = load i8, i8* %1420, align 1
  %1422 = icmp ne i8 %1421, 0
  %1423 = xor i1 %1419, %1422
  %1424 = xor i1 %1423, true
  %1425 = zext i1 %1424 to i8
  store i8 %1425, i8* %BRANCH_TAKEN, align 1
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1427 = select i1 %1423, i64 %1414, i64 %1412
  store i64 %1427, i64* %1426, align 8
  store %struct.Memory* %loadMem_4ae8f7, %struct.Memory** %MEMORY
  %loadBr_4ae8f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae8f7 = icmp eq i8 %loadBr_4ae8f7, 1
  br i1 %cmpBr_4ae8f7, label %block_.L_4aea07, label %block_4ae8fd

block_4ae8fd:                                     ; preds = %block_.L_4ae8e9
  %loadMem_4ae8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 33
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %PC.i2742 = bitcast %union.anon* %1430 to i64*
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 15
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %RBP.i2743 = bitcast %union.anon* %1433 to i64*
  %1434 = load i64, i64* %RBP.i2743
  %1435 = sub i64 %1434, 8
  %1436 = load i64, i64* %PC.i2742
  %1437 = add i64 %1436, 7
  store i64 %1437, i64* %PC.i2742
  %1438 = inttoptr i64 %1435 to i32*
  store i32 0, i32* %1438
  store %struct.Memory* %loadMem_4ae8fd, %struct.Memory** %MEMORY
  br label %block_.L_4ae904

block_.L_4ae904:                                  ; preds = %block_.L_4ae9e6, %block_4ae8fd
  %loadMem_4ae904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1440 = getelementptr inbounds %struct.GPR, %struct.GPR* %1439, i32 0, i32 33
  %1441 = getelementptr inbounds %struct.Reg, %struct.Reg* %1440, i32 0, i32 0
  %PC.i2739 = bitcast %union.anon* %1441 to i64*
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1443 = getelementptr inbounds %struct.GPR, %struct.GPR* %1442, i32 0, i32 1
  %1444 = getelementptr inbounds %struct.Reg, %struct.Reg* %1443, i32 0, i32 0
  %RAX.i2740 = bitcast %union.anon* %1444 to i64*
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1446 = getelementptr inbounds %struct.GPR, %struct.GPR* %1445, i32 0, i32 15
  %1447 = getelementptr inbounds %struct.Reg, %struct.Reg* %1446, i32 0, i32 0
  %RBP.i2741 = bitcast %union.anon* %1447 to i64*
  %1448 = load i64, i64* %RBP.i2741
  %1449 = sub i64 %1448, 8
  %1450 = load i64, i64* %PC.i2739
  %1451 = add i64 %1450, 3
  store i64 %1451, i64* %PC.i2739
  %1452 = inttoptr i64 %1449 to i32*
  %1453 = load i32, i32* %1452
  %1454 = zext i32 %1453 to i64
  store i64 %1454, i64* %RAX.i2740, align 8
  store %struct.Memory* %loadMem_4ae904, %struct.Memory** %MEMORY
  %loadMem_4ae907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 33
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %PC.i2736 = bitcast %union.anon* %1457 to i64*
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1459 = getelementptr inbounds %struct.GPR, %struct.GPR* %1458, i32 0, i32 5
  %1460 = getelementptr inbounds %struct.Reg, %struct.Reg* %1459, i32 0, i32 0
  %RCX.i2737 = bitcast %union.anon* %1460 to i64*
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 15
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %RBP.i2738 = bitcast %union.anon* %1463 to i64*
  %1464 = load i64, i64* %RBP.i2738
  %1465 = sub i64 %1464, 4
  %1466 = load i64, i64* %PC.i2736
  %1467 = add i64 %1466, 4
  store i64 %1467, i64* %PC.i2736
  %1468 = inttoptr i64 %1465 to i32*
  %1469 = load i32, i32* %1468
  %1470 = sext i32 %1469 to i64
  store i64 %1470, i64* %RCX.i2737, align 8
  store %struct.Memory* %loadMem_4ae907, %struct.Memory** %MEMORY
  %loadMem_4ae90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 33
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %PC.i2733 = bitcast %union.anon* %1473 to i64*
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1475 = getelementptr inbounds %struct.GPR, %struct.GPR* %1474, i32 0, i32 1
  %1476 = getelementptr inbounds %struct.Reg, %struct.Reg* %1475, i32 0, i32 0
  %EAX.i2734 = bitcast %union.anon* %1476 to i32*
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 5
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %RCX.i2735 = bitcast %union.anon* %1479 to i64*
  %1480 = load i32, i32* %EAX.i2734
  %1481 = zext i32 %1480 to i64
  %1482 = load i64, i64* %RCX.i2735
  %1483 = mul i64 %1482, 4
  %1484 = add i64 %1483, 7489456
  %1485 = load i64, i64* %PC.i2733
  %1486 = add i64 %1485, 7
  store i64 %1486, i64* %PC.i2733
  %1487 = inttoptr i64 %1484 to i32*
  %1488 = load i32, i32* %1487
  %1489 = sub i32 %1480, %1488
  %1490 = icmp ult i32 %1480, %1488
  %1491 = zext i1 %1490 to i8
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1491, i8* %1492, align 1
  %1493 = and i32 %1489, 255
  %1494 = call i32 @llvm.ctpop.i32(i32 %1493)
  %1495 = trunc i32 %1494 to i8
  %1496 = and i8 %1495, 1
  %1497 = xor i8 %1496, 1
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1497, i8* %1498, align 1
  %1499 = xor i32 %1488, %1480
  %1500 = xor i32 %1499, %1489
  %1501 = lshr i32 %1500, 4
  %1502 = trunc i32 %1501 to i8
  %1503 = and i8 %1502, 1
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1503, i8* %1504, align 1
  %1505 = icmp eq i32 %1489, 0
  %1506 = zext i1 %1505 to i8
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1506, i8* %1507, align 1
  %1508 = lshr i32 %1489, 31
  %1509 = trunc i32 %1508 to i8
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1509, i8* %1510, align 1
  %1511 = lshr i32 %1480, 31
  %1512 = lshr i32 %1488, 31
  %1513 = xor i32 %1512, %1511
  %1514 = xor i32 %1508, %1511
  %1515 = add i32 %1514, %1513
  %1516 = icmp eq i32 %1515, 2
  %1517 = zext i1 %1516 to i8
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1517, i8* %1518, align 1
  store %struct.Memory* %loadMem_4ae90b, %struct.Memory** %MEMORY
  %loadMem_4ae912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 33
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %PC.i2732 = bitcast %union.anon* %1521 to i64*
  %1522 = load i64, i64* %PC.i2732
  %1523 = add i64 %1522, 226
  %1524 = load i64, i64* %PC.i2732
  %1525 = add i64 %1524, 6
  %1526 = load i64, i64* %PC.i2732
  %1527 = add i64 %1526, 6
  store i64 %1527, i64* %PC.i2732
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1529 = load i8, i8* %1528, align 1
  %1530 = icmp ne i8 %1529, 0
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1532 = load i8, i8* %1531, align 1
  %1533 = icmp ne i8 %1532, 0
  %1534 = xor i1 %1530, %1533
  %1535 = xor i1 %1534, true
  %1536 = zext i1 %1535 to i8
  store i8 %1536, i8* %BRANCH_TAKEN, align 1
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1538 = select i1 %1534, i64 %1525, i64 %1523
  store i64 %1538, i64* %1537, align 8
  store %struct.Memory* %loadMem_4ae912, %struct.Memory** %MEMORY
  %loadBr_4ae912 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae912 = icmp eq i8 %loadBr_4ae912, 1
  br i1 %cmpBr_4ae912, label %block_.L_4ae9f4, label %block_4ae918

block_4ae918:                                     ; preds = %block_.L_4ae904
  %loadMem_4ae918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 33
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %PC.i2730 = bitcast %union.anon* %1541 to i64*
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 15
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %RBP.i2731 = bitcast %union.anon* %1544 to i64*
  %1545 = load i64, i64* %RBP.i2731
  %1546 = sub i64 %1545, 12
  %1547 = load i64, i64* %PC.i2730
  %1548 = add i64 %1547, 7
  store i64 %1548, i64* %PC.i2730
  %1549 = inttoptr i64 %1546 to i32*
  store i32 0, i32* %1549
  store %struct.Memory* %loadMem_4ae918, %struct.Memory** %MEMORY
  br label %block_.L_4ae91f

block_.L_4ae91f:                                  ; preds = %block_4ae929, %block_4ae918
  %loadMem_4ae91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1551 = getelementptr inbounds %struct.GPR, %struct.GPR* %1550, i32 0, i32 33
  %1552 = getelementptr inbounds %struct.Reg, %struct.Reg* %1551, i32 0, i32 0
  %PC.i2728 = bitcast %union.anon* %1552 to i64*
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1554 = getelementptr inbounds %struct.GPR, %struct.GPR* %1553, i32 0, i32 15
  %1555 = getelementptr inbounds %struct.Reg, %struct.Reg* %1554, i32 0, i32 0
  %RBP.i2729 = bitcast %union.anon* %1555 to i64*
  %1556 = load i64, i64* %RBP.i2729
  %1557 = sub i64 %1556, 12
  %1558 = load i64, i64* %PC.i2728
  %1559 = add i64 %1558, 4
  store i64 %1559, i64* %PC.i2728
  %1560 = inttoptr i64 %1557 to i32*
  %1561 = load i32, i32* %1560
  %1562 = sub i32 %1561, 3
  %1563 = icmp ult i32 %1561, 3
  %1564 = zext i1 %1563 to i8
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1564, i8* %1565, align 1
  %1566 = and i32 %1562, 255
  %1567 = call i32 @llvm.ctpop.i32(i32 %1566)
  %1568 = trunc i32 %1567 to i8
  %1569 = and i8 %1568, 1
  %1570 = xor i8 %1569, 1
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1570, i8* %1571, align 1
  %1572 = xor i32 %1561, 3
  %1573 = xor i32 %1572, %1562
  %1574 = lshr i32 %1573, 4
  %1575 = trunc i32 %1574 to i8
  %1576 = and i8 %1575, 1
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1576, i8* %1577, align 1
  %1578 = icmp eq i32 %1562, 0
  %1579 = zext i1 %1578 to i8
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1579, i8* %1580, align 1
  %1581 = lshr i32 %1562, 31
  %1582 = trunc i32 %1581 to i8
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1582, i8* %1583, align 1
  %1584 = lshr i32 %1561, 31
  %1585 = xor i32 %1581, %1584
  %1586 = add i32 %1585, %1584
  %1587 = icmp eq i32 %1586, 2
  %1588 = zext i1 %1587 to i8
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1588, i8* %1589, align 1
  store %struct.Memory* %loadMem_4ae91f, %struct.Memory** %MEMORY
  %loadMem_4ae923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 33
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %PC.i2727 = bitcast %union.anon* %1592 to i64*
  %1593 = load i64, i64* %PC.i2727
  %1594 = add i64 %1593, 190
  %1595 = load i64, i64* %PC.i2727
  %1596 = add i64 %1595, 6
  %1597 = load i64, i64* %PC.i2727
  %1598 = add i64 %1597, 6
  store i64 %1598, i64* %PC.i2727
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1600 = load i8, i8* %1599, align 1
  %1601 = icmp ne i8 %1600, 0
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1603 = load i8, i8* %1602, align 1
  %1604 = icmp ne i8 %1603, 0
  %1605 = xor i1 %1601, %1604
  %1606 = xor i1 %1605, true
  %1607 = zext i1 %1606 to i8
  store i8 %1607, i8* %BRANCH_TAKEN, align 1
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1609 = select i1 %1605, i64 %1596, i64 %1594
  store i64 %1609, i64* %1608, align 8
  store %struct.Memory* %loadMem_4ae923, %struct.Memory** %MEMORY
  %loadBr_4ae923 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ae923 = icmp eq i8 %loadBr_4ae923, 1
  br i1 %cmpBr_4ae923, label %block_.L_4ae9e1, label %block_4ae929

block_4ae929:                                     ; preds = %block_.L_4ae91f
  %loadMem_4ae929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1611 = getelementptr inbounds %struct.GPR, %struct.GPR* %1610, i32 0, i32 33
  %1612 = getelementptr inbounds %struct.Reg, %struct.Reg* %1611, i32 0, i32 0
  %PC.i2724 = bitcast %union.anon* %1612 to i64*
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 1
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %RAX.i2725 = bitcast %union.anon* %1615 to i64*
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 15
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %RBP.i2726 = bitcast %union.anon* %1618 to i64*
  %1619 = load i64, i64* %RBP.i2726
  %1620 = sub i64 %1619, 1888
  %1621 = load i64, i64* %PC.i2724
  %1622 = add i64 %1621, 7
  store i64 %1622, i64* %PC.i2724
  store i64 %1620, i64* %RAX.i2725, align 8
  store %struct.Memory* %loadMem_4ae929, %struct.Memory** %MEMORY
  %loadMem_4ae930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1624 = getelementptr inbounds %struct.GPR, %struct.GPR* %1623, i32 0, i32 33
  %1625 = getelementptr inbounds %struct.Reg, %struct.Reg* %1624, i32 0, i32 0
  %PC.i2721 = bitcast %union.anon* %1625 to i64*
  %1626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1627 = getelementptr inbounds %struct.GPR, %struct.GPR* %1626, i32 0, i32 5
  %1628 = getelementptr inbounds %struct.Reg, %struct.Reg* %1627, i32 0, i32 0
  %RCX.i2722 = bitcast %union.anon* %1628 to i64*
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1630 = getelementptr inbounds %struct.GPR, %struct.GPR* %1629, i32 0, i32 15
  %1631 = getelementptr inbounds %struct.Reg, %struct.Reg* %1630, i32 0, i32 0
  %RBP.i2723 = bitcast %union.anon* %1631 to i64*
  %1632 = load i64, i64* %RBP.i2723
  %1633 = sub i64 %1632, 2976
  %1634 = load i64, i64* %PC.i2721
  %1635 = add i64 %1634, 7
  store i64 %1635, i64* %PC.i2721
  store i64 %1633, i64* %RCX.i2722, align 8
  store %struct.Memory* %loadMem_4ae930, %struct.Memory** %MEMORY
  %loadMem_4ae937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1637 = getelementptr inbounds %struct.GPR, %struct.GPR* %1636, i32 0, i32 33
  %1638 = getelementptr inbounds %struct.Reg, %struct.Reg* %1637, i32 0, i32 0
  %PC.i2718 = bitcast %union.anon* %1638 to i64*
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 7
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %RDX.i2719 = bitcast %union.anon* %1641 to i64*
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 15
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %RBP.i2720 = bitcast %union.anon* %1644 to i64*
  %1645 = load i64, i64* %RBP.i2720
  %1646 = sub i64 %1645, 12
  %1647 = load i64, i64* %PC.i2718
  %1648 = add i64 %1647, 4
  store i64 %1648, i64* %PC.i2718
  %1649 = inttoptr i64 %1646 to i32*
  %1650 = load i32, i32* %1649
  %1651 = sext i32 %1650 to i64
  store i64 %1651, i64* %RDX.i2719, align 8
  store %struct.Memory* %loadMem_4ae937, %struct.Memory** %MEMORY
  %loadMem_4ae93b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 33
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %PC.i2714 = bitcast %union.anon* %1654 to i64*
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 7
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %RDX.i2715 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 9
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %RSI.i2716 = bitcast %union.anon* %1660 to i64*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 15
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RBP.i2717 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %RBP.i2717
  %1665 = load i64, i64* %RDX.i2715
  %1666 = mul i64 %1665, 4
  %1667 = add i64 %1664, -804
  %1668 = add i64 %1667, %1666
  %1669 = load i64, i64* %PC.i2714
  %1670 = add i64 %1669, 7
  store i64 %1670, i64* %PC.i2714
  %1671 = inttoptr i64 %1668 to i32*
  %1672 = load i32, i32* %1671
  %1673 = zext i32 %1672 to i64
  store i64 %1673, i64* %RSI.i2716, align 8
  store %struct.Memory* %loadMem_4ae93b, %struct.Memory** %MEMORY
  %loadMem_4ae942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 33
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %PC.i2712 = bitcast %union.anon* %1676 to i64*
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 7
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %RDX.i2713 = bitcast %union.anon* %1679 to i64*
  %1680 = load i64, i64* %PC.i2712
  %1681 = add i64 %1680, 8
  store i64 %1681, i64* %PC.i2712
  %1682 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %1682, i64* %RDX.i2713, align 8
  store %struct.Memory* %loadMem_4ae942, %struct.Memory** %MEMORY
  %loadMem_4ae94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 33
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %PC.i2709 = bitcast %union.anon* %1685 to i64*
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1687 = getelementptr inbounds %struct.GPR, %struct.GPR* %1686, i32 0, i32 11
  %1688 = getelementptr inbounds %struct.Reg, %struct.Reg* %1687, i32 0, i32 0
  %RDI.i2710 = bitcast %union.anon* %1688 to i64*
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1690 = getelementptr inbounds %struct.GPR, %struct.GPR* %1689, i32 0, i32 15
  %1691 = getelementptr inbounds %struct.Reg, %struct.Reg* %1690, i32 0, i32 0
  %RBP.i2711 = bitcast %union.anon* %1691 to i64*
  %1692 = load i64, i64* %RBP.i2711
  %1693 = sub i64 %1692, 4
  %1694 = load i64, i64* %PC.i2709
  %1695 = add i64 %1694, 4
  store i64 %1695, i64* %PC.i2709
  %1696 = inttoptr i64 %1693 to i32*
  %1697 = load i32, i32* %1696
  %1698 = sext i32 %1697 to i64
  store i64 %1698, i64* %RDI.i2710, align 8
  store %struct.Memory* %loadMem_4ae94a, %struct.Memory** %MEMORY
  %loadMem_4ae94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1700 = getelementptr inbounds %struct.GPR, %struct.GPR* %1699, i32 0, i32 33
  %1701 = getelementptr inbounds %struct.Reg, %struct.Reg* %1700, i32 0, i32 0
  %PC.i2706 = bitcast %union.anon* %1701 to i64*
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1703 = getelementptr inbounds %struct.GPR, %struct.GPR* %1702, i32 0, i32 7
  %1704 = getelementptr inbounds %struct.Reg, %struct.Reg* %1703, i32 0, i32 0
  %RDX.i2707 = bitcast %union.anon* %1704 to i64*
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1706 = getelementptr inbounds %struct.GPR, %struct.GPR* %1705, i32 0, i32 11
  %1707 = getelementptr inbounds %struct.Reg, %struct.Reg* %1706, i32 0, i32 0
  %RDI.i2708 = bitcast %union.anon* %1707 to i64*
  %1708 = load i64, i64* %RDX.i2707
  %1709 = load i64, i64* %RDI.i2708
  %1710 = mul i64 %1709, 8
  %1711 = add i64 %1710, %1708
  %1712 = load i64, i64* %PC.i2706
  %1713 = add i64 %1712, 4
  store i64 %1713, i64* %PC.i2706
  %1714 = inttoptr i64 %1711 to i64*
  %1715 = load i64, i64* %1714
  store i64 %1715, i64* %RDX.i2707, align 8
  store %struct.Memory* %loadMem_4ae94e, %struct.Memory** %MEMORY
  %loadMem_4ae952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1717 = getelementptr inbounds %struct.GPR, %struct.GPR* %1716, i32 0, i32 33
  %1718 = getelementptr inbounds %struct.Reg, %struct.Reg* %1717, i32 0, i32 0
  %PC.i2703 = bitcast %union.anon* %1718 to i64*
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1720 = getelementptr inbounds %struct.GPR, %struct.GPR* %1719, i32 0, i32 11
  %1721 = getelementptr inbounds %struct.Reg, %struct.Reg* %1720, i32 0, i32 0
  %RDI.i2704 = bitcast %union.anon* %1721 to i64*
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1723 = getelementptr inbounds %struct.GPR, %struct.GPR* %1722, i32 0, i32 15
  %1724 = getelementptr inbounds %struct.Reg, %struct.Reg* %1723, i32 0, i32 0
  %RBP.i2705 = bitcast %union.anon* %1724 to i64*
  %1725 = load i64, i64* %RBP.i2705
  %1726 = sub i64 %1725, 8
  %1727 = load i64, i64* %PC.i2703
  %1728 = add i64 %1727, 4
  store i64 %1728, i64* %PC.i2703
  %1729 = inttoptr i64 %1726 to i32*
  %1730 = load i32, i32* %1729
  %1731 = sext i32 %1730 to i64
  store i64 %1731, i64* %RDI.i2704, align 8
  store %struct.Memory* %loadMem_4ae952, %struct.Memory** %MEMORY
  %loadMem_4ae956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1733 = getelementptr inbounds %struct.GPR, %struct.GPR* %1732, i32 0, i32 33
  %1734 = getelementptr inbounds %struct.Reg, %struct.Reg* %1733, i32 0, i32 0
  %PC.i2700 = bitcast %union.anon* %1734 to i64*
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 7
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %RDX.i2701 = bitcast %union.anon* %1737 to i64*
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1739 = getelementptr inbounds %struct.GPR, %struct.GPR* %1738, i32 0, i32 11
  %1740 = getelementptr inbounds %struct.Reg, %struct.Reg* %1739, i32 0, i32 0
  %RDI.i2702 = bitcast %union.anon* %1740 to i64*
  %1741 = load i64, i64* %RDX.i2701
  %1742 = load i64, i64* %RDI.i2702
  %1743 = mul i64 %1742, 8
  %1744 = add i64 %1743, %1741
  %1745 = load i64, i64* %PC.i2700
  %1746 = add i64 %1745, 4
  store i64 %1746, i64* %PC.i2700
  %1747 = inttoptr i64 %1744 to i64*
  %1748 = load i64, i64* %1747
  store i64 %1748, i64* %RDX.i2701, align 8
  store %struct.Memory* %loadMem_4ae956, %struct.Memory** %MEMORY
  %loadMem_4ae95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 33
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %PC.i2697 = bitcast %union.anon* %1751 to i64*
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1753 = getelementptr inbounds %struct.GPR, %struct.GPR* %1752, i32 0, i32 11
  %1754 = getelementptr inbounds %struct.Reg, %struct.Reg* %1753, i32 0, i32 0
  %RDI.i2698 = bitcast %union.anon* %1754 to i64*
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1756 = getelementptr inbounds %struct.GPR, %struct.GPR* %1755, i32 0, i32 15
  %1757 = getelementptr inbounds %struct.Reg, %struct.Reg* %1756, i32 0, i32 0
  %RBP.i2699 = bitcast %union.anon* %1757 to i64*
  %1758 = load i64, i64* %RBP.i2699
  %1759 = sub i64 %1758, 12
  %1760 = load i64, i64* %PC.i2697
  %1761 = add i64 %1760, 4
  store i64 %1761, i64* %PC.i2697
  %1762 = inttoptr i64 %1759 to i32*
  %1763 = load i32, i32* %1762
  %1764 = sext i32 %1763 to i64
  store i64 %1764, i64* %RDI.i2698, align 8
  store %struct.Memory* %loadMem_4ae95a, %struct.Memory** %MEMORY
  %loadMem_4ae95e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1766 = getelementptr inbounds %struct.GPR, %struct.GPR* %1765, i32 0, i32 33
  %1767 = getelementptr inbounds %struct.Reg, %struct.Reg* %1766, i32 0, i32 0
  %PC.i2693 = bitcast %union.anon* %1767 to i64*
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 9
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %ESI.i2694 = bitcast %union.anon* %1770 to i32*
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 7
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %RDX.i2695 = bitcast %union.anon* %1773 to i64*
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1775 = getelementptr inbounds %struct.GPR, %struct.GPR* %1774, i32 0, i32 11
  %1776 = getelementptr inbounds %struct.Reg, %struct.Reg* %1775, i32 0, i32 0
  %RDI.i2696 = bitcast %union.anon* %1776 to i64*
  %1777 = load i64, i64* %RDX.i2695
  %1778 = load i64, i64* %RDI.i2696
  %1779 = mul i64 %1778, 4
  %1780 = add i64 %1779, %1777
  %1781 = load i32, i32* %ESI.i2694
  %1782 = zext i32 %1781 to i64
  %1783 = load i64, i64* %PC.i2693
  %1784 = add i64 %1783, 3
  store i64 %1784, i64* %PC.i2693
  %1785 = inttoptr i64 %1780 to i32*
  store i32 %1781, i32* %1785
  store %struct.Memory* %loadMem_4ae95e, %struct.Memory** %MEMORY
  %loadMem_4ae961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1787 = getelementptr inbounds %struct.GPR, %struct.GPR* %1786, i32 0, i32 33
  %1788 = getelementptr inbounds %struct.Reg, %struct.Reg* %1787, i32 0, i32 0
  %PC.i2691 = bitcast %union.anon* %1788 to i64*
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1790 = getelementptr inbounds %struct.GPR, %struct.GPR* %1789, i32 0, i32 7
  %1791 = getelementptr inbounds %struct.Reg, %struct.Reg* %1790, i32 0, i32 0
  %RDX.i2692 = bitcast %union.anon* %1791 to i64*
  %1792 = load i64, i64* %PC.i2691
  %1793 = add i64 %1792, 8
  store i64 %1793, i64* %PC.i2691
  %1794 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %1794, i64* %RDX.i2692, align 8
  store %struct.Memory* %loadMem_4ae961, %struct.Memory** %MEMORY
  %loadMem_4ae969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 33
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %PC.i2688 = bitcast %union.anon* %1797 to i64*
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1799 = getelementptr inbounds %struct.GPR, %struct.GPR* %1798, i32 0, i32 11
  %1800 = getelementptr inbounds %struct.Reg, %struct.Reg* %1799, i32 0, i32 0
  %RDI.i2689 = bitcast %union.anon* %1800 to i64*
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1802 = getelementptr inbounds %struct.GPR, %struct.GPR* %1801, i32 0, i32 15
  %1803 = getelementptr inbounds %struct.Reg, %struct.Reg* %1802, i32 0, i32 0
  %RBP.i2690 = bitcast %union.anon* %1803 to i64*
  %1804 = load i64, i64* %RBP.i2690
  %1805 = sub i64 %1804, 4
  %1806 = load i64, i64* %PC.i2688
  %1807 = add i64 %1806, 4
  store i64 %1807, i64* %PC.i2688
  %1808 = inttoptr i64 %1805 to i32*
  %1809 = load i32, i32* %1808
  %1810 = sext i32 %1809 to i64
  store i64 %1810, i64* %RDI.i2689, align 8
  store %struct.Memory* %loadMem_4ae969, %struct.Memory** %MEMORY
  %loadMem_4ae96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1812 = getelementptr inbounds %struct.GPR, %struct.GPR* %1811, i32 0, i32 33
  %1813 = getelementptr inbounds %struct.Reg, %struct.Reg* %1812, i32 0, i32 0
  %PC.i2685 = bitcast %union.anon* %1813 to i64*
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 7
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %RDX.i2686 = bitcast %union.anon* %1816 to i64*
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1818 = getelementptr inbounds %struct.GPR, %struct.GPR* %1817, i32 0, i32 11
  %1819 = getelementptr inbounds %struct.Reg, %struct.Reg* %1818, i32 0, i32 0
  %RDI.i2687 = bitcast %union.anon* %1819 to i64*
  %1820 = load i64, i64* %RDX.i2686
  %1821 = load i64, i64* %RDI.i2687
  %1822 = mul i64 %1821, 8
  %1823 = add i64 %1822, %1820
  %1824 = load i64, i64* %PC.i2685
  %1825 = add i64 %1824, 4
  store i64 %1825, i64* %PC.i2685
  %1826 = inttoptr i64 %1823 to i64*
  %1827 = load i64, i64* %1826
  store i64 %1827, i64* %RDX.i2686, align 8
  store %struct.Memory* %loadMem_4ae96d, %struct.Memory** %MEMORY
  %loadMem_4ae971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1829 = getelementptr inbounds %struct.GPR, %struct.GPR* %1828, i32 0, i32 33
  %1830 = getelementptr inbounds %struct.Reg, %struct.Reg* %1829, i32 0, i32 0
  %PC.i2682 = bitcast %union.anon* %1830 to i64*
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1832 = getelementptr inbounds %struct.GPR, %struct.GPR* %1831, i32 0, i32 11
  %1833 = getelementptr inbounds %struct.Reg, %struct.Reg* %1832, i32 0, i32 0
  %RDI.i2683 = bitcast %union.anon* %1833 to i64*
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 15
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %RBP.i2684 = bitcast %union.anon* %1836 to i64*
  %1837 = load i64, i64* %RBP.i2684
  %1838 = sub i64 %1837, 8
  %1839 = load i64, i64* %PC.i2682
  %1840 = add i64 %1839, 4
  store i64 %1840, i64* %PC.i2682
  %1841 = inttoptr i64 %1838 to i32*
  %1842 = load i32, i32* %1841
  %1843 = sext i32 %1842 to i64
  store i64 %1843, i64* %RDI.i2683, align 8
  store %struct.Memory* %loadMem_4ae971, %struct.Memory** %MEMORY
  %loadMem_4ae975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 33
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %PC.i2679 = bitcast %union.anon* %1846 to i64*
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1848 = getelementptr inbounds %struct.GPR, %struct.GPR* %1847, i32 0, i32 7
  %1849 = getelementptr inbounds %struct.Reg, %struct.Reg* %1848, i32 0, i32 0
  %RDX.i2680 = bitcast %union.anon* %1849 to i64*
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 11
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %RDI.i2681 = bitcast %union.anon* %1852 to i64*
  %1853 = load i64, i64* %RDX.i2680
  %1854 = load i64, i64* %RDI.i2681
  %1855 = mul i64 %1854, 8
  %1856 = add i64 %1855, %1853
  %1857 = load i64, i64* %PC.i2679
  %1858 = add i64 %1857, 4
  store i64 %1858, i64* %PC.i2679
  %1859 = inttoptr i64 %1856 to i64*
  %1860 = load i64, i64* %1859
  store i64 %1860, i64* %RDX.i2680, align 8
  store %struct.Memory* %loadMem_4ae975, %struct.Memory** %MEMORY
  %loadMem_4ae979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 33
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %PC.i2676 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 11
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %RDI.i2677 = bitcast %union.anon* %1866 to i64*
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 15
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %RBP.i2678 = bitcast %union.anon* %1869 to i64*
  %1870 = load i64, i64* %RBP.i2678
  %1871 = sub i64 %1870, 12
  %1872 = load i64, i64* %PC.i2676
  %1873 = add i64 %1872, 4
  store i64 %1873, i64* %PC.i2676
  %1874 = inttoptr i64 %1871 to i32*
  %1875 = load i32, i32* %1874
  %1876 = sext i32 %1875 to i64
  store i64 %1876, i64* %RDI.i2677, align 8
  store %struct.Memory* %loadMem_4ae979, %struct.Memory** %MEMORY
  %loadMem_4ae97d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 33
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %PC.i2673 = bitcast %union.anon* %1879 to i64*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 7
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %RDX.i2674 = bitcast %union.anon* %1882 to i64*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 11
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %RDI.i2675 = bitcast %union.anon* %1885 to i64*
  %1886 = load i64, i64* %RDX.i2674
  %1887 = load i64, i64* %RDI.i2675
  %1888 = mul i64 %1887, 4
  %1889 = add i64 %1888, %1886
  %1890 = load i64, i64* %PC.i2673
  %1891 = add i64 %1890, 7
  store i64 %1891, i64* %PC.i2673
  %1892 = inttoptr i64 %1889 to i32*
  store i32 0, i32* %1892
  store %struct.Memory* %loadMem_4ae97d, %struct.Memory** %MEMORY
  %loadMem_4ae984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 33
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %PC.i2670 = bitcast %union.anon* %1895 to i64*
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 7
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %RDX.i2671 = bitcast %union.anon* %1898 to i64*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 15
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RBP.i2672 = bitcast %union.anon* %1901 to i64*
  %1902 = load i64, i64* %RBP.i2672
  %1903 = sub i64 %1902, 4
  %1904 = load i64, i64* %PC.i2670
  %1905 = add i64 %1904, 4
  store i64 %1905, i64* %PC.i2670
  %1906 = inttoptr i64 %1903 to i32*
  %1907 = load i32, i32* %1906
  %1908 = sext i32 %1907 to i64
  store i64 %1908, i64* %RDX.i2671, align 8
  store %struct.Memory* %loadMem_4ae984, %struct.Memory** %MEMORY
  %loadMem_4ae988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1910 = getelementptr inbounds %struct.GPR, %struct.GPR* %1909, i32 0, i32 33
  %1911 = getelementptr inbounds %struct.Reg, %struct.Reg* %1910, i32 0, i32 0
  %PC.i2668 = bitcast %union.anon* %1911 to i64*
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1913 = getelementptr inbounds %struct.GPR, %struct.GPR* %1912, i32 0, i32 7
  %1914 = getelementptr inbounds %struct.Reg, %struct.Reg* %1913, i32 0, i32 0
  %RDX.i2669 = bitcast %union.anon* %1914 to i64*
  %1915 = load i64, i64* %RDX.i2669
  %1916 = load i64, i64* %PC.i2668
  %1917 = add i64 %1916, 7
  store i64 %1917, i64* %PC.i2668
  %1918 = sext i64 %1915 to i128
  %1919 = and i128 %1918, -18446744073709551616
  %1920 = zext i64 %1915 to i128
  %1921 = or i128 %1919, %1920
  %1922 = mul i128 180, %1921
  %1923 = trunc i128 %1922 to i64
  store i64 %1923, i64* %RDX.i2669, align 8
  %1924 = sext i64 %1923 to i128
  %1925 = icmp ne i128 %1924, %1922
  %1926 = zext i1 %1925 to i8
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1926, i8* %1927, align 1
  %1928 = trunc i128 %1922 to i32
  %1929 = and i32 %1928, 255
  %1930 = call i32 @llvm.ctpop.i32(i32 %1929)
  %1931 = trunc i32 %1930 to i8
  %1932 = and i8 %1931, 1
  %1933 = xor i8 %1932, 1
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1933, i8* %1934, align 1
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1935, align 1
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1936, align 1
  %1937 = lshr i64 %1923, 63
  %1938 = trunc i64 %1937 to i8
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1938, i8* %1939, align 1
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1926, i8* %1940, align 1
  store %struct.Memory* %loadMem_4ae988, %struct.Memory** %MEMORY
  %loadMem_4ae98f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1942 = getelementptr inbounds %struct.GPR, %struct.GPR* %1941, i32 0, i32 33
  %1943 = getelementptr inbounds %struct.Reg, %struct.Reg* %1942, i32 0, i32 0
  %PC.i2665 = bitcast %union.anon* %1943 to i64*
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1945 = getelementptr inbounds %struct.GPR, %struct.GPR* %1944, i32 0, i32 5
  %1946 = getelementptr inbounds %struct.Reg, %struct.Reg* %1945, i32 0, i32 0
  %RCX.i2666 = bitcast %union.anon* %1946 to i64*
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 7
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %RDX.i2667 = bitcast %union.anon* %1949 to i64*
  %1950 = load i64, i64* %RCX.i2666
  %1951 = load i64, i64* %RDX.i2667
  %1952 = load i64, i64* %PC.i2665
  %1953 = add i64 %1952, 3
  store i64 %1953, i64* %PC.i2665
  %1954 = add i64 %1951, %1950
  store i64 %1954, i64* %RCX.i2666, align 8
  %1955 = icmp ult i64 %1954, %1950
  %1956 = icmp ult i64 %1954, %1951
  %1957 = or i1 %1955, %1956
  %1958 = zext i1 %1957 to i8
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1958, i8* %1959, align 1
  %1960 = trunc i64 %1954 to i32
  %1961 = and i32 %1960, 255
  %1962 = call i32 @llvm.ctpop.i32(i32 %1961)
  %1963 = trunc i32 %1962 to i8
  %1964 = and i8 %1963, 1
  %1965 = xor i8 %1964, 1
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1965, i8* %1966, align 1
  %1967 = xor i64 %1951, %1950
  %1968 = xor i64 %1967, %1954
  %1969 = lshr i64 %1968, 4
  %1970 = trunc i64 %1969 to i8
  %1971 = and i8 %1970, 1
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1971, i8* %1972, align 1
  %1973 = icmp eq i64 %1954, 0
  %1974 = zext i1 %1973 to i8
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1974, i8* %1975, align 1
  %1976 = lshr i64 %1954, 63
  %1977 = trunc i64 %1976 to i8
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1977, i8* %1978, align 1
  %1979 = lshr i64 %1950, 63
  %1980 = lshr i64 %1951, 63
  %1981 = xor i64 %1976, %1979
  %1982 = xor i64 %1976, %1980
  %1983 = add i64 %1981, %1982
  %1984 = icmp eq i64 %1983, 2
  %1985 = zext i1 %1984 to i8
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1985, i8* %1986, align 1
  store %struct.Memory* %loadMem_4ae98f, %struct.Memory** %MEMORY
  %loadMem_4ae992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1988 = getelementptr inbounds %struct.GPR, %struct.GPR* %1987, i32 0, i32 33
  %1989 = getelementptr inbounds %struct.Reg, %struct.Reg* %1988, i32 0, i32 0
  %PC.i2662 = bitcast %union.anon* %1989 to i64*
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 7
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %RDX.i2663 = bitcast %union.anon* %1992 to i64*
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1994 = getelementptr inbounds %struct.GPR, %struct.GPR* %1993, i32 0, i32 15
  %1995 = getelementptr inbounds %struct.Reg, %struct.Reg* %1994, i32 0, i32 0
  %RBP.i2664 = bitcast %union.anon* %1995 to i64*
  %1996 = load i64, i64* %RBP.i2664
  %1997 = sub i64 %1996, 8
  %1998 = load i64, i64* %PC.i2662
  %1999 = add i64 %1998, 4
  store i64 %1999, i64* %PC.i2662
  %2000 = inttoptr i64 %1997 to i32*
  %2001 = load i32, i32* %2000
  %2002 = sext i32 %2001 to i64
  store i64 %2002, i64* %RDX.i2663, align 8
  store %struct.Memory* %loadMem_4ae992, %struct.Memory** %MEMORY
  %loadMem_4ae996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2004 = getelementptr inbounds %struct.GPR, %struct.GPR* %2003, i32 0, i32 33
  %2005 = getelementptr inbounds %struct.Reg, %struct.Reg* %2004, i32 0, i32 0
  %PC.i2660 = bitcast %union.anon* %2005 to i64*
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2007 = getelementptr inbounds %struct.GPR, %struct.GPR* %2006, i32 0, i32 7
  %2008 = getelementptr inbounds %struct.Reg, %struct.Reg* %2007, i32 0, i32 0
  %RDX.i2661 = bitcast %union.anon* %2008 to i64*
  %2009 = load i64, i64* %RDX.i2661
  %2010 = load i64, i64* %PC.i2660
  %2011 = add i64 %2010, 4
  store i64 %2011, i64* %PC.i2660
  %2012 = sext i64 %2009 to i128
  %2013 = and i128 %2012, -18446744073709551616
  %2014 = zext i64 %2009 to i128
  %2015 = or i128 %2013, %2014
  %2016 = mul i128 12, %2015
  %2017 = trunc i128 %2016 to i64
  store i64 %2017, i64* %RDX.i2661, align 8
  %2018 = sext i64 %2017 to i128
  %2019 = icmp ne i128 %2018, %2016
  %2020 = zext i1 %2019 to i8
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2020, i8* %2021, align 1
  %2022 = trunc i128 %2016 to i32
  %2023 = and i32 %2022, 255
  %2024 = call i32 @llvm.ctpop.i32(i32 %2023)
  %2025 = trunc i32 %2024 to i8
  %2026 = and i8 %2025, 1
  %2027 = xor i8 %2026, 1
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2027, i8* %2028, align 1
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2029, align 1
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2030, align 1
  %2031 = lshr i64 %2017, 63
  %2032 = trunc i64 %2031 to i8
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2032, i8* %2033, align 1
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2020, i8* %2034, align 1
  store %struct.Memory* %loadMem_4ae996, %struct.Memory** %MEMORY
  %loadMem_4ae99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2036 = getelementptr inbounds %struct.GPR, %struct.GPR* %2035, i32 0, i32 33
  %2037 = getelementptr inbounds %struct.Reg, %struct.Reg* %2036, i32 0, i32 0
  %PC.i2657 = bitcast %union.anon* %2037 to i64*
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2039 = getelementptr inbounds %struct.GPR, %struct.GPR* %2038, i32 0, i32 5
  %2040 = getelementptr inbounds %struct.Reg, %struct.Reg* %2039, i32 0, i32 0
  %RCX.i2658 = bitcast %union.anon* %2040 to i64*
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2042 = getelementptr inbounds %struct.GPR, %struct.GPR* %2041, i32 0, i32 7
  %2043 = getelementptr inbounds %struct.Reg, %struct.Reg* %2042, i32 0, i32 0
  %RDX.i2659 = bitcast %union.anon* %2043 to i64*
  %2044 = load i64, i64* %RCX.i2658
  %2045 = load i64, i64* %RDX.i2659
  %2046 = load i64, i64* %PC.i2657
  %2047 = add i64 %2046, 3
  store i64 %2047, i64* %PC.i2657
  %2048 = add i64 %2045, %2044
  store i64 %2048, i64* %RCX.i2658, align 8
  %2049 = icmp ult i64 %2048, %2044
  %2050 = icmp ult i64 %2048, %2045
  %2051 = or i1 %2049, %2050
  %2052 = zext i1 %2051 to i8
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2052, i8* %2053, align 1
  %2054 = trunc i64 %2048 to i32
  %2055 = and i32 %2054, 255
  %2056 = call i32 @llvm.ctpop.i32(i32 %2055)
  %2057 = trunc i32 %2056 to i8
  %2058 = and i8 %2057, 1
  %2059 = xor i8 %2058, 1
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2059, i8* %2060, align 1
  %2061 = xor i64 %2045, %2044
  %2062 = xor i64 %2061, %2048
  %2063 = lshr i64 %2062, 4
  %2064 = trunc i64 %2063 to i8
  %2065 = and i8 %2064, 1
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2065, i8* %2066, align 1
  %2067 = icmp eq i64 %2048, 0
  %2068 = zext i1 %2067 to i8
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2068, i8* %2069, align 1
  %2070 = lshr i64 %2048, 63
  %2071 = trunc i64 %2070 to i8
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2071, i8* %2072, align 1
  %2073 = lshr i64 %2044, 63
  %2074 = lshr i64 %2045, 63
  %2075 = xor i64 %2070, %2073
  %2076 = xor i64 %2070, %2074
  %2077 = add i64 %2075, %2076
  %2078 = icmp eq i64 %2077, 2
  %2079 = zext i1 %2078 to i8
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2079, i8* %2080, align 1
  store %struct.Memory* %loadMem_4ae99a, %struct.Memory** %MEMORY
  %loadMem_4ae99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2082 = getelementptr inbounds %struct.GPR, %struct.GPR* %2081, i32 0, i32 33
  %2083 = getelementptr inbounds %struct.Reg, %struct.Reg* %2082, i32 0, i32 0
  %PC.i2654 = bitcast %union.anon* %2083 to i64*
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2085 = getelementptr inbounds %struct.GPR, %struct.GPR* %2084, i32 0, i32 7
  %2086 = getelementptr inbounds %struct.Reg, %struct.Reg* %2085, i32 0, i32 0
  %RDX.i2655 = bitcast %union.anon* %2086 to i64*
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2088 = getelementptr inbounds %struct.GPR, %struct.GPR* %2087, i32 0, i32 15
  %2089 = getelementptr inbounds %struct.Reg, %struct.Reg* %2088, i32 0, i32 0
  %RBP.i2656 = bitcast %union.anon* %2089 to i64*
  %2090 = load i64, i64* %RBP.i2656
  %2091 = sub i64 %2090, 12
  %2092 = load i64, i64* %PC.i2654
  %2093 = add i64 %2092, 4
  store i64 %2093, i64* %PC.i2654
  %2094 = inttoptr i64 %2091 to i32*
  %2095 = load i32, i32* %2094
  %2096 = sext i32 %2095 to i64
  store i64 %2096, i64* %RDX.i2655, align 8
  store %struct.Memory* %loadMem_4ae99d, %struct.Memory** %MEMORY
  %loadMem_4ae9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2098 = getelementptr inbounds %struct.GPR, %struct.GPR* %2097, i32 0, i32 33
  %2099 = getelementptr inbounds %struct.Reg, %struct.Reg* %2098, i32 0, i32 0
  %PC.i2651 = bitcast %union.anon* %2099 to i64*
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2101 = getelementptr inbounds %struct.GPR, %struct.GPR* %2100, i32 0, i32 5
  %2102 = getelementptr inbounds %struct.Reg, %struct.Reg* %2101, i32 0, i32 0
  %RCX.i2652 = bitcast %union.anon* %2102 to i64*
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2104 = getelementptr inbounds %struct.GPR, %struct.GPR* %2103, i32 0, i32 7
  %2105 = getelementptr inbounds %struct.Reg, %struct.Reg* %2104, i32 0, i32 0
  %RDX.i2653 = bitcast %union.anon* %2105 to i64*
  %2106 = load i64, i64* %RCX.i2652
  %2107 = load i64, i64* %RDX.i2653
  %2108 = mul i64 %2107, 4
  %2109 = add i64 %2108, %2106
  %2110 = load i64, i64* %PC.i2651
  %2111 = add i64 %2110, 7
  store i64 %2111, i64* %PC.i2651
  %2112 = inttoptr i64 %2109 to i32*
  store i32 0, i32* %2112
  store %struct.Memory* %loadMem_4ae9a1, %struct.Memory** %MEMORY
  %loadMem_4ae9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2114 = getelementptr inbounds %struct.GPR, %struct.GPR* %2113, i32 0, i32 33
  %2115 = getelementptr inbounds %struct.Reg, %struct.Reg* %2114, i32 0, i32 0
  %PC.i2648 = bitcast %union.anon* %2115 to i64*
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2117 = getelementptr inbounds %struct.GPR, %struct.GPR* %2116, i32 0, i32 5
  %2118 = getelementptr inbounds %struct.Reg, %struct.Reg* %2117, i32 0, i32 0
  %RCX.i2649 = bitcast %union.anon* %2118 to i64*
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2120 = getelementptr inbounds %struct.GPR, %struct.GPR* %2119, i32 0, i32 15
  %2121 = getelementptr inbounds %struct.Reg, %struct.Reg* %2120, i32 0, i32 0
  %RBP.i2650 = bitcast %union.anon* %2121 to i64*
  %2122 = load i64, i64* %RBP.i2650
  %2123 = sub i64 %2122, 12
  %2124 = load i64, i64* %PC.i2648
  %2125 = add i64 %2124, 4
  store i64 %2125, i64* %PC.i2648
  %2126 = inttoptr i64 %2123 to i32*
  %2127 = load i32, i32* %2126
  %2128 = sext i32 %2127 to i64
  store i64 %2128, i64* %RCX.i2649, align 8
  store %struct.Memory* %loadMem_4ae9a8, %struct.Memory** %MEMORY
  %loadMem_4ae9ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2130 = getelementptr inbounds %struct.GPR, %struct.GPR* %2129, i32 0, i32 33
  %2131 = getelementptr inbounds %struct.Reg, %struct.Reg* %2130, i32 0, i32 0
  %PC.i2644 = bitcast %union.anon* %2131 to i64*
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2133 = getelementptr inbounds %struct.GPR, %struct.GPR* %2132, i32 0, i32 5
  %2134 = getelementptr inbounds %struct.Reg, %struct.Reg* %2133, i32 0, i32 0
  %RCX.i2645 = bitcast %union.anon* %2134 to i64*
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 9
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %RSI.i2646 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 15
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %RBP.i2647 = bitcast %union.anon* %2140 to i64*
  %2141 = load i64, i64* %RBP.i2647
  %2142 = load i64, i64* %RCX.i2645
  %2143 = mul i64 %2142, 4
  %2144 = add i64 %2141, -804
  %2145 = add i64 %2144, %2143
  %2146 = load i64, i64* %PC.i2644
  %2147 = add i64 %2146, 7
  store i64 %2147, i64* %PC.i2644
  %2148 = inttoptr i64 %2145 to i32*
  %2149 = load i32, i32* %2148
  %2150 = zext i32 %2149 to i64
  store i64 %2150, i64* %RSI.i2646, align 8
  store %struct.Memory* %loadMem_4ae9ac, %struct.Memory** %MEMORY
  %loadMem_4ae9b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2152 = getelementptr inbounds %struct.GPR, %struct.GPR* %2151, i32 0, i32 33
  %2153 = getelementptr inbounds %struct.Reg, %struct.Reg* %2152, i32 0, i32 0
  %PC.i2641 = bitcast %union.anon* %2153 to i64*
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2155 = getelementptr inbounds %struct.GPR, %struct.GPR* %2154, i32 0, i32 5
  %2156 = getelementptr inbounds %struct.Reg, %struct.Reg* %2155, i32 0, i32 0
  %RCX.i2642 = bitcast %union.anon* %2156 to i64*
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2158 = getelementptr inbounds %struct.GPR, %struct.GPR* %2157, i32 0, i32 15
  %2159 = getelementptr inbounds %struct.Reg, %struct.Reg* %2158, i32 0, i32 0
  %RBP.i2643 = bitcast %union.anon* %2159 to i64*
  %2160 = load i64, i64* %RBP.i2643
  %2161 = sub i64 %2160, 4
  %2162 = load i64, i64* %PC.i2641
  %2163 = add i64 %2162, 4
  store i64 %2163, i64* %PC.i2641
  %2164 = inttoptr i64 %2161 to i32*
  %2165 = load i32, i32* %2164
  %2166 = sext i32 %2165 to i64
  store i64 %2166, i64* %RCX.i2642, align 8
  store %struct.Memory* %loadMem_4ae9b3, %struct.Memory** %MEMORY
  %loadMem_4ae9b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2168 = getelementptr inbounds %struct.GPR, %struct.GPR* %2167, i32 0, i32 33
  %2169 = getelementptr inbounds %struct.Reg, %struct.Reg* %2168, i32 0, i32 0
  %PC.i2639 = bitcast %union.anon* %2169 to i64*
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2171 = getelementptr inbounds %struct.GPR, %struct.GPR* %2170, i32 0, i32 5
  %2172 = getelementptr inbounds %struct.Reg, %struct.Reg* %2171, i32 0, i32 0
  %RCX.i2640 = bitcast %union.anon* %2172 to i64*
  %2173 = load i64, i64* %RCX.i2640
  %2174 = load i64, i64* %PC.i2639
  %2175 = add i64 %2174, 7
  store i64 %2175, i64* %PC.i2639
  %2176 = sext i64 %2173 to i128
  %2177 = and i128 %2176, -18446744073709551616
  %2178 = zext i64 %2173 to i128
  %2179 = or i128 %2177, %2178
  %2180 = mul i128 180, %2179
  %2181 = trunc i128 %2180 to i64
  store i64 %2181, i64* %RCX.i2640, align 8
  %2182 = sext i64 %2181 to i128
  %2183 = icmp ne i128 %2182, %2180
  %2184 = zext i1 %2183 to i8
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2184, i8* %2185, align 1
  %2186 = trunc i128 %2180 to i32
  %2187 = and i32 %2186, 255
  %2188 = call i32 @llvm.ctpop.i32(i32 %2187)
  %2189 = trunc i32 %2188 to i8
  %2190 = and i8 %2189, 1
  %2191 = xor i8 %2190, 1
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2191, i8* %2192, align 1
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2193, align 1
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2194, align 1
  %2195 = lshr i64 %2181, 63
  %2196 = trunc i64 %2195 to i8
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2196, i8* %2197, align 1
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2184, i8* %2198, align 1
  store %struct.Memory* %loadMem_4ae9b7, %struct.Memory** %MEMORY
  %loadMem_4ae9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2200 = getelementptr inbounds %struct.GPR, %struct.GPR* %2199, i32 0, i32 33
  %2201 = getelementptr inbounds %struct.Reg, %struct.Reg* %2200, i32 0, i32 0
  %PC.i2636 = bitcast %union.anon* %2201 to i64*
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2203 = getelementptr inbounds %struct.GPR, %struct.GPR* %2202, i32 0, i32 1
  %2204 = getelementptr inbounds %struct.Reg, %struct.Reg* %2203, i32 0, i32 0
  %RAX.i2637 = bitcast %union.anon* %2204 to i64*
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2206 = getelementptr inbounds %struct.GPR, %struct.GPR* %2205, i32 0, i32 5
  %2207 = getelementptr inbounds %struct.Reg, %struct.Reg* %2206, i32 0, i32 0
  %RCX.i2638 = bitcast %union.anon* %2207 to i64*
  %2208 = load i64, i64* %RAX.i2637
  %2209 = load i64, i64* %RCX.i2638
  %2210 = load i64, i64* %PC.i2636
  %2211 = add i64 %2210, 3
  store i64 %2211, i64* %PC.i2636
  %2212 = add i64 %2209, %2208
  store i64 %2212, i64* %RAX.i2637, align 8
  %2213 = icmp ult i64 %2212, %2208
  %2214 = icmp ult i64 %2212, %2209
  %2215 = or i1 %2213, %2214
  %2216 = zext i1 %2215 to i8
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2216, i8* %2217, align 1
  %2218 = trunc i64 %2212 to i32
  %2219 = and i32 %2218, 255
  %2220 = call i32 @llvm.ctpop.i32(i32 %2219)
  %2221 = trunc i32 %2220 to i8
  %2222 = and i8 %2221, 1
  %2223 = xor i8 %2222, 1
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2223, i8* %2224, align 1
  %2225 = xor i64 %2209, %2208
  %2226 = xor i64 %2225, %2212
  %2227 = lshr i64 %2226, 4
  %2228 = trunc i64 %2227 to i8
  %2229 = and i8 %2228, 1
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2229, i8* %2230, align 1
  %2231 = icmp eq i64 %2212, 0
  %2232 = zext i1 %2231 to i8
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2232, i8* %2233, align 1
  %2234 = lshr i64 %2212, 63
  %2235 = trunc i64 %2234 to i8
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2235, i8* %2236, align 1
  %2237 = lshr i64 %2208, 63
  %2238 = lshr i64 %2209, 63
  %2239 = xor i64 %2234, %2237
  %2240 = xor i64 %2234, %2238
  %2241 = add i64 %2239, %2240
  %2242 = icmp eq i64 %2241, 2
  %2243 = zext i1 %2242 to i8
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2243, i8* %2244, align 1
  store %struct.Memory* %loadMem_4ae9be, %struct.Memory** %MEMORY
  %loadMem_4ae9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2246 = getelementptr inbounds %struct.GPR, %struct.GPR* %2245, i32 0, i32 33
  %2247 = getelementptr inbounds %struct.Reg, %struct.Reg* %2246, i32 0, i32 0
  %PC.i2633 = bitcast %union.anon* %2247 to i64*
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2249 = getelementptr inbounds %struct.GPR, %struct.GPR* %2248, i32 0, i32 5
  %2250 = getelementptr inbounds %struct.Reg, %struct.Reg* %2249, i32 0, i32 0
  %RCX.i2634 = bitcast %union.anon* %2250 to i64*
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2252 = getelementptr inbounds %struct.GPR, %struct.GPR* %2251, i32 0, i32 15
  %2253 = getelementptr inbounds %struct.Reg, %struct.Reg* %2252, i32 0, i32 0
  %RBP.i2635 = bitcast %union.anon* %2253 to i64*
  %2254 = load i64, i64* %RBP.i2635
  %2255 = sub i64 %2254, 8
  %2256 = load i64, i64* %PC.i2633
  %2257 = add i64 %2256, 4
  store i64 %2257, i64* %PC.i2633
  %2258 = inttoptr i64 %2255 to i32*
  %2259 = load i32, i32* %2258
  %2260 = sext i32 %2259 to i64
  store i64 %2260, i64* %RCX.i2634, align 8
  store %struct.Memory* %loadMem_4ae9c1, %struct.Memory** %MEMORY
  %loadMem_4ae9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2262 = getelementptr inbounds %struct.GPR, %struct.GPR* %2261, i32 0, i32 33
  %2263 = getelementptr inbounds %struct.Reg, %struct.Reg* %2262, i32 0, i32 0
  %PC.i2631 = bitcast %union.anon* %2263 to i64*
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2265 = getelementptr inbounds %struct.GPR, %struct.GPR* %2264, i32 0, i32 5
  %2266 = getelementptr inbounds %struct.Reg, %struct.Reg* %2265, i32 0, i32 0
  %RCX.i2632 = bitcast %union.anon* %2266 to i64*
  %2267 = load i64, i64* %RCX.i2632
  %2268 = load i64, i64* %PC.i2631
  %2269 = add i64 %2268, 4
  store i64 %2269, i64* %PC.i2631
  %2270 = sext i64 %2267 to i128
  %2271 = and i128 %2270, -18446744073709551616
  %2272 = zext i64 %2267 to i128
  %2273 = or i128 %2271, %2272
  %2274 = mul i128 12, %2273
  %2275 = trunc i128 %2274 to i64
  store i64 %2275, i64* %RCX.i2632, align 8
  %2276 = sext i64 %2275 to i128
  %2277 = icmp ne i128 %2276, %2274
  %2278 = zext i1 %2277 to i8
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2278, i8* %2279, align 1
  %2280 = trunc i128 %2274 to i32
  %2281 = and i32 %2280, 255
  %2282 = call i32 @llvm.ctpop.i32(i32 %2281)
  %2283 = trunc i32 %2282 to i8
  %2284 = and i8 %2283, 1
  %2285 = xor i8 %2284, 1
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2285, i8* %2286, align 1
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2287, align 1
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2288, align 1
  %2289 = lshr i64 %2275, 63
  %2290 = trunc i64 %2289 to i8
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2290, i8* %2291, align 1
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2278, i8* %2292, align 1
  store %struct.Memory* %loadMem_4ae9c5, %struct.Memory** %MEMORY
  %loadMem_4ae9c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 33
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %PC.i2628 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 1
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RAX.i2629 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 5
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RCX.i2630 = bitcast %union.anon* %2301 to i64*
  %2302 = load i64, i64* %RAX.i2629
  %2303 = load i64, i64* %RCX.i2630
  %2304 = load i64, i64* %PC.i2628
  %2305 = add i64 %2304, 3
  store i64 %2305, i64* %PC.i2628
  %2306 = add i64 %2303, %2302
  store i64 %2306, i64* %RAX.i2629, align 8
  %2307 = icmp ult i64 %2306, %2302
  %2308 = icmp ult i64 %2306, %2303
  %2309 = or i1 %2307, %2308
  %2310 = zext i1 %2309 to i8
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2310, i8* %2311, align 1
  %2312 = trunc i64 %2306 to i32
  %2313 = and i32 %2312, 255
  %2314 = call i32 @llvm.ctpop.i32(i32 %2313)
  %2315 = trunc i32 %2314 to i8
  %2316 = and i8 %2315, 1
  %2317 = xor i8 %2316, 1
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2317, i8* %2318, align 1
  %2319 = xor i64 %2303, %2302
  %2320 = xor i64 %2319, %2306
  %2321 = lshr i64 %2320, 4
  %2322 = trunc i64 %2321 to i8
  %2323 = and i8 %2322, 1
  %2324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2323, i8* %2324, align 1
  %2325 = icmp eq i64 %2306, 0
  %2326 = zext i1 %2325 to i8
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2326, i8* %2327, align 1
  %2328 = lshr i64 %2306, 63
  %2329 = trunc i64 %2328 to i8
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2329, i8* %2330, align 1
  %2331 = lshr i64 %2302, 63
  %2332 = lshr i64 %2303, 63
  %2333 = xor i64 %2328, %2331
  %2334 = xor i64 %2328, %2332
  %2335 = add i64 %2333, %2334
  %2336 = icmp eq i64 %2335, 2
  %2337 = zext i1 %2336 to i8
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2337, i8* %2338, align 1
  store %struct.Memory* %loadMem_4ae9c9, %struct.Memory** %MEMORY
  %loadMem_4ae9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 33
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %PC.i2625 = bitcast %union.anon* %2341 to i64*
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2343 = getelementptr inbounds %struct.GPR, %struct.GPR* %2342, i32 0, i32 5
  %2344 = getelementptr inbounds %struct.Reg, %struct.Reg* %2343, i32 0, i32 0
  %RCX.i2626 = bitcast %union.anon* %2344 to i64*
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 15
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %RBP.i2627 = bitcast %union.anon* %2347 to i64*
  %2348 = load i64, i64* %RBP.i2627
  %2349 = sub i64 %2348, 12
  %2350 = load i64, i64* %PC.i2625
  %2351 = add i64 %2350, 4
  store i64 %2351, i64* %PC.i2625
  %2352 = inttoptr i64 %2349 to i32*
  %2353 = load i32, i32* %2352
  %2354 = sext i32 %2353 to i64
  store i64 %2354, i64* %RCX.i2626, align 8
  store %struct.Memory* %loadMem_4ae9cc, %struct.Memory** %MEMORY
  %loadMem_4ae9d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2356 = getelementptr inbounds %struct.GPR, %struct.GPR* %2355, i32 0, i32 33
  %2357 = getelementptr inbounds %struct.Reg, %struct.Reg* %2356, i32 0, i32 0
  %PC.i2621 = bitcast %union.anon* %2357 to i64*
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2359 = getelementptr inbounds %struct.GPR, %struct.GPR* %2358, i32 0, i32 9
  %2360 = getelementptr inbounds %struct.Reg, %struct.Reg* %2359, i32 0, i32 0
  %ESI.i2622 = bitcast %union.anon* %2360 to i32*
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2362 = getelementptr inbounds %struct.GPR, %struct.GPR* %2361, i32 0, i32 1
  %2363 = getelementptr inbounds %struct.Reg, %struct.Reg* %2362, i32 0, i32 0
  %RAX.i2623 = bitcast %union.anon* %2363 to i64*
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2365 = getelementptr inbounds %struct.GPR, %struct.GPR* %2364, i32 0, i32 5
  %2366 = getelementptr inbounds %struct.Reg, %struct.Reg* %2365, i32 0, i32 0
  %RCX.i2624 = bitcast %union.anon* %2366 to i64*
  %2367 = load i64, i64* %RAX.i2623
  %2368 = load i64, i64* %RCX.i2624
  %2369 = mul i64 %2368, 4
  %2370 = add i64 %2369, %2367
  %2371 = load i32, i32* %ESI.i2622
  %2372 = zext i32 %2371 to i64
  %2373 = load i64, i64* %PC.i2621
  %2374 = add i64 %2373, 3
  store i64 %2374, i64* %PC.i2621
  %2375 = inttoptr i64 %2370 to i32*
  store i32 %2371, i32* %2375
  store %struct.Memory* %loadMem_4ae9d0, %struct.Memory** %MEMORY
  %loadMem_4ae9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 33
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %PC.i2618 = bitcast %union.anon* %2378 to i64*
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 1
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %RAX.i2619 = bitcast %union.anon* %2381 to i64*
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 15
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %RBP.i2620 = bitcast %union.anon* %2384 to i64*
  %2385 = load i64, i64* %RBP.i2620
  %2386 = sub i64 %2385, 12
  %2387 = load i64, i64* %PC.i2618
  %2388 = add i64 %2387, 3
  store i64 %2388, i64* %PC.i2618
  %2389 = inttoptr i64 %2386 to i32*
  %2390 = load i32, i32* %2389
  %2391 = zext i32 %2390 to i64
  store i64 %2391, i64* %RAX.i2619, align 8
  store %struct.Memory* %loadMem_4ae9d3, %struct.Memory** %MEMORY
  %loadMem_4ae9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2393 = getelementptr inbounds %struct.GPR, %struct.GPR* %2392, i32 0, i32 33
  %2394 = getelementptr inbounds %struct.Reg, %struct.Reg* %2393, i32 0, i32 0
  %PC.i2616 = bitcast %union.anon* %2394 to i64*
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2396 = getelementptr inbounds %struct.GPR, %struct.GPR* %2395, i32 0, i32 1
  %2397 = getelementptr inbounds %struct.Reg, %struct.Reg* %2396, i32 0, i32 0
  %RAX.i2617 = bitcast %union.anon* %2397 to i64*
  %2398 = load i64, i64* %RAX.i2617
  %2399 = load i64, i64* %PC.i2616
  %2400 = add i64 %2399, 3
  store i64 %2400, i64* %PC.i2616
  %2401 = trunc i64 %2398 to i32
  %2402 = add i32 1, %2401
  %2403 = zext i32 %2402 to i64
  store i64 %2403, i64* %RAX.i2617, align 8
  %2404 = icmp ult i32 %2402, %2401
  %2405 = icmp ult i32 %2402, 1
  %2406 = or i1 %2404, %2405
  %2407 = zext i1 %2406 to i8
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2407, i8* %2408, align 1
  %2409 = and i32 %2402, 255
  %2410 = call i32 @llvm.ctpop.i32(i32 %2409)
  %2411 = trunc i32 %2410 to i8
  %2412 = and i8 %2411, 1
  %2413 = xor i8 %2412, 1
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2413, i8* %2414, align 1
  %2415 = xor i64 1, %2398
  %2416 = trunc i64 %2415 to i32
  %2417 = xor i32 %2416, %2402
  %2418 = lshr i32 %2417, 4
  %2419 = trunc i32 %2418 to i8
  %2420 = and i8 %2419, 1
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2420, i8* %2421, align 1
  %2422 = icmp eq i32 %2402, 0
  %2423 = zext i1 %2422 to i8
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2423, i8* %2424, align 1
  %2425 = lshr i32 %2402, 31
  %2426 = trunc i32 %2425 to i8
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2426, i8* %2427, align 1
  %2428 = lshr i32 %2401, 31
  %2429 = xor i32 %2425, %2428
  %2430 = add i32 %2429, %2425
  %2431 = icmp eq i32 %2430, 2
  %2432 = zext i1 %2431 to i8
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2432, i8* %2433, align 1
  store %struct.Memory* %loadMem_4ae9d6, %struct.Memory** %MEMORY
  %loadMem_4ae9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 33
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %PC.i2613 = bitcast %union.anon* %2436 to i64*
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 1
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %EAX.i2614 = bitcast %union.anon* %2439 to i32*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 15
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %RBP.i2615 = bitcast %union.anon* %2442 to i64*
  %2443 = load i64, i64* %RBP.i2615
  %2444 = sub i64 %2443, 12
  %2445 = load i32, i32* %EAX.i2614
  %2446 = zext i32 %2445 to i64
  %2447 = load i64, i64* %PC.i2613
  %2448 = add i64 %2447, 3
  store i64 %2448, i64* %PC.i2613
  %2449 = inttoptr i64 %2444 to i32*
  store i32 %2445, i32* %2449
  store %struct.Memory* %loadMem_4ae9d9, %struct.Memory** %MEMORY
  %loadMem_4ae9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2451 = getelementptr inbounds %struct.GPR, %struct.GPR* %2450, i32 0, i32 33
  %2452 = getelementptr inbounds %struct.Reg, %struct.Reg* %2451, i32 0, i32 0
  %PC.i2612 = bitcast %union.anon* %2452 to i64*
  %2453 = load i64, i64* %PC.i2612
  %2454 = add i64 %2453, -189
  %2455 = load i64, i64* %PC.i2612
  %2456 = add i64 %2455, 5
  store i64 %2456, i64* %PC.i2612
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2454, i64* %2457, align 8
  store %struct.Memory* %loadMem_4ae9dc, %struct.Memory** %MEMORY
  br label %block_.L_4ae91f

block_.L_4ae9e1:                                  ; preds = %block_.L_4ae91f
  %loadMem_4ae9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2459 = getelementptr inbounds %struct.GPR, %struct.GPR* %2458, i32 0, i32 33
  %2460 = getelementptr inbounds %struct.Reg, %struct.Reg* %2459, i32 0, i32 0
  %PC.i2611 = bitcast %union.anon* %2460 to i64*
  %2461 = load i64, i64* %PC.i2611
  %2462 = add i64 %2461, 5
  %2463 = load i64, i64* %PC.i2611
  %2464 = add i64 %2463, 5
  store i64 %2464, i64* %PC.i2611
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2462, i64* %2465, align 8
  store %struct.Memory* %loadMem_4ae9e1, %struct.Memory** %MEMORY
  br label %block_.L_4ae9e6

block_.L_4ae9e6:                                  ; preds = %block_.L_4ae9e1
  %loadMem_4ae9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2467 = getelementptr inbounds %struct.GPR, %struct.GPR* %2466, i32 0, i32 33
  %2468 = getelementptr inbounds %struct.Reg, %struct.Reg* %2467, i32 0, i32 0
  %PC.i2608 = bitcast %union.anon* %2468 to i64*
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2470 = getelementptr inbounds %struct.GPR, %struct.GPR* %2469, i32 0, i32 1
  %2471 = getelementptr inbounds %struct.Reg, %struct.Reg* %2470, i32 0, i32 0
  %RAX.i2609 = bitcast %union.anon* %2471 to i64*
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 15
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %RBP.i2610 = bitcast %union.anon* %2474 to i64*
  %2475 = load i64, i64* %RBP.i2610
  %2476 = sub i64 %2475, 8
  %2477 = load i64, i64* %PC.i2608
  %2478 = add i64 %2477, 3
  store i64 %2478, i64* %PC.i2608
  %2479 = inttoptr i64 %2476 to i32*
  %2480 = load i32, i32* %2479
  %2481 = zext i32 %2480 to i64
  store i64 %2481, i64* %RAX.i2609, align 8
  store %struct.Memory* %loadMem_4ae9e6, %struct.Memory** %MEMORY
  %loadMem_4ae9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2483 = getelementptr inbounds %struct.GPR, %struct.GPR* %2482, i32 0, i32 33
  %2484 = getelementptr inbounds %struct.Reg, %struct.Reg* %2483, i32 0, i32 0
  %PC.i2606 = bitcast %union.anon* %2484 to i64*
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2486 = getelementptr inbounds %struct.GPR, %struct.GPR* %2485, i32 0, i32 1
  %2487 = getelementptr inbounds %struct.Reg, %struct.Reg* %2486, i32 0, i32 0
  %RAX.i2607 = bitcast %union.anon* %2487 to i64*
  %2488 = load i64, i64* %RAX.i2607
  %2489 = load i64, i64* %PC.i2606
  %2490 = add i64 %2489, 3
  store i64 %2490, i64* %PC.i2606
  %2491 = trunc i64 %2488 to i32
  %2492 = add i32 1, %2491
  %2493 = zext i32 %2492 to i64
  store i64 %2493, i64* %RAX.i2607, align 8
  %2494 = icmp ult i32 %2492, %2491
  %2495 = icmp ult i32 %2492, 1
  %2496 = or i1 %2494, %2495
  %2497 = zext i1 %2496 to i8
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2497, i8* %2498, align 1
  %2499 = and i32 %2492, 255
  %2500 = call i32 @llvm.ctpop.i32(i32 %2499)
  %2501 = trunc i32 %2500 to i8
  %2502 = and i8 %2501, 1
  %2503 = xor i8 %2502, 1
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2503, i8* %2504, align 1
  %2505 = xor i64 1, %2488
  %2506 = trunc i64 %2505 to i32
  %2507 = xor i32 %2506, %2492
  %2508 = lshr i32 %2507, 4
  %2509 = trunc i32 %2508 to i8
  %2510 = and i8 %2509, 1
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2510, i8* %2511, align 1
  %2512 = icmp eq i32 %2492, 0
  %2513 = zext i1 %2512 to i8
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2513, i8* %2514, align 1
  %2515 = lshr i32 %2492, 31
  %2516 = trunc i32 %2515 to i8
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2516, i8* %2517, align 1
  %2518 = lshr i32 %2491, 31
  %2519 = xor i32 %2515, %2518
  %2520 = add i32 %2519, %2515
  %2521 = icmp eq i32 %2520, 2
  %2522 = zext i1 %2521 to i8
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2522, i8* %2523, align 1
  store %struct.Memory* %loadMem_4ae9e9, %struct.Memory** %MEMORY
  %loadMem_4ae9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 33
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %PC.i2603 = bitcast %union.anon* %2526 to i64*
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 1
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %EAX.i2604 = bitcast %union.anon* %2529 to i32*
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2531 = getelementptr inbounds %struct.GPR, %struct.GPR* %2530, i32 0, i32 15
  %2532 = getelementptr inbounds %struct.Reg, %struct.Reg* %2531, i32 0, i32 0
  %RBP.i2605 = bitcast %union.anon* %2532 to i64*
  %2533 = load i64, i64* %RBP.i2605
  %2534 = sub i64 %2533, 8
  %2535 = load i32, i32* %EAX.i2604
  %2536 = zext i32 %2535 to i64
  %2537 = load i64, i64* %PC.i2603
  %2538 = add i64 %2537, 3
  store i64 %2538, i64* %PC.i2603
  %2539 = inttoptr i64 %2534 to i32*
  store i32 %2535, i32* %2539
  store %struct.Memory* %loadMem_4ae9ec, %struct.Memory** %MEMORY
  %loadMem_4ae9ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 33
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %PC.i2602 = bitcast %union.anon* %2542 to i64*
  %2543 = load i64, i64* %PC.i2602
  %2544 = add i64 %2543, -235
  %2545 = load i64, i64* %PC.i2602
  %2546 = add i64 %2545, 5
  store i64 %2546, i64* %PC.i2602
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2544, i64* %2547, align 8
  store %struct.Memory* %loadMem_4ae9ef, %struct.Memory** %MEMORY
  br label %block_.L_4ae904

block_.L_4ae9f4:                                  ; preds = %block_.L_4ae904
  %loadMem_4ae9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 33
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %PC.i2601 = bitcast %union.anon* %2550 to i64*
  %2551 = load i64, i64* %PC.i2601
  %2552 = add i64 %2551, 5
  %2553 = load i64, i64* %PC.i2601
  %2554 = add i64 %2553, 5
  store i64 %2554, i64* %PC.i2601
  %2555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2552, i64* %2555, align 8
  store %struct.Memory* %loadMem_4ae9f4, %struct.Memory** %MEMORY
  br label %block_.L_4ae9f9

block_.L_4ae9f9:                                  ; preds = %block_.L_4ae9f4
  %loadMem_4ae9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 33
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %PC.i2598 = bitcast %union.anon* %2558 to i64*
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2560 = getelementptr inbounds %struct.GPR, %struct.GPR* %2559, i32 0, i32 1
  %2561 = getelementptr inbounds %struct.Reg, %struct.Reg* %2560, i32 0, i32 0
  %RAX.i2599 = bitcast %union.anon* %2561 to i64*
  %2562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2563 = getelementptr inbounds %struct.GPR, %struct.GPR* %2562, i32 0, i32 15
  %2564 = getelementptr inbounds %struct.Reg, %struct.Reg* %2563, i32 0, i32 0
  %RBP.i2600 = bitcast %union.anon* %2564 to i64*
  %2565 = load i64, i64* %RBP.i2600
  %2566 = sub i64 %2565, 4
  %2567 = load i64, i64* %PC.i2598
  %2568 = add i64 %2567, 3
  store i64 %2568, i64* %PC.i2598
  %2569 = inttoptr i64 %2566 to i32*
  %2570 = load i32, i32* %2569
  %2571 = zext i32 %2570 to i64
  store i64 %2571, i64* %RAX.i2599, align 8
  store %struct.Memory* %loadMem_4ae9f9, %struct.Memory** %MEMORY
  %loadMem_4ae9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2573 = getelementptr inbounds %struct.GPR, %struct.GPR* %2572, i32 0, i32 33
  %2574 = getelementptr inbounds %struct.Reg, %struct.Reg* %2573, i32 0, i32 0
  %PC.i2596 = bitcast %union.anon* %2574 to i64*
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2576 = getelementptr inbounds %struct.GPR, %struct.GPR* %2575, i32 0, i32 1
  %2577 = getelementptr inbounds %struct.Reg, %struct.Reg* %2576, i32 0, i32 0
  %RAX.i2597 = bitcast %union.anon* %2577 to i64*
  %2578 = load i64, i64* %RAX.i2597
  %2579 = load i64, i64* %PC.i2596
  %2580 = add i64 %2579, 3
  store i64 %2580, i64* %PC.i2596
  %2581 = trunc i64 %2578 to i32
  %2582 = add i32 1, %2581
  %2583 = zext i32 %2582 to i64
  store i64 %2583, i64* %RAX.i2597, align 8
  %2584 = icmp ult i32 %2582, %2581
  %2585 = icmp ult i32 %2582, 1
  %2586 = or i1 %2584, %2585
  %2587 = zext i1 %2586 to i8
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2587, i8* %2588, align 1
  %2589 = and i32 %2582, 255
  %2590 = call i32 @llvm.ctpop.i32(i32 %2589)
  %2591 = trunc i32 %2590 to i8
  %2592 = and i8 %2591, 1
  %2593 = xor i8 %2592, 1
  %2594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2593, i8* %2594, align 1
  %2595 = xor i64 1, %2578
  %2596 = trunc i64 %2595 to i32
  %2597 = xor i32 %2596, %2582
  %2598 = lshr i32 %2597, 4
  %2599 = trunc i32 %2598 to i8
  %2600 = and i8 %2599, 1
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2600, i8* %2601, align 1
  %2602 = icmp eq i32 %2582, 0
  %2603 = zext i1 %2602 to i8
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2603, i8* %2604, align 1
  %2605 = lshr i32 %2582, 31
  %2606 = trunc i32 %2605 to i8
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2606, i8* %2607, align 1
  %2608 = lshr i32 %2581, 31
  %2609 = xor i32 %2605, %2608
  %2610 = add i32 %2609, %2605
  %2611 = icmp eq i32 %2610, 2
  %2612 = zext i1 %2611 to i8
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2612, i8* %2613, align 1
  store %struct.Memory* %loadMem_4ae9fc, %struct.Memory** %MEMORY
  %loadMem_4ae9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2615 = getelementptr inbounds %struct.GPR, %struct.GPR* %2614, i32 0, i32 33
  %2616 = getelementptr inbounds %struct.Reg, %struct.Reg* %2615, i32 0, i32 0
  %PC.i2593 = bitcast %union.anon* %2616 to i64*
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 1
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %EAX.i2594 = bitcast %union.anon* %2619 to i32*
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2621 = getelementptr inbounds %struct.GPR, %struct.GPR* %2620, i32 0, i32 15
  %2622 = getelementptr inbounds %struct.Reg, %struct.Reg* %2621, i32 0, i32 0
  %RBP.i2595 = bitcast %union.anon* %2622 to i64*
  %2623 = load i64, i64* %RBP.i2595
  %2624 = sub i64 %2623, 4
  %2625 = load i32, i32* %EAX.i2594
  %2626 = zext i32 %2625 to i64
  %2627 = load i64, i64* %PC.i2593
  %2628 = add i64 %2627, 3
  store i64 %2628, i64* %PC.i2593
  %2629 = inttoptr i64 %2624 to i32*
  store i32 %2625, i32* %2629
  store %struct.Memory* %loadMem_4ae9ff, %struct.Memory** %MEMORY
  %loadMem_4aea02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2631 = getelementptr inbounds %struct.GPR, %struct.GPR* %2630, i32 0, i32 33
  %2632 = getelementptr inbounds %struct.Reg, %struct.Reg* %2631, i32 0, i32 0
  %PC.i2592 = bitcast %union.anon* %2632 to i64*
  %2633 = load i64, i64* %PC.i2592
  %2634 = add i64 %2633, -281
  %2635 = load i64, i64* %PC.i2592
  %2636 = add i64 %2635, 5
  store i64 %2636, i64* %PC.i2592
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2634, i64* %2637, align 8
  store %struct.Memory* %loadMem_4aea02, %struct.Memory** %MEMORY
  br label %block_.L_4ae8e9

block_.L_4aea07:                                  ; preds = %block_.L_4ae8e9
  %loadMem_4aea07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2639 = getelementptr inbounds %struct.GPR, %struct.GPR* %2638, i32 0, i32 33
  %2640 = getelementptr inbounds %struct.Reg, %struct.Reg* %2639, i32 0, i32 0
  %PC.i2590 = bitcast %union.anon* %2640 to i64*
  %2641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2642 = getelementptr inbounds %struct.GPR, %struct.GPR* %2641, i32 0, i32 15
  %2643 = getelementptr inbounds %struct.Reg, %struct.Reg* %2642, i32 0, i32 0
  %RBP.i2591 = bitcast %union.anon* %2643 to i64*
  %2644 = load i64, i64* %RBP.i2591
  %2645 = sub i64 %2644, 4
  %2646 = load i64, i64* %PC.i2590
  %2647 = add i64 %2646, 7
  store i64 %2647, i64* %PC.i2590
  %2648 = inttoptr i64 %2645 to i32*
  store i32 0, i32* %2648
  store %struct.Memory* %loadMem_4aea07, %struct.Memory** %MEMORY
  br label %block_.L_4aea0e

block_.L_4aea0e:                                  ; preds = %block_.L_4aeee5, %block_.L_4aea07
  %loadMem_4aea0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2650 = getelementptr inbounds %struct.GPR, %struct.GPR* %2649, i32 0, i32 33
  %2651 = getelementptr inbounds %struct.Reg, %struct.Reg* %2650, i32 0, i32 0
  %PC.i2587 = bitcast %union.anon* %2651 to i64*
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2653 = getelementptr inbounds %struct.GPR, %struct.GPR* %2652, i32 0, i32 1
  %2654 = getelementptr inbounds %struct.Reg, %struct.Reg* %2653, i32 0, i32 0
  %RAX.i2588 = bitcast %union.anon* %2654 to i64*
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2656 = getelementptr inbounds %struct.GPR, %struct.GPR* %2655, i32 0, i32 15
  %2657 = getelementptr inbounds %struct.Reg, %struct.Reg* %2656, i32 0, i32 0
  %RBP.i2589 = bitcast %union.anon* %2657 to i64*
  %2658 = load i64, i64* %RBP.i2589
  %2659 = sub i64 %2658, 4
  %2660 = load i64, i64* %PC.i2587
  %2661 = add i64 %2660, 3
  store i64 %2661, i64* %PC.i2587
  %2662 = inttoptr i64 %2659 to i32*
  %2663 = load i32, i32* %2662
  %2664 = zext i32 %2663 to i64
  store i64 %2664, i64* %RAX.i2588, align 8
  store %struct.Memory* %loadMem_4aea0e, %struct.Memory** %MEMORY
  %loadMem_4aea11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 33
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %PC.i2585 = bitcast %union.anon* %2667 to i64*
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 1
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %EAX.i2586 = bitcast %union.anon* %2670 to i32*
  %2671 = load i32, i32* %EAX.i2586
  %2672 = zext i32 %2671 to i64
  %2673 = load i64, i64* %PC.i2585
  %2674 = add i64 %2673, 7
  store i64 %2674, i64* %PC.i2585
  %2675 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %2676 = sub i32 %2671, %2675
  %2677 = icmp ult i32 %2671, %2675
  %2678 = zext i1 %2677 to i8
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2678, i8* %2679, align 1
  %2680 = and i32 %2676, 255
  %2681 = call i32 @llvm.ctpop.i32(i32 %2680)
  %2682 = trunc i32 %2681 to i8
  %2683 = and i8 %2682, 1
  %2684 = xor i8 %2683, 1
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2684, i8* %2685, align 1
  %2686 = xor i32 %2675, %2671
  %2687 = xor i32 %2686, %2676
  %2688 = lshr i32 %2687, 4
  %2689 = trunc i32 %2688 to i8
  %2690 = and i8 %2689, 1
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2690, i8* %2691, align 1
  %2692 = icmp eq i32 %2676, 0
  %2693 = zext i1 %2692 to i8
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2693, i8* %2694, align 1
  %2695 = lshr i32 %2676, 31
  %2696 = trunc i32 %2695 to i8
  %2697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2696, i8* %2697, align 1
  %2698 = lshr i32 %2671, 31
  %2699 = lshr i32 %2675, 31
  %2700 = xor i32 %2699, %2698
  %2701 = xor i32 %2695, %2698
  %2702 = add i32 %2701, %2700
  %2703 = icmp eq i32 %2702, 2
  %2704 = zext i1 %2703 to i8
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2704, i8* %2705, align 1
  store %struct.Memory* %loadMem_4aea11, %struct.Memory** %MEMORY
  %loadMem_4aea18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2707 = getelementptr inbounds %struct.GPR, %struct.GPR* %2706, i32 0, i32 33
  %2708 = getelementptr inbounds %struct.Reg, %struct.Reg* %2707, i32 0, i32 0
  %PC.i2584 = bitcast %union.anon* %2708 to i64*
  %2709 = load i64, i64* %PC.i2584
  %2710 = add i64 %2709, 1243
  %2711 = load i64, i64* %PC.i2584
  %2712 = add i64 %2711, 6
  %2713 = load i64, i64* %PC.i2584
  %2714 = add i64 %2713, 6
  store i64 %2714, i64* %PC.i2584
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2716 = load i8, i8* %2715, align 1
  %2717 = icmp ne i8 %2716, 0
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2719 = load i8, i8* %2718, align 1
  %2720 = icmp ne i8 %2719, 0
  %2721 = xor i1 %2717, %2720
  %2722 = xor i1 %2721, true
  %2723 = zext i1 %2722 to i8
  store i8 %2723, i8* %BRANCH_TAKEN, align 1
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2725 = select i1 %2721, i64 %2712, i64 %2710
  store i64 %2725, i64* %2724, align 8
  store %struct.Memory* %loadMem_4aea18, %struct.Memory** %MEMORY
  %loadBr_4aea18 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aea18 = icmp eq i8 %loadBr_4aea18, 1
  br i1 %cmpBr_4aea18, label %block_.L_4aeef3, label %block_4aea1e

block_4aea1e:                                     ; preds = %block_.L_4aea0e
  %loadMem_4aea1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2727 = getelementptr inbounds %struct.GPR, %struct.GPR* %2726, i32 0, i32 33
  %2728 = getelementptr inbounds %struct.Reg, %struct.Reg* %2727, i32 0, i32 0
  %PC.i2582 = bitcast %union.anon* %2728 to i64*
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2730 = getelementptr inbounds %struct.GPR, %struct.GPR* %2729, i32 0, i32 15
  %2731 = getelementptr inbounds %struct.Reg, %struct.Reg* %2730, i32 0, i32 0
  %RBP.i2583 = bitcast %union.anon* %2731 to i64*
  %2732 = load i64, i64* %RBP.i2583
  %2733 = sub i64 %2732, 8
  %2734 = load i64, i64* %PC.i2582
  %2735 = add i64 %2734, 7
  store i64 %2735, i64* %PC.i2582
  %2736 = inttoptr i64 %2733 to i32*
  store i32 0, i32* %2736
  store %struct.Memory* %loadMem_4aea1e, %struct.Memory** %MEMORY
  br label %block_.L_4aea25

block_.L_4aea25:                                  ; preds = %block_.L_4aeed2, %block_4aea1e
  %loadMem_4aea25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 33
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %PC.i2579 = bitcast %union.anon* %2739 to i64*
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2741 = getelementptr inbounds %struct.GPR, %struct.GPR* %2740, i32 0, i32 1
  %2742 = getelementptr inbounds %struct.Reg, %struct.Reg* %2741, i32 0, i32 0
  %RAX.i2580 = bitcast %union.anon* %2742 to i64*
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2744 = getelementptr inbounds %struct.GPR, %struct.GPR* %2743, i32 0, i32 15
  %2745 = getelementptr inbounds %struct.Reg, %struct.Reg* %2744, i32 0, i32 0
  %RBP.i2581 = bitcast %union.anon* %2745 to i64*
  %2746 = load i64, i64* %RBP.i2581
  %2747 = sub i64 %2746, 8
  %2748 = load i64, i64* %PC.i2579
  %2749 = add i64 %2748, 3
  store i64 %2749, i64* %PC.i2579
  %2750 = inttoptr i64 %2747 to i32*
  %2751 = load i32, i32* %2750
  %2752 = zext i32 %2751 to i64
  store i64 %2752, i64* %RAX.i2580, align 8
  store %struct.Memory* %loadMem_4aea25, %struct.Memory** %MEMORY
  %loadMem_4aea28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2754 = getelementptr inbounds %struct.GPR, %struct.GPR* %2753, i32 0, i32 33
  %2755 = getelementptr inbounds %struct.Reg, %struct.Reg* %2754, i32 0, i32 0
  %PC.i2577 = bitcast %union.anon* %2755 to i64*
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2757 = getelementptr inbounds %struct.GPR, %struct.GPR* %2756, i32 0, i32 1
  %2758 = getelementptr inbounds %struct.Reg, %struct.Reg* %2757, i32 0, i32 0
  %EAX.i2578 = bitcast %union.anon* %2758 to i32*
  %2759 = load i32, i32* %EAX.i2578
  %2760 = zext i32 %2759 to i64
  %2761 = load i64, i64* %PC.i2577
  %2762 = add i64 %2761, 7
  store i64 %2762, i64* %PC.i2577
  %2763 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %2764 = sub i32 %2759, %2763
  %2765 = icmp ult i32 %2759, %2763
  %2766 = zext i1 %2765 to i8
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2766, i8* %2767, align 1
  %2768 = and i32 %2764, 255
  %2769 = call i32 @llvm.ctpop.i32(i32 %2768)
  %2770 = trunc i32 %2769 to i8
  %2771 = and i8 %2770, 1
  %2772 = xor i8 %2771, 1
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2772, i8* %2773, align 1
  %2774 = xor i32 %2763, %2759
  %2775 = xor i32 %2774, %2764
  %2776 = lshr i32 %2775, 4
  %2777 = trunc i32 %2776 to i8
  %2778 = and i8 %2777, 1
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2778, i8* %2779, align 1
  %2780 = icmp eq i32 %2764, 0
  %2781 = zext i1 %2780 to i8
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2781, i8* %2782, align 1
  %2783 = lshr i32 %2764, 31
  %2784 = trunc i32 %2783 to i8
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2784, i8* %2785, align 1
  %2786 = lshr i32 %2759, 31
  %2787 = lshr i32 %2763, 31
  %2788 = xor i32 %2787, %2786
  %2789 = xor i32 %2783, %2786
  %2790 = add i32 %2789, %2788
  %2791 = icmp eq i32 %2790, 2
  %2792 = zext i1 %2791 to i8
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2792, i8* %2793, align 1
  store %struct.Memory* %loadMem_4aea28, %struct.Memory** %MEMORY
  %loadMem_4aea2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 33
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %PC.i2576 = bitcast %union.anon* %2796 to i64*
  %2797 = load i64, i64* %PC.i2576
  %2798 = add i64 %2797, 1201
  %2799 = load i64, i64* %PC.i2576
  %2800 = add i64 %2799, 6
  %2801 = load i64, i64* %PC.i2576
  %2802 = add i64 %2801, 6
  store i64 %2802, i64* %PC.i2576
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2804 = load i8, i8* %2803, align 1
  %2805 = icmp ne i8 %2804, 0
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2807 = load i8, i8* %2806, align 1
  %2808 = icmp ne i8 %2807, 0
  %2809 = xor i1 %2805, %2808
  %2810 = xor i1 %2809, true
  %2811 = zext i1 %2810 to i8
  store i8 %2811, i8* %BRANCH_TAKEN, align 1
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2813 = select i1 %2809, i64 %2800, i64 %2798
  store i64 %2813, i64* %2812, align 8
  store %struct.Memory* %loadMem_4aea2f, %struct.Memory** %MEMORY
  %loadBr_4aea2f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aea2f = icmp eq i8 %loadBr_4aea2f, 1
  br i1 %cmpBr_4aea2f, label %block_.L_4aeee0, label %block_4aea35

block_4aea35:                                     ; preds = %block_.L_4aea25
  %loadMem_4aea35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2815 = getelementptr inbounds %struct.GPR, %struct.GPR* %2814, i32 0, i32 33
  %2816 = getelementptr inbounds %struct.Reg, %struct.Reg* %2815, i32 0, i32 0
  %PC.i2574 = bitcast %union.anon* %2816 to i64*
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2818 = getelementptr inbounds %struct.GPR, %struct.GPR* %2817, i32 0, i32 1
  %2819 = getelementptr inbounds %struct.Reg, %struct.Reg* %2818, i32 0, i32 0
  %RAX.i2575 = bitcast %union.anon* %2819 to i64*
  %2820 = load i64, i64* %PC.i2574
  %2821 = add i64 %2820, 8
  store i64 %2821, i64* %PC.i2574
  %2822 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %2822, i64* %RAX.i2575, align 8
  store %struct.Memory* %loadMem_4aea35, %struct.Memory** %MEMORY
  %loadMem_4aea3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2824 = getelementptr inbounds %struct.GPR, %struct.GPR* %2823, i32 0, i32 33
  %2825 = getelementptr inbounds %struct.Reg, %struct.Reg* %2824, i32 0, i32 0
  %PC.i2571 = bitcast %union.anon* %2825 to i64*
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 5
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %RCX.i2572 = bitcast %union.anon* %2828 to i64*
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 15
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %RBP.i2573 = bitcast %union.anon* %2831 to i64*
  %2832 = load i64, i64* %RBP.i2573
  %2833 = sub i64 %2832, 8
  %2834 = load i64, i64* %PC.i2571
  %2835 = add i64 %2834, 4
  store i64 %2835, i64* %PC.i2571
  %2836 = inttoptr i64 %2833 to i32*
  %2837 = load i32, i32* %2836
  %2838 = sext i32 %2837 to i64
  store i64 %2838, i64* %RCX.i2572, align 8
  store %struct.Memory* %loadMem_4aea3d, %struct.Memory** %MEMORY
  %loadMem_4aea41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2840 = getelementptr inbounds %struct.GPR, %struct.GPR* %2839, i32 0, i32 33
  %2841 = getelementptr inbounds %struct.Reg, %struct.Reg* %2840, i32 0, i32 0
  %PC.i2568 = bitcast %union.anon* %2841 to i64*
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 1
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %RAX.i2569 = bitcast %union.anon* %2844 to i64*
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2846 = getelementptr inbounds %struct.GPR, %struct.GPR* %2845, i32 0, i32 5
  %2847 = getelementptr inbounds %struct.Reg, %struct.Reg* %2846, i32 0, i32 0
  %RCX.i2570 = bitcast %union.anon* %2847 to i64*
  %2848 = load i64, i64* %RAX.i2569
  %2849 = load i64, i64* %RCX.i2570
  %2850 = mul i64 %2849, 8
  %2851 = add i64 %2850, %2848
  %2852 = load i64, i64* %PC.i2568
  %2853 = add i64 %2852, 4
  store i64 %2853, i64* %PC.i2568
  %2854 = inttoptr i64 %2851 to i64*
  %2855 = load i64, i64* %2854
  store i64 %2855, i64* %RAX.i2569, align 8
  store %struct.Memory* %loadMem_4aea41, %struct.Memory** %MEMORY
  %loadMem_4aea45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2857 = getelementptr inbounds %struct.GPR, %struct.GPR* %2856, i32 0, i32 33
  %2858 = getelementptr inbounds %struct.Reg, %struct.Reg* %2857, i32 0, i32 0
  %PC.i2565 = bitcast %union.anon* %2858 to i64*
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2860 = getelementptr inbounds %struct.GPR, %struct.GPR* %2859, i32 0, i32 1
  %2861 = getelementptr inbounds %struct.Reg, %struct.Reg* %2860, i32 0, i32 0
  %RAX.i2566 = bitcast %union.anon* %2861 to i64*
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2863 = getelementptr inbounds %struct.GPR, %struct.GPR* %2862, i32 0, i32 7
  %2864 = getelementptr inbounds %struct.Reg, %struct.Reg* %2863, i32 0, i32 0
  %RDX.i2567 = bitcast %union.anon* %2864 to i64*
  %2865 = load i64, i64* %RAX.i2566
  %2866 = add i64 %2865, 4
  %2867 = load i64, i64* %PC.i2565
  %2868 = add i64 %2867, 3
  store i64 %2868, i64* %PC.i2565
  %2869 = inttoptr i64 %2866 to i32*
  %2870 = load i32, i32* %2869
  %2871 = zext i32 %2870 to i64
  store i64 %2871, i64* %RDX.i2567, align 8
  store %struct.Memory* %loadMem_4aea45, %struct.Memory** %MEMORY
  %loadMem_4aea48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2873 = getelementptr inbounds %struct.GPR, %struct.GPR* %2872, i32 0, i32 33
  %2874 = getelementptr inbounds %struct.Reg, %struct.Reg* %2873, i32 0, i32 0
  %PC.i2563 = bitcast %union.anon* %2874 to i64*
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2876 = getelementptr inbounds %struct.GPR, %struct.GPR* %2875, i32 0, i32 1
  %2877 = getelementptr inbounds %struct.Reg, %struct.Reg* %2876, i32 0, i32 0
  %RAX.i2564 = bitcast %union.anon* %2877 to i64*
  %2878 = load i64, i64* %PC.i2563
  %2879 = add i64 %2878, 8
  store i64 %2879, i64* %PC.i2563
  %2880 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %2880, i64* %RAX.i2564, align 8
  store %struct.Memory* %loadMem_4aea48, %struct.Memory** %MEMORY
  %loadMem_4aea50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 33
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %PC.i2560 = bitcast %union.anon* %2883 to i64*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 5
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %RCX.i2561 = bitcast %union.anon* %2886 to i64*
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2888 = getelementptr inbounds %struct.GPR, %struct.GPR* %2887, i32 0, i32 15
  %2889 = getelementptr inbounds %struct.Reg, %struct.Reg* %2888, i32 0, i32 0
  %RBP.i2562 = bitcast %union.anon* %2889 to i64*
  %2890 = load i64, i64* %RBP.i2562
  %2891 = sub i64 %2890, 4
  %2892 = load i64, i64* %PC.i2560
  %2893 = add i64 %2892, 4
  store i64 %2893, i64* %PC.i2560
  %2894 = inttoptr i64 %2891 to i32*
  %2895 = load i32, i32* %2894
  %2896 = sext i32 %2895 to i64
  store i64 %2896, i64* %RCX.i2561, align 8
  store %struct.Memory* %loadMem_4aea50, %struct.Memory** %MEMORY
  %loadMem_4aea54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 33
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %PC.i2557 = bitcast %union.anon* %2899 to i64*
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 1
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %RAX.i2558 = bitcast %union.anon* %2902 to i64*
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 5
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %RCX.i2559 = bitcast %union.anon* %2905 to i64*
  %2906 = load i64, i64* %RAX.i2558
  %2907 = load i64, i64* %RCX.i2559
  %2908 = mul i64 %2907, 8
  %2909 = add i64 %2908, %2906
  %2910 = load i64, i64* %PC.i2557
  %2911 = add i64 %2910, 4
  store i64 %2911, i64* %PC.i2557
  %2912 = inttoptr i64 %2909 to i64*
  %2913 = load i64, i64* %2912
  store i64 %2913, i64* %RAX.i2558, align 8
  store %struct.Memory* %loadMem_4aea54, %struct.Memory** %MEMORY
  %loadMem_4aea58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 33
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %PC.i2554 = bitcast %union.anon* %2916 to i64*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 1
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %RAX.i2555 = bitcast %union.anon* %2919 to i64*
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 7
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %RDX.i2556 = bitcast %union.anon* %2922 to i64*
  %2923 = load i64, i64* %RDX.i2556
  %2924 = load i64, i64* %RAX.i2555
  %2925 = add i64 %2924, 4
  %2926 = load i64, i64* %PC.i2554
  %2927 = add i64 %2926, 3
  store i64 %2927, i64* %PC.i2554
  %2928 = trunc i64 %2923 to i32
  %2929 = inttoptr i64 %2925 to i32*
  %2930 = load i32, i32* %2929
  %2931 = sub i32 %2928, %2930
  %2932 = zext i32 %2931 to i64
  store i64 %2932, i64* %RDX.i2556, align 8
  %2933 = icmp ult i32 %2928, %2930
  %2934 = zext i1 %2933 to i8
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2934, i8* %2935, align 1
  %2936 = and i32 %2931, 255
  %2937 = call i32 @llvm.ctpop.i32(i32 %2936)
  %2938 = trunc i32 %2937 to i8
  %2939 = and i8 %2938, 1
  %2940 = xor i8 %2939, 1
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2940, i8* %2941, align 1
  %2942 = xor i32 %2930, %2928
  %2943 = xor i32 %2942, %2931
  %2944 = lshr i32 %2943, 4
  %2945 = trunc i32 %2944 to i8
  %2946 = and i8 %2945, 1
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2946, i8* %2947, align 1
  %2948 = icmp eq i32 %2931, 0
  %2949 = zext i1 %2948 to i8
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2949, i8* %2950, align 1
  %2951 = lshr i32 %2931, 31
  %2952 = trunc i32 %2951 to i8
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2952, i8* %2953, align 1
  %2954 = lshr i32 %2928, 31
  %2955 = lshr i32 %2930, 31
  %2956 = xor i32 %2955, %2954
  %2957 = xor i32 %2951, %2954
  %2958 = add i32 %2957, %2956
  %2959 = icmp eq i32 %2958, 2
  %2960 = zext i1 %2959 to i8
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2960, i8* %2961, align 1
  store %struct.Memory* %loadMem_4aea58, %struct.Memory** %MEMORY
  %loadMem_4aea5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2963 = getelementptr inbounds %struct.GPR, %struct.GPR* %2962, i32 0, i32 33
  %2964 = getelementptr inbounds %struct.Reg, %struct.Reg* %2963, i32 0, i32 0
  %PC.i2552 = bitcast %union.anon* %2964 to i64*
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 7
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %EDX.i2553 = bitcast %union.anon* %2967 to i32*
  %2968 = load i32, i32* %EDX.i2553
  %2969 = zext i32 %2968 to i64
  %2970 = load i64, i64* %PC.i2552
  %2971 = add i64 %2970, 3
  store i64 %2971, i64* %PC.i2552
  %2972 = sub i32 %2968, -128
  %2973 = icmp ult i32 %2968, -128
  %2974 = zext i1 %2973 to i8
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2974, i8* %2975, align 1
  %2976 = and i32 %2972, 255
  %2977 = call i32 @llvm.ctpop.i32(i32 %2976)
  %2978 = trunc i32 %2977 to i8
  %2979 = and i8 %2978, 1
  %2980 = xor i8 %2979, 1
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2980, i8* %2981, align 1
  %2982 = xor i64 -128, %2969
  %2983 = trunc i64 %2982 to i32
  %2984 = xor i32 %2983, %2972
  %2985 = lshr i32 %2984, 4
  %2986 = trunc i32 %2985 to i8
  %2987 = and i8 %2986, 1
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2987, i8* %2988, align 1
  %2989 = icmp eq i32 %2972, 0
  %2990 = zext i1 %2989 to i8
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2990, i8* %2991, align 1
  %2992 = lshr i32 %2972, 31
  %2993 = trunc i32 %2992 to i8
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2993, i8* %2994, align 1
  %2995 = lshr i32 %2968, 31
  %2996 = xor i32 1, %2995
  %2997 = xor i32 %2992, %2995
  %2998 = add i32 %2997, %2996
  %2999 = icmp eq i32 %2998, 2
  %3000 = zext i1 %2999 to i8
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3000, i8* %3001, align 1
  store %struct.Memory* %loadMem_4aea5b, %struct.Memory** %MEMORY
  %loadMem_4aea5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 33
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %PC.i2551 = bitcast %union.anon* %3004 to i64*
  %3005 = load i64, i64* %PC.i2551
  %3006 = add i64 %3005, 22
  %3007 = load i64, i64* %PC.i2551
  %3008 = add i64 %3007, 6
  %3009 = load i64, i64* %PC.i2551
  %3010 = add i64 %3009, 6
  store i64 %3010, i64* %PC.i2551
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3012 = load i8, i8* %3011, align 1
  %3013 = icmp ne i8 %3012, 0
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3015 = load i8, i8* %3014, align 1
  %3016 = icmp ne i8 %3015, 0
  %3017 = xor i1 %3013, %3016
  %3018 = xor i1 %3017, true
  %3019 = zext i1 %3018 to i8
  store i8 %3019, i8* %BRANCH_TAKEN, align 1
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3021 = select i1 %3017, i64 %3008, i64 %3006
  store i64 %3021, i64* %3020, align 8
  store %struct.Memory* %loadMem_4aea5e, %struct.Memory** %MEMORY
  %loadBr_4aea5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aea5e = icmp eq i8 %loadBr_4aea5e, 1
  br i1 %cmpBr_4aea5e, label %block_.L_4aea74, label %block_4aea64

block_4aea64:                                     ; preds = %block_4aea35
  %loadMem_4aea64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3023 = getelementptr inbounds %struct.GPR, %struct.GPR* %3022, i32 0, i32 33
  %3024 = getelementptr inbounds %struct.Reg, %struct.Reg* %3023, i32 0, i32 0
  %PC.i2549 = bitcast %union.anon* %3024 to i64*
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3026 = getelementptr inbounds %struct.GPR, %struct.GPR* %3025, i32 0, i32 1
  %3027 = getelementptr inbounds %struct.Reg, %struct.Reg* %3026, i32 0, i32 0
  %RAX.i2550 = bitcast %union.anon* %3027 to i64*
  %3028 = load i64, i64* %PC.i2549
  %3029 = add i64 %3028, 5
  store i64 %3029, i64* %PC.i2549
  store i64 4294967168, i64* %RAX.i2550, align 8
  store %struct.Memory* %loadMem_4aea64, %struct.Memory** %MEMORY
  %loadMem_4aea69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3031 = getelementptr inbounds %struct.GPR, %struct.GPR* %3030, i32 0, i32 33
  %3032 = getelementptr inbounds %struct.Reg, %struct.Reg* %3031, i32 0, i32 0
  %PC.i2546 = bitcast %union.anon* %3032 to i64*
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3034 = getelementptr inbounds %struct.GPR, %struct.GPR* %3033, i32 0, i32 1
  %3035 = getelementptr inbounds %struct.Reg, %struct.Reg* %3034, i32 0, i32 0
  %EAX.i2547 = bitcast %union.anon* %3035 to i32*
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3037 = getelementptr inbounds %struct.GPR, %struct.GPR* %3036, i32 0, i32 15
  %3038 = getelementptr inbounds %struct.Reg, %struct.Reg* %3037, i32 0, i32 0
  %RBP.i2548 = bitcast %union.anon* %3038 to i64*
  %3039 = load i64, i64* %RBP.i2548
  %3040 = sub i64 %3039, 35424
  %3041 = load i32, i32* %EAX.i2547
  %3042 = zext i32 %3041 to i64
  %3043 = load i64, i64* %PC.i2546
  %3044 = add i64 %3043, 6
  store i64 %3044, i64* %PC.i2546
  %3045 = inttoptr i64 %3040 to i32*
  store i32 %3041, i32* %3045
  store %struct.Memory* %loadMem_4aea69, %struct.Memory** %MEMORY
  %loadMem_4aea6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 33
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %PC.i2545 = bitcast %union.anon* %3048 to i64*
  %3049 = load i64, i64* %PC.i2545
  %3050 = add i64 %3049, 124
  %3051 = load i64, i64* %PC.i2545
  %3052 = add i64 %3051, 5
  store i64 %3052, i64* %PC.i2545
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3050, i64* %3053, align 8
  store %struct.Memory* %loadMem_4aea6f, %struct.Memory** %MEMORY
  br label %block_.L_4aeaeb

block_.L_4aea74:                                  ; preds = %block_4aea35
  %loadMem_4aea74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 33
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %PC.i2543 = bitcast %union.anon* %3056 to i64*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 1
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %RAX.i2544 = bitcast %union.anon* %3059 to i64*
  %3060 = load i64, i64* %PC.i2543
  %3061 = add i64 %3060, 8
  store i64 %3061, i64* %PC.i2543
  %3062 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %3062, i64* %RAX.i2544, align 8
  store %struct.Memory* %loadMem_4aea74, %struct.Memory** %MEMORY
  %loadMem_4aea7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3064 = getelementptr inbounds %struct.GPR, %struct.GPR* %3063, i32 0, i32 33
  %3065 = getelementptr inbounds %struct.Reg, %struct.Reg* %3064, i32 0, i32 0
  %PC.i2540 = bitcast %union.anon* %3065 to i64*
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3067 = getelementptr inbounds %struct.GPR, %struct.GPR* %3066, i32 0, i32 5
  %3068 = getelementptr inbounds %struct.Reg, %struct.Reg* %3067, i32 0, i32 0
  %RCX.i2541 = bitcast %union.anon* %3068 to i64*
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 15
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %RBP.i2542 = bitcast %union.anon* %3071 to i64*
  %3072 = load i64, i64* %RBP.i2542
  %3073 = sub i64 %3072, 8
  %3074 = load i64, i64* %PC.i2540
  %3075 = add i64 %3074, 4
  store i64 %3075, i64* %PC.i2540
  %3076 = inttoptr i64 %3073 to i32*
  %3077 = load i32, i32* %3076
  %3078 = sext i32 %3077 to i64
  store i64 %3078, i64* %RCX.i2541, align 8
  store %struct.Memory* %loadMem_4aea7c, %struct.Memory** %MEMORY
  %loadMem_4aea80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3080 = getelementptr inbounds %struct.GPR, %struct.GPR* %3079, i32 0, i32 33
  %3081 = getelementptr inbounds %struct.Reg, %struct.Reg* %3080, i32 0, i32 0
  %PC.i2537 = bitcast %union.anon* %3081 to i64*
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3083 = getelementptr inbounds %struct.GPR, %struct.GPR* %3082, i32 0, i32 1
  %3084 = getelementptr inbounds %struct.Reg, %struct.Reg* %3083, i32 0, i32 0
  %RAX.i2538 = bitcast %union.anon* %3084 to i64*
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 5
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %RCX.i2539 = bitcast %union.anon* %3087 to i64*
  %3088 = load i64, i64* %RAX.i2538
  %3089 = load i64, i64* %RCX.i2539
  %3090 = mul i64 %3089, 8
  %3091 = add i64 %3090, %3088
  %3092 = load i64, i64* %PC.i2537
  %3093 = add i64 %3092, 4
  store i64 %3093, i64* %PC.i2537
  %3094 = inttoptr i64 %3091 to i64*
  %3095 = load i64, i64* %3094
  store i64 %3095, i64* %RAX.i2538, align 8
  store %struct.Memory* %loadMem_4aea80, %struct.Memory** %MEMORY
  %loadMem_4aea84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 33
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %PC.i2534 = bitcast %union.anon* %3098 to i64*
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 1
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %RAX.i2535 = bitcast %union.anon* %3101 to i64*
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 7
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %RDX.i2536 = bitcast %union.anon* %3104 to i64*
  %3105 = load i64, i64* %RAX.i2535
  %3106 = add i64 %3105, 4
  %3107 = load i64, i64* %PC.i2534
  %3108 = add i64 %3107, 3
  store i64 %3108, i64* %PC.i2534
  %3109 = inttoptr i64 %3106 to i32*
  %3110 = load i32, i32* %3109
  %3111 = zext i32 %3110 to i64
  store i64 %3111, i64* %RDX.i2536, align 8
  store %struct.Memory* %loadMem_4aea84, %struct.Memory** %MEMORY
  %loadMem_4aea87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 33
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %PC.i2532 = bitcast %union.anon* %3114 to i64*
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 1
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %RAX.i2533 = bitcast %union.anon* %3117 to i64*
  %3118 = load i64, i64* %PC.i2532
  %3119 = add i64 %3118, 8
  store i64 %3119, i64* %PC.i2532
  %3120 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3120, i64* %RAX.i2533, align 8
  store %struct.Memory* %loadMem_4aea87, %struct.Memory** %MEMORY
  %loadMem_4aea8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3122 = getelementptr inbounds %struct.GPR, %struct.GPR* %3121, i32 0, i32 33
  %3123 = getelementptr inbounds %struct.Reg, %struct.Reg* %3122, i32 0, i32 0
  %PC.i2529 = bitcast %union.anon* %3123 to i64*
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3125 = getelementptr inbounds %struct.GPR, %struct.GPR* %3124, i32 0, i32 5
  %3126 = getelementptr inbounds %struct.Reg, %struct.Reg* %3125, i32 0, i32 0
  %RCX.i2530 = bitcast %union.anon* %3126 to i64*
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3128 = getelementptr inbounds %struct.GPR, %struct.GPR* %3127, i32 0, i32 15
  %3129 = getelementptr inbounds %struct.Reg, %struct.Reg* %3128, i32 0, i32 0
  %RBP.i2531 = bitcast %union.anon* %3129 to i64*
  %3130 = load i64, i64* %RBP.i2531
  %3131 = sub i64 %3130, 4
  %3132 = load i64, i64* %PC.i2529
  %3133 = add i64 %3132, 4
  store i64 %3133, i64* %PC.i2529
  %3134 = inttoptr i64 %3131 to i32*
  %3135 = load i32, i32* %3134
  %3136 = sext i32 %3135 to i64
  store i64 %3136, i64* %RCX.i2530, align 8
  store %struct.Memory* %loadMem_4aea8f, %struct.Memory** %MEMORY
  %loadMem_4aea93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3138 = getelementptr inbounds %struct.GPR, %struct.GPR* %3137, i32 0, i32 33
  %3139 = getelementptr inbounds %struct.Reg, %struct.Reg* %3138, i32 0, i32 0
  %PC.i2526 = bitcast %union.anon* %3139 to i64*
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3141 = getelementptr inbounds %struct.GPR, %struct.GPR* %3140, i32 0, i32 1
  %3142 = getelementptr inbounds %struct.Reg, %struct.Reg* %3141, i32 0, i32 0
  %RAX.i2527 = bitcast %union.anon* %3142 to i64*
  %3143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3144 = getelementptr inbounds %struct.GPR, %struct.GPR* %3143, i32 0, i32 5
  %3145 = getelementptr inbounds %struct.Reg, %struct.Reg* %3144, i32 0, i32 0
  %RCX.i2528 = bitcast %union.anon* %3145 to i64*
  %3146 = load i64, i64* %RAX.i2527
  %3147 = load i64, i64* %RCX.i2528
  %3148 = mul i64 %3147, 8
  %3149 = add i64 %3148, %3146
  %3150 = load i64, i64* %PC.i2526
  %3151 = add i64 %3150, 4
  store i64 %3151, i64* %PC.i2526
  %3152 = inttoptr i64 %3149 to i64*
  %3153 = load i64, i64* %3152
  store i64 %3153, i64* %RAX.i2527, align 8
  store %struct.Memory* %loadMem_4aea93, %struct.Memory** %MEMORY
  %loadMem_4aea97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 33
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %PC.i2523 = bitcast %union.anon* %3156 to i64*
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 1
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %RAX.i2524 = bitcast %union.anon* %3159 to i64*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 7
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %RDX.i2525 = bitcast %union.anon* %3162 to i64*
  %3163 = load i64, i64* %RDX.i2525
  %3164 = load i64, i64* %RAX.i2524
  %3165 = add i64 %3164, 4
  %3166 = load i64, i64* %PC.i2523
  %3167 = add i64 %3166, 3
  store i64 %3167, i64* %PC.i2523
  %3168 = trunc i64 %3163 to i32
  %3169 = inttoptr i64 %3165 to i32*
  %3170 = load i32, i32* %3169
  %3171 = sub i32 %3168, %3170
  %3172 = zext i32 %3171 to i64
  store i64 %3172, i64* %RDX.i2525, align 8
  %3173 = icmp ult i32 %3168, %3170
  %3174 = zext i1 %3173 to i8
  %3175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3174, i8* %3175, align 1
  %3176 = and i32 %3171, 255
  %3177 = call i32 @llvm.ctpop.i32(i32 %3176)
  %3178 = trunc i32 %3177 to i8
  %3179 = and i8 %3178, 1
  %3180 = xor i8 %3179, 1
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3180, i8* %3181, align 1
  %3182 = xor i32 %3170, %3168
  %3183 = xor i32 %3182, %3171
  %3184 = lshr i32 %3183, 4
  %3185 = trunc i32 %3184 to i8
  %3186 = and i8 %3185, 1
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3186, i8* %3187, align 1
  %3188 = icmp eq i32 %3171, 0
  %3189 = zext i1 %3188 to i8
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3189, i8* %3190, align 1
  %3191 = lshr i32 %3171, 31
  %3192 = trunc i32 %3191 to i8
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3192, i8* %3193, align 1
  %3194 = lshr i32 %3168, 31
  %3195 = lshr i32 %3170, 31
  %3196 = xor i32 %3195, %3194
  %3197 = xor i32 %3191, %3194
  %3198 = add i32 %3197, %3196
  %3199 = icmp eq i32 %3198, 2
  %3200 = zext i1 %3199 to i8
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3200, i8* %3201, align 1
  store %struct.Memory* %loadMem_4aea97, %struct.Memory** %MEMORY
  %loadMem_4aea9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3203 = getelementptr inbounds %struct.GPR, %struct.GPR* %3202, i32 0, i32 33
  %3204 = getelementptr inbounds %struct.Reg, %struct.Reg* %3203, i32 0, i32 0
  %PC.i2521 = bitcast %union.anon* %3204 to i64*
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 7
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %EDX.i2522 = bitcast %union.anon* %3207 to i32*
  %3208 = load i32, i32* %EDX.i2522
  %3209 = zext i32 %3208 to i64
  %3210 = load i64, i64* %PC.i2521
  %3211 = add i64 %3210, 3
  store i64 %3211, i64* %PC.i2521
  %3212 = sub i32 %3208, 127
  %3213 = icmp ult i32 %3208, 127
  %3214 = zext i1 %3213 to i8
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3214, i8* %3215, align 1
  %3216 = and i32 %3212, 255
  %3217 = call i32 @llvm.ctpop.i32(i32 %3216)
  %3218 = trunc i32 %3217 to i8
  %3219 = and i8 %3218, 1
  %3220 = xor i8 %3219, 1
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3220, i8* %3221, align 1
  %3222 = xor i64 127, %3209
  %3223 = trunc i64 %3222 to i32
  %3224 = xor i32 %3223, %3212
  %3225 = lshr i32 %3224, 4
  %3226 = trunc i32 %3225 to i8
  %3227 = and i8 %3226, 1
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3227, i8* %3228, align 1
  %3229 = icmp eq i32 %3212, 0
  %3230 = zext i1 %3229 to i8
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3230, i8* %3231, align 1
  %3232 = lshr i32 %3212, 31
  %3233 = trunc i32 %3232 to i8
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3233, i8* %3234, align 1
  %3235 = lshr i32 %3208, 31
  %3236 = xor i32 %3232, %3235
  %3237 = add i32 %3236, %3235
  %3238 = icmp eq i32 %3237, 2
  %3239 = zext i1 %3238 to i8
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3239, i8* %3240, align 1
  store %struct.Memory* %loadMem_4aea9a, %struct.Memory** %MEMORY
  %loadMem_4aea9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3242 = getelementptr inbounds %struct.GPR, %struct.GPR* %3241, i32 0, i32 33
  %3243 = getelementptr inbounds %struct.Reg, %struct.Reg* %3242, i32 0, i32 0
  %PC.i2520 = bitcast %union.anon* %3243 to i64*
  %3244 = load i64, i64* %PC.i2520
  %3245 = add i64 %3244, 22
  %3246 = load i64, i64* %PC.i2520
  %3247 = add i64 %3246, 6
  %3248 = load i64, i64* %PC.i2520
  %3249 = add i64 %3248, 6
  store i64 %3249, i64* %PC.i2520
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3251 = load i8, i8* %3250, align 1
  %3252 = icmp ne i8 %3251, 0
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3254 = load i8, i8* %3253, align 1
  %3255 = icmp ne i8 %3254, 0
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3257 = load i8, i8* %3256, align 1
  %3258 = icmp ne i8 %3257, 0
  %3259 = xor i1 %3255, %3258
  %3260 = or i1 %3252, %3259
  %3261 = zext i1 %3260 to i8
  store i8 %3261, i8* %BRANCH_TAKEN, align 1
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3263 = select i1 %3260, i64 %3245, i64 %3247
  store i64 %3263, i64* %3262, align 8
  store %struct.Memory* %loadMem_4aea9d, %struct.Memory** %MEMORY
  %loadBr_4aea9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aea9d = icmp eq i8 %loadBr_4aea9d, 1
  br i1 %cmpBr_4aea9d, label %block_.L_4aeab3, label %block_4aeaa3

block_4aeaa3:                                     ; preds = %block_.L_4aea74
  %loadMem_4aeaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3265 = getelementptr inbounds %struct.GPR, %struct.GPR* %3264, i32 0, i32 33
  %3266 = getelementptr inbounds %struct.Reg, %struct.Reg* %3265, i32 0, i32 0
  %PC.i2518 = bitcast %union.anon* %3266 to i64*
  %3267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3268 = getelementptr inbounds %struct.GPR, %struct.GPR* %3267, i32 0, i32 1
  %3269 = getelementptr inbounds %struct.Reg, %struct.Reg* %3268, i32 0, i32 0
  %RAX.i2519 = bitcast %union.anon* %3269 to i64*
  %3270 = load i64, i64* %PC.i2518
  %3271 = add i64 %3270, 5
  store i64 %3271, i64* %PC.i2518
  store i64 127, i64* %RAX.i2519, align 8
  store %struct.Memory* %loadMem_4aeaa3, %struct.Memory** %MEMORY
  %loadMem_4aeaa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3273 = getelementptr inbounds %struct.GPR, %struct.GPR* %3272, i32 0, i32 33
  %3274 = getelementptr inbounds %struct.Reg, %struct.Reg* %3273, i32 0, i32 0
  %PC.i2515 = bitcast %union.anon* %3274 to i64*
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3276 = getelementptr inbounds %struct.GPR, %struct.GPR* %3275, i32 0, i32 1
  %3277 = getelementptr inbounds %struct.Reg, %struct.Reg* %3276, i32 0, i32 0
  %EAX.i2516 = bitcast %union.anon* %3277 to i32*
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3279 = getelementptr inbounds %struct.GPR, %struct.GPR* %3278, i32 0, i32 15
  %3280 = getelementptr inbounds %struct.Reg, %struct.Reg* %3279, i32 0, i32 0
  %RBP.i2517 = bitcast %union.anon* %3280 to i64*
  %3281 = load i64, i64* %RBP.i2517
  %3282 = sub i64 %3281, 35428
  %3283 = load i32, i32* %EAX.i2516
  %3284 = zext i32 %3283 to i64
  %3285 = load i64, i64* %PC.i2515
  %3286 = add i64 %3285, 6
  store i64 %3286, i64* %PC.i2515
  %3287 = inttoptr i64 %3282 to i32*
  store i32 %3283, i32* %3287
  store %struct.Memory* %loadMem_4aeaa8, %struct.Memory** %MEMORY
  %loadMem_4aeaae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3289 = getelementptr inbounds %struct.GPR, %struct.GPR* %3288, i32 0, i32 33
  %3290 = getelementptr inbounds %struct.Reg, %struct.Reg* %3289, i32 0, i32 0
  %PC.i2514 = bitcast %union.anon* %3290 to i64*
  %3291 = load i64, i64* %PC.i2514
  %3292 = add i64 %3291, 49
  %3293 = load i64, i64* %PC.i2514
  %3294 = add i64 %3293, 5
  store i64 %3294, i64* %PC.i2514
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3292, i64* %3295, align 8
  store %struct.Memory* %loadMem_4aeaae, %struct.Memory** %MEMORY
  br label %block_.L_4aeadf

block_.L_4aeab3:                                  ; preds = %block_.L_4aea74
  %loadMem_4aeab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3297 = getelementptr inbounds %struct.GPR, %struct.GPR* %3296, i32 0, i32 33
  %3298 = getelementptr inbounds %struct.Reg, %struct.Reg* %3297, i32 0, i32 0
  %PC.i2512 = bitcast %union.anon* %3298 to i64*
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3300 = getelementptr inbounds %struct.GPR, %struct.GPR* %3299, i32 0, i32 1
  %3301 = getelementptr inbounds %struct.Reg, %struct.Reg* %3300, i32 0, i32 0
  %RAX.i2513 = bitcast %union.anon* %3301 to i64*
  %3302 = load i64, i64* %PC.i2512
  %3303 = add i64 %3302, 8
  store i64 %3303, i64* %PC.i2512
  %3304 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %3304, i64* %RAX.i2513, align 8
  store %struct.Memory* %loadMem_4aeab3, %struct.Memory** %MEMORY
  %loadMem_4aeabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 33
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %PC.i2509 = bitcast %union.anon* %3307 to i64*
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3309 = getelementptr inbounds %struct.GPR, %struct.GPR* %3308, i32 0, i32 5
  %3310 = getelementptr inbounds %struct.Reg, %struct.Reg* %3309, i32 0, i32 0
  %RCX.i2510 = bitcast %union.anon* %3310 to i64*
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 15
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %RBP.i2511 = bitcast %union.anon* %3313 to i64*
  %3314 = load i64, i64* %RBP.i2511
  %3315 = sub i64 %3314, 8
  %3316 = load i64, i64* %PC.i2509
  %3317 = add i64 %3316, 4
  store i64 %3317, i64* %PC.i2509
  %3318 = inttoptr i64 %3315 to i32*
  %3319 = load i32, i32* %3318
  %3320 = sext i32 %3319 to i64
  store i64 %3320, i64* %RCX.i2510, align 8
  store %struct.Memory* %loadMem_4aeabb, %struct.Memory** %MEMORY
  %loadMem_4aeabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3322 = getelementptr inbounds %struct.GPR, %struct.GPR* %3321, i32 0, i32 33
  %3323 = getelementptr inbounds %struct.Reg, %struct.Reg* %3322, i32 0, i32 0
  %PC.i2506 = bitcast %union.anon* %3323 to i64*
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3325 = getelementptr inbounds %struct.GPR, %struct.GPR* %3324, i32 0, i32 1
  %3326 = getelementptr inbounds %struct.Reg, %struct.Reg* %3325, i32 0, i32 0
  %RAX.i2507 = bitcast %union.anon* %3326 to i64*
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3328 = getelementptr inbounds %struct.GPR, %struct.GPR* %3327, i32 0, i32 5
  %3329 = getelementptr inbounds %struct.Reg, %struct.Reg* %3328, i32 0, i32 0
  %RCX.i2508 = bitcast %union.anon* %3329 to i64*
  %3330 = load i64, i64* %RAX.i2507
  %3331 = load i64, i64* %RCX.i2508
  %3332 = mul i64 %3331, 8
  %3333 = add i64 %3332, %3330
  %3334 = load i64, i64* %PC.i2506
  %3335 = add i64 %3334, 4
  store i64 %3335, i64* %PC.i2506
  %3336 = inttoptr i64 %3333 to i64*
  %3337 = load i64, i64* %3336
  store i64 %3337, i64* %RAX.i2507, align 8
  store %struct.Memory* %loadMem_4aeabf, %struct.Memory** %MEMORY
  %loadMem_4aeac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3339 = getelementptr inbounds %struct.GPR, %struct.GPR* %3338, i32 0, i32 33
  %3340 = getelementptr inbounds %struct.Reg, %struct.Reg* %3339, i32 0, i32 0
  %PC.i2503 = bitcast %union.anon* %3340 to i64*
  %3341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3342 = getelementptr inbounds %struct.GPR, %struct.GPR* %3341, i32 0, i32 1
  %3343 = getelementptr inbounds %struct.Reg, %struct.Reg* %3342, i32 0, i32 0
  %RAX.i2504 = bitcast %union.anon* %3343 to i64*
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3345 = getelementptr inbounds %struct.GPR, %struct.GPR* %3344, i32 0, i32 7
  %3346 = getelementptr inbounds %struct.Reg, %struct.Reg* %3345, i32 0, i32 0
  %RDX.i2505 = bitcast %union.anon* %3346 to i64*
  %3347 = load i64, i64* %RAX.i2504
  %3348 = add i64 %3347, 4
  %3349 = load i64, i64* %PC.i2503
  %3350 = add i64 %3349, 3
  store i64 %3350, i64* %PC.i2503
  %3351 = inttoptr i64 %3348 to i32*
  %3352 = load i32, i32* %3351
  %3353 = zext i32 %3352 to i64
  store i64 %3353, i64* %RDX.i2505, align 8
  store %struct.Memory* %loadMem_4aeac3, %struct.Memory** %MEMORY
  %loadMem_4aeac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3355 = getelementptr inbounds %struct.GPR, %struct.GPR* %3354, i32 0, i32 33
  %3356 = getelementptr inbounds %struct.Reg, %struct.Reg* %3355, i32 0, i32 0
  %PC.i2501 = bitcast %union.anon* %3356 to i64*
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3358 = getelementptr inbounds %struct.GPR, %struct.GPR* %3357, i32 0, i32 1
  %3359 = getelementptr inbounds %struct.Reg, %struct.Reg* %3358, i32 0, i32 0
  %RAX.i2502 = bitcast %union.anon* %3359 to i64*
  %3360 = load i64, i64* %PC.i2501
  %3361 = add i64 %3360, 8
  store i64 %3361, i64* %PC.i2501
  %3362 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3362, i64* %RAX.i2502, align 8
  store %struct.Memory* %loadMem_4aeac6, %struct.Memory** %MEMORY
  %loadMem_4aeace = load %struct.Memory*, %struct.Memory** %MEMORY
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 33
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %PC.i2498 = bitcast %union.anon* %3365 to i64*
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 5
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %RCX.i2499 = bitcast %union.anon* %3368 to i64*
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3370 = getelementptr inbounds %struct.GPR, %struct.GPR* %3369, i32 0, i32 15
  %3371 = getelementptr inbounds %struct.Reg, %struct.Reg* %3370, i32 0, i32 0
  %RBP.i2500 = bitcast %union.anon* %3371 to i64*
  %3372 = load i64, i64* %RBP.i2500
  %3373 = sub i64 %3372, 4
  %3374 = load i64, i64* %PC.i2498
  %3375 = add i64 %3374, 4
  store i64 %3375, i64* %PC.i2498
  %3376 = inttoptr i64 %3373 to i32*
  %3377 = load i32, i32* %3376
  %3378 = sext i32 %3377 to i64
  store i64 %3378, i64* %RCX.i2499, align 8
  store %struct.Memory* %loadMem_4aeace, %struct.Memory** %MEMORY
  %loadMem_4aead2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3380 = getelementptr inbounds %struct.GPR, %struct.GPR* %3379, i32 0, i32 33
  %3381 = getelementptr inbounds %struct.Reg, %struct.Reg* %3380, i32 0, i32 0
  %PC.i2495 = bitcast %union.anon* %3381 to i64*
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3383 = getelementptr inbounds %struct.GPR, %struct.GPR* %3382, i32 0, i32 1
  %3384 = getelementptr inbounds %struct.Reg, %struct.Reg* %3383, i32 0, i32 0
  %RAX.i2496 = bitcast %union.anon* %3384 to i64*
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3386 = getelementptr inbounds %struct.GPR, %struct.GPR* %3385, i32 0, i32 5
  %3387 = getelementptr inbounds %struct.Reg, %struct.Reg* %3386, i32 0, i32 0
  %RCX.i2497 = bitcast %union.anon* %3387 to i64*
  %3388 = load i64, i64* %RAX.i2496
  %3389 = load i64, i64* %RCX.i2497
  %3390 = mul i64 %3389, 8
  %3391 = add i64 %3390, %3388
  %3392 = load i64, i64* %PC.i2495
  %3393 = add i64 %3392, 4
  store i64 %3393, i64* %PC.i2495
  %3394 = inttoptr i64 %3391 to i64*
  %3395 = load i64, i64* %3394
  store i64 %3395, i64* %RAX.i2496, align 8
  store %struct.Memory* %loadMem_4aead2, %struct.Memory** %MEMORY
  %loadMem_4aead6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 33
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %PC.i2492 = bitcast %union.anon* %3398 to i64*
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3400 = getelementptr inbounds %struct.GPR, %struct.GPR* %3399, i32 0, i32 1
  %3401 = getelementptr inbounds %struct.Reg, %struct.Reg* %3400, i32 0, i32 0
  %RAX.i2493 = bitcast %union.anon* %3401 to i64*
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3403 = getelementptr inbounds %struct.GPR, %struct.GPR* %3402, i32 0, i32 7
  %3404 = getelementptr inbounds %struct.Reg, %struct.Reg* %3403, i32 0, i32 0
  %RDX.i2494 = bitcast %union.anon* %3404 to i64*
  %3405 = load i64, i64* %RDX.i2494
  %3406 = load i64, i64* %RAX.i2493
  %3407 = add i64 %3406, 4
  %3408 = load i64, i64* %PC.i2492
  %3409 = add i64 %3408, 3
  store i64 %3409, i64* %PC.i2492
  %3410 = trunc i64 %3405 to i32
  %3411 = inttoptr i64 %3407 to i32*
  %3412 = load i32, i32* %3411
  %3413 = sub i32 %3410, %3412
  %3414 = zext i32 %3413 to i64
  store i64 %3414, i64* %RDX.i2494, align 8
  %3415 = icmp ult i32 %3410, %3412
  %3416 = zext i1 %3415 to i8
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3416, i8* %3417, align 1
  %3418 = and i32 %3413, 255
  %3419 = call i32 @llvm.ctpop.i32(i32 %3418)
  %3420 = trunc i32 %3419 to i8
  %3421 = and i8 %3420, 1
  %3422 = xor i8 %3421, 1
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3422, i8* %3423, align 1
  %3424 = xor i32 %3412, %3410
  %3425 = xor i32 %3424, %3413
  %3426 = lshr i32 %3425, 4
  %3427 = trunc i32 %3426 to i8
  %3428 = and i8 %3427, 1
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3428, i8* %3429, align 1
  %3430 = icmp eq i32 %3413, 0
  %3431 = zext i1 %3430 to i8
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3431, i8* %3432, align 1
  %3433 = lshr i32 %3413, 31
  %3434 = trunc i32 %3433 to i8
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3434, i8* %3435, align 1
  %3436 = lshr i32 %3410, 31
  %3437 = lshr i32 %3412, 31
  %3438 = xor i32 %3437, %3436
  %3439 = xor i32 %3433, %3436
  %3440 = add i32 %3439, %3438
  %3441 = icmp eq i32 %3440, 2
  %3442 = zext i1 %3441 to i8
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3442, i8* %3443, align 1
  store %struct.Memory* %loadMem_4aead6, %struct.Memory** %MEMORY
  %loadMem_4aead9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3445 = getelementptr inbounds %struct.GPR, %struct.GPR* %3444, i32 0, i32 33
  %3446 = getelementptr inbounds %struct.Reg, %struct.Reg* %3445, i32 0, i32 0
  %PC.i2489 = bitcast %union.anon* %3446 to i64*
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3448 = getelementptr inbounds %struct.GPR, %struct.GPR* %3447, i32 0, i32 7
  %3449 = getelementptr inbounds %struct.Reg, %struct.Reg* %3448, i32 0, i32 0
  %EDX.i2490 = bitcast %union.anon* %3449 to i32*
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3451 = getelementptr inbounds %struct.GPR, %struct.GPR* %3450, i32 0, i32 15
  %3452 = getelementptr inbounds %struct.Reg, %struct.Reg* %3451, i32 0, i32 0
  %RBP.i2491 = bitcast %union.anon* %3452 to i64*
  %3453 = load i64, i64* %RBP.i2491
  %3454 = sub i64 %3453, 35428
  %3455 = load i32, i32* %EDX.i2490
  %3456 = zext i32 %3455 to i64
  %3457 = load i64, i64* %PC.i2489
  %3458 = add i64 %3457, 6
  store i64 %3458, i64* %PC.i2489
  %3459 = inttoptr i64 %3454 to i32*
  store i32 %3455, i32* %3459
  store %struct.Memory* %loadMem_4aead9, %struct.Memory** %MEMORY
  br label %block_.L_4aeadf

block_.L_4aeadf:                                  ; preds = %block_.L_4aeab3, %block_4aeaa3
  %loadMem_4aeadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3461 = getelementptr inbounds %struct.GPR, %struct.GPR* %3460, i32 0, i32 33
  %3462 = getelementptr inbounds %struct.Reg, %struct.Reg* %3461, i32 0, i32 0
  %PC.i2486 = bitcast %union.anon* %3462 to i64*
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3464 = getelementptr inbounds %struct.GPR, %struct.GPR* %3463, i32 0, i32 1
  %3465 = getelementptr inbounds %struct.Reg, %struct.Reg* %3464, i32 0, i32 0
  %RAX.i2487 = bitcast %union.anon* %3465 to i64*
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3467 = getelementptr inbounds %struct.GPR, %struct.GPR* %3466, i32 0, i32 15
  %3468 = getelementptr inbounds %struct.Reg, %struct.Reg* %3467, i32 0, i32 0
  %RBP.i2488 = bitcast %union.anon* %3468 to i64*
  %3469 = load i64, i64* %RBP.i2488
  %3470 = sub i64 %3469, 35428
  %3471 = load i64, i64* %PC.i2486
  %3472 = add i64 %3471, 6
  store i64 %3472, i64* %PC.i2486
  %3473 = inttoptr i64 %3470 to i32*
  %3474 = load i32, i32* %3473
  %3475 = zext i32 %3474 to i64
  store i64 %3475, i64* %RAX.i2487, align 8
  store %struct.Memory* %loadMem_4aeadf, %struct.Memory** %MEMORY
  %loadMem_4aeae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 33
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %PC.i2483 = bitcast %union.anon* %3478 to i64*
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 1
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %EAX.i2484 = bitcast %union.anon* %3481 to i32*
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3483 = getelementptr inbounds %struct.GPR, %struct.GPR* %3482, i32 0, i32 15
  %3484 = getelementptr inbounds %struct.Reg, %struct.Reg* %3483, i32 0, i32 0
  %RBP.i2485 = bitcast %union.anon* %3484 to i64*
  %3485 = load i64, i64* %RBP.i2485
  %3486 = sub i64 %3485, 35424
  %3487 = load i32, i32* %EAX.i2484
  %3488 = zext i32 %3487 to i64
  %3489 = load i64, i64* %PC.i2483
  %3490 = add i64 %3489, 6
  store i64 %3490, i64* %PC.i2483
  %3491 = inttoptr i64 %3486 to i32*
  store i32 %3487, i32* %3491
  store %struct.Memory* %loadMem_4aeae5, %struct.Memory** %MEMORY
  br label %block_.L_4aeaeb

block_.L_4aeaeb:                                  ; preds = %block_.L_4aeadf, %block_4aea64
  %loadMem_4aeaeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 33
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %PC.i2480 = bitcast %union.anon* %3494 to i64*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 1
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %RAX.i2481 = bitcast %union.anon* %3497 to i64*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 15
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RBP.i2482 = bitcast %union.anon* %3500 to i64*
  %3501 = load i64, i64* %RBP.i2482
  %3502 = sub i64 %3501, 35424
  %3503 = load i64, i64* %PC.i2480
  %3504 = add i64 %3503, 6
  store i64 %3504, i64* %PC.i2480
  %3505 = inttoptr i64 %3502 to i32*
  %3506 = load i32, i32* %3505
  %3507 = zext i32 %3506 to i64
  store i64 %3507, i64* %RAX.i2481, align 8
  store %struct.Memory* %loadMem_4aeaeb, %struct.Memory** %MEMORY
  %loadMem_4aeaf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 33
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %PC.i2477 = bitcast %union.anon* %3510 to i64*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 1
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %EAX.i2478 = bitcast %union.anon* %3513 to i32*
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3515 = getelementptr inbounds %struct.GPR, %struct.GPR* %3514, i32 0, i32 15
  %3516 = getelementptr inbounds %struct.Reg, %struct.Reg* %3515, i32 0, i32 0
  %RBP.i2479 = bitcast %union.anon* %3516 to i64*
  %3517 = load i64, i64* %RBP.i2479
  %3518 = sub i64 %3517, 35408
  %3519 = load i32, i32* %EAX.i2478
  %3520 = zext i32 %3519 to i64
  %3521 = load i64, i64* %PC.i2477
  %3522 = add i64 %3521, 6
  store i64 %3522, i64* %PC.i2477
  %3523 = inttoptr i64 %3518 to i32*
  store i32 %3519, i32* %3523
  store %struct.Memory* %loadMem_4aeaf1, %struct.Memory** %MEMORY
  %loadMem_4aeaf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 33
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %PC.i2475 = bitcast %union.anon* %3526 to i64*
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 5
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %RCX.i2476 = bitcast %union.anon* %3529 to i64*
  %3530 = load i64, i64* %PC.i2475
  %3531 = add i64 %3530, 8
  store i64 %3531, i64* %PC.i2475
  %3532 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %3532, i64* %RCX.i2476, align 8
  store %struct.Memory* %loadMem_4aeaf7, %struct.Memory** %MEMORY
  %loadMem_4aeaff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 33
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %PC.i2472 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 1
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RAX.i2473 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 5
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %RCX.i2474 = bitcast %union.anon* %3541 to i64*
  %3542 = load i64, i64* %RCX.i2474
  %3543 = add i64 %3542, 4
  %3544 = load i64, i64* %PC.i2472
  %3545 = add i64 %3544, 3
  store i64 %3545, i64* %PC.i2472
  %3546 = inttoptr i64 %3543 to i32*
  %3547 = load i32, i32* %3546
  %3548 = zext i32 %3547 to i64
  store i64 %3548, i64* %RAX.i2473, align 8
  store %struct.Memory* %loadMem_4aeaff, %struct.Memory** %MEMORY
  %loadMem_4aeb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3550 = getelementptr inbounds %struct.GPR, %struct.GPR* %3549, i32 0, i32 33
  %3551 = getelementptr inbounds %struct.Reg, %struct.Reg* %3550, i32 0, i32 0
  %PC.i2470 = bitcast %union.anon* %3551 to i64*
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 5
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %RCX.i2471 = bitcast %union.anon* %3554 to i64*
  %3555 = load i64, i64* %PC.i2470
  %3556 = add i64 %3555, 8
  store i64 %3556, i64* %PC.i2470
  %3557 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3557, i64* %RCX.i2471, align 8
  store %struct.Memory* %loadMem_4aeb02, %struct.Memory** %MEMORY
  %loadMem_4aeb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3559 = getelementptr inbounds %struct.GPR, %struct.GPR* %3558, i32 0, i32 33
  %3560 = getelementptr inbounds %struct.Reg, %struct.Reg* %3559, i32 0, i32 0
  %PC.i2467 = bitcast %union.anon* %3560 to i64*
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3562 = getelementptr inbounds %struct.GPR, %struct.GPR* %3561, i32 0, i32 7
  %3563 = getelementptr inbounds %struct.Reg, %struct.Reg* %3562, i32 0, i32 0
  %RDX.i2468 = bitcast %union.anon* %3563 to i64*
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3565 = getelementptr inbounds %struct.GPR, %struct.GPR* %3564, i32 0, i32 15
  %3566 = getelementptr inbounds %struct.Reg, %struct.Reg* %3565, i32 0, i32 0
  %RBP.i2469 = bitcast %union.anon* %3566 to i64*
  %3567 = load i64, i64* %RBP.i2469
  %3568 = sub i64 %3567, 4
  %3569 = load i64, i64* %PC.i2467
  %3570 = add i64 %3569, 4
  store i64 %3570, i64* %PC.i2467
  %3571 = inttoptr i64 %3568 to i32*
  %3572 = load i32, i32* %3571
  %3573 = sext i32 %3572 to i64
  store i64 %3573, i64* %RDX.i2468, align 8
  store %struct.Memory* %loadMem_4aeb0a, %struct.Memory** %MEMORY
  %loadMem_4aeb0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3575 = getelementptr inbounds %struct.GPR, %struct.GPR* %3574, i32 0, i32 33
  %3576 = getelementptr inbounds %struct.Reg, %struct.Reg* %3575, i32 0, i32 0
  %PC.i2464 = bitcast %union.anon* %3576 to i64*
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3578 = getelementptr inbounds %struct.GPR, %struct.GPR* %3577, i32 0, i32 5
  %3579 = getelementptr inbounds %struct.Reg, %struct.Reg* %3578, i32 0, i32 0
  %RCX.i2465 = bitcast %union.anon* %3579 to i64*
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 7
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %RDX.i2466 = bitcast %union.anon* %3582 to i64*
  %3583 = load i64, i64* %RCX.i2465
  %3584 = load i64, i64* %RDX.i2466
  %3585 = mul i64 %3584, 8
  %3586 = add i64 %3585, %3583
  %3587 = load i64, i64* %PC.i2464
  %3588 = add i64 %3587, 4
  store i64 %3588, i64* %PC.i2464
  %3589 = inttoptr i64 %3586 to i64*
  %3590 = load i64, i64* %3589
  store i64 %3590, i64* %RCX.i2465, align 8
  store %struct.Memory* %loadMem_4aeb0e, %struct.Memory** %MEMORY
  %loadMem_4aeb12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 33
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %PC.i2461 = bitcast %union.anon* %3593 to i64*
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 1
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %RAX.i2462 = bitcast %union.anon* %3596 to i64*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 5
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %RCX.i2463 = bitcast %union.anon* %3599 to i64*
  %3600 = load i64, i64* %RAX.i2462
  %3601 = load i64, i64* %RCX.i2463
  %3602 = add i64 %3601, 4
  %3603 = load i64, i64* %PC.i2461
  %3604 = add i64 %3603, 3
  store i64 %3604, i64* %PC.i2461
  %3605 = trunc i64 %3600 to i32
  %3606 = inttoptr i64 %3602 to i32*
  %3607 = load i32, i32* %3606
  %3608 = sub i32 %3605, %3607
  %3609 = zext i32 %3608 to i64
  store i64 %3609, i64* %RAX.i2462, align 8
  %3610 = icmp ult i32 %3605, %3607
  %3611 = zext i1 %3610 to i8
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3611, i8* %3612, align 1
  %3613 = and i32 %3608, 255
  %3614 = call i32 @llvm.ctpop.i32(i32 %3613)
  %3615 = trunc i32 %3614 to i8
  %3616 = and i8 %3615, 1
  %3617 = xor i8 %3616, 1
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3617, i8* %3618, align 1
  %3619 = xor i32 %3607, %3605
  %3620 = xor i32 %3619, %3608
  %3621 = lshr i32 %3620, 4
  %3622 = trunc i32 %3621 to i8
  %3623 = and i8 %3622, 1
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3623, i8* %3624, align 1
  %3625 = icmp eq i32 %3608, 0
  %3626 = zext i1 %3625 to i8
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3626, i8* %3627, align 1
  %3628 = lshr i32 %3608, 31
  %3629 = trunc i32 %3628 to i8
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3629, i8* %3630, align 1
  %3631 = lshr i32 %3605, 31
  %3632 = lshr i32 %3607, 31
  %3633 = xor i32 %3632, %3631
  %3634 = xor i32 %3628, %3631
  %3635 = add i32 %3634, %3633
  %3636 = icmp eq i32 %3635, 2
  %3637 = zext i1 %3636 to i8
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3637, i8* %3638, align 1
  store %struct.Memory* %loadMem_4aeb12, %struct.Memory** %MEMORY
  %loadMem_4aeb15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 33
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %PC.i2459 = bitcast %union.anon* %3641 to i64*
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 1
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %EAX.i2460 = bitcast %union.anon* %3644 to i32*
  %3645 = load i32, i32* %EAX.i2460
  %3646 = zext i32 %3645 to i64
  %3647 = load i64, i64* %PC.i2459
  %3648 = add i64 %3647, 3
  store i64 %3648, i64* %PC.i2459
  %3649 = sub i32 %3645, -128
  %3650 = icmp ult i32 %3645, -128
  %3651 = zext i1 %3650 to i8
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3651, i8* %3652, align 1
  %3653 = and i32 %3649, 255
  %3654 = call i32 @llvm.ctpop.i32(i32 %3653)
  %3655 = trunc i32 %3654 to i8
  %3656 = and i8 %3655, 1
  %3657 = xor i8 %3656, 1
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3657, i8* %3658, align 1
  %3659 = xor i64 -128, %3646
  %3660 = trunc i64 %3659 to i32
  %3661 = xor i32 %3660, %3649
  %3662 = lshr i32 %3661, 4
  %3663 = trunc i32 %3662 to i8
  %3664 = and i8 %3663, 1
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3664, i8* %3665, align 1
  %3666 = icmp eq i32 %3649, 0
  %3667 = zext i1 %3666 to i8
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3667, i8* %3668, align 1
  %3669 = lshr i32 %3649, 31
  %3670 = trunc i32 %3669 to i8
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3670, i8* %3671, align 1
  %3672 = lshr i32 %3645, 31
  %3673 = xor i32 1, %3672
  %3674 = xor i32 %3669, %3672
  %3675 = add i32 %3674, %3673
  %3676 = icmp eq i32 %3675, 2
  %3677 = zext i1 %3676 to i8
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3677, i8* %3678, align 1
  store %struct.Memory* %loadMem_4aeb15, %struct.Memory** %MEMORY
  %loadMem_4aeb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 33
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %PC.i2458 = bitcast %union.anon* %3681 to i64*
  %3682 = load i64, i64* %PC.i2458
  %3683 = add i64 %3682, 22
  %3684 = load i64, i64* %PC.i2458
  %3685 = add i64 %3684, 6
  %3686 = load i64, i64* %PC.i2458
  %3687 = add i64 %3686, 6
  store i64 %3687, i64* %PC.i2458
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3689 = load i8, i8* %3688, align 1
  %3690 = icmp ne i8 %3689, 0
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3692 = load i8, i8* %3691, align 1
  %3693 = icmp ne i8 %3692, 0
  %3694 = xor i1 %3690, %3693
  %3695 = xor i1 %3694, true
  %3696 = zext i1 %3695 to i8
  store i8 %3696, i8* %BRANCH_TAKEN, align 1
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3698 = select i1 %3694, i64 %3685, i64 %3683
  store i64 %3698, i64* %3697, align 8
  store %struct.Memory* %loadMem_4aeb18, %struct.Memory** %MEMORY
  %loadBr_4aeb18 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aeb18 = icmp eq i8 %loadBr_4aeb18, 1
  br i1 %cmpBr_4aeb18, label %block_.L_4aeb2e, label %block_4aeb1e

block_4aeb1e:                                     ; preds = %block_.L_4aeaeb
  %loadMem_4aeb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3700 = getelementptr inbounds %struct.GPR, %struct.GPR* %3699, i32 0, i32 33
  %3701 = getelementptr inbounds %struct.Reg, %struct.Reg* %3700, i32 0, i32 0
  %PC.i2456 = bitcast %union.anon* %3701 to i64*
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3703 = getelementptr inbounds %struct.GPR, %struct.GPR* %3702, i32 0, i32 1
  %3704 = getelementptr inbounds %struct.Reg, %struct.Reg* %3703, i32 0, i32 0
  %RAX.i2457 = bitcast %union.anon* %3704 to i64*
  %3705 = load i64, i64* %PC.i2456
  %3706 = add i64 %3705, 5
  store i64 %3706, i64* %PC.i2456
  store i64 4294967168, i64* %RAX.i2457, align 8
  store %struct.Memory* %loadMem_4aeb1e, %struct.Memory** %MEMORY
  %loadMem_4aeb23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 33
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %PC.i2453 = bitcast %union.anon* %3709 to i64*
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 1
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %EAX.i2454 = bitcast %union.anon* %3712 to i32*
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3714 = getelementptr inbounds %struct.GPR, %struct.GPR* %3713, i32 0, i32 15
  %3715 = getelementptr inbounds %struct.Reg, %struct.Reg* %3714, i32 0, i32 0
  %RBP.i2455 = bitcast %union.anon* %3715 to i64*
  %3716 = load i64, i64* %RBP.i2455
  %3717 = sub i64 %3716, 35432
  %3718 = load i32, i32* %EAX.i2454
  %3719 = zext i32 %3718 to i64
  %3720 = load i64, i64* %PC.i2453
  %3721 = add i64 %3720, 6
  store i64 %3721, i64* %PC.i2453
  %3722 = inttoptr i64 %3717 to i32*
  store i32 %3718, i32* %3722
  store %struct.Memory* %loadMem_4aeb23, %struct.Memory** %MEMORY
  %loadMem_4aeb29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3724 = getelementptr inbounds %struct.GPR, %struct.GPR* %3723, i32 0, i32 33
  %3725 = getelementptr inbounds %struct.Reg, %struct.Reg* %3724, i32 0, i32 0
  %PC.i2452 = bitcast %union.anon* %3725 to i64*
  %3726 = load i64, i64* %PC.i2452
  %3727 = add i64 %3726, 108
  %3728 = load i64, i64* %PC.i2452
  %3729 = add i64 %3728, 5
  store i64 %3729, i64* %PC.i2452
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3727, i64* %3730, align 8
  store %struct.Memory* %loadMem_4aeb29, %struct.Memory** %MEMORY
  br label %block_.L_4aeb95

block_.L_4aeb2e:                                  ; preds = %block_.L_4aeaeb
  %loadMem_4aeb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3732 = getelementptr inbounds %struct.GPR, %struct.GPR* %3731, i32 0, i32 33
  %3733 = getelementptr inbounds %struct.Reg, %struct.Reg* %3732, i32 0, i32 0
  %PC.i2450 = bitcast %union.anon* %3733 to i64*
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 1
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %RAX.i2451 = bitcast %union.anon* %3736 to i64*
  %3737 = load i64, i64* %PC.i2450
  %3738 = add i64 %3737, 8
  store i64 %3738, i64* %PC.i2450
  %3739 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %3739, i64* %RAX.i2451, align 8
  store %struct.Memory* %loadMem_4aeb2e, %struct.Memory** %MEMORY
  %loadMem_4aeb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3741 = getelementptr inbounds %struct.GPR, %struct.GPR* %3740, i32 0, i32 33
  %3742 = getelementptr inbounds %struct.Reg, %struct.Reg* %3741, i32 0, i32 0
  %PC.i2447 = bitcast %union.anon* %3742 to i64*
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3744 = getelementptr inbounds %struct.GPR, %struct.GPR* %3743, i32 0, i32 1
  %3745 = getelementptr inbounds %struct.Reg, %struct.Reg* %3744, i32 0, i32 0
  %RAX.i2448 = bitcast %union.anon* %3745 to i64*
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3747 = getelementptr inbounds %struct.GPR, %struct.GPR* %3746, i32 0, i32 5
  %3748 = getelementptr inbounds %struct.Reg, %struct.Reg* %3747, i32 0, i32 0
  %RCX.i2449 = bitcast %union.anon* %3748 to i64*
  %3749 = load i64, i64* %RAX.i2448
  %3750 = add i64 %3749, 4
  %3751 = load i64, i64* %PC.i2447
  %3752 = add i64 %3751, 3
  store i64 %3752, i64* %PC.i2447
  %3753 = inttoptr i64 %3750 to i32*
  %3754 = load i32, i32* %3753
  %3755 = zext i32 %3754 to i64
  store i64 %3755, i64* %RCX.i2449, align 8
  store %struct.Memory* %loadMem_4aeb36, %struct.Memory** %MEMORY
  %loadMem_4aeb39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3757 = getelementptr inbounds %struct.GPR, %struct.GPR* %3756, i32 0, i32 33
  %3758 = getelementptr inbounds %struct.Reg, %struct.Reg* %3757, i32 0, i32 0
  %PC.i2445 = bitcast %union.anon* %3758 to i64*
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 1
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %RAX.i2446 = bitcast %union.anon* %3761 to i64*
  %3762 = load i64, i64* %PC.i2445
  %3763 = add i64 %3762, 8
  store i64 %3763, i64* %PC.i2445
  %3764 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3764, i64* %RAX.i2446, align 8
  store %struct.Memory* %loadMem_4aeb39, %struct.Memory** %MEMORY
  %loadMem_4aeb41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 33
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %PC.i2442 = bitcast %union.anon* %3767 to i64*
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3769 = getelementptr inbounds %struct.GPR, %struct.GPR* %3768, i32 0, i32 7
  %3770 = getelementptr inbounds %struct.Reg, %struct.Reg* %3769, i32 0, i32 0
  %RDX.i2443 = bitcast %union.anon* %3770 to i64*
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 15
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %RBP.i2444 = bitcast %union.anon* %3773 to i64*
  %3774 = load i64, i64* %RBP.i2444
  %3775 = sub i64 %3774, 4
  %3776 = load i64, i64* %PC.i2442
  %3777 = add i64 %3776, 4
  store i64 %3777, i64* %PC.i2442
  %3778 = inttoptr i64 %3775 to i32*
  %3779 = load i32, i32* %3778
  %3780 = sext i32 %3779 to i64
  store i64 %3780, i64* %RDX.i2443, align 8
  store %struct.Memory* %loadMem_4aeb41, %struct.Memory** %MEMORY
  %loadMem_4aeb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 33
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %PC.i2439 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 1
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RAX.i2440 = bitcast %union.anon* %3786 to i64*
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 7
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %RDX.i2441 = bitcast %union.anon* %3789 to i64*
  %3790 = load i64, i64* %RAX.i2440
  %3791 = load i64, i64* %RDX.i2441
  %3792 = mul i64 %3791, 8
  %3793 = add i64 %3792, %3790
  %3794 = load i64, i64* %PC.i2439
  %3795 = add i64 %3794, 4
  store i64 %3795, i64* %PC.i2439
  %3796 = inttoptr i64 %3793 to i64*
  %3797 = load i64, i64* %3796
  store i64 %3797, i64* %RAX.i2440, align 8
  store %struct.Memory* %loadMem_4aeb45, %struct.Memory** %MEMORY
  %loadMem_4aeb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3799 = getelementptr inbounds %struct.GPR, %struct.GPR* %3798, i32 0, i32 33
  %3800 = getelementptr inbounds %struct.Reg, %struct.Reg* %3799, i32 0, i32 0
  %PC.i2436 = bitcast %union.anon* %3800 to i64*
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3802 = getelementptr inbounds %struct.GPR, %struct.GPR* %3801, i32 0, i32 1
  %3803 = getelementptr inbounds %struct.Reg, %struct.Reg* %3802, i32 0, i32 0
  %RAX.i2437 = bitcast %union.anon* %3803 to i64*
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3805 = getelementptr inbounds %struct.GPR, %struct.GPR* %3804, i32 0, i32 5
  %3806 = getelementptr inbounds %struct.Reg, %struct.Reg* %3805, i32 0, i32 0
  %RCX.i2438 = bitcast %union.anon* %3806 to i64*
  %3807 = load i64, i64* %RCX.i2438
  %3808 = load i64, i64* %RAX.i2437
  %3809 = add i64 %3808, 4
  %3810 = load i64, i64* %PC.i2436
  %3811 = add i64 %3810, 3
  store i64 %3811, i64* %PC.i2436
  %3812 = trunc i64 %3807 to i32
  %3813 = inttoptr i64 %3809 to i32*
  %3814 = load i32, i32* %3813
  %3815 = sub i32 %3812, %3814
  %3816 = zext i32 %3815 to i64
  store i64 %3816, i64* %RCX.i2438, align 8
  %3817 = icmp ult i32 %3812, %3814
  %3818 = zext i1 %3817 to i8
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3818, i8* %3819, align 1
  %3820 = and i32 %3815, 255
  %3821 = call i32 @llvm.ctpop.i32(i32 %3820)
  %3822 = trunc i32 %3821 to i8
  %3823 = and i8 %3822, 1
  %3824 = xor i8 %3823, 1
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3824, i8* %3825, align 1
  %3826 = xor i32 %3814, %3812
  %3827 = xor i32 %3826, %3815
  %3828 = lshr i32 %3827, 4
  %3829 = trunc i32 %3828 to i8
  %3830 = and i8 %3829, 1
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3830, i8* %3831, align 1
  %3832 = icmp eq i32 %3815, 0
  %3833 = zext i1 %3832 to i8
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3833, i8* %3834, align 1
  %3835 = lshr i32 %3815, 31
  %3836 = trunc i32 %3835 to i8
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3836, i8* %3837, align 1
  %3838 = lshr i32 %3812, 31
  %3839 = lshr i32 %3814, 31
  %3840 = xor i32 %3839, %3838
  %3841 = xor i32 %3835, %3838
  %3842 = add i32 %3841, %3840
  %3843 = icmp eq i32 %3842, 2
  %3844 = zext i1 %3843 to i8
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3844, i8* %3845, align 1
  store %struct.Memory* %loadMem_4aeb49, %struct.Memory** %MEMORY
  %loadMem_4aeb4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3847 = getelementptr inbounds %struct.GPR, %struct.GPR* %3846, i32 0, i32 33
  %3848 = getelementptr inbounds %struct.Reg, %struct.Reg* %3847, i32 0, i32 0
  %PC.i2434 = bitcast %union.anon* %3848 to i64*
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 5
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %ECX.i2435 = bitcast %union.anon* %3851 to i32*
  %3852 = load i32, i32* %ECX.i2435
  %3853 = zext i32 %3852 to i64
  %3854 = load i64, i64* %PC.i2434
  %3855 = add i64 %3854, 3
  store i64 %3855, i64* %PC.i2434
  %3856 = sub i32 %3852, 127
  %3857 = icmp ult i32 %3852, 127
  %3858 = zext i1 %3857 to i8
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3858, i8* %3859, align 1
  %3860 = and i32 %3856, 255
  %3861 = call i32 @llvm.ctpop.i32(i32 %3860)
  %3862 = trunc i32 %3861 to i8
  %3863 = and i8 %3862, 1
  %3864 = xor i8 %3863, 1
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3864, i8* %3865, align 1
  %3866 = xor i64 127, %3853
  %3867 = trunc i64 %3866 to i32
  %3868 = xor i32 %3867, %3856
  %3869 = lshr i32 %3868, 4
  %3870 = trunc i32 %3869 to i8
  %3871 = and i8 %3870, 1
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3871, i8* %3872, align 1
  %3873 = icmp eq i32 %3856, 0
  %3874 = zext i1 %3873 to i8
  %3875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3874, i8* %3875, align 1
  %3876 = lshr i32 %3856, 31
  %3877 = trunc i32 %3876 to i8
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3877, i8* %3878, align 1
  %3879 = lshr i32 %3852, 31
  %3880 = xor i32 %3876, %3879
  %3881 = add i32 %3880, %3879
  %3882 = icmp eq i32 %3881, 2
  %3883 = zext i1 %3882 to i8
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3883, i8* %3884, align 1
  store %struct.Memory* %loadMem_4aeb4c, %struct.Memory** %MEMORY
  %loadMem_4aeb4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 33
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %PC.i2433 = bitcast %union.anon* %3887 to i64*
  %3888 = load i64, i64* %PC.i2433
  %3889 = add i64 %3888, 22
  %3890 = load i64, i64* %PC.i2433
  %3891 = add i64 %3890, 6
  %3892 = load i64, i64* %PC.i2433
  %3893 = add i64 %3892, 6
  store i64 %3893, i64* %PC.i2433
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3895 = load i8, i8* %3894, align 1
  %3896 = icmp ne i8 %3895, 0
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3898 = load i8, i8* %3897, align 1
  %3899 = icmp ne i8 %3898, 0
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3901 = load i8, i8* %3900, align 1
  %3902 = icmp ne i8 %3901, 0
  %3903 = xor i1 %3899, %3902
  %3904 = or i1 %3896, %3903
  %3905 = zext i1 %3904 to i8
  store i8 %3905, i8* %BRANCH_TAKEN, align 1
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3907 = select i1 %3904, i64 %3889, i64 %3891
  store i64 %3907, i64* %3906, align 8
  store %struct.Memory* %loadMem_4aeb4f, %struct.Memory** %MEMORY
  %loadBr_4aeb4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aeb4f = icmp eq i8 %loadBr_4aeb4f, 1
  br i1 %cmpBr_4aeb4f, label %block_.L_4aeb65, label %block_4aeb55

block_4aeb55:                                     ; preds = %block_.L_4aeb2e
  %loadMem_4aeb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3909 = getelementptr inbounds %struct.GPR, %struct.GPR* %3908, i32 0, i32 33
  %3910 = getelementptr inbounds %struct.Reg, %struct.Reg* %3909, i32 0, i32 0
  %PC.i2431 = bitcast %union.anon* %3910 to i64*
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3912 = getelementptr inbounds %struct.GPR, %struct.GPR* %3911, i32 0, i32 1
  %3913 = getelementptr inbounds %struct.Reg, %struct.Reg* %3912, i32 0, i32 0
  %RAX.i2432 = bitcast %union.anon* %3913 to i64*
  %3914 = load i64, i64* %PC.i2431
  %3915 = add i64 %3914, 5
  store i64 %3915, i64* %PC.i2431
  store i64 127, i64* %RAX.i2432, align 8
  store %struct.Memory* %loadMem_4aeb55, %struct.Memory** %MEMORY
  %loadMem_4aeb5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3917 = getelementptr inbounds %struct.GPR, %struct.GPR* %3916, i32 0, i32 33
  %3918 = getelementptr inbounds %struct.Reg, %struct.Reg* %3917, i32 0, i32 0
  %PC.i2428 = bitcast %union.anon* %3918 to i64*
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 1
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %EAX.i2429 = bitcast %union.anon* %3921 to i32*
  %3922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3923 = getelementptr inbounds %struct.GPR, %struct.GPR* %3922, i32 0, i32 15
  %3924 = getelementptr inbounds %struct.Reg, %struct.Reg* %3923, i32 0, i32 0
  %RBP.i2430 = bitcast %union.anon* %3924 to i64*
  %3925 = load i64, i64* %RBP.i2430
  %3926 = sub i64 %3925, 35436
  %3927 = load i32, i32* %EAX.i2429
  %3928 = zext i32 %3927 to i64
  %3929 = load i64, i64* %PC.i2428
  %3930 = add i64 %3929, 6
  store i64 %3930, i64* %PC.i2428
  %3931 = inttoptr i64 %3926 to i32*
  store i32 %3927, i32* %3931
  store %struct.Memory* %loadMem_4aeb5a, %struct.Memory** %MEMORY
  %loadMem_4aeb60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 33
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %PC.i2427 = bitcast %union.anon* %3934 to i64*
  %3935 = load i64, i64* %PC.i2427
  %3936 = add i64 %3935, 41
  %3937 = load i64, i64* %PC.i2427
  %3938 = add i64 %3937, 5
  store i64 %3938, i64* %PC.i2427
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3936, i64* %3939, align 8
  store %struct.Memory* %loadMem_4aeb60, %struct.Memory** %MEMORY
  br label %block_.L_4aeb89

block_.L_4aeb65:                                  ; preds = %block_.L_4aeb2e
  %loadMem_4aeb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3941 = getelementptr inbounds %struct.GPR, %struct.GPR* %3940, i32 0, i32 33
  %3942 = getelementptr inbounds %struct.Reg, %struct.Reg* %3941, i32 0, i32 0
  %PC.i2425 = bitcast %union.anon* %3942 to i64*
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3944 = getelementptr inbounds %struct.GPR, %struct.GPR* %3943, i32 0, i32 1
  %3945 = getelementptr inbounds %struct.Reg, %struct.Reg* %3944, i32 0, i32 0
  %RAX.i2426 = bitcast %union.anon* %3945 to i64*
  %3946 = load i64, i64* %PC.i2425
  %3947 = add i64 %3946, 8
  store i64 %3947, i64* %PC.i2425
  %3948 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %3948, i64* %RAX.i2426, align 8
  store %struct.Memory* %loadMem_4aeb65, %struct.Memory** %MEMORY
  %loadMem_4aeb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3950 = getelementptr inbounds %struct.GPR, %struct.GPR* %3949, i32 0, i32 33
  %3951 = getelementptr inbounds %struct.Reg, %struct.Reg* %3950, i32 0, i32 0
  %PC.i2422 = bitcast %union.anon* %3951 to i64*
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3953 = getelementptr inbounds %struct.GPR, %struct.GPR* %3952, i32 0, i32 1
  %3954 = getelementptr inbounds %struct.Reg, %struct.Reg* %3953, i32 0, i32 0
  %RAX.i2423 = bitcast %union.anon* %3954 to i64*
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3956 = getelementptr inbounds %struct.GPR, %struct.GPR* %3955, i32 0, i32 5
  %3957 = getelementptr inbounds %struct.Reg, %struct.Reg* %3956, i32 0, i32 0
  %RCX.i2424 = bitcast %union.anon* %3957 to i64*
  %3958 = load i64, i64* %RAX.i2423
  %3959 = add i64 %3958, 4
  %3960 = load i64, i64* %PC.i2422
  %3961 = add i64 %3960, 3
  store i64 %3961, i64* %PC.i2422
  %3962 = inttoptr i64 %3959 to i32*
  %3963 = load i32, i32* %3962
  %3964 = zext i32 %3963 to i64
  store i64 %3964, i64* %RCX.i2424, align 8
  store %struct.Memory* %loadMem_4aeb6d, %struct.Memory** %MEMORY
  %loadMem_4aeb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 33
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %PC.i2420 = bitcast %union.anon* %3967 to i64*
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3969 = getelementptr inbounds %struct.GPR, %struct.GPR* %3968, i32 0, i32 1
  %3970 = getelementptr inbounds %struct.Reg, %struct.Reg* %3969, i32 0, i32 0
  %RAX.i2421 = bitcast %union.anon* %3970 to i64*
  %3971 = load i64, i64* %PC.i2420
  %3972 = add i64 %3971, 8
  store i64 %3972, i64* %PC.i2420
  %3973 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3973, i64* %RAX.i2421, align 8
  store %struct.Memory* %loadMem_4aeb70, %struct.Memory** %MEMORY
  %loadMem_4aeb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3975 = getelementptr inbounds %struct.GPR, %struct.GPR* %3974, i32 0, i32 33
  %3976 = getelementptr inbounds %struct.Reg, %struct.Reg* %3975, i32 0, i32 0
  %PC.i2417 = bitcast %union.anon* %3976 to i64*
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3978 = getelementptr inbounds %struct.GPR, %struct.GPR* %3977, i32 0, i32 7
  %3979 = getelementptr inbounds %struct.Reg, %struct.Reg* %3978, i32 0, i32 0
  %RDX.i2418 = bitcast %union.anon* %3979 to i64*
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3981 = getelementptr inbounds %struct.GPR, %struct.GPR* %3980, i32 0, i32 15
  %3982 = getelementptr inbounds %struct.Reg, %struct.Reg* %3981, i32 0, i32 0
  %RBP.i2419 = bitcast %union.anon* %3982 to i64*
  %3983 = load i64, i64* %RBP.i2419
  %3984 = sub i64 %3983, 4
  %3985 = load i64, i64* %PC.i2417
  %3986 = add i64 %3985, 4
  store i64 %3986, i64* %PC.i2417
  %3987 = inttoptr i64 %3984 to i32*
  %3988 = load i32, i32* %3987
  %3989 = sext i32 %3988 to i64
  store i64 %3989, i64* %RDX.i2418, align 8
  store %struct.Memory* %loadMem_4aeb78, %struct.Memory** %MEMORY
  %loadMem_4aeb7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 33
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %PC.i2414 = bitcast %union.anon* %3992 to i64*
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 1
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %RAX.i2415 = bitcast %union.anon* %3995 to i64*
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 7
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %RDX.i2416 = bitcast %union.anon* %3998 to i64*
  %3999 = load i64, i64* %RAX.i2415
  %4000 = load i64, i64* %RDX.i2416
  %4001 = mul i64 %4000, 8
  %4002 = add i64 %4001, %3999
  %4003 = load i64, i64* %PC.i2414
  %4004 = add i64 %4003, 4
  store i64 %4004, i64* %PC.i2414
  %4005 = inttoptr i64 %4002 to i64*
  %4006 = load i64, i64* %4005
  store i64 %4006, i64* %RAX.i2415, align 8
  store %struct.Memory* %loadMem_4aeb7c, %struct.Memory** %MEMORY
  %loadMem_4aeb80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4008 = getelementptr inbounds %struct.GPR, %struct.GPR* %4007, i32 0, i32 33
  %4009 = getelementptr inbounds %struct.Reg, %struct.Reg* %4008, i32 0, i32 0
  %PC.i2411 = bitcast %union.anon* %4009 to i64*
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4011 = getelementptr inbounds %struct.GPR, %struct.GPR* %4010, i32 0, i32 1
  %4012 = getelementptr inbounds %struct.Reg, %struct.Reg* %4011, i32 0, i32 0
  %RAX.i2412 = bitcast %union.anon* %4012 to i64*
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 5
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %RCX.i2413 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %RCX.i2413
  %4017 = load i64, i64* %RAX.i2412
  %4018 = add i64 %4017, 4
  %4019 = load i64, i64* %PC.i2411
  %4020 = add i64 %4019, 3
  store i64 %4020, i64* %PC.i2411
  %4021 = trunc i64 %4016 to i32
  %4022 = inttoptr i64 %4018 to i32*
  %4023 = load i32, i32* %4022
  %4024 = sub i32 %4021, %4023
  %4025 = zext i32 %4024 to i64
  store i64 %4025, i64* %RCX.i2413, align 8
  %4026 = icmp ult i32 %4021, %4023
  %4027 = zext i1 %4026 to i8
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4027, i8* %4028, align 1
  %4029 = and i32 %4024, 255
  %4030 = call i32 @llvm.ctpop.i32(i32 %4029)
  %4031 = trunc i32 %4030 to i8
  %4032 = and i8 %4031, 1
  %4033 = xor i8 %4032, 1
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4033, i8* %4034, align 1
  %4035 = xor i32 %4023, %4021
  %4036 = xor i32 %4035, %4024
  %4037 = lshr i32 %4036, 4
  %4038 = trunc i32 %4037 to i8
  %4039 = and i8 %4038, 1
  %4040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4039, i8* %4040, align 1
  %4041 = icmp eq i32 %4024, 0
  %4042 = zext i1 %4041 to i8
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4042, i8* %4043, align 1
  %4044 = lshr i32 %4024, 31
  %4045 = trunc i32 %4044 to i8
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4045, i8* %4046, align 1
  %4047 = lshr i32 %4021, 31
  %4048 = lshr i32 %4023, 31
  %4049 = xor i32 %4048, %4047
  %4050 = xor i32 %4044, %4047
  %4051 = add i32 %4050, %4049
  %4052 = icmp eq i32 %4051, 2
  %4053 = zext i1 %4052 to i8
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4053, i8* %4054, align 1
  store %struct.Memory* %loadMem_4aeb80, %struct.Memory** %MEMORY
  %loadMem_4aeb83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4056 = getelementptr inbounds %struct.GPR, %struct.GPR* %4055, i32 0, i32 33
  %4057 = getelementptr inbounds %struct.Reg, %struct.Reg* %4056, i32 0, i32 0
  %PC.i2408 = bitcast %union.anon* %4057 to i64*
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4059 = getelementptr inbounds %struct.GPR, %struct.GPR* %4058, i32 0, i32 5
  %4060 = getelementptr inbounds %struct.Reg, %struct.Reg* %4059, i32 0, i32 0
  %ECX.i2409 = bitcast %union.anon* %4060 to i32*
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4062 = getelementptr inbounds %struct.GPR, %struct.GPR* %4061, i32 0, i32 15
  %4063 = getelementptr inbounds %struct.Reg, %struct.Reg* %4062, i32 0, i32 0
  %RBP.i2410 = bitcast %union.anon* %4063 to i64*
  %4064 = load i64, i64* %RBP.i2410
  %4065 = sub i64 %4064, 35436
  %4066 = load i32, i32* %ECX.i2409
  %4067 = zext i32 %4066 to i64
  %4068 = load i64, i64* %PC.i2408
  %4069 = add i64 %4068, 6
  store i64 %4069, i64* %PC.i2408
  %4070 = inttoptr i64 %4065 to i32*
  store i32 %4066, i32* %4070
  store %struct.Memory* %loadMem_4aeb83, %struct.Memory** %MEMORY
  br label %block_.L_4aeb89

block_.L_4aeb89:                                  ; preds = %block_.L_4aeb65, %block_4aeb55
  %loadMem_4aeb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4072 = getelementptr inbounds %struct.GPR, %struct.GPR* %4071, i32 0, i32 33
  %4073 = getelementptr inbounds %struct.Reg, %struct.Reg* %4072, i32 0, i32 0
  %PC.i2405 = bitcast %union.anon* %4073 to i64*
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4075 = getelementptr inbounds %struct.GPR, %struct.GPR* %4074, i32 0, i32 1
  %4076 = getelementptr inbounds %struct.Reg, %struct.Reg* %4075, i32 0, i32 0
  %RAX.i2406 = bitcast %union.anon* %4076 to i64*
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4078 = getelementptr inbounds %struct.GPR, %struct.GPR* %4077, i32 0, i32 15
  %4079 = getelementptr inbounds %struct.Reg, %struct.Reg* %4078, i32 0, i32 0
  %RBP.i2407 = bitcast %union.anon* %4079 to i64*
  %4080 = load i64, i64* %RBP.i2407
  %4081 = sub i64 %4080, 35436
  %4082 = load i64, i64* %PC.i2405
  %4083 = add i64 %4082, 6
  store i64 %4083, i64* %PC.i2405
  %4084 = inttoptr i64 %4081 to i32*
  %4085 = load i32, i32* %4084
  %4086 = zext i32 %4085 to i64
  store i64 %4086, i64* %RAX.i2406, align 8
  store %struct.Memory* %loadMem_4aeb89, %struct.Memory** %MEMORY
  %loadMem_4aeb8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4088 = getelementptr inbounds %struct.GPR, %struct.GPR* %4087, i32 0, i32 33
  %4089 = getelementptr inbounds %struct.Reg, %struct.Reg* %4088, i32 0, i32 0
  %PC.i2402 = bitcast %union.anon* %4089 to i64*
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4091 = getelementptr inbounds %struct.GPR, %struct.GPR* %4090, i32 0, i32 1
  %4092 = getelementptr inbounds %struct.Reg, %struct.Reg* %4091, i32 0, i32 0
  %EAX.i2403 = bitcast %union.anon* %4092 to i32*
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4094 = getelementptr inbounds %struct.GPR, %struct.GPR* %4093, i32 0, i32 15
  %4095 = getelementptr inbounds %struct.Reg, %struct.Reg* %4094, i32 0, i32 0
  %RBP.i2404 = bitcast %union.anon* %4095 to i64*
  %4096 = load i64, i64* %RBP.i2404
  %4097 = sub i64 %4096, 35432
  %4098 = load i32, i32* %EAX.i2403
  %4099 = zext i32 %4098 to i64
  %4100 = load i64, i64* %PC.i2402
  %4101 = add i64 %4100, 6
  store i64 %4101, i64* %PC.i2402
  %4102 = inttoptr i64 %4097 to i32*
  store i32 %4098, i32* %4102
  store %struct.Memory* %loadMem_4aeb8f, %struct.Memory** %MEMORY
  br label %block_.L_4aeb95

block_.L_4aeb95:                                  ; preds = %block_.L_4aeb89, %block_4aeb1e
  %loadMem_4aeb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 33
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %PC.i2399 = bitcast %union.anon* %4105 to i64*
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 1
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %RAX.i2400 = bitcast %union.anon* %4108 to i64*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 15
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %RBP.i2401 = bitcast %union.anon* %4111 to i64*
  %4112 = load i64, i64* %RBP.i2401
  %4113 = sub i64 %4112, 35432
  %4114 = load i64, i64* %PC.i2399
  %4115 = add i64 %4114, 6
  store i64 %4115, i64* %PC.i2399
  %4116 = inttoptr i64 %4113 to i32*
  %4117 = load i32, i32* %4116
  %4118 = zext i32 %4117 to i64
  store i64 %4118, i64* %RAX.i2400, align 8
  store %struct.Memory* %loadMem_4aeb95, %struct.Memory** %MEMORY
  %loadMem_4aeb9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 33
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %PC.i2396 = bitcast %union.anon* %4121 to i64*
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 1
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %EAX.i2397 = bitcast %union.anon* %4124 to i32*
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 15
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %RBP.i2398 = bitcast %union.anon* %4127 to i64*
  %4128 = load i64, i64* %RBP.i2398
  %4129 = sub i64 %4128, 35412
  %4130 = load i32, i32* %EAX.i2397
  %4131 = zext i32 %4130 to i64
  %4132 = load i64, i64* %PC.i2396
  %4133 = add i64 %4132, 6
  store i64 %4133, i64* %PC.i2396
  %4134 = inttoptr i64 %4129 to i32*
  store i32 %4130, i32* %4134
  store %struct.Memory* %loadMem_4aeb9b, %struct.Memory** %MEMORY
  %loadMem_4aeba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4136 = getelementptr inbounds %struct.GPR, %struct.GPR* %4135, i32 0, i32 33
  %4137 = getelementptr inbounds %struct.Reg, %struct.Reg* %4136, i32 0, i32 0
  %PC.i2394 = bitcast %union.anon* %4137 to i64*
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 15
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %RBP.i2395 = bitcast %union.anon* %4140 to i64*
  %4141 = load i64, i64* %RBP.i2395
  %4142 = sub i64 %4141, 40
  %4143 = load i64, i64* %PC.i2394
  %4144 = add i64 %4143, 7
  store i64 %4144, i64* %PC.i2394
  %4145 = inttoptr i64 %4142 to i32*
  store i32 0, i32* %4145
  store %struct.Memory* %loadMem_4aeba1, %struct.Memory** %MEMORY
  br label %block_.L_4aeba8

block_.L_4aeba8:                                  ; preds = %block_.L_4aeebf, %block_.L_4aeb95
  %loadMem_4aeba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4147 = getelementptr inbounds %struct.GPR, %struct.GPR* %4146, i32 0, i32 33
  %4148 = getelementptr inbounds %struct.Reg, %struct.Reg* %4147, i32 0, i32 0
  %PC.i2392 = bitcast %union.anon* %4148 to i64*
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4150 = getelementptr inbounds %struct.GPR, %struct.GPR* %4149, i32 0, i32 15
  %4151 = getelementptr inbounds %struct.Reg, %struct.Reg* %4150, i32 0, i32 0
  %RBP.i2393 = bitcast %union.anon* %4151 to i64*
  %4152 = load i64, i64* %RBP.i2393
  %4153 = sub i64 %4152, 40
  %4154 = load i64, i64* %PC.i2392
  %4155 = add i64 %4154, 4
  store i64 %4155, i64* %PC.i2392
  %4156 = inttoptr i64 %4153 to i32*
  %4157 = load i32, i32* %4156
  %4158 = sub i32 %4157, 3
  %4159 = icmp ult i32 %4157, 3
  %4160 = zext i1 %4159 to i8
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4160, i8* %4161, align 1
  %4162 = and i32 %4158, 255
  %4163 = call i32 @llvm.ctpop.i32(i32 %4162)
  %4164 = trunc i32 %4163 to i8
  %4165 = and i8 %4164, 1
  %4166 = xor i8 %4165, 1
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4166, i8* %4167, align 1
  %4168 = xor i32 %4157, 3
  %4169 = xor i32 %4168, %4158
  %4170 = lshr i32 %4169, 4
  %4171 = trunc i32 %4170 to i8
  %4172 = and i8 %4171, 1
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4172, i8* %4173, align 1
  %4174 = icmp eq i32 %4158, 0
  %4175 = zext i1 %4174 to i8
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4175, i8* %4176, align 1
  %4177 = lshr i32 %4158, 31
  %4178 = trunc i32 %4177 to i8
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4178, i8* %4179, align 1
  %4180 = lshr i32 %4157, 31
  %4181 = xor i32 %4177, %4180
  %4182 = add i32 %4181, %4180
  %4183 = icmp eq i32 %4182, 2
  %4184 = zext i1 %4183 to i8
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4184, i8* %4185, align 1
  store %struct.Memory* %loadMem_4aeba8, %struct.Memory** %MEMORY
  %loadMem_4aebac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 33
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %PC.i2391 = bitcast %union.anon* %4188 to i64*
  %4189 = load i64, i64* %PC.i2391
  %4190 = add i64 %4189, 801
  %4191 = load i64, i64* %PC.i2391
  %4192 = add i64 %4191, 6
  %4193 = load i64, i64* %PC.i2391
  %4194 = add i64 %4193, 6
  store i64 %4194, i64* %PC.i2391
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4196 = load i8, i8* %4195, align 1
  %4197 = icmp ne i8 %4196, 0
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4199 = load i8, i8* %4198, align 1
  %4200 = icmp ne i8 %4199, 0
  %4201 = xor i1 %4197, %4200
  %4202 = xor i1 %4201, true
  %4203 = zext i1 %4202 to i8
  store i8 %4203, i8* %BRANCH_TAKEN, align 1
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4205 = select i1 %4201, i64 %4192, i64 %4190
  store i64 %4205, i64* %4204, align 8
  store %struct.Memory* %loadMem_4aebac, %struct.Memory** %MEMORY
  %loadBr_4aebac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aebac = icmp eq i8 %loadBr_4aebac, 1
  br i1 %cmpBr_4aebac, label %block_.L_4aeecd, label %block_4aebb2

block_4aebb2:                                     ; preds = %block_.L_4aeba8
  %loadMem_4aebb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 33
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %PC.i2389 = bitcast %union.anon* %4208 to i64*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 15
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %RBP.i2390 = bitcast %union.anon* %4211 to i64*
  %4212 = load i64, i64* %RBP.i2390
  %4213 = sub i64 %4212, 35408
  %4214 = load i64, i64* %PC.i2389
  %4215 = add i64 %4214, 7
  store i64 %4215, i64* %PC.i2389
  %4216 = inttoptr i64 %4213 to i32*
  %4217 = load i32, i32* %4216
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4218, align 1
  %4219 = and i32 %4217, 255
  %4220 = call i32 @llvm.ctpop.i32(i32 %4219)
  %4221 = trunc i32 %4220 to i8
  %4222 = and i8 %4221, 1
  %4223 = xor i8 %4222, 1
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4223, i8* %4224, align 1
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4225, align 1
  %4226 = icmp eq i32 %4217, 0
  %4227 = zext i1 %4226 to i8
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4227, i8* %4228, align 1
  %4229 = lshr i32 %4217, 31
  %4230 = trunc i32 %4229 to i8
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4230, i8* %4231, align 1
  %4232 = lshr i32 %4217, 31
  %4233 = xor i32 %4229, %4232
  %4234 = add i32 %4233, %4232
  %4235 = icmp eq i32 %4234, 2
  %4236 = zext i1 %4235 to i8
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4236, i8* %4237, align 1
  store %struct.Memory* %loadMem_4aebb2, %struct.Memory** %MEMORY
  %loadMem_4aebb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 33
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %PC.i2388 = bitcast %union.anon* %4240 to i64*
  %4241 = load i64, i64* %PC.i2388
  %4242 = add i64 %4241, 203
  %4243 = load i64, i64* %PC.i2388
  %4244 = add i64 %4243, 6
  %4245 = load i64, i64* %PC.i2388
  %4246 = add i64 %4245, 6
  store i64 %4246, i64* %PC.i2388
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4248 = load i8, i8* %4247, align 1
  %4249 = icmp eq i8 %4248, 0
  %4250 = zext i1 %4249 to i8
  store i8 %4250, i8* %BRANCH_TAKEN, align 1
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4252 = select i1 %4249, i64 %4242, i64 %4244
  store i64 %4252, i64* %4251, align 8
  store %struct.Memory* %loadMem_4aebb9, %struct.Memory** %MEMORY
  %loadBr_4aebb9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aebb9 = icmp eq i8 %loadBr_4aebb9, 1
  br i1 %cmpBr_4aebb9, label %block_.L_4aec84, label %block_4aebbf

block_4aebbf:                                     ; preds = %block_4aebb2
  %loadMem_4aebbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 33
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %PC.i2385 = bitcast %union.anon* %4255 to i64*
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 1
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %RAX.i2386 = bitcast %union.anon* %4258 to i64*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 15
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %RBP.i2387 = bitcast %union.anon* %4261 to i64*
  %4262 = load i64, i64* %RBP.i2387
  %4263 = sub i64 %4262, 35392
  %4264 = load i64, i64* %PC.i2385
  %4265 = add i64 %4264, 7
  store i64 %4265, i64* %PC.i2385
  store i64 %4263, i64* %RAX.i2386, align 8
  store %struct.Memory* %loadMem_4aebbf, %struct.Memory** %MEMORY
  %loadMem_4aebc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 33
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %PC.i2382 = bitcast %union.anon* %4268 to i64*
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 5
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %RCX.i2383 = bitcast %union.anon* %4271 to i64*
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4273 = getelementptr inbounds %struct.GPR, %struct.GPR* %4272, i32 0, i32 15
  %4274 = getelementptr inbounds %struct.Reg, %struct.Reg* %4273, i32 0, i32 0
  %RBP.i2384 = bitcast %union.anon* %4274 to i64*
  %4275 = load i64, i64* %RBP.i2384
  %4276 = sub i64 %4275, 19184
  %4277 = load i64, i64* %PC.i2382
  %4278 = add i64 %4277, 7
  store i64 %4278, i64* %PC.i2382
  store i64 %4276, i64* %RCX.i2383, align 8
  store %struct.Memory* %loadMem_4aebc6, %struct.Memory** %MEMORY
  %loadMem_4aebcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 33
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %PC.i2379 = bitcast %union.anon* %4281 to i64*
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4283 = getelementptr inbounds %struct.GPR, %struct.GPR* %4282, i32 0, i32 7
  %4284 = getelementptr inbounds %struct.Reg, %struct.Reg* %4283, i32 0, i32 0
  %RDX.i2380 = bitcast %union.anon* %4284 to i64*
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4286 = getelementptr inbounds %struct.GPR, %struct.GPR* %4285, i32 0, i32 15
  %4287 = getelementptr inbounds %struct.Reg, %struct.Reg* %4286, i32 0, i32 0
  %RBP.i2381 = bitcast %union.anon* %4287 to i64*
  %4288 = load i64, i64* %RBP.i2381
  %4289 = sub i64 %4288, 40
  %4290 = load i64, i64* %PC.i2379
  %4291 = add i64 %4290, 4
  store i64 %4291, i64* %PC.i2379
  %4292 = inttoptr i64 %4289 to i32*
  %4293 = load i32, i32* %4292
  %4294 = sext i32 %4293 to i64
  store i64 %4294, i64* %RDX.i2380, align 8
  store %struct.Memory* %loadMem_4aebcd, %struct.Memory** %MEMORY
  %loadMem_4aebd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4296 = getelementptr inbounds %struct.GPR, %struct.GPR* %4295, i32 0, i32 33
  %4297 = getelementptr inbounds %struct.Reg, %struct.Reg* %4296, i32 0, i32 0
  %PC.i2375 = bitcast %union.anon* %4297 to i64*
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4299 = getelementptr inbounds %struct.GPR, %struct.GPR* %4298, i32 0, i32 7
  %4300 = getelementptr inbounds %struct.Reg, %struct.Reg* %4299, i32 0, i32 0
  %RDX.i2376 = bitcast %union.anon* %4300 to i64*
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 9
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %RSI.i2377 = bitcast %union.anon* %4303 to i64*
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 15
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %RBP.i2378 = bitcast %union.anon* %4306 to i64*
  %4307 = load i64, i64* %RBP.i2378
  %4308 = load i64, i64* %RDX.i2376
  %4309 = mul i64 %4308, 4
  %4310 = add i64 %4307, -804
  %4311 = add i64 %4310, %4309
  %4312 = load i64, i64* %PC.i2375
  %4313 = add i64 %4312, 7
  store i64 %4313, i64* %PC.i2375
  %4314 = inttoptr i64 %4311 to i32*
  %4315 = load i32, i32* %4314
  %4316 = zext i32 %4315 to i64
  store i64 %4316, i64* %RSI.i2377, align 8
  store %struct.Memory* %loadMem_4aebd1, %struct.Memory** %MEMORY
  %loadMem_4aebd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 33
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %PC.i2372 = bitcast %union.anon* %4319 to i64*
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4321 = getelementptr inbounds %struct.GPR, %struct.GPR* %4320, i32 0, i32 5
  %4322 = getelementptr inbounds %struct.Reg, %struct.Reg* %4321, i32 0, i32 0
  %RCX.i2373 = bitcast %union.anon* %4322 to i64*
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4324 = getelementptr inbounds %struct.GPR, %struct.GPR* %4323, i32 0, i32 7
  %4325 = getelementptr inbounds %struct.Reg, %struct.Reg* %4324, i32 0, i32 0
  %RDX.i2374 = bitcast %union.anon* %4325 to i64*
  %4326 = load i64, i64* %RCX.i2373
  %4327 = load i64, i64* %PC.i2372
  %4328 = add i64 %4327, 3
  store i64 %4328, i64* %PC.i2372
  store i64 %4326, i64* %RDX.i2374, align 8
  store %struct.Memory* %loadMem_4aebd8, %struct.Memory** %MEMORY
  %loadMem_4aebdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 33
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %PC.i2370 = bitcast %union.anon* %4331 to i64*
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 7
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %RDX.i2371 = bitcast %union.anon* %4334 to i64*
  %4335 = load i64, i64* %RDX.i2371
  %4336 = load i64, i64* %PC.i2370
  %4337 = add i64 %4336, 7
  store i64 %4337, i64* %PC.i2370
  %4338 = add i64 2700, %4335
  store i64 %4338, i64* %RDX.i2371, align 8
  %4339 = icmp ult i64 %4338, %4335
  %4340 = icmp ult i64 %4338, 2700
  %4341 = or i1 %4339, %4340
  %4342 = zext i1 %4341 to i8
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4342, i8* %4343, align 1
  %4344 = trunc i64 %4338 to i32
  %4345 = and i32 %4344, 255
  %4346 = call i32 @llvm.ctpop.i32(i32 %4345)
  %4347 = trunc i32 %4346 to i8
  %4348 = and i8 %4347, 1
  %4349 = xor i8 %4348, 1
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4349, i8* %4350, align 1
  %4351 = xor i64 2700, %4335
  %4352 = xor i64 %4351, %4338
  %4353 = lshr i64 %4352, 4
  %4354 = trunc i64 %4353 to i8
  %4355 = and i8 %4354, 1
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4355, i8* %4356, align 1
  %4357 = icmp eq i64 %4338, 0
  %4358 = zext i1 %4357 to i8
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4358, i8* %4359, align 1
  %4360 = lshr i64 %4338, 63
  %4361 = trunc i64 %4360 to i8
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4361, i8* %4362, align 1
  %4363 = lshr i64 %4335, 63
  %4364 = xor i64 %4360, %4363
  %4365 = add i64 %4364, %4360
  %4366 = icmp eq i64 %4365, 2
  %4367 = zext i1 %4366 to i8
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4367, i8* %4368, align 1
  store %struct.Memory* %loadMem_4aebdb, %struct.Memory** %MEMORY
  %loadMem_4aebe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4370 = getelementptr inbounds %struct.GPR, %struct.GPR* %4369, i32 0, i32 33
  %4371 = getelementptr inbounds %struct.Reg, %struct.Reg* %4370, i32 0, i32 0
  %PC.i2367 = bitcast %union.anon* %4371 to i64*
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4373 = getelementptr inbounds %struct.GPR, %struct.GPR* %4372, i32 0, i32 11
  %4374 = getelementptr inbounds %struct.Reg, %struct.Reg* %4373, i32 0, i32 0
  %RDI.i2368 = bitcast %union.anon* %4374 to i64*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4376 = getelementptr inbounds %struct.GPR, %struct.GPR* %4375, i32 0, i32 15
  %4377 = getelementptr inbounds %struct.Reg, %struct.Reg* %4376, i32 0, i32 0
  %RBP.i2369 = bitcast %union.anon* %4377 to i64*
  %4378 = load i64, i64* %RBP.i2369
  %4379 = sub i64 %4378, 4
  %4380 = load i64, i64* %PC.i2367
  %4381 = add i64 %4380, 4
  store i64 %4381, i64* %PC.i2367
  %4382 = inttoptr i64 %4379 to i32*
  %4383 = load i32, i32* %4382
  %4384 = sext i32 %4383 to i64
  store i64 %4384, i64* %RDI.i2368, align 8
  store %struct.Memory* %loadMem_4aebe2, %struct.Memory** %MEMORY
  %loadMem_4aebe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4386 = getelementptr inbounds %struct.GPR, %struct.GPR* %4385, i32 0, i32 33
  %4387 = getelementptr inbounds %struct.Reg, %struct.Reg* %4386, i32 0, i32 0
  %PC.i2365 = bitcast %union.anon* %4387 to i64*
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4389 = getelementptr inbounds %struct.GPR, %struct.GPR* %4388, i32 0, i32 11
  %4390 = getelementptr inbounds %struct.Reg, %struct.Reg* %4389, i32 0, i32 0
  %RDI.i2366 = bitcast %union.anon* %4390 to i64*
  %4391 = load i64, i64* %RDI.i2366
  %4392 = load i64, i64* %PC.i2365
  %4393 = add i64 %4392, 7
  store i64 %4393, i64* %PC.i2365
  %4394 = sext i64 %4391 to i128
  %4395 = and i128 %4394, -18446744073709551616
  %4396 = zext i64 %4391 to i128
  %4397 = or i128 %4395, %4396
  %4398 = mul i128 180, %4397
  %4399 = trunc i128 %4398 to i64
  store i64 %4399, i64* %RDI.i2366, align 8
  %4400 = sext i64 %4399 to i128
  %4401 = icmp ne i128 %4400, %4398
  %4402 = zext i1 %4401 to i8
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4402, i8* %4403, align 1
  %4404 = trunc i128 %4398 to i32
  %4405 = and i32 %4404, 255
  %4406 = call i32 @llvm.ctpop.i32(i32 %4405)
  %4407 = trunc i32 %4406 to i8
  %4408 = and i8 %4407, 1
  %4409 = xor i8 %4408, 1
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4409, i8* %4410, align 1
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4411, align 1
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4412, align 1
  %4413 = lshr i64 %4399, 63
  %4414 = trunc i64 %4413 to i8
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4414, i8* %4415, align 1
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4402, i8* %4416, align 1
  store %struct.Memory* %loadMem_4aebe6, %struct.Memory** %MEMORY
  %loadMem_4aebed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4418 = getelementptr inbounds %struct.GPR, %struct.GPR* %4417, i32 0, i32 33
  %4419 = getelementptr inbounds %struct.Reg, %struct.Reg* %4418, i32 0, i32 0
  %PC.i2362 = bitcast %union.anon* %4419 to i64*
  %4420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4421 = getelementptr inbounds %struct.GPR, %struct.GPR* %4420, i32 0, i32 7
  %4422 = getelementptr inbounds %struct.Reg, %struct.Reg* %4421, i32 0, i32 0
  %RDX.i2363 = bitcast %union.anon* %4422 to i64*
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4424 = getelementptr inbounds %struct.GPR, %struct.GPR* %4423, i32 0, i32 11
  %4425 = getelementptr inbounds %struct.Reg, %struct.Reg* %4424, i32 0, i32 0
  %RDI.i2364 = bitcast %union.anon* %4425 to i64*
  %4426 = load i64, i64* %RDX.i2363
  %4427 = load i64, i64* %RDI.i2364
  %4428 = load i64, i64* %PC.i2362
  %4429 = add i64 %4428, 3
  store i64 %4429, i64* %PC.i2362
  %4430 = add i64 %4427, %4426
  store i64 %4430, i64* %RDX.i2363, align 8
  %4431 = icmp ult i64 %4430, %4426
  %4432 = icmp ult i64 %4430, %4427
  %4433 = or i1 %4431, %4432
  %4434 = zext i1 %4433 to i8
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4434, i8* %4435, align 1
  %4436 = trunc i64 %4430 to i32
  %4437 = and i32 %4436, 255
  %4438 = call i32 @llvm.ctpop.i32(i32 %4437)
  %4439 = trunc i32 %4438 to i8
  %4440 = and i8 %4439, 1
  %4441 = xor i8 %4440, 1
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4441, i8* %4442, align 1
  %4443 = xor i64 %4427, %4426
  %4444 = xor i64 %4443, %4430
  %4445 = lshr i64 %4444, 4
  %4446 = trunc i64 %4445 to i8
  %4447 = and i8 %4446, 1
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4447, i8* %4448, align 1
  %4449 = icmp eq i64 %4430, 0
  %4450 = zext i1 %4449 to i8
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4450, i8* %4451, align 1
  %4452 = lshr i64 %4430, 63
  %4453 = trunc i64 %4452 to i8
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4453, i8* %4454, align 1
  %4455 = lshr i64 %4426, 63
  %4456 = lshr i64 %4427, 63
  %4457 = xor i64 %4452, %4455
  %4458 = xor i64 %4452, %4456
  %4459 = add i64 %4457, %4458
  %4460 = icmp eq i64 %4459, 2
  %4461 = zext i1 %4460 to i8
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4461, i8* %4462, align 1
  store %struct.Memory* %loadMem_4aebed, %struct.Memory** %MEMORY
  %loadMem_4aebf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4464 = getelementptr inbounds %struct.GPR, %struct.GPR* %4463, i32 0, i32 33
  %4465 = getelementptr inbounds %struct.Reg, %struct.Reg* %4464, i32 0, i32 0
  %PC.i2359 = bitcast %union.anon* %4465 to i64*
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4467 = getelementptr inbounds %struct.GPR, %struct.GPR* %4466, i32 0, i32 11
  %4468 = getelementptr inbounds %struct.Reg, %struct.Reg* %4467, i32 0, i32 0
  %RDI.i2360 = bitcast %union.anon* %4468 to i64*
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4470 = getelementptr inbounds %struct.GPR, %struct.GPR* %4469, i32 0, i32 15
  %4471 = getelementptr inbounds %struct.Reg, %struct.Reg* %4470, i32 0, i32 0
  %RBP.i2361 = bitcast %union.anon* %4471 to i64*
  %4472 = load i64, i64* %RBP.i2361
  %4473 = sub i64 %4472, 8
  %4474 = load i64, i64* %PC.i2359
  %4475 = add i64 %4474, 4
  store i64 %4475, i64* %PC.i2359
  %4476 = inttoptr i64 %4473 to i32*
  %4477 = load i32, i32* %4476
  %4478 = sext i32 %4477 to i64
  store i64 %4478, i64* %RDI.i2360, align 8
  store %struct.Memory* %loadMem_4aebf0, %struct.Memory** %MEMORY
  %loadMem_4aebf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4480 = getelementptr inbounds %struct.GPR, %struct.GPR* %4479, i32 0, i32 33
  %4481 = getelementptr inbounds %struct.Reg, %struct.Reg* %4480, i32 0, i32 0
  %PC.i2357 = bitcast %union.anon* %4481 to i64*
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4483 = getelementptr inbounds %struct.GPR, %struct.GPR* %4482, i32 0, i32 11
  %4484 = getelementptr inbounds %struct.Reg, %struct.Reg* %4483, i32 0, i32 0
  %RDI.i2358 = bitcast %union.anon* %4484 to i64*
  %4485 = load i64, i64* %RDI.i2358
  %4486 = load i64, i64* %PC.i2357
  %4487 = add i64 %4486, 4
  store i64 %4487, i64* %PC.i2357
  %4488 = sext i64 %4485 to i128
  %4489 = and i128 %4488, -18446744073709551616
  %4490 = zext i64 %4485 to i128
  %4491 = or i128 %4489, %4490
  %4492 = mul i128 12, %4491
  %4493 = trunc i128 %4492 to i64
  store i64 %4493, i64* %RDI.i2358, align 8
  %4494 = sext i64 %4493 to i128
  %4495 = icmp ne i128 %4494, %4492
  %4496 = zext i1 %4495 to i8
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4496, i8* %4497, align 1
  %4498 = trunc i128 %4492 to i32
  %4499 = and i32 %4498, 255
  %4500 = call i32 @llvm.ctpop.i32(i32 %4499)
  %4501 = trunc i32 %4500 to i8
  %4502 = and i8 %4501, 1
  %4503 = xor i8 %4502, 1
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4503, i8* %4504, align 1
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4505, align 1
  %4506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4506, align 1
  %4507 = lshr i64 %4493, 63
  %4508 = trunc i64 %4507 to i8
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4508, i8* %4509, align 1
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4496, i8* %4510, align 1
  store %struct.Memory* %loadMem_4aebf4, %struct.Memory** %MEMORY
  %loadMem_4aebf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4512 = getelementptr inbounds %struct.GPR, %struct.GPR* %4511, i32 0, i32 33
  %4513 = getelementptr inbounds %struct.Reg, %struct.Reg* %4512, i32 0, i32 0
  %PC.i2354 = bitcast %union.anon* %4513 to i64*
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4515 = getelementptr inbounds %struct.GPR, %struct.GPR* %4514, i32 0, i32 7
  %4516 = getelementptr inbounds %struct.Reg, %struct.Reg* %4515, i32 0, i32 0
  %RDX.i2355 = bitcast %union.anon* %4516 to i64*
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4518 = getelementptr inbounds %struct.GPR, %struct.GPR* %4517, i32 0, i32 11
  %4519 = getelementptr inbounds %struct.Reg, %struct.Reg* %4518, i32 0, i32 0
  %RDI.i2356 = bitcast %union.anon* %4519 to i64*
  %4520 = load i64, i64* %RDX.i2355
  %4521 = load i64, i64* %RDI.i2356
  %4522 = load i64, i64* %PC.i2354
  %4523 = add i64 %4522, 3
  store i64 %4523, i64* %PC.i2354
  %4524 = add i64 %4521, %4520
  store i64 %4524, i64* %RDX.i2355, align 8
  %4525 = icmp ult i64 %4524, %4520
  %4526 = icmp ult i64 %4524, %4521
  %4527 = or i1 %4525, %4526
  %4528 = zext i1 %4527 to i8
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4528, i8* %4529, align 1
  %4530 = trunc i64 %4524 to i32
  %4531 = and i32 %4530, 255
  %4532 = call i32 @llvm.ctpop.i32(i32 %4531)
  %4533 = trunc i32 %4532 to i8
  %4534 = and i8 %4533, 1
  %4535 = xor i8 %4534, 1
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4535, i8* %4536, align 1
  %4537 = xor i64 %4521, %4520
  %4538 = xor i64 %4537, %4524
  %4539 = lshr i64 %4538, 4
  %4540 = trunc i64 %4539 to i8
  %4541 = and i8 %4540, 1
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4541, i8* %4542, align 1
  %4543 = icmp eq i64 %4524, 0
  %4544 = zext i1 %4543 to i8
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4544, i8* %4545, align 1
  %4546 = lshr i64 %4524, 63
  %4547 = trunc i64 %4546 to i8
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4547, i8* %4548, align 1
  %4549 = lshr i64 %4520, 63
  %4550 = lshr i64 %4521, 63
  %4551 = xor i64 %4546, %4549
  %4552 = xor i64 %4546, %4550
  %4553 = add i64 %4551, %4552
  %4554 = icmp eq i64 %4553, 2
  %4555 = zext i1 %4554 to i8
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4555, i8* %4556, align 1
  store %struct.Memory* %loadMem_4aebf8, %struct.Memory** %MEMORY
  %loadMem_4aebfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4558 = getelementptr inbounds %struct.GPR, %struct.GPR* %4557, i32 0, i32 33
  %4559 = getelementptr inbounds %struct.Reg, %struct.Reg* %4558, i32 0, i32 0
  %PC.i2351 = bitcast %union.anon* %4559 to i64*
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4561 = getelementptr inbounds %struct.GPR, %struct.GPR* %4560, i32 0, i32 11
  %4562 = getelementptr inbounds %struct.Reg, %struct.Reg* %4561, i32 0, i32 0
  %RDI.i2352 = bitcast %union.anon* %4562 to i64*
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 15
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %RBP.i2353 = bitcast %union.anon* %4565 to i64*
  %4566 = load i64, i64* %RBP.i2353
  %4567 = sub i64 %4566, 40
  %4568 = load i64, i64* %PC.i2351
  %4569 = add i64 %4568, 4
  store i64 %4569, i64* %PC.i2351
  %4570 = inttoptr i64 %4567 to i32*
  %4571 = load i32, i32* %4570
  %4572 = sext i32 %4571 to i64
  store i64 %4572, i64* %RDI.i2352, align 8
  store %struct.Memory* %loadMem_4aebfb, %struct.Memory** %MEMORY
  %loadMem_4aebff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4574 = getelementptr inbounds %struct.GPR, %struct.GPR* %4573, i32 0, i32 33
  %4575 = getelementptr inbounds %struct.Reg, %struct.Reg* %4574, i32 0, i32 0
  %PC.i2347 = bitcast %union.anon* %4575 to i64*
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4577 = getelementptr inbounds %struct.GPR, %struct.GPR* %4576, i32 0, i32 9
  %4578 = getelementptr inbounds %struct.Reg, %struct.Reg* %4577, i32 0, i32 0
  %ESI.i2348 = bitcast %union.anon* %4578 to i32*
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4580 = getelementptr inbounds %struct.GPR, %struct.GPR* %4579, i32 0, i32 7
  %4581 = getelementptr inbounds %struct.Reg, %struct.Reg* %4580, i32 0, i32 0
  %RDX.i2349 = bitcast %union.anon* %4581 to i64*
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4583 = getelementptr inbounds %struct.GPR, %struct.GPR* %4582, i32 0, i32 11
  %4584 = getelementptr inbounds %struct.Reg, %struct.Reg* %4583, i32 0, i32 0
  %RDI.i2350 = bitcast %union.anon* %4584 to i64*
  %4585 = load i64, i64* %RDX.i2349
  %4586 = load i64, i64* %RDI.i2350
  %4587 = mul i64 %4586, 4
  %4588 = add i64 %4587, %4585
  %4589 = load i32, i32* %ESI.i2348
  %4590 = zext i32 %4589 to i64
  %4591 = load i64, i64* %PC.i2347
  %4592 = add i64 %4591, 3
  store i64 %4592, i64* %PC.i2347
  %4593 = inttoptr i64 %4588 to i32*
  store i32 %4589, i32* %4593
  store %struct.Memory* %loadMem_4aebff, %struct.Memory** %MEMORY
  %loadMem_4aec02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4595 = getelementptr inbounds %struct.GPR, %struct.GPR* %4594, i32 0, i32 33
  %4596 = getelementptr inbounds %struct.Reg, %struct.Reg* %4595, i32 0, i32 0
  %PC.i2344 = bitcast %union.anon* %4596 to i64*
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4598 = getelementptr inbounds %struct.GPR, %struct.GPR* %4597, i32 0, i32 7
  %4599 = getelementptr inbounds %struct.Reg, %struct.Reg* %4598, i32 0, i32 0
  %RDX.i2345 = bitcast %union.anon* %4599 to i64*
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4601 = getelementptr inbounds %struct.GPR, %struct.GPR* %4600, i32 0, i32 15
  %4602 = getelementptr inbounds %struct.Reg, %struct.Reg* %4601, i32 0, i32 0
  %RBP.i2346 = bitcast %union.anon* %4602 to i64*
  %4603 = load i64, i64* %RBP.i2346
  %4604 = sub i64 %4603, 40
  %4605 = load i64, i64* %PC.i2344
  %4606 = add i64 %4605, 4
  store i64 %4606, i64* %PC.i2344
  %4607 = inttoptr i64 %4604 to i32*
  %4608 = load i32, i32* %4607
  %4609 = sext i32 %4608 to i64
  store i64 %4609, i64* %RDX.i2345, align 8
  store %struct.Memory* %loadMem_4aec02, %struct.Memory** %MEMORY
  %loadMem_4aec06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4611 = getelementptr inbounds %struct.GPR, %struct.GPR* %4610, i32 0, i32 33
  %4612 = getelementptr inbounds %struct.Reg, %struct.Reg* %4611, i32 0, i32 0
  %PC.i2340 = bitcast %union.anon* %4612 to i64*
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 7
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %RDX.i2341 = bitcast %union.anon* %4615 to i64*
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4617 = getelementptr inbounds %struct.GPR, %struct.GPR* %4616, i32 0, i32 9
  %4618 = getelementptr inbounds %struct.Reg, %struct.Reg* %4617, i32 0, i32 0
  %RSI.i2342 = bitcast %union.anon* %4618 to i64*
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4620 = getelementptr inbounds %struct.GPR, %struct.GPR* %4619, i32 0, i32 15
  %4621 = getelementptr inbounds %struct.Reg, %struct.Reg* %4620, i32 0, i32 0
  %RBP.i2343 = bitcast %union.anon* %4621 to i64*
  %4622 = load i64, i64* %RBP.i2343
  %4623 = load i64, i64* %RDX.i2341
  %4624 = mul i64 %4623, 4
  %4625 = add i64 %4622, -804
  %4626 = add i64 %4625, %4624
  %4627 = load i64, i64* %PC.i2340
  %4628 = add i64 %4627, 7
  store i64 %4628, i64* %PC.i2340
  %4629 = inttoptr i64 %4626 to i32*
  %4630 = load i32, i32* %4629
  %4631 = zext i32 %4630 to i64
  store i64 %4631, i64* %RSI.i2342, align 8
  store %struct.Memory* %loadMem_4aec06, %struct.Memory** %MEMORY
  %loadMem_4aec0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4633 = getelementptr inbounds %struct.GPR, %struct.GPR* %4632, i32 0, i32 33
  %4634 = getelementptr inbounds %struct.Reg, %struct.Reg* %4633, i32 0, i32 0
  %PC.i2337 = bitcast %union.anon* %4634 to i64*
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 7
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %RDX.i2338 = bitcast %union.anon* %4637 to i64*
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4639 = getelementptr inbounds %struct.GPR, %struct.GPR* %4638, i32 0, i32 15
  %4640 = getelementptr inbounds %struct.Reg, %struct.Reg* %4639, i32 0, i32 0
  %RBP.i2339 = bitcast %union.anon* %4640 to i64*
  %4641 = load i64, i64* %RBP.i2339
  %4642 = sub i64 %4641, 4
  %4643 = load i64, i64* %PC.i2337
  %4644 = add i64 %4643, 4
  store i64 %4644, i64* %PC.i2337
  %4645 = inttoptr i64 %4642 to i32*
  %4646 = load i32, i32* %4645
  %4647 = sext i32 %4646 to i64
  store i64 %4647, i64* %RDX.i2338, align 8
  store %struct.Memory* %loadMem_4aec0d, %struct.Memory** %MEMORY
  %loadMem_4aec11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4649 = getelementptr inbounds %struct.GPR, %struct.GPR* %4648, i32 0, i32 33
  %4650 = getelementptr inbounds %struct.Reg, %struct.Reg* %4649, i32 0, i32 0
  %PC.i2335 = bitcast %union.anon* %4650 to i64*
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4652 = getelementptr inbounds %struct.GPR, %struct.GPR* %4651, i32 0, i32 7
  %4653 = getelementptr inbounds %struct.Reg, %struct.Reg* %4652, i32 0, i32 0
  %RDX.i2336 = bitcast %union.anon* %4653 to i64*
  %4654 = load i64, i64* %RDX.i2336
  %4655 = load i64, i64* %PC.i2335
  %4656 = add i64 %4655, 7
  store i64 %4656, i64* %PC.i2335
  %4657 = sext i64 %4654 to i128
  %4658 = and i128 %4657, -18446744073709551616
  %4659 = zext i64 %4654 to i128
  %4660 = or i128 %4658, %4659
  %4661 = mul i128 180, %4660
  %4662 = trunc i128 %4661 to i64
  store i64 %4662, i64* %RDX.i2336, align 8
  %4663 = sext i64 %4662 to i128
  %4664 = icmp ne i128 %4663, %4661
  %4665 = zext i1 %4664 to i8
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4665, i8* %4666, align 1
  %4667 = trunc i128 %4661 to i32
  %4668 = and i32 %4667, 255
  %4669 = call i32 @llvm.ctpop.i32(i32 %4668)
  %4670 = trunc i32 %4669 to i8
  %4671 = and i8 %4670, 1
  %4672 = xor i8 %4671, 1
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4672, i8* %4673, align 1
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4674, align 1
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4675, align 1
  %4676 = lshr i64 %4662, 63
  %4677 = trunc i64 %4676 to i8
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4677, i8* %4678, align 1
  %4679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4665, i8* %4679, align 1
  store %struct.Memory* %loadMem_4aec11, %struct.Memory** %MEMORY
  %loadMem_4aec18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4681 = getelementptr inbounds %struct.GPR, %struct.GPR* %4680, i32 0, i32 33
  %4682 = getelementptr inbounds %struct.Reg, %struct.Reg* %4681, i32 0, i32 0
  %PC.i2332 = bitcast %union.anon* %4682 to i64*
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 5
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %RCX.i2333 = bitcast %union.anon* %4685 to i64*
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4687 = getelementptr inbounds %struct.GPR, %struct.GPR* %4686, i32 0, i32 7
  %4688 = getelementptr inbounds %struct.Reg, %struct.Reg* %4687, i32 0, i32 0
  %RDX.i2334 = bitcast %union.anon* %4688 to i64*
  %4689 = load i64, i64* %RCX.i2333
  %4690 = load i64, i64* %RDX.i2334
  %4691 = load i64, i64* %PC.i2332
  %4692 = add i64 %4691, 3
  store i64 %4692, i64* %PC.i2332
  %4693 = add i64 %4690, %4689
  store i64 %4693, i64* %RCX.i2333, align 8
  %4694 = icmp ult i64 %4693, %4689
  %4695 = icmp ult i64 %4693, %4690
  %4696 = or i1 %4694, %4695
  %4697 = zext i1 %4696 to i8
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4697, i8* %4698, align 1
  %4699 = trunc i64 %4693 to i32
  %4700 = and i32 %4699, 255
  %4701 = call i32 @llvm.ctpop.i32(i32 %4700)
  %4702 = trunc i32 %4701 to i8
  %4703 = and i8 %4702, 1
  %4704 = xor i8 %4703, 1
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4704, i8* %4705, align 1
  %4706 = xor i64 %4690, %4689
  %4707 = xor i64 %4706, %4693
  %4708 = lshr i64 %4707, 4
  %4709 = trunc i64 %4708 to i8
  %4710 = and i8 %4709, 1
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4710, i8* %4711, align 1
  %4712 = icmp eq i64 %4693, 0
  %4713 = zext i1 %4712 to i8
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4713, i8* %4714, align 1
  %4715 = lshr i64 %4693, 63
  %4716 = trunc i64 %4715 to i8
  %4717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4716, i8* %4717, align 1
  %4718 = lshr i64 %4689, 63
  %4719 = lshr i64 %4690, 63
  %4720 = xor i64 %4715, %4718
  %4721 = xor i64 %4715, %4719
  %4722 = add i64 %4720, %4721
  %4723 = icmp eq i64 %4722, 2
  %4724 = zext i1 %4723 to i8
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4724, i8* %4725, align 1
  store %struct.Memory* %loadMem_4aec18, %struct.Memory** %MEMORY
  %loadMem_4aec1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4727 = getelementptr inbounds %struct.GPR, %struct.GPR* %4726, i32 0, i32 33
  %4728 = getelementptr inbounds %struct.Reg, %struct.Reg* %4727, i32 0, i32 0
  %PC.i2329 = bitcast %union.anon* %4728 to i64*
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4730 = getelementptr inbounds %struct.GPR, %struct.GPR* %4729, i32 0, i32 7
  %4731 = getelementptr inbounds %struct.Reg, %struct.Reg* %4730, i32 0, i32 0
  %RDX.i2330 = bitcast %union.anon* %4731 to i64*
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4733 = getelementptr inbounds %struct.GPR, %struct.GPR* %4732, i32 0, i32 15
  %4734 = getelementptr inbounds %struct.Reg, %struct.Reg* %4733, i32 0, i32 0
  %RBP.i2331 = bitcast %union.anon* %4734 to i64*
  %4735 = load i64, i64* %RBP.i2331
  %4736 = sub i64 %4735, 8
  %4737 = load i64, i64* %PC.i2329
  %4738 = add i64 %4737, 4
  store i64 %4738, i64* %PC.i2329
  %4739 = inttoptr i64 %4736 to i32*
  %4740 = load i32, i32* %4739
  %4741 = sext i32 %4740 to i64
  store i64 %4741, i64* %RDX.i2330, align 8
  store %struct.Memory* %loadMem_4aec1b, %struct.Memory** %MEMORY
  %loadMem_4aec1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4743 = getelementptr inbounds %struct.GPR, %struct.GPR* %4742, i32 0, i32 33
  %4744 = getelementptr inbounds %struct.Reg, %struct.Reg* %4743, i32 0, i32 0
  %PC.i2327 = bitcast %union.anon* %4744 to i64*
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 7
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %RDX.i2328 = bitcast %union.anon* %4747 to i64*
  %4748 = load i64, i64* %RDX.i2328
  %4749 = load i64, i64* %PC.i2327
  %4750 = add i64 %4749, 4
  store i64 %4750, i64* %PC.i2327
  %4751 = sext i64 %4748 to i128
  %4752 = and i128 %4751, -18446744073709551616
  %4753 = zext i64 %4748 to i128
  %4754 = or i128 %4752, %4753
  %4755 = mul i128 12, %4754
  %4756 = trunc i128 %4755 to i64
  store i64 %4756, i64* %RDX.i2328, align 8
  %4757 = sext i64 %4756 to i128
  %4758 = icmp ne i128 %4757, %4755
  %4759 = zext i1 %4758 to i8
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4759, i8* %4760, align 1
  %4761 = trunc i128 %4755 to i32
  %4762 = and i32 %4761, 255
  %4763 = call i32 @llvm.ctpop.i32(i32 %4762)
  %4764 = trunc i32 %4763 to i8
  %4765 = and i8 %4764, 1
  %4766 = xor i8 %4765, 1
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4766, i8* %4767, align 1
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4768, align 1
  %4769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4769, align 1
  %4770 = lshr i64 %4756, 63
  %4771 = trunc i64 %4770 to i8
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4771, i8* %4772, align 1
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4759, i8* %4773, align 1
  store %struct.Memory* %loadMem_4aec1f, %struct.Memory** %MEMORY
  %loadMem_4aec23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 33
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %PC.i2324 = bitcast %union.anon* %4776 to i64*
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4778 = getelementptr inbounds %struct.GPR, %struct.GPR* %4777, i32 0, i32 5
  %4779 = getelementptr inbounds %struct.Reg, %struct.Reg* %4778, i32 0, i32 0
  %RCX.i2325 = bitcast %union.anon* %4779 to i64*
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4781 = getelementptr inbounds %struct.GPR, %struct.GPR* %4780, i32 0, i32 7
  %4782 = getelementptr inbounds %struct.Reg, %struct.Reg* %4781, i32 0, i32 0
  %RDX.i2326 = bitcast %union.anon* %4782 to i64*
  %4783 = load i64, i64* %RCX.i2325
  %4784 = load i64, i64* %RDX.i2326
  %4785 = load i64, i64* %PC.i2324
  %4786 = add i64 %4785, 3
  store i64 %4786, i64* %PC.i2324
  %4787 = add i64 %4784, %4783
  store i64 %4787, i64* %RCX.i2325, align 8
  %4788 = icmp ult i64 %4787, %4783
  %4789 = icmp ult i64 %4787, %4784
  %4790 = or i1 %4788, %4789
  %4791 = zext i1 %4790 to i8
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4791, i8* %4792, align 1
  %4793 = trunc i64 %4787 to i32
  %4794 = and i32 %4793, 255
  %4795 = call i32 @llvm.ctpop.i32(i32 %4794)
  %4796 = trunc i32 %4795 to i8
  %4797 = and i8 %4796, 1
  %4798 = xor i8 %4797, 1
  %4799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4798, i8* %4799, align 1
  %4800 = xor i64 %4784, %4783
  %4801 = xor i64 %4800, %4787
  %4802 = lshr i64 %4801, 4
  %4803 = trunc i64 %4802 to i8
  %4804 = and i8 %4803, 1
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4804, i8* %4805, align 1
  %4806 = icmp eq i64 %4787, 0
  %4807 = zext i1 %4806 to i8
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4807, i8* %4808, align 1
  %4809 = lshr i64 %4787, 63
  %4810 = trunc i64 %4809 to i8
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4810, i8* %4811, align 1
  %4812 = lshr i64 %4783, 63
  %4813 = lshr i64 %4784, 63
  %4814 = xor i64 %4809, %4812
  %4815 = xor i64 %4809, %4813
  %4816 = add i64 %4814, %4815
  %4817 = icmp eq i64 %4816, 2
  %4818 = zext i1 %4817 to i8
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4818, i8* %4819, align 1
  store %struct.Memory* %loadMem_4aec23, %struct.Memory** %MEMORY
  %loadMem_4aec26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4821 = getelementptr inbounds %struct.GPR, %struct.GPR* %4820, i32 0, i32 33
  %4822 = getelementptr inbounds %struct.Reg, %struct.Reg* %4821, i32 0, i32 0
  %PC.i2321 = bitcast %union.anon* %4822 to i64*
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4824 = getelementptr inbounds %struct.GPR, %struct.GPR* %4823, i32 0, i32 7
  %4825 = getelementptr inbounds %struct.Reg, %struct.Reg* %4824, i32 0, i32 0
  %RDX.i2322 = bitcast %union.anon* %4825 to i64*
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4827 = getelementptr inbounds %struct.GPR, %struct.GPR* %4826, i32 0, i32 15
  %4828 = getelementptr inbounds %struct.Reg, %struct.Reg* %4827, i32 0, i32 0
  %RBP.i2323 = bitcast %union.anon* %4828 to i64*
  %4829 = load i64, i64* %RBP.i2323
  %4830 = sub i64 %4829, 40
  %4831 = load i64, i64* %PC.i2321
  %4832 = add i64 %4831, 4
  store i64 %4832, i64* %PC.i2321
  %4833 = inttoptr i64 %4830 to i32*
  %4834 = load i32, i32* %4833
  %4835 = sext i32 %4834 to i64
  store i64 %4835, i64* %RDX.i2322, align 8
  store %struct.Memory* %loadMem_4aec26, %struct.Memory** %MEMORY
  %loadMem_4aec2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 33
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %PC.i2317 = bitcast %union.anon* %4838 to i64*
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 9
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %ESI.i2318 = bitcast %union.anon* %4841 to i32*
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4843 = getelementptr inbounds %struct.GPR, %struct.GPR* %4842, i32 0, i32 5
  %4844 = getelementptr inbounds %struct.Reg, %struct.Reg* %4843, i32 0, i32 0
  %RCX.i2319 = bitcast %union.anon* %4844 to i64*
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4846 = getelementptr inbounds %struct.GPR, %struct.GPR* %4845, i32 0, i32 7
  %4847 = getelementptr inbounds %struct.Reg, %struct.Reg* %4846, i32 0, i32 0
  %RDX.i2320 = bitcast %union.anon* %4847 to i64*
  %4848 = load i64, i64* %RCX.i2319
  %4849 = load i64, i64* %RDX.i2320
  %4850 = mul i64 %4849, 4
  %4851 = add i64 %4850, %4848
  %4852 = load i32, i32* %ESI.i2318
  %4853 = zext i32 %4852 to i64
  %4854 = load i64, i64* %PC.i2317
  %4855 = add i64 %4854, 3
  store i64 %4855, i64* %PC.i2317
  %4856 = inttoptr i64 %4851 to i32*
  store i32 %4852, i32* %4856
  store %struct.Memory* %loadMem_4aec2a, %struct.Memory** %MEMORY
  %loadMem_4aec2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 33
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %PC.i2314 = bitcast %union.anon* %4859 to i64*
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 1
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %RAX.i2315 = bitcast %union.anon* %4862 to i64*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 5
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %RCX.i2316 = bitcast %union.anon* %4865 to i64*
  %4866 = load i64, i64* %RAX.i2315
  %4867 = load i64, i64* %PC.i2314
  %4868 = add i64 %4867, 3
  store i64 %4868, i64* %PC.i2314
  store i64 %4866, i64* %RCX.i2316, align 8
  store %struct.Memory* %loadMem_4aec2d, %struct.Memory** %MEMORY
  %loadMem_4aec30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4870 = getelementptr inbounds %struct.GPR, %struct.GPR* %4869, i32 0, i32 33
  %4871 = getelementptr inbounds %struct.Reg, %struct.Reg* %4870, i32 0, i32 0
  %PC.i2312 = bitcast %union.anon* %4871 to i64*
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4873 = getelementptr inbounds %struct.GPR, %struct.GPR* %4872, i32 0, i32 5
  %4874 = getelementptr inbounds %struct.Reg, %struct.Reg* %4873, i32 0, i32 0
  %RCX.i2313 = bitcast %union.anon* %4874 to i64*
  %4875 = load i64, i64* %RCX.i2313
  %4876 = load i64, i64* %PC.i2312
  %4877 = add i64 %4876, 7
  store i64 %4877, i64* %PC.i2312
  %4878 = add i64 2700, %4875
  store i64 %4878, i64* %RCX.i2313, align 8
  %4879 = icmp ult i64 %4878, %4875
  %4880 = icmp ult i64 %4878, 2700
  %4881 = or i1 %4879, %4880
  %4882 = zext i1 %4881 to i8
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4882, i8* %4883, align 1
  %4884 = trunc i64 %4878 to i32
  %4885 = and i32 %4884, 255
  %4886 = call i32 @llvm.ctpop.i32(i32 %4885)
  %4887 = trunc i32 %4886 to i8
  %4888 = and i8 %4887, 1
  %4889 = xor i8 %4888, 1
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4889, i8* %4890, align 1
  %4891 = xor i64 2700, %4875
  %4892 = xor i64 %4891, %4878
  %4893 = lshr i64 %4892, 4
  %4894 = trunc i64 %4893 to i8
  %4895 = and i8 %4894, 1
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4895, i8* %4896, align 1
  %4897 = icmp eq i64 %4878, 0
  %4898 = zext i1 %4897 to i8
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4898, i8* %4899, align 1
  %4900 = lshr i64 %4878, 63
  %4901 = trunc i64 %4900 to i8
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4901, i8* %4902, align 1
  %4903 = lshr i64 %4875, 63
  %4904 = xor i64 %4900, %4903
  %4905 = add i64 %4904, %4900
  %4906 = icmp eq i64 %4905, 2
  %4907 = zext i1 %4906 to i8
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4907, i8* %4908, align 1
  store %struct.Memory* %loadMem_4aec30, %struct.Memory** %MEMORY
  %loadMem_4aec37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4910 = getelementptr inbounds %struct.GPR, %struct.GPR* %4909, i32 0, i32 33
  %4911 = getelementptr inbounds %struct.Reg, %struct.Reg* %4910, i32 0, i32 0
  %PC.i2309 = bitcast %union.anon* %4911 to i64*
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4913 = getelementptr inbounds %struct.GPR, %struct.GPR* %4912, i32 0, i32 7
  %4914 = getelementptr inbounds %struct.Reg, %struct.Reg* %4913, i32 0, i32 0
  %RDX.i2310 = bitcast %union.anon* %4914 to i64*
  %4915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4916 = getelementptr inbounds %struct.GPR, %struct.GPR* %4915, i32 0, i32 15
  %4917 = getelementptr inbounds %struct.Reg, %struct.Reg* %4916, i32 0, i32 0
  %RBP.i2311 = bitcast %union.anon* %4917 to i64*
  %4918 = load i64, i64* %RBP.i2311
  %4919 = sub i64 %4918, 4
  %4920 = load i64, i64* %PC.i2309
  %4921 = add i64 %4920, 4
  store i64 %4921, i64* %PC.i2309
  %4922 = inttoptr i64 %4919 to i32*
  %4923 = load i32, i32* %4922
  %4924 = sext i32 %4923 to i64
  store i64 %4924, i64* %RDX.i2310, align 8
  store %struct.Memory* %loadMem_4aec37, %struct.Memory** %MEMORY
  %loadMem_4aec3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4926 = getelementptr inbounds %struct.GPR, %struct.GPR* %4925, i32 0, i32 33
  %4927 = getelementptr inbounds %struct.Reg, %struct.Reg* %4926, i32 0, i32 0
  %PC.i2307 = bitcast %union.anon* %4927 to i64*
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4929 = getelementptr inbounds %struct.GPR, %struct.GPR* %4928, i32 0, i32 7
  %4930 = getelementptr inbounds %struct.Reg, %struct.Reg* %4929, i32 0, i32 0
  %RDX.i2308 = bitcast %union.anon* %4930 to i64*
  %4931 = load i64, i64* %RDX.i2308
  %4932 = load i64, i64* %PC.i2307
  %4933 = add i64 %4932, 7
  store i64 %4933, i64* %PC.i2307
  %4934 = sext i64 %4931 to i128
  %4935 = and i128 %4934, -18446744073709551616
  %4936 = zext i64 %4931 to i128
  %4937 = or i128 %4935, %4936
  %4938 = mul i128 180, %4937
  %4939 = trunc i128 %4938 to i64
  store i64 %4939, i64* %RDX.i2308, align 8
  %4940 = sext i64 %4939 to i128
  %4941 = icmp ne i128 %4940, %4938
  %4942 = zext i1 %4941 to i8
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4942, i8* %4943, align 1
  %4944 = trunc i128 %4938 to i32
  %4945 = and i32 %4944, 255
  %4946 = call i32 @llvm.ctpop.i32(i32 %4945)
  %4947 = trunc i32 %4946 to i8
  %4948 = and i8 %4947, 1
  %4949 = xor i8 %4948, 1
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4949, i8* %4950, align 1
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4951, align 1
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4952, align 1
  %4953 = lshr i64 %4939, 63
  %4954 = trunc i64 %4953 to i8
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4954, i8* %4955, align 1
  %4956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4942, i8* %4956, align 1
  store %struct.Memory* %loadMem_4aec3b, %struct.Memory** %MEMORY
  %loadMem_4aec42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 33
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %PC.i2304 = bitcast %union.anon* %4959 to i64*
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 5
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %RCX.i2305 = bitcast %union.anon* %4962 to i64*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 7
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %RDX.i2306 = bitcast %union.anon* %4965 to i64*
  %4966 = load i64, i64* %RCX.i2305
  %4967 = load i64, i64* %RDX.i2306
  %4968 = load i64, i64* %PC.i2304
  %4969 = add i64 %4968, 3
  store i64 %4969, i64* %PC.i2304
  %4970 = add i64 %4967, %4966
  store i64 %4970, i64* %RCX.i2305, align 8
  %4971 = icmp ult i64 %4970, %4966
  %4972 = icmp ult i64 %4970, %4967
  %4973 = or i1 %4971, %4972
  %4974 = zext i1 %4973 to i8
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4974, i8* %4975, align 1
  %4976 = trunc i64 %4970 to i32
  %4977 = and i32 %4976, 255
  %4978 = call i32 @llvm.ctpop.i32(i32 %4977)
  %4979 = trunc i32 %4978 to i8
  %4980 = and i8 %4979, 1
  %4981 = xor i8 %4980, 1
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4981, i8* %4982, align 1
  %4983 = xor i64 %4967, %4966
  %4984 = xor i64 %4983, %4970
  %4985 = lshr i64 %4984, 4
  %4986 = trunc i64 %4985 to i8
  %4987 = and i8 %4986, 1
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4987, i8* %4988, align 1
  %4989 = icmp eq i64 %4970, 0
  %4990 = zext i1 %4989 to i8
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4990, i8* %4991, align 1
  %4992 = lshr i64 %4970, 63
  %4993 = trunc i64 %4992 to i8
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4993, i8* %4994, align 1
  %4995 = lshr i64 %4966, 63
  %4996 = lshr i64 %4967, 63
  %4997 = xor i64 %4992, %4995
  %4998 = xor i64 %4992, %4996
  %4999 = add i64 %4997, %4998
  %5000 = icmp eq i64 %4999, 2
  %5001 = zext i1 %5000 to i8
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5001, i8* %5002, align 1
  store %struct.Memory* %loadMem_4aec42, %struct.Memory** %MEMORY
  %loadMem_4aec45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 33
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %PC.i2301 = bitcast %union.anon* %5005 to i64*
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5007 = getelementptr inbounds %struct.GPR, %struct.GPR* %5006, i32 0, i32 7
  %5008 = getelementptr inbounds %struct.Reg, %struct.Reg* %5007, i32 0, i32 0
  %RDX.i2302 = bitcast %union.anon* %5008 to i64*
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5010 = getelementptr inbounds %struct.GPR, %struct.GPR* %5009, i32 0, i32 15
  %5011 = getelementptr inbounds %struct.Reg, %struct.Reg* %5010, i32 0, i32 0
  %RBP.i2303 = bitcast %union.anon* %5011 to i64*
  %5012 = load i64, i64* %RBP.i2303
  %5013 = sub i64 %5012, 8
  %5014 = load i64, i64* %PC.i2301
  %5015 = add i64 %5014, 4
  store i64 %5015, i64* %PC.i2301
  %5016 = inttoptr i64 %5013 to i32*
  %5017 = load i32, i32* %5016
  %5018 = sext i32 %5017 to i64
  store i64 %5018, i64* %RDX.i2302, align 8
  store %struct.Memory* %loadMem_4aec45, %struct.Memory** %MEMORY
  %loadMem_4aec49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 33
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %PC.i2299 = bitcast %union.anon* %5021 to i64*
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 7
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %RDX.i2300 = bitcast %union.anon* %5024 to i64*
  %5025 = load i64, i64* %RDX.i2300
  %5026 = load i64, i64* %PC.i2299
  %5027 = add i64 %5026, 4
  store i64 %5027, i64* %PC.i2299
  %5028 = sext i64 %5025 to i128
  %5029 = and i128 %5028, -18446744073709551616
  %5030 = zext i64 %5025 to i128
  %5031 = or i128 %5029, %5030
  %5032 = mul i128 12, %5031
  %5033 = trunc i128 %5032 to i64
  store i64 %5033, i64* %RDX.i2300, align 8
  %5034 = sext i64 %5033 to i128
  %5035 = icmp ne i128 %5034, %5032
  %5036 = zext i1 %5035 to i8
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5036, i8* %5037, align 1
  %5038 = trunc i128 %5032 to i32
  %5039 = and i32 %5038, 255
  %5040 = call i32 @llvm.ctpop.i32(i32 %5039)
  %5041 = trunc i32 %5040 to i8
  %5042 = and i8 %5041, 1
  %5043 = xor i8 %5042, 1
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5043, i8* %5044, align 1
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5045, align 1
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5046, align 1
  %5047 = lshr i64 %5033, 63
  %5048 = trunc i64 %5047 to i8
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5048, i8* %5049, align 1
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5036, i8* %5050, align 1
  store %struct.Memory* %loadMem_4aec49, %struct.Memory** %MEMORY
  %loadMem_4aec4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5052 = getelementptr inbounds %struct.GPR, %struct.GPR* %5051, i32 0, i32 33
  %5053 = getelementptr inbounds %struct.Reg, %struct.Reg* %5052, i32 0, i32 0
  %PC.i2296 = bitcast %union.anon* %5053 to i64*
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5055 = getelementptr inbounds %struct.GPR, %struct.GPR* %5054, i32 0, i32 5
  %5056 = getelementptr inbounds %struct.Reg, %struct.Reg* %5055, i32 0, i32 0
  %RCX.i2297 = bitcast %union.anon* %5056 to i64*
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5058 = getelementptr inbounds %struct.GPR, %struct.GPR* %5057, i32 0, i32 7
  %5059 = getelementptr inbounds %struct.Reg, %struct.Reg* %5058, i32 0, i32 0
  %RDX.i2298 = bitcast %union.anon* %5059 to i64*
  %5060 = load i64, i64* %RCX.i2297
  %5061 = load i64, i64* %RDX.i2298
  %5062 = load i64, i64* %PC.i2296
  %5063 = add i64 %5062, 3
  store i64 %5063, i64* %PC.i2296
  %5064 = add i64 %5061, %5060
  store i64 %5064, i64* %RCX.i2297, align 8
  %5065 = icmp ult i64 %5064, %5060
  %5066 = icmp ult i64 %5064, %5061
  %5067 = or i1 %5065, %5066
  %5068 = zext i1 %5067 to i8
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5068, i8* %5069, align 1
  %5070 = trunc i64 %5064 to i32
  %5071 = and i32 %5070, 255
  %5072 = call i32 @llvm.ctpop.i32(i32 %5071)
  %5073 = trunc i32 %5072 to i8
  %5074 = and i8 %5073, 1
  %5075 = xor i8 %5074, 1
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5075, i8* %5076, align 1
  %5077 = xor i64 %5061, %5060
  %5078 = xor i64 %5077, %5064
  %5079 = lshr i64 %5078, 4
  %5080 = trunc i64 %5079 to i8
  %5081 = and i8 %5080, 1
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5081, i8* %5082, align 1
  %5083 = icmp eq i64 %5064, 0
  %5084 = zext i1 %5083 to i8
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5084, i8* %5085, align 1
  %5086 = lshr i64 %5064, 63
  %5087 = trunc i64 %5086 to i8
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5087, i8* %5088, align 1
  %5089 = lshr i64 %5060, 63
  %5090 = lshr i64 %5061, 63
  %5091 = xor i64 %5086, %5089
  %5092 = xor i64 %5086, %5090
  %5093 = add i64 %5091, %5092
  %5094 = icmp eq i64 %5093, 2
  %5095 = zext i1 %5094 to i8
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5095, i8* %5096, align 1
  store %struct.Memory* %loadMem_4aec4d, %struct.Memory** %MEMORY
  %loadMem_4aec50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5098 = getelementptr inbounds %struct.GPR, %struct.GPR* %5097, i32 0, i32 33
  %5099 = getelementptr inbounds %struct.Reg, %struct.Reg* %5098, i32 0, i32 0
  %PC.i2293 = bitcast %union.anon* %5099 to i64*
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5101 = getelementptr inbounds %struct.GPR, %struct.GPR* %5100, i32 0, i32 7
  %5102 = getelementptr inbounds %struct.Reg, %struct.Reg* %5101, i32 0, i32 0
  %RDX.i2294 = bitcast %union.anon* %5102 to i64*
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5104 = getelementptr inbounds %struct.GPR, %struct.GPR* %5103, i32 0, i32 15
  %5105 = getelementptr inbounds %struct.Reg, %struct.Reg* %5104, i32 0, i32 0
  %RBP.i2295 = bitcast %union.anon* %5105 to i64*
  %5106 = load i64, i64* %RBP.i2295
  %5107 = sub i64 %5106, 40
  %5108 = load i64, i64* %PC.i2293
  %5109 = add i64 %5108, 4
  store i64 %5109, i64* %PC.i2293
  %5110 = inttoptr i64 %5107 to i32*
  %5111 = load i32, i32* %5110
  %5112 = sext i32 %5111 to i64
  store i64 %5112, i64* %RDX.i2294, align 8
  store %struct.Memory* %loadMem_4aec50, %struct.Memory** %MEMORY
  %loadMem_4aec54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 33
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %PC.i2290 = bitcast %union.anon* %5115 to i64*
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5117 = getelementptr inbounds %struct.GPR, %struct.GPR* %5116, i32 0, i32 5
  %5118 = getelementptr inbounds %struct.Reg, %struct.Reg* %5117, i32 0, i32 0
  %RCX.i2291 = bitcast %union.anon* %5118 to i64*
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5120 = getelementptr inbounds %struct.GPR, %struct.GPR* %5119, i32 0, i32 7
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %RDX.i2292 = bitcast %union.anon* %5121 to i64*
  %5122 = load i64, i64* %RCX.i2291
  %5123 = load i64, i64* %RDX.i2292
  %5124 = mul i64 %5123, 4
  %5125 = add i64 %5124, %5122
  %5126 = load i64, i64* %PC.i2290
  %5127 = add i64 %5126, 7
  store i64 %5127, i64* %PC.i2290
  %5128 = inttoptr i64 %5125 to i32*
  store i32 0, i32* %5128
  store %struct.Memory* %loadMem_4aec54, %struct.Memory** %MEMORY
  %loadMem_4aec5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5130 = getelementptr inbounds %struct.GPR, %struct.GPR* %5129, i32 0, i32 33
  %5131 = getelementptr inbounds %struct.Reg, %struct.Reg* %5130, i32 0, i32 0
  %PC.i2287 = bitcast %union.anon* %5131 to i64*
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 5
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %RCX.i2288 = bitcast %union.anon* %5134 to i64*
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 15
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %RBP.i2289 = bitcast %union.anon* %5137 to i64*
  %5138 = load i64, i64* %RBP.i2289
  %5139 = sub i64 %5138, 4
  %5140 = load i64, i64* %PC.i2287
  %5141 = add i64 %5140, 4
  store i64 %5141, i64* %PC.i2287
  %5142 = inttoptr i64 %5139 to i32*
  %5143 = load i32, i32* %5142
  %5144 = sext i32 %5143 to i64
  store i64 %5144, i64* %RCX.i2288, align 8
  store %struct.Memory* %loadMem_4aec5b, %struct.Memory** %MEMORY
  %loadMem_4aec5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5146 = getelementptr inbounds %struct.GPR, %struct.GPR* %5145, i32 0, i32 33
  %5147 = getelementptr inbounds %struct.Reg, %struct.Reg* %5146, i32 0, i32 0
  %PC.i2285 = bitcast %union.anon* %5147 to i64*
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5149 = getelementptr inbounds %struct.GPR, %struct.GPR* %5148, i32 0, i32 5
  %5150 = getelementptr inbounds %struct.Reg, %struct.Reg* %5149, i32 0, i32 0
  %RCX.i2286 = bitcast %union.anon* %5150 to i64*
  %5151 = load i64, i64* %RCX.i2286
  %5152 = load i64, i64* %PC.i2285
  %5153 = add i64 %5152, 7
  store i64 %5153, i64* %PC.i2285
  %5154 = sext i64 %5151 to i128
  %5155 = and i128 %5154, -18446744073709551616
  %5156 = zext i64 %5151 to i128
  %5157 = or i128 %5155, %5156
  %5158 = mul i128 180, %5157
  %5159 = trunc i128 %5158 to i64
  store i64 %5159, i64* %RCX.i2286, align 8
  %5160 = sext i64 %5159 to i128
  %5161 = icmp ne i128 %5160, %5158
  %5162 = zext i1 %5161 to i8
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5162, i8* %5163, align 1
  %5164 = trunc i128 %5158 to i32
  %5165 = and i32 %5164, 255
  %5166 = call i32 @llvm.ctpop.i32(i32 %5165)
  %5167 = trunc i32 %5166 to i8
  %5168 = and i8 %5167, 1
  %5169 = xor i8 %5168, 1
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5169, i8* %5170, align 1
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5171, align 1
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5172, align 1
  %5173 = lshr i64 %5159, 63
  %5174 = trunc i64 %5173 to i8
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5174, i8* %5175, align 1
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5162, i8* %5176, align 1
  store %struct.Memory* %loadMem_4aec5f, %struct.Memory** %MEMORY
  %loadMem_4aec66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 33
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %PC.i2282 = bitcast %union.anon* %5179 to i64*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 1
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %RAX.i2283 = bitcast %union.anon* %5182 to i64*
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 5
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %RCX.i2284 = bitcast %union.anon* %5185 to i64*
  %5186 = load i64, i64* %RAX.i2283
  %5187 = load i64, i64* %RCX.i2284
  %5188 = load i64, i64* %PC.i2282
  %5189 = add i64 %5188, 3
  store i64 %5189, i64* %PC.i2282
  %5190 = add i64 %5187, %5186
  store i64 %5190, i64* %RAX.i2283, align 8
  %5191 = icmp ult i64 %5190, %5186
  %5192 = icmp ult i64 %5190, %5187
  %5193 = or i1 %5191, %5192
  %5194 = zext i1 %5193 to i8
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5194, i8* %5195, align 1
  %5196 = trunc i64 %5190 to i32
  %5197 = and i32 %5196, 255
  %5198 = call i32 @llvm.ctpop.i32(i32 %5197)
  %5199 = trunc i32 %5198 to i8
  %5200 = and i8 %5199, 1
  %5201 = xor i8 %5200, 1
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5201, i8* %5202, align 1
  %5203 = xor i64 %5187, %5186
  %5204 = xor i64 %5203, %5190
  %5205 = lshr i64 %5204, 4
  %5206 = trunc i64 %5205 to i8
  %5207 = and i8 %5206, 1
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5207, i8* %5208, align 1
  %5209 = icmp eq i64 %5190, 0
  %5210 = zext i1 %5209 to i8
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5210, i8* %5211, align 1
  %5212 = lshr i64 %5190, 63
  %5213 = trunc i64 %5212 to i8
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5213, i8* %5214, align 1
  %5215 = lshr i64 %5186, 63
  %5216 = lshr i64 %5187, 63
  %5217 = xor i64 %5212, %5215
  %5218 = xor i64 %5212, %5216
  %5219 = add i64 %5217, %5218
  %5220 = icmp eq i64 %5219, 2
  %5221 = zext i1 %5220 to i8
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5221, i8* %5222, align 1
  store %struct.Memory* %loadMem_4aec66, %struct.Memory** %MEMORY
  %loadMem_4aec69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5224 = getelementptr inbounds %struct.GPR, %struct.GPR* %5223, i32 0, i32 33
  %5225 = getelementptr inbounds %struct.Reg, %struct.Reg* %5224, i32 0, i32 0
  %PC.i2279 = bitcast %union.anon* %5225 to i64*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5227 = getelementptr inbounds %struct.GPR, %struct.GPR* %5226, i32 0, i32 5
  %5228 = getelementptr inbounds %struct.Reg, %struct.Reg* %5227, i32 0, i32 0
  %RCX.i2280 = bitcast %union.anon* %5228 to i64*
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 15
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %RBP.i2281 = bitcast %union.anon* %5231 to i64*
  %5232 = load i64, i64* %RBP.i2281
  %5233 = sub i64 %5232, 8
  %5234 = load i64, i64* %PC.i2279
  %5235 = add i64 %5234, 4
  store i64 %5235, i64* %PC.i2279
  %5236 = inttoptr i64 %5233 to i32*
  %5237 = load i32, i32* %5236
  %5238 = sext i32 %5237 to i64
  store i64 %5238, i64* %RCX.i2280, align 8
  store %struct.Memory* %loadMem_4aec69, %struct.Memory** %MEMORY
  %loadMem_4aec6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 33
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %PC.i2277 = bitcast %union.anon* %5241 to i64*
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5243 = getelementptr inbounds %struct.GPR, %struct.GPR* %5242, i32 0, i32 5
  %5244 = getelementptr inbounds %struct.Reg, %struct.Reg* %5243, i32 0, i32 0
  %RCX.i2278 = bitcast %union.anon* %5244 to i64*
  %5245 = load i64, i64* %RCX.i2278
  %5246 = load i64, i64* %PC.i2277
  %5247 = add i64 %5246, 4
  store i64 %5247, i64* %PC.i2277
  %5248 = sext i64 %5245 to i128
  %5249 = and i128 %5248, -18446744073709551616
  %5250 = zext i64 %5245 to i128
  %5251 = or i128 %5249, %5250
  %5252 = mul i128 12, %5251
  %5253 = trunc i128 %5252 to i64
  store i64 %5253, i64* %RCX.i2278, align 8
  %5254 = sext i64 %5253 to i128
  %5255 = icmp ne i128 %5254, %5252
  %5256 = zext i1 %5255 to i8
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5256, i8* %5257, align 1
  %5258 = trunc i128 %5252 to i32
  %5259 = and i32 %5258, 255
  %5260 = call i32 @llvm.ctpop.i32(i32 %5259)
  %5261 = trunc i32 %5260 to i8
  %5262 = and i8 %5261, 1
  %5263 = xor i8 %5262, 1
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5263, i8* %5264, align 1
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5265, align 1
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5266, align 1
  %5267 = lshr i64 %5253, 63
  %5268 = trunc i64 %5267 to i8
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5268, i8* %5269, align 1
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5256, i8* %5270, align 1
  store %struct.Memory* %loadMem_4aec6d, %struct.Memory** %MEMORY
  %loadMem_4aec71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5272 = getelementptr inbounds %struct.GPR, %struct.GPR* %5271, i32 0, i32 33
  %5273 = getelementptr inbounds %struct.Reg, %struct.Reg* %5272, i32 0, i32 0
  %PC.i2274 = bitcast %union.anon* %5273 to i64*
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5275 = getelementptr inbounds %struct.GPR, %struct.GPR* %5274, i32 0, i32 1
  %5276 = getelementptr inbounds %struct.Reg, %struct.Reg* %5275, i32 0, i32 0
  %RAX.i2275 = bitcast %union.anon* %5276 to i64*
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5278 = getelementptr inbounds %struct.GPR, %struct.GPR* %5277, i32 0, i32 5
  %5279 = getelementptr inbounds %struct.Reg, %struct.Reg* %5278, i32 0, i32 0
  %RCX.i2276 = bitcast %union.anon* %5279 to i64*
  %5280 = load i64, i64* %RAX.i2275
  %5281 = load i64, i64* %RCX.i2276
  %5282 = load i64, i64* %PC.i2274
  %5283 = add i64 %5282, 3
  store i64 %5283, i64* %PC.i2274
  %5284 = add i64 %5281, %5280
  store i64 %5284, i64* %RAX.i2275, align 8
  %5285 = icmp ult i64 %5284, %5280
  %5286 = icmp ult i64 %5284, %5281
  %5287 = or i1 %5285, %5286
  %5288 = zext i1 %5287 to i8
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5288, i8* %5289, align 1
  %5290 = trunc i64 %5284 to i32
  %5291 = and i32 %5290, 255
  %5292 = call i32 @llvm.ctpop.i32(i32 %5291)
  %5293 = trunc i32 %5292 to i8
  %5294 = and i8 %5293, 1
  %5295 = xor i8 %5294, 1
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5295, i8* %5296, align 1
  %5297 = xor i64 %5281, %5280
  %5298 = xor i64 %5297, %5284
  %5299 = lshr i64 %5298, 4
  %5300 = trunc i64 %5299 to i8
  %5301 = and i8 %5300, 1
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5301, i8* %5302, align 1
  %5303 = icmp eq i64 %5284, 0
  %5304 = zext i1 %5303 to i8
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5304, i8* %5305, align 1
  %5306 = lshr i64 %5284, 63
  %5307 = trunc i64 %5306 to i8
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5307, i8* %5308, align 1
  %5309 = lshr i64 %5280, 63
  %5310 = lshr i64 %5281, 63
  %5311 = xor i64 %5306, %5309
  %5312 = xor i64 %5306, %5310
  %5313 = add i64 %5311, %5312
  %5314 = icmp eq i64 %5313, 2
  %5315 = zext i1 %5314 to i8
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5315, i8* %5316, align 1
  store %struct.Memory* %loadMem_4aec71, %struct.Memory** %MEMORY
  %loadMem_4aec74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 33
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %PC.i2271 = bitcast %union.anon* %5319 to i64*
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5321 = getelementptr inbounds %struct.GPR, %struct.GPR* %5320, i32 0, i32 5
  %5322 = getelementptr inbounds %struct.Reg, %struct.Reg* %5321, i32 0, i32 0
  %RCX.i2272 = bitcast %union.anon* %5322 to i64*
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5324 = getelementptr inbounds %struct.GPR, %struct.GPR* %5323, i32 0, i32 15
  %5325 = getelementptr inbounds %struct.Reg, %struct.Reg* %5324, i32 0, i32 0
  %RBP.i2273 = bitcast %union.anon* %5325 to i64*
  %5326 = load i64, i64* %RBP.i2273
  %5327 = sub i64 %5326, 40
  %5328 = load i64, i64* %PC.i2271
  %5329 = add i64 %5328, 4
  store i64 %5329, i64* %PC.i2271
  %5330 = inttoptr i64 %5327 to i32*
  %5331 = load i32, i32* %5330
  %5332 = sext i32 %5331 to i64
  store i64 %5332, i64* %RCX.i2272, align 8
  store %struct.Memory* %loadMem_4aec74, %struct.Memory** %MEMORY
  %loadMem_4aec78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5334 = getelementptr inbounds %struct.GPR, %struct.GPR* %5333, i32 0, i32 33
  %5335 = getelementptr inbounds %struct.Reg, %struct.Reg* %5334, i32 0, i32 0
  %PC.i2268 = bitcast %union.anon* %5335 to i64*
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 1
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %RAX.i2269 = bitcast %union.anon* %5338 to i64*
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5340 = getelementptr inbounds %struct.GPR, %struct.GPR* %5339, i32 0, i32 5
  %5341 = getelementptr inbounds %struct.Reg, %struct.Reg* %5340, i32 0, i32 0
  %RCX.i2270 = bitcast %union.anon* %5341 to i64*
  %5342 = load i64, i64* %RAX.i2269
  %5343 = load i64, i64* %RCX.i2270
  %5344 = mul i64 %5343, 4
  %5345 = add i64 %5344, %5342
  %5346 = load i64, i64* %PC.i2268
  %5347 = add i64 %5346, 7
  store i64 %5347, i64* %PC.i2268
  %5348 = inttoptr i64 %5345 to i32*
  store i32 0, i32* %5348
  store %struct.Memory* %loadMem_4aec78, %struct.Memory** %MEMORY
  %loadMem_4aec7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5350 = getelementptr inbounds %struct.GPR, %struct.GPR* %5349, i32 0, i32 33
  %5351 = getelementptr inbounds %struct.Reg, %struct.Reg* %5350, i32 0, i32 0
  %PC.i2267 = bitcast %union.anon* %5351 to i64*
  %5352 = load i64, i64* %PC.i2267
  %5353 = add i64 %5352, 571
  %5354 = load i64, i64* %PC.i2267
  %5355 = add i64 %5354, 5
  store i64 %5355, i64* %PC.i2267
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5353, i64* %5356, align 8
  store %struct.Memory* %loadMem_4aec7f, %struct.Memory** %MEMORY
  br label %block_.L_4aeeba

block_.L_4aec84:                                  ; preds = %block_4aebb2
  %loadMem_4aec84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5358 = getelementptr inbounds %struct.GPR, %struct.GPR* %5357, i32 0, i32 33
  %5359 = getelementptr inbounds %struct.Reg, %struct.Reg* %5358, i32 0, i32 0
  %PC.i2265 = bitcast %union.anon* %5359 to i64*
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5361 = getelementptr inbounds %struct.GPR, %struct.GPR* %5360, i32 0, i32 1
  %5362 = getelementptr inbounds %struct.Reg, %struct.Reg* %5361, i32 0, i32 0
  %RAX.i2266 = bitcast %union.anon* %5362 to i64*
  %5363 = load i64, i64* %PC.i2265
  %5364 = add i64 %5363, 5
  store i64 %5364, i64* %PC.i2265
  store i64 2, i64* %RAX.i2266, align 8
  store %struct.Memory* %loadMem_4aec84, %struct.Memory** %MEMORY
  %loadMem_4aec89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5366 = getelementptr inbounds %struct.GPR, %struct.GPR* %5365, i32 0, i32 33
  %5367 = getelementptr inbounds %struct.Reg, %struct.Reg* %5366, i32 0, i32 0
  %PC.i2262 = bitcast %union.anon* %5367 to i64*
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5369 = getelementptr inbounds %struct.GPR, %struct.GPR* %5368, i32 0, i32 5
  %5370 = getelementptr inbounds %struct.Reg, %struct.Reg* %5369, i32 0, i32 0
  %RCX.i2263 = bitcast %union.anon* %5370 to i64*
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5372 = getelementptr inbounds %struct.GPR, %struct.GPR* %5371, i32 0, i32 15
  %5373 = getelementptr inbounds %struct.Reg, %struct.Reg* %5372, i32 0, i32 0
  %RBP.i2264 = bitcast %union.anon* %5373 to i64*
  %5374 = load i64, i64* %RBP.i2264
  %5375 = sub i64 %5374, 35408
  %5376 = load i64, i64* %PC.i2262
  %5377 = add i64 %5376, 6
  store i64 %5377, i64* %PC.i2262
  %5378 = inttoptr i64 %5375 to i32*
  %5379 = load i32, i32* %5378
  %5380 = zext i32 %5379 to i64
  store i64 %5380, i64* %RCX.i2263, align 8
  store %struct.Memory* %loadMem_4aec89, %struct.Memory** %MEMORY
  %loadMem_4aec8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5382 = getelementptr inbounds %struct.GPR, %struct.GPR* %5381, i32 0, i32 33
  %5383 = getelementptr inbounds %struct.Reg, %struct.Reg* %5382, i32 0, i32 0
  %PC.i2259 = bitcast %union.anon* %5383 to i64*
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 1
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %EAX.i2260 = bitcast %union.anon* %5386 to i32*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 15
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %RBP.i2261 = bitcast %union.anon* %5389 to i64*
  %5390 = load i64, i64* %RBP.i2261
  %5391 = sub i64 %5390, 35440
  %5392 = load i32, i32* %EAX.i2260
  %5393 = zext i32 %5392 to i64
  %5394 = load i64, i64* %PC.i2259
  %5395 = add i64 %5394, 6
  store i64 %5395, i64* %PC.i2259
  %5396 = inttoptr i64 %5391 to i32*
  store i32 %5392, i32* %5396
  store %struct.Memory* %loadMem_4aec8f, %struct.Memory** %MEMORY
  %loadMem_4aec95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5398 = getelementptr inbounds %struct.GPR, %struct.GPR* %5397, i32 0, i32 33
  %5399 = getelementptr inbounds %struct.Reg, %struct.Reg* %5398, i32 0, i32 0
  %PC.i2256 = bitcast %union.anon* %5399 to i64*
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 5
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %ECX.i2257 = bitcast %union.anon* %5402 to i32*
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 1
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %RAX.i2258 = bitcast %union.anon* %5405 to i64*
  %5406 = load i32, i32* %ECX.i2257
  %5407 = zext i32 %5406 to i64
  %5408 = load i64, i64* %PC.i2256
  %5409 = add i64 %5408, 2
  store i64 %5409, i64* %PC.i2256
  %5410 = and i64 %5407, 4294967295
  store i64 %5410, i64* %RAX.i2258, align 8
  store %struct.Memory* %loadMem_4aec95, %struct.Memory** %MEMORY
  %loadMem_4aec97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5412 = getelementptr inbounds %struct.GPR, %struct.GPR* %5411, i32 0, i32 33
  %5413 = getelementptr inbounds %struct.Reg, %struct.Reg* %5412, i32 0, i32 0
  %PC.i2255 = bitcast %union.anon* %5413 to i64*
  %5414 = load i64, i64* %PC.i2255
  %5415 = add i64 %5414, 1
  store i64 %5415, i64* %PC.i2255
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5418 = bitcast %union.anon* %5417 to i32*
  %5419 = load i32, i32* %5418, align 8
  %5420 = sext i32 %5419 to i64
  %5421 = lshr i64 %5420, 32
  store i64 %5421, i64* %5416, align 8
  store %struct.Memory* %loadMem_4aec97, %struct.Memory** %MEMORY
  %loadMem_4aec98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5423 = getelementptr inbounds %struct.GPR, %struct.GPR* %5422, i32 0, i32 33
  %5424 = getelementptr inbounds %struct.Reg, %struct.Reg* %5423, i32 0, i32 0
  %PC.i2252 = bitcast %union.anon* %5424 to i64*
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5426 = getelementptr inbounds %struct.GPR, %struct.GPR* %5425, i32 0, i32 5
  %5427 = getelementptr inbounds %struct.Reg, %struct.Reg* %5426, i32 0, i32 0
  %RCX.i2253 = bitcast %union.anon* %5427 to i64*
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5429 = getelementptr inbounds %struct.GPR, %struct.GPR* %5428, i32 0, i32 15
  %5430 = getelementptr inbounds %struct.Reg, %struct.Reg* %5429, i32 0, i32 0
  %RBP.i2254 = bitcast %union.anon* %5430 to i64*
  %5431 = load i64, i64* %RBP.i2254
  %5432 = sub i64 %5431, 35440
  %5433 = load i64, i64* %PC.i2252
  %5434 = add i64 %5433, 6
  store i64 %5434, i64* %PC.i2252
  %5435 = inttoptr i64 %5432 to i32*
  %5436 = load i32, i32* %5435
  %5437 = zext i32 %5436 to i64
  store i64 %5437, i64* %RCX.i2253, align 8
  store %struct.Memory* %loadMem_4aec98, %struct.Memory** %MEMORY
  %loadMem_4aec9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5439 = getelementptr inbounds %struct.GPR, %struct.GPR* %5438, i32 0, i32 33
  %5440 = getelementptr inbounds %struct.Reg, %struct.Reg* %5439, i32 0, i32 0
  %PC.i2247 = bitcast %union.anon* %5440 to i64*
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5442 = getelementptr inbounds %struct.GPR, %struct.GPR* %5441, i32 0, i32 5
  %5443 = getelementptr inbounds %struct.Reg, %struct.Reg* %5442, i32 0, i32 0
  %ECX.i2248 = bitcast %union.anon* %5443 to i32*
  %5444 = load i32, i32* %ECX.i2248
  %5445 = zext i32 %5444 to i64
  %5446 = load i64, i64* %PC.i2247
  %5447 = add i64 %5446, 2
  store i64 %5447, i64* %PC.i2247
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5449 = bitcast %union.anon* %5448 to i32*
  %5450 = load i32, i32* %5449, align 8
  %5451 = zext i32 %5450 to i64
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5453 = bitcast %union.anon* %5452 to i32*
  %5454 = load i32, i32* %5453, align 8
  %5455 = zext i32 %5454 to i64
  %5456 = shl i64 %5445, 32
  %5457 = ashr exact i64 %5456, 32
  %5458 = shl i64 %5455, 32
  %5459 = or i64 %5458, %5451
  %5460 = sdiv i64 %5459, %5457
  %5461 = shl i64 %5460, 32
  %5462 = ashr exact i64 %5461, 32
  %5463 = icmp eq i64 %5460, %5462
  br i1 %5463, label %5468, label %5464

; <label>:5464:                                   ; preds = %block_.L_4aec84
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5466 = load i64, i64* %5465, align 8
  %5467 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5466, %struct.Memory* %loadMem_4aec9e)
  br label %routine_idivl__ecx.exit

; <label>:5468:                                   ; preds = %block_.L_4aec84
  %5469 = srem i64 %5459, %5457
  %5470 = getelementptr inbounds %union.anon, %union.anon* %5448, i64 0, i32 0
  %5471 = and i64 %5460, 4294967295
  store i64 %5471, i64* %5470, align 8
  %5472 = getelementptr inbounds %union.anon, %union.anon* %5452, i64 0, i32 0
  %5473 = and i64 %5469, 4294967295
  store i64 %5473, i64* %5472, align 8
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5474, align 1
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5475, align 1
  %5476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5476, align 1
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5477, align 1
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5478, align 1
  %5479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5479, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %5464, %5468
  %5480 = phi %struct.Memory* [ %5467, %5464 ], [ %loadMem_4aec9e, %5468 ]
  store %struct.Memory* %5480, %struct.Memory** %MEMORY
  %loadMem_4aeca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5482 = getelementptr inbounds %struct.GPR, %struct.GPR* %5481, i32 0, i32 33
  %5483 = getelementptr inbounds %struct.Reg, %struct.Reg* %5482, i32 0, i32 0
  %PC.i2244 = bitcast %union.anon* %5483 to i64*
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 1
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %EAX.i2245 = bitcast %union.anon* %5486 to i32*
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 11
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %RDI.i2246 = bitcast %union.anon* %5489 to i64*
  %5490 = load i32, i32* %EAX.i2245
  %5491 = zext i32 %5490 to i64
  %5492 = load i64, i64* %PC.i2244
  %5493 = add i64 %5492, 2
  store i64 %5493, i64* %PC.i2244
  %5494 = and i64 %5491, 4294967295
  store i64 %5494, i64* %RDI.i2246, align 8
  store %struct.Memory* %loadMem_4aeca0, %struct.Memory** %MEMORY
  %loadMem1_4aeca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5496 = getelementptr inbounds %struct.GPR, %struct.GPR* %5495, i32 0, i32 33
  %5497 = getelementptr inbounds %struct.Reg, %struct.Reg* %5496, i32 0, i32 0
  %PC.i2243 = bitcast %union.anon* %5497 to i64*
  %5498 = load i64, i64* %PC.i2243
  %5499 = add i64 %5498, -711842
  %5500 = load i64, i64* %PC.i2243
  %5501 = add i64 %5500, 5
  %5502 = load i64, i64* %PC.i2243
  %5503 = add i64 %5502, 5
  store i64 %5503, i64* %PC.i2243
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5505 = load i64, i64* %5504, align 8
  %5506 = add i64 %5505, -8
  %5507 = inttoptr i64 %5506 to i64*
  store i64 %5501, i64* %5507
  store i64 %5506, i64* %5504, align 8
  %5508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5499, i64* %5508, align 8
  store %struct.Memory* %loadMem1_4aeca2, %struct.Memory** %MEMORY
  %loadMem2_4aeca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4aeca2 = load i64, i64* %3
  %5509 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_4aeca2)
  store %struct.Memory* %5509, %struct.Memory** %MEMORY
  %loadMem_4aeca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 33
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %PC.i2238 = bitcast %union.anon* %5512 to i64*
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 1
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %RAX.i2239 = bitcast %union.anon* %5515 to i64*
  %5516 = load i64, i64* %RAX.i2239
  %5517 = load i64, i64* %PC.i2238
  %5518 = add i64 %5517, 5
  store i64 %5518, i64* %PC.i2238
  %5519 = trunc i64 %5516 to i32
  %5520 = add i32 16384, %5519
  %5521 = zext i32 %5520 to i64
  store i64 %5521, i64* %RAX.i2239, align 8
  %5522 = icmp ult i32 %5520, %5519
  %5523 = icmp ult i32 %5520, 16384
  %5524 = or i1 %5522, %5523
  %5525 = zext i1 %5524 to i8
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5525, i8* %5526, align 1
  %5527 = and i32 %5520, 255
  %5528 = call i32 @llvm.ctpop.i32(i32 %5527)
  %5529 = trunc i32 %5528 to i8
  %5530 = and i8 %5529, 1
  %5531 = xor i8 %5530, 1
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5531, i8* %5532, align 1
  %5533 = xor i64 16384, %5516
  %5534 = trunc i64 %5533 to i32
  %5535 = xor i32 %5534, %5520
  %5536 = lshr i32 %5535, 4
  %5537 = trunc i32 %5536 to i8
  %5538 = and i8 %5537, 1
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5538, i8* %5539, align 1
  %5540 = icmp eq i32 %5520, 0
  %5541 = zext i1 %5540 to i8
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5541, i8* %5542, align 1
  %5543 = lshr i32 %5520, 31
  %5544 = trunc i32 %5543 to i8
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5544, i8* %5545, align 1
  %5546 = lshr i32 %5519, 31
  %5547 = xor i32 %5543, %5546
  %5548 = add i32 %5547, %5543
  %5549 = icmp eq i32 %5548, 2
  %5550 = zext i1 %5549 to i8
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5550, i8* %5551, align 1
  store %struct.Memory* %loadMem_4aeca7, %struct.Memory** %MEMORY
  %loadMem_4aecac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 33
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %PC.i2237 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %PC.i2237
  %5556 = add i64 %5555, 1
  store i64 %5556, i64* %PC.i2237
  %5557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5559 = bitcast %union.anon* %5558 to i32*
  %5560 = load i32, i32* %5559, align 8
  %5561 = sext i32 %5560 to i64
  %5562 = lshr i64 %5561, 32
  store i64 %5562, i64* %5557, align 8
  store %struct.Memory* %loadMem_4aecac, %struct.Memory** %MEMORY
  %loadMem_4aecad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5564 = getelementptr inbounds %struct.GPR, %struct.GPR* %5563, i32 0, i32 33
  %5565 = getelementptr inbounds %struct.Reg, %struct.Reg* %5564, i32 0, i32 0
  %PC.i2233 = bitcast %union.anon* %5565 to i64*
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5567 = getelementptr inbounds %struct.GPR, %struct.GPR* %5566, i32 0, i32 15
  %5568 = getelementptr inbounds %struct.Reg, %struct.Reg* %5567, i32 0, i32 0
  %RBP.i2234 = bitcast %union.anon* %5568 to i64*
  %5569 = load i64, i64* %RBP.i2234
  %5570 = sub i64 %5569, 35408
  %5571 = load i64, i64* %PC.i2233
  %5572 = add i64 %5571, 6
  store i64 %5572, i64* %PC.i2233
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5574 = bitcast %union.anon* %5573 to i32*
  %5575 = load i32, i32* %5574, align 8
  %5576 = zext i32 %5575 to i64
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5578 = bitcast %union.anon* %5577 to i32*
  %5579 = load i32, i32* %5578, align 8
  %5580 = zext i32 %5579 to i64
  %5581 = inttoptr i64 %5570 to i32*
  %5582 = load i32, i32* %5581
  %5583 = sext i32 %5582 to i64
  %5584 = shl i64 %5580, 32
  %5585 = or i64 %5584, %5576
  %5586 = sdiv i64 %5585, %5583
  %5587 = shl i64 %5586, 32
  %5588 = ashr exact i64 %5587, 32
  %5589 = icmp eq i64 %5586, %5588
  br i1 %5589, label %5594, label %5590

; <label>:5590:                                   ; preds = %routine_idivl__ecx.exit
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5592 = load i64, i64* %5591, align 8
  %5593 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5592, %struct.Memory* %loadMem_4aecad)
  br label %routine_idivl_MINUS0x8a50__rbp_.exit

; <label>:5594:                                   ; preds = %routine_idivl__ecx.exit
  %5595 = srem i64 %5585, %5583
  %5596 = getelementptr inbounds %union.anon, %union.anon* %5573, i64 0, i32 0
  %5597 = and i64 %5586, 4294967295
  store i64 %5597, i64* %5596, align 8
  %5598 = getelementptr inbounds %union.anon, %union.anon* %5577, i64 0, i32 0
  %5599 = and i64 %5595, 4294967295
  store i64 %5599, i64* %5598, align 8
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5600, align 1
  %5601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5601, align 1
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5602, align 1
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5603, align 1
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5604, align 1
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5605, align 1
  br label %routine_idivl_MINUS0x8a50__rbp_.exit

routine_idivl_MINUS0x8a50__rbp_.exit:             ; preds = %5590, %5594
  %5606 = phi %struct.Memory* [ %5593, %5590 ], [ %loadMem_4aecad, %5594 ]
  store %struct.Memory* %5606, %struct.Memory** %MEMORY
  %loadMem_4aecb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5608 = getelementptr inbounds %struct.GPR, %struct.GPR* %5607, i32 0, i32 33
  %5609 = getelementptr inbounds %struct.Reg, %struct.Reg* %5608, i32 0, i32 0
  %PC.i2230 = bitcast %union.anon* %5609 to i64*
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5611 = getelementptr inbounds %struct.GPR, %struct.GPR* %5610, i32 0, i32 1
  %5612 = getelementptr inbounds %struct.Reg, %struct.Reg* %5611, i32 0, i32 0
  %EAX.i2231 = bitcast %union.anon* %5612 to i32*
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5614 = getelementptr inbounds %struct.GPR, %struct.GPR* %5613, i32 0, i32 15
  %5615 = getelementptr inbounds %struct.Reg, %struct.Reg* %5614, i32 0, i32 0
  %RBP.i2232 = bitcast %union.anon* %5615 to i64*
  %5616 = load i64, i64* %RBP.i2232
  %5617 = sub i64 %5616, 20
  %5618 = load i32, i32* %EAX.i2231
  %5619 = zext i32 %5618 to i64
  %5620 = load i64, i64* %PC.i2230
  %5621 = add i64 %5620, 3
  store i64 %5621, i64* %PC.i2230
  %5622 = inttoptr i64 %5617 to i32*
  store i32 %5618, i32* %5622
  store %struct.Memory* %loadMem_4aecb3, %struct.Memory** %MEMORY
  %loadMem_4aecb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 33
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %PC.i2227 = bitcast %union.anon* %5625 to i64*
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5627 = getelementptr inbounds %struct.GPR, %struct.GPR* %5626, i32 0, i32 1
  %5628 = getelementptr inbounds %struct.Reg, %struct.Reg* %5627, i32 0, i32 0
  %RAX.i2228 = bitcast %union.anon* %5628 to i64*
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5630 = getelementptr inbounds %struct.GPR, %struct.GPR* %5629, i32 0, i32 15
  %5631 = getelementptr inbounds %struct.Reg, %struct.Reg* %5630, i32 0, i32 0
  %RBP.i2229 = bitcast %union.anon* %5631 to i64*
  %5632 = load i64, i64* %RBP.i2229
  %5633 = sub i64 %5632, 20
  %5634 = load i64, i64* %PC.i2227
  %5635 = add i64 %5634, 3
  store i64 %5635, i64* %PC.i2227
  %5636 = inttoptr i64 %5633 to i32*
  %5637 = load i32, i32* %5636
  %5638 = zext i32 %5637 to i64
  store i64 %5638, i64* %RAX.i2228, align 8
  store %struct.Memory* %loadMem_4aecb6, %struct.Memory** %MEMORY
  %loadMem_4aecb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 33
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %PC.i2224 = bitcast %union.anon* %5641 to i64*
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 1
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %RAX.i2225 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 15
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %RBP.i2226 = bitcast %union.anon* %5647 to i64*
  %5648 = load i64, i64* %RAX.i2225
  %5649 = load i64, i64* %RBP.i2226
  %5650 = sub i64 %5649, 35412
  %5651 = load i64, i64* %PC.i2224
  %5652 = add i64 %5651, 7
  store i64 %5652, i64* %PC.i2224
  %5653 = inttoptr i64 %5650 to i32*
  %5654 = load i32, i32* %5653
  %5655 = shl i64 %5648, 32
  %5656 = ashr exact i64 %5655, 32
  %5657 = sext i32 %5654 to i64
  %5658 = mul i64 %5657, %5656
  %5659 = trunc i64 %5658 to i32
  %5660 = and i64 %5658, 4294967295
  store i64 %5660, i64* %RAX.i2225, align 8
  %5661 = shl i64 %5658, 32
  %5662 = ashr exact i64 %5661, 32
  %5663 = icmp ne i64 %5662, %5658
  %5664 = zext i1 %5663 to i8
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5664, i8* %5665, align 1
  %5666 = and i32 %5659, 255
  %5667 = call i32 @llvm.ctpop.i32(i32 %5666)
  %5668 = trunc i32 %5667 to i8
  %5669 = and i8 %5668, 1
  %5670 = xor i8 %5669, 1
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5670, i8* %5671, align 1
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5672, align 1
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5673, align 1
  %5674 = lshr i32 %5659, 31
  %5675 = trunc i32 %5674 to i8
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5675, i8* %5676, align 1
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5664, i8* %5677, align 1
  store %struct.Memory* %loadMem_4aecb9, %struct.Memory** %MEMORY
  %loadMem_4aecc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 33
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %PC.i2222 = bitcast %union.anon* %5680 to i64*
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 1
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %RAX.i2223 = bitcast %union.anon* %5683 to i64*
  %5684 = load i64, i64* %RAX.i2223
  %5685 = load i64, i64* %PC.i2222
  %5686 = add i64 %5685, 3
  store i64 %5686, i64* %PC.i2222
  %5687 = trunc i64 %5684 to i32
  %5688 = add i32 32, %5687
  %5689 = zext i32 %5688 to i64
  store i64 %5689, i64* %RAX.i2223, align 8
  %5690 = icmp ult i32 %5688, %5687
  %5691 = icmp ult i32 %5688, 32
  %5692 = or i1 %5690, %5691
  %5693 = zext i1 %5692 to i8
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5693, i8* %5694, align 1
  %5695 = and i32 %5688, 255
  %5696 = call i32 @llvm.ctpop.i32(i32 %5695)
  %5697 = trunc i32 %5696 to i8
  %5698 = and i8 %5697, 1
  %5699 = xor i8 %5698, 1
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5699, i8* %5700, align 1
  %5701 = xor i64 32, %5684
  %5702 = trunc i64 %5701 to i32
  %5703 = xor i32 %5702, %5688
  %5704 = lshr i32 %5703, 4
  %5705 = trunc i32 %5704 to i8
  %5706 = and i8 %5705, 1
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5706, i8* %5707, align 1
  %5708 = icmp eq i32 %5688, 0
  %5709 = zext i1 %5708 to i8
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5709, i8* %5710, align 1
  %5711 = lshr i32 %5688, 31
  %5712 = trunc i32 %5711 to i8
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5712, i8* %5713, align 1
  %5714 = lshr i32 %5687, 31
  %5715 = xor i32 %5711, %5714
  %5716 = add i32 %5715, %5711
  %5717 = icmp eq i32 %5716, 2
  %5718 = zext i1 %5717 to i8
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5718, i8* %5719, align 1
  store %struct.Memory* %loadMem_4aecc0, %struct.Memory** %MEMORY
  %loadMem_4aecc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5721 = getelementptr inbounds %struct.GPR, %struct.GPR* %5720, i32 0, i32 33
  %5722 = getelementptr inbounds %struct.Reg, %struct.Reg* %5721, i32 0, i32 0
  %PC.i2220 = bitcast %union.anon* %5722 to i64*
  %5723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5724 = getelementptr inbounds %struct.GPR, %struct.GPR* %5723, i32 0, i32 1
  %5725 = getelementptr inbounds %struct.Reg, %struct.Reg* %5724, i32 0, i32 0
  %RAX.i2221 = bitcast %union.anon* %5725 to i64*
  %5726 = load i64, i64* %RAX.i2221
  %5727 = load i64, i64* %PC.i2220
  %5728 = add i64 %5727, 3
  store i64 %5728, i64* %PC.i2220
  %5729 = shl i64 %5726, 32
  %5730 = ashr exact i64 %5729, 32
  %5731 = ashr i64 %5730, 5
  %5732 = lshr i64 %5731, 1
  %5733 = trunc i64 %5731 to i8
  %5734 = and i8 %5733, 1
  %5735 = trunc i64 %5732 to i32
  %5736 = and i64 %5732, 4294967295
  store i64 %5736, i64* %RAX.i2221, align 8
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5734, i8* %5737, align 1
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5739 = and i32 %5735, 255
  %5740 = call i32 @llvm.ctpop.i32(i32 %5739)
  %5741 = trunc i32 %5740 to i8
  %5742 = and i8 %5741, 1
  %5743 = xor i8 %5742, 1
  store i8 %5743, i8* %5738, align 1
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5744, align 1
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5746 = icmp eq i32 %5735, 0
  %5747 = zext i1 %5746 to i8
  store i8 %5747, i8* %5745, align 1
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5749 = lshr i32 %5735, 31
  %5750 = trunc i32 %5749 to i8
  store i8 %5750, i8* %5748, align 1
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5751, align 1
  store %struct.Memory* %loadMem_4aecc3, %struct.Memory** %MEMORY
  %loadMem_4aecc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5753 = getelementptr inbounds %struct.GPR, %struct.GPR* %5752, i32 0, i32 33
  %5754 = getelementptr inbounds %struct.Reg, %struct.Reg* %5753, i32 0, i32 0
  %PC.i2218 = bitcast %union.anon* %5754 to i64*
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5756 = getelementptr inbounds %struct.GPR, %struct.GPR* %5755, i32 0, i32 1
  %5757 = getelementptr inbounds %struct.Reg, %struct.Reg* %5756, i32 0, i32 0
  %EAX.i2219 = bitcast %union.anon* %5757 to i32*
  %5758 = load i32, i32* %EAX.i2219
  %5759 = zext i32 %5758 to i64
  %5760 = load i64, i64* %PC.i2218
  %5761 = add i64 %5760, 5
  store i64 %5761, i64* %PC.i2218
  %5762 = sub i32 %5758, -1024
  %5763 = icmp ult i32 %5758, -1024
  %5764 = zext i1 %5763 to i8
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5764, i8* %5765, align 1
  %5766 = and i32 %5762, 255
  %5767 = call i32 @llvm.ctpop.i32(i32 %5766)
  %5768 = trunc i32 %5767 to i8
  %5769 = and i8 %5768, 1
  %5770 = xor i8 %5769, 1
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5770, i8* %5771, align 1
  %5772 = xor i64 -1024, %5759
  %5773 = trunc i64 %5772 to i32
  %5774 = xor i32 %5773, %5762
  %5775 = lshr i32 %5774, 4
  %5776 = trunc i32 %5775 to i8
  %5777 = and i8 %5776, 1
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5777, i8* %5778, align 1
  %5779 = icmp eq i32 %5762, 0
  %5780 = zext i1 %5779 to i8
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5780, i8* %5781, align 1
  %5782 = lshr i32 %5762, 31
  %5783 = trunc i32 %5782 to i8
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5783, i8* %5784, align 1
  %5785 = lshr i32 %5758, 31
  %5786 = xor i32 1, %5785
  %5787 = xor i32 %5782, %5785
  %5788 = add i32 %5787, %5786
  %5789 = icmp eq i32 %5788, 2
  %5790 = zext i1 %5789 to i8
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5790, i8* %5791, align 1
  store %struct.Memory* %loadMem_4aecc6, %struct.Memory** %MEMORY
  %loadMem_4aeccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5793 = getelementptr inbounds %struct.GPR, %struct.GPR* %5792, i32 0, i32 33
  %5794 = getelementptr inbounds %struct.Reg, %struct.Reg* %5793, i32 0, i32 0
  %PC.i2217 = bitcast %union.anon* %5794 to i64*
  %5795 = load i64, i64* %PC.i2217
  %5796 = add i64 %5795, 22
  %5797 = load i64, i64* %PC.i2217
  %5798 = add i64 %5797, 6
  %5799 = load i64, i64* %PC.i2217
  %5800 = add i64 %5799, 6
  store i64 %5800, i64* %PC.i2217
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5802 = load i8, i8* %5801, align 1
  %5803 = icmp ne i8 %5802, 0
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5805 = load i8, i8* %5804, align 1
  %5806 = icmp ne i8 %5805, 0
  %5807 = xor i1 %5803, %5806
  %5808 = xor i1 %5807, true
  %5809 = zext i1 %5808 to i8
  store i8 %5809, i8* %BRANCH_TAKEN, align 1
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5811 = select i1 %5807, i64 %5798, i64 %5796
  store i64 %5811, i64* %5810, align 8
  store %struct.Memory* %loadMem_4aeccb, %struct.Memory** %MEMORY
  %loadBr_4aeccb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aeccb = icmp eq i8 %loadBr_4aeccb, 1
  br i1 %cmpBr_4aeccb, label %block_.L_4aece1, label %block_4aecd1

block_4aecd1:                                     ; preds = %routine_idivl_MINUS0x8a50__rbp_.exit
  %loadMem_4aecd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5813 = getelementptr inbounds %struct.GPR, %struct.GPR* %5812, i32 0, i32 33
  %5814 = getelementptr inbounds %struct.Reg, %struct.Reg* %5813, i32 0, i32 0
  %PC.i2215 = bitcast %union.anon* %5814 to i64*
  %5815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5816 = getelementptr inbounds %struct.GPR, %struct.GPR* %5815, i32 0, i32 1
  %5817 = getelementptr inbounds %struct.Reg, %struct.Reg* %5816, i32 0, i32 0
  %RAX.i2216 = bitcast %union.anon* %5817 to i64*
  %5818 = load i64, i64* %PC.i2215
  %5819 = add i64 %5818, 5
  store i64 %5819, i64* %PC.i2215
  store i64 4294966272, i64* %RAX.i2216, align 8
  store %struct.Memory* %loadMem_4aecd1, %struct.Memory** %MEMORY
  %loadMem_4aecd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 33
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %PC.i2212 = bitcast %union.anon* %5822 to i64*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 1
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %EAX.i2213 = bitcast %union.anon* %5825 to i32*
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5827 = getelementptr inbounds %struct.GPR, %struct.GPR* %5826, i32 0, i32 15
  %5828 = getelementptr inbounds %struct.Reg, %struct.Reg* %5827, i32 0, i32 0
  %RBP.i2214 = bitcast %union.anon* %5828 to i64*
  %5829 = load i64, i64* %RBP.i2214
  %5830 = sub i64 %5829, 35444
  %5831 = load i32, i32* %EAX.i2213
  %5832 = zext i32 %5831 to i64
  %5833 = load i64, i64* %PC.i2212
  %5834 = add i64 %5833, 6
  store i64 %5834, i64* %PC.i2212
  %5835 = inttoptr i64 %5830 to i32*
  store i32 %5831, i32* %5835
  store %struct.Memory* %loadMem_4aecd6, %struct.Memory** %MEMORY
  %loadMem_4aecdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5837 = getelementptr inbounds %struct.GPR, %struct.GPR* %5836, i32 0, i32 33
  %5838 = getelementptr inbounds %struct.Reg, %struct.Reg* %5837, i32 0, i32 0
  %PC.i2211 = bitcast %union.anon* %5838 to i64*
  %5839 = load i64, i64* %PC.i2211
  %5840 = add i64 %5839, 82
  %5841 = load i64, i64* %PC.i2211
  %5842 = add i64 %5841, 5
  store i64 %5842, i64* %PC.i2211
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5840, i64* %5843, align 8
  store %struct.Memory* %loadMem_4aecdc, %struct.Memory** %MEMORY
  br label %block_.L_4aed2e

block_.L_4aece1:                                  ; preds = %routine_idivl_MINUS0x8a50__rbp_.exit
  %loadMem_4aece1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 33
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %PC.i2208 = bitcast %union.anon* %5846 to i64*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 1
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RAX.i2209 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 15
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %RBP.i2210 = bitcast %union.anon* %5852 to i64*
  %5853 = load i64, i64* %RBP.i2210
  %5854 = sub i64 %5853, 20
  %5855 = load i64, i64* %PC.i2208
  %5856 = add i64 %5855, 3
  store i64 %5856, i64* %PC.i2208
  %5857 = inttoptr i64 %5854 to i32*
  %5858 = load i32, i32* %5857
  %5859 = zext i32 %5858 to i64
  store i64 %5859, i64* %RAX.i2209, align 8
  store %struct.Memory* %loadMem_4aece1, %struct.Memory** %MEMORY
  %loadMem_4aece4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 33
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %PC.i2205 = bitcast %union.anon* %5862 to i64*
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 1
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %RAX.i2206 = bitcast %union.anon* %5865 to i64*
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5867 = getelementptr inbounds %struct.GPR, %struct.GPR* %5866, i32 0, i32 15
  %5868 = getelementptr inbounds %struct.Reg, %struct.Reg* %5867, i32 0, i32 0
  %RBP.i2207 = bitcast %union.anon* %5868 to i64*
  %5869 = load i64, i64* %RAX.i2206
  %5870 = load i64, i64* %RBP.i2207
  %5871 = sub i64 %5870, 35412
  %5872 = load i64, i64* %PC.i2205
  %5873 = add i64 %5872, 7
  store i64 %5873, i64* %PC.i2205
  %5874 = inttoptr i64 %5871 to i32*
  %5875 = load i32, i32* %5874
  %5876 = shl i64 %5869, 32
  %5877 = ashr exact i64 %5876, 32
  %5878 = sext i32 %5875 to i64
  %5879 = mul i64 %5878, %5877
  %5880 = trunc i64 %5879 to i32
  %5881 = and i64 %5879, 4294967295
  store i64 %5881, i64* %RAX.i2206, align 8
  %5882 = shl i64 %5879, 32
  %5883 = ashr exact i64 %5882, 32
  %5884 = icmp ne i64 %5883, %5879
  %5885 = zext i1 %5884 to i8
  %5886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5885, i8* %5886, align 1
  %5887 = and i32 %5880, 255
  %5888 = call i32 @llvm.ctpop.i32(i32 %5887)
  %5889 = trunc i32 %5888 to i8
  %5890 = and i8 %5889, 1
  %5891 = xor i8 %5890, 1
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5891, i8* %5892, align 1
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5893, align 1
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5894, align 1
  %5895 = lshr i32 %5880, 31
  %5896 = trunc i32 %5895 to i8
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5896, i8* %5897, align 1
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5885, i8* %5898, align 1
  store %struct.Memory* %loadMem_4aece4, %struct.Memory** %MEMORY
  %loadMem_4aeceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5900 = getelementptr inbounds %struct.GPR, %struct.GPR* %5899, i32 0, i32 33
  %5901 = getelementptr inbounds %struct.Reg, %struct.Reg* %5900, i32 0, i32 0
  %PC.i2203 = bitcast %union.anon* %5901 to i64*
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5903 = getelementptr inbounds %struct.GPR, %struct.GPR* %5902, i32 0, i32 1
  %5904 = getelementptr inbounds %struct.Reg, %struct.Reg* %5903, i32 0, i32 0
  %RAX.i2204 = bitcast %union.anon* %5904 to i64*
  %5905 = load i64, i64* %RAX.i2204
  %5906 = load i64, i64* %PC.i2203
  %5907 = add i64 %5906, 3
  store i64 %5907, i64* %PC.i2203
  %5908 = trunc i64 %5905 to i32
  %5909 = add i32 32, %5908
  %5910 = zext i32 %5909 to i64
  store i64 %5910, i64* %RAX.i2204, align 8
  %5911 = icmp ult i32 %5909, %5908
  %5912 = icmp ult i32 %5909, 32
  %5913 = or i1 %5911, %5912
  %5914 = zext i1 %5913 to i8
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5914, i8* %5915, align 1
  %5916 = and i32 %5909, 255
  %5917 = call i32 @llvm.ctpop.i32(i32 %5916)
  %5918 = trunc i32 %5917 to i8
  %5919 = and i8 %5918, 1
  %5920 = xor i8 %5919, 1
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5920, i8* %5921, align 1
  %5922 = xor i64 32, %5905
  %5923 = trunc i64 %5922 to i32
  %5924 = xor i32 %5923, %5909
  %5925 = lshr i32 %5924, 4
  %5926 = trunc i32 %5925 to i8
  %5927 = and i8 %5926, 1
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5927, i8* %5928, align 1
  %5929 = icmp eq i32 %5909, 0
  %5930 = zext i1 %5929 to i8
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5930, i8* %5931, align 1
  %5932 = lshr i32 %5909, 31
  %5933 = trunc i32 %5932 to i8
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5933, i8* %5934, align 1
  %5935 = lshr i32 %5908, 31
  %5936 = xor i32 %5932, %5935
  %5937 = add i32 %5936, %5932
  %5938 = icmp eq i32 %5937, 2
  %5939 = zext i1 %5938 to i8
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5939, i8* %5940, align 1
  store %struct.Memory* %loadMem_4aeceb, %struct.Memory** %MEMORY
  %loadMem_4aecee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5942 = getelementptr inbounds %struct.GPR, %struct.GPR* %5941, i32 0, i32 33
  %5943 = getelementptr inbounds %struct.Reg, %struct.Reg* %5942, i32 0, i32 0
  %PC.i2201 = bitcast %union.anon* %5943 to i64*
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 1
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %RAX.i2202 = bitcast %union.anon* %5946 to i64*
  %5947 = load i64, i64* %RAX.i2202
  %5948 = load i64, i64* %PC.i2201
  %5949 = add i64 %5948, 3
  store i64 %5949, i64* %PC.i2201
  %5950 = shl i64 %5947, 32
  %5951 = ashr exact i64 %5950, 32
  %5952 = ashr i64 %5951, 5
  %5953 = lshr i64 %5952, 1
  %5954 = trunc i64 %5952 to i8
  %5955 = and i8 %5954, 1
  %5956 = trunc i64 %5953 to i32
  %5957 = and i64 %5953, 4294967295
  store i64 %5957, i64* %RAX.i2202, align 8
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5955, i8* %5958, align 1
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5960 = and i32 %5956, 255
  %5961 = call i32 @llvm.ctpop.i32(i32 %5960)
  %5962 = trunc i32 %5961 to i8
  %5963 = and i8 %5962, 1
  %5964 = xor i8 %5963, 1
  store i8 %5964, i8* %5959, align 1
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5965, align 1
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5967 = icmp eq i32 %5956, 0
  %5968 = zext i1 %5967 to i8
  store i8 %5968, i8* %5966, align 1
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5970 = lshr i32 %5956, 31
  %5971 = trunc i32 %5970 to i8
  store i8 %5971, i8* %5969, align 1
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5972, align 1
  store %struct.Memory* %loadMem_4aecee, %struct.Memory** %MEMORY
  %loadMem_4aecf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5974 = getelementptr inbounds %struct.GPR, %struct.GPR* %5973, i32 0, i32 33
  %5975 = getelementptr inbounds %struct.Reg, %struct.Reg* %5974, i32 0, i32 0
  %PC.i2199 = bitcast %union.anon* %5975 to i64*
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5977 = getelementptr inbounds %struct.GPR, %struct.GPR* %5976, i32 0, i32 1
  %5978 = getelementptr inbounds %struct.Reg, %struct.Reg* %5977, i32 0, i32 0
  %EAX.i2200 = bitcast %union.anon* %5978 to i32*
  %5979 = load i32, i32* %EAX.i2200
  %5980 = zext i32 %5979 to i64
  %5981 = load i64, i64* %PC.i2199
  %5982 = add i64 %5981, 5
  store i64 %5982, i64* %PC.i2199
  %5983 = sub i32 %5979, 1023
  %5984 = icmp ult i32 %5979, 1023
  %5985 = zext i1 %5984 to i8
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5985, i8* %5986, align 1
  %5987 = and i32 %5983, 255
  %5988 = call i32 @llvm.ctpop.i32(i32 %5987)
  %5989 = trunc i32 %5988 to i8
  %5990 = and i8 %5989, 1
  %5991 = xor i8 %5990, 1
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5991, i8* %5992, align 1
  %5993 = xor i64 1023, %5980
  %5994 = trunc i64 %5993 to i32
  %5995 = xor i32 %5994, %5983
  %5996 = lshr i32 %5995, 4
  %5997 = trunc i32 %5996 to i8
  %5998 = and i8 %5997, 1
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5998, i8* %5999, align 1
  %6000 = icmp eq i32 %5983, 0
  %6001 = zext i1 %6000 to i8
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6001, i8* %6002, align 1
  %6003 = lshr i32 %5983, 31
  %6004 = trunc i32 %6003 to i8
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6004, i8* %6005, align 1
  %6006 = lshr i32 %5979, 31
  %6007 = xor i32 %6003, %6006
  %6008 = add i32 %6007, %6006
  %6009 = icmp eq i32 %6008, 2
  %6010 = zext i1 %6009 to i8
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6010, i8* %6011, align 1
  store %struct.Memory* %loadMem_4aecf1, %struct.Memory** %MEMORY
  %loadMem_4aecf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 33
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %PC.i2198 = bitcast %union.anon* %6014 to i64*
  %6015 = load i64, i64* %PC.i2198
  %6016 = add i64 %6015, 22
  %6017 = load i64, i64* %PC.i2198
  %6018 = add i64 %6017, 6
  %6019 = load i64, i64* %PC.i2198
  %6020 = add i64 %6019, 6
  store i64 %6020, i64* %PC.i2198
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6022 = load i8, i8* %6021, align 1
  %6023 = icmp ne i8 %6022, 0
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6025 = load i8, i8* %6024, align 1
  %6026 = icmp ne i8 %6025, 0
  %6027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6028 = load i8, i8* %6027, align 1
  %6029 = icmp ne i8 %6028, 0
  %6030 = xor i1 %6026, %6029
  %6031 = or i1 %6023, %6030
  %6032 = zext i1 %6031 to i8
  store i8 %6032, i8* %BRANCH_TAKEN, align 1
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6034 = select i1 %6031, i64 %6016, i64 %6018
  store i64 %6034, i64* %6033, align 8
  store %struct.Memory* %loadMem_4aecf6, %struct.Memory** %MEMORY
  %loadBr_4aecf6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aecf6 = icmp eq i8 %loadBr_4aecf6, 1
  br i1 %cmpBr_4aecf6, label %block_.L_4aed0c, label %block_4aecfc

block_4aecfc:                                     ; preds = %block_.L_4aece1
  %loadMem_4aecfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6036 = getelementptr inbounds %struct.GPR, %struct.GPR* %6035, i32 0, i32 33
  %6037 = getelementptr inbounds %struct.Reg, %struct.Reg* %6036, i32 0, i32 0
  %PC.i2196 = bitcast %union.anon* %6037 to i64*
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6039 = getelementptr inbounds %struct.GPR, %struct.GPR* %6038, i32 0, i32 1
  %6040 = getelementptr inbounds %struct.Reg, %struct.Reg* %6039, i32 0, i32 0
  %RAX.i2197 = bitcast %union.anon* %6040 to i64*
  %6041 = load i64, i64* %PC.i2196
  %6042 = add i64 %6041, 5
  store i64 %6042, i64* %PC.i2196
  store i64 1023, i64* %RAX.i2197, align 8
  store %struct.Memory* %loadMem_4aecfc, %struct.Memory** %MEMORY
  %loadMem_4aed01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6044 = getelementptr inbounds %struct.GPR, %struct.GPR* %6043, i32 0, i32 33
  %6045 = getelementptr inbounds %struct.Reg, %struct.Reg* %6044, i32 0, i32 0
  %PC.i2193 = bitcast %union.anon* %6045 to i64*
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6047 = getelementptr inbounds %struct.GPR, %struct.GPR* %6046, i32 0, i32 1
  %6048 = getelementptr inbounds %struct.Reg, %struct.Reg* %6047, i32 0, i32 0
  %EAX.i2194 = bitcast %union.anon* %6048 to i32*
  %6049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6050 = getelementptr inbounds %struct.GPR, %struct.GPR* %6049, i32 0, i32 15
  %6051 = getelementptr inbounds %struct.Reg, %struct.Reg* %6050, i32 0, i32 0
  %RBP.i2195 = bitcast %union.anon* %6051 to i64*
  %6052 = load i64, i64* %RBP.i2195
  %6053 = sub i64 %6052, 35448
  %6054 = load i32, i32* %EAX.i2194
  %6055 = zext i32 %6054 to i64
  %6056 = load i64, i64* %PC.i2193
  %6057 = add i64 %6056, 6
  store i64 %6057, i64* %PC.i2193
  %6058 = inttoptr i64 %6053 to i32*
  store i32 %6054, i32* %6058
  store %struct.Memory* %loadMem_4aed01, %struct.Memory** %MEMORY
  %loadMem_4aed07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6060 = getelementptr inbounds %struct.GPR, %struct.GPR* %6059, i32 0, i32 33
  %6061 = getelementptr inbounds %struct.Reg, %struct.Reg* %6060, i32 0, i32 0
  %PC.i2192 = bitcast %union.anon* %6061 to i64*
  %6062 = load i64, i64* %PC.i2192
  %6063 = add i64 %6062, 27
  %6064 = load i64, i64* %PC.i2192
  %6065 = add i64 %6064, 5
  store i64 %6065, i64* %PC.i2192
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6063, i64* %6066, align 8
  store %struct.Memory* %loadMem_4aed07, %struct.Memory** %MEMORY
  br label %block_.L_4aed22

block_.L_4aed0c:                                  ; preds = %block_.L_4aece1
  %loadMem_4aed0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6068 = getelementptr inbounds %struct.GPR, %struct.GPR* %6067, i32 0, i32 33
  %6069 = getelementptr inbounds %struct.Reg, %struct.Reg* %6068, i32 0, i32 0
  %PC.i2189 = bitcast %union.anon* %6069 to i64*
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6071 = getelementptr inbounds %struct.GPR, %struct.GPR* %6070, i32 0, i32 1
  %6072 = getelementptr inbounds %struct.Reg, %struct.Reg* %6071, i32 0, i32 0
  %RAX.i2190 = bitcast %union.anon* %6072 to i64*
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6074 = getelementptr inbounds %struct.GPR, %struct.GPR* %6073, i32 0, i32 15
  %6075 = getelementptr inbounds %struct.Reg, %struct.Reg* %6074, i32 0, i32 0
  %RBP.i2191 = bitcast %union.anon* %6075 to i64*
  %6076 = load i64, i64* %RBP.i2191
  %6077 = sub i64 %6076, 20
  %6078 = load i64, i64* %PC.i2189
  %6079 = add i64 %6078, 3
  store i64 %6079, i64* %PC.i2189
  %6080 = inttoptr i64 %6077 to i32*
  %6081 = load i32, i32* %6080
  %6082 = zext i32 %6081 to i64
  store i64 %6082, i64* %RAX.i2190, align 8
  store %struct.Memory* %loadMem_4aed0c, %struct.Memory** %MEMORY
  %loadMem_4aed0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6084 = getelementptr inbounds %struct.GPR, %struct.GPR* %6083, i32 0, i32 33
  %6085 = getelementptr inbounds %struct.Reg, %struct.Reg* %6084, i32 0, i32 0
  %PC.i2186 = bitcast %union.anon* %6085 to i64*
  %6086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6087 = getelementptr inbounds %struct.GPR, %struct.GPR* %6086, i32 0, i32 1
  %6088 = getelementptr inbounds %struct.Reg, %struct.Reg* %6087, i32 0, i32 0
  %RAX.i2187 = bitcast %union.anon* %6088 to i64*
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6090 = getelementptr inbounds %struct.GPR, %struct.GPR* %6089, i32 0, i32 15
  %6091 = getelementptr inbounds %struct.Reg, %struct.Reg* %6090, i32 0, i32 0
  %RBP.i2188 = bitcast %union.anon* %6091 to i64*
  %6092 = load i64, i64* %RAX.i2187
  %6093 = load i64, i64* %RBP.i2188
  %6094 = sub i64 %6093, 35412
  %6095 = load i64, i64* %PC.i2186
  %6096 = add i64 %6095, 7
  store i64 %6096, i64* %PC.i2186
  %6097 = inttoptr i64 %6094 to i32*
  %6098 = load i32, i32* %6097
  %6099 = shl i64 %6092, 32
  %6100 = ashr exact i64 %6099, 32
  %6101 = sext i32 %6098 to i64
  %6102 = mul i64 %6101, %6100
  %6103 = trunc i64 %6102 to i32
  %6104 = and i64 %6102, 4294967295
  store i64 %6104, i64* %RAX.i2187, align 8
  %6105 = shl i64 %6102, 32
  %6106 = ashr exact i64 %6105, 32
  %6107 = icmp ne i64 %6106, %6102
  %6108 = zext i1 %6107 to i8
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6108, i8* %6109, align 1
  %6110 = and i32 %6103, 255
  %6111 = call i32 @llvm.ctpop.i32(i32 %6110)
  %6112 = trunc i32 %6111 to i8
  %6113 = and i8 %6112, 1
  %6114 = xor i8 %6113, 1
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6114, i8* %6115, align 1
  %6116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6116, align 1
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6117, align 1
  %6118 = lshr i32 %6103, 31
  %6119 = trunc i32 %6118 to i8
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6119, i8* %6120, align 1
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6108, i8* %6121, align 1
  store %struct.Memory* %loadMem_4aed0f, %struct.Memory** %MEMORY
  %loadMem_4aed16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6123 = getelementptr inbounds %struct.GPR, %struct.GPR* %6122, i32 0, i32 33
  %6124 = getelementptr inbounds %struct.Reg, %struct.Reg* %6123, i32 0, i32 0
  %PC.i2184 = bitcast %union.anon* %6124 to i64*
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6126 = getelementptr inbounds %struct.GPR, %struct.GPR* %6125, i32 0, i32 1
  %6127 = getelementptr inbounds %struct.Reg, %struct.Reg* %6126, i32 0, i32 0
  %RAX.i2185 = bitcast %union.anon* %6127 to i64*
  %6128 = load i64, i64* %RAX.i2185
  %6129 = load i64, i64* %PC.i2184
  %6130 = add i64 %6129, 3
  store i64 %6130, i64* %PC.i2184
  %6131 = trunc i64 %6128 to i32
  %6132 = add i32 32, %6131
  %6133 = zext i32 %6132 to i64
  store i64 %6133, i64* %RAX.i2185, align 8
  %6134 = icmp ult i32 %6132, %6131
  %6135 = icmp ult i32 %6132, 32
  %6136 = or i1 %6134, %6135
  %6137 = zext i1 %6136 to i8
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6137, i8* %6138, align 1
  %6139 = and i32 %6132, 255
  %6140 = call i32 @llvm.ctpop.i32(i32 %6139)
  %6141 = trunc i32 %6140 to i8
  %6142 = and i8 %6141, 1
  %6143 = xor i8 %6142, 1
  %6144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6143, i8* %6144, align 1
  %6145 = xor i64 32, %6128
  %6146 = trunc i64 %6145 to i32
  %6147 = xor i32 %6146, %6132
  %6148 = lshr i32 %6147, 4
  %6149 = trunc i32 %6148 to i8
  %6150 = and i8 %6149, 1
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6150, i8* %6151, align 1
  %6152 = icmp eq i32 %6132, 0
  %6153 = zext i1 %6152 to i8
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6153, i8* %6154, align 1
  %6155 = lshr i32 %6132, 31
  %6156 = trunc i32 %6155 to i8
  %6157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6156, i8* %6157, align 1
  %6158 = lshr i32 %6131, 31
  %6159 = xor i32 %6155, %6158
  %6160 = add i32 %6159, %6155
  %6161 = icmp eq i32 %6160, 2
  %6162 = zext i1 %6161 to i8
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6162, i8* %6163, align 1
  store %struct.Memory* %loadMem_4aed16, %struct.Memory** %MEMORY
  %loadMem_4aed19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6165 = getelementptr inbounds %struct.GPR, %struct.GPR* %6164, i32 0, i32 33
  %6166 = getelementptr inbounds %struct.Reg, %struct.Reg* %6165, i32 0, i32 0
  %PC.i2182 = bitcast %union.anon* %6166 to i64*
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6168 = getelementptr inbounds %struct.GPR, %struct.GPR* %6167, i32 0, i32 1
  %6169 = getelementptr inbounds %struct.Reg, %struct.Reg* %6168, i32 0, i32 0
  %RAX.i2183 = bitcast %union.anon* %6169 to i64*
  %6170 = load i64, i64* %RAX.i2183
  %6171 = load i64, i64* %PC.i2182
  %6172 = add i64 %6171, 3
  store i64 %6172, i64* %PC.i2182
  %6173 = shl i64 %6170, 32
  %6174 = ashr exact i64 %6173, 32
  %6175 = ashr i64 %6174, 5
  %6176 = lshr i64 %6175, 1
  %6177 = trunc i64 %6175 to i8
  %6178 = and i8 %6177, 1
  %6179 = trunc i64 %6176 to i32
  %6180 = and i64 %6176, 4294967295
  store i64 %6180, i64* %RAX.i2183, align 8
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6178, i8* %6181, align 1
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6183 = and i32 %6179, 255
  %6184 = call i32 @llvm.ctpop.i32(i32 %6183)
  %6185 = trunc i32 %6184 to i8
  %6186 = and i8 %6185, 1
  %6187 = xor i8 %6186, 1
  store i8 %6187, i8* %6182, align 1
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6188, align 1
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6190 = icmp eq i32 %6179, 0
  %6191 = zext i1 %6190 to i8
  store i8 %6191, i8* %6189, align 1
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6193 = lshr i32 %6179, 31
  %6194 = trunc i32 %6193 to i8
  store i8 %6194, i8* %6192, align 1
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6195, align 1
  store %struct.Memory* %loadMem_4aed19, %struct.Memory** %MEMORY
  %loadMem_4aed1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6197 = getelementptr inbounds %struct.GPR, %struct.GPR* %6196, i32 0, i32 33
  %6198 = getelementptr inbounds %struct.Reg, %struct.Reg* %6197, i32 0, i32 0
  %PC.i2179 = bitcast %union.anon* %6198 to i64*
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6200 = getelementptr inbounds %struct.GPR, %struct.GPR* %6199, i32 0, i32 1
  %6201 = getelementptr inbounds %struct.Reg, %struct.Reg* %6200, i32 0, i32 0
  %EAX.i2180 = bitcast %union.anon* %6201 to i32*
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6203 = getelementptr inbounds %struct.GPR, %struct.GPR* %6202, i32 0, i32 15
  %6204 = getelementptr inbounds %struct.Reg, %struct.Reg* %6203, i32 0, i32 0
  %RBP.i2181 = bitcast %union.anon* %6204 to i64*
  %6205 = load i64, i64* %RBP.i2181
  %6206 = sub i64 %6205, 35448
  %6207 = load i32, i32* %EAX.i2180
  %6208 = zext i32 %6207 to i64
  %6209 = load i64, i64* %PC.i2179
  %6210 = add i64 %6209, 6
  store i64 %6210, i64* %PC.i2179
  %6211 = inttoptr i64 %6206 to i32*
  store i32 %6207, i32* %6211
  store %struct.Memory* %loadMem_4aed1c, %struct.Memory** %MEMORY
  br label %block_.L_4aed22

block_.L_4aed22:                                  ; preds = %block_.L_4aed0c, %block_4aecfc
  %loadMem_4aed22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6213 = getelementptr inbounds %struct.GPR, %struct.GPR* %6212, i32 0, i32 33
  %6214 = getelementptr inbounds %struct.Reg, %struct.Reg* %6213, i32 0, i32 0
  %PC.i2176 = bitcast %union.anon* %6214 to i64*
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6216 = getelementptr inbounds %struct.GPR, %struct.GPR* %6215, i32 0, i32 1
  %6217 = getelementptr inbounds %struct.Reg, %struct.Reg* %6216, i32 0, i32 0
  %RAX.i2177 = bitcast %union.anon* %6217 to i64*
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6219 = getelementptr inbounds %struct.GPR, %struct.GPR* %6218, i32 0, i32 15
  %6220 = getelementptr inbounds %struct.Reg, %struct.Reg* %6219, i32 0, i32 0
  %RBP.i2178 = bitcast %union.anon* %6220 to i64*
  %6221 = load i64, i64* %RBP.i2178
  %6222 = sub i64 %6221, 35448
  %6223 = load i64, i64* %PC.i2176
  %6224 = add i64 %6223, 6
  store i64 %6224, i64* %PC.i2176
  %6225 = inttoptr i64 %6222 to i32*
  %6226 = load i32, i32* %6225
  %6227 = zext i32 %6226 to i64
  store i64 %6227, i64* %RAX.i2177, align 8
  store %struct.Memory* %loadMem_4aed22, %struct.Memory** %MEMORY
  %loadMem_4aed28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6229 = getelementptr inbounds %struct.GPR, %struct.GPR* %6228, i32 0, i32 33
  %6230 = getelementptr inbounds %struct.Reg, %struct.Reg* %6229, i32 0, i32 0
  %PC.i2173 = bitcast %union.anon* %6230 to i64*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 1
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %EAX.i2174 = bitcast %union.anon* %6233 to i32*
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6235 = getelementptr inbounds %struct.GPR, %struct.GPR* %6234, i32 0, i32 15
  %6236 = getelementptr inbounds %struct.Reg, %struct.Reg* %6235, i32 0, i32 0
  %RBP.i2175 = bitcast %union.anon* %6236 to i64*
  %6237 = load i64, i64* %RBP.i2175
  %6238 = sub i64 %6237, 35444
  %6239 = load i32, i32* %EAX.i2174
  %6240 = zext i32 %6239 to i64
  %6241 = load i64, i64* %PC.i2173
  %6242 = add i64 %6241, 6
  store i64 %6242, i64* %PC.i2173
  %6243 = inttoptr i64 %6238 to i32*
  store i32 %6239, i32* %6243
  store %struct.Memory* %loadMem_4aed28, %struct.Memory** %MEMORY
  br label %block_.L_4aed2e

block_.L_4aed2e:                                  ; preds = %block_.L_4aed22, %block_4aecd1
  %loadMem_4aed2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6245 = getelementptr inbounds %struct.GPR, %struct.GPR* %6244, i32 0, i32 33
  %6246 = getelementptr inbounds %struct.Reg, %struct.Reg* %6245, i32 0, i32 0
  %PC.i2170 = bitcast %union.anon* %6246 to i64*
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6248 = getelementptr inbounds %struct.GPR, %struct.GPR* %6247, i32 0, i32 1
  %6249 = getelementptr inbounds %struct.Reg, %struct.Reg* %6248, i32 0, i32 0
  %RAX.i2171 = bitcast %union.anon* %6249 to i64*
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6251 = getelementptr inbounds %struct.GPR, %struct.GPR* %6250, i32 0, i32 15
  %6252 = getelementptr inbounds %struct.Reg, %struct.Reg* %6251, i32 0, i32 0
  %RBP.i2172 = bitcast %union.anon* %6252 to i64*
  %6253 = load i64, i64* %RBP.i2172
  %6254 = sub i64 %6253, 35444
  %6255 = load i64, i64* %PC.i2170
  %6256 = add i64 %6255, 6
  store i64 %6256, i64* %PC.i2170
  %6257 = inttoptr i64 %6254 to i32*
  %6258 = load i32, i32* %6257
  %6259 = zext i32 %6258 to i64
  store i64 %6259, i64* %RAX.i2171, align 8
  store %struct.Memory* %loadMem_4aed2e, %struct.Memory** %MEMORY
  %loadMem_4aed34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6261 = getelementptr inbounds %struct.GPR, %struct.GPR* %6260, i32 0, i32 33
  %6262 = getelementptr inbounds %struct.Reg, %struct.Reg* %6261, i32 0, i32 0
  %PC.i2167 = bitcast %union.anon* %6262 to i64*
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6264 = getelementptr inbounds %struct.GPR, %struct.GPR* %6263, i32 0, i32 5
  %6265 = getelementptr inbounds %struct.Reg, %struct.Reg* %6264, i32 0, i32 0
  %RCX.i2168 = bitcast %union.anon* %6265 to i64*
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 15
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %RBP.i2169 = bitcast %union.anon* %6268 to i64*
  %6269 = load i64, i64* %RBP.i2169
  %6270 = sub i64 %6269, 19184
  %6271 = load i64, i64* %PC.i2167
  %6272 = add i64 %6271, 7
  store i64 %6272, i64* %PC.i2167
  store i64 %6270, i64* %RCX.i2168, align 8
  store %struct.Memory* %loadMem_4aed34, %struct.Memory** %MEMORY
  %loadMem_4aed3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6274 = getelementptr inbounds %struct.GPR, %struct.GPR* %6273, i32 0, i32 33
  %6275 = getelementptr inbounds %struct.Reg, %struct.Reg* %6274, i32 0, i32 0
  %PC.i2164 = bitcast %union.anon* %6275 to i64*
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6277 = getelementptr inbounds %struct.GPR, %struct.GPR* %6276, i32 0, i32 1
  %6278 = getelementptr inbounds %struct.Reg, %struct.Reg* %6277, i32 0, i32 0
  %EAX.i2165 = bitcast %union.anon* %6278 to i32*
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 15
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %RBP.i2166 = bitcast %union.anon* %6281 to i64*
  %6282 = load i64, i64* %RBP.i2166
  %6283 = sub i64 %6282, 24
  %6284 = load i32, i32* %EAX.i2165
  %6285 = zext i32 %6284 to i64
  %6286 = load i64, i64* %PC.i2164
  %6287 = add i64 %6286, 3
  store i64 %6287, i64* %PC.i2164
  %6288 = inttoptr i64 %6283 to i32*
  store i32 %6284, i32* %6288
  store %struct.Memory* %loadMem_4aed3b, %struct.Memory** %MEMORY
  %loadMem_4aed3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6290 = getelementptr inbounds %struct.GPR, %struct.GPR* %6289, i32 0, i32 33
  %6291 = getelementptr inbounds %struct.Reg, %struct.Reg* %6290, i32 0, i32 0
  %PC.i2161 = bitcast %union.anon* %6291 to i64*
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6293 = getelementptr inbounds %struct.GPR, %struct.GPR* %6292, i32 0, i32 1
  %6294 = getelementptr inbounds %struct.Reg, %struct.Reg* %6293, i32 0, i32 0
  %RAX.i2162 = bitcast %union.anon* %6294 to i64*
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 15
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %RBP.i2163 = bitcast %union.anon* %6297 to i64*
  %6298 = load i64, i64* %RBP.i2163
  %6299 = sub i64 %6298, 24
  %6300 = load i64, i64* %PC.i2161
  %6301 = add i64 %6300, 3
  store i64 %6301, i64* %PC.i2161
  %6302 = inttoptr i64 %6299 to i32*
  %6303 = load i32, i32* %6302
  %6304 = zext i32 %6303 to i64
  store i64 %6304, i64* %RAX.i2162, align 8
  store %struct.Memory* %loadMem_4aed3e, %struct.Memory** %MEMORY
  %loadMem_4aed41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6306 = getelementptr inbounds %struct.GPR, %struct.GPR* %6305, i32 0, i32 33
  %6307 = getelementptr inbounds %struct.Reg, %struct.Reg* %6306, i32 0, i32 0
  %PC.i2159 = bitcast %union.anon* %6307 to i64*
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6309 = getelementptr inbounds %struct.GPR, %struct.GPR* %6308, i32 0, i32 1
  %6310 = getelementptr inbounds %struct.Reg, %struct.Reg* %6309, i32 0, i32 0
  %RAX.i2160 = bitcast %union.anon* %6310 to i64*
  %6311 = load i64, i64* %RAX.i2160
  %6312 = load i64, i64* %PC.i2159
  %6313 = add i64 %6312, 3
  store i64 %6313, i64* %PC.i2159
  %6314 = shl i64 %6311, 32
  %6315 = ashr exact i64 %6314, 32
  %6316 = ashr i64 %6315, 1
  %6317 = lshr i64 %6316, 1
  %6318 = trunc i64 %6316 to i8
  %6319 = and i8 %6318, 1
  %6320 = trunc i64 %6317 to i32
  %6321 = and i64 %6317, 4294967295
  store i64 %6321, i64* %RAX.i2160, align 8
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6319, i8* %6322, align 1
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6324 = and i32 %6320, 255
  %6325 = call i32 @llvm.ctpop.i32(i32 %6324)
  %6326 = trunc i32 %6325 to i8
  %6327 = and i8 %6326, 1
  %6328 = xor i8 %6327, 1
  store i8 %6328, i8* %6323, align 1
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6329, align 1
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6331 = icmp eq i32 %6320, 0
  %6332 = zext i1 %6331 to i8
  store i8 %6332, i8* %6330, align 1
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6334 = lshr i32 %6320, 31
  %6335 = trunc i32 %6334 to i8
  store i8 %6335, i8* %6333, align 1
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6336, align 1
  store %struct.Memory* %loadMem_4aed41, %struct.Memory** %MEMORY
  %loadMem_4aed44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6338 = getelementptr inbounds %struct.GPR, %struct.GPR* %6337, i32 0, i32 33
  %6339 = getelementptr inbounds %struct.Reg, %struct.Reg* %6338, i32 0, i32 0
  %PC.i2156 = bitcast %union.anon* %6339 to i64*
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6341 = getelementptr inbounds %struct.GPR, %struct.GPR* %6340, i32 0, i32 5
  %6342 = getelementptr inbounds %struct.Reg, %struct.Reg* %6341, i32 0, i32 0
  %RCX.i2157 = bitcast %union.anon* %6342 to i64*
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 7
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %RDX.i2158 = bitcast %union.anon* %6345 to i64*
  %6346 = load i64, i64* %RCX.i2157
  %6347 = load i64, i64* %PC.i2156
  %6348 = add i64 %6347, 3
  store i64 %6348, i64* %PC.i2156
  store i64 %6346, i64* %RDX.i2158, align 8
  store %struct.Memory* %loadMem_4aed44, %struct.Memory** %MEMORY
  %loadMem_4aed47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6350 = getelementptr inbounds %struct.GPR, %struct.GPR* %6349, i32 0, i32 33
  %6351 = getelementptr inbounds %struct.Reg, %struct.Reg* %6350, i32 0, i32 0
  %PC.i2154 = bitcast %union.anon* %6351 to i64*
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6353 = getelementptr inbounds %struct.GPR, %struct.GPR* %6352, i32 0, i32 7
  %6354 = getelementptr inbounds %struct.Reg, %struct.Reg* %6353, i32 0, i32 0
  %RDX.i2155 = bitcast %union.anon* %6354 to i64*
  %6355 = load i64, i64* %RDX.i2155
  %6356 = load i64, i64* %PC.i2154
  %6357 = add i64 %6356, 7
  store i64 %6357, i64* %PC.i2154
  %6358 = add i64 2700, %6355
  store i64 %6358, i64* %RDX.i2155, align 8
  %6359 = icmp ult i64 %6358, %6355
  %6360 = icmp ult i64 %6358, 2700
  %6361 = or i1 %6359, %6360
  %6362 = zext i1 %6361 to i8
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6362, i8* %6363, align 1
  %6364 = trunc i64 %6358 to i32
  %6365 = and i32 %6364, 255
  %6366 = call i32 @llvm.ctpop.i32(i32 %6365)
  %6367 = trunc i32 %6366 to i8
  %6368 = and i8 %6367, 1
  %6369 = xor i8 %6368, 1
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6369, i8* %6370, align 1
  %6371 = xor i64 2700, %6355
  %6372 = xor i64 %6371, %6358
  %6373 = lshr i64 %6372, 4
  %6374 = trunc i64 %6373 to i8
  %6375 = and i8 %6374, 1
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6375, i8* %6376, align 1
  %6377 = icmp eq i64 %6358, 0
  %6378 = zext i1 %6377 to i8
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6378, i8* %6379, align 1
  %6380 = lshr i64 %6358, 63
  %6381 = trunc i64 %6380 to i8
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6381, i8* %6382, align 1
  %6383 = lshr i64 %6355, 63
  %6384 = xor i64 %6380, %6383
  %6385 = add i64 %6384, %6380
  %6386 = icmp eq i64 %6385, 2
  %6387 = zext i1 %6386 to i8
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6387, i8* %6388, align 1
  store %struct.Memory* %loadMem_4aed47, %struct.Memory** %MEMORY
  %loadMem_4aed4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 33
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %PC.i2151 = bitcast %union.anon* %6391 to i64*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 9
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %RSI.i2152 = bitcast %union.anon* %6394 to i64*
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 15
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %RBP.i2153 = bitcast %union.anon* %6397 to i64*
  %6398 = load i64, i64* %RBP.i2153
  %6399 = sub i64 %6398, 4
  %6400 = load i64, i64* %PC.i2151
  %6401 = add i64 %6400, 4
  store i64 %6401, i64* %PC.i2151
  %6402 = inttoptr i64 %6399 to i32*
  %6403 = load i32, i32* %6402
  %6404 = sext i32 %6403 to i64
  store i64 %6404, i64* %RSI.i2152, align 8
  store %struct.Memory* %loadMem_4aed4e, %struct.Memory** %MEMORY
  %loadMem_4aed52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6406 = getelementptr inbounds %struct.GPR, %struct.GPR* %6405, i32 0, i32 33
  %6407 = getelementptr inbounds %struct.Reg, %struct.Reg* %6406, i32 0, i32 0
  %PC.i2149 = bitcast %union.anon* %6407 to i64*
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6409 = getelementptr inbounds %struct.GPR, %struct.GPR* %6408, i32 0, i32 9
  %6410 = getelementptr inbounds %struct.Reg, %struct.Reg* %6409, i32 0, i32 0
  %RSI.i2150 = bitcast %union.anon* %6410 to i64*
  %6411 = load i64, i64* %RSI.i2150
  %6412 = load i64, i64* %PC.i2149
  %6413 = add i64 %6412, 7
  store i64 %6413, i64* %PC.i2149
  %6414 = sext i64 %6411 to i128
  %6415 = and i128 %6414, -18446744073709551616
  %6416 = zext i64 %6411 to i128
  %6417 = or i128 %6415, %6416
  %6418 = mul i128 180, %6417
  %6419 = trunc i128 %6418 to i64
  store i64 %6419, i64* %RSI.i2150, align 8
  %6420 = sext i64 %6419 to i128
  %6421 = icmp ne i128 %6420, %6418
  %6422 = zext i1 %6421 to i8
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6422, i8* %6423, align 1
  %6424 = trunc i128 %6418 to i32
  %6425 = and i32 %6424, 255
  %6426 = call i32 @llvm.ctpop.i32(i32 %6425)
  %6427 = trunc i32 %6426 to i8
  %6428 = and i8 %6427, 1
  %6429 = xor i8 %6428, 1
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6429, i8* %6430, align 1
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6431, align 1
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6432, align 1
  %6433 = lshr i64 %6419, 63
  %6434 = trunc i64 %6433 to i8
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6434, i8* %6435, align 1
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6422, i8* %6436, align 1
  store %struct.Memory* %loadMem_4aed52, %struct.Memory** %MEMORY
  %loadMem_4aed59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6438 = getelementptr inbounds %struct.GPR, %struct.GPR* %6437, i32 0, i32 33
  %6439 = getelementptr inbounds %struct.Reg, %struct.Reg* %6438, i32 0, i32 0
  %PC.i2146 = bitcast %union.anon* %6439 to i64*
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6441 = getelementptr inbounds %struct.GPR, %struct.GPR* %6440, i32 0, i32 7
  %6442 = getelementptr inbounds %struct.Reg, %struct.Reg* %6441, i32 0, i32 0
  %RDX.i2147 = bitcast %union.anon* %6442 to i64*
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 9
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %RSI.i2148 = bitcast %union.anon* %6445 to i64*
  %6446 = load i64, i64* %RDX.i2147
  %6447 = load i64, i64* %RSI.i2148
  %6448 = load i64, i64* %PC.i2146
  %6449 = add i64 %6448, 3
  store i64 %6449, i64* %PC.i2146
  %6450 = add i64 %6447, %6446
  store i64 %6450, i64* %RDX.i2147, align 8
  %6451 = icmp ult i64 %6450, %6446
  %6452 = icmp ult i64 %6450, %6447
  %6453 = or i1 %6451, %6452
  %6454 = zext i1 %6453 to i8
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6454, i8* %6455, align 1
  %6456 = trunc i64 %6450 to i32
  %6457 = and i32 %6456, 255
  %6458 = call i32 @llvm.ctpop.i32(i32 %6457)
  %6459 = trunc i32 %6458 to i8
  %6460 = and i8 %6459, 1
  %6461 = xor i8 %6460, 1
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6461, i8* %6462, align 1
  %6463 = xor i64 %6447, %6446
  %6464 = xor i64 %6463, %6450
  %6465 = lshr i64 %6464, 4
  %6466 = trunc i64 %6465 to i8
  %6467 = and i8 %6466, 1
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6467, i8* %6468, align 1
  %6469 = icmp eq i64 %6450, 0
  %6470 = zext i1 %6469 to i8
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6470, i8* %6471, align 1
  %6472 = lshr i64 %6450, 63
  %6473 = trunc i64 %6472 to i8
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6473, i8* %6474, align 1
  %6475 = lshr i64 %6446, 63
  %6476 = lshr i64 %6447, 63
  %6477 = xor i64 %6472, %6475
  %6478 = xor i64 %6472, %6476
  %6479 = add i64 %6477, %6478
  %6480 = icmp eq i64 %6479, 2
  %6481 = zext i1 %6480 to i8
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6481, i8* %6482, align 1
  store %struct.Memory* %loadMem_4aed59, %struct.Memory** %MEMORY
  %loadMem_4aed5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6484 = getelementptr inbounds %struct.GPR, %struct.GPR* %6483, i32 0, i32 33
  %6485 = getelementptr inbounds %struct.Reg, %struct.Reg* %6484, i32 0, i32 0
  %PC.i2143 = bitcast %union.anon* %6485 to i64*
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 9
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %RSI.i2144 = bitcast %union.anon* %6488 to i64*
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 15
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %RBP.i2145 = bitcast %union.anon* %6491 to i64*
  %6492 = load i64, i64* %RBP.i2145
  %6493 = sub i64 %6492, 8
  %6494 = load i64, i64* %PC.i2143
  %6495 = add i64 %6494, 4
  store i64 %6495, i64* %PC.i2143
  %6496 = inttoptr i64 %6493 to i32*
  %6497 = load i32, i32* %6496
  %6498 = sext i32 %6497 to i64
  store i64 %6498, i64* %RSI.i2144, align 8
  store %struct.Memory* %loadMem_4aed5c, %struct.Memory** %MEMORY
  %loadMem_4aed60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6500 = getelementptr inbounds %struct.GPR, %struct.GPR* %6499, i32 0, i32 33
  %6501 = getelementptr inbounds %struct.Reg, %struct.Reg* %6500, i32 0, i32 0
  %PC.i2141 = bitcast %union.anon* %6501 to i64*
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 9
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %RSI.i2142 = bitcast %union.anon* %6504 to i64*
  %6505 = load i64, i64* %RSI.i2142
  %6506 = load i64, i64* %PC.i2141
  %6507 = add i64 %6506, 4
  store i64 %6507, i64* %PC.i2141
  %6508 = sext i64 %6505 to i128
  %6509 = and i128 %6508, -18446744073709551616
  %6510 = zext i64 %6505 to i128
  %6511 = or i128 %6509, %6510
  %6512 = mul i128 12, %6511
  %6513 = trunc i128 %6512 to i64
  store i64 %6513, i64* %RSI.i2142, align 8
  %6514 = sext i64 %6513 to i128
  %6515 = icmp ne i128 %6514, %6512
  %6516 = zext i1 %6515 to i8
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6516, i8* %6517, align 1
  %6518 = trunc i128 %6512 to i32
  %6519 = and i32 %6518, 255
  %6520 = call i32 @llvm.ctpop.i32(i32 %6519)
  %6521 = trunc i32 %6520 to i8
  %6522 = and i8 %6521, 1
  %6523 = xor i8 %6522, 1
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6523, i8* %6524, align 1
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6525, align 1
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6526, align 1
  %6527 = lshr i64 %6513, 63
  %6528 = trunc i64 %6527 to i8
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6528, i8* %6529, align 1
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6516, i8* %6530, align 1
  store %struct.Memory* %loadMem_4aed60, %struct.Memory** %MEMORY
  %loadMem_4aed64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 33
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %PC.i2138 = bitcast %union.anon* %6533 to i64*
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6535 = getelementptr inbounds %struct.GPR, %struct.GPR* %6534, i32 0, i32 7
  %6536 = getelementptr inbounds %struct.Reg, %struct.Reg* %6535, i32 0, i32 0
  %RDX.i2139 = bitcast %union.anon* %6536 to i64*
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6538 = getelementptr inbounds %struct.GPR, %struct.GPR* %6537, i32 0, i32 9
  %6539 = getelementptr inbounds %struct.Reg, %struct.Reg* %6538, i32 0, i32 0
  %RSI.i2140 = bitcast %union.anon* %6539 to i64*
  %6540 = load i64, i64* %RDX.i2139
  %6541 = load i64, i64* %RSI.i2140
  %6542 = load i64, i64* %PC.i2138
  %6543 = add i64 %6542, 3
  store i64 %6543, i64* %PC.i2138
  %6544 = add i64 %6541, %6540
  store i64 %6544, i64* %RDX.i2139, align 8
  %6545 = icmp ult i64 %6544, %6540
  %6546 = icmp ult i64 %6544, %6541
  %6547 = or i1 %6545, %6546
  %6548 = zext i1 %6547 to i8
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6548, i8* %6549, align 1
  %6550 = trunc i64 %6544 to i32
  %6551 = and i32 %6550, 255
  %6552 = call i32 @llvm.ctpop.i32(i32 %6551)
  %6553 = trunc i32 %6552 to i8
  %6554 = and i8 %6553, 1
  %6555 = xor i8 %6554, 1
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6555, i8* %6556, align 1
  %6557 = xor i64 %6541, %6540
  %6558 = xor i64 %6557, %6544
  %6559 = lshr i64 %6558, 4
  %6560 = trunc i64 %6559 to i8
  %6561 = and i8 %6560, 1
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6561, i8* %6562, align 1
  %6563 = icmp eq i64 %6544, 0
  %6564 = zext i1 %6563 to i8
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6564, i8* %6565, align 1
  %6566 = lshr i64 %6544, 63
  %6567 = trunc i64 %6566 to i8
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6567, i8* %6568, align 1
  %6569 = lshr i64 %6540, 63
  %6570 = lshr i64 %6541, 63
  %6571 = xor i64 %6566, %6569
  %6572 = xor i64 %6566, %6570
  %6573 = add i64 %6571, %6572
  %6574 = icmp eq i64 %6573, 2
  %6575 = zext i1 %6574 to i8
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6575, i8* %6576, align 1
  store %struct.Memory* %loadMem_4aed64, %struct.Memory** %MEMORY
  %loadMem_4aed67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6578 = getelementptr inbounds %struct.GPR, %struct.GPR* %6577, i32 0, i32 33
  %6579 = getelementptr inbounds %struct.Reg, %struct.Reg* %6578, i32 0, i32 0
  %PC.i2135 = bitcast %union.anon* %6579 to i64*
  %6580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6581 = getelementptr inbounds %struct.GPR, %struct.GPR* %6580, i32 0, i32 9
  %6582 = getelementptr inbounds %struct.Reg, %struct.Reg* %6581, i32 0, i32 0
  %RSI.i2136 = bitcast %union.anon* %6582 to i64*
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6584 = getelementptr inbounds %struct.GPR, %struct.GPR* %6583, i32 0, i32 15
  %6585 = getelementptr inbounds %struct.Reg, %struct.Reg* %6584, i32 0, i32 0
  %RBP.i2137 = bitcast %union.anon* %6585 to i64*
  %6586 = load i64, i64* %RBP.i2137
  %6587 = sub i64 %6586, 40
  %6588 = load i64, i64* %PC.i2135
  %6589 = add i64 %6588, 4
  store i64 %6589, i64* %PC.i2135
  %6590 = inttoptr i64 %6587 to i32*
  %6591 = load i32, i32* %6590
  %6592 = sext i32 %6591 to i64
  store i64 %6592, i64* %RSI.i2136, align 8
  store %struct.Memory* %loadMem_4aed67, %struct.Memory** %MEMORY
  %loadMem_4aed6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6594 = getelementptr inbounds %struct.GPR, %struct.GPR* %6593, i32 0, i32 33
  %6595 = getelementptr inbounds %struct.Reg, %struct.Reg* %6594, i32 0, i32 0
  %PC.i2131 = bitcast %union.anon* %6595 to i64*
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6597 = getelementptr inbounds %struct.GPR, %struct.GPR* %6596, i32 0, i32 1
  %6598 = getelementptr inbounds %struct.Reg, %struct.Reg* %6597, i32 0, i32 0
  %EAX.i2132 = bitcast %union.anon* %6598 to i32*
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6600 = getelementptr inbounds %struct.GPR, %struct.GPR* %6599, i32 0, i32 7
  %6601 = getelementptr inbounds %struct.Reg, %struct.Reg* %6600, i32 0, i32 0
  %RDX.i2133 = bitcast %union.anon* %6601 to i64*
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6603 = getelementptr inbounds %struct.GPR, %struct.GPR* %6602, i32 0, i32 9
  %6604 = getelementptr inbounds %struct.Reg, %struct.Reg* %6603, i32 0, i32 0
  %RSI.i2134 = bitcast %union.anon* %6604 to i64*
  %6605 = load i64, i64* %RDX.i2133
  %6606 = load i64, i64* %RSI.i2134
  %6607 = mul i64 %6606, 4
  %6608 = add i64 %6607, %6605
  %6609 = load i32, i32* %EAX.i2132
  %6610 = zext i32 %6609 to i64
  %6611 = load i64, i64* %PC.i2131
  %6612 = add i64 %6611, 3
  store i64 %6612, i64* %PC.i2131
  %6613 = inttoptr i64 %6608 to i32*
  store i32 %6609, i32* %6613
  store %struct.Memory* %loadMem_4aed6b, %struct.Memory** %MEMORY
  %loadMem_4aed6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6615 = getelementptr inbounds %struct.GPR, %struct.GPR* %6614, i32 0, i32 33
  %6616 = getelementptr inbounds %struct.Reg, %struct.Reg* %6615, i32 0, i32 0
  %PC.i2129 = bitcast %union.anon* %6616 to i64*
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 5
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %RCX.i2130 = bitcast %union.anon* %6619 to i64*
  %6620 = load i64, i64* %RCX.i2130
  %6621 = load i64, i64* %PC.i2129
  %6622 = add i64 %6621, 7
  store i64 %6622, i64* %PC.i2129
  %6623 = add i64 2700, %6620
  store i64 %6623, i64* %RCX.i2130, align 8
  %6624 = icmp ult i64 %6623, %6620
  %6625 = icmp ult i64 %6623, 2700
  %6626 = or i1 %6624, %6625
  %6627 = zext i1 %6626 to i8
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6627, i8* %6628, align 1
  %6629 = trunc i64 %6623 to i32
  %6630 = and i32 %6629, 255
  %6631 = call i32 @llvm.ctpop.i32(i32 %6630)
  %6632 = trunc i32 %6631 to i8
  %6633 = and i8 %6632, 1
  %6634 = xor i8 %6633, 1
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6634, i8* %6635, align 1
  %6636 = xor i64 2700, %6620
  %6637 = xor i64 %6636, %6623
  %6638 = lshr i64 %6637, 4
  %6639 = trunc i64 %6638 to i8
  %6640 = and i8 %6639, 1
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6640, i8* %6641, align 1
  %6642 = icmp eq i64 %6623, 0
  %6643 = zext i1 %6642 to i8
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6643, i8* %6644, align 1
  %6645 = lshr i64 %6623, 63
  %6646 = trunc i64 %6645 to i8
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6646, i8* %6647, align 1
  %6648 = lshr i64 %6620, 63
  %6649 = xor i64 %6645, %6648
  %6650 = add i64 %6649, %6645
  %6651 = icmp eq i64 %6650, 2
  %6652 = zext i1 %6651 to i8
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6652, i8* %6653, align 1
  store %struct.Memory* %loadMem_4aed6e, %struct.Memory** %MEMORY
  %loadMem_4aed75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6655 = getelementptr inbounds %struct.GPR, %struct.GPR* %6654, i32 0, i32 33
  %6656 = getelementptr inbounds %struct.Reg, %struct.Reg* %6655, i32 0, i32 0
  %PC.i2126 = bitcast %union.anon* %6656 to i64*
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6658 = getelementptr inbounds %struct.GPR, %struct.GPR* %6657, i32 0, i32 7
  %6659 = getelementptr inbounds %struct.Reg, %struct.Reg* %6658, i32 0, i32 0
  %RDX.i2127 = bitcast %union.anon* %6659 to i64*
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6661 = getelementptr inbounds %struct.GPR, %struct.GPR* %6660, i32 0, i32 15
  %6662 = getelementptr inbounds %struct.Reg, %struct.Reg* %6661, i32 0, i32 0
  %RBP.i2128 = bitcast %union.anon* %6662 to i64*
  %6663 = load i64, i64* %RBP.i2128
  %6664 = sub i64 %6663, 4
  %6665 = load i64, i64* %PC.i2126
  %6666 = add i64 %6665, 4
  store i64 %6666, i64* %PC.i2126
  %6667 = inttoptr i64 %6664 to i32*
  %6668 = load i32, i32* %6667
  %6669 = sext i32 %6668 to i64
  store i64 %6669, i64* %RDX.i2127, align 8
  store %struct.Memory* %loadMem_4aed75, %struct.Memory** %MEMORY
  %loadMem_4aed79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6671 = getelementptr inbounds %struct.GPR, %struct.GPR* %6670, i32 0, i32 33
  %6672 = getelementptr inbounds %struct.Reg, %struct.Reg* %6671, i32 0, i32 0
  %PC.i2124 = bitcast %union.anon* %6672 to i64*
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6674 = getelementptr inbounds %struct.GPR, %struct.GPR* %6673, i32 0, i32 7
  %6675 = getelementptr inbounds %struct.Reg, %struct.Reg* %6674, i32 0, i32 0
  %RDX.i2125 = bitcast %union.anon* %6675 to i64*
  %6676 = load i64, i64* %RDX.i2125
  %6677 = load i64, i64* %PC.i2124
  %6678 = add i64 %6677, 7
  store i64 %6678, i64* %PC.i2124
  %6679 = sext i64 %6676 to i128
  %6680 = and i128 %6679, -18446744073709551616
  %6681 = zext i64 %6676 to i128
  %6682 = or i128 %6680, %6681
  %6683 = mul i128 180, %6682
  %6684 = trunc i128 %6683 to i64
  store i64 %6684, i64* %RDX.i2125, align 8
  %6685 = sext i64 %6684 to i128
  %6686 = icmp ne i128 %6685, %6683
  %6687 = zext i1 %6686 to i8
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6687, i8* %6688, align 1
  %6689 = trunc i128 %6683 to i32
  %6690 = and i32 %6689, 255
  %6691 = call i32 @llvm.ctpop.i32(i32 %6690)
  %6692 = trunc i32 %6691 to i8
  %6693 = and i8 %6692, 1
  %6694 = xor i8 %6693, 1
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6694, i8* %6695, align 1
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6696, align 1
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6697, align 1
  %6698 = lshr i64 %6684, 63
  %6699 = trunc i64 %6698 to i8
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6699, i8* %6700, align 1
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6687, i8* %6701, align 1
  store %struct.Memory* %loadMem_4aed79, %struct.Memory** %MEMORY
  %loadMem_4aed80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 33
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %PC.i2121 = bitcast %union.anon* %6704 to i64*
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6706 = getelementptr inbounds %struct.GPR, %struct.GPR* %6705, i32 0, i32 5
  %6707 = getelementptr inbounds %struct.Reg, %struct.Reg* %6706, i32 0, i32 0
  %RCX.i2122 = bitcast %union.anon* %6707 to i64*
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 7
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %RDX.i2123 = bitcast %union.anon* %6710 to i64*
  %6711 = load i64, i64* %RCX.i2122
  %6712 = load i64, i64* %RDX.i2123
  %6713 = load i64, i64* %PC.i2121
  %6714 = add i64 %6713, 3
  store i64 %6714, i64* %PC.i2121
  %6715 = add i64 %6712, %6711
  store i64 %6715, i64* %RCX.i2122, align 8
  %6716 = icmp ult i64 %6715, %6711
  %6717 = icmp ult i64 %6715, %6712
  %6718 = or i1 %6716, %6717
  %6719 = zext i1 %6718 to i8
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6719, i8* %6720, align 1
  %6721 = trunc i64 %6715 to i32
  %6722 = and i32 %6721, 255
  %6723 = call i32 @llvm.ctpop.i32(i32 %6722)
  %6724 = trunc i32 %6723 to i8
  %6725 = and i8 %6724, 1
  %6726 = xor i8 %6725, 1
  %6727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6726, i8* %6727, align 1
  %6728 = xor i64 %6712, %6711
  %6729 = xor i64 %6728, %6715
  %6730 = lshr i64 %6729, 4
  %6731 = trunc i64 %6730 to i8
  %6732 = and i8 %6731, 1
  %6733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6732, i8* %6733, align 1
  %6734 = icmp eq i64 %6715, 0
  %6735 = zext i1 %6734 to i8
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6735, i8* %6736, align 1
  %6737 = lshr i64 %6715, 63
  %6738 = trunc i64 %6737 to i8
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6738, i8* %6739, align 1
  %6740 = lshr i64 %6711, 63
  %6741 = lshr i64 %6712, 63
  %6742 = xor i64 %6737, %6740
  %6743 = xor i64 %6737, %6741
  %6744 = add i64 %6742, %6743
  %6745 = icmp eq i64 %6744, 2
  %6746 = zext i1 %6745 to i8
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6746, i8* %6747, align 1
  store %struct.Memory* %loadMem_4aed80, %struct.Memory** %MEMORY
  %loadMem_4aed83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6749 = getelementptr inbounds %struct.GPR, %struct.GPR* %6748, i32 0, i32 33
  %6750 = getelementptr inbounds %struct.Reg, %struct.Reg* %6749, i32 0, i32 0
  %PC.i2118 = bitcast %union.anon* %6750 to i64*
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6752 = getelementptr inbounds %struct.GPR, %struct.GPR* %6751, i32 0, i32 7
  %6753 = getelementptr inbounds %struct.Reg, %struct.Reg* %6752, i32 0, i32 0
  %RDX.i2119 = bitcast %union.anon* %6753 to i64*
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 15
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %RBP.i2120 = bitcast %union.anon* %6756 to i64*
  %6757 = load i64, i64* %RBP.i2120
  %6758 = sub i64 %6757, 8
  %6759 = load i64, i64* %PC.i2118
  %6760 = add i64 %6759, 4
  store i64 %6760, i64* %PC.i2118
  %6761 = inttoptr i64 %6758 to i32*
  %6762 = load i32, i32* %6761
  %6763 = sext i32 %6762 to i64
  store i64 %6763, i64* %RDX.i2119, align 8
  store %struct.Memory* %loadMem_4aed83, %struct.Memory** %MEMORY
  %loadMem_4aed87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6765 = getelementptr inbounds %struct.GPR, %struct.GPR* %6764, i32 0, i32 33
  %6766 = getelementptr inbounds %struct.Reg, %struct.Reg* %6765, i32 0, i32 0
  %PC.i2116 = bitcast %union.anon* %6766 to i64*
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6768 = getelementptr inbounds %struct.GPR, %struct.GPR* %6767, i32 0, i32 7
  %6769 = getelementptr inbounds %struct.Reg, %struct.Reg* %6768, i32 0, i32 0
  %RDX.i2117 = bitcast %union.anon* %6769 to i64*
  %6770 = load i64, i64* %RDX.i2117
  %6771 = load i64, i64* %PC.i2116
  %6772 = add i64 %6771, 4
  store i64 %6772, i64* %PC.i2116
  %6773 = sext i64 %6770 to i128
  %6774 = and i128 %6773, -18446744073709551616
  %6775 = zext i64 %6770 to i128
  %6776 = or i128 %6774, %6775
  %6777 = mul i128 12, %6776
  %6778 = trunc i128 %6777 to i64
  store i64 %6778, i64* %RDX.i2117, align 8
  %6779 = sext i64 %6778 to i128
  %6780 = icmp ne i128 %6779, %6777
  %6781 = zext i1 %6780 to i8
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6781, i8* %6782, align 1
  %6783 = trunc i128 %6777 to i32
  %6784 = and i32 %6783, 255
  %6785 = call i32 @llvm.ctpop.i32(i32 %6784)
  %6786 = trunc i32 %6785 to i8
  %6787 = and i8 %6786, 1
  %6788 = xor i8 %6787, 1
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6788, i8* %6789, align 1
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6790, align 1
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6791, align 1
  %6792 = lshr i64 %6778, 63
  %6793 = trunc i64 %6792 to i8
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6793, i8* %6794, align 1
  %6795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6781, i8* %6795, align 1
  store %struct.Memory* %loadMem_4aed87, %struct.Memory** %MEMORY
  %loadMem_4aed8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6797 = getelementptr inbounds %struct.GPR, %struct.GPR* %6796, i32 0, i32 33
  %6798 = getelementptr inbounds %struct.Reg, %struct.Reg* %6797, i32 0, i32 0
  %PC.i2113 = bitcast %union.anon* %6798 to i64*
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6800 = getelementptr inbounds %struct.GPR, %struct.GPR* %6799, i32 0, i32 5
  %6801 = getelementptr inbounds %struct.Reg, %struct.Reg* %6800, i32 0, i32 0
  %RCX.i2114 = bitcast %union.anon* %6801 to i64*
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6803 = getelementptr inbounds %struct.GPR, %struct.GPR* %6802, i32 0, i32 7
  %6804 = getelementptr inbounds %struct.Reg, %struct.Reg* %6803, i32 0, i32 0
  %RDX.i2115 = bitcast %union.anon* %6804 to i64*
  %6805 = load i64, i64* %RCX.i2114
  %6806 = load i64, i64* %RDX.i2115
  %6807 = load i64, i64* %PC.i2113
  %6808 = add i64 %6807, 3
  store i64 %6808, i64* %PC.i2113
  %6809 = add i64 %6806, %6805
  store i64 %6809, i64* %RCX.i2114, align 8
  %6810 = icmp ult i64 %6809, %6805
  %6811 = icmp ult i64 %6809, %6806
  %6812 = or i1 %6810, %6811
  %6813 = zext i1 %6812 to i8
  %6814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6813, i8* %6814, align 1
  %6815 = trunc i64 %6809 to i32
  %6816 = and i32 %6815, 255
  %6817 = call i32 @llvm.ctpop.i32(i32 %6816)
  %6818 = trunc i32 %6817 to i8
  %6819 = and i8 %6818, 1
  %6820 = xor i8 %6819, 1
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6820, i8* %6821, align 1
  %6822 = xor i64 %6806, %6805
  %6823 = xor i64 %6822, %6809
  %6824 = lshr i64 %6823, 4
  %6825 = trunc i64 %6824 to i8
  %6826 = and i8 %6825, 1
  %6827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6826, i8* %6827, align 1
  %6828 = icmp eq i64 %6809, 0
  %6829 = zext i1 %6828 to i8
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6829, i8* %6830, align 1
  %6831 = lshr i64 %6809, 63
  %6832 = trunc i64 %6831 to i8
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6832, i8* %6833, align 1
  %6834 = lshr i64 %6805, 63
  %6835 = lshr i64 %6806, 63
  %6836 = xor i64 %6831, %6834
  %6837 = xor i64 %6831, %6835
  %6838 = add i64 %6836, %6837
  %6839 = icmp eq i64 %6838, 2
  %6840 = zext i1 %6839 to i8
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6840, i8* %6841, align 1
  store %struct.Memory* %loadMem_4aed8b, %struct.Memory** %MEMORY
  %loadMem_4aed8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 33
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %PC.i2110 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 7
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RDX.i2111 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 15
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RBP.i2112 = bitcast %union.anon* %6850 to i64*
  %6851 = load i64, i64* %RBP.i2112
  %6852 = sub i64 %6851, 40
  %6853 = load i64, i64* %PC.i2110
  %6854 = add i64 %6853, 4
  store i64 %6854, i64* %PC.i2110
  %6855 = inttoptr i64 %6852 to i32*
  %6856 = load i32, i32* %6855
  %6857 = sext i32 %6856 to i64
  store i64 %6857, i64* %RDX.i2111, align 8
  store %struct.Memory* %loadMem_4aed8e, %struct.Memory** %MEMORY
  %loadMem_4aed92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6859 = getelementptr inbounds %struct.GPR, %struct.GPR* %6858, i32 0, i32 33
  %6860 = getelementptr inbounds %struct.Reg, %struct.Reg* %6859, i32 0, i32 0
  %PC.i2107 = bitcast %union.anon* %6860 to i64*
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6862 = getelementptr inbounds %struct.GPR, %struct.GPR* %6861, i32 0, i32 5
  %6863 = getelementptr inbounds %struct.Reg, %struct.Reg* %6862, i32 0, i32 0
  %RCX.i2108 = bitcast %union.anon* %6863 to i64*
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 7
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %RDX.i2109 = bitcast %union.anon* %6866 to i64*
  %6867 = load i64, i64* %RCX.i2108
  %6868 = load i64, i64* %RDX.i2109
  %6869 = mul i64 %6868, 4
  %6870 = add i64 %6869, %6867
  %6871 = load i64, i64* %PC.i2107
  %6872 = add i64 %6871, 4
  store i64 %6872, i64* %PC.i2107
  %6873 = inttoptr i64 %6870 to i32*
  %6874 = load i32, i32* %6873
  %6875 = sub i32 %6874, -64
  %6876 = icmp ult i32 %6874, -64
  %6877 = zext i1 %6876 to i8
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6877, i8* %6878, align 1
  %6879 = and i32 %6875, 255
  %6880 = call i32 @llvm.ctpop.i32(i32 %6879)
  %6881 = trunc i32 %6880 to i8
  %6882 = and i8 %6881, 1
  %6883 = xor i8 %6882, 1
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6883, i8* %6884, align 1
  %6885 = xor i32 %6874, -64
  %6886 = xor i32 %6885, %6875
  %6887 = lshr i32 %6886, 4
  %6888 = trunc i32 %6887 to i8
  %6889 = and i8 %6888, 1
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6889, i8* %6890, align 1
  %6891 = icmp eq i32 %6875, 0
  %6892 = zext i1 %6891 to i8
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6892, i8* %6893, align 1
  %6894 = lshr i32 %6875, 31
  %6895 = trunc i32 %6894 to i8
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6895, i8* %6896, align 1
  %6897 = lshr i32 %6874, 31
  %6898 = xor i32 %6897, 1
  %6899 = xor i32 %6894, %6897
  %6900 = add i32 %6899, %6898
  %6901 = icmp eq i32 %6900, 2
  %6902 = zext i1 %6901 to i8
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6902, i8* %6903, align 1
  store %struct.Memory* %loadMem_4aed92, %struct.Memory** %MEMORY
  %loadMem_4aed96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6905 = getelementptr inbounds %struct.GPR, %struct.GPR* %6904, i32 0, i32 33
  %6906 = getelementptr inbounds %struct.Reg, %struct.Reg* %6905, i32 0, i32 0
  %PC.i2106 = bitcast %union.anon* %6906 to i64*
  %6907 = load i64, i64* %PC.i2106
  %6908 = add i64 %6907, 61
  %6909 = load i64, i64* %PC.i2106
  %6910 = add i64 %6909, 6
  %6911 = load i64, i64* %PC.i2106
  %6912 = add i64 %6911, 6
  store i64 %6912, i64* %PC.i2106
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6914 = load i8, i8* %6913, align 1
  %6915 = icmp ne i8 %6914, 0
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6917 = load i8, i8* %6916, align 1
  %6918 = icmp ne i8 %6917, 0
  %6919 = xor i1 %6915, %6918
  %6920 = zext i1 %6919 to i8
  store i8 %6920, i8* %BRANCH_TAKEN, align 1
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6922 = select i1 %6919, i64 %6908, i64 %6910
  store i64 %6922, i64* %6921, align 8
  store %struct.Memory* %loadMem_4aed96, %struct.Memory** %MEMORY
  %loadBr_4aed96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aed96 = icmp eq i8 %loadBr_4aed96, 1
  br i1 %cmpBr_4aed96, label %block_.L_4aedd3, label %block_4aed9c

block_4aed9c:                                     ; preds = %block_.L_4aed2e
  %loadMem_4aed9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6924 = getelementptr inbounds %struct.GPR, %struct.GPR* %6923, i32 0, i32 33
  %6925 = getelementptr inbounds %struct.Reg, %struct.Reg* %6924, i32 0, i32 0
  %PC.i2103 = bitcast %union.anon* %6925 to i64*
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6927 = getelementptr inbounds %struct.GPR, %struct.GPR* %6926, i32 0, i32 1
  %6928 = getelementptr inbounds %struct.Reg, %struct.Reg* %6927, i32 0, i32 0
  %RAX.i2104 = bitcast %union.anon* %6928 to i64*
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6930 = getelementptr inbounds %struct.GPR, %struct.GPR* %6929, i32 0, i32 15
  %6931 = getelementptr inbounds %struct.Reg, %struct.Reg* %6930, i32 0, i32 0
  %RBP.i2105 = bitcast %union.anon* %6931 to i64*
  %6932 = load i64, i64* %RBP.i2105
  %6933 = sub i64 %6932, 19184
  %6934 = load i64, i64* %PC.i2103
  %6935 = add i64 %6934, 7
  store i64 %6935, i64* %PC.i2103
  store i64 %6933, i64* %RAX.i2104, align 8
  store %struct.Memory* %loadMem_4aed9c, %struct.Memory** %MEMORY
  %loadMem_4aeda3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i2101 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6940 = getelementptr inbounds %struct.GPR, %struct.GPR* %6939, i32 0, i32 1
  %6941 = getelementptr inbounds %struct.Reg, %struct.Reg* %6940, i32 0, i32 0
  %RAX.i2102 = bitcast %union.anon* %6941 to i64*
  %6942 = load i64, i64* %RAX.i2102
  %6943 = load i64, i64* %PC.i2101
  %6944 = add i64 %6943, 6
  store i64 %6944, i64* %PC.i2101
  %6945 = add i64 2700, %6942
  store i64 %6945, i64* %RAX.i2102, align 8
  %6946 = icmp ult i64 %6945, %6942
  %6947 = icmp ult i64 %6945, 2700
  %6948 = or i1 %6946, %6947
  %6949 = zext i1 %6948 to i8
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6949, i8* %6950, align 1
  %6951 = trunc i64 %6945 to i32
  %6952 = and i32 %6951, 255
  %6953 = call i32 @llvm.ctpop.i32(i32 %6952)
  %6954 = trunc i32 %6953 to i8
  %6955 = and i8 %6954, 1
  %6956 = xor i8 %6955, 1
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6956, i8* %6957, align 1
  %6958 = xor i64 2700, %6942
  %6959 = xor i64 %6958, %6945
  %6960 = lshr i64 %6959, 4
  %6961 = trunc i64 %6960 to i8
  %6962 = and i8 %6961, 1
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6962, i8* %6963, align 1
  %6964 = icmp eq i64 %6945, 0
  %6965 = zext i1 %6964 to i8
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6965, i8* %6966, align 1
  %6967 = lshr i64 %6945, 63
  %6968 = trunc i64 %6967 to i8
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6968, i8* %6969, align 1
  %6970 = lshr i64 %6942, 63
  %6971 = xor i64 %6967, %6970
  %6972 = add i64 %6971, %6967
  %6973 = icmp eq i64 %6972, 2
  %6974 = zext i1 %6973 to i8
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6974, i8* %6975, align 1
  store %struct.Memory* %loadMem_4aeda3, %struct.Memory** %MEMORY
  %loadMem_4aeda9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6977 = getelementptr inbounds %struct.GPR, %struct.GPR* %6976, i32 0, i32 33
  %6978 = getelementptr inbounds %struct.Reg, %struct.Reg* %6977, i32 0, i32 0
  %PC.i2098 = bitcast %union.anon* %6978 to i64*
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6980 = getelementptr inbounds %struct.GPR, %struct.GPR* %6979, i32 0, i32 5
  %6981 = getelementptr inbounds %struct.Reg, %struct.Reg* %6980, i32 0, i32 0
  %RCX.i2099 = bitcast %union.anon* %6981 to i64*
  %6982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6983 = getelementptr inbounds %struct.GPR, %struct.GPR* %6982, i32 0, i32 15
  %6984 = getelementptr inbounds %struct.Reg, %struct.Reg* %6983, i32 0, i32 0
  %RBP.i2100 = bitcast %union.anon* %6984 to i64*
  %6985 = load i64, i64* %RBP.i2100
  %6986 = sub i64 %6985, 4
  %6987 = load i64, i64* %PC.i2098
  %6988 = add i64 %6987, 4
  store i64 %6988, i64* %PC.i2098
  %6989 = inttoptr i64 %6986 to i32*
  %6990 = load i32, i32* %6989
  %6991 = sext i32 %6990 to i64
  store i64 %6991, i64* %RCX.i2099, align 8
  store %struct.Memory* %loadMem_4aeda9, %struct.Memory** %MEMORY
  %loadMem_4aedad = load %struct.Memory*, %struct.Memory** %MEMORY
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6993 = getelementptr inbounds %struct.GPR, %struct.GPR* %6992, i32 0, i32 33
  %6994 = getelementptr inbounds %struct.Reg, %struct.Reg* %6993, i32 0, i32 0
  %PC.i2096 = bitcast %union.anon* %6994 to i64*
  %6995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6996 = getelementptr inbounds %struct.GPR, %struct.GPR* %6995, i32 0, i32 5
  %6997 = getelementptr inbounds %struct.Reg, %struct.Reg* %6996, i32 0, i32 0
  %RCX.i2097 = bitcast %union.anon* %6997 to i64*
  %6998 = load i64, i64* %RCX.i2097
  %6999 = load i64, i64* %PC.i2096
  %7000 = add i64 %6999, 7
  store i64 %7000, i64* %PC.i2096
  %7001 = sext i64 %6998 to i128
  %7002 = and i128 %7001, -18446744073709551616
  %7003 = zext i64 %6998 to i128
  %7004 = or i128 %7002, %7003
  %7005 = mul i128 180, %7004
  %7006 = trunc i128 %7005 to i64
  store i64 %7006, i64* %RCX.i2097, align 8
  %7007 = sext i64 %7006 to i128
  %7008 = icmp ne i128 %7007, %7005
  %7009 = zext i1 %7008 to i8
  %7010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7009, i8* %7010, align 1
  %7011 = trunc i128 %7005 to i32
  %7012 = and i32 %7011, 255
  %7013 = call i32 @llvm.ctpop.i32(i32 %7012)
  %7014 = trunc i32 %7013 to i8
  %7015 = and i8 %7014, 1
  %7016 = xor i8 %7015, 1
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7016, i8* %7017, align 1
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7018, align 1
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7019, align 1
  %7020 = lshr i64 %7006, 63
  %7021 = trunc i64 %7020 to i8
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7021, i8* %7022, align 1
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7009, i8* %7023, align 1
  store %struct.Memory* %loadMem_4aedad, %struct.Memory** %MEMORY
  %loadMem_4aedb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7025 = getelementptr inbounds %struct.GPR, %struct.GPR* %7024, i32 0, i32 33
  %7026 = getelementptr inbounds %struct.Reg, %struct.Reg* %7025, i32 0, i32 0
  %PC.i2093 = bitcast %union.anon* %7026 to i64*
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7028 = getelementptr inbounds %struct.GPR, %struct.GPR* %7027, i32 0, i32 1
  %7029 = getelementptr inbounds %struct.Reg, %struct.Reg* %7028, i32 0, i32 0
  %RAX.i2094 = bitcast %union.anon* %7029 to i64*
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7031 = getelementptr inbounds %struct.GPR, %struct.GPR* %7030, i32 0, i32 5
  %7032 = getelementptr inbounds %struct.Reg, %struct.Reg* %7031, i32 0, i32 0
  %RCX.i2095 = bitcast %union.anon* %7032 to i64*
  %7033 = load i64, i64* %RAX.i2094
  %7034 = load i64, i64* %RCX.i2095
  %7035 = load i64, i64* %PC.i2093
  %7036 = add i64 %7035, 3
  store i64 %7036, i64* %PC.i2093
  %7037 = add i64 %7034, %7033
  store i64 %7037, i64* %RAX.i2094, align 8
  %7038 = icmp ult i64 %7037, %7033
  %7039 = icmp ult i64 %7037, %7034
  %7040 = or i1 %7038, %7039
  %7041 = zext i1 %7040 to i8
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7041, i8* %7042, align 1
  %7043 = trunc i64 %7037 to i32
  %7044 = and i32 %7043, 255
  %7045 = call i32 @llvm.ctpop.i32(i32 %7044)
  %7046 = trunc i32 %7045 to i8
  %7047 = and i8 %7046, 1
  %7048 = xor i8 %7047, 1
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7048, i8* %7049, align 1
  %7050 = xor i64 %7034, %7033
  %7051 = xor i64 %7050, %7037
  %7052 = lshr i64 %7051, 4
  %7053 = trunc i64 %7052 to i8
  %7054 = and i8 %7053, 1
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7054, i8* %7055, align 1
  %7056 = icmp eq i64 %7037, 0
  %7057 = zext i1 %7056 to i8
  %7058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7057, i8* %7058, align 1
  %7059 = lshr i64 %7037, 63
  %7060 = trunc i64 %7059 to i8
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7060, i8* %7061, align 1
  %7062 = lshr i64 %7033, 63
  %7063 = lshr i64 %7034, 63
  %7064 = xor i64 %7059, %7062
  %7065 = xor i64 %7059, %7063
  %7066 = add i64 %7064, %7065
  %7067 = icmp eq i64 %7066, 2
  %7068 = zext i1 %7067 to i8
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7068, i8* %7069, align 1
  store %struct.Memory* %loadMem_4aedb4, %struct.Memory** %MEMORY
  %loadMem_4aedb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7071 = getelementptr inbounds %struct.GPR, %struct.GPR* %7070, i32 0, i32 33
  %7072 = getelementptr inbounds %struct.Reg, %struct.Reg* %7071, i32 0, i32 0
  %PC.i2090 = bitcast %union.anon* %7072 to i64*
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7074 = getelementptr inbounds %struct.GPR, %struct.GPR* %7073, i32 0, i32 5
  %7075 = getelementptr inbounds %struct.Reg, %struct.Reg* %7074, i32 0, i32 0
  %RCX.i2091 = bitcast %union.anon* %7075 to i64*
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7077 = getelementptr inbounds %struct.GPR, %struct.GPR* %7076, i32 0, i32 15
  %7078 = getelementptr inbounds %struct.Reg, %struct.Reg* %7077, i32 0, i32 0
  %RBP.i2092 = bitcast %union.anon* %7078 to i64*
  %7079 = load i64, i64* %RBP.i2092
  %7080 = sub i64 %7079, 8
  %7081 = load i64, i64* %PC.i2090
  %7082 = add i64 %7081, 4
  store i64 %7082, i64* %PC.i2090
  %7083 = inttoptr i64 %7080 to i32*
  %7084 = load i32, i32* %7083
  %7085 = sext i32 %7084 to i64
  store i64 %7085, i64* %RCX.i2091, align 8
  store %struct.Memory* %loadMem_4aedb7, %struct.Memory** %MEMORY
  %loadMem_4aedbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7087 = getelementptr inbounds %struct.GPR, %struct.GPR* %7086, i32 0, i32 33
  %7088 = getelementptr inbounds %struct.Reg, %struct.Reg* %7087, i32 0, i32 0
  %PC.i2088 = bitcast %union.anon* %7088 to i64*
  %7089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7090 = getelementptr inbounds %struct.GPR, %struct.GPR* %7089, i32 0, i32 5
  %7091 = getelementptr inbounds %struct.Reg, %struct.Reg* %7090, i32 0, i32 0
  %RCX.i2089 = bitcast %union.anon* %7091 to i64*
  %7092 = load i64, i64* %RCX.i2089
  %7093 = load i64, i64* %PC.i2088
  %7094 = add i64 %7093, 4
  store i64 %7094, i64* %PC.i2088
  %7095 = sext i64 %7092 to i128
  %7096 = and i128 %7095, -18446744073709551616
  %7097 = zext i64 %7092 to i128
  %7098 = or i128 %7096, %7097
  %7099 = mul i128 12, %7098
  %7100 = trunc i128 %7099 to i64
  store i64 %7100, i64* %RCX.i2089, align 8
  %7101 = sext i64 %7100 to i128
  %7102 = icmp ne i128 %7101, %7099
  %7103 = zext i1 %7102 to i8
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7103, i8* %7104, align 1
  %7105 = trunc i128 %7099 to i32
  %7106 = and i32 %7105, 255
  %7107 = call i32 @llvm.ctpop.i32(i32 %7106)
  %7108 = trunc i32 %7107 to i8
  %7109 = and i8 %7108, 1
  %7110 = xor i8 %7109, 1
  %7111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7110, i8* %7111, align 1
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7112, align 1
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7113, align 1
  %7114 = lshr i64 %7100, 63
  %7115 = trunc i64 %7114 to i8
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7115, i8* %7116, align 1
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7103, i8* %7117, align 1
  store %struct.Memory* %loadMem_4aedbb, %struct.Memory** %MEMORY
  %loadMem_4aedbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 33
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %PC.i2085 = bitcast %union.anon* %7120 to i64*
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7122 = getelementptr inbounds %struct.GPR, %struct.GPR* %7121, i32 0, i32 1
  %7123 = getelementptr inbounds %struct.Reg, %struct.Reg* %7122, i32 0, i32 0
  %RAX.i2086 = bitcast %union.anon* %7123 to i64*
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 5
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %RCX.i2087 = bitcast %union.anon* %7126 to i64*
  %7127 = load i64, i64* %RAX.i2086
  %7128 = load i64, i64* %RCX.i2087
  %7129 = load i64, i64* %PC.i2085
  %7130 = add i64 %7129, 3
  store i64 %7130, i64* %PC.i2085
  %7131 = add i64 %7128, %7127
  store i64 %7131, i64* %RAX.i2086, align 8
  %7132 = icmp ult i64 %7131, %7127
  %7133 = icmp ult i64 %7131, %7128
  %7134 = or i1 %7132, %7133
  %7135 = zext i1 %7134 to i8
  %7136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7135, i8* %7136, align 1
  %7137 = trunc i64 %7131 to i32
  %7138 = and i32 %7137, 255
  %7139 = call i32 @llvm.ctpop.i32(i32 %7138)
  %7140 = trunc i32 %7139 to i8
  %7141 = and i8 %7140, 1
  %7142 = xor i8 %7141, 1
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7142, i8* %7143, align 1
  %7144 = xor i64 %7128, %7127
  %7145 = xor i64 %7144, %7131
  %7146 = lshr i64 %7145, 4
  %7147 = trunc i64 %7146 to i8
  %7148 = and i8 %7147, 1
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7148, i8* %7149, align 1
  %7150 = icmp eq i64 %7131, 0
  %7151 = zext i1 %7150 to i8
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7151, i8* %7152, align 1
  %7153 = lshr i64 %7131, 63
  %7154 = trunc i64 %7153 to i8
  %7155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7154, i8* %7155, align 1
  %7156 = lshr i64 %7127, 63
  %7157 = lshr i64 %7128, 63
  %7158 = xor i64 %7153, %7156
  %7159 = xor i64 %7153, %7157
  %7160 = add i64 %7158, %7159
  %7161 = icmp eq i64 %7160, 2
  %7162 = zext i1 %7161 to i8
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7162, i8* %7163, align 1
  store %struct.Memory* %loadMem_4aedbf, %struct.Memory** %MEMORY
  %loadMem_4aedc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 33
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %PC.i2082 = bitcast %union.anon* %7166 to i64*
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 5
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %RCX.i2083 = bitcast %union.anon* %7169 to i64*
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 15
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %RBP.i2084 = bitcast %union.anon* %7172 to i64*
  %7173 = load i64, i64* %RBP.i2084
  %7174 = sub i64 %7173, 40
  %7175 = load i64, i64* %PC.i2082
  %7176 = add i64 %7175, 4
  store i64 %7176, i64* %PC.i2082
  %7177 = inttoptr i64 %7174 to i32*
  %7178 = load i32, i32* %7177
  %7179 = sext i32 %7178 to i64
  store i64 %7179, i64* %RCX.i2083, align 8
  store %struct.Memory* %loadMem_4aedc2, %struct.Memory** %MEMORY
  %loadMem_4aedc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 33
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %PC.i2079 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 1
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %RAX.i2080 = bitcast %union.anon* %7185 to i64*
  %7186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7187 = getelementptr inbounds %struct.GPR, %struct.GPR* %7186, i32 0, i32 5
  %7188 = getelementptr inbounds %struct.Reg, %struct.Reg* %7187, i32 0, i32 0
  %RCX.i2081 = bitcast %union.anon* %7188 to i64*
  %7189 = load i64, i64* %RAX.i2080
  %7190 = load i64, i64* %RCX.i2081
  %7191 = mul i64 %7190, 4
  %7192 = add i64 %7191, %7189
  %7193 = load i64, i64* %PC.i2079
  %7194 = add i64 %7193, 7
  store i64 %7194, i64* %PC.i2079
  %7195 = inttoptr i64 %7192 to i32*
  %7196 = load i32, i32* %7195
  %7197 = sub i32 %7196, 128
  %7198 = icmp ult i32 %7196, 128
  %7199 = zext i1 %7198 to i8
  %7200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7199, i8* %7200, align 1
  %7201 = and i32 %7197, 255
  %7202 = call i32 @llvm.ctpop.i32(i32 %7201)
  %7203 = trunc i32 %7202 to i8
  %7204 = and i8 %7203, 1
  %7205 = xor i8 %7204, 1
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7205, i8* %7206, align 1
  %7207 = xor i32 %7196, 128
  %7208 = xor i32 %7207, %7197
  %7209 = lshr i32 %7208, 4
  %7210 = trunc i32 %7209 to i8
  %7211 = and i8 %7210, 1
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7211, i8* %7212, align 1
  %7213 = icmp eq i32 %7197, 0
  %7214 = zext i1 %7213 to i8
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7214, i8* %7215, align 1
  %7216 = lshr i32 %7197, 31
  %7217 = trunc i32 %7216 to i8
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7217, i8* %7218, align 1
  %7219 = lshr i32 %7196, 31
  %7220 = xor i32 %7216, %7219
  %7221 = add i32 %7220, %7219
  %7222 = icmp eq i32 %7221, 2
  %7223 = zext i1 %7222 to i8
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7223, i8* %7224, align 1
  store %struct.Memory* %loadMem_4aedc6, %struct.Memory** %MEMORY
  %loadMem_4aedcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i2078 = bitcast %union.anon* %7227 to i64*
  %7228 = load i64, i64* %PC.i2078
  %7229 = add i64 %7228, 62
  %7230 = load i64, i64* %PC.i2078
  %7231 = add i64 %7230, 6
  %7232 = load i64, i64* %PC.i2078
  %7233 = add i64 %7232, 6
  store i64 %7233, i64* %PC.i2078
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7235 = load i8, i8* %7234, align 1
  %7236 = icmp ne i8 %7235, 0
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7238 = load i8, i8* %7237, align 1
  %7239 = icmp ne i8 %7238, 0
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7241 = load i8, i8* %7240, align 1
  %7242 = icmp ne i8 %7241, 0
  %7243 = xor i1 %7239, %7242
  %7244 = or i1 %7236, %7243
  %7245 = zext i1 %7244 to i8
  store i8 %7245, i8* %BRANCH_TAKEN, align 1
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7247 = select i1 %7244, i64 %7229, i64 %7231
  store i64 %7247, i64* %7246, align 8
  store %struct.Memory* %loadMem_4aedcd, %struct.Memory** %MEMORY
  %loadBr_4aedcd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aedcd = icmp eq i8 %loadBr_4aedcd, 1
  br i1 %cmpBr_4aedcd, label %block_.L_4aee0b, label %block_.L_4aedd3

block_.L_4aedd3:                                  ; preds = %block_4aed9c, %block_.L_4aed2e
  %loadMem_4aedd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 33
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %PC.i2075 = bitcast %union.anon* %7250 to i64*
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7252 = getelementptr inbounds %struct.GPR, %struct.GPR* %7251, i32 0, i32 1
  %7253 = getelementptr inbounds %struct.Reg, %struct.Reg* %7252, i32 0, i32 0
  %RAX.i2076 = bitcast %union.anon* %7253 to i64*
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 15
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %RBP.i2077 = bitcast %union.anon* %7256 to i64*
  %7257 = load i64, i64* %RBP.i2077
  %7258 = sub i64 %7257, 19184
  %7259 = load i64, i64* %PC.i2075
  %7260 = add i64 %7259, 7
  store i64 %7260, i64* %PC.i2075
  store i64 %7258, i64* %RAX.i2076, align 8
  store %struct.Memory* %loadMem_4aedd3, %struct.Memory** %MEMORY
  %loadMem_4aedda = load %struct.Memory*, %struct.Memory** %MEMORY
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7262 = getelementptr inbounds %struct.GPR, %struct.GPR* %7261, i32 0, i32 33
  %7263 = getelementptr inbounds %struct.Reg, %struct.Reg* %7262, i32 0, i32 0
  %PC.i2072 = bitcast %union.anon* %7263 to i64*
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7265 = getelementptr inbounds %struct.GPR, %struct.GPR* %7264, i32 0, i32 5
  %7266 = getelementptr inbounds %struct.Reg, %struct.Reg* %7265, i32 0, i32 0
  %RCX.i2073 = bitcast %union.anon* %7266 to i64*
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7268 = getelementptr inbounds %struct.GPR, %struct.GPR* %7267, i32 0, i32 15
  %7269 = getelementptr inbounds %struct.Reg, %struct.Reg* %7268, i32 0, i32 0
  %RBP.i2074 = bitcast %union.anon* %7269 to i64*
  %7270 = load i64, i64* %RBP.i2074
  %7271 = sub i64 %7270, 40
  %7272 = load i64, i64* %PC.i2072
  %7273 = add i64 %7272, 4
  store i64 %7273, i64* %PC.i2072
  %7274 = inttoptr i64 %7271 to i32*
  %7275 = load i32, i32* %7274
  %7276 = sext i32 %7275 to i64
  store i64 %7276, i64* %RCX.i2073, align 8
  store %struct.Memory* %loadMem_4aedda, %struct.Memory** %MEMORY
  %loadMem_4aedde = load %struct.Memory*, %struct.Memory** %MEMORY
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7278 = getelementptr inbounds %struct.GPR, %struct.GPR* %7277, i32 0, i32 33
  %7279 = getelementptr inbounds %struct.Reg, %struct.Reg* %7278, i32 0, i32 0
  %PC.i2068 = bitcast %union.anon* %7279 to i64*
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7281 = getelementptr inbounds %struct.GPR, %struct.GPR* %7280, i32 0, i32 5
  %7282 = getelementptr inbounds %struct.Reg, %struct.Reg* %7281, i32 0, i32 0
  %RCX.i2069 = bitcast %union.anon* %7282 to i64*
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7284 = getelementptr inbounds %struct.GPR, %struct.GPR* %7283, i32 0, i32 7
  %7285 = getelementptr inbounds %struct.Reg, %struct.Reg* %7284, i32 0, i32 0
  %RDX.i2070 = bitcast %union.anon* %7285 to i64*
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7287 = getelementptr inbounds %struct.GPR, %struct.GPR* %7286, i32 0, i32 15
  %7288 = getelementptr inbounds %struct.Reg, %struct.Reg* %7287, i32 0, i32 0
  %RBP.i2071 = bitcast %union.anon* %7288 to i64*
  %7289 = load i64, i64* %RBP.i2071
  %7290 = load i64, i64* %RCX.i2069
  %7291 = mul i64 %7290, 4
  %7292 = add i64 %7289, -804
  %7293 = add i64 %7292, %7291
  %7294 = load i64, i64* %PC.i2068
  %7295 = add i64 %7294, 7
  store i64 %7295, i64* %PC.i2068
  %7296 = inttoptr i64 %7293 to i32*
  %7297 = load i32, i32* %7296
  %7298 = zext i32 %7297 to i64
  store i64 %7298, i64* %RDX.i2070, align 8
  store %struct.Memory* %loadMem_4aedde, %struct.Memory** %MEMORY
  %loadMem_4aede5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7300 = getelementptr inbounds %struct.GPR, %struct.GPR* %7299, i32 0, i32 33
  %7301 = getelementptr inbounds %struct.Reg, %struct.Reg* %7300, i32 0, i32 0
  %PC.i2066 = bitcast %union.anon* %7301 to i64*
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7303 = getelementptr inbounds %struct.GPR, %struct.GPR* %7302, i32 0, i32 1
  %7304 = getelementptr inbounds %struct.Reg, %struct.Reg* %7303, i32 0, i32 0
  %RAX.i2067 = bitcast %union.anon* %7304 to i64*
  %7305 = load i64, i64* %RAX.i2067
  %7306 = load i64, i64* %PC.i2066
  %7307 = add i64 %7306, 6
  store i64 %7307, i64* %PC.i2066
  %7308 = add i64 2700, %7305
  store i64 %7308, i64* %RAX.i2067, align 8
  %7309 = icmp ult i64 %7308, %7305
  %7310 = icmp ult i64 %7308, 2700
  %7311 = or i1 %7309, %7310
  %7312 = zext i1 %7311 to i8
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7312, i8* %7313, align 1
  %7314 = trunc i64 %7308 to i32
  %7315 = and i32 %7314, 255
  %7316 = call i32 @llvm.ctpop.i32(i32 %7315)
  %7317 = trunc i32 %7316 to i8
  %7318 = and i8 %7317, 1
  %7319 = xor i8 %7318, 1
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7319, i8* %7320, align 1
  %7321 = xor i64 2700, %7305
  %7322 = xor i64 %7321, %7308
  %7323 = lshr i64 %7322, 4
  %7324 = trunc i64 %7323 to i8
  %7325 = and i8 %7324, 1
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7325, i8* %7326, align 1
  %7327 = icmp eq i64 %7308, 0
  %7328 = zext i1 %7327 to i8
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7328, i8* %7329, align 1
  %7330 = lshr i64 %7308, 63
  %7331 = trunc i64 %7330 to i8
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7331, i8* %7332, align 1
  %7333 = lshr i64 %7305, 63
  %7334 = xor i64 %7330, %7333
  %7335 = add i64 %7334, %7330
  %7336 = icmp eq i64 %7335, 2
  %7337 = zext i1 %7336 to i8
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7337, i8* %7338, align 1
  store %struct.Memory* %loadMem_4aede5, %struct.Memory** %MEMORY
  %loadMem_4aedeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7340 = getelementptr inbounds %struct.GPR, %struct.GPR* %7339, i32 0, i32 33
  %7341 = getelementptr inbounds %struct.Reg, %struct.Reg* %7340, i32 0, i32 0
  %PC.i2063 = bitcast %union.anon* %7341 to i64*
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7343 = getelementptr inbounds %struct.GPR, %struct.GPR* %7342, i32 0, i32 5
  %7344 = getelementptr inbounds %struct.Reg, %struct.Reg* %7343, i32 0, i32 0
  %RCX.i2064 = bitcast %union.anon* %7344 to i64*
  %7345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7346 = getelementptr inbounds %struct.GPR, %struct.GPR* %7345, i32 0, i32 15
  %7347 = getelementptr inbounds %struct.Reg, %struct.Reg* %7346, i32 0, i32 0
  %RBP.i2065 = bitcast %union.anon* %7347 to i64*
  %7348 = load i64, i64* %RBP.i2065
  %7349 = sub i64 %7348, 4
  %7350 = load i64, i64* %PC.i2063
  %7351 = add i64 %7350, 4
  store i64 %7351, i64* %PC.i2063
  %7352 = inttoptr i64 %7349 to i32*
  %7353 = load i32, i32* %7352
  %7354 = sext i32 %7353 to i64
  store i64 %7354, i64* %RCX.i2064, align 8
  store %struct.Memory* %loadMem_4aedeb, %struct.Memory** %MEMORY
  %loadMem_4aedef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 33
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %PC.i2061 = bitcast %union.anon* %7357 to i64*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7359 = getelementptr inbounds %struct.GPR, %struct.GPR* %7358, i32 0, i32 5
  %7360 = getelementptr inbounds %struct.Reg, %struct.Reg* %7359, i32 0, i32 0
  %RCX.i2062 = bitcast %union.anon* %7360 to i64*
  %7361 = load i64, i64* %RCX.i2062
  %7362 = load i64, i64* %PC.i2061
  %7363 = add i64 %7362, 7
  store i64 %7363, i64* %PC.i2061
  %7364 = sext i64 %7361 to i128
  %7365 = and i128 %7364, -18446744073709551616
  %7366 = zext i64 %7361 to i128
  %7367 = or i128 %7365, %7366
  %7368 = mul i128 180, %7367
  %7369 = trunc i128 %7368 to i64
  store i64 %7369, i64* %RCX.i2062, align 8
  %7370 = sext i64 %7369 to i128
  %7371 = icmp ne i128 %7370, %7368
  %7372 = zext i1 %7371 to i8
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7372, i8* %7373, align 1
  %7374 = trunc i128 %7368 to i32
  %7375 = and i32 %7374, 255
  %7376 = call i32 @llvm.ctpop.i32(i32 %7375)
  %7377 = trunc i32 %7376 to i8
  %7378 = and i8 %7377, 1
  %7379 = xor i8 %7378, 1
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7379, i8* %7380, align 1
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7381, align 1
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7382, align 1
  %7383 = lshr i64 %7369, 63
  %7384 = trunc i64 %7383 to i8
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7384, i8* %7385, align 1
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7372, i8* %7386, align 1
  store %struct.Memory* %loadMem_4aedef, %struct.Memory** %MEMORY
  %loadMem_4aedf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 33
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %PC.i2058 = bitcast %union.anon* %7389 to i64*
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7391 = getelementptr inbounds %struct.GPR, %struct.GPR* %7390, i32 0, i32 1
  %7392 = getelementptr inbounds %struct.Reg, %struct.Reg* %7391, i32 0, i32 0
  %RAX.i2059 = bitcast %union.anon* %7392 to i64*
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7394 = getelementptr inbounds %struct.GPR, %struct.GPR* %7393, i32 0, i32 5
  %7395 = getelementptr inbounds %struct.Reg, %struct.Reg* %7394, i32 0, i32 0
  %RCX.i2060 = bitcast %union.anon* %7395 to i64*
  %7396 = load i64, i64* %RAX.i2059
  %7397 = load i64, i64* %RCX.i2060
  %7398 = load i64, i64* %PC.i2058
  %7399 = add i64 %7398, 3
  store i64 %7399, i64* %PC.i2058
  %7400 = add i64 %7397, %7396
  store i64 %7400, i64* %RAX.i2059, align 8
  %7401 = icmp ult i64 %7400, %7396
  %7402 = icmp ult i64 %7400, %7397
  %7403 = or i1 %7401, %7402
  %7404 = zext i1 %7403 to i8
  %7405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7404, i8* %7405, align 1
  %7406 = trunc i64 %7400 to i32
  %7407 = and i32 %7406, 255
  %7408 = call i32 @llvm.ctpop.i32(i32 %7407)
  %7409 = trunc i32 %7408 to i8
  %7410 = and i8 %7409, 1
  %7411 = xor i8 %7410, 1
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7411, i8* %7412, align 1
  %7413 = xor i64 %7397, %7396
  %7414 = xor i64 %7413, %7400
  %7415 = lshr i64 %7414, 4
  %7416 = trunc i64 %7415 to i8
  %7417 = and i8 %7416, 1
  %7418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7417, i8* %7418, align 1
  %7419 = icmp eq i64 %7400, 0
  %7420 = zext i1 %7419 to i8
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7420, i8* %7421, align 1
  %7422 = lshr i64 %7400, 63
  %7423 = trunc i64 %7422 to i8
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7423, i8* %7424, align 1
  %7425 = lshr i64 %7396, 63
  %7426 = lshr i64 %7397, 63
  %7427 = xor i64 %7422, %7425
  %7428 = xor i64 %7422, %7426
  %7429 = add i64 %7427, %7428
  %7430 = icmp eq i64 %7429, 2
  %7431 = zext i1 %7430 to i8
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7431, i8* %7432, align 1
  store %struct.Memory* %loadMem_4aedf6, %struct.Memory** %MEMORY
  %loadMem_4aedf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 33
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %PC.i2055 = bitcast %union.anon* %7435 to i64*
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 5
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %RCX.i2056 = bitcast %union.anon* %7438 to i64*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 15
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %RBP.i2057 = bitcast %union.anon* %7441 to i64*
  %7442 = load i64, i64* %RBP.i2057
  %7443 = sub i64 %7442, 8
  %7444 = load i64, i64* %PC.i2055
  %7445 = add i64 %7444, 4
  store i64 %7445, i64* %PC.i2055
  %7446 = inttoptr i64 %7443 to i32*
  %7447 = load i32, i32* %7446
  %7448 = sext i32 %7447 to i64
  store i64 %7448, i64* %RCX.i2056, align 8
  store %struct.Memory* %loadMem_4aedf9, %struct.Memory** %MEMORY
  %loadMem_4aedfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 33
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %PC.i2053 = bitcast %union.anon* %7451 to i64*
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7453 = getelementptr inbounds %struct.GPR, %struct.GPR* %7452, i32 0, i32 5
  %7454 = getelementptr inbounds %struct.Reg, %struct.Reg* %7453, i32 0, i32 0
  %RCX.i2054 = bitcast %union.anon* %7454 to i64*
  %7455 = load i64, i64* %RCX.i2054
  %7456 = load i64, i64* %PC.i2053
  %7457 = add i64 %7456, 4
  store i64 %7457, i64* %PC.i2053
  %7458 = sext i64 %7455 to i128
  %7459 = and i128 %7458, -18446744073709551616
  %7460 = zext i64 %7455 to i128
  %7461 = or i128 %7459, %7460
  %7462 = mul i128 12, %7461
  %7463 = trunc i128 %7462 to i64
  store i64 %7463, i64* %RCX.i2054, align 8
  %7464 = sext i64 %7463 to i128
  %7465 = icmp ne i128 %7464, %7462
  %7466 = zext i1 %7465 to i8
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7466, i8* %7467, align 1
  %7468 = trunc i128 %7462 to i32
  %7469 = and i32 %7468, 255
  %7470 = call i32 @llvm.ctpop.i32(i32 %7469)
  %7471 = trunc i32 %7470 to i8
  %7472 = and i8 %7471, 1
  %7473 = xor i8 %7472, 1
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7473, i8* %7474, align 1
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7475, align 1
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7476, align 1
  %7477 = lshr i64 %7463, 63
  %7478 = trunc i64 %7477 to i8
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7478, i8* %7479, align 1
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7466, i8* %7480, align 1
  store %struct.Memory* %loadMem_4aedfd, %struct.Memory** %MEMORY
  %loadMem_4aee01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7482 = getelementptr inbounds %struct.GPR, %struct.GPR* %7481, i32 0, i32 33
  %7483 = getelementptr inbounds %struct.Reg, %struct.Reg* %7482, i32 0, i32 0
  %PC.i2050 = bitcast %union.anon* %7483 to i64*
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7485 = getelementptr inbounds %struct.GPR, %struct.GPR* %7484, i32 0, i32 1
  %7486 = getelementptr inbounds %struct.Reg, %struct.Reg* %7485, i32 0, i32 0
  %RAX.i2051 = bitcast %union.anon* %7486 to i64*
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7488 = getelementptr inbounds %struct.GPR, %struct.GPR* %7487, i32 0, i32 5
  %7489 = getelementptr inbounds %struct.Reg, %struct.Reg* %7488, i32 0, i32 0
  %RCX.i2052 = bitcast %union.anon* %7489 to i64*
  %7490 = load i64, i64* %RAX.i2051
  %7491 = load i64, i64* %RCX.i2052
  %7492 = load i64, i64* %PC.i2050
  %7493 = add i64 %7492, 3
  store i64 %7493, i64* %PC.i2050
  %7494 = add i64 %7491, %7490
  store i64 %7494, i64* %RAX.i2051, align 8
  %7495 = icmp ult i64 %7494, %7490
  %7496 = icmp ult i64 %7494, %7491
  %7497 = or i1 %7495, %7496
  %7498 = zext i1 %7497 to i8
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7498, i8* %7499, align 1
  %7500 = trunc i64 %7494 to i32
  %7501 = and i32 %7500, 255
  %7502 = call i32 @llvm.ctpop.i32(i32 %7501)
  %7503 = trunc i32 %7502 to i8
  %7504 = and i8 %7503, 1
  %7505 = xor i8 %7504, 1
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7505, i8* %7506, align 1
  %7507 = xor i64 %7491, %7490
  %7508 = xor i64 %7507, %7494
  %7509 = lshr i64 %7508, 4
  %7510 = trunc i64 %7509 to i8
  %7511 = and i8 %7510, 1
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7511, i8* %7512, align 1
  %7513 = icmp eq i64 %7494, 0
  %7514 = zext i1 %7513 to i8
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7514, i8* %7515, align 1
  %7516 = lshr i64 %7494, 63
  %7517 = trunc i64 %7516 to i8
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7517, i8* %7518, align 1
  %7519 = lshr i64 %7490, 63
  %7520 = lshr i64 %7491, 63
  %7521 = xor i64 %7516, %7519
  %7522 = xor i64 %7516, %7520
  %7523 = add i64 %7521, %7522
  %7524 = icmp eq i64 %7523, 2
  %7525 = zext i1 %7524 to i8
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7525, i8* %7526, align 1
  store %struct.Memory* %loadMem_4aee01, %struct.Memory** %MEMORY
  %loadMem_4aee04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7528 = getelementptr inbounds %struct.GPR, %struct.GPR* %7527, i32 0, i32 33
  %7529 = getelementptr inbounds %struct.Reg, %struct.Reg* %7528, i32 0, i32 0
  %PC.i2047 = bitcast %union.anon* %7529 to i64*
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7531 = getelementptr inbounds %struct.GPR, %struct.GPR* %7530, i32 0, i32 5
  %7532 = getelementptr inbounds %struct.Reg, %struct.Reg* %7531, i32 0, i32 0
  %RCX.i2048 = bitcast %union.anon* %7532 to i64*
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7534 = getelementptr inbounds %struct.GPR, %struct.GPR* %7533, i32 0, i32 15
  %7535 = getelementptr inbounds %struct.Reg, %struct.Reg* %7534, i32 0, i32 0
  %RBP.i2049 = bitcast %union.anon* %7535 to i64*
  %7536 = load i64, i64* %RBP.i2049
  %7537 = sub i64 %7536, 40
  %7538 = load i64, i64* %PC.i2047
  %7539 = add i64 %7538, 4
  store i64 %7539, i64* %PC.i2047
  %7540 = inttoptr i64 %7537 to i32*
  %7541 = load i32, i32* %7540
  %7542 = sext i32 %7541 to i64
  store i64 %7542, i64* %RCX.i2048, align 8
  store %struct.Memory* %loadMem_4aee04, %struct.Memory** %MEMORY
  %loadMem_4aee08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 33
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %PC.i2043 = bitcast %union.anon* %7545 to i64*
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 7
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %EDX.i2044 = bitcast %union.anon* %7548 to i32*
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7550 = getelementptr inbounds %struct.GPR, %struct.GPR* %7549, i32 0, i32 1
  %7551 = getelementptr inbounds %struct.Reg, %struct.Reg* %7550, i32 0, i32 0
  %RAX.i2045 = bitcast %union.anon* %7551 to i64*
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7553 = getelementptr inbounds %struct.GPR, %struct.GPR* %7552, i32 0, i32 5
  %7554 = getelementptr inbounds %struct.Reg, %struct.Reg* %7553, i32 0, i32 0
  %RCX.i2046 = bitcast %union.anon* %7554 to i64*
  %7555 = load i64, i64* %RAX.i2045
  %7556 = load i64, i64* %RCX.i2046
  %7557 = mul i64 %7556, 4
  %7558 = add i64 %7557, %7555
  %7559 = load i32, i32* %EDX.i2044
  %7560 = zext i32 %7559 to i64
  %7561 = load i64, i64* %PC.i2043
  %7562 = add i64 %7561, 3
  store i64 %7562, i64* %PC.i2043
  %7563 = inttoptr i64 %7558 to i32*
  store i32 %7559, i32* %7563
  store %struct.Memory* %loadMem_4aee08, %struct.Memory** %MEMORY
  br label %block_.L_4aee0b

block_.L_4aee0b:                                  ; preds = %block_.L_4aedd3, %block_4aed9c
  %loadMem_4aee0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7565 = getelementptr inbounds %struct.GPR, %struct.GPR* %7564, i32 0, i32 33
  %7566 = getelementptr inbounds %struct.Reg, %struct.Reg* %7565, i32 0, i32 0
  %PC.i2040 = bitcast %union.anon* %7566 to i64*
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7568 = getelementptr inbounds %struct.GPR, %struct.GPR* %7567, i32 0, i32 1
  %7569 = getelementptr inbounds %struct.Reg, %struct.Reg* %7568, i32 0, i32 0
  %RAX.i2041 = bitcast %union.anon* %7569 to i64*
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7571 = getelementptr inbounds %struct.GPR, %struct.GPR* %7570, i32 0, i32 15
  %7572 = getelementptr inbounds %struct.Reg, %struct.Reg* %7571, i32 0, i32 0
  %RBP.i2042 = bitcast %union.anon* %7572 to i64*
  %7573 = load i64, i64* %RBP.i2042
  %7574 = sub i64 %7573, 35392
  %7575 = load i64, i64* %PC.i2040
  %7576 = add i64 %7575, 7
  store i64 %7576, i64* %PC.i2040
  store i64 %7574, i64* %RAX.i2041, align 8
  store %struct.Memory* %loadMem_4aee0b, %struct.Memory** %MEMORY
  %loadMem_4aee12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7578 = getelementptr inbounds %struct.GPR, %struct.GPR* %7577, i32 0, i32 33
  %7579 = getelementptr inbounds %struct.Reg, %struct.Reg* %7578, i32 0, i32 0
  %PC.i2037 = bitcast %union.anon* %7579 to i64*
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7581 = getelementptr inbounds %struct.GPR, %struct.GPR* %7580, i32 0, i32 5
  %7582 = getelementptr inbounds %struct.Reg, %struct.Reg* %7581, i32 0, i32 0
  %RCX.i2038 = bitcast %union.anon* %7582 to i64*
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7584 = getelementptr inbounds %struct.GPR, %struct.GPR* %7583, i32 0, i32 15
  %7585 = getelementptr inbounds %struct.Reg, %struct.Reg* %7584, i32 0, i32 0
  %RBP.i2039 = bitcast %union.anon* %7585 to i64*
  %7586 = load i64, i64* %RBP.i2039
  %7587 = sub i64 %7586, 19184
  %7588 = load i64, i64* %PC.i2037
  %7589 = add i64 %7588, 7
  store i64 %7589, i64* %PC.i2037
  store i64 %7587, i64* %RCX.i2038, align 8
  store %struct.Memory* %loadMem_4aee12, %struct.Memory** %MEMORY
  %loadMem_4aee19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7591 = getelementptr inbounds %struct.GPR, %struct.GPR* %7590, i32 0, i32 33
  %7592 = getelementptr inbounds %struct.Reg, %struct.Reg* %7591, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %7592 to i64*
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7594 = getelementptr inbounds %struct.GPR, %struct.GPR* %7593, i32 0, i32 7
  %7595 = getelementptr inbounds %struct.Reg, %struct.Reg* %7594, i32 0, i32 0
  %RDX.i2036 = bitcast %union.anon* %7595 to i64*
  %7596 = load i64, i64* %PC.i2035
  %7597 = add i64 %7596, 5
  store i64 %7597, i64* %PC.i2035
  store i64 64, i64* %RDX.i2036, align 8
  store %struct.Memory* %loadMem_4aee19, %struct.Memory** %MEMORY
  %loadMem_4aee1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 33
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %PC.i2032 = bitcast %union.anon* %7600 to i64*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 5
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %RCX.i2033 = bitcast %union.anon* %7603 to i64*
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7605 = getelementptr inbounds %struct.GPR, %struct.GPR* %7604, i32 0, i32 9
  %7606 = getelementptr inbounds %struct.Reg, %struct.Reg* %7605, i32 0, i32 0
  %RSI.i2034 = bitcast %union.anon* %7606 to i64*
  %7607 = load i64, i64* %RCX.i2033
  %7608 = load i64, i64* %PC.i2032
  %7609 = add i64 %7608, 3
  store i64 %7609, i64* %PC.i2032
  store i64 %7607, i64* %RSI.i2034, align 8
  store %struct.Memory* %loadMem_4aee1e, %struct.Memory** %MEMORY
  %loadMem_4aee21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 33
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %PC.i2030 = bitcast %union.anon* %7612 to i64*
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 9
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %RSI.i2031 = bitcast %union.anon* %7615 to i64*
  %7616 = load i64, i64* %RSI.i2031
  %7617 = load i64, i64* %PC.i2030
  %7618 = add i64 %7617, 7
  store i64 %7618, i64* %PC.i2030
  %7619 = add i64 2700, %7616
  store i64 %7619, i64* %RSI.i2031, align 8
  %7620 = icmp ult i64 %7619, %7616
  %7621 = icmp ult i64 %7619, 2700
  %7622 = or i1 %7620, %7621
  %7623 = zext i1 %7622 to i8
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7623, i8* %7624, align 1
  %7625 = trunc i64 %7619 to i32
  %7626 = and i32 %7625, 255
  %7627 = call i32 @llvm.ctpop.i32(i32 %7626)
  %7628 = trunc i32 %7627 to i8
  %7629 = and i8 %7628, 1
  %7630 = xor i8 %7629, 1
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7630, i8* %7631, align 1
  %7632 = xor i64 2700, %7616
  %7633 = xor i64 %7632, %7619
  %7634 = lshr i64 %7633, 4
  %7635 = trunc i64 %7634 to i8
  %7636 = and i8 %7635, 1
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7636, i8* %7637, align 1
  %7638 = icmp eq i64 %7619, 0
  %7639 = zext i1 %7638 to i8
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7639, i8* %7640, align 1
  %7641 = lshr i64 %7619, 63
  %7642 = trunc i64 %7641 to i8
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7642, i8* %7643, align 1
  %7644 = lshr i64 %7616, 63
  %7645 = xor i64 %7641, %7644
  %7646 = add i64 %7645, %7641
  %7647 = icmp eq i64 %7646, 2
  %7648 = zext i1 %7647 to i8
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7648, i8* %7649, align 1
  store %struct.Memory* %loadMem_4aee21, %struct.Memory** %MEMORY
  %loadMem_4aee28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7651 = getelementptr inbounds %struct.GPR, %struct.GPR* %7650, i32 0, i32 33
  %7652 = getelementptr inbounds %struct.Reg, %struct.Reg* %7651, i32 0, i32 0
  %PC.i2027 = bitcast %union.anon* %7652 to i64*
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7654 = getelementptr inbounds %struct.GPR, %struct.GPR* %7653, i32 0, i32 11
  %7655 = getelementptr inbounds %struct.Reg, %struct.Reg* %7654, i32 0, i32 0
  %RDI.i2028 = bitcast %union.anon* %7655 to i64*
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7657 = getelementptr inbounds %struct.GPR, %struct.GPR* %7656, i32 0, i32 15
  %7658 = getelementptr inbounds %struct.Reg, %struct.Reg* %7657, i32 0, i32 0
  %RBP.i2029 = bitcast %union.anon* %7658 to i64*
  %7659 = load i64, i64* %RBP.i2029
  %7660 = sub i64 %7659, 4
  %7661 = load i64, i64* %PC.i2027
  %7662 = add i64 %7661, 4
  store i64 %7662, i64* %PC.i2027
  %7663 = inttoptr i64 %7660 to i32*
  %7664 = load i32, i32* %7663
  %7665 = sext i32 %7664 to i64
  store i64 %7665, i64* %RDI.i2028, align 8
  store %struct.Memory* %loadMem_4aee28, %struct.Memory** %MEMORY
  %loadMem_4aee2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7667 = getelementptr inbounds %struct.GPR, %struct.GPR* %7666, i32 0, i32 33
  %7668 = getelementptr inbounds %struct.Reg, %struct.Reg* %7667, i32 0, i32 0
  %PC.i2025 = bitcast %union.anon* %7668 to i64*
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 11
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %RDI.i2026 = bitcast %union.anon* %7671 to i64*
  %7672 = load i64, i64* %RDI.i2026
  %7673 = load i64, i64* %PC.i2025
  %7674 = add i64 %7673, 7
  store i64 %7674, i64* %PC.i2025
  %7675 = sext i64 %7672 to i128
  %7676 = and i128 %7675, -18446744073709551616
  %7677 = zext i64 %7672 to i128
  %7678 = or i128 %7676, %7677
  %7679 = mul i128 180, %7678
  %7680 = trunc i128 %7679 to i64
  store i64 %7680, i64* %RDI.i2026, align 8
  %7681 = sext i64 %7680 to i128
  %7682 = icmp ne i128 %7681, %7679
  %7683 = zext i1 %7682 to i8
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7683, i8* %7684, align 1
  %7685 = trunc i128 %7679 to i32
  %7686 = and i32 %7685, 255
  %7687 = call i32 @llvm.ctpop.i32(i32 %7686)
  %7688 = trunc i32 %7687 to i8
  %7689 = and i8 %7688, 1
  %7690 = xor i8 %7689, 1
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7690, i8* %7691, align 1
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7692, align 1
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7693, align 1
  %7694 = lshr i64 %7680, 63
  %7695 = trunc i64 %7694 to i8
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7695, i8* %7696, align 1
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7683, i8* %7697, align 1
  store %struct.Memory* %loadMem_4aee2c, %struct.Memory** %MEMORY
  %loadMem_4aee33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 33
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %PC.i2022 = bitcast %union.anon* %7700 to i64*
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 9
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %RSI.i2023 = bitcast %union.anon* %7703 to i64*
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 11
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %RDI.i2024 = bitcast %union.anon* %7706 to i64*
  %7707 = load i64, i64* %RSI.i2023
  %7708 = load i64, i64* %RDI.i2024
  %7709 = load i64, i64* %PC.i2022
  %7710 = add i64 %7709, 3
  store i64 %7710, i64* %PC.i2022
  %7711 = add i64 %7708, %7707
  store i64 %7711, i64* %RSI.i2023, align 8
  %7712 = icmp ult i64 %7711, %7707
  %7713 = icmp ult i64 %7711, %7708
  %7714 = or i1 %7712, %7713
  %7715 = zext i1 %7714 to i8
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7715, i8* %7716, align 1
  %7717 = trunc i64 %7711 to i32
  %7718 = and i32 %7717, 255
  %7719 = call i32 @llvm.ctpop.i32(i32 %7718)
  %7720 = trunc i32 %7719 to i8
  %7721 = and i8 %7720, 1
  %7722 = xor i8 %7721, 1
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7722, i8* %7723, align 1
  %7724 = xor i64 %7708, %7707
  %7725 = xor i64 %7724, %7711
  %7726 = lshr i64 %7725, 4
  %7727 = trunc i64 %7726 to i8
  %7728 = and i8 %7727, 1
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7728, i8* %7729, align 1
  %7730 = icmp eq i64 %7711, 0
  %7731 = zext i1 %7730 to i8
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7731, i8* %7732, align 1
  %7733 = lshr i64 %7711, 63
  %7734 = trunc i64 %7733 to i8
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7734, i8* %7735, align 1
  %7736 = lshr i64 %7707, 63
  %7737 = lshr i64 %7708, 63
  %7738 = xor i64 %7733, %7736
  %7739 = xor i64 %7733, %7737
  %7740 = add i64 %7738, %7739
  %7741 = icmp eq i64 %7740, 2
  %7742 = zext i1 %7741 to i8
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7742, i8* %7743, align 1
  store %struct.Memory* %loadMem_4aee33, %struct.Memory** %MEMORY
  %loadMem_4aee36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 33
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %PC.i2019 = bitcast %union.anon* %7746 to i64*
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 11
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %RDI.i2020 = bitcast %union.anon* %7749 to i64*
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 15
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %RBP.i2021 = bitcast %union.anon* %7752 to i64*
  %7753 = load i64, i64* %RBP.i2021
  %7754 = sub i64 %7753, 8
  %7755 = load i64, i64* %PC.i2019
  %7756 = add i64 %7755, 4
  store i64 %7756, i64* %PC.i2019
  %7757 = inttoptr i64 %7754 to i32*
  %7758 = load i32, i32* %7757
  %7759 = sext i32 %7758 to i64
  store i64 %7759, i64* %RDI.i2020, align 8
  store %struct.Memory* %loadMem_4aee36, %struct.Memory** %MEMORY
  %loadMem_4aee3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7761 = getelementptr inbounds %struct.GPR, %struct.GPR* %7760, i32 0, i32 33
  %7762 = getelementptr inbounds %struct.Reg, %struct.Reg* %7761, i32 0, i32 0
  %PC.i2017 = bitcast %union.anon* %7762 to i64*
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7764 = getelementptr inbounds %struct.GPR, %struct.GPR* %7763, i32 0, i32 11
  %7765 = getelementptr inbounds %struct.Reg, %struct.Reg* %7764, i32 0, i32 0
  %RDI.i2018 = bitcast %union.anon* %7765 to i64*
  %7766 = load i64, i64* %RDI.i2018
  %7767 = load i64, i64* %PC.i2017
  %7768 = add i64 %7767, 4
  store i64 %7768, i64* %PC.i2017
  %7769 = sext i64 %7766 to i128
  %7770 = and i128 %7769, -18446744073709551616
  %7771 = zext i64 %7766 to i128
  %7772 = or i128 %7770, %7771
  %7773 = mul i128 12, %7772
  %7774 = trunc i128 %7773 to i64
  store i64 %7774, i64* %RDI.i2018, align 8
  %7775 = sext i64 %7774 to i128
  %7776 = icmp ne i128 %7775, %7773
  %7777 = zext i1 %7776 to i8
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7777, i8* %7778, align 1
  %7779 = trunc i128 %7773 to i32
  %7780 = and i32 %7779, 255
  %7781 = call i32 @llvm.ctpop.i32(i32 %7780)
  %7782 = trunc i32 %7781 to i8
  %7783 = and i8 %7782, 1
  %7784 = xor i8 %7783, 1
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7784, i8* %7785, align 1
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7786, align 1
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7787, align 1
  %7788 = lshr i64 %7774, 63
  %7789 = trunc i64 %7788 to i8
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7789, i8* %7790, align 1
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7777, i8* %7791, align 1
  store %struct.Memory* %loadMem_4aee3a, %struct.Memory** %MEMORY
  %loadMem_4aee3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 33
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %PC.i2014 = bitcast %union.anon* %7794 to i64*
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 9
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %RSI.i2015 = bitcast %union.anon* %7797 to i64*
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 11
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %RDI.i2016 = bitcast %union.anon* %7800 to i64*
  %7801 = load i64, i64* %RSI.i2015
  %7802 = load i64, i64* %RDI.i2016
  %7803 = load i64, i64* %PC.i2014
  %7804 = add i64 %7803, 3
  store i64 %7804, i64* %PC.i2014
  %7805 = add i64 %7802, %7801
  store i64 %7805, i64* %RSI.i2015, align 8
  %7806 = icmp ult i64 %7805, %7801
  %7807 = icmp ult i64 %7805, %7802
  %7808 = or i1 %7806, %7807
  %7809 = zext i1 %7808 to i8
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7809, i8* %7810, align 1
  %7811 = trunc i64 %7805 to i32
  %7812 = and i32 %7811, 255
  %7813 = call i32 @llvm.ctpop.i32(i32 %7812)
  %7814 = trunc i32 %7813 to i8
  %7815 = and i8 %7814, 1
  %7816 = xor i8 %7815, 1
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7816, i8* %7817, align 1
  %7818 = xor i64 %7802, %7801
  %7819 = xor i64 %7818, %7805
  %7820 = lshr i64 %7819, 4
  %7821 = trunc i64 %7820 to i8
  %7822 = and i8 %7821, 1
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7822, i8* %7823, align 1
  %7824 = icmp eq i64 %7805, 0
  %7825 = zext i1 %7824 to i8
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7825, i8* %7826, align 1
  %7827 = lshr i64 %7805, 63
  %7828 = trunc i64 %7827 to i8
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7828, i8* %7829, align 1
  %7830 = lshr i64 %7801, 63
  %7831 = lshr i64 %7802, 63
  %7832 = xor i64 %7827, %7830
  %7833 = xor i64 %7827, %7831
  %7834 = add i64 %7832, %7833
  %7835 = icmp eq i64 %7834, 2
  %7836 = zext i1 %7835 to i8
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7836, i8* %7837, align 1
  store %struct.Memory* %loadMem_4aee3e, %struct.Memory** %MEMORY
  %loadMem_4aee41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7839 = getelementptr inbounds %struct.GPR, %struct.GPR* %7838, i32 0, i32 33
  %7840 = getelementptr inbounds %struct.Reg, %struct.Reg* %7839, i32 0, i32 0
  %PC.i2011 = bitcast %union.anon* %7840 to i64*
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7842 = getelementptr inbounds %struct.GPR, %struct.GPR* %7841, i32 0, i32 11
  %7843 = getelementptr inbounds %struct.Reg, %struct.Reg* %7842, i32 0, i32 0
  %RDI.i2012 = bitcast %union.anon* %7843 to i64*
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7845 = getelementptr inbounds %struct.GPR, %struct.GPR* %7844, i32 0, i32 15
  %7846 = getelementptr inbounds %struct.Reg, %struct.Reg* %7845, i32 0, i32 0
  %RBP.i2013 = bitcast %union.anon* %7846 to i64*
  %7847 = load i64, i64* %RBP.i2013
  %7848 = sub i64 %7847, 40
  %7849 = load i64, i64* %PC.i2011
  %7850 = add i64 %7849, 4
  store i64 %7850, i64* %PC.i2011
  %7851 = inttoptr i64 %7848 to i32*
  %7852 = load i32, i32* %7851
  %7853 = sext i32 %7852 to i64
  store i64 %7853, i64* %RDI.i2012, align 8
  store %struct.Memory* %loadMem_4aee41, %struct.Memory** %MEMORY
  %loadMem_4aee45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7855 = getelementptr inbounds %struct.GPR, %struct.GPR* %7854, i32 0, i32 33
  %7856 = getelementptr inbounds %struct.Reg, %struct.Reg* %7855, i32 0, i32 0
  %PC.i2007 = bitcast %union.anon* %7856 to i64*
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7858 = getelementptr inbounds %struct.GPR, %struct.GPR* %7857, i32 0, i32 7
  %7859 = getelementptr inbounds %struct.Reg, %struct.Reg* %7858, i32 0, i32 0
  %RDX.i2008 = bitcast %union.anon* %7859 to i64*
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 9
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %RSI.i2009 = bitcast %union.anon* %7862 to i64*
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7864 = getelementptr inbounds %struct.GPR, %struct.GPR* %7863, i32 0, i32 11
  %7865 = getelementptr inbounds %struct.Reg, %struct.Reg* %7864, i32 0, i32 0
  %RDI.i2010 = bitcast %union.anon* %7865 to i64*
  %7866 = load i64, i64* %RDX.i2008
  %7867 = load i64, i64* %RSI.i2009
  %7868 = load i64, i64* %RDI.i2010
  %7869 = mul i64 %7868, 4
  %7870 = add i64 %7869, %7867
  %7871 = load i64, i64* %PC.i2007
  %7872 = add i64 %7871, 3
  store i64 %7872, i64* %PC.i2007
  %7873 = trunc i64 %7866 to i32
  %7874 = inttoptr i64 %7870 to i32*
  %7875 = load i32, i32* %7874
  %7876 = sub i32 %7873, %7875
  %7877 = zext i32 %7876 to i64
  store i64 %7877, i64* %RDX.i2008, align 8
  %7878 = icmp ult i32 %7873, %7875
  %7879 = zext i1 %7878 to i8
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7879, i8* %7880, align 1
  %7881 = and i32 %7876, 255
  %7882 = call i32 @llvm.ctpop.i32(i32 %7881)
  %7883 = trunc i32 %7882 to i8
  %7884 = and i8 %7883, 1
  %7885 = xor i8 %7884, 1
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7885, i8* %7886, align 1
  %7887 = xor i32 %7875, %7873
  %7888 = xor i32 %7887, %7876
  %7889 = lshr i32 %7888, 4
  %7890 = trunc i32 %7889 to i8
  %7891 = and i8 %7890, 1
  %7892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7891, i8* %7892, align 1
  %7893 = icmp eq i32 %7876, 0
  %7894 = zext i1 %7893 to i8
  %7895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7894, i8* %7895, align 1
  %7896 = lshr i32 %7876, 31
  %7897 = trunc i32 %7896 to i8
  %7898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7897, i8* %7898, align 1
  %7899 = lshr i32 %7873, 31
  %7900 = lshr i32 %7875, 31
  %7901 = xor i32 %7900, %7899
  %7902 = xor i32 %7896, %7899
  %7903 = add i32 %7902, %7901
  %7904 = icmp eq i32 %7903, 2
  %7905 = zext i1 %7904 to i8
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7905, i8* %7906, align 1
  store %struct.Memory* %loadMem_4aee45, %struct.Memory** %MEMORY
  %loadMem_4aee48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7908 = getelementptr inbounds %struct.GPR, %struct.GPR* %7907, i32 0, i32 33
  %7909 = getelementptr inbounds %struct.Reg, %struct.Reg* %7908, i32 0, i32 0
  %PC.i2004 = bitcast %union.anon* %7909 to i64*
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7911 = getelementptr inbounds %struct.GPR, %struct.GPR* %7910, i32 0, i32 9
  %7912 = getelementptr inbounds %struct.Reg, %struct.Reg* %7911, i32 0, i32 0
  %RSI.i2005 = bitcast %union.anon* %7912 to i64*
  %7913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7914 = getelementptr inbounds %struct.GPR, %struct.GPR* %7913, i32 0, i32 15
  %7915 = getelementptr inbounds %struct.Reg, %struct.Reg* %7914, i32 0, i32 0
  %RBP.i2006 = bitcast %union.anon* %7915 to i64*
  %7916 = load i64, i64* %RBP.i2006
  %7917 = sub i64 %7916, 4
  %7918 = load i64, i64* %PC.i2004
  %7919 = add i64 %7918, 4
  store i64 %7919, i64* %PC.i2004
  %7920 = inttoptr i64 %7917 to i32*
  %7921 = load i32, i32* %7920
  %7922 = sext i32 %7921 to i64
  store i64 %7922, i64* %RSI.i2005, align 8
  store %struct.Memory* %loadMem_4aee48, %struct.Memory** %MEMORY
  %loadMem_4aee4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 33
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %PC.i2002 = bitcast %union.anon* %7925 to i64*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 9
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RSI.i2003 = bitcast %union.anon* %7928 to i64*
  %7929 = load i64, i64* %RSI.i2003
  %7930 = load i64, i64* %PC.i2002
  %7931 = add i64 %7930, 7
  store i64 %7931, i64* %PC.i2002
  %7932 = sext i64 %7929 to i128
  %7933 = and i128 %7932, -18446744073709551616
  %7934 = zext i64 %7929 to i128
  %7935 = or i128 %7933, %7934
  %7936 = mul i128 180, %7935
  %7937 = trunc i128 %7936 to i64
  store i64 %7937, i64* %RSI.i2003, align 8
  %7938 = sext i64 %7937 to i128
  %7939 = icmp ne i128 %7938, %7936
  %7940 = zext i1 %7939 to i8
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7940, i8* %7941, align 1
  %7942 = trunc i128 %7936 to i32
  %7943 = and i32 %7942, 255
  %7944 = call i32 @llvm.ctpop.i32(i32 %7943)
  %7945 = trunc i32 %7944 to i8
  %7946 = and i8 %7945, 1
  %7947 = xor i8 %7946, 1
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7947, i8* %7948, align 1
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7949, align 1
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7950, align 1
  %7951 = lshr i64 %7937, 63
  %7952 = trunc i64 %7951 to i8
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7952, i8* %7953, align 1
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7940, i8* %7954, align 1
  store %struct.Memory* %loadMem_4aee4c, %struct.Memory** %MEMORY
  %loadMem_4aee53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7956 = getelementptr inbounds %struct.GPR, %struct.GPR* %7955, i32 0, i32 33
  %7957 = getelementptr inbounds %struct.Reg, %struct.Reg* %7956, i32 0, i32 0
  %PC.i1999 = bitcast %union.anon* %7957 to i64*
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 5
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %RCX.i2000 = bitcast %union.anon* %7960 to i64*
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7962 = getelementptr inbounds %struct.GPR, %struct.GPR* %7961, i32 0, i32 9
  %7963 = getelementptr inbounds %struct.Reg, %struct.Reg* %7962, i32 0, i32 0
  %RSI.i2001 = bitcast %union.anon* %7963 to i64*
  %7964 = load i64, i64* %RCX.i2000
  %7965 = load i64, i64* %RSI.i2001
  %7966 = load i64, i64* %PC.i1999
  %7967 = add i64 %7966, 3
  store i64 %7967, i64* %PC.i1999
  %7968 = add i64 %7965, %7964
  store i64 %7968, i64* %RCX.i2000, align 8
  %7969 = icmp ult i64 %7968, %7964
  %7970 = icmp ult i64 %7968, %7965
  %7971 = or i1 %7969, %7970
  %7972 = zext i1 %7971 to i8
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7972, i8* %7973, align 1
  %7974 = trunc i64 %7968 to i32
  %7975 = and i32 %7974, 255
  %7976 = call i32 @llvm.ctpop.i32(i32 %7975)
  %7977 = trunc i32 %7976 to i8
  %7978 = and i8 %7977, 1
  %7979 = xor i8 %7978, 1
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7979, i8* %7980, align 1
  %7981 = xor i64 %7965, %7964
  %7982 = xor i64 %7981, %7968
  %7983 = lshr i64 %7982, 4
  %7984 = trunc i64 %7983 to i8
  %7985 = and i8 %7984, 1
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7985, i8* %7986, align 1
  %7987 = icmp eq i64 %7968, 0
  %7988 = zext i1 %7987 to i8
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7988, i8* %7989, align 1
  %7990 = lshr i64 %7968, 63
  %7991 = trunc i64 %7990 to i8
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7991, i8* %7992, align 1
  %7993 = lshr i64 %7964, 63
  %7994 = lshr i64 %7965, 63
  %7995 = xor i64 %7990, %7993
  %7996 = xor i64 %7990, %7994
  %7997 = add i64 %7995, %7996
  %7998 = icmp eq i64 %7997, 2
  %7999 = zext i1 %7998 to i8
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7999, i8* %8000, align 1
  store %struct.Memory* %loadMem_4aee53, %struct.Memory** %MEMORY
  %loadMem_4aee56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 33
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %PC.i1996 = bitcast %union.anon* %8003 to i64*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 9
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %RSI.i1997 = bitcast %union.anon* %8006 to i64*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 15
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %RBP.i1998 = bitcast %union.anon* %8009 to i64*
  %8010 = load i64, i64* %RBP.i1998
  %8011 = sub i64 %8010, 8
  %8012 = load i64, i64* %PC.i1996
  %8013 = add i64 %8012, 4
  store i64 %8013, i64* %PC.i1996
  %8014 = inttoptr i64 %8011 to i32*
  %8015 = load i32, i32* %8014
  %8016 = sext i32 %8015 to i64
  store i64 %8016, i64* %RSI.i1997, align 8
  store %struct.Memory* %loadMem_4aee56, %struct.Memory** %MEMORY
  %loadMem_4aee5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 33
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %PC.i1994 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 9
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RSI.i1995 = bitcast %union.anon* %8022 to i64*
  %8023 = load i64, i64* %RSI.i1995
  %8024 = load i64, i64* %PC.i1994
  %8025 = add i64 %8024, 4
  store i64 %8025, i64* %PC.i1994
  %8026 = sext i64 %8023 to i128
  %8027 = and i128 %8026, -18446744073709551616
  %8028 = zext i64 %8023 to i128
  %8029 = or i128 %8027, %8028
  %8030 = mul i128 12, %8029
  %8031 = trunc i128 %8030 to i64
  store i64 %8031, i64* %RSI.i1995, align 8
  %8032 = sext i64 %8031 to i128
  %8033 = icmp ne i128 %8032, %8030
  %8034 = zext i1 %8033 to i8
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8034, i8* %8035, align 1
  %8036 = trunc i128 %8030 to i32
  %8037 = and i32 %8036, 255
  %8038 = call i32 @llvm.ctpop.i32(i32 %8037)
  %8039 = trunc i32 %8038 to i8
  %8040 = and i8 %8039, 1
  %8041 = xor i8 %8040, 1
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8041, i8* %8042, align 1
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8043, align 1
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8044, align 1
  %8045 = lshr i64 %8031, 63
  %8046 = trunc i64 %8045 to i8
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8046, i8* %8047, align 1
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8034, i8* %8048, align 1
  store %struct.Memory* %loadMem_4aee5a, %struct.Memory** %MEMORY
  %loadMem_4aee5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8050 = getelementptr inbounds %struct.GPR, %struct.GPR* %8049, i32 0, i32 33
  %8051 = getelementptr inbounds %struct.Reg, %struct.Reg* %8050, i32 0, i32 0
  %PC.i1991 = bitcast %union.anon* %8051 to i64*
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8053 = getelementptr inbounds %struct.GPR, %struct.GPR* %8052, i32 0, i32 5
  %8054 = getelementptr inbounds %struct.Reg, %struct.Reg* %8053, i32 0, i32 0
  %RCX.i1992 = bitcast %union.anon* %8054 to i64*
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8056 = getelementptr inbounds %struct.GPR, %struct.GPR* %8055, i32 0, i32 9
  %8057 = getelementptr inbounds %struct.Reg, %struct.Reg* %8056, i32 0, i32 0
  %RSI.i1993 = bitcast %union.anon* %8057 to i64*
  %8058 = load i64, i64* %RCX.i1992
  %8059 = load i64, i64* %RSI.i1993
  %8060 = load i64, i64* %PC.i1991
  %8061 = add i64 %8060, 3
  store i64 %8061, i64* %PC.i1991
  %8062 = add i64 %8059, %8058
  store i64 %8062, i64* %RCX.i1992, align 8
  %8063 = icmp ult i64 %8062, %8058
  %8064 = icmp ult i64 %8062, %8059
  %8065 = or i1 %8063, %8064
  %8066 = zext i1 %8065 to i8
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8066, i8* %8067, align 1
  %8068 = trunc i64 %8062 to i32
  %8069 = and i32 %8068, 255
  %8070 = call i32 @llvm.ctpop.i32(i32 %8069)
  %8071 = trunc i32 %8070 to i8
  %8072 = and i8 %8071, 1
  %8073 = xor i8 %8072, 1
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8073, i8* %8074, align 1
  %8075 = xor i64 %8059, %8058
  %8076 = xor i64 %8075, %8062
  %8077 = lshr i64 %8076, 4
  %8078 = trunc i64 %8077 to i8
  %8079 = and i8 %8078, 1
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8079, i8* %8080, align 1
  %8081 = icmp eq i64 %8062, 0
  %8082 = zext i1 %8081 to i8
  %8083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8082, i8* %8083, align 1
  %8084 = lshr i64 %8062, 63
  %8085 = trunc i64 %8084 to i8
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8085, i8* %8086, align 1
  %8087 = lshr i64 %8058, 63
  %8088 = lshr i64 %8059, 63
  %8089 = xor i64 %8084, %8087
  %8090 = xor i64 %8084, %8088
  %8091 = add i64 %8089, %8090
  %8092 = icmp eq i64 %8091, 2
  %8093 = zext i1 %8092 to i8
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8093, i8* %8094, align 1
  store %struct.Memory* %loadMem_4aee5e, %struct.Memory** %MEMORY
  %loadMem_4aee61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8096 = getelementptr inbounds %struct.GPR, %struct.GPR* %8095, i32 0, i32 33
  %8097 = getelementptr inbounds %struct.Reg, %struct.Reg* %8096, i32 0, i32 0
  %PC.i1988 = bitcast %union.anon* %8097 to i64*
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 9
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %RSI.i1989 = bitcast %union.anon* %8100 to i64*
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 15
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %RBP.i1990 = bitcast %union.anon* %8103 to i64*
  %8104 = load i64, i64* %RBP.i1990
  %8105 = sub i64 %8104, 40
  %8106 = load i64, i64* %PC.i1988
  %8107 = add i64 %8106, 4
  store i64 %8107, i64* %PC.i1988
  %8108 = inttoptr i64 %8105 to i32*
  %8109 = load i32, i32* %8108
  %8110 = sext i32 %8109 to i64
  store i64 %8110, i64* %RSI.i1989, align 8
  store %struct.Memory* %loadMem_4aee61, %struct.Memory** %MEMORY
  %loadMem_4aee65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8112 = getelementptr inbounds %struct.GPR, %struct.GPR* %8111, i32 0, i32 33
  %8113 = getelementptr inbounds %struct.Reg, %struct.Reg* %8112, i32 0, i32 0
  %PC.i1984 = bitcast %union.anon* %8113 to i64*
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8115 = getelementptr inbounds %struct.GPR, %struct.GPR* %8114, i32 0, i32 7
  %8116 = getelementptr inbounds %struct.Reg, %struct.Reg* %8115, i32 0, i32 0
  %EDX.i1985 = bitcast %union.anon* %8116 to i32*
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8118 = getelementptr inbounds %struct.GPR, %struct.GPR* %8117, i32 0, i32 5
  %8119 = getelementptr inbounds %struct.Reg, %struct.Reg* %8118, i32 0, i32 0
  %RCX.i1986 = bitcast %union.anon* %8119 to i64*
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8121 = getelementptr inbounds %struct.GPR, %struct.GPR* %8120, i32 0, i32 9
  %8122 = getelementptr inbounds %struct.Reg, %struct.Reg* %8121, i32 0, i32 0
  %RSI.i1987 = bitcast %union.anon* %8122 to i64*
  %8123 = load i64, i64* %RCX.i1986
  %8124 = load i64, i64* %RSI.i1987
  %8125 = mul i64 %8124, 4
  %8126 = add i64 %8125, %8123
  %8127 = load i32, i32* %EDX.i1985
  %8128 = zext i32 %8127 to i64
  %8129 = load i64, i64* %PC.i1984
  %8130 = add i64 %8129, 3
  store i64 %8130, i64* %PC.i1984
  %8131 = inttoptr i64 %8126 to i32*
  store i32 %8127, i32* %8131
  store %struct.Memory* %loadMem_4aee65, %struct.Memory** %MEMORY
  %loadMem_4aee68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8133 = getelementptr inbounds %struct.GPR, %struct.GPR* %8132, i32 0, i32 33
  %8134 = getelementptr inbounds %struct.Reg, %struct.Reg* %8133, i32 0, i32 0
  %PC.i1981 = bitcast %union.anon* %8134 to i64*
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8136 = getelementptr inbounds %struct.GPR, %struct.GPR* %8135, i32 0, i32 1
  %8137 = getelementptr inbounds %struct.Reg, %struct.Reg* %8136, i32 0, i32 0
  %RAX.i1982 = bitcast %union.anon* %8137 to i64*
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8139 = getelementptr inbounds %struct.GPR, %struct.GPR* %8138, i32 0, i32 5
  %8140 = getelementptr inbounds %struct.Reg, %struct.Reg* %8139, i32 0, i32 0
  %RCX.i1983 = bitcast %union.anon* %8140 to i64*
  %8141 = load i64, i64* %RAX.i1982
  %8142 = load i64, i64* %PC.i1981
  %8143 = add i64 %8142, 3
  store i64 %8143, i64* %PC.i1981
  store i64 %8141, i64* %RCX.i1983, align 8
  store %struct.Memory* %loadMem_4aee68, %struct.Memory** %MEMORY
  %loadMem_4aee6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8145 = getelementptr inbounds %struct.GPR, %struct.GPR* %8144, i32 0, i32 33
  %8146 = getelementptr inbounds %struct.Reg, %struct.Reg* %8145, i32 0, i32 0
  %PC.i1979 = bitcast %union.anon* %8146 to i64*
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8148 = getelementptr inbounds %struct.GPR, %struct.GPR* %8147, i32 0, i32 5
  %8149 = getelementptr inbounds %struct.Reg, %struct.Reg* %8148, i32 0, i32 0
  %RCX.i1980 = bitcast %union.anon* %8149 to i64*
  %8150 = load i64, i64* %RCX.i1980
  %8151 = load i64, i64* %PC.i1979
  %8152 = add i64 %8151, 7
  store i64 %8152, i64* %PC.i1979
  %8153 = add i64 2700, %8150
  store i64 %8153, i64* %RCX.i1980, align 8
  %8154 = icmp ult i64 %8153, %8150
  %8155 = icmp ult i64 %8153, 2700
  %8156 = or i1 %8154, %8155
  %8157 = zext i1 %8156 to i8
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8157, i8* %8158, align 1
  %8159 = trunc i64 %8153 to i32
  %8160 = and i32 %8159, 255
  %8161 = call i32 @llvm.ctpop.i32(i32 %8160)
  %8162 = trunc i32 %8161 to i8
  %8163 = and i8 %8162, 1
  %8164 = xor i8 %8163, 1
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8164, i8* %8165, align 1
  %8166 = xor i64 2700, %8150
  %8167 = xor i64 %8166, %8153
  %8168 = lshr i64 %8167, 4
  %8169 = trunc i64 %8168 to i8
  %8170 = and i8 %8169, 1
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8170, i8* %8171, align 1
  %8172 = icmp eq i64 %8153, 0
  %8173 = zext i1 %8172 to i8
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8173, i8* %8174, align 1
  %8175 = lshr i64 %8153, 63
  %8176 = trunc i64 %8175 to i8
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8176, i8* %8177, align 1
  %8178 = lshr i64 %8150, 63
  %8179 = xor i64 %8175, %8178
  %8180 = add i64 %8179, %8175
  %8181 = icmp eq i64 %8180, 2
  %8182 = zext i1 %8181 to i8
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8182, i8* %8183, align 1
  store %struct.Memory* %loadMem_4aee6b, %struct.Memory** %MEMORY
  %loadMem_4aee72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 33
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %PC.i1976 = bitcast %union.anon* %8186 to i64*
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 9
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %RSI.i1977 = bitcast %union.anon* %8189 to i64*
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8191 = getelementptr inbounds %struct.GPR, %struct.GPR* %8190, i32 0, i32 15
  %8192 = getelementptr inbounds %struct.Reg, %struct.Reg* %8191, i32 0, i32 0
  %RBP.i1978 = bitcast %union.anon* %8192 to i64*
  %8193 = load i64, i64* %RBP.i1978
  %8194 = sub i64 %8193, 4
  %8195 = load i64, i64* %PC.i1976
  %8196 = add i64 %8195, 4
  store i64 %8196, i64* %PC.i1976
  %8197 = inttoptr i64 %8194 to i32*
  %8198 = load i32, i32* %8197
  %8199 = sext i32 %8198 to i64
  store i64 %8199, i64* %RSI.i1977, align 8
  store %struct.Memory* %loadMem_4aee72, %struct.Memory** %MEMORY
  %loadMem_4aee76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8201 = getelementptr inbounds %struct.GPR, %struct.GPR* %8200, i32 0, i32 33
  %8202 = getelementptr inbounds %struct.Reg, %struct.Reg* %8201, i32 0, i32 0
  %PC.i1974 = bitcast %union.anon* %8202 to i64*
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8204 = getelementptr inbounds %struct.GPR, %struct.GPR* %8203, i32 0, i32 9
  %8205 = getelementptr inbounds %struct.Reg, %struct.Reg* %8204, i32 0, i32 0
  %RSI.i1975 = bitcast %union.anon* %8205 to i64*
  %8206 = load i64, i64* %RSI.i1975
  %8207 = load i64, i64* %PC.i1974
  %8208 = add i64 %8207, 7
  store i64 %8208, i64* %PC.i1974
  %8209 = sext i64 %8206 to i128
  %8210 = and i128 %8209, -18446744073709551616
  %8211 = zext i64 %8206 to i128
  %8212 = or i128 %8210, %8211
  %8213 = mul i128 180, %8212
  %8214 = trunc i128 %8213 to i64
  store i64 %8214, i64* %RSI.i1975, align 8
  %8215 = sext i64 %8214 to i128
  %8216 = icmp ne i128 %8215, %8213
  %8217 = zext i1 %8216 to i8
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8217, i8* %8218, align 1
  %8219 = trunc i128 %8213 to i32
  %8220 = and i32 %8219, 255
  %8221 = call i32 @llvm.ctpop.i32(i32 %8220)
  %8222 = trunc i32 %8221 to i8
  %8223 = and i8 %8222, 1
  %8224 = xor i8 %8223, 1
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8224, i8* %8225, align 1
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8226, align 1
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8227, align 1
  %8228 = lshr i64 %8214, 63
  %8229 = trunc i64 %8228 to i8
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8229, i8* %8230, align 1
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8217, i8* %8231, align 1
  store %struct.Memory* %loadMem_4aee76, %struct.Memory** %MEMORY
  %loadMem_4aee7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 33
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %PC.i1971 = bitcast %union.anon* %8234 to i64*
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 5
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %RCX.i1972 = bitcast %union.anon* %8237 to i64*
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8239 = getelementptr inbounds %struct.GPR, %struct.GPR* %8238, i32 0, i32 9
  %8240 = getelementptr inbounds %struct.Reg, %struct.Reg* %8239, i32 0, i32 0
  %RSI.i1973 = bitcast %union.anon* %8240 to i64*
  %8241 = load i64, i64* %RCX.i1972
  %8242 = load i64, i64* %RSI.i1973
  %8243 = load i64, i64* %PC.i1971
  %8244 = add i64 %8243, 3
  store i64 %8244, i64* %PC.i1971
  %8245 = add i64 %8242, %8241
  store i64 %8245, i64* %RCX.i1972, align 8
  %8246 = icmp ult i64 %8245, %8241
  %8247 = icmp ult i64 %8245, %8242
  %8248 = or i1 %8246, %8247
  %8249 = zext i1 %8248 to i8
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8249, i8* %8250, align 1
  %8251 = trunc i64 %8245 to i32
  %8252 = and i32 %8251, 255
  %8253 = call i32 @llvm.ctpop.i32(i32 %8252)
  %8254 = trunc i32 %8253 to i8
  %8255 = and i8 %8254, 1
  %8256 = xor i8 %8255, 1
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8256, i8* %8257, align 1
  %8258 = xor i64 %8242, %8241
  %8259 = xor i64 %8258, %8245
  %8260 = lshr i64 %8259, 4
  %8261 = trunc i64 %8260 to i8
  %8262 = and i8 %8261, 1
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8262, i8* %8263, align 1
  %8264 = icmp eq i64 %8245, 0
  %8265 = zext i1 %8264 to i8
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8265, i8* %8266, align 1
  %8267 = lshr i64 %8245, 63
  %8268 = trunc i64 %8267 to i8
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8268, i8* %8269, align 1
  %8270 = lshr i64 %8241, 63
  %8271 = lshr i64 %8242, 63
  %8272 = xor i64 %8267, %8270
  %8273 = xor i64 %8267, %8271
  %8274 = add i64 %8272, %8273
  %8275 = icmp eq i64 %8274, 2
  %8276 = zext i1 %8275 to i8
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8276, i8* %8277, align 1
  store %struct.Memory* %loadMem_4aee7d, %struct.Memory** %MEMORY
  %loadMem_4aee80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8279 = getelementptr inbounds %struct.GPR, %struct.GPR* %8278, i32 0, i32 33
  %8280 = getelementptr inbounds %struct.Reg, %struct.Reg* %8279, i32 0, i32 0
  %PC.i1968 = bitcast %union.anon* %8280 to i64*
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8282 = getelementptr inbounds %struct.GPR, %struct.GPR* %8281, i32 0, i32 9
  %8283 = getelementptr inbounds %struct.Reg, %struct.Reg* %8282, i32 0, i32 0
  %RSI.i1969 = bitcast %union.anon* %8283 to i64*
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8285 = getelementptr inbounds %struct.GPR, %struct.GPR* %8284, i32 0, i32 15
  %8286 = getelementptr inbounds %struct.Reg, %struct.Reg* %8285, i32 0, i32 0
  %RBP.i1970 = bitcast %union.anon* %8286 to i64*
  %8287 = load i64, i64* %RBP.i1970
  %8288 = sub i64 %8287, 8
  %8289 = load i64, i64* %PC.i1968
  %8290 = add i64 %8289, 4
  store i64 %8290, i64* %PC.i1968
  %8291 = inttoptr i64 %8288 to i32*
  %8292 = load i32, i32* %8291
  %8293 = sext i32 %8292 to i64
  store i64 %8293, i64* %RSI.i1969, align 8
  store %struct.Memory* %loadMem_4aee80, %struct.Memory** %MEMORY
  %loadMem_4aee84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8295 = getelementptr inbounds %struct.GPR, %struct.GPR* %8294, i32 0, i32 33
  %8296 = getelementptr inbounds %struct.Reg, %struct.Reg* %8295, i32 0, i32 0
  %PC.i1966 = bitcast %union.anon* %8296 to i64*
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 9
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %RSI.i1967 = bitcast %union.anon* %8299 to i64*
  %8300 = load i64, i64* %RSI.i1967
  %8301 = load i64, i64* %PC.i1966
  %8302 = add i64 %8301, 4
  store i64 %8302, i64* %PC.i1966
  %8303 = sext i64 %8300 to i128
  %8304 = and i128 %8303, -18446744073709551616
  %8305 = zext i64 %8300 to i128
  %8306 = or i128 %8304, %8305
  %8307 = mul i128 12, %8306
  %8308 = trunc i128 %8307 to i64
  store i64 %8308, i64* %RSI.i1967, align 8
  %8309 = sext i64 %8308 to i128
  %8310 = icmp ne i128 %8309, %8307
  %8311 = zext i1 %8310 to i8
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8311, i8* %8312, align 1
  %8313 = trunc i128 %8307 to i32
  %8314 = and i32 %8313, 255
  %8315 = call i32 @llvm.ctpop.i32(i32 %8314)
  %8316 = trunc i32 %8315 to i8
  %8317 = and i8 %8316, 1
  %8318 = xor i8 %8317, 1
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8318, i8* %8319, align 1
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8320, align 1
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8321, align 1
  %8322 = lshr i64 %8308, 63
  %8323 = trunc i64 %8322 to i8
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8323, i8* %8324, align 1
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8311, i8* %8325, align 1
  store %struct.Memory* %loadMem_4aee84, %struct.Memory** %MEMORY
  %loadMem_4aee88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8327 = getelementptr inbounds %struct.GPR, %struct.GPR* %8326, i32 0, i32 33
  %8328 = getelementptr inbounds %struct.Reg, %struct.Reg* %8327, i32 0, i32 0
  %PC.i1963 = bitcast %union.anon* %8328 to i64*
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 5
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %RCX.i1964 = bitcast %union.anon* %8331 to i64*
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8333 = getelementptr inbounds %struct.GPR, %struct.GPR* %8332, i32 0, i32 9
  %8334 = getelementptr inbounds %struct.Reg, %struct.Reg* %8333, i32 0, i32 0
  %RSI.i1965 = bitcast %union.anon* %8334 to i64*
  %8335 = load i64, i64* %RCX.i1964
  %8336 = load i64, i64* %RSI.i1965
  %8337 = load i64, i64* %PC.i1963
  %8338 = add i64 %8337, 3
  store i64 %8338, i64* %PC.i1963
  %8339 = add i64 %8336, %8335
  store i64 %8339, i64* %RCX.i1964, align 8
  %8340 = icmp ult i64 %8339, %8335
  %8341 = icmp ult i64 %8339, %8336
  %8342 = or i1 %8340, %8341
  %8343 = zext i1 %8342 to i8
  %8344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8343, i8* %8344, align 1
  %8345 = trunc i64 %8339 to i32
  %8346 = and i32 %8345, 255
  %8347 = call i32 @llvm.ctpop.i32(i32 %8346)
  %8348 = trunc i32 %8347 to i8
  %8349 = and i8 %8348, 1
  %8350 = xor i8 %8349, 1
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8350, i8* %8351, align 1
  %8352 = xor i64 %8336, %8335
  %8353 = xor i64 %8352, %8339
  %8354 = lshr i64 %8353, 4
  %8355 = trunc i64 %8354 to i8
  %8356 = and i8 %8355, 1
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8356, i8* %8357, align 1
  %8358 = icmp eq i64 %8339, 0
  %8359 = zext i1 %8358 to i8
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8359, i8* %8360, align 1
  %8361 = lshr i64 %8339, 63
  %8362 = trunc i64 %8361 to i8
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8362, i8* %8363, align 1
  %8364 = lshr i64 %8335, 63
  %8365 = lshr i64 %8336, 63
  %8366 = xor i64 %8361, %8364
  %8367 = xor i64 %8361, %8365
  %8368 = add i64 %8366, %8367
  %8369 = icmp eq i64 %8368, 2
  %8370 = zext i1 %8369 to i8
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8370, i8* %8371, align 1
  store %struct.Memory* %loadMem_4aee88, %struct.Memory** %MEMORY
  %loadMem_4aee8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 33
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %PC.i1960 = bitcast %union.anon* %8374 to i64*
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8376 = getelementptr inbounds %struct.GPR, %struct.GPR* %8375, i32 0, i32 9
  %8377 = getelementptr inbounds %struct.Reg, %struct.Reg* %8376, i32 0, i32 0
  %RSI.i1961 = bitcast %union.anon* %8377 to i64*
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8379 = getelementptr inbounds %struct.GPR, %struct.GPR* %8378, i32 0, i32 15
  %8380 = getelementptr inbounds %struct.Reg, %struct.Reg* %8379, i32 0, i32 0
  %RBP.i1962 = bitcast %union.anon* %8380 to i64*
  %8381 = load i64, i64* %RBP.i1962
  %8382 = sub i64 %8381, 40
  %8383 = load i64, i64* %PC.i1960
  %8384 = add i64 %8383, 4
  store i64 %8384, i64* %PC.i1960
  %8385 = inttoptr i64 %8382 to i32*
  %8386 = load i32, i32* %8385
  %8387 = sext i32 %8386 to i64
  store i64 %8387, i64* %RSI.i1961, align 8
  store %struct.Memory* %loadMem_4aee8b, %struct.Memory** %MEMORY
  %loadMem_4aee8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8389 = getelementptr inbounds %struct.GPR, %struct.GPR* %8388, i32 0, i32 33
  %8390 = getelementptr inbounds %struct.Reg, %struct.Reg* %8389, i32 0, i32 0
  %PC.i1957 = bitcast %union.anon* %8390 to i64*
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 5
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %RCX.i1958 = bitcast %union.anon* %8393 to i64*
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 9
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %RSI.i1959 = bitcast %union.anon* %8396 to i64*
  %8397 = load i64, i64* %RCX.i1958
  %8398 = load i64, i64* %RSI.i1959
  %8399 = mul i64 %8398, 4
  %8400 = add i64 %8399, %8397
  %8401 = load i64, i64* %PC.i1957
  %8402 = add i64 %8401, 7
  store i64 %8402, i64* %PC.i1957
  %8403 = inttoptr i64 %8400 to i32*
  store i32 0, i32* %8403
  store %struct.Memory* %loadMem_4aee8f, %struct.Memory** %MEMORY
  %loadMem_4aee96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8405 = getelementptr inbounds %struct.GPR, %struct.GPR* %8404, i32 0, i32 33
  %8406 = getelementptr inbounds %struct.Reg, %struct.Reg* %8405, i32 0, i32 0
  %PC.i1954 = bitcast %union.anon* %8406 to i64*
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8408 = getelementptr inbounds %struct.GPR, %struct.GPR* %8407, i32 0, i32 5
  %8409 = getelementptr inbounds %struct.Reg, %struct.Reg* %8408, i32 0, i32 0
  %RCX.i1955 = bitcast %union.anon* %8409 to i64*
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8411 = getelementptr inbounds %struct.GPR, %struct.GPR* %8410, i32 0, i32 15
  %8412 = getelementptr inbounds %struct.Reg, %struct.Reg* %8411, i32 0, i32 0
  %RBP.i1956 = bitcast %union.anon* %8412 to i64*
  %8413 = load i64, i64* %RBP.i1956
  %8414 = sub i64 %8413, 4
  %8415 = load i64, i64* %PC.i1954
  %8416 = add i64 %8415, 4
  store i64 %8416, i64* %PC.i1954
  %8417 = inttoptr i64 %8414 to i32*
  %8418 = load i32, i32* %8417
  %8419 = sext i32 %8418 to i64
  store i64 %8419, i64* %RCX.i1955, align 8
  store %struct.Memory* %loadMem_4aee96, %struct.Memory** %MEMORY
  %loadMem_4aee9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 33
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %PC.i1952 = bitcast %union.anon* %8422 to i64*
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8424 = getelementptr inbounds %struct.GPR, %struct.GPR* %8423, i32 0, i32 5
  %8425 = getelementptr inbounds %struct.Reg, %struct.Reg* %8424, i32 0, i32 0
  %RCX.i1953 = bitcast %union.anon* %8425 to i64*
  %8426 = load i64, i64* %RCX.i1953
  %8427 = load i64, i64* %PC.i1952
  %8428 = add i64 %8427, 7
  store i64 %8428, i64* %PC.i1952
  %8429 = sext i64 %8426 to i128
  %8430 = and i128 %8429, -18446744073709551616
  %8431 = zext i64 %8426 to i128
  %8432 = or i128 %8430, %8431
  %8433 = mul i128 180, %8432
  %8434 = trunc i128 %8433 to i64
  store i64 %8434, i64* %RCX.i1953, align 8
  %8435 = sext i64 %8434 to i128
  %8436 = icmp ne i128 %8435, %8433
  %8437 = zext i1 %8436 to i8
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8437, i8* %8438, align 1
  %8439 = trunc i128 %8433 to i32
  %8440 = and i32 %8439, 255
  %8441 = call i32 @llvm.ctpop.i32(i32 %8440)
  %8442 = trunc i32 %8441 to i8
  %8443 = and i8 %8442, 1
  %8444 = xor i8 %8443, 1
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8444, i8* %8445, align 1
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8446, align 1
  %8447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8447, align 1
  %8448 = lshr i64 %8434, 63
  %8449 = trunc i64 %8448 to i8
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8449, i8* %8450, align 1
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8437, i8* %8451, align 1
  store %struct.Memory* %loadMem_4aee9a, %struct.Memory** %MEMORY
  %loadMem_4aeea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 33
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %PC.i1949 = bitcast %union.anon* %8454 to i64*
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 1
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %RAX.i1950 = bitcast %union.anon* %8457 to i64*
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 5
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %RCX.i1951 = bitcast %union.anon* %8460 to i64*
  %8461 = load i64, i64* %RAX.i1950
  %8462 = load i64, i64* %RCX.i1951
  %8463 = load i64, i64* %PC.i1949
  %8464 = add i64 %8463, 3
  store i64 %8464, i64* %PC.i1949
  %8465 = add i64 %8462, %8461
  store i64 %8465, i64* %RAX.i1950, align 8
  %8466 = icmp ult i64 %8465, %8461
  %8467 = icmp ult i64 %8465, %8462
  %8468 = or i1 %8466, %8467
  %8469 = zext i1 %8468 to i8
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8469, i8* %8470, align 1
  %8471 = trunc i64 %8465 to i32
  %8472 = and i32 %8471, 255
  %8473 = call i32 @llvm.ctpop.i32(i32 %8472)
  %8474 = trunc i32 %8473 to i8
  %8475 = and i8 %8474, 1
  %8476 = xor i8 %8475, 1
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8476, i8* %8477, align 1
  %8478 = xor i64 %8462, %8461
  %8479 = xor i64 %8478, %8465
  %8480 = lshr i64 %8479, 4
  %8481 = trunc i64 %8480 to i8
  %8482 = and i8 %8481, 1
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8482, i8* %8483, align 1
  %8484 = icmp eq i64 %8465, 0
  %8485 = zext i1 %8484 to i8
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8485, i8* %8486, align 1
  %8487 = lshr i64 %8465, 63
  %8488 = trunc i64 %8487 to i8
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8488, i8* %8489, align 1
  %8490 = lshr i64 %8461, 63
  %8491 = lshr i64 %8462, 63
  %8492 = xor i64 %8487, %8490
  %8493 = xor i64 %8487, %8491
  %8494 = add i64 %8492, %8493
  %8495 = icmp eq i64 %8494, 2
  %8496 = zext i1 %8495 to i8
  %8497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8496, i8* %8497, align 1
  store %struct.Memory* %loadMem_4aeea1, %struct.Memory** %MEMORY
  %loadMem_4aeea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8499 = getelementptr inbounds %struct.GPR, %struct.GPR* %8498, i32 0, i32 33
  %8500 = getelementptr inbounds %struct.Reg, %struct.Reg* %8499, i32 0, i32 0
  %PC.i1946 = bitcast %union.anon* %8500 to i64*
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 5
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %RCX.i1947 = bitcast %union.anon* %8503 to i64*
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8505 = getelementptr inbounds %struct.GPR, %struct.GPR* %8504, i32 0, i32 15
  %8506 = getelementptr inbounds %struct.Reg, %struct.Reg* %8505, i32 0, i32 0
  %RBP.i1948 = bitcast %union.anon* %8506 to i64*
  %8507 = load i64, i64* %RBP.i1948
  %8508 = sub i64 %8507, 8
  %8509 = load i64, i64* %PC.i1946
  %8510 = add i64 %8509, 4
  store i64 %8510, i64* %PC.i1946
  %8511 = inttoptr i64 %8508 to i32*
  %8512 = load i32, i32* %8511
  %8513 = sext i32 %8512 to i64
  store i64 %8513, i64* %RCX.i1947, align 8
  store %struct.Memory* %loadMem_4aeea4, %struct.Memory** %MEMORY
  %loadMem_4aeea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8515 = getelementptr inbounds %struct.GPR, %struct.GPR* %8514, i32 0, i32 33
  %8516 = getelementptr inbounds %struct.Reg, %struct.Reg* %8515, i32 0, i32 0
  %PC.i1944 = bitcast %union.anon* %8516 to i64*
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8518 = getelementptr inbounds %struct.GPR, %struct.GPR* %8517, i32 0, i32 5
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %RCX.i1945 = bitcast %union.anon* %8519 to i64*
  %8520 = load i64, i64* %RCX.i1945
  %8521 = load i64, i64* %PC.i1944
  %8522 = add i64 %8521, 4
  store i64 %8522, i64* %PC.i1944
  %8523 = sext i64 %8520 to i128
  %8524 = and i128 %8523, -18446744073709551616
  %8525 = zext i64 %8520 to i128
  %8526 = or i128 %8524, %8525
  %8527 = mul i128 12, %8526
  %8528 = trunc i128 %8527 to i64
  store i64 %8528, i64* %RCX.i1945, align 8
  %8529 = sext i64 %8528 to i128
  %8530 = icmp ne i128 %8529, %8527
  %8531 = zext i1 %8530 to i8
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8531, i8* %8532, align 1
  %8533 = trunc i128 %8527 to i32
  %8534 = and i32 %8533, 255
  %8535 = call i32 @llvm.ctpop.i32(i32 %8534)
  %8536 = trunc i32 %8535 to i8
  %8537 = and i8 %8536, 1
  %8538 = xor i8 %8537, 1
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8538, i8* %8539, align 1
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8540, align 1
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8541, align 1
  %8542 = lshr i64 %8528, 63
  %8543 = trunc i64 %8542 to i8
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8543, i8* %8544, align 1
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8531, i8* %8545, align 1
  store %struct.Memory* %loadMem_4aeea8, %struct.Memory** %MEMORY
  %loadMem_4aeeac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 33
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %PC.i1941 = bitcast %union.anon* %8548 to i64*
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 1
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %RAX.i1942 = bitcast %union.anon* %8551 to i64*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 5
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %RCX.i1943 = bitcast %union.anon* %8554 to i64*
  %8555 = load i64, i64* %RAX.i1942
  %8556 = load i64, i64* %RCX.i1943
  %8557 = load i64, i64* %PC.i1941
  %8558 = add i64 %8557, 3
  store i64 %8558, i64* %PC.i1941
  %8559 = add i64 %8556, %8555
  store i64 %8559, i64* %RAX.i1942, align 8
  %8560 = icmp ult i64 %8559, %8555
  %8561 = icmp ult i64 %8559, %8556
  %8562 = or i1 %8560, %8561
  %8563 = zext i1 %8562 to i8
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8563, i8* %8564, align 1
  %8565 = trunc i64 %8559 to i32
  %8566 = and i32 %8565, 255
  %8567 = call i32 @llvm.ctpop.i32(i32 %8566)
  %8568 = trunc i32 %8567 to i8
  %8569 = and i8 %8568, 1
  %8570 = xor i8 %8569, 1
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8570, i8* %8571, align 1
  %8572 = xor i64 %8556, %8555
  %8573 = xor i64 %8572, %8559
  %8574 = lshr i64 %8573, 4
  %8575 = trunc i64 %8574 to i8
  %8576 = and i8 %8575, 1
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8576, i8* %8577, align 1
  %8578 = icmp eq i64 %8559, 0
  %8579 = zext i1 %8578 to i8
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8579, i8* %8580, align 1
  %8581 = lshr i64 %8559, 63
  %8582 = trunc i64 %8581 to i8
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8582, i8* %8583, align 1
  %8584 = lshr i64 %8555, 63
  %8585 = lshr i64 %8556, 63
  %8586 = xor i64 %8581, %8584
  %8587 = xor i64 %8581, %8585
  %8588 = add i64 %8586, %8587
  %8589 = icmp eq i64 %8588, 2
  %8590 = zext i1 %8589 to i8
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8590, i8* %8591, align 1
  store %struct.Memory* %loadMem_4aeeac, %struct.Memory** %MEMORY
  %loadMem_4aeeaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8593 = getelementptr inbounds %struct.GPR, %struct.GPR* %8592, i32 0, i32 33
  %8594 = getelementptr inbounds %struct.Reg, %struct.Reg* %8593, i32 0, i32 0
  %PC.i1938 = bitcast %union.anon* %8594 to i64*
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8596 = getelementptr inbounds %struct.GPR, %struct.GPR* %8595, i32 0, i32 5
  %8597 = getelementptr inbounds %struct.Reg, %struct.Reg* %8596, i32 0, i32 0
  %RCX.i1939 = bitcast %union.anon* %8597 to i64*
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8599 = getelementptr inbounds %struct.GPR, %struct.GPR* %8598, i32 0, i32 15
  %8600 = getelementptr inbounds %struct.Reg, %struct.Reg* %8599, i32 0, i32 0
  %RBP.i1940 = bitcast %union.anon* %8600 to i64*
  %8601 = load i64, i64* %RBP.i1940
  %8602 = sub i64 %8601, 40
  %8603 = load i64, i64* %PC.i1938
  %8604 = add i64 %8603, 4
  store i64 %8604, i64* %PC.i1938
  %8605 = inttoptr i64 %8602 to i32*
  %8606 = load i32, i32* %8605
  %8607 = sext i32 %8606 to i64
  store i64 %8607, i64* %RCX.i1939, align 8
  store %struct.Memory* %loadMem_4aeeaf, %struct.Memory** %MEMORY
  %loadMem_4aeeb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i1935 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 1
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %RAX.i1936 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 5
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RCX.i1937 = bitcast %union.anon* %8616 to i64*
  %8617 = load i64, i64* %RAX.i1936
  %8618 = load i64, i64* %RCX.i1937
  %8619 = mul i64 %8618, 4
  %8620 = add i64 %8619, %8617
  %8621 = load i64, i64* %PC.i1935
  %8622 = add i64 %8621, 7
  store i64 %8622, i64* %PC.i1935
  %8623 = inttoptr i64 %8620 to i32*
  store i32 0, i32* %8623
  store %struct.Memory* %loadMem_4aeeb3, %struct.Memory** %MEMORY
  br label %block_.L_4aeeba

block_.L_4aeeba:                                  ; preds = %block_.L_4aee0b, %block_4aebbf
  %loadMem_4aeeba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 33
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %PC.i1934 = bitcast %union.anon* %8626 to i64*
  %8627 = load i64, i64* %PC.i1934
  %8628 = add i64 %8627, 5
  %8629 = load i64, i64* %PC.i1934
  %8630 = add i64 %8629, 5
  store i64 %8630, i64* %PC.i1934
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8628, i64* %8631, align 8
  store %struct.Memory* %loadMem_4aeeba, %struct.Memory** %MEMORY
  br label %block_.L_4aeebf

block_.L_4aeebf:                                  ; preds = %block_.L_4aeeba
  %loadMem_4aeebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8633 = getelementptr inbounds %struct.GPR, %struct.GPR* %8632, i32 0, i32 33
  %8634 = getelementptr inbounds %struct.Reg, %struct.Reg* %8633, i32 0, i32 0
  %PC.i1931 = bitcast %union.anon* %8634 to i64*
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8636 = getelementptr inbounds %struct.GPR, %struct.GPR* %8635, i32 0, i32 1
  %8637 = getelementptr inbounds %struct.Reg, %struct.Reg* %8636, i32 0, i32 0
  %RAX.i1932 = bitcast %union.anon* %8637 to i64*
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8639 = getelementptr inbounds %struct.GPR, %struct.GPR* %8638, i32 0, i32 15
  %8640 = getelementptr inbounds %struct.Reg, %struct.Reg* %8639, i32 0, i32 0
  %RBP.i1933 = bitcast %union.anon* %8640 to i64*
  %8641 = load i64, i64* %RBP.i1933
  %8642 = sub i64 %8641, 40
  %8643 = load i64, i64* %PC.i1931
  %8644 = add i64 %8643, 3
  store i64 %8644, i64* %PC.i1931
  %8645 = inttoptr i64 %8642 to i32*
  %8646 = load i32, i32* %8645
  %8647 = zext i32 %8646 to i64
  store i64 %8647, i64* %RAX.i1932, align 8
  store %struct.Memory* %loadMem_4aeebf, %struct.Memory** %MEMORY
  %loadMem_4aeec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8649 = getelementptr inbounds %struct.GPR, %struct.GPR* %8648, i32 0, i32 33
  %8650 = getelementptr inbounds %struct.Reg, %struct.Reg* %8649, i32 0, i32 0
  %PC.i1929 = bitcast %union.anon* %8650 to i64*
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8652 = getelementptr inbounds %struct.GPR, %struct.GPR* %8651, i32 0, i32 1
  %8653 = getelementptr inbounds %struct.Reg, %struct.Reg* %8652, i32 0, i32 0
  %RAX.i1930 = bitcast %union.anon* %8653 to i64*
  %8654 = load i64, i64* %RAX.i1930
  %8655 = load i64, i64* %PC.i1929
  %8656 = add i64 %8655, 3
  store i64 %8656, i64* %PC.i1929
  %8657 = trunc i64 %8654 to i32
  %8658 = add i32 1, %8657
  %8659 = zext i32 %8658 to i64
  store i64 %8659, i64* %RAX.i1930, align 8
  %8660 = icmp ult i32 %8658, %8657
  %8661 = icmp ult i32 %8658, 1
  %8662 = or i1 %8660, %8661
  %8663 = zext i1 %8662 to i8
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8663, i8* %8664, align 1
  %8665 = and i32 %8658, 255
  %8666 = call i32 @llvm.ctpop.i32(i32 %8665)
  %8667 = trunc i32 %8666 to i8
  %8668 = and i8 %8667, 1
  %8669 = xor i8 %8668, 1
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8669, i8* %8670, align 1
  %8671 = xor i64 1, %8654
  %8672 = trunc i64 %8671 to i32
  %8673 = xor i32 %8672, %8658
  %8674 = lshr i32 %8673, 4
  %8675 = trunc i32 %8674 to i8
  %8676 = and i8 %8675, 1
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8676, i8* %8677, align 1
  %8678 = icmp eq i32 %8658, 0
  %8679 = zext i1 %8678 to i8
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8679, i8* %8680, align 1
  %8681 = lshr i32 %8658, 31
  %8682 = trunc i32 %8681 to i8
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8682, i8* %8683, align 1
  %8684 = lshr i32 %8657, 31
  %8685 = xor i32 %8681, %8684
  %8686 = add i32 %8685, %8681
  %8687 = icmp eq i32 %8686, 2
  %8688 = zext i1 %8687 to i8
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8688, i8* %8689, align 1
  store %struct.Memory* %loadMem_4aeec2, %struct.Memory** %MEMORY
  %loadMem_4aeec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8691 = getelementptr inbounds %struct.GPR, %struct.GPR* %8690, i32 0, i32 33
  %8692 = getelementptr inbounds %struct.Reg, %struct.Reg* %8691, i32 0, i32 0
  %PC.i1926 = bitcast %union.anon* %8692 to i64*
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8694 = getelementptr inbounds %struct.GPR, %struct.GPR* %8693, i32 0, i32 1
  %8695 = getelementptr inbounds %struct.Reg, %struct.Reg* %8694, i32 0, i32 0
  %EAX.i1927 = bitcast %union.anon* %8695 to i32*
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8697 = getelementptr inbounds %struct.GPR, %struct.GPR* %8696, i32 0, i32 15
  %8698 = getelementptr inbounds %struct.Reg, %struct.Reg* %8697, i32 0, i32 0
  %RBP.i1928 = bitcast %union.anon* %8698 to i64*
  %8699 = load i64, i64* %RBP.i1928
  %8700 = sub i64 %8699, 40
  %8701 = load i32, i32* %EAX.i1927
  %8702 = zext i32 %8701 to i64
  %8703 = load i64, i64* %PC.i1926
  %8704 = add i64 %8703, 3
  store i64 %8704, i64* %PC.i1926
  %8705 = inttoptr i64 %8700 to i32*
  store i32 %8701, i32* %8705
  store %struct.Memory* %loadMem_4aeec5, %struct.Memory** %MEMORY
  %loadMem_4aeec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8707 = getelementptr inbounds %struct.GPR, %struct.GPR* %8706, i32 0, i32 33
  %8708 = getelementptr inbounds %struct.Reg, %struct.Reg* %8707, i32 0, i32 0
  %PC.i1925 = bitcast %union.anon* %8708 to i64*
  %8709 = load i64, i64* %PC.i1925
  %8710 = add i64 %8709, -800
  %8711 = load i64, i64* %PC.i1925
  %8712 = add i64 %8711, 5
  store i64 %8712, i64* %PC.i1925
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8710, i64* %8713, align 8
  store %struct.Memory* %loadMem_4aeec8, %struct.Memory** %MEMORY
  br label %block_.L_4aeba8

block_.L_4aeecd:                                  ; preds = %block_.L_4aeba8
  %loadMem_4aeecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 33
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %PC.i1924 = bitcast %union.anon* %8716 to i64*
  %8717 = load i64, i64* %PC.i1924
  %8718 = add i64 %8717, 5
  %8719 = load i64, i64* %PC.i1924
  %8720 = add i64 %8719, 5
  store i64 %8720, i64* %PC.i1924
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8718, i64* %8721, align 8
  store %struct.Memory* %loadMem_4aeecd, %struct.Memory** %MEMORY
  br label %block_.L_4aeed2

block_.L_4aeed2:                                  ; preds = %block_.L_4aeecd
  %loadMem_4aeed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8723 = getelementptr inbounds %struct.GPR, %struct.GPR* %8722, i32 0, i32 33
  %8724 = getelementptr inbounds %struct.Reg, %struct.Reg* %8723, i32 0, i32 0
  %PC.i1921 = bitcast %union.anon* %8724 to i64*
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8726 = getelementptr inbounds %struct.GPR, %struct.GPR* %8725, i32 0, i32 1
  %8727 = getelementptr inbounds %struct.Reg, %struct.Reg* %8726, i32 0, i32 0
  %RAX.i1922 = bitcast %union.anon* %8727 to i64*
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8729 = getelementptr inbounds %struct.GPR, %struct.GPR* %8728, i32 0, i32 15
  %8730 = getelementptr inbounds %struct.Reg, %struct.Reg* %8729, i32 0, i32 0
  %RBP.i1923 = bitcast %union.anon* %8730 to i64*
  %8731 = load i64, i64* %RBP.i1923
  %8732 = sub i64 %8731, 8
  %8733 = load i64, i64* %PC.i1921
  %8734 = add i64 %8733, 3
  store i64 %8734, i64* %PC.i1921
  %8735 = inttoptr i64 %8732 to i32*
  %8736 = load i32, i32* %8735
  %8737 = zext i32 %8736 to i64
  store i64 %8737, i64* %RAX.i1922, align 8
  store %struct.Memory* %loadMem_4aeed2, %struct.Memory** %MEMORY
  %loadMem_4aeed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8739 = getelementptr inbounds %struct.GPR, %struct.GPR* %8738, i32 0, i32 33
  %8740 = getelementptr inbounds %struct.Reg, %struct.Reg* %8739, i32 0, i32 0
  %PC.i1919 = bitcast %union.anon* %8740 to i64*
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8742 = getelementptr inbounds %struct.GPR, %struct.GPR* %8741, i32 0, i32 1
  %8743 = getelementptr inbounds %struct.Reg, %struct.Reg* %8742, i32 0, i32 0
  %RAX.i1920 = bitcast %union.anon* %8743 to i64*
  %8744 = load i64, i64* %RAX.i1920
  %8745 = load i64, i64* %PC.i1919
  %8746 = add i64 %8745, 3
  store i64 %8746, i64* %PC.i1919
  %8747 = trunc i64 %8744 to i32
  %8748 = add i32 1, %8747
  %8749 = zext i32 %8748 to i64
  store i64 %8749, i64* %RAX.i1920, align 8
  %8750 = icmp ult i32 %8748, %8747
  %8751 = icmp ult i32 %8748, 1
  %8752 = or i1 %8750, %8751
  %8753 = zext i1 %8752 to i8
  %8754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8753, i8* %8754, align 1
  %8755 = and i32 %8748, 255
  %8756 = call i32 @llvm.ctpop.i32(i32 %8755)
  %8757 = trunc i32 %8756 to i8
  %8758 = and i8 %8757, 1
  %8759 = xor i8 %8758, 1
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8759, i8* %8760, align 1
  %8761 = xor i64 1, %8744
  %8762 = trunc i64 %8761 to i32
  %8763 = xor i32 %8762, %8748
  %8764 = lshr i32 %8763, 4
  %8765 = trunc i32 %8764 to i8
  %8766 = and i8 %8765, 1
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8766, i8* %8767, align 1
  %8768 = icmp eq i32 %8748, 0
  %8769 = zext i1 %8768 to i8
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8769, i8* %8770, align 1
  %8771 = lshr i32 %8748, 31
  %8772 = trunc i32 %8771 to i8
  %8773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8772, i8* %8773, align 1
  %8774 = lshr i32 %8747, 31
  %8775 = xor i32 %8771, %8774
  %8776 = add i32 %8775, %8771
  %8777 = icmp eq i32 %8776, 2
  %8778 = zext i1 %8777 to i8
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8778, i8* %8779, align 1
  store %struct.Memory* %loadMem_4aeed5, %struct.Memory** %MEMORY
  %loadMem_4aeed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8781 = getelementptr inbounds %struct.GPR, %struct.GPR* %8780, i32 0, i32 33
  %8782 = getelementptr inbounds %struct.Reg, %struct.Reg* %8781, i32 0, i32 0
  %PC.i1916 = bitcast %union.anon* %8782 to i64*
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 1
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %EAX.i1917 = bitcast %union.anon* %8785 to i32*
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8787 = getelementptr inbounds %struct.GPR, %struct.GPR* %8786, i32 0, i32 15
  %8788 = getelementptr inbounds %struct.Reg, %struct.Reg* %8787, i32 0, i32 0
  %RBP.i1918 = bitcast %union.anon* %8788 to i64*
  %8789 = load i64, i64* %RBP.i1918
  %8790 = sub i64 %8789, 8
  %8791 = load i32, i32* %EAX.i1917
  %8792 = zext i32 %8791 to i64
  %8793 = load i64, i64* %PC.i1916
  %8794 = add i64 %8793, 3
  store i64 %8794, i64* %PC.i1916
  %8795 = inttoptr i64 %8790 to i32*
  store i32 %8791, i32* %8795
  store %struct.Memory* %loadMem_4aeed8, %struct.Memory** %MEMORY
  %loadMem_4aeedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8797 = getelementptr inbounds %struct.GPR, %struct.GPR* %8796, i32 0, i32 33
  %8798 = getelementptr inbounds %struct.Reg, %struct.Reg* %8797, i32 0, i32 0
  %PC.i1915 = bitcast %union.anon* %8798 to i64*
  %8799 = load i64, i64* %PC.i1915
  %8800 = add i64 %8799, -1206
  %8801 = load i64, i64* %PC.i1915
  %8802 = add i64 %8801, 5
  store i64 %8802, i64* %PC.i1915
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8800, i64* %8803, align 8
  store %struct.Memory* %loadMem_4aeedb, %struct.Memory** %MEMORY
  br label %block_.L_4aea25

block_.L_4aeee0:                                  ; preds = %block_.L_4aea25
  %loadMem_4aeee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8805 = getelementptr inbounds %struct.GPR, %struct.GPR* %8804, i32 0, i32 33
  %8806 = getelementptr inbounds %struct.Reg, %struct.Reg* %8805, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %8806 to i64*
  %8807 = load i64, i64* %PC.i1914
  %8808 = add i64 %8807, 5
  %8809 = load i64, i64* %PC.i1914
  %8810 = add i64 %8809, 5
  store i64 %8810, i64* %PC.i1914
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8808, i64* %8811, align 8
  store %struct.Memory* %loadMem_4aeee0, %struct.Memory** %MEMORY
  br label %block_.L_4aeee5

block_.L_4aeee5:                                  ; preds = %block_.L_4aeee0
  %loadMem_4aeee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8813 = getelementptr inbounds %struct.GPR, %struct.GPR* %8812, i32 0, i32 33
  %8814 = getelementptr inbounds %struct.Reg, %struct.Reg* %8813, i32 0, i32 0
  %PC.i1911 = bitcast %union.anon* %8814 to i64*
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 1
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %RAX.i1912 = bitcast %union.anon* %8817 to i64*
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8819 = getelementptr inbounds %struct.GPR, %struct.GPR* %8818, i32 0, i32 15
  %8820 = getelementptr inbounds %struct.Reg, %struct.Reg* %8819, i32 0, i32 0
  %RBP.i1913 = bitcast %union.anon* %8820 to i64*
  %8821 = load i64, i64* %RBP.i1913
  %8822 = sub i64 %8821, 4
  %8823 = load i64, i64* %PC.i1911
  %8824 = add i64 %8823, 3
  store i64 %8824, i64* %PC.i1911
  %8825 = inttoptr i64 %8822 to i32*
  %8826 = load i32, i32* %8825
  %8827 = zext i32 %8826 to i64
  store i64 %8827, i64* %RAX.i1912, align 8
  store %struct.Memory* %loadMem_4aeee5, %struct.Memory** %MEMORY
  %loadMem_4aeee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 33
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %PC.i1909 = bitcast %union.anon* %8830 to i64*
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8832 = getelementptr inbounds %struct.GPR, %struct.GPR* %8831, i32 0, i32 1
  %8833 = getelementptr inbounds %struct.Reg, %struct.Reg* %8832, i32 0, i32 0
  %RAX.i1910 = bitcast %union.anon* %8833 to i64*
  %8834 = load i64, i64* %RAX.i1910
  %8835 = load i64, i64* %PC.i1909
  %8836 = add i64 %8835, 3
  store i64 %8836, i64* %PC.i1909
  %8837 = trunc i64 %8834 to i32
  %8838 = add i32 1, %8837
  %8839 = zext i32 %8838 to i64
  store i64 %8839, i64* %RAX.i1910, align 8
  %8840 = icmp ult i32 %8838, %8837
  %8841 = icmp ult i32 %8838, 1
  %8842 = or i1 %8840, %8841
  %8843 = zext i1 %8842 to i8
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8843, i8* %8844, align 1
  %8845 = and i32 %8838, 255
  %8846 = call i32 @llvm.ctpop.i32(i32 %8845)
  %8847 = trunc i32 %8846 to i8
  %8848 = and i8 %8847, 1
  %8849 = xor i8 %8848, 1
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8849, i8* %8850, align 1
  %8851 = xor i64 1, %8834
  %8852 = trunc i64 %8851 to i32
  %8853 = xor i32 %8852, %8838
  %8854 = lshr i32 %8853, 4
  %8855 = trunc i32 %8854 to i8
  %8856 = and i8 %8855, 1
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8856, i8* %8857, align 1
  %8858 = icmp eq i32 %8838, 0
  %8859 = zext i1 %8858 to i8
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8859, i8* %8860, align 1
  %8861 = lshr i32 %8838, 31
  %8862 = trunc i32 %8861 to i8
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8862, i8* %8863, align 1
  %8864 = lshr i32 %8837, 31
  %8865 = xor i32 %8861, %8864
  %8866 = add i32 %8865, %8861
  %8867 = icmp eq i32 %8866, 2
  %8868 = zext i1 %8867 to i8
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8868, i8* %8869, align 1
  store %struct.Memory* %loadMem_4aeee8, %struct.Memory** %MEMORY
  %loadMem_4aeeeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 33
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %PC.i1906 = bitcast %union.anon* %8872 to i64*
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 1
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %EAX.i1907 = bitcast %union.anon* %8875 to i32*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 15
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %RBP.i1908 = bitcast %union.anon* %8878 to i64*
  %8879 = load i64, i64* %RBP.i1908
  %8880 = sub i64 %8879, 4
  %8881 = load i32, i32* %EAX.i1907
  %8882 = zext i32 %8881 to i64
  %8883 = load i64, i64* %PC.i1906
  %8884 = add i64 %8883, 3
  store i64 %8884, i64* %PC.i1906
  %8885 = inttoptr i64 %8880 to i32*
  store i32 %8881, i32* %8885
  store %struct.Memory* %loadMem_4aeeeb, %struct.Memory** %MEMORY
  %loadMem_4aeeee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 33
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %PC.i1905 = bitcast %union.anon* %8888 to i64*
  %8889 = load i64, i64* %PC.i1905
  %8890 = add i64 %8889, -1248
  %8891 = load i64, i64* %PC.i1905
  %8892 = add i64 %8891, 5
  store i64 %8892, i64* %PC.i1905
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8890, i64* %8893, align 8
  store %struct.Memory* %loadMem_4aeeee, %struct.Memory** %MEMORY
  br label %block_.L_4aea0e

block_.L_4aeef3:                                  ; preds = %block_.L_4aea0e
  %loadMem_4aeef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8895 = getelementptr inbounds %struct.GPR, %struct.GPR* %8894, i32 0, i32 33
  %8896 = getelementptr inbounds %struct.Reg, %struct.Reg* %8895, i32 0, i32 0
  %PC.i1903 = bitcast %union.anon* %8896 to i64*
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8898 = getelementptr inbounds %struct.GPR, %struct.GPR* %8897, i32 0, i32 1
  %8899 = getelementptr inbounds %struct.Reg, %struct.Reg* %8898, i32 0, i32 0
  %RAX.i1904 = bitcast %union.anon* %8899 to i64*
  %8900 = load i64, i64* %PC.i1903
  %8901 = add i64 %8900, 8
  store i64 %8901, i64* %PC.i1903
  %8902 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %8902, i64* %RAX.i1904, align 8
  store %struct.Memory* %loadMem_4aeef3, %struct.Memory** %MEMORY
  %loadMem_4aeefb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 33
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %PC.i1901 = bitcast %union.anon* %8905 to i64*
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 1
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %RAX.i1902 = bitcast %union.anon* %8908 to i64*
  %8909 = load i64, i64* %RAX.i1902
  %8910 = add i64 %8909, 196
  %8911 = load i64, i64* %PC.i1901
  %8912 = add i64 %8911, 7
  store i64 %8912, i64* %PC.i1901
  %8913 = inttoptr i64 %8910 to i32*
  %8914 = load i32, i32* %8913
  %8915 = sub i32 %8914, 2
  %8916 = icmp ult i32 %8914, 2
  %8917 = zext i1 %8916 to i8
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8917, i8* %8918, align 1
  %8919 = and i32 %8915, 255
  %8920 = call i32 @llvm.ctpop.i32(i32 %8919)
  %8921 = trunc i32 %8920 to i8
  %8922 = and i8 %8921, 1
  %8923 = xor i8 %8922, 1
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8923, i8* %8924, align 1
  %8925 = xor i32 %8914, 2
  %8926 = xor i32 %8925, %8915
  %8927 = lshr i32 %8926, 4
  %8928 = trunc i32 %8927 to i8
  %8929 = and i8 %8928, 1
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8929, i8* %8930, align 1
  %8931 = icmp eq i32 %8915, 0
  %8932 = zext i1 %8931 to i8
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8932, i8* %8933, align 1
  %8934 = lshr i32 %8915, 31
  %8935 = trunc i32 %8934 to i8
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8935, i8* %8936, align 1
  %8937 = lshr i32 %8914, 31
  %8938 = xor i32 %8934, %8937
  %8939 = add i32 %8938, %8937
  %8940 = icmp eq i32 %8939, 2
  %8941 = zext i1 %8940 to i8
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8941, i8* %8942, align 1
  store %struct.Memory* %loadMem_4aeefb, %struct.Memory** %MEMORY
  %loadMem_4aef02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8944 = getelementptr inbounds %struct.GPR, %struct.GPR* %8943, i32 0, i32 33
  %8945 = getelementptr inbounds %struct.Reg, %struct.Reg* %8944, i32 0, i32 0
  %PC.i1900 = bitcast %union.anon* %8945 to i64*
  %8946 = load i64, i64* %PC.i1900
  %8947 = add i64 %8946, 1161
  %8948 = load i64, i64* %PC.i1900
  %8949 = add i64 %8948, 6
  %8950 = load i64, i64* %PC.i1900
  %8951 = add i64 %8950, 6
  store i64 %8951, i64* %PC.i1900
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8953 = load i8, i8* %8952, align 1
  %8954 = icmp eq i8 %8953, 0
  %8955 = zext i1 %8954 to i8
  store i8 %8955, i8* %BRANCH_TAKEN, align 1
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8957 = select i1 %8954, i64 %8947, i64 %8949
  store i64 %8957, i64* %8956, align 8
  store %struct.Memory* %loadMem_4aef02, %struct.Memory** %MEMORY
  %loadBr_4aef02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aef02 = icmp eq i8 %loadBr_4aef02, 1
  br i1 %cmpBr_4aef02, label %block_.L_4af38b, label %block_4aef08

block_4aef08:                                     ; preds = %block_.L_4aeef3
  %loadMem_4aef08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8959 = getelementptr inbounds %struct.GPR, %struct.GPR* %8958, i32 0, i32 33
  %8960 = getelementptr inbounds %struct.Reg, %struct.Reg* %8959, i32 0, i32 0
  %PC.i1898 = bitcast %union.anon* %8960 to i64*
  %8961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8962 = getelementptr inbounds %struct.GPR, %struct.GPR* %8961, i32 0, i32 15
  %8963 = getelementptr inbounds %struct.Reg, %struct.Reg* %8962, i32 0, i32 0
  %RBP.i1899 = bitcast %union.anon* %8963 to i64*
  %8964 = load i64, i64* %RBP.i1899
  %8965 = sub i64 %8964, 4
  %8966 = load i64, i64* %PC.i1898
  %8967 = add i64 %8966, 7
  store i64 %8967, i64* %PC.i1898
  %8968 = inttoptr i64 %8965 to i32*
  store i32 0, i32* %8968
  store %struct.Memory* %loadMem_4aef08, %struct.Memory** %MEMORY
  br label %block_.L_4aef0f

block_.L_4aef0f:                                  ; preds = %block_.L_4af038, %block_4aef08
  %loadMem_4aef0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8970 = getelementptr inbounds %struct.GPR, %struct.GPR* %8969, i32 0, i32 33
  %8971 = getelementptr inbounds %struct.Reg, %struct.Reg* %8970, i32 0, i32 0
  %PC.i1895 = bitcast %union.anon* %8971 to i64*
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 1
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %RAX.i1896 = bitcast %union.anon* %8974 to i64*
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8976 = getelementptr inbounds %struct.GPR, %struct.GPR* %8975, i32 0, i32 15
  %8977 = getelementptr inbounds %struct.Reg, %struct.Reg* %8976, i32 0, i32 0
  %RBP.i1897 = bitcast %union.anon* %8977 to i64*
  %8978 = load i64, i64* %RBP.i1897
  %8979 = sub i64 %8978, 4
  %8980 = load i64, i64* %PC.i1895
  %8981 = add i64 %8980, 3
  store i64 %8981, i64* %PC.i1895
  %8982 = inttoptr i64 %8979 to i32*
  %8983 = load i32, i32* %8982
  %8984 = zext i32 %8983 to i64
  store i64 %8984, i64* %RAX.i1896, align 8
  store %struct.Memory* %loadMem_4aef0f, %struct.Memory** %MEMORY
  %loadMem_4aef12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 33
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %PC.i1893 = bitcast %union.anon* %8987 to i64*
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 1
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %EAX.i1894 = bitcast %union.anon* %8990 to i32*
  %8991 = load i32, i32* %EAX.i1894
  %8992 = zext i32 %8991 to i64
  %8993 = load i64, i64* %PC.i1893
  %8994 = add i64 %8993, 7
  store i64 %8994, i64* %PC.i1893
  %8995 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %8996 = sub i32 %8991, %8995
  %8997 = icmp ult i32 %8991, %8995
  %8998 = zext i1 %8997 to i8
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8998, i8* %8999, align 1
  %9000 = and i32 %8996, 255
  %9001 = call i32 @llvm.ctpop.i32(i32 %9000)
  %9002 = trunc i32 %9001 to i8
  %9003 = and i8 %9002, 1
  %9004 = xor i8 %9003, 1
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9004, i8* %9005, align 1
  %9006 = xor i32 %8995, %8991
  %9007 = xor i32 %9006, %8996
  %9008 = lshr i32 %9007, 4
  %9009 = trunc i32 %9008 to i8
  %9010 = and i8 %9009, 1
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9010, i8* %9011, align 1
  %9012 = icmp eq i32 %8996, 0
  %9013 = zext i1 %9012 to i8
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9013, i8* %9014, align 1
  %9015 = lshr i32 %8996, 31
  %9016 = trunc i32 %9015 to i8
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9016, i8* %9017, align 1
  %9018 = lshr i32 %8991, 31
  %9019 = lshr i32 %8995, 31
  %9020 = xor i32 %9019, %9018
  %9021 = xor i32 %9015, %9018
  %9022 = add i32 %9021, %9020
  %9023 = icmp eq i32 %9022, 2
  %9024 = zext i1 %9023 to i8
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9024, i8* %9025, align 1
  store %struct.Memory* %loadMem_4aef12, %struct.Memory** %MEMORY
  %loadMem_4aef19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 33
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %PC.i1892 = bitcast %union.anon* %9028 to i64*
  %9029 = load i64, i64* %PC.i1892
  %9030 = add i64 %9029, 301
  %9031 = load i64, i64* %PC.i1892
  %9032 = add i64 %9031, 6
  %9033 = load i64, i64* %PC.i1892
  %9034 = add i64 %9033, 6
  store i64 %9034, i64* %PC.i1892
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9036 = load i8, i8* %9035, align 1
  %9037 = icmp ne i8 %9036, 0
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9039 = load i8, i8* %9038, align 1
  %9040 = icmp ne i8 %9039, 0
  %9041 = xor i1 %9037, %9040
  %9042 = xor i1 %9041, true
  %9043 = zext i1 %9042 to i8
  store i8 %9043, i8* %BRANCH_TAKEN, align 1
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9045 = select i1 %9041, i64 %9032, i64 %9030
  store i64 %9045, i64* %9044, align 8
  store %struct.Memory* %loadMem_4aef19, %struct.Memory** %MEMORY
  %loadBr_4aef19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aef19 = icmp eq i8 %loadBr_4aef19, 1
  br i1 %cmpBr_4aef19, label %block_.L_4af046, label %block_4aef1f

block_4aef1f:                                     ; preds = %block_.L_4aef0f
  %loadMem_4aef1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 33
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %PC.i1890 = bitcast %union.anon* %9048 to i64*
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 15
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %RBP.i1891 = bitcast %union.anon* %9051 to i64*
  %9052 = load i64, i64* %RBP.i1891
  %9053 = sub i64 %9052, 8
  %9054 = load i64, i64* %PC.i1890
  %9055 = add i64 %9054, 7
  store i64 %9055, i64* %PC.i1890
  %9056 = inttoptr i64 %9053 to i32*
  store i32 0, i32* %9056
  store %struct.Memory* %loadMem_4aef1f, %struct.Memory** %MEMORY
  br label %block_.L_4aef26

block_.L_4aef26:                                  ; preds = %block_.L_4af025, %block_4aef1f
  %loadMem_4aef26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9058 = getelementptr inbounds %struct.GPR, %struct.GPR* %9057, i32 0, i32 33
  %9059 = getelementptr inbounds %struct.Reg, %struct.Reg* %9058, i32 0, i32 0
  %PC.i1887 = bitcast %union.anon* %9059 to i64*
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9061 = getelementptr inbounds %struct.GPR, %struct.GPR* %9060, i32 0, i32 1
  %9062 = getelementptr inbounds %struct.Reg, %struct.Reg* %9061, i32 0, i32 0
  %RAX.i1888 = bitcast %union.anon* %9062 to i64*
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 15
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %RBP.i1889 = bitcast %union.anon* %9065 to i64*
  %9066 = load i64, i64* %RBP.i1889
  %9067 = sub i64 %9066, 8
  %9068 = load i64, i64* %PC.i1887
  %9069 = add i64 %9068, 3
  store i64 %9069, i64* %PC.i1887
  %9070 = inttoptr i64 %9067 to i32*
  %9071 = load i32, i32* %9070
  %9072 = zext i32 %9071 to i64
  store i64 %9072, i64* %RAX.i1888, align 8
  store %struct.Memory* %loadMem_4aef26, %struct.Memory** %MEMORY
  %loadMem_4aef29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9074 = getelementptr inbounds %struct.GPR, %struct.GPR* %9073, i32 0, i32 33
  %9075 = getelementptr inbounds %struct.Reg, %struct.Reg* %9074, i32 0, i32 0
  %PC.i1885 = bitcast %union.anon* %9075 to i64*
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 1
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %EAX.i1886 = bitcast %union.anon* %9078 to i32*
  %9079 = load i32, i32* %EAX.i1886
  %9080 = zext i32 %9079 to i64
  %9081 = load i64, i64* %PC.i1885
  %9082 = add i64 %9081, 7
  store i64 %9082, i64* %PC.i1885
  %9083 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %9084 = sub i32 %9079, %9083
  %9085 = icmp ult i32 %9079, %9083
  %9086 = zext i1 %9085 to i8
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9086, i8* %9087, align 1
  %9088 = and i32 %9084, 255
  %9089 = call i32 @llvm.ctpop.i32(i32 %9088)
  %9090 = trunc i32 %9089 to i8
  %9091 = and i8 %9090, 1
  %9092 = xor i8 %9091, 1
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9092, i8* %9093, align 1
  %9094 = xor i32 %9083, %9079
  %9095 = xor i32 %9094, %9084
  %9096 = lshr i32 %9095, 4
  %9097 = trunc i32 %9096 to i8
  %9098 = and i8 %9097, 1
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9098, i8* %9099, align 1
  %9100 = icmp eq i32 %9084, 0
  %9101 = zext i1 %9100 to i8
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9101, i8* %9102, align 1
  %9103 = lshr i32 %9084, 31
  %9104 = trunc i32 %9103 to i8
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9104, i8* %9105, align 1
  %9106 = lshr i32 %9079, 31
  %9107 = lshr i32 %9083, 31
  %9108 = xor i32 %9107, %9106
  %9109 = xor i32 %9103, %9106
  %9110 = add i32 %9109, %9108
  %9111 = icmp eq i32 %9110, 2
  %9112 = zext i1 %9111 to i8
  %9113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9112, i8* %9113, align 1
  store %struct.Memory* %loadMem_4aef29, %struct.Memory** %MEMORY
  %loadMem_4aef30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9115 = getelementptr inbounds %struct.GPR, %struct.GPR* %9114, i32 0, i32 33
  %9116 = getelementptr inbounds %struct.Reg, %struct.Reg* %9115, i32 0, i32 0
  %PC.i1884 = bitcast %union.anon* %9116 to i64*
  %9117 = load i64, i64* %PC.i1884
  %9118 = add i64 %9117, 259
  %9119 = load i64, i64* %PC.i1884
  %9120 = add i64 %9119, 6
  %9121 = load i64, i64* %PC.i1884
  %9122 = add i64 %9121, 6
  store i64 %9122, i64* %PC.i1884
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9124 = load i8, i8* %9123, align 1
  %9125 = icmp ne i8 %9124, 0
  %9126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9127 = load i8, i8* %9126, align 1
  %9128 = icmp ne i8 %9127, 0
  %9129 = xor i1 %9125, %9128
  %9130 = xor i1 %9129, true
  %9131 = zext i1 %9130 to i8
  store i8 %9131, i8* %BRANCH_TAKEN, align 1
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9133 = select i1 %9129, i64 %9120, i64 %9118
  store i64 %9133, i64* %9132, align 8
  store %struct.Memory* %loadMem_4aef30, %struct.Memory** %MEMORY
  %loadBr_4aef30 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aef30 = icmp eq i8 %loadBr_4aef30, 1
  br i1 %cmpBr_4aef30, label %block_.L_4af033, label %block_4aef36

block_4aef36:                                     ; preds = %block_.L_4aef26
  %loadMem_4aef36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 33
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %PC.i1882 = bitcast %union.anon* %9136 to i64*
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 15
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %RBP.i1883 = bitcast %union.anon* %9139 to i64*
  %9140 = load i64, i64* %RBP.i1883
  %9141 = sub i64 %9140, 40
  %9142 = load i64, i64* %PC.i1882
  %9143 = add i64 %9142, 7
  store i64 %9143, i64* %PC.i1882
  %9144 = inttoptr i64 %9141 to i32*
  store i32 0, i32* %9144
  store %struct.Memory* %loadMem_4aef36, %struct.Memory** %MEMORY
  br label %block_.L_4aef3d

block_.L_4aef3d:                                  ; preds = %block_.L_4aef70, %block_4aef36
  %loadMem_4aef3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9146 = getelementptr inbounds %struct.GPR, %struct.GPR* %9145, i32 0, i32 33
  %9147 = getelementptr inbounds %struct.Reg, %struct.Reg* %9146, i32 0, i32 0
  %PC.i1880 = bitcast %union.anon* %9147 to i64*
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9149 = getelementptr inbounds %struct.GPR, %struct.GPR* %9148, i32 0, i32 15
  %9150 = getelementptr inbounds %struct.Reg, %struct.Reg* %9149, i32 0, i32 0
  %RBP.i1881 = bitcast %union.anon* %9150 to i64*
  %9151 = load i64, i64* %RBP.i1881
  %9152 = sub i64 %9151, 40
  %9153 = load i64, i64* %PC.i1880
  %9154 = add i64 %9153, 4
  store i64 %9154, i64* %PC.i1880
  %9155 = inttoptr i64 %9152 to i32*
  %9156 = load i32, i32* %9155
  %9157 = sub i32 %9156, 3
  %9158 = icmp ult i32 %9156, 3
  %9159 = zext i1 %9158 to i8
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9159, i8* %9160, align 1
  %9161 = and i32 %9157, 255
  %9162 = call i32 @llvm.ctpop.i32(i32 %9161)
  %9163 = trunc i32 %9162 to i8
  %9164 = and i8 %9163, 1
  %9165 = xor i8 %9164, 1
  %9166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9165, i8* %9166, align 1
  %9167 = xor i32 %9156, 3
  %9168 = xor i32 %9167, %9157
  %9169 = lshr i32 %9168, 4
  %9170 = trunc i32 %9169 to i8
  %9171 = and i8 %9170, 1
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9171, i8* %9172, align 1
  %9173 = icmp eq i32 %9157, 0
  %9174 = zext i1 %9173 to i8
  %9175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9174, i8* %9175, align 1
  %9176 = lshr i32 %9157, 31
  %9177 = trunc i32 %9176 to i8
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9177, i8* %9178, align 1
  %9179 = lshr i32 %9156, 31
  %9180 = xor i32 %9176, %9179
  %9181 = add i32 %9180, %9179
  %9182 = icmp eq i32 %9181, 2
  %9183 = zext i1 %9182 to i8
  %9184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9183, i8* %9184, align 1
  store %struct.Memory* %loadMem_4aef3d, %struct.Memory** %MEMORY
  %loadMem_4aef41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 33
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %PC.i1879 = bitcast %union.anon* %9187 to i64*
  %9188 = load i64, i64* %PC.i1879
  %9189 = add i64 %9188, 223
  %9190 = load i64, i64* %PC.i1879
  %9191 = add i64 %9190, 6
  %9192 = load i64, i64* %PC.i1879
  %9193 = add i64 %9192, 6
  store i64 %9193, i64* %PC.i1879
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9195 = load i8, i8* %9194, align 1
  %9196 = icmp ne i8 %9195, 0
  %9197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9198 = load i8, i8* %9197, align 1
  %9199 = icmp ne i8 %9198, 0
  %9200 = xor i1 %9196, %9199
  %9201 = xor i1 %9200, true
  %9202 = zext i1 %9201 to i8
  store i8 %9202, i8* %BRANCH_TAKEN, align 1
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9204 = select i1 %9200, i64 %9191, i64 %9189
  store i64 %9204, i64* %9203, align 8
  store %struct.Memory* %loadMem_4aef41, %struct.Memory** %MEMORY
  %loadBr_4aef41 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aef41 = icmp eq i8 %loadBr_4aef41, 1
  br i1 %cmpBr_4aef41, label %block_.L_4af020, label %block_4aef47

block_4aef47:                                     ; preds = %block_.L_4aef3d
  %loadMem_4aef47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9206 = getelementptr inbounds %struct.GPR, %struct.GPR* %9205, i32 0, i32 33
  %9207 = getelementptr inbounds %struct.Reg, %struct.Reg* %9206, i32 0, i32 0
  %PC.i1877 = bitcast %union.anon* %9207 to i64*
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 15
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %RBP.i1878 = bitcast %union.anon* %9210 to i64*
  %9211 = load i64, i64* %RBP.i1878
  %9212 = sub i64 %9211, 40
  %9213 = load i64, i64* %PC.i1877
  %9214 = add i64 %9213, 4
  store i64 %9214, i64* %PC.i1877
  %9215 = inttoptr i64 %9212 to i32*
  %9216 = load i32, i32* %9215
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9217, align 1
  %9218 = and i32 %9216, 255
  %9219 = call i32 @llvm.ctpop.i32(i32 %9218)
  %9220 = trunc i32 %9219 to i8
  %9221 = and i8 %9220, 1
  %9222 = xor i8 %9221, 1
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9222, i8* %9223, align 1
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9224, align 1
  %9225 = icmp eq i32 %9216, 0
  %9226 = zext i1 %9225 to i8
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9226, i8* %9227, align 1
  %9228 = lshr i32 %9216, 31
  %9229 = trunc i32 %9228 to i8
  %9230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9229, i8* %9230, align 1
  %9231 = lshr i32 %9216, 31
  %9232 = xor i32 %9228, %9231
  %9233 = add i32 %9232, %9231
  %9234 = icmp eq i32 %9233, 2
  %9235 = zext i1 %9234 to i8
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9235, i8* %9236, align 1
  store %struct.Memory* %loadMem_4aef47, %struct.Memory** %MEMORY
  %loadMem_4aef4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9238 = getelementptr inbounds %struct.GPR, %struct.GPR* %9237, i32 0, i32 33
  %9239 = getelementptr inbounds %struct.Reg, %struct.Reg* %9238, i32 0, i32 0
  %PC.i1876 = bitcast %union.anon* %9239 to i64*
  %9240 = load i64, i64* %PC.i1876
  %9241 = add i64 %9240, 24
  %9242 = load i64, i64* %PC.i1876
  %9243 = add i64 %9242, 6
  %9244 = load i64, i64* %PC.i1876
  %9245 = add i64 %9244, 6
  store i64 %9245, i64* %PC.i1876
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9247 = load i8, i8* %9246, align 1
  %9248 = icmp eq i8 %9247, 0
  %9249 = zext i1 %9248 to i8
  store i8 %9249, i8* %BRANCH_TAKEN, align 1
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9251 = select i1 %9248, i64 %9241, i64 %9243
  store i64 %9251, i64* %9250, align 8
  store %struct.Memory* %loadMem_4aef4b, %struct.Memory** %MEMORY
  %loadBr_4aef4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aef4b = icmp eq i8 %loadBr_4aef4b, 1
  br i1 %cmpBr_4aef4b, label %block_.L_4aef63, label %block_4aef51

block_4aef51:                                     ; preds = %block_4aef47
  %loadMem_4aef51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9253 = getelementptr inbounds %struct.GPR, %struct.GPR* %9252, i32 0, i32 33
  %9254 = getelementptr inbounds %struct.Reg, %struct.Reg* %9253, i32 0, i32 0
  %PC.i1874 = bitcast %union.anon* %9254 to i64*
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 1
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %RAX.i1875 = bitcast %union.anon* %9257 to i64*
  %9258 = load i64, i64* %PC.i1874
  %9259 = add i64 %9258, 7
  store i64 %9259, i64* %PC.i1874
  %9260 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %9261 = zext i32 %9260 to i64
  store i64 %9261, i64* %RAX.i1875, align 8
  store %struct.Memory* %loadMem_4aef51, %struct.Memory** %MEMORY
  %loadMem_4aef58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 33
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %PC.i1871 = bitcast %union.anon* %9264 to i64*
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9266 = getelementptr inbounds %struct.GPR, %struct.GPR* %9265, i32 0, i32 1
  %9267 = getelementptr inbounds %struct.Reg, %struct.Reg* %9266, i32 0, i32 0
  %EAX.i1872 = bitcast %union.anon* %9267 to i32*
  %9268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9269 = getelementptr inbounds %struct.GPR, %struct.GPR* %9268, i32 0, i32 15
  %9270 = getelementptr inbounds %struct.Reg, %struct.Reg* %9269, i32 0, i32 0
  %RBP.i1873 = bitcast %union.anon* %9270 to i64*
  %9271 = load i64, i64* %RBP.i1873
  %9272 = sub i64 %9271, 35452
  %9273 = load i32, i32* %EAX.i1872
  %9274 = zext i32 %9273 to i64
  %9275 = load i64, i64* %PC.i1871
  %9276 = add i64 %9275, 6
  store i64 %9276, i64* %PC.i1871
  %9277 = inttoptr i64 %9272 to i32*
  store i32 %9273, i32* %9277
  store %struct.Memory* %loadMem_4aef58, %struct.Memory** %MEMORY
  %loadMem_4aef5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9279 = getelementptr inbounds %struct.GPR, %struct.GPR* %9278, i32 0, i32 33
  %9280 = getelementptr inbounds %struct.Reg, %struct.Reg* %9279, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %9280 to i64*
  %9281 = load i64, i64* %PC.i1870
  %9282 = add i64 %9281, 18
  %9283 = load i64, i64* %PC.i1870
  %9284 = add i64 %9283, 5
  store i64 %9284, i64* %PC.i1870
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9282, i64* %9285, align 8
  store %struct.Memory* %loadMem_4aef5e, %struct.Memory** %MEMORY
  br label %block_.L_4aef70

block_.L_4aef63:                                  ; preds = %block_4aef47
  %loadMem_4aef63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9287 = getelementptr inbounds %struct.GPR, %struct.GPR* %9286, i32 0, i32 33
  %9288 = getelementptr inbounds %struct.Reg, %struct.Reg* %9287, i32 0, i32 0
  %PC.i1868 = bitcast %union.anon* %9288 to i64*
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9290 = getelementptr inbounds %struct.GPR, %struct.GPR* %9289, i32 0, i32 1
  %9291 = getelementptr inbounds %struct.Reg, %struct.Reg* %9290, i32 0, i32 0
  %RAX.i1869 = bitcast %union.anon* %9291 to i64*
  %9292 = load i64, i64* %PC.i1868
  %9293 = add i64 %9292, 7
  store i64 %9293, i64* %PC.i1868
  %9294 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %9295 = zext i32 %9294 to i64
  store i64 %9295, i64* %RAX.i1869, align 8
  store %struct.Memory* %loadMem_4aef63, %struct.Memory** %MEMORY
  %loadMem_4aef6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9297 = getelementptr inbounds %struct.GPR, %struct.GPR* %9296, i32 0, i32 33
  %9298 = getelementptr inbounds %struct.Reg, %struct.Reg* %9297, i32 0, i32 0
  %PC.i1865 = bitcast %union.anon* %9298 to i64*
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9300 = getelementptr inbounds %struct.GPR, %struct.GPR* %9299, i32 0, i32 1
  %9301 = getelementptr inbounds %struct.Reg, %struct.Reg* %9300, i32 0, i32 0
  %EAX.i1866 = bitcast %union.anon* %9301 to i32*
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9303 = getelementptr inbounds %struct.GPR, %struct.GPR* %9302, i32 0, i32 15
  %9304 = getelementptr inbounds %struct.Reg, %struct.Reg* %9303, i32 0, i32 0
  %RBP.i1867 = bitcast %union.anon* %9304 to i64*
  %9305 = load i64, i64* %RBP.i1867
  %9306 = sub i64 %9305, 35452
  %9307 = load i32, i32* %EAX.i1866
  %9308 = zext i32 %9307 to i64
  %9309 = load i64, i64* %PC.i1865
  %9310 = add i64 %9309, 6
  store i64 %9310, i64* %PC.i1865
  %9311 = inttoptr i64 %9306 to i32*
  store i32 %9307, i32* %9311
  store %struct.Memory* %loadMem_4aef6a, %struct.Memory** %MEMORY
  br label %block_.L_4aef70

block_.L_4aef70:                                  ; preds = %block_.L_4aef63, %block_4aef51
  %loadMem_4aef70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9313 = getelementptr inbounds %struct.GPR, %struct.GPR* %9312, i32 0, i32 33
  %9314 = getelementptr inbounds %struct.Reg, %struct.Reg* %9313, i32 0, i32 0
  %PC.i1862 = bitcast %union.anon* %9314 to i64*
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9316 = getelementptr inbounds %struct.GPR, %struct.GPR* %9315, i32 0, i32 1
  %9317 = getelementptr inbounds %struct.Reg, %struct.Reg* %9316, i32 0, i32 0
  %RAX.i1863 = bitcast %union.anon* %9317 to i64*
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9319 = getelementptr inbounds %struct.GPR, %struct.GPR* %9318, i32 0, i32 15
  %9320 = getelementptr inbounds %struct.Reg, %struct.Reg* %9319, i32 0, i32 0
  %RBP.i1864 = bitcast %union.anon* %9320 to i64*
  %9321 = load i64, i64* %RBP.i1864
  %9322 = sub i64 %9321, 35452
  %9323 = load i64, i64* %PC.i1862
  %9324 = add i64 %9323, 6
  store i64 %9324, i64* %PC.i1862
  %9325 = inttoptr i64 %9322 to i32*
  %9326 = load i32, i32* %9325
  %9327 = zext i32 %9326 to i64
  store i64 %9327, i64* %RAX.i1863, align 8
  store %struct.Memory* %loadMem_4aef70, %struct.Memory** %MEMORY
  %loadMem_4aef76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9329 = getelementptr inbounds %struct.GPR, %struct.GPR* %9328, i32 0, i32 33
  %9330 = getelementptr inbounds %struct.Reg, %struct.Reg* %9329, i32 0, i32 0
  %PC.i1859 = bitcast %union.anon* %9330 to i64*
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 5
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %RCX.i1860 = bitcast %union.anon* %9333 to i64*
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 15
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %RBP.i1861 = bitcast %union.anon* %9336 to i64*
  %9337 = load i64, i64* %RBP.i1861
  %9338 = sub i64 %9337, 19184
  %9339 = load i64, i64* %PC.i1859
  %9340 = add i64 %9339, 7
  store i64 %9340, i64* %PC.i1859
  store i64 %9338, i64* %RCX.i1860, align 8
  store %struct.Memory* %loadMem_4aef76, %struct.Memory** %MEMORY
  %loadMem_4aef7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 33
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %PC.i1856 = bitcast %union.anon* %9343 to i64*
  %9344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9345 = getelementptr inbounds %struct.GPR, %struct.GPR* %9344, i32 0, i32 1
  %9346 = getelementptr inbounds %struct.Reg, %struct.Reg* %9345, i32 0, i32 0
  %EAX.i1857 = bitcast %union.anon* %9346 to i32*
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9348 = getelementptr inbounds %struct.GPR, %struct.GPR* %9347, i32 0, i32 15
  %9349 = getelementptr inbounds %struct.Reg, %struct.Reg* %9348, i32 0, i32 0
  %RBP.i1858 = bitcast %union.anon* %9349 to i64*
  %9350 = load i64, i64* %RBP.i1858
  %9351 = sub i64 %9350, 772
  %9352 = load i32, i32* %EAX.i1857
  %9353 = zext i32 %9352 to i64
  %9354 = load i64, i64* %PC.i1856
  %9355 = add i64 %9354, 6
  store i64 %9355, i64* %PC.i1856
  %9356 = inttoptr i64 %9351 to i32*
  store i32 %9352, i32* %9356
  store %struct.Memory* %loadMem_4aef7d, %struct.Memory** %MEMORY
  %loadMem_4aef83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 33
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %PC.i1853 = bitcast %union.anon* %9359 to i64*
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9361 = getelementptr inbounds %struct.GPR, %struct.GPR* %9360, i32 0, i32 5
  %9362 = getelementptr inbounds %struct.Reg, %struct.Reg* %9361, i32 0, i32 0
  %RCX.i1854 = bitcast %union.anon* %9362 to i64*
  %9363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9364 = getelementptr inbounds %struct.GPR, %struct.GPR* %9363, i32 0, i32 7
  %9365 = getelementptr inbounds %struct.Reg, %struct.Reg* %9364, i32 0, i32 0
  %RDX.i1855 = bitcast %union.anon* %9365 to i64*
  %9366 = load i64, i64* %RCX.i1854
  %9367 = load i64, i64* %PC.i1853
  %9368 = add i64 %9367, 3
  store i64 %9368, i64* %PC.i1853
  store i64 %9366, i64* %RDX.i1855, align 8
  store %struct.Memory* %loadMem_4aef83, %struct.Memory** %MEMORY
  %loadMem_4aef86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9370 = getelementptr inbounds %struct.GPR, %struct.GPR* %9369, i32 0, i32 33
  %9371 = getelementptr inbounds %struct.Reg, %struct.Reg* %9370, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %9371 to i64*
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9373 = getelementptr inbounds %struct.GPR, %struct.GPR* %9372, i32 0, i32 7
  %9374 = getelementptr inbounds %struct.Reg, %struct.Reg* %9373, i32 0, i32 0
  %RDX.i1852 = bitcast %union.anon* %9374 to i64*
  %9375 = load i64, i64* %RDX.i1852
  %9376 = load i64, i64* %PC.i1851
  %9377 = add i64 %9376, 7
  store i64 %9377, i64* %PC.i1851
  %9378 = add i64 2700, %9375
  store i64 %9378, i64* %RDX.i1852, align 8
  %9379 = icmp ult i64 %9378, %9375
  %9380 = icmp ult i64 %9378, 2700
  %9381 = or i1 %9379, %9380
  %9382 = zext i1 %9381 to i8
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9382, i8* %9383, align 1
  %9384 = trunc i64 %9378 to i32
  %9385 = and i32 %9384, 255
  %9386 = call i32 @llvm.ctpop.i32(i32 %9385)
  %9387 = trunc i32 %9386 to i8
  %9388 = and i8 %9387, 1
  %9389 = xor i8 %9388, 1
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9389, i8* %9390, align 1
  %9391 = xor i64 2700, %9375
  %9392 = xor i64 %9391, %9378
  %9393 = lshr i64 %9392, 4
  %9394 = trunc i64 %9393 to i8
  %9395 = and i8 %9394, 1
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9395, i8* %9396, align 1
  %9397 = icmp eq i64 %9378, 0
  %9398 = zext i1 %9397 to i8
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9398, i8* %9399, align 1
  %9400 = lshr i64 %9378, 63
  %9401 = trunc i64 %9400 to i8
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9401, i8* %9402, align 1
  %9403 = lshr i64 %9375, 63
  %9404 = xor i64 %9400, %9403
  %9405 = add i64 %9404, %9400
  %9406 = icmp eq i64 %9405, 2
  %9407 = zext i1 %9406 to i8
  %9408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9407, i8* %9408, align 1
  store %struct.Memory* %loadMem_4aef86, %struct.Memory** %MEMORY
  %loadMem_4aef8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9410 = getelementptr inbounds %struct.GPR, %struct.GPR* %9409, i32 0, i32 33
  %9411 = getelementptr inbounds %struct.Reg, %struct.Reg* %9410, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %9411 to i64*
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 9
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %RSI.i1849 = bitcast %union.anon* %9414 to i64*
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 15
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %RBP.i1850 = bitcast %union.anon* %9417 to i64*
  %9418 = load i64, i64* %RBP.i1850
  %9419 = sub i64 %9418, 4
  %9420 = load i64, i64* %PC.i1848
  %9421 = add i64 %9420, 4
  store i64 %9421, i64* %PC.i1848
  %9422 = inttoptr i64 %9419 to i32*
  %9423 = load i32, i32* %9422
  %9424 = sext i32 %9423 to i64
  store i64 %9424, i64* %RSI.i1849, align 8
  store %struct.Memory* %loadMem_4aef8d, %struct.Memory** %MEMORY
  %loadMem_4aef91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9426 = getelementptr inbounds %struct.GPR, %struct.GPR* %9425, i32 0, i32 33
  %9427 = getelementptr inbounds %struct.Reg, %struct.Reg* %9426, i32 0, i32 0
  %PC.i1846 = bitcast %union.anon* %9427 to i64*
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9429 = getelementptr inbounds %struct.GPR, %struct.GPR* %9428, i32 0, i32 9
  %9430 = getelementptr inbounds %struct.Reg, %struct.Reg* %9429, i32 0, i32 0
  %RSI.i1847 = bitcast %union.anon* %9430 to i64*
  %9431 = load i64, i64* %RSI.i1847
  %9432 = load i64, i64* %PC.i1846
  %9433 = add i64 %9432, 7
  store i64 %9433, i64* %PC.i1846
  %9434 = sext i64 %9431 to i128
  %9435 = and i128 %9434, -18446744073709551616
  %9436 = zext i64 %9431 to i128
  %9437 = or i128 %9435, %9436
  %9438 = mul i128 180, %9437
  %9439 = trunc i128 %9438 to i64
  store i64 %9439, i64* %RSI.i1847, align 8
  %9440 = sext i64 %9439 to i128
  %9441 = icmp ne i128 %9440, %9438
  %9442 = zext i1 %9441 to i8
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9442, i8* %9443, align 1
  %9444 = trunc i128 %9438 to i32
  %9445 = and i32 %9444, 255
  %9446 = call i32 @llvm.ctpop.i32(i32 %9445)
  %9447 = trunc i32 %9446 to i8
  %9448 = and i8 %9447, 1
  %9449 = xor i8 %9448, 1
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9449, i8* %9450, align 1
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9451, align 1
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9452, align 1
  %9453 = lshr i64 %9439, 63
  %9454 = trunc i64 %9453 to i8
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9454, i8* %9455, align 1
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9442, i8* %9456, align 1
  store %struct.Memory* %loadMem_4aef91, %struct.Memory** %MEMORY
  %loadMem_4aef98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9458 = getelementptr inbounds %struct.GPR, %struct.GPR* %9457, i32 0, i32 33
  %9459 = getelementptr inbounds %struct.Reg, %struct.Reg* %9458, i32 0, i32 0
  %PC.i1843 = bitcast %union.anon* %9459 to i64*
  %9460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9461 = getelementptr inbounds %struct.GPR, %struct.GPR* %9460, i32 0, i32 7
  %9462 = getelementptr inbounds %struct.Reg, %struct.Reg* %9461, i32 0, i32 0
  %RDX.i1844 = bitcast %union.anon* %9462 to i64*
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 9
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %RSI.i1845 = bitcast %union.anon* %9465 to i64*
  %9466 = load i64, i64* %RDX.i1844
  %9467 = load i64, i64* %RSI.i1845
  %9468 = load i64, i64* %PC.i1843
  %9469 = add i64 %9468, 3
  store i64 %9469, i64* %PC.i1843
  %9470 = add i64 %9467, %9466
  store i64 %9470, i64* %RDX.i1844, align 8
  %9471 = icmp ult i64 %9470, %9466
  %9472 = icmp ult i64 %9470, %9467
  %9473 = or i1 %9471, %9472
  %9474 = zext i1 %9473 to i8
  %9475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9474, i8* %9475, align 1
  %9476 = trunc i64 %9470 to i32
  %9477 = and i32 %9476, 255
  %9478 = call i32 @llvm.ctpop.i32(i32 %9477)
  %9479 = trunc i32 %9478 to i8
  %9480 = and i8 %9479, 1
  %9481 = xor i8 %9480, 1
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9481, i8* %9482, align 1
  %9483 = xor i64 %9467, %9466
  %9484 = xor i64 %9483, %9470
  %9485 = lshr i64 %9484, 4
  %9486 = trunc i64 %9485 to i8
  %9487 = and i8 %9486, 1
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9487, i8* %9488, align 1
  %9489 = icmp eq i64 %9470, 0
  %9490 = zext i1 %9489 to i8
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9490, i8* %9491, align 1
  %9492 = lshr i64 %9470, 63
  %9493 = trunc i64 %9492 to i8
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9493, i8* %9494, align 1
  %9495 = lshr i64 %9466, 63
  %9496 = lshr i64 %9467, 63
  %9497 = xor i64 %9492, %9495
  %9498 = xor i64 %9492, %9496
  %9499 = add i64 %9497, %9498
  %9500 = icmp eq i64 %9499, 2
  %9501 = zext i1 %9500 to i8
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9501, i8* %9502, align 1
  store %struct.Memory* %loadMem_4aef98, %struct.Memory** %MEMORY
  %loadMem_4aef9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9504 = getelementptr inbounds %struct.GPR, %struct.GPR* %9503, i32 0, i32 33
  %9505 = getelementptr inbounds %struct.Reg, %struct.Reg* %9504, i32 0, i32 0
  %PC.i1840 = bitcast %union.anon* %9505 to i64*
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9507 = getelementptr inbounds %struct.GPR, %struct.GPR* %9506, i32 0, i32 9
  %9508 = getelementptr inbounds %struct.Reg, %struct.Reg* %9507, i32 0, i32 0
  %RSI.i1841 = bitcast %union.anon* %9508 to i64*
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 15
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %RBP.i1842 = bitcast %union.anon* %9511 to i64*
  %9512 = load i64, i64* %RBP.i1842
  %9513 = sub i64 %9512, 8
  %9514 = load i64, i64* %PC.i1840
  %9515 = add i64 %9514, 4
  store i64 %9515, i64* %PC.i1840
  %9516 = inttoptr i64 %9513 to i32*
  %9517 = load i32, i32* %9516
  %9518 = sext i32 %9517 to i64
  store i64 %9518, i64* %RSI.i1841, align 8
  store %struct.Memory* %loadMem_4aef9b, %struct.Memory** %MEMORY
  %loadMem_4aef9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9520 = getelementptr inbounds %struct.GPR, %struct.GPR* %9519, i32 0, i32 33
  %9521 = getelementptr inbounds %struct.Reg, %struct.Reg* %9520, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %9521 to i64*
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 9
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %RSI.i1839 = bitcast %union.anon* %9524 to i64*
  %9525 = load i64, i64* %RSI.i1839
  %9526 = load i64, i64* %PC.i1838
  %9527 = add i64 %9526, 4
  store i64 %9527, i64* %PC.i1838
  %9528 = sext i64 %9525 to i128
  %9529 = and i128 %9528, -18446744073709551616
  %9530 = zext i64 %9525 to i128
  %9531 = or i128 %9529, %9530
  %9532 = mul i128 12, %9531
  %9533 = trunc i128 %9532 to i64
  store i64 %9533, i64* %RSI.i1839, align 8
  %9534 = sext i64 %9533 to i128
  %9535 = icmp ne i128 %9534, %9532
  %9536 = zext i1 %9535 to i8
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9536, i8* %9537, align 1
  %9538 = trunc i128 %9532 to i32
  %9539 = and i32 %9538, 255
  %9540 = call i32 @llvm.ctpop.i32(i32 %9539)
  %9541 = trunc i32 %9540 to i8
  %9542 = and i8 %9541, 1
  %9543 = xor i8 %9542, 1
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9543, i8* %9544, align 1
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9545, align 1
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9546, align 1
  %9547 = lshr i64 %9533, 63
  %9548 = trunc i64 %9547 to i8
  %9549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9548, i8* %9549, align 1
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9536, i8* %9550, align 1
  store %struct.Memory* %loadMem_4aef9f, %struct.Memory** %MEMORY
  %loadMem_4aefa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9552 = getelementptr inbounds %struct.GPR, %struct.GPR* %9551, i32 0, i32 33
  %9553 = getelementptr inbounds %struct.Reg, %struct.Reg* %9552, i32 0, i32 0
  %PC.i1835 = bitcast %union.anon* %9553 to i64*
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9555 = getelementptr inbounds %struct.GPR, %struct.GPR* %9554, i32 0, i32 7
  %9556 = getelementptr inbounds %struct.Reg, %struct.Reg* %9555, i32 0, i32 0
  %RDX.i1836 = bitcast %union.anon* %9556 to i64*
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9558 = getelementptr inbounds %struct.GPR, %struct.GPR* %9557, i32 0, i32 9
  %9559 = getelementptr inbounds %struct.Reg, %struct.Reg* %9558, i32 0, i32 0
  %RSI.i1837 = bitcast %union.anon* %9559 to i64*
  %9560 = load i64, i64* %RDX.i1836
  %9561 = load i64, i64* %RSI.i1837
  %9562 = load i64, i64* %PC.i1835
  %9563 = add i64 %9562, 3
  store i64 %9563, i64* %PC.i1835
  %9564 = add i64 %9561, %9560
  store i64 %9564, i64* %RDX.i1836, align 8
  %9565 = icmp ult i64 %9564, %9560
  %9566 = icmp ult i64 %9564, %9561
  %9567 = or i1 %9565, %9566
  %9568 = zext i1 %9567 to i8
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9568, i8* %9569, align 1
  %9570 = trunc i64 %9564 to i32
  %9571 = and i32 %9570, 255
  %9572 = call i32 @llvm.ctpop.i32(i32 %9571)
  %9573 = trunc i32 %9572 to i8
  %9574 = and i8 %9573, 1
  %9575 = xor i8 %9574, 1
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9575, i8* %9576, align 1
  %9577 = xor i64 %9561, %9560
  %9578 = xor i64 %9577, %9564
  %9579 = lshr i64 %9578, 4
  %9580 = trunc i64 %9579 to i8
  %9581 = and i8 %9580, 1
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9581, i8* %9582, align 1
  %9583 = icmp eq i64 %9564, 0
  %9584 = zext i1 %9583 to i8
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9584, i8* %9585, align 1
  %9586 = lshr i64 %9564, 63
  %9587 = trunc i64 %9586 to i8
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9587, i8* %9588, align 1
  %9589 = lshr i64 %9560, 63
  %9590 = lshr i64 %9561, 63
  %9591 = xor i64 %9586, %9589
  %9592 = xor i64 %9586, %9590
  %9593 = add i64 %9591, %9592
  %9594 = icmp eq i64 %9593, 2
  %9595 = zext i1 %9594 to i8
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9595, i8* %9596, align 1
  store %struct.Memory* %loadMem_4aefa3, %struct.Memory** %MEMORY
  %loadMem_4aefa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9598 = getelementptr inbounds %struct.GPR, %struct.GPR* %9597, i32 0, i32 33
  %9599 = getelementptr inbounds %struct.Reg, %struct.Reg* %9598, i32 0, i32 0
  %PC.i1832 = bitcast %union.anon* %9599 to i64*
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9601 = getelementptr inbounds %struct.GPR, %struct.GPR* %9600, i32 0, i32 9
  %9602 = getelementptr inbounds %struct.Reg, %struct.Reg* %9601, i32 0, i32 0
  %RSI.i1833 = bitcast %union.anon* %9602 to i64*
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9604 = getelementptr inbounds %struct.GPR, %struct.GPR* %9603, i32 0, i32 15
  %9605 = getelementptr inbounds %struct.Reg, %struct.Reg* %9604, i32 0, i32 0
  %RBP.i1834 = bitcast %union.anon* %9605 to i64*
  %9606 = load i64, i64* %RBP.i1834
  %9607 = sub i64 %9606, 40
  %9608 = load i64, i64* %PC.i1832
  %9609 = add i64 %9608, 4
  store i64 %9609, i64* %PC.i1832
  %9610 = inttoptr i64 %9607 to i32*
  %9611 = load i32, i32* %9610
  %9612 = sext i32 %9611 to i64
  store i64 %9612, i64* %RSI.i1833, align 8
  store %struct.Memory* %loadMem_4aefa6, %struct.Memory** %MEMORY
  %loadMem_4aefaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9614 = getelementptr inbounds %struct.GPR, %struct.GPR* %9613, i32 0, i32 33
  %9615 = getelementptr inbounds %struct.Reg, %struct.Reg* %9614, i32 0, i32 0
  %PC.i1828 = bitcast %union.anon* %9615 to i64*
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9617 = getelementptr inbounds %struct.GPR, %struct.GPR* %9616, i32 0, i32 1
  %9618 = getelementptr inbounds %struct.Reg, %struct.Reg* %9617, i32 0, i32 0
  %RAX.i1829 = bitcast %union.anon* %9618 to i64*
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9620 = getelementptr inbounds %struct.GPR, %struct.GPR* %9619, i32 0, i32 7
  %9621 = getelementptr inbounds %struct.Reg, %struct.Reg* %9620, i32 0, i32 0
  %RDX.i1830 = bitcast %union.anon* %9621 to i64*
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9623 = getelementptr inbounds %struct.GPR, %struct.GPR* %9622, i32 0, i32 9
  %9624 = getelementptr inbounds %struct.Reg, %struct.Reg* %9623, i32 0, i32 0
  %RSI.i1831 = bitcast %union.anon* %9624 to i64*
  %9625 = load i64, i64* %RDX.i1830
  %9626 = load i64, i64* %RSI.i1831
  %9627 = mul i64 %9626, 4
  %9628 = add i64 %9627, %9625
  %9629 = load i64, i64* %PC.i1828
  %9630 = add i64 %9629, 3
  store i64 %9630, i64* %PC.i1828
  %9631 = inttoptr i64 %9628 to i32*
  %9632 = load i32, i32* %9631
  %9633 = zext i32 %9632 to i64
  store i64 %9633, i64* %RAX.i1829, align 8
  store %struct.Memory* %loadMem_4aefaa, %struct.Memory** %MEMORY
  %loadMem_4aefad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9635 = getelementptr inbounds %struct.GPR, %struct.GPR* %9634, i32 0, i32 33
  %9636 = getelementptr inbounds %struct.Reg, %struct.Reg* %9635, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %9636 to i64*
  %9637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9638 = getelementptr inbounds %struct.GPR, %struct.GPR* %9637, i32 0, i32 7
  %9639 = getelementptr inbounds %struct.Reg, %struct.Reg* %9638, i32 0, i32 0
  %RDX.i1827 = bitcast %union.anon* %9639 to i64*
  %9640 = load i64, i64* %PC.i1826
  %9641 = add i64 %9640, 8
  store i64 %9641, i64* %PC.i1826
  %9642 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %9642, i64* %RDX.i1827, align 8
  store %struct.Memory* %loadMem_4aefad, %struct.Memory** %MEMORY
  %loadMem_4aefb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9644 = getelementptr inbounds %struct.GPR, %struct.GPR* %9643, i32 0, i32 33
  %9645 = getelementptr inbounds %struct.Reg, %struct.Reg* %9644, i32 0, i32 0
  %PC.i1824 = bitcast %union.anon* %9645 to i64*
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9647 = getelementptr inbounds %struct.GPR, %struct.GPR* %9646, i32 0, i32 7
  %9648 = getelementptr inbounds %struct.Reg, %struct.Reg* %9647, i32 0, i32 0
  %RDX.i1825 = bitcast %union.anon* %9648 to i64*
  %9649 = load i64, i64* %RDX.i1825
  %9650 = add i64 %9649, 8
  %9651 = load i64, i64* %PC.i1824
  %9652 = add i64 %9651, 4
  store i64 %9652, i64* %PC.i1824
  %9653 = inttoptr i64 %9650 to i64*
  %9654 = load i64, i64* %9653
  store i64 %9654, i64* %RDX.i1825, align 8
  store %struct.Memory* %loadMem_4aefb5, %struct.Memory** %MEMORY
  %loadMem_4aefb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9656 = getelementptr inbounds %struct.GPR, %struct.GPR* %9655, i32 0, i32 33
  %9657 = getelementptr inbounds %struct.Reg, %struct.Reg* %9656, i32 0, i32 0
  %PC.i1821 = bitcast %union.anon* %9657 to i64*
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9659 = getelementptr inbounds %struct.GPR, %struct.GPR* %9658, i32 0, i32 9
  %9660 = getelementptr inbounds %struct.Reg, %struct.Reg* %9659, i32 0, i32 0
  %RSI.i1822 = bitcast %union.anon* %9660 to i64*
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 15
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %RBP.i1823 = bitcast %union.anon* %9663 to i64*
  %9664 = load i64, i64* %RBP.i1823
  %9665 = sub i64 %9664, 4
  %9666 = load i64, i64* %PC.i1821
  %9667 = add i64 %9666, 4
  store i64 %9667, i64* %PC.i1821
  %9668 = inttoptr i64 %9665 to i32*
  %9669 = load i32, i32* %9668
  %9670 = sext i32 %9669 to i64
  store i64 %9670, i64* %RSI.i1822, align 8
  store %struct.Memory* %loadMem_4aefb9, %struct.Memory** %MEMORY
  %loadMem_4aefbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9672 = getelementptr inbounds %struct.GPR, %struct.GPR* %9671, i32 0, i32 33
  %9673 = getelementptr inbounds %struct.Reg, %struct.Reg* %9672, i32 0, i32 0
  %PC.i1818 = bitcast %union.anon* %9673 to i64*
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 7
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %RDX.i1819 = bitcast %union.anon* %9676 to i64*
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9678 = getelementptr inbounds %struct.GPR, %struct.GPR* %9677, i32 0, i32 9
  %9679 = getelementptr inbounds %struct.Reg, %struct.Reg* %9678, i32 0, i32 0
  %RSI.i1820 = bitcast %union.anon* %9679 to i64*
  %9680 = load i64, i64* %RDX.i1819
  %9681 = load i64, i64* %RSI.i1820
  %9682 = mul i64 %9681, 8
  %9683 = add i64 %9682, %9680
  %9684 = load i64, i64* %PC.i1818
  %9685 = add i64 %9684, 4
  store i64 %9685, i64* %PC.i1818
  %9686 = inttoptr i64 %9683 to i64*
  %9687 = load i64, i64* %9686
  store i64 %9687, i64* %RDX.i1819, align 8
  store %struct.Memory* %loadMem_4aefbd, %struct.Memory** %MEMORY
  %loadMem_4aefc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9689 = getelementptr inbounds %struct.GPR, %struct.GPR* %9688, i32 0, i32 33
  %9690 = getelementptr inbounds %struct.Reg, %struct.Reg* %9689, i32 0, i32 0
  %PC.i1815 = bitcast %union.anon* %9690 to i64*
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9692 = getelementptr inbounds %struct.GPR, %struct.GPR* %9691, i32 0, i32 9
  %9693 = getelementptr inbounds %struct.Reg, %struct.Reg* %9692, i32 0, i32 0
  %RSI.i1816 = bitcast %union.anon* %9693 to i64*
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9695 = getelementptr inbounds %struct.GPR, %struct.GPR* %9694, i32 0, i32 15
  %9696 = getelementptr inbounds %struct.Reg, %struct.Reg* %9695, i32 0, i32 0
  %RBP.i1817 = bitcast %union.anon* %9696 to i64*
  %9697 = load i64, i64* %RBP.i1817
  %9698 = sub i64 %9697, 8
  %9699 = load i64, i64* %PC.i1815
  %9700 = add i64 %9699, 4
  store i64 %9700, i64* %PC.i1815
  %9701 = inttoptr i64 %9698 to i32*
  %9702 = load i32, i32* %9701
  %9703 = sext i32 %9702 to i64
  store i64 %9703, i64* %RSI.i1816, align 8
  store %struct.Memory* %loadMem_4aefc1, %struct.Memory** %MEMORY
  %loadMem_4aefc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9705 = getelementptr inbounds %struct.GPR, %struct.GPR* %9704, i32 0, i32 33
  %9706 = getelementptr inbounds %struct.Reg, %struct.Reg* %9705, i32 0, i32 0
  %PC.i1812 = bitcast %union.anon* %9706 to i64*
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9708 = getelementptr inbounds %struct.GPR, %struct.GPR* %9707, i32 0, i32 7
  %9709 = getelementptr inbounds %struct.Reg, %struct.Reg* %9708, i32 0, i32 0
  %RDX.i1813 = bitcast %union.anon* %9709 to i64*
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9711 = getelementptr inbounds %struct.GPR, %struct.GPR* %9710, i32 0, i32 9
  %9712 = getelementptr inbounds %struct.Reg, %struct.Reg* %9711, i32 0, i32 0
  %RSI.i1814 = bitcast %union.anon* %9712 to i64*
  %9713 = load i64, i64* %RDX.i1813
  %9714 = load i64, i64* %RSI.i1814
  %9715 = mul i64 %9714, 8
  %9716 = add i64 %9715, %9713
  %9717 = load i64, i64* %PC.i1812
  %9718 = add i64 %9717, 4
  store i64 %9718, i64* %PC.i1812
  %9719 = inttoptr i64 %9716 to i64*
  %9720 = load i64, i64* %9719
  store i64 %9720, i64* %RDX.i1813, align 8
  store %struct.Memory* %loadMem_4aefc5, %struct.Memory** %MEMORY
  %loadMem_4aefc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 33
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %PC.i1809 = bitcast %union.anon* %9723 to i64*
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 9
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %RSI.i1810 = bitcast %union.anon* %9726 to i64*
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9728 = getelementptr inbounds %struct.GPR, %struct.GPR* %9727, i32 0, i32 15
  %9729 = getelementptr inbounds %struct.Reg, %struct.Reg* %9728, i32 0, i32 0
  %RBP.i1811 = bitcast %union.anon* %9729 to i64*
  %9730 = load i64, i64* %RBP.i1811
  %9731 = sub i64 %9730, 40
  %9732 = load i64, i64* %PC.i1809
  %9733 = add i64 %9732, 4
  store i64 %9733, i64* %PC.i1809
  %9734 = inttoptr i64 %9731 to i32*
  %9735 = load i32, i32* %9734
  %9736 = sext i32 %9735 to i64
  store i64 %9736, i64* %RSI.i1810, align 8
  store %struct.Memory* %loadMem_4aefc9, %struct.Memory** %MEMORY
  %loadMem_4aefcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9738 = getelementptr inbounds %struct.GPR, %struct.GPR* %9737, i32 0, i32 33
  %9739 = getelementptr inbounds %struct.Reg, %struct.Reg* %9738, i32 0, i32 0
  %PC.i1805 = bitcast %union.anon* %9739 to i64*
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9741 = getelementptr inbounds %struct.GPR, %struct.GPR* %9740, i32 0, i32 1
  %9742 = getelementptr inbounds %struct.Reg, %struct.Reg* %9741, i32 0, i32 0
  %EAX.i1806 = bitcast %union.anon* %9742 to i32*
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9744 = getelementptr inbounds %struct.GPR, %struct.GPR* %9743, i32 0, i32 7
  %9745 = getelementptr inbounds %struct.Reg, %struct.Reg* %9744, i32 0, i32 0
  %RDX.i1807 = bitcast %union.anon* %9745 to i64*
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9747 = getelementptr inbounds %struct.GPR, %struct.GPR* %9746, i32 0, i32 9
  %9748 = getelementptr inbounds %struct.Reg, %struct.Reg* %9747, i32 0, i32 0
  %RSI.i1808 = bitcast %union.anon* %9748 to i64*
  %9749 = load i64, i64* %RDX.i1807
  %9750 = load i64, i64* %RSI.i1808
  %9751 = mul i64 %9750, 4
  %9752 = add i64 %9751, %9749
  %9753 = load i32, i32* %EAX.i1806
  %9754 = zext i32 %9753 to i64
  %9755 = load i64, i64* %PC.i1805
  %9756 = add i64 %9755, 3
  store i64 %9756, i64* %PC.i1805
  %9757 = inttoptr i64 %9752 to i32*
  store i32 %9753, i32* %9757
  store %struct.Memory* %loadMem_4aefcd, %struct.Memory** %MEMORY
  %loadMem_4aefd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 33
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %PC.i1802 = bitcast %union.anon* %9760 to i64*
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 7
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %RDX.i1803 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 15
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RBP.i1804 = bitcast %union.anon* %9766 to i64*
  %9767 = load i64, i64* %RBP.i1804
  %9768 = sub i64 %9767, 4
  %9769 = load i64, i64* %PC.i1802
  %9770 = add i64 %9769, 4
  store i64 %9770, i64* %PC.i1802
  %9771 = inttoptr i64 %9768 to i32*
  %9772 = load i32, i32* %9771
  %9773 = sext i32 %9772 to i64
  store i64 %9773, i64* %RDX.i1803, align 8
  store %struct.Memory* %loadMem_4aefd0, %struct.Memory** %MEMORY
  %loadMem_4aefd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 33
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %PC.i1800 = bitcast %union.anon* %9776 to i64*
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 7
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %RDX.i1801 = bitcast %union.anon* %9779 to i64*
  %9780 = load i64, i64* %RDX.i1801
  %9781 = load i64, i64* %PC.i1800
  %9782 = add i64 %9781, 7
  store i64 %9782, i64* %PC.i1800
  %9783 = sext i64 %9780 to i128
  %9784 = and i128 %9783, -18446744073709551616
  %9785 = zext i64 %9780 to i128
  %9786 = or i128 %9784, %9785
  %9787 = mul i128 180, %9786
  %9788 = trunc i128 %9787 to i64
  store i64 %9788, i64* %RDX.i1801, align 8
  %9789 = sext i64 %9788 to i128
  %9790 = icmp ne i128 %9789, %9787
  %9791 = zext i1 %9790 to i8
  %9792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9791, i8* %9792, align 1
  %9793 = trunc i128 %9787 to i32
  %9794 = and i32 %9793, 255
  %9795 = call i32 @llvm.ctpop.i32(i32 %9794)
  %9796 = trunc i32 %9795 to i8
  %9797 = and i8 %9796, 1
  %9798 = xor i8 %9797, 1
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9798, i8* %9799, align 1
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9800, align 1
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9801, align 1
  %9802 = lshr i64 %9788, 63
  %9803 = trunc i64 %9802 to i8
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9803, i8* %9804, align 1
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9791, i8* %9805, align 1
  store %struct.Memory* %loadMem_4aefd4, %struct.Memory** %MEMORY
  %loadMem_4aefdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9807 = getelementptr inbounds %struct.GPR, %struct.GPR* %9806, i32 0, i32 33
  %9808 = getelementptr inbounds %struct.Reg, %struct.Reg* %9807, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %9808 to i64*
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9810 = getelementptr inbounds %struct.GPR, %struct.GPR* %9809, i32 0, i32 5
  %9811 = getelementptr inbounds %struct.Reg, %struct.Reg* %9810, i32 0, i32 0
  %RCX.i1798 = bitcast %union.anon* %9811 to i64*
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9813 = getelementptr inbounds %struct.GPR, %struct.GPR* %9812, i32 0, i32 7
  %9814 = getelementptr inbounds %struct.Reg, %struct.Reg* %9813, i32 0, i32 0
  %RDX.i1799 = bitcast %union.anon* %9814 to i64*
  %9815 = load i64, i64* %RCX.i1798
  %9816 = load i64, i64* %RDX.i1799
  %9817 = load i64, i64* %PC.i1797
  %9818 = add i64 %9817, 3
  store i64 %9818, i64* %PC.i1797
  %9819 = add i64 %9816, %9815
  store i64 %9819, i64* %RCX.i1798, align 8
  %9820 = icmp ult i64 %9819, %9815
  %9821 = icmp ult i64 %9819, %9816
  %9822 = or i1 %9820, %9821
  %9823 = zext i1 %9822 to i8
  %9824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9823, i8* %9824, align 1
  %9825 = trunc i64 %9819 to i32
  %9826 = and i32 %9825, 255
  %9827 = call i32 @llvm.ctpop.i32(i32 %9826)
  %9828 = trunc i32 %9827 to i8
  %9829 = and i8 %9828, 1
  %9830 = xor i8 %9829, 1
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9830, i8* %9831, align 1
  %9832 = xor i64 %9816, %9815
  %9833 = xor i64 %9832, %9819
  %9834 = lshr i64 %9833, 4
  %9835 = trunc i64 %9834 to i8
  %9836 = and i8 %9835, 1
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9836, i8* %9837, align 1
  %9838 = icmp eq i64 %9819, 0
  %9839 = zext i1 %9838 to i8
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9839, i8* %9840, align 1
  %9841 = lshr i64 %9819, 63
  %9842 = trunc i64 %9841 to i8
  %9843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9842, i8* %9843, align 1
  %9844 = lshr i64 %9815, 63
  %9845 = lshr i64 %9816, 63
  %9846 = xor i64 %9841, %9844
  %9847 = xor i64 %9841, %9845
  %9848 = add i64 %9846, %9847
  %9849 = icmp eq i64 %9848, 2
  %9850 = zext i1 %9849 to i8
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9850, i8* %9851, align 1
  store %struct.Memory* %loadMem_4aefdb, %struct.Memory** %MEMORY
  %loadMem_4aefde = load %struct.Memory*, %struct.Memory** %MEMORY
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9853 = getelementptr inbounds %struct.GPR, %struct.GPR* %9852, i32 0, i32 33
  %9854 = getelementptr inbounds %struct.Reg, %struct.Reg* %9853, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %9854 to i64*
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9856 = getelementptr inbounds %struct.GPR, %struct.GPR* %9855, i32 0, i32 7
  %9857 = getelementptr inbounds %struct.Reg, %struct.Reg* %9856, i32 0, i32 0
  %RDX.i1795 = bitcast %union.anon* %9857 to i64*
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9859 = getelementptr inbounds %struct.GPR, %struct.GPR* %9858, i32 0, i32 15
  %9860 = getelementptr inbounds %struct.Reg, %struct.Reg* %9859, i32 0, i32 0
  %RBP.i1796 = bitcast %union.anon* %9860 to i64*
  %9861 = load i64, i64* %RBP.i1796
  %9862 = sub i64 %9861, 8
  %9863 = load i64, i64* %PC.i1794
  %9864 = add i64 %9863, 4
  store i64 %9864, i64* %PC.i1794
  %9865 = inttoptr i64 %9862 to i32*
  %9866 = load i32, i32* %9865
  %9867 = sext i32 %9866 to i64
  store i64 %9867, i64* %RDX.i1795, align 8
  store %struct.Memory* %loadMem_4aefde, %struct.Memory** %MEMORY
  %loadMem_4aefe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9869 = getelementptr inbounds %struct.GPR, %struct.GPR* %9868, i32 0, i32 33
  %9870 = getelementptr inbounds %struct.Reg, %struct.Reg* %9869, i32 0, i32 0
  %PC.i1792 = bitcast %union.anon* %9870 to i64*
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9872 = getelementptr inbounds %struct.GPR, %struct.GPR* %9871, i32 0, i32 7
  %9873 = getelementptr inbounds %struct.Reg, %struct.Reg* %9872, i32 0, i32 0
  %RDX.i1793 = bitcast %union.anon* %9873 to i64*
  %9874 = load i64, i64* %RDX.i1793
  %9875 = load i64, i64* %PC.i1792
  %9876 = add i64 %9875, 4
  store i64 %9876, i64* %PC.i1792
  %9877 = sext i64 %9874 to i128
  %9878 = and i128 %9877, -18446744073709551616
  %9879 = zext i64 %9874 to i128
  %9880 = or i128 %9878, %9879
  %9881 = mul i128 12, %9880
  %9882 = trunc i128 %9881 to i64
  store i64 %9882, i64* %RDX.i1793, align 8
  %9883 = sext i64 %9882 to i128
  %9884 = icmp ne i128 %9883, %9881
  %9885 = zext i1 %9884 to i8
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9885, i8* %9886, align 1
  %9887 = trunc i128 %9881 to i32
  %9888 = and i32 %9887, 255
  %9889 = call i32 @llvm.ctpop.i32(i32 %9888)
  %9890 = trunc i32 %9889 to i8
  %9891 = and i8 %9890, 1
  %9892 = xor i8 %9891, 1
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9892, i8* %9893, align 1
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9894, align 1
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9895, align 1
  %9896 = lshr i64 %9882, 63
  %9897 = trunc i64 %9896 to i8
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9897, i8* %9898, align 1
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9885, i8* %9899, align 1
  store %struct.Memory* %loadMem_4aefe2, %struct.Memory** %MEMORY
  %loadMem_4aefe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9901 = getelementptr inbounds %struct.GPR, %struct.GPR* %9900, i32 0, i32 33
  %9902 = getelementptr inbounds %struct.Reg, %struct.Reg* %9901, i32 0, i32 0
  %PC.i1789 = bitcast %union.anon* %9902 to i64*
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9904 = getelementptr inbounds %struct.GPR, %struct.GPR* %9903, i32 0, i32 5
  %9905 = getelementptr inbounds %struct.Reg, %struct.Reg* %9904, i32 0, i32 0
  %RCX.i1790 = bitcast %union.anon* %9905 to i64*
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9907 = getelementptr inbounds %struct.GPR, %struct.GPR* %9906, i32 0, i32 7
  %9908 = getelementptr inbounds %struct.Reg, %struct.Reg* %9907, i32 0, i32 0
  %RDX.i1791 = bitcast %union.anon* %9908 to i64*
  %9909 = load i64, i64* %RCX.i1790
  %9910 = load i64, i64* %RDX.i1791
  %9911 = load i64, i64* %PC.i1789
  %9912 = add i64 %9911, 3
  store i64 %9912, i64* %PC.i1789
  %9913 = add i64 %9910, %9909
  store i64 %9913, i64* %RCX.i1790, align 8
  %9914 = icmp ult i64 %9913, %9909
  %9915 = icmp ult i64 %9913, %9910
  %9916 = or i1 %9914, %9915
  %9917 = zext i1 %9916 to i8
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9917, i8* %9918, align 1
  %9919 = trunc i64 %9913 to i32
  %9920 = and i32 %9919, 255
  %9921 = call i32 @llvm.ctpop.i32(i32 %9920)
  %9922 = trunc i32 %9921 to i8
  %9923 = and i8 %9922, 1
  %9924 = xor i8 %9923, 1
  %9925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9924, i8* %9925, align 1
  %9926 = xor i64 %9910, %9909
  %9927 = xor i64 %9926, %9913
  %9928 = lshr i64 %9927, 4
  %9929 = trunc i64 %9928 to i8
  %9930 = and i8 %9929, 1
  %9931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9930, i8* %9931, align 1
  %9932 = icmp eq i64 %9913, 0
  %9933 = zext i1 %9932 to i8
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9933, i8* %9934, align 1
  %9935 = lshr i64 %9913, 63
  %9936 = trunc i64 %9935 to i8
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9936, i8* %9937, align 1
  %9938 = lshr i64 %9909, 63
  %9939 = lshr i64 %9910, 63
  %9940 = xor i64 %9935, %9938
  %9941 = xor i64 %9935, %9939
  %9942 = add i64 %9940, %9941
  %9943 = icmp eq i64 %9942, 2
  %9944 = zext i1 %9943 to i8
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9944, i8* %9945, align 1
  store %struct.Memory* %loadMem_4aefe6, %struct.Memory** %MEMORY
  %loadMem_4aefe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9947 = getelementptr inbounds %struct.GPR, %struct.GPR* %9946, i32 0, i32 33
  %9948 = getelementptr inbounds %struct.Reg, %struct.Reg* %9947, i32 0, i32 0
  %PC.i1786 = bitcast %union.anon* %9948 to i64*
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9950 = getelementptr inbounds %struct.GPR, %struct.GPR* %9949, i32 0, i32 7
  %9951 = getelementptr inbounds %struct.Reg, %struct.Reg* %9950, i32 0, i32 0
  %RDX.i1787 = bitcast %union.anon* %9951 to i64*
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9953 = getelementptr inbounds %struct.GPR, %struct.GPR* %9952, i32 0, i32 15
  %9954 = getelementptr inbounds %struct.Reg, %struct.Reg* %9953, i32 0, i32 0
  %RBP.i1788 = bitcast %union.anon* %9954 to i64*
  %9955 = load i64, i64* %RBP.i1788
  %9956 = sub i64 %9955, 40
  %9957 = load i64, i64* %PC.i1786
  %9958 = add i64 %9957, 4
  store i64 %9958, i64* %PC.i1786
  %9959 = inttoptr i64 %9956 to i32*
  %9960 = load i32, i32* %9959
  %9961 = sext i32 %9960 to i64
  store i64 %9961, i64* %RDX.i1787, align 8
  store %struct.Memory* %loadMem_4aefe9, %struct.Memory** %MEMORY
  %loadMem_4aefed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9963 = getelementptr inbounds %struct.GPR, %struct.GPR* %9962, i32 0, i32 33
  %9964 = getelementptr inbounds %struct.Reg, %struct.Reg* %9963, i32 0, i32 0
  %PC.i1782 = bitcast %union.anon* %9964 to i64*
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 1
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %RAX.i1783 = bitcast %union.anon* %9967 to i64*
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9969 = getelementptr inbounds %struct.GPR, %struct.GPR* %9968, i32 0, i32 5
  %9970 = getelementptr inbounds %struct.Reg, %struct.Reg* %9969, i32 0, i32 0
  %RCX.i1784 = bitcast %union.anon* %9970 to i64*
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9972 = getelementptr inbounds %struct.GPR, %struct.GPR* %9971, i32 0, i32 7
  %9973 = getelementptr inbounds %struct.Reg, %struct.Reg* %9972, i32 0, i32 0
  %RDX.i1785 = bitcast %union.anon* %9973 to i64*
  %9974 = load i64, i64* %RCX.i1784
  %9975 = load i64, i64* %RDX.i1785
  %9976 = mul i64 %9975, 4
  %9977 = add i64 %9976, %9974
  %9978 = load i64, i64* %PC.i1782
  %9979 = add i64 %9978, 3
  store i64 %9979, i64* %PC.i1782
  %9980 = inttoptr i64 %9977 to i32*
  %9981 = load i32, i32* %9980
  %9982 = zext i32 %9981 to i64
  store i64 %9982, i64* %RAX.i1783, align 8
  store %struct.Memory* %loadMem_4aefed, %struct.Memory** %MEMORY
  %loadMem_4aeff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9984 = getelementptr inbounds %struct.GPR, %struct.GPR* %9983, i32 0, i32 33
  %9985 = getelementptr inbounds %struct.Reg, %struct.Reg* %9984, i32 0, i32 0
  %PC.i1780 = bitcast %union.anon* %9985 to i64*
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9987 = getelementptr inbounds %struct.GPR, %struct.GPR* %9986, i32 0, i32 5
  %9988 = getelementptr inbounds %struct.Reg, %struct.Reg* %9987, i32 0, i32 0
  %RCX.i1781 = bitcast %union.anon* %9988 to i64*
  %9989 = load i64, i64* %PC.i1780
  %9990 = add i64 %9989, 8
  store i64 %9990, i64* %PC.i1780
  %9991 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %9991, i64* %RCX.i1781, align 8
  store %struct.Memory* %loadMem_4aeff0, %struct.Memory** %MEMORY
  %loadMem_4aeff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9993 = getelementptr inbounds %struct.GPR, %struct.GPR* %9992, i32 0, i32 33
  %9994 = getelementptr inbounds %struct.Reg, %struct.Reg* %9993, i32 0, i32 0
  %PC.i1778 = bitcast %union.anon* %9994 to i64*
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9996 = getelementptr inbounds %struct.GPR, %struct.GPR* %9995, i32 0, i32 5
  %9997 = getelementptr inbounds %struct.Reg, %struct.Reg* %9996, i32 0, i32 0
  %RCX.i1779 = bitcast %union.anon* %9997 to i64*
  %9998 = load i64, i64* %RCX.i1779
  %9999 = load i64, i64* %PC.i1778
  %10000 = add i64 %9999, 3
  store i64 %10000, i64* %PC.i1778
  %10001 = inttoptr i64 %9998 to i64*
  %10002 = load i64, i64* %10001
  store i64 %10002, i64* %RCX.i1779, align 8
  store %struct.Memory* %loadMem_4aeff8, %struct.Memory** %MEMORY
  %loadMem_4aeffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10004 = getelementptr inbounds %struct.GPR, %struct.GPR* %10003, i32 0, i32 33
  %10005 = getelementptr inbounds %struct.Reg, %struct.Reg* %10004, i32 0, i32 0
  %PC.i1775 = bitcast %union.anon* %10005 to i64*
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10007 = getelementptr inbounds %struct.GPR, %struct.GPR* %10006, i32 0, i32 7
  %10008 = getelementptr inbounds %struct.Reg, %struct.Reg* %10007, i32 0, i32 0
  %RDX.i1776 = bitcast %union.anon* %10008 to i64*
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10010 = getelementptr inbounds %struct.GPR, %struct.GPR* %10009, i32 0, i32 15
  %10011 = getelementptr inbounds %struct.Reg, %struct.Reg* %10010, i32 0, i32 0
  %RBP.i1777 = bitcast %union.anon* %10011 to i64*
  %10012 = load i64, i64* %RBP.i1777
  %10013 = sub i64 %10012, 4
  %10014 = load i64, i64* %PC.i1775
  %10015 = add i64 %10014, 4
  store i64 %10015, i64* %PC.i1775
  %10016 = inttoptr i64 %10013 to i32*
  %10017 = load i32, i32* %10016
  %10018 = sext i32 %10017 to i64
  store i64 %10018, i64* %RDX.i1776, align 8
  store %struct.Memory* %loadMem_4aeffb, %struct.Memory** %MEMORY
  %loadMem_4aefff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10020 = getelementptr inbounds %struct.GPR, %struct.GPR* %10019, i32 0, i32 33
  %10021 = getelementptr inbounds %struct.Reg, %struct.Reg* %10020, i32 0, i32 0
  %PC.i1772 = bitcast %union.anon* %10021 to i64*
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10023 = getelementptr inbounds %struct.GPR, %struct.GPR* %10022, i32 0, i32 5
  %10024 = getelementptr inbounds %struct.Reg, %struct.Reg* %10023, i32 0, i32 0
  %RCX.i1773 = bitcast %union.anon* %10024 to i64*
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10026 = getelementptr inbounds %struct.GPR, %struct.GPR* %10025, i32 0, i32 7
  %10027 = getelementptr inbounds %struct.Reg, %struct.Reg* %10026, i32 0, i32 0
  %RDX.i1774 = bitcast %union.anon* %10027 to i64*
  %10028 = load i64, i64* %RCX.i1773
  %10029 = load i64, i64* %RDX.i1774
  %10030 = mul i64 %10029, 8
  %10031 = add i64 %10030, %10028
  %10032 = load i64, i64* %PC.i1772
  %10033 = add i64 %10032, 4
  store i64 %10033, i64* %PC.i1772
  %10034 = inttoptr i64 %10031 to i64*
  %10035 = load i64, i64* %10034
  store i64 %10035, i64* %RCX.i1773, align 8
  store %struct.Memory* %loadMem_4aefff, %struct.Memory** %MEMORY
  %loadMem_4af003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10037 = getelementptr inbounds %struct.GPR, %struct.GPR* %10036, i32 0, i32 33
  %10038 = getelementptr inbounds %struct.Reg, %struct.Reg* %10037, i32 0, i32 0
  %PC.i1769 = bitcast %union.anon* %10038 to i64*
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10040 = getelementptr inbounds %struct.GPR, %struct.GPR* %10039, i32 0, i32 7
  %10041 = getelementptr inbounds %struct.Reg, %struct.Reg* %10040, i32 0, i32 0
  %RDX.i1770 = bitcast %union.anon* %10041 to i64*
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10043 = getelementptr inbounds %struct.GPR, %struct.GPR* %10042, i32 0, i32 15
  %10044 = getelementptr inbounds %struct.Reg, %struct.Reg* %10043, i32 0, i32 0
  %RBP.i1771 = bitcast %union.anon* %10044 to i64*
  %10045 = load i64, i64* %RBP.i1771
  %10046 = sub i64 %10045, 8
  %10047 = load i64, i64* %PC.i1769
  %10048 = add i64 %10047, 4
  store i64 %10048, i64* %PC.i1769
  %10049 = inttoptr i64 %10046 to i32*
  %10050 = load i32, i32* %10049
  %10051 = sext i32 %10050 to i64
  store i64 %10051, i64* %RDX.i1770, align 8
  store %struct.Memory* %loadMem_4af003, %struct.Memory** %MEMORY
  %loadMem_4af007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10053 = getelementptr inbounds %struct.GPR, %struct.GPR* %10052, i32 0, i32 33
  %10054 = getelementptr inbounds %struct.Reg, %struct.Reg* %10053, i32 0, i32 0
  %PC.i1766 = bitcast %union.anon* %10054 to i64*
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10056 = getelementptr inbounds %struct.GPR, %struct.GPR* %10055, i32 0, i32 5
  %10057 = getelementptr inbounds %struct.Reg, %struct.Reg* %10056, i32 0, i32 0
  %RCX.i1767 = bitcast %union.anon* %10057 to i64*
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10059 = getelementptr inbounds %struct.GPR, %struct.GPR* %10058, i32 0, i32 7
  %10060 = getelementptr inbounds %struct.Reg, %struct.Reg* %10059, i32 0, i32 0
  %RDX.i1768 = bitcast %union.anon* %10060 to i64*
  %10061 = load i64, i64* %RCX.i1767
  %10062 = load i64, i64* %RDX.i1768
  %10063 = mul i64 %10062, 8
  %10064 = add i64 %10063, %10061
  %10065 = load i64, i64* %PC.i1766
  %10066 = add i64 %10065, 4
  store i64 %10066, i64* %PC.i1766
  %10067 = inttoptr i64 %10064 to i64*
  %10068 = load i64, i64* %10067
  store i64 %10068, i64* %RCX.i1767, align 8
  store %struct.Memory* %loadMem_4af007, %struct.Memory** %MEMORY
  %loadMem_4af00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 33
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %10071 to i64*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 7
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RDX.i1764 = bitcast %union.anon* %10074 to i64*
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10076 = getelementptr inbounds %struct.GPR, %struct.GPR* %10075, i32 0, i32 15
  %10077 = getelementptr inbounds %struct.Reg, %struct.Reg* %10076, i32 0, i32 0
  %RBP.i1765 = bitcast %union.anon* %10077 to i64*
  %10078 = load i64, i64* %RBP.i1765
  %10079 = sub i64 %10078, 40
  %10080 = load i64, i64* %PC.i1763
  %10081 = add i64 %10080, 4
  store i64 %10081, i64* %PC.i1763
  %10082 = inttoptr i64 %10079 to i32*
  %10083 = load i32, i32* %10082
  %10084 = sext i32 %10083 to i64
  store i64 %10084, i64* %RDX.i1764, align 8
  store %struct.Memory* %loadMem_4af00b, %struct.Memory** %MEMORY
  %loadMem_4af00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10086 = getelementptr inbounds %struct.GPR, %struct.GPR* %10085, i32 0, i32 33
  %10087 = getelementptr inbounds %struct.Reg, %struct.Reg* %10086, i32 0, i32 0
  %PC.i1759 = bitcast %union.anon* %10087 to i64*
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10089 = getelementptr inbounds %struct.GPR, %struct.GPR* %10088, i32 0, i32 1
  %10090 = getelementptr inbounds %struct.Reg, %struct.Reg* %10089, i32 0, i32 0
  %EAX.i1760 = bitcast %union.anon* %10090 to i32*
  %10091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10092 = getelementptr inbounds %struct.GPR, %struct.GPR* %10091, i32 0, i32 5
  %10093 = getelementptr inbounds %struct.Reg, %struct.Reg* %10092, i32 0, i32 0
  %RCX.i1761 = bitcast %union.anon* %10093 to i64*
  %10094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10095 = getelementptr inbounds %struct.GPR, %struct.GPR* %10094, i32 0, i32 7
  %10096 = getelementptr inbounds %struct.Reg, %struct.Reg* %10095, i32 0, i32 0
  %RDX.i1762 = bitcast %union.anon* %10096 to i64*
  %10097 = load i64, i64* %RCX.i1761
  %10098 = load i64, i64* %RDX.i1762
  %10099 = mul i64 %10098, 4
  %10100 = add i64 %10099, %10097
  %10101 = load i32, i32* %EAX.i1760
  %10102 = zext i32 %10101 to i64
  %10103 = load i64, i64* %PC.i1759
  %10104 = add i64 %10103, 3
  store i64 %10104, i64* %PC.i1759
  %10105 = inttoptr i64 %10100 to i32*
  store i32 %10101, i32* %10105
  store %struct.Memory* %loadMem_4af00f, %struct.Memory** %MEMORY
  %loadMem_4af012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10107 = getelementptr inbounds %struct.GPR, %struct.GPR* %10106, i32 0, i32 33
  %10108 = getelementptr inbounds %struct.Reg, %struct.Reg* %10107, i32 0, i32 0
  %PC.i1756 = bitcast %union.anon* %10108 to i64*
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10110 = getelementptr inbounds %struct.GPR, %struct.GPR* %10109, i32 0, i32 1
  %10111 = getelementptr inbounds %struct.Reg, %struct.Reg* %10110, i32 0, i32 0
  %RAX.i1757 = bitcast %union.anon* %10111 to i64*
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10113 = getelementptr inbounds %struct.GPR, %struct.GPR* %10112, i32 0, i32 15
  %10114 = getelementptr inbounds %struct.Reg, %struct.Reg* %10113, i32 0, i32 0
  %RBP.i1758 = bitcast %union.anon* %10114 to i64*
  %10115 = load i64, i64* %RBP.i1758
  %10116 = sub i64 %10115, 40
  %10117 = load i64, i64* %PC.i1756
  %10118 = add i64 %10117, 3
  store i64 %10118, i64* %PC.i1756
  %10119 = inttoptr i64 %10116 to i32*
  %10120 = load i32, i32* %10119
  %10121 = zext i32 %10120 to i64
  store i64 %10121, i64* %RAX.i1757, align 8
  store %struct.Memory* %loadMem_4af012, %struct.Memory** %MEMORY
  %loadMem_4af015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10123 = getelementptr inbounds %struct.GPR, %struct.GPR* %10122, i32 0, i32 33
  %10124 = getelementptr inbounds %struct.Reg, %struct.Reg* %10123, i32 0, i32 0
  %PC.i1754 = bitcast %union.anon* %10124 to i64*
  %10125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10126 = getelementptr inbounds %struct.GPR, %struct.GPR* %10125, i32 0, i32 1
  %10127 = getelementptr inbounds %struct.Reg, %struct.Reg* %10126, i32 0, i32 0
  %RAX.i1755 = bitcast %union.anon* %10127 to i64*
  %10128 = load i64, i64* %RAX.i1755
  %10129 = load i64, i64* %PC.i1754
  %10130 = add i64 %10129, 3
  store i64 %10130, i64* %PC.i1754
  %10131 = trunc i64 %10128 to i32
  %10132 = add i32 1, %10131
  %10133 = zext i32 %10132 to i64
  store i64 %10133, i64* %RAX.i1755, align 8
  %10134 = icmp ult i32 %10132, %10131
  %10135 = icmp ult i32 %10132, 1
  %10136 = or i1 %10134, %10135
  %10137 = zext i1 %10136 to i8
  %10138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10137, i8* %10138, align 1
  %10139 = and i32 %10132, 255
  %10140 = call i32 @llvm.ctpop.i32(i32 %10139)
  %10141 = trunc i32 %10140 to i8
  %10142 = and i8 %10141, 1
  %10143 = xor i8 %10142, 1
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10143, i8* %10144, align 1
  %10145 = xor i64 1, %10128
  %10146 = trunc i64 %10145 to i32
  %10147 = xor i32 %10146, %10132
  %10148 = lshr i32 %10147, 4
  %10149 = trunc i32 %10148 to i8
  %10150 = and i8 %10149, 1
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10150, i8* %10151, align 1
  %10152 = icmp eq i32 %10132, 0
  %10153 = zext i1 %10152 to i8
  %10154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10153, i8* %10154, align 1
  %10155 = lshr i32 %10132, 31
  %10156 = trunc i32 %10155 to i8
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10156, i8* %10157, align 1
  %10158 = lshr i32 %10131, 31
  %10159 = xor i32 %10155, %10158
  %10160 = add i32 %10159, %10155
  %10161 = icmp eq i32 %10160, 2
  %10162 = zext i1 %10161 to i8
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10162, i8* %10163, align 1
  store %struct.Memory* %loadMem_4af015, %struct.Memory** %MEMORY
  %loadMem_4af018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10165 = getelementptr inbounds %struct.GPR, %struct.GPR* %10164, i32 0, i32 33
  %10166 = getelementptr inbounds %struct.Reg, %struct.Reg* %10165, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %10166 to i64*
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10168 = getelementptr inbounds %struct.GPR, %struct.GPR* %10167, i32 0, i32 1
  %10169 = getelementptr inbounds %struct.Reg, %struct.Reg* %10168, i32 0, i32 0
  %EAX.i1752 = bitcast %union.anon* %10169 to i32*
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10171 = getelementptr inbounds %struct.GPR, %struct.GPR* %10170, i32 0, i32 15
  %10172 = getelementptr inbounds %struct.Reg, %struct.Reg* %10171, i32 0, i32 0
  %RBP.i1753 = bitcast %union.anon* %10172 to i64*
  %10173 = load i64, i64* %RBP.i1753
  %10174 = sub i64 %10173, 40
  %10175 = load i32, i32* %EAX.i1752
  %10176 = zext i32 %10175 to i64
  %10177 = load i64, i64* %PC.i1751
  %10178 = add i64 %10177, 3
  store i64 %10178, i64* %PC.i1751
  %10179 = inttoptr i64 %10174 to i32*
  store i32 %10175, i32* %10179
  store %struct.Memory* %loadMem_4af018, %struct.Memory** %MEMORY
  %loadMem_4af01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10181 = getelementptr inbounds %struct.GPR, %struct.GPR* %10180, i32 0, i32 33
  %10182 = getelementptr inbounds %struct.Reg, %struct.Reg* %10181, i32 0, i32 0
  %PC.i1750 = bitcast %union.anon* %10182 to i64*
  %10183 = load i64, i64* %PC.i1750
  %10184 = add i64 %10183, -222
  %10185 = load i64, i64* %PC.i1750
  %10186 = add i64 %10185, 5
  store i64 %10186, i64* %PC.i1750
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10184, i64* %10187, align 8
  store %struct.Memory* %loadMem_4af01b, %struct.Memory** %MEMORY
  br label %block_.L_4aef3d

block_.L_4af020:                                  ; preds = %block_.L_4aef3d
  %loadMem_4af020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10189 = getelementptr inbounds %struct.GPR, %struct.GPR* %10188, i32 0, i32 33
  %10190 = getelementptr inbounds %struct.Reg, %struct.Reg* %10189, i32 0, i32 0
  %PC.i1749 = bitcast %union.anon* %10190 to i64*
  %10191 = load i64, i64* %PC.i1749
  %10192 = add i64 %10191, 5
  %10193 = load i64, i64* %PC.i1749
  %10194 = add i64 %10193, 5
  store i64 %10194, i64* %PC.i1749
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10192, i64* %10195, align 8
  store %struct.Memory* %loadMem_4af020, %struct.Memory** %MEMORY
  br label %block_.L_4af025

block_.L_4af025:                                  ; preds = %block_.L_4af020
  %loadMem_4af025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 33
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %PC.i1746 = bitcast %union.anon* %10198 to i64*
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10200 = getelementptr inbounds %struct.GPR, %struct.GPR* %10199, i32 0, i32 1
  %10201 = getelementptr inbounds %struct.Reg, %struct.Reg* %10200, i32 0, i32 0
  %RAX.i1747 = bitcast %union.anon* %10201 to i64*
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10203 = getelementptr inbounds %struct.GPR, %struct.GPR* %10202, i32 0, i32 15
  %10204 = getelementptr inbounds %struct.Reg, %struct.Reg* %10203, i32 0, i32 0
  %RBP.i1748 = bitcast %union.anon* %10204 to i64*
  %10205 = load i64, i64* %RBP.i1748
  %10206 = sub i64 %10205, 8
  %10207 = load i64, i64* %PC.i1746
  %10208 = add i64 %10207, 3
  store i64 %10208, i64* %PC.i1746
  %10209 = inttoptr i64 %10206 to i32*
  %10210 = load i32, i32* %10209
  %10211 = zext i32 %10210 to i64
  store i64 %10211, i64* %RAX.i1747, align 8
  store %struct.Memory* %loadMem_4af025, %struct.Memory** %MEMORY
  %loadMem_4af028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10213 = getelementptr inbounds %struct.GPR, %struct.GPR* %10212, i32 0, i32 33
  %10214 = getelementptr inbounds %struct.Reg, %struct.Reg* %10213, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %10214 to i64*
  %10215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10216 = getelementptr inbounds %struct.GPR, %struct.GPR* %10215, i32 0, i32 1
  %10217 = getelementptr inbounds %struct.Reg, %struct.Reg* %10216, i32 0, i32 0
  %RAX.i1745 = bitcast %union.anon* %10217 to i64*
  %10218 = load i64, i64* %RAX.i1745
  %10219 = load i64, i64* %PC.i1744
  %10220 = add i64 %10219, 3
  store i64 %10220, i64* %PC.i1744
  %10221 = trunc i64 %10218 to i32
  %10222 = add i32 1, %10221
  %10223 = zext i32 %10222 to i64
  store i64 %10223, i64* %RAX.i1745, align 8
  %10224 = icmp ult i32 %10222, %10221
  %10225 = icmp ult i32 %10222, 1
  %10226 = or i1 %10224, %10225
  %10227 = zext i1 %10226 to i8
  %10228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10227, i8* %10228, align 1
  %10229 = and i32 %10222, 255
  %10230 = call i32 @llvm.ctpop.i32(i32 %10229)
  %10231 = trunc i32 %10230 to i8
  %10232 = and i8 %10231, 1
  %10233 = xor i8 %10232, 1
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10233, i8* %10234, align 1
  %10235 = xor i64 1, %10218
  %10236 = trunc i64 %10235 to i32
  %10237 = xor i32 %10236, %10222
  %10238 = lshr i32 %10237, 4
  %10239 = trunc i32 %10238 to i8
  %10240 = and i8 %10239, 1
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10240, i8* %10241, align 1
  %10242 = icmp eq i32 %10222, 0
  %10243 = zext i1 %10242 to i8
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10243, i8* %10244, align 1
  %10245 = lshr i32 %10222, 31
  %10246 = trunc i32 %10245 to i8
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10246, i8* %10247, align 1
  %10248 = lshr i32 %10221, 31
  %10249 = xor i32 %10245, %10248
  %10250 = add i32 %10249, %10245
  %10251 = icmp eq i32 %10250, 2
  %10252 = zext i1 %10251 to i8
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10252, i8* %10253, align 1
  store %struct.Memory* %loadMem_4af028, %struct.Memory** %MEMORY
  %loadMem_4af02b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10255 = getelementptr inbounds %struct.GPR, %struct.GPR* %10254, i32 0, i32 33
  %10256 = getelementptr inbounds %struct.Reg, %struct.Reg* %10255, i32 0, i32 0
  %PC.i1741 = bitcast %union.anon* %10256 to i64*
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10258 = getelementptr inbounds %struct.GPR, %struct.GPR* %10257, i32 0, i32 1
  %10259 = getelementptr inbounds %struct.Reg, %struct.Reg* %10258, i32 0, i32 0
  %EAX.i1742 = bitcast %union.anon* %10259 to i32*
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10261 = getelementptr inbounds %struct.GPR, %struct.GPR* %10260, i32 0, i32 15
  %10262 = getelementptr inbounds %struct.Reg, %struct.Reg* %10261, i32 0, i32 0
  %RBP.i1743 = bitcast %union.anon* %10262 to i64*
  %10263 = load i64, i64* %RBP.i1743
  %10264 = sub i64 %10263, 8
  %10265 = load i32, i32* %EAX.i1742
  %10266 = zext i32 %10265 to i64
  %10267 = load i64, i64* %PC.i1741
  %10268 = add i64 %10267, 3
  store i64 %10268, i64* %PC.i1741
  %10269 = inttoptr i64 %10264 to i32*
  store i32 %10265, i32* %10269
  store %struct.Memory* %loadMem_4af02b, %struct.Memory** %MEMORY
  %loadMem_4af02e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10271 = getelementptr inbounds %struct.GPR, %struct.GPR* %10270, i32 0, i32 33
  %10272 = getelementptr inbounds %struct.Reg, %struct.Reg* %10271, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %10272 to i64*
  %10273 = load i64, i64* %PC.i1740
  %10274 = add i64 %10273, -264
  %10275 = load i64, i64* %PC.i1740
  %10276 = add i64 %10275, 5
  store i64 %10276, i64* %PC.i1740
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10274, i64* %10277, align 8
  store %struct.Memory* %loadMem_4af02e, %struct.Memory** %MEMORY
  br label %block_.L_4aef26

block_.L_4af033:                                  ; preds = %block_.L_4aef26
  %loadMem_4af033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10279 = getelementptr inbounds %struct.GPR, %struct.GPR* %10278, i32 0, i32 33
  %10280 = getelementptr inbounds %struct.Reg, %struct.Reg* %10279, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %10280 to i64*
  %10281 = load i64, i64* %PC.i1739
  %10282 = add i64 %10281, 5
  %10283 = load i64, i64* %PC.i1739
  %10284 = add i64 %10283, 5
  store i64 %10284, i64* %PC.i1739
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10282, i64* %10285, align 8
  store %struct.Memory* %loadMem_4af033, %struct.Memory** %MEMORY
  br label %block_.L_4af038

block_.L_4af038:                                  ; preds = %block_.L_4af033
  %loadMem_4af038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10287 = getelementptr inbounds %struct.GPR, %struct.GPR* %10286, i32 0, i32 33
  %10288 = getelementptr inbounds %struct.Reg, %struct.Reg* %10287, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %10288 to i64*
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10290 = getelementptr inbounds %struct.GPR, %struct.GPR* %10289, i32 0, i32 1
  %10291 = getelementptr inbounds %struct.Reg, %struct.Reg* %10290, i32 0, i32 0
  %RAX.i1737 = bitcast %union.anon* %10291 to i64*
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10293 = getelementptr inbounds %struct.GPR, %struct.GPR* %10292, i32 0, i32 15
  %10294 = getelementptr inbounds %struct.Reg, %struct.Reg* %10293, i32 0, i32 0
  %RBP.i1738 = bitcast %union.anon* %10294 to i64*
  %10295 = load i64, i64* %RBP.i1738
  %10296 = sub i64 %10295, 4
  %10297 = load i64, i64* %PC.i1736
  %10298 = add i64 %10297, 3
  store i64 %10298, i64* %PC.i1736
  %10299 = inttoptr i64 %10296 to i32*
  %10300 = load i32, i32* %10299
  %10301 = zext i32 %10300 to i64
  store i64 %10301, i64* %RAX.i1737, align 8
  store %struct.Memory* %loadMem_4af038, %struct.Memory** %MEMORY
  %loadMem_4af03b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10303 = getelementptr inbounds %struct.GPR, %struct.GPR* %10302, i32 0, i32 33
  %10304 = getelementptr inbounds %struct.Reg, %struct.Reg* %10303, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %10304 to i64*
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10306 = getelementptr inbounds %struct.GPR, %struct.GPR* %10305, i32 0, i32 1
  %10307 = getelementptr inbounds %struct.Reg, %struct.Reg* %10306, i32 0, i32 0
  %RAX.i1735 = bitcast %union.anon* %10307 to i64*
  %10308 = load i64, i64* %RAX.i1735
  %10309 = load i64, i64* %PC.i1734
  %10310 = add i64 %10309, 3
  store i64 %10310, i64* %PC.i1734
  %10311 = trunc i64 %10308 to i32
  %10312 = add i32 1, %10311
  %10313 = zext i32 %10312 to i64
  store i64 %10313, i64* %RAX.i1735, align 8
  %10314 = icmp ult i32 %10312, %10311
  %10315 = icmp ult i32 %10312, 1
  %10316 = or i1 %10314, %10315
  %10317 = zext i1 %10316 to i8
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10317, i8* %10318, align 1
  %10319 = and i32 %10312, 255
  %10320 = call i32 @llvm.ctpop.i32(i32 %10319)
  %10321 = trunc i32 %10320 to i8
  %10322 = and i8 %10321, 1
  %10323 = xor i8 %10322, 1
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10323, i8* %10324, align 1
  %10325 = xor i64 1, %10308
  %10326 = trunc i64 %10325 to i32
  %10327 = xor i32 %10326, %10312
  %10328 = lshr i32 %10327, 4
  %10329 = trunc i32 %10328 to i8
  %10330 = and i8 %10329, 1
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10330, i8* %10331, align 1
  %10332 = icmp eq i32 %10312, 0
  %10333 = zext i1 %10332 to i8
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10333, i8* %10334, align 1
  %10335 = lshr i32 %10312, 31
  %10336 = trunc i32 %10335 to i8
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10336, i8* %10337, align 1
  %10338 = lshr i32 %10311, 31
  %10339 = xor i32 %10335, %10338
  %10340 = add i32 %10339, %10335
  %10341 = icmp eq i32 %10340, 2
  %10342 = zext i1 %10341 to i8
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10342, i8* %10343, align 1
  store %struct.Memory* %loadMem_4af03b, %struct.Memory** %MEMORY
  %loadMem_4af03e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10345 = getelementptr inbounds %struct.GPR, %struct.GPR* %10344, i32 0, i32 33
  %10346 = getelementptr inbounds %struct.Reg, %struct.Reg* %10345, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %10346 to i64*
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10348 = getelementptr inbounds %struct.GPR, %struct.GPR* %10347, i32 0, i32 1
  %10349 = getelementptr inbounds %struct.Reg, %struct.Reg* %10348, i32 0, i32 0
  %EAX.i1732 = bitcast %union.anon* %10349 to i32*
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10351 = getelementptr inbounds %struct.GPR, %struct.GPR* %10350, i32 0, i32 15
  %10352 = getelementptr inbounds %struct.Reg, %struct.Reg* %10351, i32 0, i32 0
  %RBP.i1733 = bitcast %union.anon* %10352 to i64*
  %10353 = load i64, i64* %RBP.i1733
  %10354 = sub i64 %10353, 4
  %10355 = load i32, i32* %EAX.i1732
  %10356 = zext i32 %10355 to i64
  %10357 = load i64, i64* %PC.i1731
  %10358 = add i64 %10357, 3
  store i64 %10358, i64* %PC.i1731
  %10359 = inttoptr i64 %10354 to i32*
  store i32 %10355, i32* %10359
  store %struct.Memory* %loadMem_4af03e, %struct.Memory** %MEMORY
  %loadMem_4af041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10361 = getelementptr inbounds %struct.GPR, %struct.GPR* %10360, i32 0, i32 33
  %10362 = getelementptr inbounds %struct.Reg, %struct.Reg* %10361, i32 0, i32 0
  %PC.i1730 = bitcast %union.anon* %10362 to i64*
  %10363 = load i64, i64* %PC.i1730
  %10364 = add i64 %10363, -306
  %10365 = load i64, i64* %PC.i1730
  %10366 = add i64 %10365, 5
  store i64 %10366, i64* %PC.i1730
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10364, i64* %10367, align 8
  store %struct.Memory* %loadMem_4af041, %struct.Memory** %MEMORY
  br label %block_.L_4aef0f

block_.L_4af046:                                  ; preds = %block_.L_4aef0f
  %loadMem_4af046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10369 = getelementptr inbounds %struct.GPR, %struct.GPR* %10368, i32 0, i32 33
  %10370 = getelementptr inbounds %struct.Reg, %struct.Reg* %10369, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %10370 to i64*
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10372 = getelementptr inbounds %struct.GPR, %struct.GPR* %10371, i32 0, i32 15
  %10373 = getelementptr inbounds %struct.Reg, %struct.Reg* %10372, i32 0, i32 0
  %RBP.i1729 = bitcast %union.anon* %10373 to i64*
  %10374 = load i64, i64* %RBP.i1729
  %10375 = sub i64 %10374, 35396
  %10376 = load i64, i64* %PC.i1728
  %10377 = add i64 %10376, 10
  store i64 %10377, i64* %PC.i1728
  %10378 = inttoptr i64 %10375 to i32*
  store i32 0, i32* %10378
  store %struct.Memory* %loadMem_4af046, %struct.Memory** %MEMORY
  br label %block_.L_4af050

block_.L_4af050:                                  ; preds = %block_.L_4af168, %block_.L_4af046
  %loadMem_4af050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10380 = getelementptr inbounds %struct.GPR, %struct.GPR* %10379, i32 0, i32 33
  %10381 = getelementptr inbounds %struct.Reg, %struct.Reg* %10380, i32 0, i32 0
  %PC.i1725 = bitcast %union.anon* %10381 to i64*
  %10382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10383 = getelementptr inbounds %struct.GPR, %struct.GPR* %10382, i32 0, i32 1
  %10384 = getelementptr inbounds %struct.Reg, %struct.Reg* %10383, i32 0, i32 0
  %RAX.i1726 = bitcast %union.anon* %10384 to i64*
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10386 = getelementptr inbounds %struct.GPR, %struct.GPR* %10385, i32 0, i32 15
  %10387 = getelementptr inbounds %struct.Reg, %struct.Reg* %10386, i32 0, i32 0
  %RBP.i1727 = bitcast %union.anon* %10387 to i64*
  %10388 = load i64, i64* %RBP.i1727
  %10389 = sub i64 %10388, 35396
  %10390 = load i64, i64* %PC.i1725
  %10391 = add i64 %10390, 6
  store i64 %10391, i64* %PC.i1725
  %10392 = inttoptr i64 %10389 to i32*
  %10393 = load i32, i32* %10392
  %10394 = zext i32 %10393 to i64
  store i64 %10394, i64* %RAX.i1726, align 8
  store %struct.Memory* %loadMem_4af050, %struct.Memory** %MEMORY
  %loadMem_4af056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10396 = getelementptr inbounds %struct.GPR, %struct.GPR* %10395, i32 0, i32 33
  %10397 = getelementptr inbounds %struct.Reg, %struct.Reg* %10396, i32 0, i32 0
  %PC.i1722 = bitcast %union.anon* %10397 to i64*
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10399 = getelementptr inbounds %struct.GPR, %struct.GPR* %10398, i32 0, i32 5
  %10400 = getelementptr inbounds %struct.Reg, %struct.Reg* %10399, i32 0, i32 0
  %RCX.i1723 = bitcast %union.anon* %10400 to i64*
  %10401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10402 = getelementptr inbounds %struct.GPR, %struct.GPR* %10401, i32 0, i32 15
  %10403 = getelementptr inbounds %struct.Reg, %struct.Reg* %10402, i32 0, i32 0
  %RBP.i1724 = bitcast %union.anon* %10403 to i64*
  %10404 = load i64, i64* %RBP.i1724
  %10405 = sub i64 %10404, 808
  %10406 = load i64, i64* %PC.i1722
  %10407 = add i64 %10406, 6
  store i64 %10407, i64* %PC.i1722
  %10408 = inttoptr i64 %10405 to i32*
  %10409 = load i32, i32* %10408
  %10410 = zext i32 %10409 to i64
  store i64 %10410, i64* %RCX.i1723, align 8
  store %struct.Memory* %loadMem_4af056, %struct.Memory** %MEMORY
  %loadMem_4af05c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10412 = getelementptr inbounds %struct.GPR, %struct.GPR* %10411, i32 0, i32 33
  %10413 = getelementptr inbounds %struct.Reg, %struct.Reg* %10412, i32 0, i32 0
  %PC.i1720 = bitcast %union.anon* %10413 to i64*
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10415 = getelementptr inbounds %struct.GPR, %struct.GPR* %10414, i32 0, i32 5
  %10416 = getelementptr inbounds %struct.Reg, %struct.Reg* %10415, i32 0, i32 0
  %RCX.i1721 = bitcast %union.anon* %10416 to i64*
  %10417 = load i64, i64* %RCX.i1721
  %10418 = load i64, i64* %PC.i1720
  %10419 = add i64 %10418, 3
  store i64 %10419, i64* %PC.i1720
  %10420 = trunc i64 %10417 to i32
  %10421 = add i32 2, %10420
  %10422 = zext i32 %10421 to i64
  store i64 %10422, i64* %RCX.i1721, align 8
  %10423 = icmp ult i32 %10421, %10420
  %10424 = icmp ult i32 %10421, 2
  %10425 = or i1 %10423, %10424
  %10426 = zext i1 %10425 to i8
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10426, i8* %10427, align 1
  %10428 = and i32 %10421, 255
  %10429 = call i32 @llvm.ctpop.i32(i32 %10428)
  %10430 = trunc i32 %10429 to i8
  %10431 = and i8 %10430, 1
  %10432 = xor i8 %10431, 1
  %10433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10432, i8* %10433, align 1
  %10434 = xor i64 2, %10417
  %10435 = trunc i64 %10434 to i32
  %10436 = xor i32 %10435, %10421
  %10437 = lshr i32 %10436, 4
  %10438 = trunc i32 %10437 to i8
  %10439 = and i8 %10438, 1
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10439, i8* %10440, align 1
  %10441 = icmp eq i32 %10421, 0
  %10442 = zext i1 %10441 to i8
  %10443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10442, i8* %10443, align 1
  %10444 = lshr i32 %10421, 31
  %10445 = trunc i32 %10444 to i8
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10445, i8* %10446, align 1
  %10447 = lshr i32 %10420, 31
  %10448 = xor i32 %10444, %10447
  %10449 = add i32 %10448, %10444
  %10450 = icmp eq i32 %10449, 2
  %10451 = zext i1 %10450 to i8
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10451, i8* %10452, align 1
  store %struct.Memory* %loadMem_4af05c, %struct.Memory** %MEMORY
  %loadMem_4af05f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10454 = getelementptr inbounds %struct.GPR, %struct.GPR* %10453, i32 0, i32 33
  %10455 = getelementptr inbounds %struct.Reg, %struct.Reg* %10454, i32 0, i32 0
  %PC.i1717 = bitcast %union.anon* %10455 to i64*
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10457 = getelementptr inbounds %struct.GPR, %struct.GPR* %10456, i32 0, i32 1
  %10458 = getelementptr inbounds %struct.Reg, %struct.Reg* %10457, i32 0, i32 0
  %EAX.i1718 = bitcast %union.anon* %10458 to i32*
  %10459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10460 = getelementptr inbounds %struct.GPR, %struct.GPR* %10459, i32 0, i32 5
  %10461 = getelementptr inbounds %struct.Reg, %struct.Reg* %10460, i32 0, i32 0
  %ECX.i1719 = bitcast %union.anon* %10461 to i32*
  %10462 = load i32, i32* %EAX.i1718
  %10463 = zext i32 %10462 to i64
  %10464 = load i32, i32* %ECX.i1719
  %10465 = zext i32 %10464 to i64
  %10466 = load i64, i64* %PC.i1717
  %10467 = add i64 %10466, 2
  store i64 %10467, i64* %PC.i1717
  %10468 = sub i32 %10462, %10464
  %10469 = icmp ult i32 %10462, %10464
  %10470 = zext i1 %10469 to i8
  %10471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10470, i8* %10471, align 1
  %10472 = and i32 %10468, 255
  %10473 = call i32 @llvm.ctpop.i32(i32 %10472)
  %10474 = trunc i32 %10473 to i8
  %10475 = and i8 %10474, 1
  %10476 = xor i8 %10475, 1
  %10477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10476, i8* %10477, align 1
  %10478 = xor i64 %10465, %10463
  %10479 = trunc i64 %10478 to i32
  %10480 = xor i32 %10479, %10468
  %10481 = lshr i32 %10480, 4
  %10482 = trunc i32 %10481 to i8
  %10483 = and i8 %10482, 1
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10483, i8* %10484, align 1
  %10485 = icmp eq i32 %10468, 0
  %10486 = zext i1 %10485 to i8
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10486, i8* %10487, align 1
  %10488 = lshr i32 %10468, 31
  %10489 = trunc i32 %10488 to i8
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10489, i8* %10490, align 1
  %10491 = lshr i32 %10462, 31
  %10492 = lshr i32 %10464, 31
  %10493 = xor i32 %10492, %10491
  %10494 = xor i32 %10488, %10491
  %10495 = add i32 %10494, %10493
  %10496 = icmp eq i32 %10495, 2
  %10497 = zext i1 %10496 to i8
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10497, i8* %10498, align 1
  store %struct.Memory* %loadMem_4af05f, %struct.Memory** %MEMORY
  %loadMem_4af061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10500 = getelementptr inbounds %struct.GPR, %struct.GPR* %10499, i32 0, i32 33
  %10501 = getelementptr inbounds %struct.Reg, %struct.Reg* %10500, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %10501 to i64*
  %10502 = load i64, i64* %PC.i1716
  %10503 = add i64 %10502, 283
  %10504 = load i64, i64* %PC.i1716
  %10505 = add i64 %10504, 6
  %10506 = load i64, i64* %PC.i1716
  %10507 = add i64 %10506, 6
  store i64 %10507, i64* %PC.i1716
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10509 = load i8, i8* %10508, align 1
  %10510 = icmp ne i8 %10509, 0
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10512 = load i8, i8* %10511, align 1
  %10513 = icmp ne i8 %10512, 0
  %10514 = xor i1 %10510, %10513
  %10515 = xor i1 %10514, true
  %10516 = zext i1 %10515 to i8
  store i8 %10516, i8* %BRANCH_TAKEN, align 1
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10518 = select i1 %10514, i64 %10505, i64 %10503
  store i64 %10518, i64* %10517, align 8
  store %struct.Memory* %loadMem_4af061, %struct.Memory** %MEMORY
  %loadBr_4af061 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af061 = icmp eq i8 %loadBr_4af061, 1
  br i1 %cmpBr_4af061, label %block_.L_4af17c, label %block_4af067

block_4af067:                                     ; preds = %block_.L_4af050
  %loadMem_4af067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10520 = getelementptr inbounds %struct.GPR, %struct.GPR* %10519, i32 0, i32 33
  %10521 = getelementptr inbounds %struct.Reg, %struct.Reg* %10520, i32 0, i32 0
  %PC.i1714 = bitcast %union.anon* %10521 to i64*
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10523 = getelementptr inbounds %struct.GPR, %struct.GPR* %10522, i32 0, i32 15
  %10524 = getelementptr inbounds %struct.Reg, %struct.Reg* %10523, i32 0, i32 0
  %RBP.i1715 = bitcast %union.anon* %10524 to i64*
  %10525 = load i64, i64* %RBP.i1715
  %10526 = sub i64 %10525, 36
  %10527 = load i64, i64* %PC.i1714
  %10528 = add i64 %10527, 7
  store i64 %10528, i64* %PC.i1714
  %10529 = inttoptr i64 %10526 to i32*
  store i32 0, i32* %10529
  store %struct.Memory* %loadMem_4af067, %struct.Memory** %MEMORY
  br label %block_.L_4af06e

block_.L_4af06e:                                  ; preds = %block_4af085, %block_4af067
  %loadMem_4af06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 33
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %PC.i1711 = bitcast %union.anon* %10532 to i64*
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 1
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %RAX.i1712 = bitcast %union.anon* %10535 to i64*
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 15
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %RBP.i1713 = bitcast %union.anon* %10538 to i64*
  %10539 = load i64, i64* %RBP.i1713
  %10540 = sub i64 %10539, 36
  %10541 = load i64, i64* %PC.i1711
  %10542 = add i64 %10541, 3
  store i64 %10542, i64* %PC.i1711
  %10543 = inttoptr i64 %10540 to i32*
  %10544 = load i32, i32* %10543
  %10545 = zext i32 %10544 to i64
  store i64 %10545, i64* %RAX.i1712, align 8
  store %struct.Memory* %loadMem_4af06e, %struct.Memory** %MEMORY
  %loadMem_4af071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10547 = getelementptr inbounds %struct.GPR, %struct.GPR* %10546, i32 0, i32 33
  %10548 = getelementptr inbounds %struct.Reg, %struct.Reg* %10547, i32 0, i32 0
  %PC.i1708 = bitcast %union.anon* %10548 to i64*
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10550 = getelementptr inbounds %struct.GPR, %struct.GPR* %10549, i32 0, i32 5
  %10551 = getelementptr inbounds %struct.Reg, %struct.Reg* %10550, i32 0, i32 0
  %RCX.i1709 = bitcast %union.anon* %10551 to i64*
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 15
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %RBP.i1710 = bitcast %union.anon* %10554 to i64*
  %10555 = load i64, i64* %RBP.i1710
  %10556 = sub i64 %10555, 35396
  %10557 = load i64, i64* %PC.i1708
  %10558 = add i64 %10557, 7
  store i64 %10558, i64* %PC.i1708
  %10559 = inttoptr i64 %10556 to i32*
  %10560 = load i32, i32* %10559
  %10561 = sext i32 %10560 to i64
  store i64 %10561, i64* %RCX.i1709, align 8
  store %struct.Memory* %loadMem_4af071, %struct.Memory** %MEMORY
  %loadMem_4af078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10563 = getelementptr inbounds %struct.GPR, %struct.GPR* %10562, i32 0, i32 33
  %10564 = getelementptr inbounds %struct.Reg, %struct.Reg* %10563, i32 0, i32 0
  %PC.i1705 = bitcast %union.anon* %10564 to i64*
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10566 = getelementptr inbounds %struct.GPR, %struct.GPR* %10565, i32 0, i32 1
  %10567 = getelementptr inbounds %struct.Reg, %struct.Reg* %10566, i32 0, i32 0
  %EAX.i1706 = bitcast %union.anon* %10567 to i32*
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10569 = getelementptr inbounds %struct.GPR, %struct.GPR* %10568, i32 0, i32 5
  %10570 = getelementptr inbounds %struct.Reg, %struct.Reg* %10569, i32 0, i32 0
  %RCX.i1707 = bitcast %union.anon* %10570 to i64*
  %10571 = load i32, i32* %EAX.i1706
  %10572 = zext i32 %10571 to i64
  %10573 = load i64, i64* %RCX.i1707
  %10574 = mul i64 %10573, 4
  %10575 = add i64 %10574, 7489456
  %10576 = load i64, i64* %PC.i1705
  %10577 = add i64 %10576, 7
  store i64 %10577, i64* %PC.i1705
  %10578 = inttoptr i64 %10575 to i32*
  %10579 = load i32, i32* %10578
  %10580 = sub i32 %10571, %10579
  %10581 = icmp ult i32 %10571, %10579
  %10582 = zext i1 %10581 to i8
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10582, i8* %10583, align 1
  %10584 = and i32 %10580, 255
  %10585 = call i32 @llvm.ctpop.i32(i32 %10584)
  %10586 = trunc i32 %10585 to i8
  %10587 = and i8 %10586, 1
  %10588 = xor i8 %10587, 1
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10588, i8* %10589, align 1
  %10590 = xor i32 %10579, %10571
  %10591 = xor i32 %10590, %10580
  %10592 = lshr i32 %10591, 4
  %10593 = trunc i32 %10592 to i8
  %10594 = and i8 %10593, 1
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10594, i8* %10595, align 1
  %10596 = icmp eq i32 %10580, 0
  %10597 = zext i1 %10596 to i8
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10597, i8* %10598, align 1
  %10599 = lshr i32 %10580, 31
  %10600 = trunc i32 %10599 to i8
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10600, i8* %10601, align 1
  %10602 = lshr i32 %10571, 31
  %10603 = lshr i32 %10579, 31
  %10604 = xor i32 %10603, %10602
  %10605 = xor i32 %10599, %10602
  %10606 = add i32 %10605, %10604
  %10607 = icmp eq i32 %10606, 2
  %10608 = zext i1 %10607 to i8
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10608, i8* %10609, align 1
  store %struct.Memory* %loadMem_4af078, %struct.Memory** %MEMORY
  %loadMem_4af07f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 33
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %PC.i1704 = bitcast %union.anon* %10612 to i64*
  %10613 = load i64, i64* %PC.i1704
  %10614 = add i64 %10613, 228
  %10615 = load i64, i64* %PC.i1704
  %10616 = add i64 %10615, 6
  %10617 = load i64, i64* %PC.i1704
  %10618 = add i64 %10617, 6
  store i64 %10618, i64* %PC.i1704
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10620 = load i8, i8* %10619, align 1
  %10621 = icmp ne i8 %10620, 0
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10623 = load i8, i8* %10622, align 1
  %10624 = icmp ne i8 %10623, 0
  %10625 = xor i1 %10621, %10624
  %10626 = xor i1 %10625, true
  %10627 = zext i1 %10626 to i8
  store i8 %10627, i8* %BRANCH_TAKEN, align 1
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10629 = select i1 %10625, i64 %10616, i64 %10614
  store i64 %10629, i64* %10628, align 8
  store %struct.Memory* %loadMem_4af07f, %struct.Memory** %MEMORY
  %loadBr_4af07f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af07f = icmp eq i8 %loadBr_4af07f, 1
  br i1 %cmpBr_4af07f, label %block_.L_4af163, label %block_4af085

block_4af085:                                     ; preds = %block_.L_4af06e
  %loadMem_4af085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10631 = getelementptr inbounds %struct.GPR, %struct.GPR* %10630, i32 0, i32 33
  %10632 = getelementptr inbounds %struct.Reg, %struct.Reg* %10631, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %10632 to i64*
  %10633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10634 = getelementptr inbounds %struct.GPR, %struct.GPR* %10633, i32 0, i32 1
  %10635 = getelementptr inbounds %struct.Reg, %struct.Reg* %10634, i32 0, i32 0
  %RAX.i1702 = bitcast %union.anon* %10635 to i64*
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10637 = getelementptr inbounds %struct.GPR, %struct.GPR* %10636, i32 0, i32 15
  %10638 = getelementptr inbounds %struct.Reg, %struct.Reg* %10637, i32 0, i32 0
  %RBP.i1703 = bitcast %union.anon* %10638 to i64*
  %10639 = load i64, i64* %RBP.i1703
  %10640 = sub i64 %10639, 804
  %10641 = load i64, i64* %PC.i1701
  %10642 = add i64 %10641, 6
  store i64 %10642, i64* %PC.i1701
  %10643 = inttoptr i64 %10640 to i32*
  %10644 = load i32, i32* %10643
  %10645 = zext i32 %10644 to i64
  store i64 %10645, i64* %RAX.i1702, align 8
  store %struct.Memory* %loadMem_4af085, %struct.Memory** %MEMORY
  %loadMem_4af08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 33
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %10648 to i64*
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 5
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %RCX.i1700 = bitcast %union.anon* %10651 to i64*
  %10652 = load i64, i64* %PC.i1699
  %10653 = add i64 %10652, 8
  store i64 %10653, i64* %PC.i1699
  %10654 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %10654, i64* %RCX.i1700, align 8
  store %struct.Memory* %loadMem_4af08b, %struct.Memory** %MEMORY
  %loadMem_4af093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10656 = getelementptr inbounds %struct.GPR, %struct.GPR* %10655, i32 0, i32 33
  %10657 = getelementptr inbounds %struct.Reg, %struct.Reg* %10656, i32 0, i32 0
  %PC.i1696 = bitcast %union.anon* %10657 to i64*
  %10658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10659 = getelementptr inbounds %struct.GPR, %struct.GPR* %10658, i32 0, i32 7
  %10660 = getelementptr inbounds %struct.Reg, %struct.Reg* %10659, i32 0, i32 0
  %RDX.i1697 = bitcast %union.anon* %10660 to i64*
  %10661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10662 = getelementptr inbounds %struct.GPR, %struct.GPR* %10661, i32 0, i32 15
  %10663 = getelementptr inbounds %struct.Reg, %struct.Reg* %10662, i32 0, i32 0
  %RBP.i1698 = bitcast %union.anon* %10663 to i64*
  %10664 = load i64, i64* %RBP.i1698
  %10665 = sub i64 %10664, 35396
  %10666 = load i64, i64* %PC.i1696
  %10667 = add i64 %10666, 7
  store i64 %10667, i64* %PC.i1696
  %10668 = inttoptr i64 %10665 to i32*
  %10669 = load i32, i32* %10668
  %10670 = sext i32 %10669 to i64
  store i64 %10670, i64* %RDX.i1697, align 8
  store %struct.Memory* %loadMem_4af093, %struct.Memory** %MEMORY
  %loadMem_4af09a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10672 = getelementptr inbounds %struct.GPR, %struct.GPR* %10671, i32 0, i32 33
  %10673 = getelementptr inbounds %struct.Reg, %struct.Reg* %10672, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %10673 to i64*
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10675 = getelementptr inbounds %struct.GPR, %struct.GPR* %10674, i32 0, i32 5
  %10676 = getelementptr inbounds %struct.Reg, %struct.Reg* %10675, i32 0, i32 0
  %RCX.i1694 = bitcast %union.anon* %10676 to i64*
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10678 = getelementptr inbounds %struct.GPR, %struct.GPR* %10677, i32 0, i32 7
  %10679 = getelementptr inbounds %struct.Reg, %struct.Reg* %10678, i32 0, i32 0
  %RDX.i1695 = bitcast %union.anon* %10679 to i64*
  %10680 = load i64, i64* %RCX.i1694
  %10681 = load i64, i64* %RDX.i1695
  %10682 = mul i64 %10681, 8
  %10683 = add i64 %10682, %10680
  %10684 = load i64, i64* %PC.i1693
  %10685 = add i64 %10684, 4
  store i64 %10685, i64* %PC.i1693
  %10686 = inttoptr i64 %10683 to i64*
  %10687 = load i64, i64* %10686
  store i64 %10687, i64* %RCX.i1694, align 8
  store %struct.Memory* %loadMem_4af09a, %struct.Memory** %MEMORY
  %loadMem_4af09e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10689 = getelementptr inbounds %struct.GPR, %struct.GPR* %10688, i32 0, i32 33
  %10690 = getelementptr inbounds %struct.Reg, %struct.Reg* %10689, i32 0, i32 0
  %PC.i1690 = bitcast %union.anon* %10690 to i64*
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10692 = getelementptr inbounds %struct.GPR, %struct.GPR* %10691, i32 0, i32 7
  %10693 = getelementptr inbounds %struct.Reg, %struct.Reg* %10692, i32 0, i32 0
  %RDX.i1691 = bitcast %union.anon* %10693 to i64*
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10695 = getelementptr inbounds %struct.GPR, %struct.GPR* %10694, i32 0, i32 15
  %10696 = getelementptr inbounds %struct.Reg, %struct.Reg* %10695, i32 0, i32 0
  %RBP.i1692 = bitcast %union.anon* %10696 to i64*
  %10697 = load i64, i64* %RBP.i1692
  %10698 = sub i64 %10697, 36
  %10699 = load i64, i64* %PC.i1690
  %10700 = add i64 %10699, 4
  store i64 %10700, i64* %PC.i1690
  %10701 = inttoptr i64 %10698 to i32*
  %10702 = load i32, i32* %10701
  %10703 = sext i32 %10702 to i64
  store i64 %10703, i64* %RDX.i1691, align 8
  store %struct.Memory* %loadMem_4af09e, %struct.Memory** %MEMORY
  %loadMem_4af0a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10705 = getelementptr inbounds %struct.GPR, %struct.GPR* %10704, i32 0, i32 33
  %10706 = getelementptr inbounds %struct.Reg, %struct.Reg* %10705, i32 0, i32 0
  %PC.i1687 = bitcast %union.anon* %10706 to i64*
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10708 = getelementptr inbounds %struct.GPR, %struct.GPR* %10707, i32 0, i32 5
  %10709 = getelementptr inbounds %struct.Reg, %struct.Reg* %10708, i32 0, i32 0
  %RCX.i1688 = bitcast %union.anon* %10709 to i64*
  %10710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10711 = getelementptr inbounds %struct.GPR, %struct.GPR* %10710, i32 0, i32 7
  %10712 = getelementptr inbounds %struct.Reg, %struct.Reg* %10711, i32 0, i32 0
  %RDX.i1689 = bitcast %union.anon* %10712 to i64*
  %10713 = load i64, i64* %RCX.i1688
  %10714 = load i64, i64* %RDX.i1689
  %10715 = mul i64 %10714, 8
  %10716 = add i64 %10715, %10713
  %10717 = load i64, i64* %PC.i1687
  %10718 = add i64 %10717, 4
  store i64 %10718, i64* %PC.i1687
  %10719 = inttoptr i64 %10716 to i64*
  %10720 = load i64, i64* %10719
  store i64 %10720, i64* %RCX.i1688, align 8
  store %struct.Memory* %loadMem_4af0a2, %struct.Memory** %MEMORY
  %loadMem_4af0a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10722 = getelementptr inbounds %struct.GPR, %struct.GPR* %10721, i32 0, i32 33
  %10723 = getelementptr inbounds %struct.Reg, %struct.Reg* %10722, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %10723 to i64*
  %10724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10725 = getelementptr inbounds %struct.GPR, %struct.GPR* %10724, i32 0, i32 1
  %10726 = getelementptr inbounds %struct.Reg, %struct.Reg* %10725, i32 0, i32 0
  %EAX.i1685 = bitcast %union.anon* %10726 to i32*
  %10727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10728 = getelementptr inbounds %struct.GPR, %struct.GPR* %10727, i32 0, i32 5
  %10729 = getelementptr inbounds %struct.Reg, %struct.Reg* %10728, i32 0, i32 0
  %RCX.i1686 = bitcast %union.anon* %10729 to i64*
  %10730 = load i64, i64* %RCX.i1686
  %10731 = load i32, i32* %EAX.i1685
  %10732 = zext i32 %10731 to i64
  %10733 = load i64, i64* %PC.i1684
  %10734 = add i64 %10733, 2
  store i64 %10734, i64* %PC.i1684
  %10735 = inttoptr i64 %10730 to i32*
  store i32 %10731, i32* %10735
  store %struct.Memory* %loadMem_4af0a6, %struct.Memory** %MEMORY
  %loadMem_4af0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10737 = getelementptr inbounds %struct.GPR, %struct.GPR* %10736, i32 0, i32 33
  %10738 = getelementptr inbounds %struct.Reg, %struct.Reg* %10737, i32 0, i32 0
  %PC.i1681 = bitcast %union.anon* %10738 to i64*
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10740 = getelementptr inbounds %struct.GPR, %struct.GPR* %10739, i32 0, i32 1
  %10741 = getelementptr inbounds %struct.Reg, %struct.Reg* %10740, i32 0, i32 0
  %RAX.i1682 = bitcast %union.anon* %10741 to i64*
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10743 = getelementptr inbounds %struct.GPR, %struct.GPR* %10742, i32 0, i32 15
  %10744 = getelementptr inbounds %struct.Reg, %struct.Reg* %10743, i32 0, i32 0
  %RBP.i1683 = bitcast %union.anon* %10744 to i64*
  %10745 = load i64, i64* %RBP.i1683
  %10746 = sub i64 %10745, 800
  %10747 = load i64, i64* %PC.i1681
  %10748 = add i64 %10747, 6
  store i64 %10748, i64* %PC.i1681
  %10749 = inttoptr i64 %10746 to i32*
  %10750 = load i32, i32* %10749
  %10751 = zext i32 %10750 to i64
  store i64 %10751, i64* %RAX.i1682, align 8
  store %struct.Memory* %loadMem_4af0a8, %struct.Memory** %MEMORY
  %loadMem_4af0ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10753 = getelementptr inbounds %struct.GPR, %struct.GPR* %10752, i32 0, i32 33
  %10754 = getelementptr inbounds %struct.Reg, %struct.Reg* %10753, i32 0, i32 0
  %PC.i1679 = bitcast %union.anon* %10754 to i64*
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10756 = getelementptr inbounds %struct.GPR, %struct.GPR* %10755, i32 0, i32 5
  %10757 = getelementptr inbounds %struct.Reg, %struct.Reg* %10756, i32 0, i32 0
  %RCX.i1680 = bitcast %union.anon* %10757 to i64*
  %10758 = load i64, i64* %PC.i1679
  %10759 = add i64 %10758, 8
  store i64 %10759, i64* %PC.i1679
  %10760 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %10760, i64* %RCX.i1680, align 8
  store %struct.Memory* %loadMem_4af0ae, %struct.Memory** %MEMORY
  %loadMem_4af0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 33
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %10763 to i64*
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10765 = getelementptr inbounds %struct.GPR, %struct.GPR* %10764, i32 0, i32 7
  %10766 = getelementptr inbounds %struct.Reg, %struct.Reg* %10765, i32 0, i32 0
  %RDX.i1677 = bitcast %union.anon* %10766 to i64*
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10768 = getelementptr inbounds %struct.GPR, %struct.GPR* %10767, i32 0, i32 15
  %10769 = getelementptr inbounds %struct.Reg, %struct.Reg* %10768, i32 0, i32 0
  %RBP.i1678 = bitcast %union.anon* %10769 to i64*
  %10770 = load i64, i64* %RBP.i1678
  %10771 = sub i64 %10770, 35396
  %10772 = load i64, i64* %PC.i1676
  %10773 = add i64 %10772, 7
  store i64 %10773, i64* %PC.i1676
  %10774 = inttoptr i64 %10771 to i32*
  %10775 = load i32, i32* %10774
  %10776 = sext i32 %10775 to i64
  store i64 %10776, i64* %RDX.i1677, align 8
  store %struct.Memory* %loadMem_4af0b6, %struct.Memory** %MEMORY
  %loadMem_4af0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 33
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %PC.i1673 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 5
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RCX.i1674 = bitcast %union.anon* %10782 to i64*
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10784 = getelementptr inbounds %struct.GPR, %struct.GPR* %10783, i32 0, i32 7
  %10785 = getelementptr inbounds %struct.Reg, %struct.Reg* %10784, i32 0, i32 0
  %RDX.i1675 = bitcast %union.anon* %10785 to i64*
  %10786 = load i64, i64* %RCX.i1674
  %10787 = load i64, i64* %RDX.i1675
  %10788 = mul i64 %10787, 8
  %10789 = add i64 %10788, %10786
  %10790 = load i64, i64* %PC.i1673
  %10791 = add i64 %10790, 4
  store i64 %10791, i64* %PC.i1673
  %10792 = inttoptr i64 %10789 to i64*
  %10793 = load i64, i64* %10792
  store i64 %10793, i64* %RCX.i1674, align 8
  store %struct.Memory* %loadMem_4af0bd, %struct.Memory** %MEMORY
  %loadMem_4af0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10795 = getelementptr inbounds %struct.GPR, %struct.GPR* %10794, i32 0, i32 33
  %10796 = getelementptr inbounds %struct.Reg, %struct.Reg* %10795, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %10796 to i64*
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10798 = getelementptr inbounds %struct.GPR, %struct.GPR* %10797, i32 0, i32 7
  %10799 = getelementptr inbounds %struct.Reg, %struct.Reg* %10798, i32 0, i32 0
  %RDX.i1671 = bitcast %union.anon* %10799 to i64*
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10801 = getelementptr inbounds %struct.GPR, %struct.GPR* %10800, i32 0, i32 15
  %10802 = getelementptr inbounds %struct.Reg, %struct.Reg* %10801, i32 0, i32 0
  %RBP.i1672 = bitcast %union.anon* %10802 to i64*
  %10803 = load i64, i64* %RBP.i1672
  %10804 = sub i64 %10803, 36
  %10805 = load i64, i64* %PC.i1670
  %10806 = add i64 %10805, 4
  store i64 %10806, i64* %PC.i1670
  %10807 = inttoptr i64 %10804 to i32*
  %10808 = load i32, i32* %10807
  %10809 = sext i32 %10808 to i64
  store i64 %10809, i64* %RDX.i1671, align 8
  store %struct.Memory* %loadMem_4af0c1, %struct.Memory** %MEMORY
  %loadMem_4af0c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10811 = getelementptr inbounds %struct.GPR, %struct.GPR* %10810, i32 0, i32 33
  %10812 = getelementptr inbounds %struct.Reg, %struct.Reg* %10811, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %10812 to i64*
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10814 = getelementptr inbounds %struct.GPR, %struct.GPR* %10813, i32 0, i32 5
  %10815 = getelementptr inbounds %struct.Reg, %struct.Reg* %10814, i32 0, i32 0
  %RCX.i1668 = bitcast %union.anon* %10815 to i64*
  %10816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10817 = getelementptr inbounds %struct.GPR, %struct.GPR* %10816, i32 0, i32 7
  %10818 = getelementptr inbounds %struct.Reg, %struct.Reg* %10817, i32 0, i32 0
  %RDX.i1669 = bitcast %union.anon* %10818 to i64*
  %10819 = load i64, i64* %RCX.i1668
  %10820 = load i64, i64* %RDX.i1669
  %10821 = mul i64 %10820, 8
  %10822 = add i64 %10821, %10819
  %10823 = load i64, i64* %PC.i1667
  %10824 = add i64 %10823, 4
  store i64 %10824, i64* %PC.i1667
  %10825 = inttoptr i64 %10822 to i64*
  %10826 = load i64, i64* %10825
  store i64 %10826, i64* %RCX.i1668, align 8
  store %struct.Memory* %loadMem_4af0c5, %struct.Memory** %MEMORY
  %loadMem_4af0c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10828 = getelementptr inbounds %struct.GPR, %struct.GPR* %10827, i32 0, i32 33
  %10829 = getelementptr inbounds %struct.Reg, %struct.Reg* %10828, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %10829 to i64*
  %10830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10831 = getelementptr inbounds %struct.GPR, %struct.GPR* %10830, i32 0, i32 1
  %10832 = getelementptr inbounds %struct.Reg, %struct.Reg* %10831, i32 0, i32 0
  %EAX.i1665 = bitcast %union.anon* %10832 to i32*
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10834 = getelementptr inbounds %struct.GPR, %struct.GPR* %10833, i32 0, i32 5
  %10835 = getelementptr inbounds %struct.Reg, %struct.Reg* %10834, i32 0, i32 0
  %RCX.i1666 = bitcast %union.anon* %10835 to i64*
  %10836 = load i64, i64* %RCX.i1666
  %10837 = add i64 %10836, 4
  %10838 = load i32, i32* %EAX.i1665
  %10839 = zext i32 %10838 to i64
  %10840 = load i64, i64* %PC.i1664
  %10841 = add i64 %10840, 3
  store i64 %10841, i64* %PC.i1664
  %10842 = inttoptr i64 %10837 to i32*
  store i32 %10838, i32* %10842
  store %struct.Memory* %loadMem_4af0c9, %struct.Memory** %MEMORY
  %loadMem_4af0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10844 = getelementptr inbounds %struct.GPR, %struct.GPR* %10843, i32 0, i32 33
  %10845 = getelementptr inbounds %struct.Reg, %struct.Reg* %10844, i32 0, i32 0
  %PC.i1661 = bitcast %union.anon* %10845 to i64*
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10847 = getelementptr inbounds %struct.GPR, %struct.GPR* %10846, i32 0, i32 1
  %10848 = getelementptr inbounds %struct.Reg, %struct.Reg* %10847, i32 0, i32 0
  %RAX.i1662 = bitcast %union.anon* %10848 to i64*
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10850 = getelementptr inbounds %struct.GPR, %struct.GPR* %10849, i32 0, i32 15
  %10851 = getelementptr inbounds %struct.Reg, %struct.Reg* %10850, i32 0, i32 0
  %RBP.i1663 = bitcast %union.anon* %10851 to i64*
  %10852 = load i64, i64* %RBP.i1663
  %10853 = sub i64 %10852, 796
  %10854 = load i64, i64* %PC.i1661
  %10855 = add i64 %10854, 6
  store i64 %10855, i64* %PC.i1661
  %10856 = inttoptr i64 %10853 to i32*
  %10857 = load i32, i32* %10856
  %10858 = zext i32 %10857 to i64
  store i64 %10858, i64* %RAX.i1662, align 8
  store %struct.Memory* %loadMem_4af0cc, %struct.Memory** %MEMORY
  %loadMem_4af0d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10860 = getelementptr inbounds %struct.GPR, %struct.GPR* %10859, i32 0, i32 33
  %10861 = getelementptr inbounds %struct.Reg, %struct.Reg* %10860, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %10861 to i64*
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10863 = getelementptr inbounds %struct.GPR, %struct.GPR* %10862, i32 0, i32 5
  %10864 = getelementptr inbounds %struct.Reg, %struct.Reg* %10863, i32 0, i32 0
  %RCX.i1660 = bitcast %union.anon* %10864 to i64*
  %10865 = load i64, i64* %PC.i1659
  %10866 = add i64 %10865, 8
  store i64 %10866, i64* %PC.i1659
  %10867 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %10867, i64* %RCX.i1660, align 8
  store %struct.Memory* %loadMem_4af0d2, %struct.Memory** %MEMORY
  %loadMem_4af0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10869 = getelementptr inbounds %struct.GPR, %struct.GPR* %10868, i32 0, i32 33
  %10870 = getelementptr inbounds %struct.Reg, %struct.Reg* %10869, i32 0, i32 0
  %PC.i1656 = bitcast %union.anon* %10870 to i64*
  %10871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10872 = getelementptr inbounds %struct.GPR, %struct.GPR* %10871, i32 0, i32 7
  %10873 = getelementptr inbounds %struct.Reg, %struct.Reg* %10872, i32 0, i32 0
  %RDX.i1657 = bitcast %union.anon* %10873 to i64*
  %10874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10875 = getelementptr inbounds %struct.GPR, %struct.GPR* %10874, i32 0, i32 15
  %10876 = getelementptr inbounds %struct.Reg, %struct.Reg* %10875, i32 0, i32 0
  %RBP.i1658 = bitcast %union.anon* %10876 to i64*
  %10877 = load i64, i64* %RBP.i1658
  %10878 = sub i64 %10877, 35396
  %10879 = load i64, i64* %PC.i1656
  %10880 = add i64 %10879, 7
  store i64 %10880, i64* %PC.i1656
  %10881 = inttoptr i64 %10878 to i32*
  %10882 = load i32, i32* %10881
  %10883 = sext i32 %10882 to i64
  store i64 %10883, i64* %RDX.i1657, align 8
  store %struct.Memory* %loadMem_4af0da, %struct.Memory** %MEMORY
  %loadMem_4af0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10885 = getelementptr inbounds %struct.GPR, %struct.GPR* %10884, i32 0, i32 33
  %10886 = getelementptr inbounds %struct.Reg, %struct.Reg* %10885, i32 0, i32 0
  %PC.i1653 = bitcast %union.anon* %10886 to i64*
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10888 = getelementptr inbounds %struct.GPR, %struct.GPR* %10887, i32 0, i32 5
  %10889 = getelementptr inbounds %struct.Reg, %struct.Reg* %10888, i32 0, i32 0
  %RCX.i1654 = bitcast %union.anon* %10889 to i64*
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10891 = getelementptr inbounds %struct.GPR, %struct.GPR* %10890, i32 0, i32 7
  %10892 = getelementptr inbounds %struct.Reg, %struct.Reg* %10891, i32 0, i32 0
  %RDX.i1655 = bitcast %union.anon* %10892 to i64*
  %10893 = load i64, i64* %RCX.i1654
  %10894 = load i64, i64* %RDX.i1655
  %10895 = mul i64 %10894, 8
  %10896 = add i64 %10895, %10893
  %10897 = load i64, i64* %PC.i1653
  %10898 = add i64 %10897, 4
  store i64 %10898, i64* %PC.i1653
  %10899 = inttoptr i64 %10896 to i64*
  %10900 = load i64, i64* %10899
  store i64 %10900, i64* %RCX.i1654, align 8
  store %struct.Memory* %loadMem_4af0e1, %struct.Memory** %MEMORY
  %loadMem_4af0e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10902 = getelementptr inbounds %struct.GPR, %struct.GPR* %10901, i32 0, i32 33
  %10903 = getelementptr inbounds %struct.Reg, %struct.Reg* %10902, i32 0, i32 0
  %PC.i1650 = bitcast %union.anon* %10903 to i64*
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10905 = getelementptr inbounds %struct.GPR, %struct.GPR* %10904, i32 0, i32 7
  %10906 = getelementptr inbounds %struct.Reg, %struct.Reg* %10905, i32 0, i32 0
  %RDX.i1651 = bitcast %union.anon* %10906 to i64*
  %10907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10908 = getelementptr inbounds %struct.GPR, %struct.GPR* %10907, i32 0, i32 15
  %10909 = getelementptr inbounds %struct.Reg, %struct.Reg* %10908, i32 0, i32 0
  %RBP.i1652 = bitcast %union.anon* %10909 to i64*
  %10910 = load i64, i64* %RBP.i1652
  %10911 = sub i64 %10910, 36
  %10912 = load i64, i64* %PC.i1650
  %10913 = add i64 %10912, 4
  store i64 %10913, i64* %PC.i1650
  %10914 = inttoptr i64 %10911 to i32*
  %10915 = load i32, i32* %10914
  %10916 = sext i32 %10915 to i64
  store i64 %10916, i64* %RDX.i1651, align 8
  store %struct.Memory* %loadMem_4af0e5, %struct.Memory** %MEMORY
  %loadMem_4af0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10918 = getelementptr inbounds %struct.GPR, %struct.GPR* %10917, i32 0, i32 33
  %10919 = getelementptr inbounds %struct.Reg, %struct.Reg* %10918, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %10919 to i64*
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10921 = getelementptr inbounds %struct.GPR, %struct.GPR* %10920, i32 0, i32 5
  %10922 = getelementptr inbounds %struct.Reg, %struct.Reg* %10921, i32 0, i32 0
  %RCX.i1648 = bitcast %union.anon* %10922 to i64*
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10924 = getelementptr inbounds %struct.GPR, %struct.GPR* %10923, i32 0, i32 7
  %10925 = getelementptr inbounds %struct.Reg, %struct.Reg* %10924, i32 0, i32 0
  %RDX.i1649 = bitcast %union.anon* %10925 to i64*
  %10926 = load i64, i64* %RCX.i1648
  %10927 = load i64, i64* %RDX.i1649
  %10928 = mul i64 %10927, 8
  %10929 = add i64 %10928, %10926
  %10930 = load i64, i64* %PC.i1647
  %10931 = add i64 %10930, 4
  store i64 %10931, i64* %PC.i1647
  %10932 = inttoptr i64 %10929 to i64*
  %10933 = load i64, i64* %10932
  store i64 %10933, i64* %RCX.i1648, align 8
  store %struct.Memory* %loadMem_4af0e9, %struct.Memory** %MEMORY
  %loadMem_4af0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10935 = getelementptr inbounds %struct.GPR, %struct.GPR* %10934, i32 0, i32 33
  %10936 = getelementptr inbounds %struct.Reg, %struct.Reg* %10935, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %10936 to i64*
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10938 = getelementptr inbounds %struct.GPR, %struct.GPR* %10937, i32 0, i32 1
  %10939 = getelementptr inbounds %struct.Reg, %struct.Reg* %10938, i32 0, i32 0
  %EAX.i1645 = bitcast %union.anon* %10939 to i32*
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10941 = getelementptr inbounds %struct.GPR, %struct.GPR* %10940, i32 0, i32 5
  %10942 = getelementptr inbounds %struct.Reg, %struct.Reg* %10941, i32 0, i32 0
  %RCX.i1646 = bitcast %union.anon* %10942 to i64*
  %10943 = load i64, i64* %RCX.i1646
  %10944 = add i64 %10943, 8
  %10945 = load i32, i32* %EAX.i1645
  %10946 = zext i32 %10945 to i64
  %10947 = load i64, i64* %PC.i1644
  %10948 = add i64 %10947, 3
  store i64 %10948, i64* %PC.i1644
  %10949 = inttoptr i64 %10944 to i32*
  store i32 %10945, i32* %10949
  store %struct.Memory* %loadMem_4af0ed, %struct.Memory** %MEMORY
  %loadMem_4af0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10951 = getelementptr inbounds %struct.GPR, %struct.GPR* %10950, i32 0, i32 33
  %10952 = getelementptr inbounds %struct.Reg, %struct.Reg* %10951, i32 0, i32 0
  %PC.i1642 = bitcast %union.anon* %10952 to i64*
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10954 = getelementptr inbounds %struct.GPR, %struct.GPR* %10953, i32 0, i32 5
  %10955 = getelementptr inbounds %struct.Reg, %struct.Reg* %10954, i32 0, i32 0
  %RCX.i1643 = bitcast %union.anon* %10955 to i64*
  %10956 = load i64, i64* %PC.i1642
  %10957 = add i64 %10956, 8
  store i64 %10957, i64* %PC.i1642
  %10958 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %10958, i64* %RCX.i1643, align 8
  store %struct.Memory* %loadMem_4af0f0, %struct.Memory** %MEMORY
  %loadMem_4af0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10960 = getelementptr inbounds %struct.GPR, %struct.GPR* %10959, i32 0, i32 33
  %10961 = getelementptr inbounds %struct.Reg, %struct.Reg* %10960, i32 0, i32 0
  %PC.i1639 = bitcast %union.anon* %10961 to i64*
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10963 = getelementptr inbounds %struct.GPR, %struct.GPR* %10962, i32 0, i32 7
  %10964 = getelementptr inbounds %struct.Reg, %struct.Reg* %10963, i32 0, i32 0
  %RDX.i1640 = bitcast %union.anon* %10964 to i64*
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 15
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %RBP.i1641 = bitcast %union.anon* %10967 to i64*
  %10968 = load i64, i64* %RBP.i1641
  %10969 = sub i64 %10968, 35396
  %10970 = load i64, i64* %PC.i1639
  %10971 = add i64 %10970, 7
  store i64 %10971, i64* %PC.i1639
  %10972 = inttoptr i64 %10969 to i32*
  %10973 = load i32, i32* %10972
  %10974 = sext i32 %10973 to i64
  store i64 %10974, i64* %RDX.i1640, align 8
  store %struct.Memory* %loadMem_4af0f8, %struct.Memory** %MEMORY
  %loadMem_4af0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10976 = getelementptr inbounds %struct.GPR, %struct.GPR* %10975, i32 0, i32 33
  %10977 = getelementptr inbounds %struct.Reg, %struct.Reg* %10976, i32 0, i32 0
  %PC.i1636 = bitcast %union.anon* %10977 to i64*
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10979 = getelementptr inbounds %struct.GPR, %struct.GPR* %10978, i32 0, i32 5
  %10980 = getelementptr inbounds %struct.Reg, %struct.Reg* %10979, i32 0, i32 0
  %RCX.i1637 = bitcast %union.anon* %10980 to i64*
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10982 = getelementptr inbounds %struct.GPR, %struct.GPR* %10981, i32 0, i32 7
  %10983 = getelementptr inbounds %struct.Reg, %struct.Reg* %10982, i32 0, i32 0
  %RDX.i1638 = bitcast %union.anon* %10983 to i64*
  %10984 = load i64, i64* %RCX.i1637
  %10985 = load i64, i64* %RDX.i1638
  %10986 = mul i64 %10985, 8
  %10987 = add i64 %10986, %10984
  %10988 = load i64, i64* %PC.i1636
  %10989 = add i64 %10988, 4
  store i64 %10989, i64* %PC.i1636
  %10990 = inttoptr i64 %10987 to i64*
  %10991 = load i64, i64* %10990
  store i64 %10991, i64* %RCX.i1637, align 8
  store %struct.Memory* %loadMem_4af0ff, %struct.Memory** %MEMORY
  %loadMem_4af103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10993 = getelementptr inbounds %struct.GPR, %struct.GPR* %10992, i32 0, i32 33
  %10994 = getelementptr inbounds %struct.Reg, %struct.Reg* %10993, i32 0, i32 0
  %PC.i1633 = bitcast %union.anon* %10994 to i64*
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10996 = getelementptr inbounds %struct.GPR, %struct.GPR* %10995, i32 0, i32 7
  %10997 = getelementptr inbounds %struct.Reg, %struct.Reg* %10996, i32 0, i32 0
  %RDX.i1634 = bitcast %union.anon* %10997 to i64*
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10999 = getelementptr inbounds %struct.GPR, %struct.GPR* %10998, i32 0, i32 15
  %11000 = getelementptr inbounds %struct.Reg, %struct.Reg* %10999, i32 0, i32 0
  %RBP.i1635 = bitcast %union.anon* %11000 to i64*
  %11001 = load i64, i64* %RBP.i1635
  %11002 = sub i64 %11001, 36
  %11003 = load i64, i64* %PC.i1633
  %11004 = add i64 %11003, 4
  store i64 %11004, i64* %PC.i1633
  %11005 = inttoptr i64 %11002 to i32*
  %11006 = load i32, i32* %11005
  %11007 = sext i32 %11006 to i64
  store i64 %11007, i64* %RDX.i1634, align 8
  store %struct.Memory* %loadMem_4af103, %struct.Memory** %MEMORY
  %loadMem_4af107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11009 = getelementptr inbounds %struct.GPR, %struct.GPR* %11008, i32 0, i32 33
  %11010 = getelementptr inbounds %struct.Reg, %struct.Reg* %11009, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %11010 to i64*
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11012 = getelementptr inbounds %struct.GPR, %struct.GPR* %11011, i32 0, i32 5
  %11013 = getelementptr inbounds %struct.Reg, %struct.Reg* %11012, i32 0, i32 0
  %RCX.i1631 = bitcast %union.anon* %11013 to i64*
  %11014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11015 = getelementptr inbounds %struct.GPR, %struct.GPR* %11014, i32 0, i32 7
  %11016 = getelementptr inbounds %struct.Reg, %struct.Reg* %11015, i32 0, i32 0
  %RDX.i1632 = bitcast %union.anon* %11016 to i64*
  %11017 = load i64, i64* %RCX.i1631
  %11018 = load i64, i64* %RDX.i1632
  %11019 = mul i64 %11018, 8
  %11020 = add i64 %11019, %11017
  %11021 = load i64, i64* %PC.i1630
  %11022 = add i64 %11021, 4
  store i64 %11022, i64* %PC.i1630
  %11023 = inttoptr i64 %11020 to i64*
  %11024 = load i64, i64* %11023
  store i64 %11024, i64* %RCX.i1631, align 8
  store %struct.Memory* %loadMem_4af107, %struct.Memory** %MEMORY
  %loadMem_4af10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11026 = getelementptr inbounds %struct.GPR, %struct.GPR* %11025, i32 0, i32 33
  %11027 = getelementptr inbounds %struct.Reg, %struct.Reg* %11026, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %11027 to i64*
  %11028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11029 = getelementptr inbounds %struct.GPR, %struct.GPR* %11028, i32 0, i32 5
  %11030 = getelementptr inbounds %struct.Reg, %struct.Reg* %11029, i32 0, i32 0
  %RCX.i1629 = bitcast %union.anon* %11030 to i64*
  %11031 = load i64, i64* %RCX.i1629
  %11032 = load i64, i64* %PC.i1628
  %11033 = add i64 %11032, 6
  store i64 %11033, i64* %PC.i1628
  %11034 = inttoptr i64 %11031 to i32*
  store i32 0, i32* %11034
  store %struct.Memory* %loadMem_4af10b, %struct.Memory** %MEMORY
  %loadMem_4af111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11036 = getelementptr inbounds %struct.GPR, %struct.GPR* %11035, i32 0, i32 33
  %11037 = getelementptr inbounds %struct.Reg, %struct.Reg* %11036, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %11037 to i64*
  %11038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11039 = getelementptr inbounds %struct.GPR, %struct.GPR* %11038, i32 0, i32 5
  %11040 = getelementptr inbounds %struct.Reg, %struct.Reg* %11039, i32 0, i32 0
  %RCX.i1627 = bitcast %union.anon* %11040 to i64*
  %11041 = load i64, i64* %PC.i1626
  %11042 = add i64 %11041, 8
  store i64 %11042, i64* %PC.i1626
  %11043 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11043, i64* %RCX.i1627, align 8
  store %struct.Memory* %loadMem_4af111, %struct.Memory** %MEMORY
  %loadMem_4af119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11045 = getelementptr inbounds %struct.GPR, %struct.GPR* %11044, i32 0, i32 33
  %11046 = getelementptr inbounds %struct.Reg, %struct.Reg* %11045, i32 0, i32 0
  %PC.i1623 = bitcast %union.anon* %11046 to i64*
  %11047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11048 = getelementptr inbounds %struct.GPR, %struct.GPR* %11047, i32 0, i32 7
  %11049 = getelementptr inbounds %struct.Reg, %struct.Reg* %11048, i32 0, i32 0
  %RDX.i1624 = bitcast %union.anon* %11049 to i64*
  %11050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11051 = getelementptr inbounds %struct.GPR, %struct.GPR* %11050, i32 0, i32 15
  %11052 = getelementptr inbounds %struct.Reg, %struct.Reg* %11051, i32 0, i32 0
  %RBP.i1625 = bitcast %union.anon* %11052 to i64*
  %11053 = load i64, i64* %RBP.i1625
  %11054 = sub i64 %11053, 35396
  %11055 = load i64, i64* %PC.i1623
  %11056 = add i64 %11055, 7
  store i64 %11056, i64* %PC.i1623
  %11057 = inttoptr i64 %11054 to i32*
  %11058 = load i32, i32* %11057
  %11059 = sext i32 %11058 to i64
  store i64 %11059, i64* %RDX.i1624, align 8
  store %struct.Memory* %loadMem_4af119, %struct.Memory** %MEMORY
  %loadMem_4af120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11061 = getelementptr inbounds %struct.GPR, %struct.GPR* %11060, i32 0, i32 33
  %11062 = getelementptr inbounds %struct.Reg, %struct.Reg* %11061, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %11062 to i64*
  %11063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11064 = getelementptr inbounds %struct.GPR, %struct.GPR* %11063, i32 0, i32 5
  %11065 = getelementptr inbounds %struct.Reg, %struct.Reg* %11064, i32 0, i32 0
  %RCX.i1621 = bitcast %union.anon* %11065 to i64*
  %11066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11067 = getelementptr inbounds %struct.GPR, %struct.GPR* %11066, i32 0, i32 7
  %11068 = getelementptr inbounds %struct.Reg, %struct.Reg* %11067, i32 0, i32 0
  %RDX.i1622 = bitcast %union.anon* %11068 to i64*
  %11069 = load i64, i64* %RCX.i1621
  %11070 = load i64, i64* %RDX.i1622
  %11071 = mul i64 %11070, 8
  %11072 = add i64 %11071, %11069
  %11073 = load i64, i64* %PC.i1620
  %11074 = add i64 %11073, 4
  store i64 %11074, i64* %PC.i1620
  %11075 = inttoptr i64 %11072 to i64*
  %11076 = load i64, i64* %11075
  store i64 %11076, i64* %RCX.i1621, align 8
  store %struct.Memory* %loadMem_4af120, %struct.Memory** %MEMORY
  %loadMem_4af124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11078 = getelementptr inbounds %struct.GPR, %struct.GPR* %11077, i32 0, i32 33
  %11079 = getelementptr inbounds %struct.Reg, %struct.Reg* %11078, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %11079 to i64*
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11081 = getelementptr inbounds %struct.GPR, %struct.GPR* %11080, i32 0, i32 7
  %11082 = getelementptr inbounds %struct.Reg, %struct.Reg* %11081, i32 0, i32 0
  %RDX.i1618 = bitcast %union.anon* %11082 to i64*
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11084 = getelementptr inbounds %struct.GPR, %struct.GPR* %11083, i32 0, i32 15
  %11085 = getelementptr inbounds %struct.Reg, %struct.Reg* %11084, i32 0, i32 0
  %RBP.i1619 = bitcast %union.anon* %11085 to i64*
  %11086 = load i64, i64* %RBP.i1619
  %11087 = sub i64 %11086, 36
  %11088 = load i64, i64* %PC.i1617
  %11089 = add i64 %11088, 4
  store i64 %11089, i64* %PC.i1617
  %11090 = inttoptr i64 %11087 to i32*
  %11091 = load i32, i32* %11090
  %11092 = sext i32 %11091 to i64
  store i64 %11092, i64* %RDX.i1618, align 8
  store %struct.Memory* %loadMem_4af124, %struct.Memory** %MEMORY
  %loadMem_4af128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11094 = getelementptr inbounds %struct.GPR, %struct.GPR* %11093, i32 0, i32 33
  %11095 = getelementptr inbounds %struct.Reg, %struct.Reg* %11094, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %11095 to i64*
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11097 = getelementptr inbounds %struct.GPR, %struct.GPR* %11096, i32 0, i32 5
  %11098 = getelementptr inbounds %struct.Reg, %struct.Reg* %11097, i32 0, i32 0
  %RCX.i1615 = bitcast %union.anon* %11098 to i64*
  %11099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11100 = getelementptr inbounds %struct.GPR, %struct.GPR* %11099, i32 0, i32 7
  %11101 = getelementptr inbounds %struct.Reg, %struct.Reg* %11100, i32 0, i32 0
  %RDX.i1616 = bitcast %union.anon* %11101 to i64*
  %11102 = load i64, i64* %RCX.i1615
  %11103 = load i64, i64* %RDX.i1616
  %11104 = mul i64 %11103, 8
  %11105 = add i64 %11104, %11102
  %11106 = load i64, i64* %PC.i1614
  %11107 = add i64 %11106, 4
  store i64 %11107, i64* %PC.i1614
  %11108 = inttoptr i64 %11105 to i64*
  %11109 = load i64, i64* %11108
  store i64 %11109, i64* %RCX.i1615, align 8
  store %struct.Memory* %loadMem_4af128, %struct.Memory** %MEMORY
  %loadMem_4af12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11111 = getelementptr inbounds %struct.GPR, %struct.GPR* %11110, i32 0, i32 33
  %11112 = getelementptr inbounds %struct.Reg, %struct.Reg* %11111, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %11112 to i64*
  %11113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11114 = getelementptr inbounds %struct.GPR, %struct.GPR* %11113, i32 0, i32 5
  %11115 = getelementptr inbounds %struct.Reg, %struct.Reg* %11114, i32 0, i32 0
  %RCX.i1613 = bitcast %union.anon* %11115 to i64*
  %11116 = load i64, i64* %RCX.i1613
  %11117 = add i64 %11116, 4
  %11118 = load i64, i64* %PC.i1612
  %11119 = add i64 %11118, 7
  store i64 %11119, i64* %PC.i1612
  %11120 = inttoptr i64 %11117 to i32*
  store i32 0, i32* %11120
  store %struct.Memory* %loadMem_4af12c, %struct.Memory** %MEMORY
  %loadMem_4af133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11122 = getelementptr inbounds %struct.GPR, %struct.GPR* %11121, i32 0, i32 33
  %11123 = getelementptr inbounds %struct.Reg, %struct.Reg* %11122, i32 0, i32 0
  %PC.i1610 = bitcast %union.anon* %11123 to i64*
  %11124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11125 = getelementptr inbounds %struct.GPR, %struct.GPR* %11124, i32 0, i32 5
  %11126 = getelementptr inbounds %struct.Reg, %struct.Reg* %11125, i32 0, i32 0
  %RCX.i1611 = bitcast %union.anon* %11126 to i64*
  %11127 = load i64, i64* %PC.i1610
  %11128 = add i64 %11127, 8
  store i64 %11128, i64* %PC.i1610
  %11129 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11129, i64* %RCX.i1611, align 8
  store %struct.Memory* %loadMem_4af133, %struct.Memory** %MEMORY
  %loadMem_4af13b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11131 = getelementptr inbounds %struct.GPR, %struct.GPR* %11130, i32 0, i32 33
  %11132 = getelementptr inbounds %struct.Reg, %struct.Reg* %11131, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %11132 to i64*
  %11133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11134 = getelementptr inbounds %struct.GPR, %struct.GPR* %11133, i32 0, i32 7
  %11135 = getelementptr inbounds %struct.Reg, %struct.Reg* %11134, i32 0, i32 0
  %RDX.i1608 = bitcast %union.anon* %11135 to i64*
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11137 = getelementptr inbounds %struct.GPR, %struct.GPR* %11136, i32 0, i32 15
  %11138 = getelementptr inbounds %struct.Reg, %struct.Reg* %11137, i32 0, i32 0
  %RBP.i1609 = bitcast %union.anon* %11138 to i64*
  %11139 = load i64, i64* %RBP.i1609
  %11140 = sub i64 %11139, 35396
  %11141 = load i64, i64* %PC.i1607
  %11142 = add i64 %11141, 7
  store i64 %11142, i64* %PC.i1607
  %11143 = inttoptr i64 %11140 to i32*
  %11144 = load i32, i32* %11143
  %11145 = sext i32 %11144 to i64
  store i64 %11145, i64* %RDX.i1608, align 8
  store %struct.Memory* %loadMem_4af13b, %struct.Memory** %MEMORY
  %loadMem_4af142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11147 = getelementptr inbounds %struct.GPR, %struct.GPR* %11146, i32 0, i32 33
  %11148 = getelementptr inbounds %struct.Reg, %struct.Reg* %11147, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %11148 to i64*
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11150 = getelementptr inbounds %struct.GPR, %struct.GPR* %11149, i32 0, i32 5
  %11151 = getelementptr inbounds %struct.Reg, %struct.Reg* %11150, i32 0, i32 0
  %RCX.i1605 = bitcast %union.anon* %11151 to i64*
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11153 = getelementptr inbounds %struct.GPR, %struct.GPR* %11152, i32 0, i32 7
  %11154 = getelementptr inbounds %struct.Reg, %struct.Reg* %11153, i32 0, i32 0
  %RDX.i1606 = bitcast %union.anon* %11154 to i64*
  %11155 = load i64, i64* %RCX.i1605
  %11156 = load i64, i64* %RDX.i1606
  %11157 = mul i64 %11156, 8
  %11158 = add i64 %11157, %11155
  %11159 = load i64, i64* %PC.i1604
  %11160 = add i64 %11159, 4
  store i64 %11160, i64* %PC.i1604
  %11161 = inttoptr i64 %11158 to i64*
  %11162 = load i64, i64* %11161
  store i64 %11162, i64* %RCX.i1605, align 8
  store %struct.Memory* %loadMem_4af142, %struct.Memory** %MEMORY
  %loadMem_4af146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11164 = getelementptr inbounds %struct.GPR, %struct.GPR* %11163, i32 0, i32 33
  %11165 = getelementptr inbounds %struct.Reg, %struct.Reg* %11164, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %11165 to i64*
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11167 = getelementptr inbounds %struct.GPR, %struct.GPR* %11166, i32 0, i32 7
  %11168 = getelementptr inbounds %struct.Reg, %struct.Reg* %11167, i32 0, i32 0
  %RDX.i1602 = bitcast %union.anon* %11168 to i64*
  %11169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11170 = getelementptr inbounds %struct.GPR, %struct.GPR* %11169, i32 0, i32 15
  %11171 = getelementptr inbounds %struct.Reg, %struct.Reg* %11170, i32 0, i32 0
  %RBP.i1603 = bitcast %union.anon* %11171 to i64*
  %11172 = load i64, i64* %RBP.i1603
  %11173 = sub i64 %11172, 36
  %11174 = load i64, i64* %PC.i1601
  %11175 = add i64 %11174, 4
  store i64 %11175, i64* %PC.i1601
  %11176 = inttoptr i64 %11173 to i32*
  %11177 = load i32, i32* %11176
  %11178 = sext i32 %11177 to i64
  store i64 %11178, i64* %RDX.i1602, align 8
  store %struct.Memory* %loadMem_4af146, %struct.Memory** %MEMORY
  %loadMem_4af14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11180 = getelementptr inbounds %struct.GPR, %struct.GPR* %11179, i32 0, i32 33
  %11181 = getelementptr inbounds %struct.Reg, %struct.Reg* %11180, i32 0, i32 0
  %PC.i1598 = bitcast %union.anon* %11181 to i64*
  %11182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11183 = getelementptr inbounds %struct.GPR, %struct.GPR* %11182, i32 0, i32 5
  %11184 = getelementptr inbounds %struct.Reg, %struct.Reg* %11183, i32 0, i32 0
  %RCX.i1599 = bitcast %union.anon* %11184 to i64*
  %11185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11186 = getelementptr inbounds %struct.GPR, %struct.GPR* %11185, i32 0, i32 7
  %11187 = getelementptr inbounds %struct.Reg, %struct.Reg* %11186, i32 0, i32 0
  %RDX.i1600 = bitcast %union.anon* %11187 to i64*
  %11188 = load i64, i64* %RCX.i1599
  %11189 = load i64, i64* %RDX.i1600
  %11190 = mul i64 %11189, 8
  %11191 = add i64 %11190, %11188
  %11192 = load i64, i64* %PC.i1598
  %11193 = add i64 %11192, 4
  store i64 %11193, i64* %PC.i1598
  %11194 = inttoptr i64 %11191 to i64*
  %11195 = load i64, i64* %11194
  store i64 %11195, i64* %RCX.i1599, align 8
  store %struct.Memory* %loadMem_4af14a, %struct.Memory** %MEMORY
  %loadMem_4af14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11197 = getelementptr inbounds %struct.GPR, %struct.GPR* %11196, i32 0, i32 33
  %11198 = getelementptr inbounds %struct.Reg, %struct.Reg* %11197, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %11198 to i64*
  %11199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11200 = getelementptr inbounds %struct.GPR, %struct.GPR* %11199, i32 0, i32 5
  %11201 = getelementptr inbounds %struct.Reg, %struct.Reg* %11200, i32 0, i32 0
  %RCX.i1597 = bitcast %union.anon* %11201 to i64*
  %11202 = load i64, i64* %RCX.i1597
  %11203 = add i64 %11202, 8
  %11204 = load i64, i64* %PC.i1596
  %11205 = add i64 %11204, 7
  store i64 %11205, i64* %PC.i1596
  %11206 = inttoptr i64 %11203 to i32*
  store i32 0, i32* %11206
  store %struct.Memory* %loadMem_4af14e, %struct.Memory** %MEMORY
  %loadMem_4af155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11208 = getelementptr inbounds %struct.GPR, %struct.GPR* %11207, i32 0, i32 33
  %11209 = getelementptr inbounds %struct.Reg, %struct.Reg* %11208, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %11209 to i64*
  %11210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11211 = getelementptr inbounds %struct.GPR, %struct.GPR* %11210, i32 0, i32 1
  %11212 = getelementptr inbounds %struct.Reg, %struct.Reg* %11211, i32 0, i32 0
  %RAX.i1594 = bitcast %union.anon* %11212 to i64*
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11214 = getelementptr inbounds %struct.GPR, %struct.GPR* %11213, i32 0, i32 15
  %11215 = getelementptr inbounds %struct.Reg, %struct.Reg* %11214, i32 0, i32 0
  %RBP.i1595 = bitcast %union.anon* %11215 to i64*
  %11216 = load i64, i64* %RBP.i1595
  %11217 = sub i64 %11216, 36
  %11218 = load i64, i64* %PC.i1593
  %11219 = add i64 %11218, 3
  store i64 %11219, i64* %PC.i1593
  %11220 = inttoptr i64 %11217 to i32*
  %11221 = load i32, i32* %11220
  %11222 = zext i32 %11221 to i64
  store i64 %11222, i64* %RAX.i1594, align 8
  store %struct.Memory* %loadMem_4af155, %struct.Memory** %MEMORY
  %loadMem_4af158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11224 = getelementptr inbounds %struct.GPR, %struct.GPR* %11223, i32 0, i32 33
  %11225 = getelementptr inbounds %struct.Reg, %struct.Reg* %11224, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %11225 to i64*
  %11226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11227 = getelementptr inbounds %struct.GPR, %struct.GPR* %11226, i32 0, i32 1
  %11228 = getelementptr inbounds %struct.Reg, %struct.Reg* %11227, i32 0, i32 0
  %RAX.i1592 = bitcast %union.anon* %11228 to i64*
  %11229 = load i64, i64* %RAX.i1592
  %11230 = load i64, i64* %PC.i1591
  %11231 = add i64 %11230, 3
  store i64 %11231, i64* %PC.i1591
  %11232 = trunc i64 %11229 to i32
  %11233 = add i32 1, %11232
  %11234 = zext i32 %11233 to i64
  store i64 %11234, i64* %RAX.i1592, align 8
  %11235 = icmp ult i32 %11233, %11232
  %11236 = icmp ult i32 %11233, 1
  %11237 = or i1 %11235, %11236
  %11238 = zext i1 %11237 to i8
  %11239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11238, i8* %11239, align 1
  %11240 = and i32 %11233, 255
  %11241 = call i32 @llvm.ctpop.i32(i32 %11240)
  %11242 = trunc i32 %11241 to i8
  %11243 = and i8 %11242, 1
  %11244 = xor i8 %11243, 1
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11244, i8* %11245, align 1
  %11246 = xor i64 1, %11229
  %11247 = trunc i64 %11246 to i32
  %11248 = xor i32 %11247, %11233
  %11249 = lshr i32 %11248, 4
  %11250 = trunc i32 %11249 to i8
  %11251 = and i8 %11250, 1
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11251, i8* %11252, align 1
  %11253 = icmp eq i32 %11233, 0
  %11254 = zext i1 %11253 to i8
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11254, i8* %11255, align 1
  %11256 = lshr i32 %11233, 31
  %11257 = trunc i32 %11256 to i8
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11257, i8* %11258, align 1
  %11259 = lshr i32 %11232, 31
  %11260 = xor i32 %11256, %11259
  %11261 = add i32 %11260, %11256
  %11262 = icmp eq i32 %11261, 2
  %11263 = zext i1 %11262 to i8
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11263, i8* %11264, align 1
  store %struct.Memory* %loadMem_4af158, %struct.Memory** %MEMORY
  %loadMem_4af15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11266 = getelementptr inbounds %struct.GPR, %struct.GPR* %11265, i32 0, i32 33
  %11267 = getelementptr inbounds %struct.Reg, %struct.Reg* %11266, i32 0, i32 0
  %PC.i1588 = bitcast %union.anon* %11267 to i64*
  %11268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11269 = getelementptr inbounds %struct.GPR, %struct.GPR* %11268, i32 0, i32 1
  %11270 = getelementptr inbounds %struct.Reg, %struct.Reg* %11269, i32 0, i32 0
  %EAX.i1589 = bitcast %union.anon* %11270 to i32*
  %11271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11272 = getelementptr inbounds %struct.GPR, %struct.GPR* %11271, i32 0, i32 15
  %11273 = getelementptr inbounds %struct.Reg, %struct.Reg* %11272, i32 0, i32 0
  %RBP.i1590 = bitcast %union.anon* %11273 to i64*
  %11274 = load i64, i64* %RBP.i1590
  %11275 = sub i64 %11274, 36
  %11276 = load i32, i32* %EAX.i1589
  %11277 = zext i32 %11276 to i64
  %11278 = load i64, i64* %PC.i1588
  %11279 = add i64 %11278, 3
  store i64 %11279, i64* %PC.i1588
  %11280 = inttoptr i64 %11275 to i32*
  store i32 %11276, i32* %11280
  store %struct.Memory* %loadMem_4af15b, %struct.Memory** %MEMORY
  %loadMem_4af15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11282 = getelementptr inbounds %struct.GPR, %struct.GPR* %11281, i32 0, i32 33
  %11283 = getelementptr inbounds %struct.Reg, %struct.Reg* %11282, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %11283 to i64*
  %11284 = load i64, i64* %PC.i1587
  %11285 = add i64 %11284, -240
  %11286 = load i64, i64* %PC.i1587
  %11287 = add i64 %11286, 5
  store i64 %11287, i64* %PC.i1587
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11285, i64* %11288, align 8
  store %struct.Memory* %loadMem_4af15e, %struct.Memory** %MEMORY
  br label %block_.L_4af06e

block_.L_4af163:                                  ; preds = %block_.L_4af06e
  %loadMem_4af163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11290 = getelementptr inbounds %struct.GPR, %struct.GPR* %11289, i32 0, i32 33
  %11291 = getelementptr inbounds %struct.Reg, %struct.Reg* %11290, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %11291 to i64*
  %11292 = load i64, i64* %PC.i1586
  %11293 = add i64 %11292, 5
  %11294 = load i64, i64* %PC.i1586
  %11295 = add i64 %11294, 5
  store i64 %11295, i64* %PC.i1586
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11293, i64* %11296, align 8
  store %struct.Memory* %loadMem_4af163, %struct.Memory** %MEMORY
  br label %block_.L_4af168

block_.L_4af168:                                  ; preds = %block_.L_4af163
  %loadMem_4af168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11298 = getelementptr inbounds %struct.GPR, %struct.GPR* %11297, i32 0, i32 33
  %11299 = getelementptr inbounds %struct.Reg, %struct.Reg* %11298, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %11299 to i64*
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11301 = getelementptr inbounds %struct.GPR, %struct.GPR* %11300, i32 0, i32 1
  %11302 = getelementptr inbounds %struct.Reg, %struct.Reg* %11301, i32 0, i32 0
  %RAX.i1584 = bitcast %union.anon* %11302 to i64*
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11304 = getelementptr inbounds %struct.GPR, %struct.GPR* %11303, i32 0, i32 15
  %11305 = getelementptr inbounds %struct.Reg, %struct.Reg* %11304, i32 0, i32 0
  %RBP.i1585 = bitcast %union.anon* %11305 to i64*
  %11306 = load i64, i64* %RBP.i1585
  %11307 = sub i64 %11306, 35396
  %11308 = load i64, i64* %PC.i1583
  %11309 = add i64 %11308, 6
  store i64 %11309, i64* %PC.i1583
  %11310 = inttoptr i64 %11307 to i32*
  %11311 = load i32, i32* %11310
  %11312 = zext i32 %11311 to i64
  store i64 %11312, i64* %RAX.i1584, align 8
  store %struct.Memory* %loadMem_4af168, %struct.Memory** %MEMORY
  %loadMem_4af16e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11314 = getelementptr inbounds %struct.GPR, %struct.GPR* %11313, i32 0, i32 33
  %11315 = getelementptr inbounds %struct.Reg, %struct.Reg* %11314, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %11315 to i64*
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11317 = getelementptr inbounds %struct.GPR, %struct.GPR* %11316, i32 0, i32 1
  %11318 = getelementptr inbounds %struct.Reg, %struct.Reg* %11317, i32 0, i32 0
  %RAX.i1582 = bitcast %union.anon* %11318 to i64*
  %11319 = load i64, i64* %RAX.i1582
  %11320 = load i64, i64* %PC.i1581
  %11321 = add i64 %11320, 3
  store i64 %11321, i64* %PC.i1581
  %11322 = trunc i64 %11319 to i32
  %11323 = add i32 1, %11322
  %11324 = zext i32 %11323 to i64
  store i64 %11324, i64* %RAX.i1582, align 8
  %11325 = icmp ult i32 %11323, %11322
  %11326 = icmp ult i32 %11323, 1
  %11327 = or i1 %11325, %11326
  %11328 = zext i1 %11327 to i8
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11328, i8* %11329, align 1
  %11330 = and i32 %11323, 255
  %11331 = call i32 @llvm.ctpop.i32(i32 %11330)
  %11332 = trunc i32 %11331 to i8
  %11333 = and i8 %11332, 1
  %11334 = xor i8 %11333, 1
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11334, i8* %11335, align 1
  %11336 = xor i64 1, %11319
  %11337 = trunc i64 %11336 to i32
  %11338 = xor i32 %11337, %11323
  %11339 = lshr i32 %11338, 4
  %11340 = trunc i32 %11339 to i8
  %11341 = and i8 %11340, 1
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11341, i8* %11342, align 1
  %11343 = icmp eq i32 %11323, 0
  %11344 = zext i1 %11343 to i8
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11344, i8* %11345, align 1
  %11346 = lshr i32 %11323, 31
  %11347 = trunc i32 %11346 to i8
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11347, i8* %11348, align 1
  %11349 = lshr i32 %11322, 31
  %11350 = xor i32 %11346, %11349
  %11351 = add i32 %11350, %11346
  %11352 = icmp eq i32 %11351, 2
  %11353 = zext i1 %11352 to i8
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11353, i8* %11354, align 1
  store %struct.Memory* %loadMem_4af16e, %struct.Memory** %MEMORY
  %loadMem_4af171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11356 = getelementptr inbounds %struct.GPR, %struct.GPR* %11355, i32 0, i32 33
  %11357 = getelementptr inbounds %struct.Reg, %struct.Reg* %11356, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %11357 to i64*
  %11358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11359 = getelementptr inbounds %struct.GPR, %struct.GPR* %11358, i32 0, i32 1
  %11360 = getelementptr inbounds %struct.Reg, %struct.Reg* %11359, i32 0, i32 0
  %EAX.i1579 = bitcast %union.anon* %11360 to i32*
  %11361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11362 = getelementptr inbounds %struct.GPR, %struct.GPR* %11361, i32 0, i32 15
  %11363 = getelementptr inbounds %struct.Reg, %struct.Reg* %11362, i32 0, i32 0
  %RBP.i1580 = bitcast %union.anon* %11363 to i64*
  %11364 = load i64, i64* %RBP.i1580
  %11365 = sub i64 %11364, 35396
  %11366 = load i32, i32* %EAX.i1579
  %11367 = zext i32 %11366 to i64
  %11368 = load i64, i64* %PC.i1578
  %11369 = add i64 %11368, 6
  store i64 %11369, i64* %PC.i1578
  %11370 = inttoptr i64 %11365 to i32*
  store i32 %11366, i32* %11370
  store %struct.Memory* %loadMem_4af171, %struct.Memory** %MEMORY
  %loadMem_4af177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11372 = getelementptr inbounds %struct.GPR, %struct.GPR* %11371, i32 0, i32 33
  %11373 = getelementptr inbounds %struct.Reg, %struct.Reg* %11372, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %11373 to i64*
  %11374 = load i64, i64* %PC.i1577
  %11375 = add i64 %11374, -295
  %11376 = load i64, i64* %PC.i1577
  %11377 = add i64 %11376, 5
  store i64 %11377, i64* %PC.i1577
  %11378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11375, i64* %11378, align 8
  store %struct.Memory* %loadMem_4af177, %struct.Memory** %MEMORY
  br label %block_.L_4af050

block_.L_4af17c:                                  ; preds = %block_.L_4af050
  %loadMem_4af17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11380 = getelementptr inbounds %struct.GPR, %struct.GPR* %11379, i32 0, i32 33
  %11381 = getelementptr inbounds %struct.Reg, %struct.Reg* %11380, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %11381 to i64*
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11383 = getelementptr inbounds %struct.GPR, %struct.GPR* %11382, i32 0, i32 15
  %11384 = getelementptr inbounds %struct.Reg, %struct.Reg* %11383, i32 0, i32 0
  %RBP.i1576 = bitcast %union.anon* %11384 to i64*
  %11385 = load i64, i64* %RBP.i1576
  %11386 = sub i64 %11385, 4
  %11387 = load i64, i64* %PC.i1575
  %11388 = add i64 %11387, 7
  store i64 %11388, i64* %PC.i1575
  %11389 = inttoptr i64 %11386 to i32*
  store i32 0, i32* %11389
  store %struct.Memory* %loadMem_4af17c, %struct.Memory** %MEMORY
  br label %block_.L_4af183

block_.L_4af183:                                  ; preds = %block_.L_4af378, %block_.L_4af17c
  %loadMem_4af183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11391 = getelementptr inbounds %struct.GPR, %struct.GPR* %11390, i32 0, i32 33
  %11392 = getelementptr inbounds %struct.Reg, %struct.Reg* %11391, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %11392 to i64*
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11394 = getelementptr inbounds %struct.GPR, %struct.GPR* %11393, i32 0, i32 1
  %11395 = getelementptr inbounds %struct.Reg, %struct.Reg* %11394, i32 0, i32 0
  %RAX.i1573 = bitcast %union.anon* %11395 to i64*
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11397 = getelementptr inbounds %struct.GPR, %struct.GPR* %11396, i32 0, i32 15
  %11398 = getelementptr inbounds %struct.Reg, %struct.Reg* %11397, i32 0, i32 0
  %RBP.i1574 = bitcast %union.anon* %11398 to i64*
  %11399 = load i64, i64* %RBP.i1574
  %11400 = sub i64 %11399, 4
  %11401 = load i64, i64* %PC.i1572
  %11402 = add i64 %11401, 3
  store i64 %11402, i64* %PC.i1572
  %11403 = inttoptr i64 %11400 to i32*
  %11404 = load i32, i32* %11403
  %11405 = zext i32 %11404 to i64
  store i64 %11405, i64* %RAX.i1573, align 8
  store %struct.Memory* %loadMem_4af183, %struct.Memory** %MEMORY
  %loadMem_4af186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11407 = getelementptr inbounds %struct.GPR, %struct.GPR* %11406, i32 0, i32 33
  %11408 = getelementptr inbounds %struct.Reg, %struct.Reg* %11407, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %11408 to i64*
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11410 = getelementptr inbounds %struct.GPR, %struct.GPR* %11409, i32 0, i32 1
  %11411 = getelementptr inbounds %struct.Reg, %struct.Reg* %11410, i32 0, i32 0
  %EAX.i1571 = bitcast %union.anon* %11411 to i32*
  %11412 = load i32, i32* %EAX.i1571
  %11413 = zext i32 %11412 to i64
  %11414 = load i64, i64* %PC.i1570
  %11415 = add i64 %11414, 7
  store i64 %11415, i64* %PC.i1570
  %11416 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %11417 = sub i32 %11412, %11416
  %11418 = icmp ult i32 %11412, %11416
  %11419 = zext i1 %11418 to i8
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11419, i8* %11420, align 1
  %11421 = and i32 %11417, 255
  %11422 = call i32 @llvm.ctpop.i32(i32 %11421)
  %11423 = trunc i32 %11422 to i8
  %11424 = and i8 %11423, 1
  %11425 = xor i8 %11424, 1
  %11426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11425, i8* %11426, align 1
  %11427 = xor i32 %11416, %11412
  %11428 = xor i32 %11427, %11417
  %11429 = lshr i32 %11428, 4
  %11430 = trunc i32 %11429 to i8
  %11431 = and i8 %11430, 1
  %11432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11431, i8* %11432, align 1
  %11433 = icmp eq i32 %11417, 0
  %11434 = zext i1 %11433 to i8
  %11435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11434, i8* %11435, align 1
  %11436 = lshr i32 %11417, 31
  %11437 = trunc i32 %11436 to i8
  %11438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11437, i8* %11438, align 1
  %11439 = lshr i32 %11412, 31
  %11440 = lshr i32 %11416, 31
  %11441 = xor i32 %11440, %11439
  %11442 = xor i32 %11436, %11439
  %11443 = add i32 %11442, %11441
  %11444 = icmp eq i32 %11443, 2
  %11445 = zext i1 %11444 to i8
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11445, i8* %11446, align 1
  store %struct.Memory* %loadMem_4af186, %struct.Memory** %MEMORY
  %loadMem_4af18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11448 = getelementptr inbounds %struct.GPR, %struct.GPR* %11447, i32 0, i32 33
  %11449 = getelementptr inbounds %struct.Reg, %struct.Reg* %11448, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %11449 to i64*
  %11450 = load i64, i64* %PC.i1569
  %11451 = add i64 %11450, 505
  %11452 = load i64, i64* %PC.i1569
  %11453 = add i64 %11452, 6
  %11454 = load i64, i64* %PC.i1569
  %11455 = add i64 %11454, 6
  store i64 %11455, i64* %PC.i1569
  %11456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11457 = load i8, i8* %11456, align 1
  %11458 = icmp ne i8 %11457, 0
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11460 = load i8, i8* %11459, align 1
  %11461 = icmp ne i8 %11460, 0
  %11462 = xor i1 %11458, %11461
  %11463 = xor i1 %11462, true
  %11464 = zext i1 %11463 to i8
  store i8 %11464, i8* %BRANCH_TAKEN, align 1
  %11465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11466 = select i1 %11462, i64 %11453, i64 %11451
  store i64 %11466, i64* %11465, align 8
  store %struct.Memory* %loadMem_4af18d, %struct.Memory** %MEMORY
  %loadBr_4af18d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af18d = icmp eq i8 %loadBr_4af18d, 1
  br i1 %cmpBr_4af18d, label %block_.L_4af386, label %block_4af193

block_4af193:                                     ; preds = %block_.L_4af183
  %loadMem_4af193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11468 = getelementptr inbounds %struct.GPR, %struct.GPR* %11467, i32 0, i32 33
  %11469 = getelementptr inbounds %struct.Reg, %struct.Reg* %11468, i32 0, i32 0
  %PC.i1567 = bitcast %union.anon* %11469 to i64*
  %11470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11471 = getelementptr inbounds %struct.GPR, %struct.GPR* %11470, i32 0, i32 15
  %11472 = getelementptr inbounds %struct.Reg, %struct.Reg* %11471, i32 0, i32 0
  %RBP.i1568 = bitcast %union.anon* %11472 to i64*
  %11473 = load i64, i64* %RBP.i1568
  %11474 = sub i64 %11473, 8
  %11475 = load i64, i64* %PC.i1567
  %11476 = add i64 %11475, 7
  store i64 %11476, i64* %PC.i1567
  %11477 = inttoptr i64 %11474 to i32*
  store i32 0, i32* %11477
  store %struct.Memory* %loadMem_4af193, %struct.Memory** %MEMORY
  br label %block_.L_4af19a

block_.L_4af19a:                                  ; preds = %block_.L_4af365, %block_4af193
  %loadMem_4af19a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11479 = getelementptr inbounds %struct.GPR, %struct.GPR* %11478, i32 0, i32 33
  %11480 = getelementptr inbounds %struct.Reg, %struct.Reg* %11479, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %11480 to i64*
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11482 = getelementptr inbounds %struct.GPR, %struct.GPR* %11481, i32 0, i32 1
  %11483 = getelementptr inbounds %struct.Reg, %struct.Reg* %11482, i32 0, i32 0
  %RAX.i1565 = bitcast %union.anon* %11483 to i64*
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11485 = getelementptr inbounds %struct.GPR, %struct.GPR* %11484, i32 0, i32 15
  %11486 = getelementptr inbounds %struct.Reg, %struct.Reg* %11485, i32 0, i32 0
  %RBP.i1566 = bitcast %union.anon* %11486 to i64*
  %11487 = load i64, i64* %RBP.i1566
  %11488 = sub i64 %11487, 8
  %11489 = load i64, i64* %PC.i1564
  %11490 = add i64 %11489, 3
  store i64 %11490, i64* %PC.i1564
  %11491 = inttoptr i64 %11488 to i32*
  %11492 = load i32, i32* %11491
  %11493 = zext i32 %11492 to i64
  store i64 %11493, i64* %RAX.i1565, align 8
  store %struct.Memory* %loadMem_4af19a, %struct.Memory** %MEMORY
  %loadMem_4af19d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11495 = getelementptr inbounds %struct.GPR, %struct.GPR* %11494, i32 0, i32 33
  %11496 = getelementptr inbounds %struct.Reg, %struct.Reg* %11495, i32 0, i32 0
  %PC.i1562 = bitcast %union.anon* %11496 to i64*
  %11497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11498 = getelementptr inbounds %struct.GPR, %struct.GPR* %11497, i32 0, i32 1
  %11499 = getelementptr inbounds %struct.Reg, %struct.Reg* %11498, i32 0, i32 0
  %EAX.i1563 = bitcast %union.anon* %11499 to i32*
  %11500 = load i32, i32* %EAX.i1563
  %11501 = zext i32 %11500 to i64
  %11502 = load i64, i64* %PC.i1562
  %11503 = add i64 %11502, 7
  store i64 %11503, i64* %PC.i1562
  %11504 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %11505 = sub i32 %11500, %11504
  %11506 = icmp ult i32 %11500, %11504
  %11507 = zext i1 %11506 to i8
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11507, i8* %11508, align 1
  %11509 = and i32 %11505, 255
  %11510 = call i32 @llvm.ctpop.i32(i32 %11509)
  %11511 = trunc i32 %11510 to i8
  %11512 = and i8 %11511, 1
  %11513 = xor i8 %11512, 1
  %11514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11513, i8* %11514, align 1
  %11515 = xor i32 %11504, %11500
  %11516 = xor i32 %11515, %11505
  %11517 = lshr i32 %11516, 4
  %11518 = trunc i32 %11517 to i8
  %11519 = and i8 %11518, 1
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11519, i8* %11520, align 1
  %11521 = icmp eq i32 %11505, 0
  %11522 = zext i1 %11521 to i8
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11522, i8* %11523, align 1
  %11524 = lshr i32 %11505, 31
  %11525 = trunc i32 %11524 to i8
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11525, i8* %11526, align 1
  %11527 = lshr i32 %11500, 31
  %11528 = lshr i32 %11504, 31
  %11529 = xor i32 %11528, %11527
  %11530 = xor i32 %11524, %11527
  %11531 = add i32 %11530, %11529
  %11532 = icmp eq i32 %11531, 2
  %11533 = zext i1 %11532 to i8
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11533, i8* %11534, align 1
  store %struct.Memory* %loadMem_4af19d, %struct.Memory** %MEMORY
  %loadMem_4af1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11536 = getelementptr inbounds %struct.GPR, %struct.GPR* %11535, i32 0, i32 33
  %11537 = getelementptr inbounds %struct.Reg, %struct.Reg* %11536, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %11537 to i64*
  %11538 = load i64, i64* %PC.i1561
  %11539 = add i64 %11538, 463
  %11540 = load i64, i64* %PC.i1561
  %11541 = add i64 %11540, 6
  %11542 = load i64, i64* %PC.i1561
  %11543 = add i64 %11542, 6
  store i64 %11543, i64* %PC.i1561
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11545 = load i8, i8* %11544, align 1
  %11546 = icmp ne i8 %11545, 0
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11548 = load i8, i8* %11547, align 1
  %11549 = icmp ne i8 %11548, 0
  %11550 = xor i1 %11546, %11549
  %11551 = xor i1 %11550, true
  %11552 = zext i1 %11551 to i8
  store i8 %11552, i8* %BRANCH_TAKEN, align 1
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11554 = select i1 %11550, i64 %11541, i64 %11539
  store i64 %11554, i64* %11553, align 8
  store %struct.Memory* %loadMem_4af1a4, %struct.Memory** %MEMORY
  %loadBr_4af1a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af1a4 = icmp eq i8 %loadBr_4af1a4, 1
  br i1 %cmpBr_4af1a4, label %block_.L_4af373, label %block_4af1aa

block_4af1aa:                                     ; preds = %block_.L_4af19a
  %loadMem_4af1aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11556 = getelementptr inbounds %struct.GPR, %struct.GPR* %11555, i32 0, i32 33
  %11557 = getelementptr inbounds %struct.Reg, %struct.Reg* %11556, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %11557 to i64*
  %11558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11559 = getelementptr inbounds %struct.GPR, %struct.GPR* %11558, i32 0, i32 15
  %11560 = getelementptr inbounds %struct.Reg, %struct.Reg* %11559, i32 0, i32 0
  %RBP.i1560 = bitcast %union.anon* %11560 to i64*
  %11561 = load i64, i64* %RBP.i1560
  %11562 = sub i64 %11561, 12
  %11563 = load i64, i64* %PC.i1559
  %11564 = add i64 %11563, 7
  store i64 %11564, i64* %PC.i1559
  %11565 = inttoptr i64 %11562 to i32*
  store i32 0, i32* %11565
  store %struct.Memory* %loadMem_4af1aa, %struct.Memory** %MEMORY
  br label %block_.L_4af1b1

block_.L_4af1b1:                                  ; preds = %block_4af1d3, %block_4af1aa
  %loadMem_4af1b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11567 = getelementptr inbounds %struct.GPR, %struct.GPR* %11566, i32 0, i32 33
  %11568 = getelementptr inbounds %struct.Reg, %struct.Reg* %11567, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %11568 to i64*
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11570 = getelementptr inbounds %struct.GPR, %struct.GPR* %11569, i32 0, i32 1
  %11571 = getelementptr inbounds %struct.Reg, %struct.Reg* %11570, i32 0, i32 0
  %RAX.i1557 = bitcast %union.anon* %11571 to i64*
  %11572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11573 = getelementptr inbounds %struct.GPR, %struct.GPR* %11572, i32 0, i32 15
  %11574 = getelementptr inbounds %struct.Reg, %struct.Reg* %11573, i32 0, i32 0
  %RBP.i1558 = bitcast %union.anon* %11574 to i64*
  %11575 = load i64, i64* %RBP.i1558
  %11576 = sub i64 %11575, 12
  %11577 = load i64, i64* %PC.i1556
  %11578 = add i64 %11577, 3
  store i64 %11578, i64* %PC.i1556
  %11579 = inttoptr i64 %11576 to i32*
  %11580 = load i32, i32* %11579
  %11581 = zext i32 %11580 to i64
  store i64 %11581, i64* %RAX.i1557, align 8
  store %struct.Memory* %loadMem_4af1b1, %struct.Memory** %MEMORY
  %loadMem_4af1b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11583 = getelementptr inbounds %struct.GPR, %struct.GPR* %11582, i32 0, i32 33
  %11584 = getelementptr inbounds %struct.Reg, %struct.Reg* %11583, i32 0, i32 0
  %PC.i1554 = bitcast %union.anon* %11584 to i64*
  %11585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11586 = getelementptr inbounds %struct.GPR, %struct.GPR* %11585, i32 0, i32 5
  %11587 = getelementptr inbounds %struct.Reg, %struct.Reg* %11586, i32 0, i32 0
  %RCX.i1555 = bitcast %union.anon* %11587 to i64*
  %11588 = load i64, i64* %PC.i1554
  %11589 = add i64 %11588, 8
  store i64 %11589, i64* %PC.i1554
  %11590 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11590, i64* %RCX.i1555, align 8
  store %struct.Memory* %loadMem_4af1b4, %struct.Memory** %MEMORY
  %loadMem_4af1bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11592 = getelementptr inbounds %struct.GPR, %struct.GPR* %11591, i32 0, i32 33
  %11593 = getelementptr inbounds %struct.Reg, %struct.Reg* %11592, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %11593 to i64*
  %11594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11595 = getelementptr inbounds %struct.GPR, %struct.GPR* %11594, i32 0, i32 5
  %11596 = getelementptr inbounds %struct.Reg, %struct.Reg* %11595, i32 0, i32 0
  %RCX.i1552 = bitcast %union.anon* %11596 to i64*
  %11597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11598 = getelementptr inbounds %struct.GPR, %struct.GPR* %11597, i32 0, i32 7
  %11599 = getelementptr inbounds %struct.Reg, %struct.Reg* %11598, i32 0, i32 0
  %RDX.i1553 = bitcast %union.anon* %11599 to i64*
  %11600 = load i64, i64* %RCX.i1552
  %11601 = add i64 %11600, 60
  %11602 = load i64, i64* %PC.i1551
  %11603 = add i64 %11602, 3
  store i64 %11603, i64* %PC.i1551
  %11604 = inttoptr i64 %11601 to i32*
  %11605 = load i32, i32* %11604
  %11606 = zext i32 %11605 to i64
  store i64 %11606, i64* %RDX.i1553, align 8
  store %struct.Memory* %loadMem_4af1bc, %struct.Memory** %MEMORY
  %loadMem_4af1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11608 = getelementptr inbounds %struct.GPR, %struct.GPR* %11607, i32 0, i32 33
  %11609 = getelementptr inbounds %struct.Reg, %struct.Reg* %11608, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %11609 to i64*
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11611 = getelementptr inbounds %struct.GPR, %struct.GPR* %11610, i32 0, i32 5
  %11612 = getelementptr inbounds %struct.Reg, %struct.Reg* %11611, i32 0, i32 0
  %RCX.i1550 = bitcast %union.anon* %11612 to i64*
  %11613 = load i64, i64* %PC.i1549
  %11614 = add i64 %11613, 8
  store i64 %11614, i64* %PC.i1549
  %11615 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11615, i64* %RCX.i1550, align 8
  store %struct.Memory* %loadMem_4af1bf, %struct.Memory** %MEMORY
  %loadMem_4af1c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11617 = getelementptr inbounds %struct.GPR, %struct.GPR* %11616, i32 0, i32 33
  %11618 = getelementptr inbounds %struct.Reg, %struct.Reg* %11617, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %11618 to i64*
  %11619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11620 = getelementptr inbounds %struct.GPR, %struct.GPR* %11619, i32 0, i32 5
  %11621 = getelementptr inbounds %struct.Reg, %struct.Reg* %11620, i32 0, i32 0
  %RCX.i1547 = bitcast %union.anon* %11621 to i64*
  %11622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11623 = getelementptr inbounds %struct.GPR, %struct.GPR* %11622, i32 0, i32 7
  %11624 = getelementptr inbounds %struct.Reg, %struct.Reg* %11623, i32 0, i32 0
  %RDX.i1548 = bitcast %union.anon* %11624 to i64*
  %11625 = load i64, i64* %RDX.i1548
  %11626 = load i64, i64* %RCX.i1547
  %11627 = add i64 %11626, 52
  %11628 = load i64, i64* %PC.i1546
  %11629 = add i64 %11628, 4
  store i64 %11629, i64* %PC.i1546
  %11630 = inttoptr i64 %11627 to i32*
  %11631 = load i32, i32* %11630
  %11632 = shl i64 %11625, 32
  %11633 = ashr exact i64 %11632, 32
  %11634 = sext i32 %11631 to i64
  %11635 = mul i64 %11634, %11633
  %11636 = trunc i64 %11635 to i32
  %11637 = and i64 %11635, 4294967295
  store i64 %11637, i64* %RDX.i1548, align 8
  %11638 = shl i64 %11635, 32
  %11639 = ashr exact i64 %11638, 32
  %11640 = icmp ne i64 %11639, %11635
  %11641 = zext i1 %11640 to i8
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11641, i8* %11642, align 1
  %11643 = and i32 %11636, 255
  %11644 = call i32 @llvm.ctpop.i32(i32 %11643)
  %11645 = trunc i32 %11644 to i8
  %11646 = and i8 %11645, 1
  %11647 = xor i8 %11646, 1
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11647, i8* %11648, align 1
  %11649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11649, align 1
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11650, align 1
  %11651 = lshr i32 %11636, 31
  %11652 = trunc i32 %11651 to i8
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11652, i8* %11653, align 1
  %11654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11641, i8* %11654, align 1
  store %struct.Memory* %loadMem_4af1c7, %struct.Memory** %MEMORY
  %loadMem_4af1cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11656 = getelementptr inbounds %struct.GPR, %struct.GPR* %11655, i32 0, i32 33
  %11657 = getelementptr inbounds %struct.Reg, %struct.Reg* %11656, i32 0, i32 0
  %PC.i1543 = bitcast %union.anon* %11657 to i64*
  %11658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11659 = getelementptr inbounds %struct.GPR, %struct.GPR* %11658, i32 0, i32 1
  %11660 = getelementptr inbounds %struct.Reg, %struct.Reg* %11659, i32 0, i32 0
  %EAX.i1544 = bitcast %union.anon* %11660 to i32*
  %11661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11662 = getelementptr inbounds %struct.GPR, %struct.GPR* %11661, i32 0, i32 7
  %11663 = getelementptr inbounds %struct.Reg, %struct.Reg* %11662, i32 0, i32 0
  %EDX.i1545 = bitcast %union.anon* %11663 to i32*
  %11664 = load i32, i32* %EAX.i1544
  %11665 = zext i32 %11664 to i64
  %11666 = load i32, i32* %EDX.i1545
  %11667 = zext i32 %11666 to i64
  %11668 = load i64, i64* %PC.i1543
  %11669 = add i64 %11668, 2
  store i64 %11669, i64* %PC.i1543
  %11670 = sub i32 %11664, %11666
  %11671 = icmp ult i32 %11664, %11666
  %11672 = zext i1 %11671 to i8
  %11673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11672, i8* %11673, align 1
  %11674 = and i32 %11670, 255
  %11675 = call i32 @llvm.ctpop.i32(i32 %11674)
  %11676 = trunc i32 %11675 to i8
  %11677 = and i8 %11676, 1
  %11678 = xor i8 %11677, 1
  %11679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11678, i8* %11679, align 1
  %11680 = xor i64 %11667, %11665
  %11681 = trunc i64 %11680 to i32
  %11682 = xor i32 %11681, %11670
  %11683 = lshr i32 %11682, 4
  %11684 = trunc i32 %11683 to i8
  %11685 = and i8 %11684, 1
  %11686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11685, i8* %11686, align 1
  %11687 = icmp eq i32 %11670, 0
  %11688 = zext i1 %11687 to i8
  %11689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11688, i8* %11689, align 1
  %11690 = lshr i32 %11670, 31
  %11691 = trunc i32 %11690 to i8
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11691, i8* %11692, align 1
  %11693 = lshr i32 %11664, 31
  %11694 = lshr i32 %11666, 31
  %11695 = xor i32 %11694, %11693
  %11696 = xor i32 %11690, %11693
  %11697 = add i32 %11696, %11695
  %11698 = icmp eq i32 %11697, 2
  %11699 = zext i1 %11698 to i8
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11699, i8* %11700, align 1
  store %struct.Memory* %loadMem_4af1cb, %struct.Memory** %MEMORY
  %loadMem_4af1cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11702 = getelementptr inbounds %struct.GPR, %struct.GPR* %11701, i32 0, i32 33
  %11703 = getelementptr inbounds %struct.Reg, %struct.Reg* %11702, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %11703 to i64*
  %11704 = load i64, i64* %PC.i1542
  %11705 = add i64 %11704, 144
  %11706 = load i64, i64* %PC.i1542
  %11707 = add i64 %11706, 6
  %11708 = load i64, i64* %PC.i1542
  %11709 = add i64 %11708, 6
  store i64 %11709, i64* %PC.i1542
  %11710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11711 = load i8, i8* %11710, align 1
  %11712 = icmp ne i8 %11711, 0
  %11713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11714 = load i8, i8* %11713, align 1
  %11715 = icmp ne i8 %11714, 0
  %11716 = xor i1 %11712, %11715
  %11717 = xor i1 %11716, true
  %11718 = zext i1 %11717 to i8
  store i8 %11718, i8* %BRANCH_TAKEN, align 1
  %11719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11720 = select i1 %11716, i64 %11707, i64 %11705
  store i64 %11720, i64* %11719, align 8
  store %struct.Memory* %loadMem_4af1cd, %struct.Memory** %MEMORY
  %loadBr_4af1cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af1cd = icmp eq i8 %loadBr_4af1cd, 1
  br i1 %cmpBr_4af1cd, label %block_.L_4af25d, label %block_4af1d3

block_4af1d3:                                     ; preds = %block_.L_4af1b1
  %loadMem_4af1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11722 = getelementptr inbounds %struct.GPR, %struct.GPR* %11721, i32 0, i32 33
  %11723 = getelementptr inbounds %struct.Reg, %struct.Reg* %11722, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %11723 to i64*
  %11724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11725 = getelementptr inbounds %struct.GPR, %struct.GPR* %11724, i32 0, i32 1
  %11726 = getelementptr inbounds %struct.Reg, %struct.Reg* %11725, i32 0, i32 0
  %RAX.i1541 = bitcast %union.anon* %11726 to i64*
  %11727 = load i64, i64* %PC.i1540
  %11728 = add i64 %11727, 8
  store i64 %11728, i64* %PC.i1540
  %11729 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11729, i64* %RAX.i1541, align 8
  store %struct.Memory* %loadMem_4af1d3, %struct.Memory** %MEMORY
  %loadMem_4af1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %11730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11731 = getelementptr inbounds %struct.GPR, %struct.GPR* %11730, i32 0, i32 33
  %11732 = getelementptr inbounds %struct.Reg, %struct.Reg* %11731, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %11732 to i64*
  %11733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11734 = getelementptr inbounds %struct.GPR, %struct.GPR* %11733, i32 0, i32 5
  %11735 = getelementptr inbounds %struct.Reg, %struct.Reg* %11734, i32 0, i32 0
  %RCX.i1538 = bitcast %union.anon* %11735 to i64*
  %11736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11737 = getelementptr inbounds %struct.GPR, %struct.GPR* %11736, i32 0, i32 15
  %11738 = getelementptr inbounds %struct.Reg, %struct.Reg* %11737, i32 0, i32 0
  %RBP.i1539 = bitcast %union.anon* %11738 to i64*
  %11739 = load i64, i64* %RBP.i1539
  %11740 = sub i64 %11739, 4
  %11741 = load i64, i64* %PC.i1537
  %11742 = add i64 %11741, 4
  store i64 %11742, i64* %PC.i1537
  %11743 = inttoptr i64 %11740 to i32*
  %11744 = load i32, i32* %11743
  %11745 = sext i32 %11744 to i64
  store i64 %11745, i64* %RCX.i1538, align 8
  store %struct.Memory* %loadMem_4af1db, %struct.Memory** %MEMORY
  %loadMem_4af1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %11746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11747 = getelementptr inbounds %struct.GPR, %struct.GPR* %11746, i32 0, i32 33
  %11748 = getelementptr inbounds %struct.Reg, %struct.Reg* %11747, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %11748 to i64*
  %11749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11750 = getelementptr inbounds %struct.GPR, %struct.GPR* %11749, i32 0, i32 1
  %11751 = getelementptr inbounds %struct.Reg, %struct.Reg* %11750, i32 0, i32 0
  %RAX.i1535 = bitcast %union.anon* %11751 to i64*
  %11752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11753 = getelementptr inbounds %struct.GPR, %struct.GPR* %11752, i32 0, i32 5
  %11754 = getelementptr inbounds %struct.Reg, %struct.Reg* %11753, i32 0, i32 0
  %RCX.i1536 = bitcast %union.anon* %11754 to i64*
  %11755 = load i64, i64* %RAX.i1535
  %11756 = load i64, i64* %RCX.i1536
  %11757 = mul i64 %11756, 8
  %11758 = add i64 %11757, %11755
  %11759 = load i64, i64* %PC.i1534
  %11760 = add i64 %11759, 4
  store i64 %11760, i64* %PC.i1534
  %11761 = inttoptr i64 %11758 to i64*
  %11762 = load i64, i64* %11761
  store i64 %11762, i64* %RAX.i1535, align 8
  store %struct.Memory* %loadMem_4af1df, %struct.Memory** %MEMORY
  %loadMem_4af1e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11764 = getelementptr inbounds %struct.GPR, %struct.GPR* %11763, i32 0, i32 33
  %11765 = getelementptr inbounds %struct.Reg, %struct.Reg* %11764, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %11765 to i64*
  %11766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11767 = getelementptr inbounds %struct.GPR, %struct.GPR* %11766, i32 0, i32 1
  %11768 = getelementptr inbounds %struct.Reg, %struct.Reg* %11767, i32 0, i32 0
  %RAX.i1533 = bitcast %union.anon* %11768 to i64*
  %11769 = load i64, i64* %RAX.i1533
  %11770 = add i64 %11769, 6432
  %11771 = load i64, i64* %PC.i1532
  %11772 = add i64 %11771, 7
  store i64 %11772, i64* %PC.i1532
  %11773 = inttoptr i64 %11770 to i64*
  %11774 = load i64, i64* %11773
  store i64 %11774, i64* %RAX.i1533, align 8
  store %struct.Memory* %loadMem_4af1e3, %struct.Memory** %MEMORY
  %loadMem_4af1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %11775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11776 = getelementptr inbounds %struct.GPR, %struct.GPR* %11775, i32 0, i32 33
  %11777 = getelementptr inbounds %struct.Reg, %struct.Reg* %11776, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %11777 to i64*
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11779 = getelementptr inbounds %struct.GPR, %struct.GPR* %11778, i32 0, i32 5
  %11780 = getelementptr inbounds %struct.Reg, %struct.Reg* %11779, i32 0, i32 0
  %RCX.i1530 = bitcast %union.anon* %11780 to i64*
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11782 = getelementptr inbounds %struct.GPR, %struct.GPR* %11781, i32 0, i32 15
  %11783 = getelementptr inbounds %struct.Reg, %struct.Reg* %11782, i32 0, i32 0
  %RBP.i1531 = bitcast %union.anon* %11783 to i64*
  %11784 = load i64, i64* %RBP.i1531
  %11785 = sub i64 %11784, 12
  %11786 = load i64, i64* %PC.i1529
  %11787 = add i64 %11786, 4
  store i64 %11787, i64* %PC.i1529
  %11788 = inttoptr i64 %11785 to i32*
  %11789 = load i32, i32* %11788
  %11790 = sext i32 %11789 to i64
  store i64 %11790, i64* %RCX.i1530, align 8
  store %struct.Memory* %loadMem_4af1ea, %struct.Memory** %MEMORY
  %loadMem_4af1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11792 = getelementptr inbounds %struct.GPR, %struct.GPR* %11791, i32 0, i32 33
  %11793 = getelementptr inbounds %struct.Reg, %struct.Reg* %11792, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %11793 to i64*
  %11794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11795 = getelementptr inbounds %struct.GPR, %struct.GPR* %11794, i32 0, i32 7
  %11796 = getelementptr inbounds %struct.Reg, %struct.Reg* %11795, i32 0, i32 0
  %DX.i1526 = bitcast %union.anon* %11796 to i16*
  %11797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11798 = getelementptr inbounds %struct.GPR, %struct.GPR* %11797, i32 0, i32 1
  %11799 = getelementptr inbounds %struct.Reg, %struct.Reg* %11798, i32 0, i32 0
  %RAX.i1527 = bitcast %union.anon* %11799 to i64*
  %11800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11801 = getelementptr inbounds %struct.GPR, %struct.GPR* %11800, i32 0, i32 5
  %11802 = getelementptr inbounds %struct.Reg, %struct.Reg* %11801, i32 0, i32 0
  %RCX.i1528 = bitcast %union.anon* %11802 to i64*
  %11803 = load i64, i64* %RAX.i1527
  %11804 = load i64, i64* %RCX.i1528
  %11805 = mul i64 %11804, 2
  %11806 = add i64 %11805, %11803
  %11807 = load i64, i64* %PC.i1525
  %11808 = add i64 %11807, 4
  store i64 %11808, i64* %PC.i1525
  %11809 = inttoptr i64 %11806 to i16*
  %11810 = load i16, i16* %11809
  store i16 %11810, i16* %DX.i1526, align 2
  store %struct.Memory* %loadMem_4af1ee, %struct.Memory** %MEMORY
  %loadMem_4af1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11812 = getelementptr inbounds %struct.GPR, %struct.GPR* %11811, i32 0, i32 33
  %11813 = getelementptr inbounds %struct.Reg, %struct.Reg* %11812, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %11813 to i64*
  %11814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11815 = getelementptr inbounds %struct.GPR, %struct.GPR* %11814, i32 0, i32 1
  %11816 = getelementptr inbounds %struct.Reg, %struct.Reg* %11815, i32 0, i32 0
  %RAX.i1524 = bitcast %union.anon* %11816 to i64*
  %11817 = load i64, i64* %PC.i1523
  %11818 = add i64 %11817, 8
  store i64 %11818, i64* %PC.i1523
  %11819 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11819, i64* %RAX.i1524, align 8
  store %struct.Memory* %loadMem_4af1f2, %struct.Memory** %MEMORY
  %loadMem_4af1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11821 = getelementptr inbounds %struct.GPR, %struct.GPR* %11820, i32 0, i32 33
  %11822 = getelementptr inbounds %struct.Reg, %struct.Reg* %11821, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %11822 to i64*
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 5
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %RCX.i1521 = bitcast %union.anon* %11825 to i64*
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11827 = getelementptr inbounds %struct.GPR, %struct.GPR* %11826, i32 0, i32 15
  %11828 = getelementptr inbounds %struct.Reg, %struct.Reg* %11827, i32 0, i32 0
  %RBP.i1522 = bitcast %union.anon* %11828 to i64*
  %11829 = load i64, i64* %RBP.i1522
  %11830 = sub i64 %11829, 4
  %11831 = load i64, i64* %PC.i1520
  %11832 = add i64 %11831, 4
  store i64 %11832, i64* %PC.i1520
  %11833 = inttoptr i64 %11830 to i32*
  %11834 = load i32, i32* %11833
  %11835 = sext i32 %11834 to i64
  store i64 %11835, i64* %RCX.i1521, align 8
  store %struct.Memory* %loadMem_4af1fa, %struct.Memory** %MEMORY
  %loadMem_4af1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11837 = getelementptr inbounds %struct.GPR, %struct.GPR* %11836, i32 0, i32 33
  %11838 = getelementptr inbounds %struct.Reg, %struct.Reg* %11837, i32 0, i32 0
  %PC.i1517 = bitcast %union.anon* %11838 to i64*
  %11839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11840 = getelementptr inbounds %struct.GPR, %struct.GPR* %11839, i32 0, i32 1
  %11841 = getelementptr inbounds %struct.Reg, %struct.Reg* %11840, i32 0, i32 0
  %RAX.i1518 = bitcast %union.anon* %11841 to i64*
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11843 = getelementptr inbounds %struct.GPR, %struct.GPR* %11842, i32 0, i32 5
  %11844 = getelementptr inbounds %struct.Reg, %struct.Reg* %11843, i32 0, i32 0
  %RCX.i1519 = bitcast %union.anon* %11844 to i64*
  %11845 = load i64, i64* %RAX.i1518
  %11846 = load i64, i64* %RCX.i1519
  %11847 = mul i64 %11846, 8
  %11848 = add i64 %11847, %11845
  %11849 = load i64, i64* %PC.i1517
  %11850 = add i64 %11849, 4
  store i64 %11850, i64* %PC.i1517
  %11851 = inttoptr i64 %11848 to i64*
  %11852 = load i64, i64* %11851
  store i64 %11852, i64* %RAX.i1518, align 8
  store %struct.Memory* %loadMem_4af1fe, %struct.Memory** %MEMORY
  %loadMem_4af202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11854 = getelementptr inbounds %struct.GPR, %struct.GPR* %11853, i32 0, i32 33
  %11855 = getelementptr inbounds %struct.Reg, %struct.Reg* %11854, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %11855 to i64*
  %11856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11857 = getelementptr inbounds %struct.GPR, %struct.GPR* %11856, i32 0, i32 1
  %11858 = getelementptr inbounds %struct.Reg, %struct.Reg* %11857, i32 0, i32 0
  %RAX.i1516 = bitcast %union.anon* %11858 to i64*
  %11859 = load i64, i64* %RAX.i1516
  %11860 = add i64 %11859, 6440
  %11861 = load i64, i64* %PC.i1515
  %11862 = add i64 %11861, 7
  store i64 %11862, i64* %PC.i1515
  %11863 = inttoptr i64 %11860 to i64*
  %11864 = load i64, i64* %11863
  store i64 %11864, i64* %RAX.i1516, align 8
  store %struct.Memory* %loadMem_4af202, %struct.Memory** %MEMORY
  %loadMem_4af209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11866 = getelementptr inbounds %struct.GPR, %struct.GPR* %11865, i32 0, i32 33
  %11867 = getelementptr inbounds %struct.Reg, %struct.Reg* %11866, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %11867 to i64*
  %11868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11869 = getelementptr inbounds %struct.GPR, %struct.GPR* %11868, i32 0, i32 5
  %11870 = getelementptr inbounds %struct.Reg, %struct.Reg* %11869, i32 0, i32 0
  %RCX.i1513 = bitcast %union.anon* %11870 to i64*
  %11871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11872 = getelementptr inbounds %struct.GPR, %struct.GPR* %11871, i32 0, i32 15
  %11873 = getelementptr inbounds %struct.Reg, %struct.Reg* %11872, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %11873 to i64*
  %11874 = load i64, i64* %RBP.i1514
  %11875 = sub i64 %11874, 12
  %11876 = load i64, i64* %PC.i1512
  %11877 = add i64 %11876, 4
  store i64 %11877, i64* %PC.i1512
  %11878 = inttoptr i64 %11875 to i32*
  %11879 = load i32, i32* %11878
  %11880 = sext i32 %11879 to i64
  store i64 %11880, i64* %RCX.i1513, align 8
  store %struct.Memory* %loadMem_4af209, %struct.Memory** %MEMORY
  %loadMem_4af20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11882 = getelementptr inbounds %struct.GPR, %struct.GPR* %11881, i32 0, i32 33
  %11883 = getelementptr inbounds %struct.Reg, %struct.Reg* %11882, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %11883 to i64*
  %11884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11885 = getelementptr inbounds %struct.GPR, %struct.GPR* %11884, i32 0, i32 7
  %11886 = getelementptr inbounds %struct.Reg, %struct.Reg* %11885, i32 0, i32 0
  %DX.i1509 = bitcast %union.anon* %11886 to i16*
  %11887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11888 = getelementptr inbounds %struct.GPR, %struct.GPR* %11887, i32 0, i32 1
  %11889 = getelementptr inbounds %struct.Reg, %struct.Reg* %11888, i32 0, i32 0
  %RAX.i1510 = bitcast %union.anon* %11889 to i64*
  %11890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11891 = getelementptr inbounds %struct.GPR, %struct.GPR* %11890, i32 0, i32 5
  %11892 = getelementptr inbounds %struct.Reg, %struct.Reg* %11891, i32 0, i32 0
  %RCX.i1511 = bitcast %union.anon* %11892 to i64*
  %11893 = load i64, i64* %RAX.i1510
  %11894 = load i64, i64* %RCX.i1511
  %11895 = mul i64 %11894, 2
  %11896 = add i64 %11895, %11893
  %11897 = load i16, i16* %DX.i1509
  %11898 = zext i16 %11897 to i64
  %11899 = load i64, i64* %PC.i1508
  %11900 = add i64 %11899, 4
  store i64 %11900, i64* %PC.i1508
  %11901 = inttoptr i64 %11896 to i16*
  store i16 %11897, i16* %11901
  store %struct.Memory* %loadMem_4af20d, %struct.Memory** %MEMORY
  %loadMem_4af211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11903 = getelementptr inbounds %struct.GPR, %struct.GPR* %11902, i32 0, i32 33
  %11904 = getelementptr inbounds %struct.Reg, %struct.Reg* %11903, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %11904 to i64*
  %11905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11906 = getelementptr inbounds %struct.GPR, %struct.GPR* %11905, i32 0, i32 1
  %11907 = getelementptr inbounds %struct.Reg, %struct.Reg* %11906, i32 0, i32 0
  %RAX.i1507 = bitcast %union.anon* %11907 to i64*
  %11908 = load i64, i64* %PC.i1506
  %11909 = add i64 %11908, 8
  store i64 %11909, i64* %PC.i1506
  %11910 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %11910, i64* %RAX.i1507, align 8
  store %struct.Memory* %loadMem_4af211, %struct.Memory** %MEMORY
  %loadMem_4af219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11912 = getelementptr inbounds %struct.GPR, %struct.GPR* %11911, i32 0, i32 33
  %11913 = getelementptr inbounds %struct.Reg, %struct.Reg* %11912, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %11913 to i64*
  %11914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11915 = getelementptr inbounds %struct.GPR, %struct.GPR* %11914, i32 0, i32 5
  %11916 = getelementptr inbounds %struct.Reg, %struct.Reg* %11915, i32 0, i32 0
  %RCX.i1504 = bitcast %union.anon* %11916 to i64*
  %11917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11918 = getelementptr inbounds %struct.GPR, %struct.GPR* %11917, i32 0, i32 15
  %11919 = getelementptr inbounds %struct.Reg, %struct.Reg* %11918, i32 0, i32 0
  %RBP.i1505 = bitcast %union.anon* %11919 to i64*
  %11920 = load i64, i64* %RBP.i1505
  %11921 = sub i64 %11920, 8
  %11922 = load i64, i64* %PC.i1503
  %11923 = add i64 %11922, 4
  store i64 %11923, i64* %PC.i1503
  %11924 = inttoptr i64 %11921 to i32*
  %11925 = load i32, i32* %11924
  %11926 = sext i32 %11925 to i64
  store i64 %11926, i64* %RCX.i1504, align 8
  store %struct.Memory* %loadMem_4af219, %struct.Memory** %MEMORY
  %loadMem_4af21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11928 = getelementptr inbounds %struct.GPR, %struct.GPR* %11927, i32 0, i32 33
  %11929 = getelementptr inbounds %struct.Reg, %struct.Reg* %11928, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %11929 to i64*
  %11930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11931 = getelementptr inbounds %struct.GPR, %struct.GPR* %11930, i32 0, i32 1
  %11932 = getelementptr inbounds %struct.Reg, %struct.Reg* %11931, i32 0, i32 0
  %RAX.i1501 = bitcast %union.anon* %11932 to i64*
  %11933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11934 = getelementptr inbounds %struct.GPR, %struct.GPR* %11933, i32 0, i32 5
  %11935 = getelementptr inbounds %struct.Reg, %struct.Reg* %11934, i32 0, i32 0
  %RCX.i1502 = bitcast %union.anon* %11935 to i64*
  %11936 = load i64, i64* %RAX.i1501
  %11937 = load i64, i64* %RCX.i1502
  %11938 = mul i64 %11937, 8
  %11939 = add i64 %11938, %11936
  %11940 = load i64, i64* %PC.i1500
  %11941 = add i64 %11940, 4
  store i64 %11941, i64* %PC.i1500
  %11942 = inttoptr i64 %11939 to i64*
  %11943 = load i64, i64* %11942
  store i64 %11943, i64* %RAX.i1501, align 8
  store %struct.Memory* %loadMem_4af21d, %struct.Memory** %MEMORY
  %loadMem_4af221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11945 = getelementptr inbounds %struct.GPR, %struct.GPR* %11944, i32 0, i32 33
  %11946 = getelementptr inbounds %struct.Reg, %struct.Reg* %11945, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %11946 to i64*
  %11947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11948 = getelementptr inbounds %struct.GPR, %struct.GPR* %11947, i32 0, i32 1
  %11949 = getelementptr inbounds %struct.Reg, %struct.Reg* %11948, i32 0, i32 0
  %RAX.i1499 = bitcast %union.anon* %11949 to i64*
  %11950 = load i64, i64* %RAX.i1499
  %11951 = add i64 %11950, 6432
  %11952 = load i64, i64* %PC.i1498
  %11953 = add i64 %11952, 7
  store i64 %11953, i64* %PC.i1498
  %11954 = inttoptr i64 %11951 to i64*
  %11955 = load i64, i64* %11954
  store i64 %11955, i64* %RAX.i1499, align 8
  store %struct.Memory* %loadMem_4af221, %struct.Memory** %MEMORY
  %loadMem_4af228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11957 = getelementptr inbounds %struct.GPR, %struct.GPR* %11956, i32 0, i32 33
  %11958 = getelementptr inbounds %struct.Reg, %struct.Reg* %11957, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %11958 to i64*
  %11959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11960 = getelementptr inbounds %struct.GPR, %struct.GPR* %11959, i32 0, i32 5
  %11961 = getelementptr inbounds %struct.Reg, %struct.Reg* %11960, i32 0, i32 0
  %RCX.i1496 = bitcast %union.anon* %11961 to i64*
  %11962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11963 = getelementptr inbounds %struct.GPR, %struct.GPR* %11962, i32 0, i32 15
  %11964 = getelementptr inbounds %struct.Reg, %struct.Reg* %11963, i32 0, i32 0
  %RBP.i1497 = bitcast %union.anon* %11964 to i64*
  %11965 = load i64, i64* %RBP.i1497
  %11966 = sub i64 %11965, 12
  %11967 = load i64, i64* %PC.i1495
  %11968 = add i64 %11967, 4
  store i64 %11968, i64* %PC.i1495
  %11969 = inttoptr i64 %11966 to i32*
  %11970 = load i32, i32* %11969
  %11971 = sext i32 %11970 to i64
  store i64 %11971, i64* %RCX.i1496, align 8
  store %struct.Memory* %loadMem_4af228, %struct.Memory** %MEMORY
  %loadMem_4af22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11973 = getelementptr inbounds %struct.GPR, %struct.GPR* %11972, i32 0, i32 33
  %11974 = getelementptr inbounds %struct.Reg, %struct.Reg* %11973, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %11974 to i64*
  %11975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11976 = getelementptr inbounds %struct.GPR, %struct.GPR* %11975, i32 0, i32 7
  %11977 = getelementptr inbounds %struct.Reg, %struct.Reg* %11976, i32 0, i32 0
  %DX.i1492 = bitcast %union.anon* %11977 to i16*
  %11978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11979 = getelementptr inbounds %struct.GPR, %struct.GPR* %11978, i32 0, i32 1
  %11980 = getelementptr inbounds %struct.Reg, %struct.Reg* %11979, i32 0, i32 0
  %RAX.i1493 = bitcast %union.anon* %11980 to i64*
  %11981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11982 = getelementptr inbounds %struct.GPR, %struct.GPR* %11981, i32 0, i32 5
  %11983 = getelementptr inbounds %struct.Reg, %struct.Reg* %11982, i32 0, i32 0
  %RCX.i1494 = bitcast %union.anon* %11983 to i64*
  %11984 = load i64, i64* %RAX.i1493
  %11985 = load i64, i64* %RCX.i1494
  %11986 = mul i64 %11985, 2
  %11987 = add i64 %11986, %11984
  %11988 = load i64, i64* %PC.i1491
  %11989 = add i64 %11988, 4
  store i64 %11989, i64* %PC.i1491
  %11990 = inttoptr i64 %11987 to i16*
  %11991 = load i16, i16* %11990
  store i16 %11991, i16* %DX.i1492, align 2
  store %struct.Memory* %loadMem_4af22c, %struct.Memory** %MEMORY
  %loadMem_4af230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11993 = getelementptr inbounds %struct.GPR, %struct.GPR* %11992, i32 0, i32 33
  %11994 = getelementptr inbounds %struct.Reg, %struct.Reg* %11993, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %11994 to i64*
  %11995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11996 = getelementptr inbounds %struct.GPR, %struct.GPR* %11995, i32 0, i32 1
  %11997 = getelementptr inbounds %struct.Reg, %struct.Reg* %11996, i32 0, i32 0
  %RAX.i1490 = bitcast %union.anon* %11997 to i64*
  %11998 = load i64, i64* %PC.i1489
  %11999 = add i64 %11998, 8
  store i64 %11999, i64* %PC.i1489
  %12000 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %12000, i64* %RAX.i1490, align 8
  store %struct.Memory* %loadMem_4af230, %struct.Memory** %MEMORY
  %loadMem_4af238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12002 = getelementptr inbounds %struct.GPR, %struct.GPR* %12001, i32 0, i32 33
  %12003 = getelementptr inbounds %struct.Reg, %struct.Reg* %12002, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %12003 to i64*
  %12004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12005 = getelementptr inbounds %struct.GPR, %struct.GPR* %12004, i32 0, i32 5
  %12006 = getelementptr inbounds %struct.Reg, %struct.Reg* %12005, i32 0, i32 0
  %RCX.i1487 = bitcast %union.anon* %12006 to i64*
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12008 = getelementptr inbounds %struct.GPR, %struct.GPR* %12007, i32 0, i32 15
  %12009 = getelementptr inbounds %struct.Reg, %struct.Reg* %12008, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %12009 to i64*
  %12010 = load i64, i64* %RBP.i1488
  %12011 = sub i64 %12010, 8
  %12012 = load i64, i64* %PC.i1486
  %12013 = add i64 %12012, 4
  store i64 %12013, i64* %PC.i1486
  %12014 = inttoptr i64 %12011 to i32*
  %12015 = load i32, i32* %12014
  %12016 = sext i32 %12015 to i64
  store i64 %12016, i64* %RCX.i1487, align 8
  store %struct.Memory* %loadMem_4af238, %struct.Memory** %MEMORY
  %loadMem_4af23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12018 = getelementptr inbounds %struct.GPR, %struct.GPR* %12017, i32 0, i32 33
  %12019 = getelementptr inbounds %struct.Reg, %struct.Reg* %12018, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %12019 to i64*
  %12020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12021 = getelementptr inbounds %struct.GPR, %struct.GPR* %12020, i32 0, i32 1
  %12022 = getelementptr inbounds %struct.Reg, %struct.Reg* %12021, i32 0, i32 0
  %RAX.i1484 = bitcast %union.anon* %12022 to i64*
  %12023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12024 = getelementptr inbounds %struct.GPR, %struct.GPR* %12023, i32 0, i32 5
  %12025 = getelementptr inbounds %struct.Reg, %struct.Reg* %12024, i32 0, i32 0
  %RCX.i1485 = bitcast %union.anon* %12025 to i64*
  %12026 = load i64, i64* %RAX.i1484
  %12027 = load i64, i64* %RCX.i1485
  %12028 = mul i64 %12027, 8
  %12029 = add i64 %12028, %12026
  %12030 = load i64, i64* %PC.i1483
  %12031 = add i64 %12030, 4
  store i64 %12031, i64* %PC.i1483
  %12032 = inttoptr i64 %12029 to i64*
  %12033 = load i64, i64* %12032
  store i64 %12033, i64* %RAX.i1484, align 8
  store %struct.Memory* %loadMem_4af23c, %struct.Memory** %MEMORY
  %loadMem_4af240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12035 = getelementptr inbounds %struct.GPR, %struct.GPR* %12034, i32 0, i32 33
  %12036 = getelementptr inbounds %struct.Reg, %struct.Reg* %12035, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %12036 to i64*
  %12037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12038 = getelementptr inbounds %struct.GPR, %struct.GPR* %12037, i32 0, i32 1
  %12039 = getelementptr inbounds %struct.Reg, %struct.Reg* %12038, i32 0, i32 0
  %RAX.i1482 = bitcast %union.anon* %12039 to i64*
  %12040 = load i64, i64* %RAX.i1482
  %12041 = add i64 %12040, 6440
  %12042 = load i64, i64* %PC.i1481
  %12043 = add i64 %12042, 7
  store i64 %12043, i64* %PC.i1481
  %12044 = inttoptr i64 %12041 to i64*
  %12045 = load i64, i64* %12044
  store i64 %12045, i64* %RAX.i1482, align 8
  store %struct.Memory* %loadMem_4af240, %struct.Memory** %MEMORY
  %loadMem_4af247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12047 = getelementptr inbounds %struct.GPR, %struct.GPR* %12046, i32 0, i32 33
  %12048 = getelementptr inbounds %struct.Reg, %struct.Reg* %12047, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %12048 to i64*
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12050 = getelementptr inbounds %struct.GPR, %struct.GPR* %12049, i32 0, i32 5
  %12051 = getelementptr inbounds %struct.Reg, %struct.Reg* %12050, i32 0, i32 0
  %RCX.i1479 = bitcast %union.anon* %12051 to i64*
  %12052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12053 = getelementptr inbounds %struct.GPR, %struct.GPR* %12052, i32 0, i32 15
  %12054 = getelementptr inbounds %struct.Reg, %struct.Reg* %12053, i32 0, i32 0
  %RBP.i1480 = bitcast %union.anon* %12054 to i64*
  %12055 = load i64, i64* %RBP.i1480
  %12056 = sub i64 %12055, 12
  %12057 = load i64, i64* %PC.i1478
  %12058 = add i64 %12057, 4
  store i64 %12058, i64* %PC.i1478
  %12059 = inttoptr i64 %12056 to i32*
  %12060 = load i32, i32* %12059
  %12061 = sext i32 %12060 to i64
  store i64 %12061, i64* %RCX.i1479, align 8
  store %struct.Memory* %loadMem_4af247, %struct.Memory** %MEMORY
  %loadMem_4af24b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12063 = getelementptr inbounds %struct.GPR, %struct.GPR* %12062, i32 0, i32 33
  %12064 = getelementptr inbounds %struct.Reg, %struct.Reg* %12063, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %12064 to i64*
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12066 = getelementptr inbounds %struct.GPR, %struct.GPR* %12065, i32 0, i32 7
  %12067 = getelementptr inbounds %struct.Reg, %struct.Reg* %12066, i32 0, i32 0
  %DX.i1475 = bitcast %union.anon* %12067 to i16*
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12069 = getelementptr inbounds %struct.GPR, %struct.GPR* %12068, i32 0, i32 1
  %12070 = getelementptr inbounds %struct.Reg, %struct.Reg* %12069, i32 0, i32 0
  %RAX.i1476 = bitcast %union.anon* %12070 to i64*
  %12071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12072 = getelementptr inbounds %struct.GPR, %struct.GPR* %12071, i32 0, i32 5
  %12073 = getelementptr inbounds %struct.Reg, %struct.Reg* %12072, i32 0, i32 0
  %RCX.i1477 = bitcast %union.anon* %12073 to i64*
  %12074 = load i64, i64* %RAX.i1476
  %12075 = load i64, i64* %RCX.i1477
  %12076 = mul i64 %12075, 2
  %12077 = add i64 %12076, %12074
  %12078 = load i16, i16* %DX.i1475
  %12079 = zext i16 %12078 to i64
  %12080 = load i64, i64* %PC.i1474
  %12081 = add i64 %12080, 4
  store i64 %12081, i64* %PC.i1474
  %12082 = inttoptr i64 %12077 to i16*
  store i16 %12078, i16* %12082
  store %struct.Memory* %loadMem_4af24b, %struct.Memory** %MEMORY
  %loadMem_4af24f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12084 = getelementptr inbounds %struct.GPR, %struct.GPR* %12083, i32 0, i32 33
  %12085 = getelementptr inbounds %struct.Reg, %struct.Reg* %12084, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %12085 to i64*
  %12086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12087 = getelementptr inbounds %struct.GPR, %struct.GPR* %12086, i32 0, i32 1
  %12088 = getelementptr inbounds %struct.Reg, %struct.Reg* %12087, i32 0, i32 0
  %RAX.i1472 = bitcast %union.anon* %12088 to i64*
  %12089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12090 = getelementptr inbounds %struct.GPR, %struct.GPR* %12089, i32 0, i32 15
  %12091 = getelementptr inbounds %struct.Reg, %struct.Reg* %12090, i32 0, i32 0
  %RBP.i1473 = bitcast %union.anon* %12091 to i64*
  %12092 = load i64, i64* %RBP.i1473
  %12093 = sub i64 %12092, 12
  %12094 = load i64, i64* %PC.i1471
  %12095 = add i64 %12094, 3
  store i64 %12095, i64* %PC.i1471
  %12096 = inttoptr i64 %12093 to i32*
  %12097 = load i32, i32* %12096
  %12098 = zext i32 %12097 to i64
  store i64 %12098, i64* %RAX.i1472, align 8
  store %struct.Memory* %loadMem_4af24f, %struct.Memory** %MEMORY
  %loadMem_4af252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12100 = getelementptr inbounds %struct.GPR, %struct.GPR* %12099, i32 0, i32 33
  %12101 = getelementptr inbounds %struct.Reg, %struct.Reg* %12100, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %12101 to i64*
  %12102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12103 = getelementptr inbounds %struct.GPR, %struct.GPR* %12102, i32 0, i32 1
  %12104 = getelementptr inbounds %struct.Reg, %struct.Reg* %12103, i32 0, i32 0
  %RAX.i1470 = bitcast %union.anon* %12104 to i64*
  %12105 = load i64, i64* %RAX.i1470
  %12106 = load i64, i64* %PC.i1469
  %12107 = add i64 %12106, 3
  store i64 %12107, i64* %PC.i1469
  %12108 = trunc i64 %12105 to i32
  %12109 = add i32 1, %12108
  %12110 = zext i32 %12109 to i64
  store i64 %12110, i64* %RAX.i1470, align 8
  %12111 = icmp ult i32 %12109, %12108
  %12112 = icmp ult i32 %12109, 1
  %12113 = or i1 %12111, %12112
  %12114 = zext i1 %12113 to i8
  %12115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12114, i8* %12115, align 1
  %12116 = and i32 %12109, 255
  %12117 = call i32 @llvm.ctpop.i32(i32 %12116)
  %12118 = trunc i32 %12117 to i8
  %12119 = and i8 %12118, 1
  %12120 = xor i8 %12119, 1
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12120, i8* %12121, align 1
  %12122 = xor i64 1, %12105
  %12123 = trunc i64 %12122 to i32
  %12124 = xor i32 %12123, %12109
  %12125 = lshr i32 %12124, 4
  %12126 = trunc i32 %12125 to i8
  %12127 = and i8 %12126, 1
  %12128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12127, i8* %12128, align 1
  %12129 = icmp eq i32 %12109, 0
  %12130 = zext i1 %12129 to i8
  %12131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12130, i8* %12131, align 1
  %12132 = lshr i32 %12109, 31
  %12133 = trunc i32 %12132 to i8
  %12134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12133, i8* %12134, align 1
  %12135 = lshr i32 %12108, 31
  %12136 = xor i32 %12132, %12135
  %12137 = add i32 %12136, %12132
  %12138 = icmp eq i32 %12137, 2
  %12139 = zext i1 %12138 to i8
  %12140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12139, i8* %12140, align 1
  store %struct.Memory* %loadMem_4af252, %struct.Memory** %MEMORY
  %loadMem_4af255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12142 = getelementptr inbounds %struct.GPR, %struct.GPR* %12141, i32 0, i32 33
  %12143 = getelementptr inbounds %struct.Reg, %struct.Reg* %12142, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %12143 to i64*
  %12144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12145 = getelementptr inbounds %struct.GPR, %struct.GPR* %12144, i32 0, i32 1
  %12146 = getelementptr inbounds %struct.Reg, %struct.Reg* %12145, i32 0, i32 0
  %EAX.i1467 = bitcast %union.anon* %12146 to i32*
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12148 = getelementptr inbounds %struct.GPR, %struct.GPR* %12147, i32 0, i32 15
  %12149 = getelementptr inbounds %struct.Reg, %struct.Reg* %12148, i32 0, i32 0
  %RBP.i1468 = bitcast %union.anon* %12149 to i64*
  %12150 = load i64, i64* %RBP.i1468
  %12151 = sub i64 %12150, 12
  %12152 = load i32, i32* %EAX.i1467
  %12153 = zext i32 %12152 to i64
  %12154 = load i64, i64* %PC.i1466
  %12155 = add i64 %12154, 3
  store i64 %12155, i64* %PC.i1466
  %12156 = inttoptr i64 %12151 to i32*
  store i32 %12152, i32* %12156
  store %struct.Memory* %loadMem_4af255, %struct.Memory** %MEMORY
  %loadMem_4af258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12158 = getelementptr inbounds %struct.GPR, %struct.GPR* %12157, i32 0, i32 33
  %12159 = getelementptr inbounds %struct.Reg, %struct.Reg* %12158, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %12159 to i64*
  %12160 = load i64, i64* %PC.i1465
  %12161 = add i64 %12160, -167
  %12162 = load i64, i64* %PC.i1465
  %12163 = add i64 %12162, 5
  store i64 %12163, i64* %PC.i1465
  %12164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12161, i64* %12164, align 8
  store %struct.Memory* %loadMem_4af258, %struct.Memory** %MEMORY
  br label %block_.L_4af1b1

block_.L_4af25d:                                  ; preds = %block_.L_4af1b1
  %loadMem_4af25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12166 = getelementptr inbounds %struct.GPR, %struct.GPR* %12165, i32 0, i32 33
  %12167 = getelementptr inbounds %struct.Reg, %struct.Reg* %12166, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %12167 to i64*
  %12168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12169 = getelementptr inbounds %struct.GPR, %struct.GPR* %12168, i32 0, i32 15
  %12170 = getelementptr inbounds %struct.Reg, %struct.Reg* %12169, i32 0, i32 0
  %RBP.i1464 = bitcast %union.anon* %12170 to i64*
  %12171 = load i64, i64* %RBP.i1464
  %12172 = sub i64 %12171, 12
  %12173 = load i64, i64* %PC.i1463
  %12174 = add i64 %12173, 7
  store i64 %12174, i64* %PC.i1463
  %12175 = inttoptr i64 %12172 to i32*
  store i32 0, i32* %12175
  store %struct.Memory* %loadMem_4af25d, %struct.Memory** %MEMORY
  br label %block_.L_4af264

block_.L_4af264:                                  ; preds = %block_.L_4af352, %block_.L_4af25d
  %loadMem_4af264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12177 = getelementptr inbounds %struct.GPR, %struct.GPR* %12176, i32 0, i32 33
  %12178 = getelementptr inbounds %struct.Reg, %struct.Reg* %12177, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %12178 to i64*
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12180 = getelementptr inbounds %struct.GPR, %struct.GPR* %12179, i32 0, i32 1
  %12181 = getelementptr inbounds %struct.Reg, %struct.Reg* %12180, i32 0, i32 0
  %RAX.i1461 = bitcast %union.anon* %12181 to i64*
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12183 = getelementptr inbounds %struct.GPR, %struct.GPR* %12182, i32 0, i32 15
  %12184 = getelementptr inbounds %struct.Reg, %struct.Reg* %12183, i32 0, i32 0
  %RBP.i1462 = bitcast %union.anon* %12184 to i64*
  %12185 = load i64, i64* %RBP.i1462
  %12186 = sub i64 %12185, 12
  %12187 = load i64, i64* %PC.i1460
  %12188 = add i64 %12187, 3
  store i64 %12188, i64* %PC.i1460
  %12189 = inttoptr i64 %12186 to i32*
  %12190 = load i32, i32* %12189
  %12191 = zext i32 %12190 to i64
  store i64 %12191, i64* %RAX.i1461, align 8
  store %struct.Memory* %loadMem_4af264, %struct.Memory** %MEMORY
  %loadMem_4af267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12193 = getelementptr inbounds %struct.GPR, %struct.GPR* %12192, i32 0, i32 33
  %12194 = getelementptr inbounds %struct.Reg, %struct.Reg* %12193, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %12194 to i64*
  %12195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12196 = getelementptr inbounds %struct.GPR, %struct.GPR* %12195, i32 0, i32 5
  %12197 = getelementptr inbounds %struct.Reg, %struct.Reg* %12196, i32 0, i32 0
  %RCX.i1459 = bitcast %union.anon* %12197 to i64*
  %12198 = load i64, i64* %PC.i1458
  %12199 = add i64 %12198, 8
  store i64 %12199, i64* %PC.i1458
  %12200 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12200, i64* %RCX.i1459, align 8
  store %struct.Memory* %loadMem_4af267, %struct.Memory** %MEMORY
  %loadMem_4af26f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12202 = getelementptr inbounds %struct.GPR, %struct.GPR* %12201, i32 0, i32 33
  %12203 = getelementptr inbounds %struct.Reg, %struct.Reg* %12202, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %12203 to i64*
  %12204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12205 = getelementptr inbounds %struct.GPR, %struct.GPR* %12204, i32 0, i32 5
  %12206 = getelementptr inbounds %struct.Reg, %struct.Reg* %12205, i32 0, i32 0
  %RCX.i1456 = bitcast %union.anon* %12206 to i64*
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12208 = getelementptr inbounds %struct.GPR, %struct.GPR* %12207, i32 0, i32 7
  %12209 = getelementptr inbounds %struct.Reg, %struct.Reg* %12208, i32 0, i32 0
  %RDX.i1457 = bitcast %union.anon* %12209 to i64*
  %12210 = load i64, i64* %RCX.i1456
  %12211 = add i64 %12210, 60
  %12212 = load i64, i64* %PC.i1455
  %12213 = add i64 %12212, 3
  store i64 %12213, i64* %PC.i1455
  %12214 = inttoptr i64 %12211 to i32*
  %12215 = load i32, i32* %12214
  %12216 = zext i32 %12215 to i64
  store i64 %12216, i64* %RDX.i1457, align 8
  store %struct.Memory* %loadMem_4af26f, %struct.Memory** %MEMORY
  %loadMem_4af272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12218 = getelementptr inbounds %struct.GPR, %struct.GPR* %12217, i32 0, i32 33
  %12219 = getelementptr inbounds %struct.Reg, %struct.Reg* %12218, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %12219 to i64*
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12221 = getelementptr inbounds %struct.GPR, %struct.GPR* %12220, i32 0, i32 7
  %12222 = getelementptr inbounds %struct.Reg, %struct.Reg* %12221, i32 0, i32 0
  %RDX.i1454 = bitcast %union.anon* %12222 to i64*
  %12223 = load i64, i64* %RDX.i1454
  %12224 = load i64, i64* %PC.i1453
  %12225 = add i64 %12224, 3
  store i64 %12225, i64* %PC.i1453
  %12226 = trunc i64 %12223 to i32
  %12227 = add i32 8, %12226
  %12228 = zext i32 %12227 to i64
  store i64 %12228, i64* %RDX.i1454, align 8
  %12229 = icmp ult i32 %12227, %12226
  %12230 = icmp ult i32 %12227, 8
  %12231 = or i1 %12229, %12230
  %12232 = zext i1 %12231 to i8
  %12233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12232, i8* %12233, align 1
  %12234 = and i32 %12227, 255
  %12235 = call i32 @llvm.ctpop.i32(i32 %12234)
  %12236 = trunc i32 %12235 to i8
  %12237 = and i8 %12236, 1
  %12238 = xor i8 %12237, 1
  %12239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12238, i8* %12239, align 1
  %12240 = xor i64 8, %12223
  %12241 = trunc i64 %12240 to i32
  %12242 = xor i32 %12241, %12227
  %12243 = lshr i32 %12242, 4
  %12244 = trunc i32 %12243 to i8
  %12245 = and i8 %12244, 1
  %12246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12245, i8* %12246, align 1
  %12247 = icmp eq i32 %12227, 0
  %12248 = zext i1 %12247 to i8
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12248, i8* %12249, align 1
  %12250 = lshr i32 %12227, 31
  %12251 = trunc i32 %12250 to i8
  %12252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12251, i8* %12252, align 1
  %12253 = lshr i32 %12226, 31
  %12254 = xor i32 %12250, %12253
  %12255 = add i32 %12254, %12250
  %12256 = icmp eq i32 %12255, 2
  %12257 = zext i1 %12256 to i8
  %12258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12257, i8* %12258, align 1
  store %struct.Memory* %loadMem_4af272, %struct.Memory** %MEMORY
  %loadMem_4af275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12260 = getelementptr inbounds %struct.GPR, %struct.GPR* %12259, i32 0, i32 33
  %12261 = getelementptr inbounds %struct.Reg, %struct.Reg* %12260, i32 0, i32 0
  %PC.i1451 = bitcast %union.anon* %12261 to i64*
  %12262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12263 = getelementptr inbounds %struct.GPR, %struct.GPR* %12262, i32 0, i32 7
  %12264 = getelementptr inbounds %struct.Reg, %struct.Reg* %12263, i32 0, i32 0
  %RDX.i1452 = bitcast %union.anon* %12264 to i64*
  %12265 = load i64, i64* %RDX.i1452
  %12266 = load i64, i64* %PC.i1451
  %12267 = add i64 %12266, 3
  store i64 %12267, i64* %PC.i1451
  %12268 = and i64 %12265, 4294967295
  %12269 = shl i64 %12268, 1
  %12270 = trunc i64 %12269 to i32
  %12271 = icmp slt i32 %12270, 0
  %12272 = shl i32 %12270, 1
  %12273 = zext i32 %12272 to i64
  store i64 %12273, i64* %RDX.i1452, align 8
  %12274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12275 = zext i1 %12271 to i8
  store i8 %12275, i8* %12274, align 1
  %12276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12277 = and i32 %12272, 254
  %12278 = call i32 @llvm.ctpop.i32(i32 %12277)
  %12279 = trunc i32 %12278 to i8
  %12280 = and i8 %12279, 1
  %12281 = xor i8 %12280, 1
  store i8 %12281, i8* %12276, align 1
  %12282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12282, align 1
  %12283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12284 = icmp eq i32 %12272, 0
  %12285 = zext i1 %12284 to i8
  store i8 %12285, i8* %12283, align 1
  %12286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12287 = lshr i32 %12272, 31
  %12288 = trunc i32 %12287 to i8
  store i8 %12288, i8* %12286, align 1
  %12289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12289, align 1
  store %struct.Memory* %loadMem_4af275, %struct.Memory** %MEMORY
  %loadMem_4af278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12291 = getelementptr inbounds %struct.GPR, %struct.GPR* %12290, i32 0, i32 33
  %12292 = getelementptr inbounds %struct.Reg, %struct.Reg* %12291, i32 0, i32 0
  %PC.i1448 = bitcast %union.anon* %12292 to i64*
  %12293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12294 = getelementptr inbounds %struct.GPR, %struct.GPR* %12293, i32 0, i32 1
  %12295 = getelementptr inbounds %struct.Reg, %struct.Reg* %12294, i32 0, i32 0
  %EAX.i1449 = bitcast %union.anon* %12295 to i32*
  %12296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12297 = getelementptr inbounds %struct.GPR, %struct.GPR* %12296, i32 0, i32 7
  %12298 = getelementptr inbounds %struct.Reg, %struct.Reg* %12297, i32 0, i32 0
  %EDX.i1450 = bitcast %union.anon* %12298 to i32*
  %12299 = load i32, i32* %EAX.i1449
  %12300 = zext i32 %12299 to i64
  %12301 = load i32, i32* %EDX.i1450
  %12302 = zext i32 %12301 to i64
  %12303 = load i64, i64* %PC.i1448
  %12304 = add i64 %12303, 2
  store i64 %12304, i64* %PC.i1448
  %12305 = sub i32 %12299, %12301
  %12306 = icmp ult i32 %12299, %12301
  %12307 = zext i1 %12306 to i8
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12307, i8* %12308, align 1
  %12309 = and i32 %12305, 255
  %12310 = call i32 @llvm.ctpop.i32(i32 %12309)
  %12311 = trunc i32 %12310 to i8
  %12312 = and i8 %12311, 1
  %12313 = xor i8 %12312, 1
  %12314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12313, i8* %12314, align 1
  %12315 = xor i64 %12302, %12300
  %12316 = trunc i64 %12315 to i32
  %12317 = xor i32 %12316, %12305
  %12318 = lshr i32 %12317, 4
  %12319 = trunc i32 %12318 to i8
  %12320 = and i8 %12319, 1
  %12321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12320, i8* %12321, align 1
  %12322 = icmp eq i32 %12305, 0
  %12323 = zext i1 %12322 to i8
  %12324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12323, i8* %12324, align 1
  %12325 = lshr i32 %12305, 31
  %12326 = trunc i32 %12325 to i8
  %12327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12326, i8* %12327, align 1
  %12328 = lshr i32 %12299, 31
  %12329 = lshr i32 %12301, 31
  %12330 = xor i32 %12329, %12328
  %12331 = xor i32 %12325, %12328
  %12332 = add i32 %12331, %12330
  %12333 = icmp eq i32 %12332, 2
  %12334 = zext i1 %12333 to i8
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12334, i8* %12335, align 1
  store %struct.Memory* %loadMem_4af278, %struct.Memory** %MEMORY
  %loadMem_4af27a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12337 = getelementptr inbounds %struct.GPR, %struct.GPR* %12336, i32 0, i32 33
  %12338 = getelementptr inbounds %struct.Reg, %struct.Reg* %12337, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %12338 to i64*
  %12339 = load i64, i64* %PC.i1447
  %12340 = add i64 %12339, 230
  %12341 = load i64, i64* %PC.i1447
  %12342 = add i64 %12341, 6
  %12343 = load i64, i64* %PC.i1447
  %12344 = add i64 %12343, 6
  store i64 %12344, i64* %PC.i1447
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12346 = load i8, i8* %12345, align 1
  %12347 = icmp ne i8 %12346, 0
  %12348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12349 = load i8, i8* %12348, align 1
  %12350 = icmp ne i8 %12349, 0
  %12351 = xor i1 %12347, %12350
  %12352 = xor i1 %12351, true
  %12353 = zext i1 %12352 to i8
  store i8 %12353, i8* %BRANCH_TAKEN, align 1
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12355 = select i1 %12351, i64 %12342, i64 %12340
  store i64 %12355, i64* %12354, align 8
  store %struct.Memory* %loadMem_4af27a, %struct.Memory** %MEMORY
  %loadBr_4af27a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af27a = icmp eq i8 %loadBr_4af27a, 1
  br i1 %cmpBr_4af27a, label %block_.L_4af360, label %block_4af280

block_4af280:                                     ; preds = %block_.L_4af264
  %loadMem_4af280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12357 = getelementptr inbounds %struct.GPR, %struct.GPR* %12356, i32 0, i32 33
  %12358 = getelementptr inbounds %struct.Reg, %struct.Reg* %12357, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %12358 to i64*
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12360 = getelementptr inbounds %struct.GPR, %struct.GPR* %12359, i32 0, i32 15
  %12361 = getelementptr inbounds %struct.Reg, %struct.Reg* %12360, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %12361 to i64*
  %12362 = load i64, i64* %RBP.i1446
  %12363 = sub i64 %12362, 16
  %12364 = load i64, i64* %PC.i1445
  %12365 = add i64 %12364, 7
  store i64 %12365, i64* %PC.i1445
  %12366 = inttoptr i64 %12363 to i32*
  store i32 0, i32* %12366
  store %struct.Memory* %loadMem_4af280, %struct.Memory** %MEMORY
  br label %block_.L_4af287

block_.L_4af287:                                  ; preds = %block_4af2a3, %block_4af280
  %loadMem_4af287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12368 = getelementptr inbounds %struct.GPR, %struct.GPR* %12367, i32 0, i32 33
  %12369 = getelementptr inbounds %struct.Reg, %struct.Reg* %12368, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %12369 to i64*
  %12370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12371 = getelementptr inbounds %struct.GPR, %struct.GPR* %12370, i32 0, i32 1
  %12372 = getelementptr inbounds %struct.Reg, %struct.Reg* %12371, i32 0, i32 0
  %RAX.i1443 = bitcast %union.anon* %12372 to i64*
  %12373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12374 = getelementptr inbounds %struct.GPR, %struct.GPR* %12373, i32 0, i32 15
  %12375 = getelementptr inbounds %struct.Reg, %struct.Reg* %12374, i32 0, i32 0
  %RBP.i1444 = bitcast %union.anon* %12375 to i64*
  %12376 = load i64, i64* %RBP.i1444
  %12377 = sub i64 %12376, 16
  %12378 = load i64, i64* %PC.i1442
  %12379 = add i64 %12378, 3
  store i64 %12379, i64* %PC.i1442
  %12380 = inttoptr i64 %12377 to i32*
  %12381 = load i32, i32* %12380
  %12382 = zext i32 %12381 to i64
  store i64 %12382, i64* %RAX.i1443, align 8
  store %struct.Memory* %loadMem_4af287, %struct.Memory** %MEMORY
  %loadMem_4af28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12384 = getelementptr inbounds %struct.GPR, %struct.GPR* %12383, i32 0, i32 33
  %12385 = getelementptr inbounds %struct.Reg, %struct.Reg* %12384, i32 0, i32 0
  %PC.i1440 = bitcast %union.anon* %12385 to i64*
  %12386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12387 = getelementptr inbounds %struct.GPR, %struct.GPR* %12386, i32 0, i32 5
  %12388 = getelementptr inbounds %struct.Reg, %struct.Reg* %12387, i32 0, i32 0
  %RCX.i1441 = bitcast %union.anon* %12388 to i64*
  %12389 = load i64, i64* %PC.i1440
  %12390 = add i64 %12389, 8
  store i64 %12390, i64* %PC.i1440
  %12391 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12391, i64* %RCX.i1441, align 8
  store %struct.Memory* %loadMem_4af28a, %struct.Memory** %MEMORY
  %loadMem_4af292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12393 = getelementptr inbounds %struct.GPR, %struct.GPR* %12392, i32 0, i32 33
  %12394 = getelementptr inbounds %struct.Reg, %struct.Reg* %12393, i32 0, i32 0
  %PC.i1437 = bitcast %union.anon* %12394 to i64*
  %12395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12396 = getelementptr inbounds %struct.GPR, %struct.GPR* %12395, i32 0, i32 5
  %12397 = getelementptr inbounds %struct.Reg, %struct.Reg* %12396, i32 0, i32 0
  %RCX.i1438 = bitcast %union.anon* %12397 to i64*
  %12398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12399 = getelementptr inbounds %struct.GPR, %struct.GPR* %12398, i32 0, i32 7
  %12400 = getelementptr inbounds %struct.Reg, %struct.Reg* %12399, i32 0, i32 0
  %RDX.i1439 = bitcast %union.anon* %12400 to i64*
  %12401 = load i64, i64* %RCX.i1438
  %12402 = add i64 %12401, 52
  %12403 = load i64, i64* %PC.i1437
  %12404 = add i64 %12403, 3
  store i64 %12404, i64* %PC.i1437
  %12405 = inttoptr i64 %12402 to i32*
  %12406 = load i32, i32* %12405
  %12407 = zext i32 %12406 to i64
  store i64 %12407, i64* %RDX.i1439, align 8
  store %struct.Memory* %loadMem_4af292, %struct.Memory** %MEMORY
  %loadMem_4af295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 33
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %12410 to i64*
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 7
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %RDX.i1436 = bitcast %union.anon* %12413 to i64*
  %12414 = load i64, i64* %RDX.i1436
  %12415 = load i64, i64* %PC.i1435
  %12416 = add i64 %12415, 3
  store i64 %12416, i64* %PC.i1435
  %12417 = trunc i64 %12414 to i32
  %12418 = add i32 8, %12417
  %12419 = zext i32 %12418 to i64
  store i64 %12419, i64* %RDX.i1436, align 8
  %12420 = icmp ult i32 %12418, %12417
  %12421 = icmp ult i32 %12418, 8
  %12422 = or i1 %12420, %12421
  %12423 = zext i1 %12422 to i8
  %12424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12423, i8* %12424, align 1
  %12425 = and i32 %12418, 255
  %12426 = call i32 @llvm.ctpop.i32(i32 %12425)
  %12427 = trunc i32 %12426 to i8
  %12428 = and i8 %12427, 1
  %12429 = xor i8 %12428, 1
  %12430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12429, i8* %12430, align 1
  %12431 = xor i64 8, %12414
  %12432 = trunc i64 %12431 to i32
  %12433 = xor i32 %12432, %12418
  %12434 = lshr i32 %12433, 4
  %12435 = trunc i32 %12434 to i8
  %12436 = and i8 %12435, 1
  %12437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12436, i8* %12437, align 1
  %12438 = icmp eq i32 %12418, 0
  %12439 = zext i1 %12438 to i8
  %12440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12439, i8* %12440, align 1
  %12441 = lshr i32 %12418, 31
  %12442 = trunc i32 %12441 to i8
  %12443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12442, i8* %12443, align 1
  %12444 = lshr i32 %12417, 31
  %12445 = xor i32 %12441, %12444
  %12446 = add i32 %12445, %12441
  %12447 = icmp eq i32 %12446, 2
  %12448 = zext i1 %12447 to i8
  %12449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12448, i8* %12449, align 1
  store %struct.Memory* %loadMem_4af295, %struct.Memory** %MEMORY
  %loadMem_4af298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12451 = getelementptr inbounds %struct.GPR, %struct.GPR* %12450, i32 0, i32 33
  %12452 = getelementptr inbounds %struct.Reg, %struct.Reg* %12451, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %12452 to i64*
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12454 = getelementptr inbounds %struct.GPR, %struct.GPR* %12453, i32 0, i32 7
  %12455 = getelementptr inbounds %struct.Reg, %struct.Reg* %12454, i32 0, i32 0
  %RDX.i1434 = bitcast %union.anon* %12455 to i64*
  %12456 = load i64, i64* %RDX.i1434
  %12457 = load i64, i64* %PC.i1433
  %12458 = add i64 %12457, 3
  store i64 %12458, i64* %PC.i1433
  %12459 = and i64 %12456, 4294967295
  %12460 = shl i64 %12459, 1
  %12461 = trunc i64 %12460 to i32
  %12462 = icmp slt i32 %12461, 0
  %12463 = shl i32 %12461, 1
  %12464 = zext i32 %12463 to i64
  store i64 %12464, i64* %RDX.i1434, align 8
  %12465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12466 = zext i1 %12462 to i8
  store i8 %12466, i8* %12465, align 1
  %12467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12468 = and i32 %12463, 254
  %12469 = call i32 @llvm.ctpop.i32(i32 %12468)
  %12470 = trunc i32 %12469 to i8
  %12471 = and i8 %12470, 1
  %12472 = xor i8 %12471, 1
  store i8 %12472, i8* %12467, align 1
  %12473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12473, align 1
  %12474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12475 = icmp eq i32 %12463, 0
  %12476 = zext i1 %12475 to i8
  store i8 %12476, i8* %12474, align 1
  %12477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12478 = lshr i32 %12463, 31
  %12479 = trunc i32 %12478 to i8
  store i8 %12479, i8* %12477, align 1
  %12480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12480, align 1
  store %struct.Memory* %loadMem_4af298, %struct.Memory** %MEMORY
  %loadMem_4af29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12482 = getelementptr inbounds %struct.GPR, %struct.GPR* %12481, i32 0, i32 33
  %12483 = getelementptr inbounds %struct.Reg, %struct.Reg* %12482, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %12483 to i64*
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12485 = getelementptr inbounds %struct.GPR, %struct.GPR* %12484, i32 0, i32 1
  %12486 = getelementptr inbounds %struct.Reg, %struct.Reg* %12485, i32 0, i32 0
  %EAX.i1431 = bitcast %union.anon* %12486 to i32*
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12488 = getelementptr inbounds %struct.GPR, %struct.GPR* %12487, i32 0, i32 7
  %12489 = getelementptr inbounds %struct.Reg, %struct.Reg* %12488, i32 0, i32 0
  %EDX.i1432 = bitcast %union.anon* %12489 to i32*
  %12490 = load i32, i32* %EAX.i1431
  %12491 = zext i32 %12490 to i64
  %12492 = load i32, i32* %EDX.i1432
  %12493 = zext i32 %12492 to i64
  %12494 = load i64, i64* %PC.i1430
  %12495 = add i64 %12494, 2
  store i64 %12495, i64* %PC.i1430
  %12496 = sub i32 %12490, %12492
  %12497 = icmp ult i32 %12490, %12492
  %12498 = zext i1 %12497 to i8
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12498, i8* %12499, align 1
  %12500 = and i32 %12496, 255
  %12501 = call i32 @llvm.ctpop.i32(i32 %12500)
  %12502 = trunc i32 %12501 to i8
  %12503 = and i8 %12502, 1
  %12504 = xor i8 %12503, 1
  %12505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12504, i8* %12505, align 1
  %12506 = xor i64 %12493, %12491
  %12507 = trunc i64 %12506 to i32
  %12508 = xor i32 %12507, %12496
  %12509 = lshr i32 %12508, 4
  %12510 = trunc i32 %12509 to i8
  %12511 = and i8 %12510, 1
  %12512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12511, i8* %12512, align 1
  %12513 = icmp eq i32 %12496, 0
  %12514 = zext i1 %12513 to i8
  %12515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12514, i8* %12515, align 1
  %12516 = lshr i32 %12496, 31
  %12517 = trunc i32 %12516 to i8
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12517, i8* %12518, align 1
  %12519 = lshr i32 %12490, 31
  %12520 = lshr i32 %12492, 31
  %12521 = xor i32 %12520, %12519
  %12522 = xor i32 %12516, %12519
  %12523 = add i32 %12522, %12521
  %12524 = icmp eq i32 %12523, 2
  %12525 = zext i1 %12524 to i8
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12525, i8* %12526, align 1
  store %struct.Memory* %loadMem_4af29b, %struct.Memory** %MEMORY
  %loadMem_4af29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12528 = getelementptr inbounds %struct.GPR, %struct.GPR* %12527, i32 0, i32 33
  %12529 = getelementptr inbounds %struct.Reg, %struct.Reg* %12528, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %12529 to i64*
  %12530 = load i64, i64* %PC.i1429
  %12531 = add i64 %12530, 176
  %12532 = load i64, i64* %PC.i1429
  %12533 = add i64 %12532, 6
  %12534 = load i64, i64* %PC.i1429
  %12535 = add i64 %12534, 6
  store i64 %12535, i64* %PC.i1429
  %12536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12537 = load i8, i8* %12536, align 1
  %12538 = icmp ne i8 %12537, 0
  %12539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12540 = load i8, i8* %12539, align 1
  %12541 = icmp ne i8 %12540, 0
  %12542 = xor i1 %12538, %12541
  %12543 = xor i1 %12542, true
  %12544 = zext i1 %12543 to i8
  store i8 %12544, i8* %BRANCH_TAKEN, align 1
  %12545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12546 = select i1 %12542, i64 %12533, i64 %12531
  store i64 %12546, i64* %12545, align 8
  store %struct.Memory* %loadMem_4af29d, %struct.Memory** %MEMORY
  %loadBr_4af29d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af29d = icmp eq i8 %loadBr_4af29d, 1
  br i1 %cmpBr_4af29d, label %block_.L_4af34d, label %block_4af2a3

block_4af2a3:                                     ; preds = %block_.L_4af287
  %loadMem_4af2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12548 = getelementptr inbounds %struct.GPR, %struct.GPR* %12547, i32 0, i32 33
  %12549 = getelementptr inbounds %struct.Reg, %struct.Reg* %12548, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %12549 to i64*
  %12550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12551 = getelementptr inbounds %struct.GPR, %struct.GPR* %12550, i32 0, i32 1
  %12552 = getelementptr inbounds %struct.Reg, %struct.Reg* %12551, i32 0, i32 0
  %RAX.i1428 = bitcast %union.anon* %12552 to i64*
  %12553 = load i64, i64* %PC.i1427
  %12554 = add i64 %12553, 8
  store i64 %12554, i64* %PC.i1427
  %12555 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %12555, i64* %RAX.i1428, align 8
  store %struct.Memory* %loadMem_4af2a3, %struct.Memory** %MEMORY
  %loadMem_4af2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %12556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12557 = getelementptr inbounds %struct.GPR, %struct.GPR* %12556, i32 0, i32 33
  %12558 = getelementptr inbounds %struct.Reg, %struct.Reg* %12557, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %12558 to i64*
  %12559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12560 = getelementptr inbounds %struct.GPR, %struct.GPR* %12559, i32 0, i32 5
  %12561 = getelementptr inbounds %struct.Reg, %struct.Reg* %12560, i32 0, i32 0
  %RCX.i1425 = bitcast %union.anon* %12561 to i64*
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12563 = getelementptr inbounds %struct.GPR, %struct.GPR* %12562, i32 0, i32 15
  %12564 = getelementptr inbounds %struct.Reg, %struct.Reg* %12563, i32 0, i32 0
  %RBP.i1426 = bitcast %union.anon* %12564 to i64*
  %12565 = load i64, i64* %RBP.i1426
  %12566 = sub i64 %12565, 4
  %12567 = load i64, i64* %PC.i1424
  %12568 = add i64 %12567, 4
  store i64 %12568, i64* %PC.i1424
  %12569 = inttoptr i64 %12566 to i32*
  %12570 = load i32, i32* %12569
  %12571 = sext i32 %12570 to i64
  store i64 %12571, i64* %RCX.i1425, align 8
  store %struct.Memory* %loadMem_4af2ab, %struct.Memory** %MEMORY
  %loadMem_4af2af = load %struct.Memory*, %struct.Memory** %MEMORY
  %12572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12573 = getelementptr inbounds %struct.GPR, %struct.GPR* %12572, i32 0, i32 33
  %12574 = getelementptr inbounds %struct.Reg, %struct.Reg* %12573, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %12574 to i64*
  %12575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12576 = getelementptr inbounds %struct.GPR, %struct.GPR* %12575, i32 0, i32 1
  %12577 = getelementptr inbounds %struct.Reg, %struct.Reg* %12576, i32 0, i32 0
  %RAX.i1422 = bitcast %union.anon* %12577 to i64*
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12579 = getelementptr inbounds %struct.GPR, %struct.GPR* %12578, i32 0, i32 5
  %12580 = getelementptr inbounds %struct.Reg, %struct.Reg* %12579, i32 0, i32 0
  %RCX.i1423 = bitcast %union.anon* %12580 to i64*
  %12581 = load i64, i64* %RAX.i1422
  %12582 = load i64, i64* %RCX.i1423
  %12583 = mul i64 %12582, 8
  %12584 = add i64 %12583, %12581
  %12585 = load i64, i64* %PC.i1421
  %12586 = add i64 %12585, 4
  store i64 %12586, i64* %PC.i1421
  %12587 = inttoptr i64 %12584 to i64*
  %12588 = load i64, i64* %12587
  store i64 %12588, i64* %RAX.i1422, align 8
  store %struct.Memory* %loadMem_4af2af, %struct.Memory** %MEMORY
  %loadMem_4af2b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12590 = getelementptr inbounds %struct.GPR, %struct.GPR* %12589, i32 0, i32 33
  %12591 = getelementptr inbounds %struct.Reg, %struct.Reg* %12590, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %12591 to i64*
  %12592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12593 = getelementptr inbounds %struct.GPR, %struct.GPR* %12592, i32 0, i32 1
  %12594 = getelementptr inbounds %struct.Reg, %struct.Reg* %12593, i32 0, i32 0
  %RAX.i1420 = bitcast %union.anon* %12594 to i64*
  %12595 = load i64, i64* %RAX.i1420
  %12596 = add i64 %12595, 6448
  %12597 = load i64, i64* %PC.i1419
  %12598 = add i64 %12597, 7
  store i64 %12598, i64* %PC.i1419
  %12599 = inttoptr i64 %12596 to i64*
  %12600 = load i64, i64* %12599
  store i64 %12600, i64* %RAX.i1420, align 8
  store %struct.Memory* %loadMem_4af2b3, %struct.Memory** %MEMORY
  %loadMem_4af2ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %12601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12602 = getelementptr inbounds %struct.GPR, %struct.GPR* %12601, i32 0, i32 33
  %12603 = getelementptr inbounds %struct.Reg, %struct.Reg* %12602, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %12603 to i64*
  %12604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12605 = getelementptr inbounds %struct.GPR, %struct.GPR* %12604, i32 0, i32 5
  %12606 = getelementptr inbounds %struct.Reg, %struct.Reg* %12605, i32 0, i32 0
  %RCX.i1417 = bitcast %union.anon* %12606 to i64*
  %12607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12608 = getelementptr inbounds %struct.GPR, %struct.GPR* %12607, i32 0, i32 15
  %12609 = getelementptr inbounds %struct.Reg, %struct.Reg* %12608, i32 0, i32 0
  %RBP.i1418 = bitcast %union.anon* %12609 to i64*
  %12610 = load i64, i64* %RBP.i1418
  %12611 = sub i64 %12610, 12
  %12612 = load i64, i64* %PC.i1416
  %12613 = add i64 %12612, 4
  store i64 %12613, i64* %PC.i1416
  %12614 = inttoptr i64 %12611 to i32*
  %12615 = load i32, i32* %12614
  %12616 = sext i32 %12615 to i64
  store i64 %12616, i64* %RCX.i1417, align 8
  store %struct.Memory* %loadMem_4af2ba, %struct.Memory** %MEMORY
  %loadMem_4af2be = load %struct.Memory*, %struct.Memory** %MEMORY
  %12617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12618 = getelementptr inbounds %struct.GPR, %struct.GPR* %12617, i32 0, i32 33
  %12619 = getelementptr inbounds %struct.Reg, %struct.Reg* %12618, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %12619 to i64*
  %12620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12621 = getelementptr inbounds %struct.GPR, %struct.GPR* %12620, i32 0, i32 1
  %12622 = getelementptr inbounds %struct.Reg, %struct.Reg* %12621, i32 0, i32 0
  %RAX.i1414 = bitcast %union.anon* %12622 to i64*
  %12623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12624 = getelementptr inbounds %struct.GPR, %struct.GPR* %12623, i32 0, i32 5
  %12625 = getelementptr inbounds %struct.Reg, %struct.Reg* %12624, i32 0, i32 0
  %RCX.i1415 = bitcast %union.anon* %12625 to i64*
  %12626 = load i64, i64* %RAX.i1414
  %12627 = load i64, i64* %RCX.i1415
  %12628 = mul i64 %12627, 8
  %12629 = add i64 %12628, %12626
  %12630 = load i64, i64* %PC.i1413
  %12631 = add i64 %12630, 4
  store i64 %12631, i64* %PC.i1413
  %12632 = inttoptr i64 %12629 to i64*
  %12633 = load i64, i64* %12632
  store i64 %12633, i64* %RAX.i1414, align 8
  store %struct.Memory* %loadMem_4af2be, %struct.Memory** %MEMORY
  %loadMem_4af2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12635 = getelementptr inbounds %struct.GPR, %struct.GPR* %12634, i32 0, i32 33
  %12636 = getelementptr inbounds %struct.Reg, %struct.Reg* %12635, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %12636 to i64*
  %12637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12638 = getelementptr inbounds %struct.GPR, %struct.GPR* %12637, i32 0, i32 5
  %12639 = getelementptr inbounds %struct.Reg, %struct.Reg* %12638, i32 0, i32 0
  %RCX.i1411 = bitcast %union.anon* %12639 to i64*
  %12640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12641 = getelementptr inbounds %struct.GPR, %struct.GPR* %12640, i32 0, i32 15
  %12642 = getelementptr inbounds %struct.Reg, %struct.Reg* %12641, i32 0, i32 0
  %RBP.i1412 = bitcast %union.anon* %12642 to i64*
  %12643 = load i64, i64* %RBP.i1412
  %12644 = sub i64 %12643, 16
  %12645 = load i64, i64* %PC.i1410
  %12646 = add i64 %12645, 4
  store i64 %12646, i64* %PC.i1410
  %12647 = inttoptr i64 %12644 to i32*
  %12648 = load i32, i32* %12647
  %12649 = sext i32 %12648 to i64
  store i64 %12649, i64* %RCX.i1411, align 8
  store %struct.Memory* %loadMem_4af2c2, %struct.Memory** %MEMORY
  %loadMem_4af2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12651 = getelementptr inbounds %struct.GPR, %struct.GPR* %12650, i32 0, i32 33
  %12652 = getelementptr inbounds %struct.Reg, %struct.Reg* %12651, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %12652 to i64*
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12654 = getelementptr inbounds %struct.GPR, %struct.GPR* %12653, i32 0, i32 7
  %12655 = getelementptr inbounds %struct.Reg, %struct.Reg* %12654, i32 0, i32 0
  %DX.i1407 = bitcast %union.anon* %12655 to i16*
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12657 = getelementptr inbounds %struct.GPR, %struct.GPR* %12656, i32 0, i32 1
  %12658 = getelementptr inbounds %struct.Reg, %struct.Reg* %12657, i32 0, i32 0
  %RAX.i1408 = bitcast %union.anon* %12658 to i64*
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12660 = getelementptr inbounds %struct.GPR, %struct.GPR* %12659, i32 0, i32 5
  %12661 = getelementptr inbounds %struct.Reg, %struct.Reg* %12660, i32 0, i32 0
  %RCX.i1409 = bitcast %union.anon* %12661 to i64*
  %12662 = load i64, i64* %RAX.i1408
  %12663 = load i64, i64* %RCX.i1409
  %12664 = mul i64 %12663, 2
  %12665 = add i64 %12664, %12662
  %12666 = load i64, i64* %PC.i1406
  %12667 = add i64 %12666, 4
  store i64 %12667, i64* %PC.i1406
  %12668 = inttoptr i64 %12665 to i16*
  %12669 = load i16, i16* %12668
  store i16 %12669, i16* %DX.i1407, align 2
  store %struct.Memory* %loadMem_4af2c6, %struct.Memory** %MEMORY
  %loadMem_4af2ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %12670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12671 = getelementptr inbounds %struct.GPR, %struct.GPR* %12670, i32 0, i32 33
  %12672 = getelementptr inbounds %struct.Reg, %struct.Reg* %12671, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %12672 to i64*
  %12673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12674 = getelementptr inbounds %struct.GPR, %struct.GPR* %12673, i32 0, i32 1
  %12675 = getelementptr inbounds %struct.Reg, %struct.Reg* %12674, i32 0, i32 0
  %RAX.i1405 = bitcast %union.anon* %12675 to i64*
  %12676 = load i64, i64* %PC.i1404
  %12677 = add i64 %12676, 8
  store i64 %12677, i64* %PC.i1404
  %12678 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %12678, i64* %RAX.i1405, align 8
  store %struct.Memory* %loadMem_4af2ca, %struct.Memory** %MEMORY
  %loadMem_4af2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12680 = getelementptr inbounds %struct.GPR, %struct.GPR* %12679, i32 0, i32 33
  %12681 = getelementptr inbounds %struct.Reg, %struct.Reg* %12680, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %12681 to i64*
  %12682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12683 = getelementptr inbounds %struct.GPR, %struct.GPR* %12682, i32 0, i32 5
  %12684 = getelementptr inbounds %struct.Reg, %struct.Reg* %12683, i32 0, i32 0
  %RCX.i1402 = bitcast %union.anon* %12684 to i64*
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12686 = getelementptr inbounds %struct.GPR, %struct.GPR* %12685, i32 0, i32 15
  %12687 = getelementptr inbounds %struct.Reg, %struct.Reg* %12686, i32 0, i32 0
  %RBP.i1403 = bitcast %union.anon* %12687 to i64*
  %12688 = load i64, i64* %RBP.i1403
  %12689 = sub i64 %12688, 4
  %12690 = load i64, i64* %PC.i1401
  %12691 = add i64 %12690, 4
  store i64 %12691, i64* %PC.i1401
  %12692 = inttoptr i64 %12689 to i32*
  %12693 = load i32, i32* %12692
  %12694 = sext i32 %12693 to i64
  store i64 %12694, i64* %RCX.i1402, align 8
  store %struct.Memory* %loadMem_4af2d2, %struct.Memory** %MEMORY
  %loadMem_4af2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12696 = getelementptr inbounds %struct.GPR, %struct.GPR* %12695, i32 0, i32 33
  %12697 = getelementptr inbounds %struct.Reg, %struct.Reg* %12696, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %12697 to i64*
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 1
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %RAX.i1399 = bitcast %union.anon* %12700 to i64*
  %12701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12702 = getelementptr inbounds %struct.GPR, %struct.GPR* %12701, i32 0, i32 5
  %12703 = getelementptr inbounds %struct.Reg, %struct.Reg* %12702, i32 0, i32 0
  %RCX.i1400 = bitcast %union.anon* %12703 to i64*
  %12704 = load i64, i64* %RAX.i1399
  %12705 = load i64, i64* %RCX.i1400
  %12706 = mul i64 %12705, 8
  %12707 = add i64 %12706, %12704
  %12708 = load i64, i64* %PC.i1398
  %12709 = add i64 %12708, 4
  store i64 %12709, i64* %PC.i1398
  %12710 = inttoptr i64 %12707 to i64*
  %12711 = load i64, i64* %12710
  store i64 %12711, i64* %RAX.i1399, align 8
  store %struct.Memory* %loadMem_4af2d6, %struct.Memory** %MEMORY
  %loadMem_4af2da = load %struct.Memory*, %struct.Memory** %MEMORY
  %12712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12713 = getelementptr inbounds %struct.GPR, %struct.GPR* %12712, i32 0, i32 33
  %12714 = getelementptr inbounds %struct.Reg, %struct.Reg* %12713, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %12714 to i64*
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12716 = getelementptr inbounds %struct.GPR, %struct.GPR* %12715, i32 0, i32 1
  %12717 = getelementptr inbounds %struct.Reg, %struct.Reg* %12716, i32 0, i32 0
  %RAX.i1397 = bitcast %union.anon* %12717 to i64*
  %12718 = load i64, i64* %RAX.i1397
  %12719 = add i64 %12718, 6456
  %12720 = load i64, i64* %PC.i1396
  %12721 = add i64 %12720, 7
  store i64 %12721, i64* %PC.i1396
  %12722 = inttoptr i64 %12719 to i64*
  %12723 = load i64, i64* %12722
  store i64 %12723, i64* %RAX.i1397, align 8
  store %struct.Memory* %loadMem_4af2da, %struct.Memory** %MEMORY
  %loadMem_4af2e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12725 = getelementptr inbounds %struct.GPR, %struct.GPR* %12724, i32 0, i32 33
  %12726 = getelementptr inbounds %struct.Reg, %struct.Reg* %12725, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %12726 to i64*
  %12727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12728 = getelementptr inbounds %struct.GPR, %struct.GPR* %12727, i32 0, i32 5
  %12729 = getelementptr inbounds %struct.Reg, %struct.Reg* %12728, i32 0, i32 0
  %RCX.i1394 = bitcast %union.anon* %12729 to i64*
  %12730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12731 = getelementptr inbounds %struct.GPR, %struct.GPR* %12730, i32 0, i32 15
  %12732 = getelementptr inbounds %struct.Reg, %struct.Reg* %12731, i32 0, i32 0
  %RBP.i1395 = bitcast %union.anon* %12732 to i64*
  %12733 = load i64, i64* %RBP.i1395
  %12734 = sub i64 %12733, 12
  %12735 = load i64, i64* %PC.i1393
  %12736 = add i64 %12735, 4
  store i64 %12736, i64* %PC.i1393
  %12737 = inttoptr i64 %12734 to i32*
  %12738 = load i32, i32* %12737
  %12739 = sext i32 %12738 to i64
  store i64 %12739, i64* %RCX.i1394, align 8
  store %struct.Memory* %loadMem_4af2e1, %struct.Memory** %MEMORY
  %loadMem_4af2e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12741 = getelementptr inbounds %struct.GPR, %struct.GPR* %12740, i32 0, i32 33
  %12742 = getelementptr inbounds %struct.Reg, %struct.Reg* %12741, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %12742 to i64*
  %12743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12744 = getelementptr inbounds %struct.GPR, %struct.GPR* %12743, i32 0, i32 1
  %12745 = getelementptr inbounds %struct.Reg, %struct.Reg* %12744, i32 0, i32 0
  %RAX.i1391 = bitcast %union.anon* %12745 to i64*
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12747 = getelementptr inbounds %struct.GPR, %struct.GPR* %12746, i32 0, i32 5
  %12748 = getelementptr inbounds %struct.Reg, %struct.Reg* %12747, i32 0, i32 0
  %RCX.i1392 = bitcast %union.anon* %12748 to i64*
  %12749 = load i64, i64* %RAX.i1391
  %12750 = load i64, i64* %RCX.i1392
  %12751 = mul i64 %12750, 8
  %12752 = add i64 %12751, %12749
  %12753 = load i64, i64* %PC.i1390
  %12754 = add i64 %12753, 4
  store i64 %12754, i64* %PC.i1390
  %12755 = inttoptr i64 %12752 to i64*
  %12756 = load i64, i64* %12755
  store i64 %12756, i64* %RAX.i1391, align 8
  store %struct.Memory* %loadMem_4af2e5, %struct.Memory** %MEMORY
  %loadMem_4af2e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12758 = getelementptr inbounds %struct.GPR, %struct.GPR* %12757, i32 0, i32 33
  %12759 = getelementptr inbounds %struct.Reg, %struct.Reg* %12758, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %12759 to i64*
  %12760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12761 = getelementptr inbounds %struct.GPR, %struct.GPR* %12760, i32 0, i32 5
  %12762 = getelementptr inbounds %struct.Reg, %struct.Reg* %12761, i32 0, i32 0
  %RCX.i1388 = bitcast %union.anon* %12762 to i64*
  %12763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12764 = getelementptr inbounds %struct.GPR, %struct.GPR* %12763, i32 0, i32 15
  %12765 = getelementptr inbounds %struct.Reg, %struct.Reg* %12764, i32 0, i32 0
  %RBP.i1389 = bitcast %union.anon* %12765 to i64*
  %12766 = load i64, i64* %RBP.i1389
  %12767 = sub i64 %12766, 16
  %12768 = load i64, i64* %PC.i1387
  %12769 = add i64 %12768, 4
  store i64 %12769, i64* %PC.i1387
  %12770 = inttoptr i64 %12767 to i32*
  %12771 = load i32, i32* %12770
  %12772 = sext i32 %12771 to i64
  store i64 %12772, i64* %RCX.i1388, align 8
  store %struct.Memory* %loadMem_4af2e9, %struct.Memory** %MEMORY
  %loadMem_4af2ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %12773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12774 = getelementptr inbounds %struct.GPR, %struct.GPR* %12773, i32 0, i32 33
  %12775 = getelementptr inbounds %struct.Reg, %struct.Reg* %12774, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %12775 to i64*
  %12776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12777 = getelementptr inbounds %struct.GPR, %struct.GPR* %12776, i32 0, i32 7
  %12778 = getelementptr inbounds %struct.Reg, %struct.Reg* %12777, i32 0, i32 0
  %DX.i1384 = bitcast %union.anon* %12778 to i16*
  %12779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12780 = getelementptr inbounds %struct.GPR, %struct.GPR* %12779, i32 0, i32 1
  %12781 = getelementptr inbounds %struct.Reg, %struct.Reg* %12780, i32 0, i32 0
  %RAX.i1385 = bitcast %union.anon* %12781 to i64*
  %12782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12783 = getelementptr inbounds %struct.GPR, %struct.GPR* %12782, i32 0, i32 5
  %12784 = getelementptr inbounds %struct.Reg, %struct.Reg* %12783, i32 0, i32 0
  %RCX.i1386 = bitcast %union.anon* %12784 to i64*
  %12785 = load i64, i64* %RAX.i1385
  %12786 = load i64, i64* %RCX.i1386
  %12787 = mul i64 %12786, 2
  %12788 = add i64 %12787, %12785
  %12789 = load i16, i16* %DX.i1384
  %12790 = zext i16 %12789 to i64
  %12791 = load i64, i64* %PC.i1383
  %12792 = add i64 %12791, 4
  store i64 %12792, i64* %PC.i1383
  %12793 = inttoptr i64 %12788 to i16*
  store i16 %12789, i16* %12793
  store %struct.Memory* %loadMem_4af2ed, %struct.Memory** %MEMORY
  %loadMem_4af2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12795 = getelementptr inbounds %struct.GPR, %struct.GPR* %12794, i32 0, i32 33
  %12796 = getelementptr inbounds %struct.Reg, %struct.Reg* %12795, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %12796 to i64*
  %12797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12798 = getelementptr inbounds %struct.GPR, %struct.GPR* %12797, i32 0, i32 1
  %12799 = getelementptr inbounds %struct.Reg, %struct.Reg* %12798, i32 0, i32 0
  %RAX.i1382 = bitcast %union.anon* %12799 to i64*
  %12800 = load i64, i64* %PC.i1381
  %12801 = add i64 %12800, 8
  store i64 %12801, i64* %PC.i1381
  %12802 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %12802, i64* %RAX.i1382, align 8
  store %struct.Memory* %loadMem_4af2f1, %struct.Memory** %MEMORY
  %loadMem_4af2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12804 = getelementptr inbounds %struct.GPR, %struct.GPR* %12803, i32 0, i32 33
  %12805 = getelementptr inbounds %struct.Reg, %struct.Reg* %12804, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %12805 to i64*
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12807 = getelementptr inbounds %struct.GPR, %struct.GPR* %12806, i32 0, i32 5
  %12808 = getelementptr inbounds %struct.Reg, %struct.Reg* %12807, i32 0, i32 0
  %RCX.i1379 = bitcast %union.anon* %12808 to i64*
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12810 = getelementptr inbounds %struct.GPR, %struct.GPR* %12809, i32 0, i32 15
  %12811 = getelementptr inbounds %struct.Reg, %struct.Reg* %12810, i32 0, i32 0
  %RBP.i1380 = bitcast %union.anon* %12811 to i64*
  %12812 = load i64, i64* %RBP.i1380
  %12813 = sub i64 %12812, 8
  %12814 = load i64, i64* %PC.i1378
  %12815 = add i64 %12814, 4
  store i64 %12815, i64* %PC.i1378
  %12816 = inttoptr i64 %12813 to i32*
  %12817 = load i32, i32* %12816
  %12818 = sext i32 %12817 to i64
  store i64 %12818, i64* %RCX.i1379, align 8
  store %struct.Memory* %loadMem_4af2f9, %struct.Memory** %MEMORY
  %loadMem_4af2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12820 = getelementptr inbounds %struct.GPR, %struct.GPR* %12819, i32 0, i32 33
  %12821 = getelementptr inbounds %struct.Reg, %struct.Reg* %12820, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %12821 to i64*
  %12822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12823 = getelementptr inbounds %struct.GPR, %struct.GPR* %12822, i32 0, i32 1
  %12824 = getelementptr inbounds %struct.Reg, %struct.Reg* %12823, i32 0, i32 0
  %RAX.i1376 = bitcast %union.anon* %12824 to i64*
  %12825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12826 = getelementptr inbounds %struct.GPR, %struct.GPR* %12825, i32 0, i32 5
  %12827 = getelementptr inbounds %struct.Reg, %struct.Reg* %12826, i32 0, i32 0
  %RCX.i1377 = bitcast %union.anon* %12827 to i64*
  %12828 = load i64, i64* %RAX.i1376
  %12829 = load i64, i64* %RCX.i1377
  %12830 = mul i64 %12829, 8
  %12831 = add i64 %12830, %12828
  %12832 = load i64, i64* %PC.i1375
  %12833 = add i64 %12832, 4
  store i64 %12833, i64* %PC.i1375
  %12834 = inttoptr i64 %12831 to i64*
  %12835 = load i64, i64* %12834
  store i64 %12835, i64* %RAX.i1376, align 8
  store %struct.Memory* %loadMem_4af2fd, %struct.Memory** %MEMORY
  %loadMem_4af301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12837 = getelementptr inbounds %struct.GPR, %struct.GPR* %12836, i32 0, i32 33
  %12838 = getelementptr inbounds %struct.Reg, %struct.Reg* %12837, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %12838 to i64*
  %12839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12840 = getelementptr inbounds %struct.GPR, %struct.GPR* %12839, i32 0, i32 1
  %12841 = getelementptr inbounds %struct.Reg, %struct.Reg* %12840, i32 0, i32 0
  %RAX.i1374 = bitcast %union.anon* %12841 to i64*
  %12842 = load i64, i64* %RAX.i1374
  %12843 = add i64 %12842, 6448
  %12844 = load i64, i64* %PC.i1373
  %12845 = add i64 %12844, 7
  store i64 %12845, i64* %PC.i1373
  %12846 = inttoptr i64 %12843 to i64*
  %12847 = load i64, i64* %12846
  store i64 %12847, i64* %RAX.i1374, align 8
  store %struct.Memory* %loadMem_4af301, %struct.Memory** %MEMORY
  %loadMem_4af308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12849 = getelementptr inbounds %struct.GPR, %struct.GPR* %12848, i32 0, i32 33
  %12850 = getelementptr inbounds %struct.Reg, %struct.Reg* %12849, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %12850 to i64*
  %12851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12852 = getelementptr inbounds %struct.GPR, %struct.GPR* %12851, i32 0, i32 5
  %12853 = getelementptr inbounds %struct.Reg, %struct.Reg* %12852, i32 0, i32 0
  %RCX.i1371 = bitcast %union.anon* %12853 to i64*
  %12854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12855 = getelementptr inbounds %struct.GPR, %struct.GPR* %12854, i32 0, i32 15
  %12856 = getelementptr inbounds %struct.Reg, %struct.Reg* %12855, i32 0, i32 0
  %RBP.i1372 = bitcast %union.anon* %12856 to i64*
  %12857 = load i64, i64* %RBP.i1372
  %12858 = sub i64 %12857, 12
  %12859 = load i64, i64* %PC.i1370
  %12860 = add i64 %12859, 4
  store i64 %12860, i64* %PC.i1370
  %12861 = inttoptr i64 %12858 to i32*
  %12862 = load i32, i32* %12861
  %12863 = sext i32 %12862 to i64
  store i64 %12863, i64* %RCX.i1371, align 8
  store %struct.Memory* %loadMem_4af308, %struct.Memory** %MEMORY
  %loadMem_4af30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12865 = getelementptr inbounds %struct.GPR, %struct.GPR* %12864, i32 0, i32 33
  %12866 = getelementptr inbounds %struct.Reg, %struct.Reg* %12865, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %12866 to i64*
  %12867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12868 = getelementptr inbounds %struct.GPR, %struct.GPR* %12867, i32 0, i32 1
  %12869 = getelementptr inbounds %struct.Reg, %struct.Reg* %12868, i32 0, i32 0
  %RAX.i1368 = bitcast %union.anon* %12869 to i64*
  %12870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12871 = getelementptr inbounds %struct.GPR, %struct.GPR* %12870, i32 0, i32 5
  %12872 = getelementptr inbounds %struct.Reg, %struct.Reg* %12871, i32 0, i32 0
  %RCX.i1369 = bitcast %union.anon* %12872 to i64*
  %12873 = load i64, i64* %RAX.i1368
  %12874 = load i64, i64* %RCX.i1369
  %12875 = mul i64 %12874, 8
  %12876 = add i64 %12875, %12873
  %12877 = load i64, i64* %PC.i1367
  %12878 = add i64 %12877, 4
  store i64 %12878, i64* %PC.i1367
  %12879 = inttoptr i64 %12876 to i64*
  %12880 = load i64, i64* %12879
  store i64 %12880, i64* %RAX.i1368, align 8
  store %struct.Memory* %loadMem_4af30c, %struct.Memory** %MEMORY
  %loadMem_4af310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12882 = getelementptr inbounds %struct.GPR, %struct.GPR* %12881, i32 0, i32 33
  %12883 = getelementptr inbounds %struct.Reg, %struct.Reg* %12882, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %12883 to i64*
  %12884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12885 = getelementptr inbounds %struct.GPR, %struct.GPR* %12884, i32 0, i32 5
  %12886 = getelementptr inbounds %struct.Reg, %struct.Reg* %12885, i32 0, i32 0
  %RCX.i1365 = bitcast %union.anon* %12886 to i64*
  %12887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12888 = getelementptr inbounds %struct.GPR, %struct.GPR* %12887, i32 0, i32 15
  %12889 = getelementptr inbounds %struct.Reg, %struct.Reg* %12888, i32 0, i32 0
  %RBP.i1366 = bitcast %union.anon* %12889 to i64*
  %12890 = load i64, i64* %RBP.i1366
  %12891 = sub i64 %12890, 16
  %12892 = load i64, i64* %PC.i1364
  %12893 = add i64 %12892, 4
  store i64 %12893, i64* %PC.i1364
  %12894 = inttoptr i64 %12891 to i32*
  %12895 = load i32, i32* %12894
  %12896 = sext i32 %12895 to i64
  store i64 %12896, i64* %RCX.i1365, align 8
  store %struct.Memory* %loadMem_4af310, %struct.Memory** %MEMORY
  %loadMem_4af314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12898 = getelementptr inbounds %struct.GPR, %struct.GPR* %12897, i32 0, i32 33
  %12899 = getelementptr inbounds %struct.Reg, %struct.Reg* %12898, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %12899 to i64*
  %12900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12901 = getelementptr inbounds %struct.GPR, %struct.GPR* %12900, i32 0, i32 7
  %12902 = getelementptr inbounds %struct.Reg, %struct.Reg* %12901, i32 0, i32 0
  %DX.i1361 = bitcast %union.anon* %12902 to i16*
  %12903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12904 = getelementptr inbounds %struct.GPR, %struct.GPR* %12903, i32 0, i32 1
  %12905 = getelementptr inbounds %struct.Reg, %struct.Reg* %12904, i32 0, i32 0
  %RAX.i1362 = bitcast %union.anon* %12905 to i64*
  %12906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12907 = getelementptr inbounds %struct.GPR, %struct.GPR* %12906, i32 0, i32 5
  %12908 = getelementptr inbounds %struct.Reg, %struct.Reg* %12907, i32 0, i32 0
  %RCX.i1363 = bitcast %union.anon* %12908 to i64*
  %12909 = load i64, i64* %RAX.i1362
  %12910 = load i64, i64* %RCX.i1363
  %12911 = mul i64 %12910, 2
  %12912 = add i64 %12911, %12909
  %12913 = load i64, i64* %PC.i1360
  %12914 = add i64 %12913, 4
  store i64 %12914, i64* %PC.i1360
  %12915 = inttoptr i64 %12912 to i16*
  %12916 = load i16, i16* %12915
  store i16 %12916, i16* %DX.i1361, align 2
  store %struct.Memory* %loadMem_4af314, %struct.Memory** %MEMORY
  %loadMem_4af318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12918 = getelementptr inbounds %struct.GPR, %struct.GPR* %12917, i32 0, i32 33
  %12919 = getelementptr inbounds %struct.Reg, %struct.Reg* %12918, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %12919 to i64*
  %12920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12921 = getelementptr inbounds %struct.GPR, %struct.GPR* %12920, i32 0, i32 1
  %12922 = getelementptr inbounds %struct.Reg, %struct.Reg* %12921, i32 0, i32 0
  %RAX.i1359 = bitcast %union.anon* %12922 to i64*
  %12923 = load i64, i64* %PC.i1358
  %12924 = add i64 %12923, 8
  store i64 %12924, i64* %PC.i1358
  %12925 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %12925, i64* %RAX.i1359, align 8
  store %struct.Memory* %loadMem_4af318, %struct.Memory** %MEMORY
  %loadMem_4af320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12927 = getelementptr inbounds %struct.GPR, %struct.GPR* %12926, i32 0, i32 33
  %12928 = getelementptr inbounds %struct.Reg, %struct.Reg* %12927, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %12928 to i64*
  %12929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12930 = getelementptr inbounds %struct.GPR, %struct.GPR* %12929, i32 0, i32 5
  %12931 = getelementptr inbounds %struct.Reg, %struct.Reg* %12930, i32 0, i32 0
  %RCX.i1356 = bitcast %union.anon* %12931 to i64*
  %12932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12933 = getelementptr inbounds %struct.GPR, %struct.GPR* %12932, i32 0, i32 15
  %12934 = getelementptr inbounds %struct.Reg, %struct.Reg* %12933, i32 0, i32 0
  %RBP.i1357 = bitcast %union.anon* %12934 to i64*
  %12935 = load i64, i64* %RBP.i1357
  %12936 = sub i64 %12935, 8
  %12937 = load i64, i64* %PC.i1355
  %12938 = add i64 %12937, 4
  store i64 %12938, i64* %PC.i1355
  %12939 = inttoptr i64 %12936 to i32*
  %12940 = load i32, i32* %12939
  %12941 = sext i32 %12940 to i64
  store i64 %12941, i64* %RCX.i1356, align 8
  store %struct.Memory* %loadMem_4af320, %struct.Memory** %MEMORY
  %loadMem_4af324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12943 = getelementptr inbounds %struct.GPR, %struct.GPR* %12942, i32 0, i32 33
  %12944 = getelementptr inbounds %struct.Reg, %struct.Reg* %12943, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %12944 to i64*
  %12945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12946 = getelementptr inbounds %struct.GPR, %struct.GPR* %12945, i32 0, i32 1
  %12947 = getelementptr inbounds %struct.Reg, %struct.Reg* %12946, i32 0, i32 0
  %RAX.i1353 = bitcast %union.anon* %12947 to i64*
  %12948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12949 = getelementptr inbounds %struct.GPR, %struct.GPR* %12948, i32 0, i32 5
  %12950 = getelementptr inbounds %struct.Reg, %struct.Reg* %12949, i32 0, i32 0
  %RCX.i1354 = bitcast %union.anon* %12950 to i64*
  %12951 = load i64, i64* %RAX.i1353
  %12952 = load i64, i64* %RCX.i1354
  %12953 = mul i64 %12952, 8
  %12954 = add i64 %12953, %12951
  %12955 = load i64, i64* %PC.i1352
  %12956 = add i64 %12955, 4
  store i64 %12956, i64* %PC.i1352
  %12957 = inttoptr i64 %12954 to i64*
  %12958 = load i64, i64* %12957
  store i64 %12958, i64* %RAX.i1353, align 8
  store %struct.Memory* %loadMem_4af324, %struct.Memory** %MEMORY
  %loadMem_4af328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12960 = getelementptr inbounds %struct.GPR, %struct.GPR* %12959, i32 0, i32 33
  %12961 = getelementptr inbounds %struct.Reg, %struct.Reg* %12960, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %12961 to i64*
  %12962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12963 = getelementptr inbounds %struct.GPR, %struct.GPR* %12962, i32 0, i32 1
  %12964 = getelementptr inbounds %struct.Reg, %struct.Reg* %12963, i32 0, i32 0
  %RAX.i1351 = bitcast %union.anon* %12964 to i64*
  %12965 = load i64, i64* %RAX.i1351
  %12966 = add i64 %12965, 6456
  %12967 = load i64, i64* %PC.i1350
  %12968 = add i64 %12967, 7
  store i64 %12968, i64* %PC.i1350
  %12969 = inttoptr i64 %12966 to i64*
  %12970 = load i64, i64* %12969
  store i64 %12970, i64* %RAX.i1351, align 8
  store %struct.Memory* %loadMem_4af328, %struct.Memory** %MEMORY
  %loadMem_4af32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12972 = getelementptr inbounds %struct.GPR, %struct.GPR* %12971, i32 0, i32 33
  %12973 = getelementptr inbounds %struct.Reg, %struct.Reg* %12972, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %12973 to i64*
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12975 = getelementptr inbounds %struct.GPR, %struct.GPR* %12974, i32 0, i32 5
  %12976 = getelementptr inbounds %struct.Reg, %struct.Reg* %12975, i32 0, i32 0
  %RCX.i1348 = bitcast %union.anon* %12976 to i64*
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12978 = getelementptr inbounds %struct.GPR, %struct.GPR* %12977, i32 0, i32 15
  %12979 = getelementptr inbounds %struct.Reg, %struct.Reg* %12978, i32 0, i32 0
  %RBP.i1349 = bitcast %union.anon* %12979 to i64*
  %12980 = load i64, i64* %RBP.i1349
  %12981 = sub i64 %12980, 12
  %12982 = load i64, i64* %PC.i1347
  %12983 = add i64 %12982, 4
  store i64 %12983, i64* %PC.i1347
  %12984 = inttoptr i64 %12981 to i32*
  %12985 = load i32, i32* %12984
  %12986 = sext i32 %12985 to i64
  store i64 %12986, i64* %RCX.i1348, align 8
  store %struct.Memory* %loadMem_4af32f, %struct.Memory** %MEMORY
  %loadMem_4af333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12988 = getelementptr inbounds %struct.GPR, %struct.GPR* %12987, i32 0, i32 33
  %12989 = getelementptr inbounds %struct.Reg, %struct.Reg* %12988, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %12989 to i64*
  %12990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12991 = getelementptr inbounds %struct.GPR, %struct.GPR* %12990, i32 0, i32 1
  %12992 = getelementptr inbounds %struct.Reg, %struct.Reg* %12991, i32 0, i32 0
  %RAX.i1345 = bitcast %union.anon* %12992 to i64*
  %12993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12994 = getelementptr inbounds %struct.GPR, %struct.GPR* %12993, i32 0, i32 5
  %12995 = getelementptr inbounds %struct.Reg, %struct.Reg* %12994, i32 0, i32 0
  %RCX.i1346 = bitcast %union.anon* %12995 to i64*
  %12996 = load i64, i64* %RAX.i1345
  %12997 = load i64, i64* %RCX.i1346
  %12998 = mul i64 %12997, 8
  %12999 = add i64 %12998, %12996
  %13000 = load i64, i64* %PC.i1344
  %13001 = add i64 %13000, 4
  store i64 %13001, i64* %PC.i1344
  %13002 = inttoptr i64 %12999 to i64*
  %13003 = load i64, i64* %13002
  store i64 %13003, i64* %RAX.i1345, align 8
  store %struct.Memory* %loadMem_4af333, %struct.Memory** %MEMORY
  %loadMem_4af337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13005 = getelementptr inbounds %struct.GPR, %struct.GPR* %13004, i32 0, i32 33
  %13006 = getelementptr inbounds %struct.Reg, %struct.Reg* %13005, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %13006 to i64*
  %13007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13008 = getelementptr inbounds %struct.GPR, %struct.GPR* %13007, i32 0, i32 5
  %13009 = getelementptr inbounds %struct.Reg, %struct.Reg* %13008, i32 0, i32 0
  %RCX.i1342 = bitcast %union.anon* %13009 to i64*
  %13010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13011 = getelementptr inbounds %struct.GPR, %struct.GPR* %13010, i32 0, i32 15
  %13012 = getelementptr inbounds %struct.Reg, %struct.Reg* %13011, i32 0, i32 0
  %RBP.i1343 = bitcast %union.anon* %13012 to i64*
  %13013 = load i64, i64* %RBP.i1343
  %13014 = sub i64 %13013, 16
  %13015 = load i64, i64* %PC.i1341
  %13016 = add i64 %13015, 4
  store i64 %13016, i64* %PC.i1341
  %13017 = inttoptr i64 %13014 to i32*
  %13018 = load i32, i32* %13017
  %13019 = sext i32 %13018 to i64
  store i64 %13019, i64* %RCX.i1342, align 8
  store %struct.Memory* %loadMem_4af337, %struct.Memory** %MEMORY
  %loadMem_4af33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13021 = getelementptr inbounds %struct.GPR, %struct.GPR* %13020, i32 0, i32 33
  %13022 = getelementptr inbounds %struct.Reg, %struct.Reg* %13021, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %13022 to i64*
  %13023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13024 = getelementptr inbounds %struct.GPR, %struct.GPR* %13023, i32 0, i32 7
  %13025 = getelementptr inbounds %struct.Reg, %struct.Reg* %13024, i32 0, i32 0
  %DX.i = bitcast %union.anon* %13025 to i16*
  %13026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13027 = getelementptr inbounds %struct.GPR, %struct.GPR* %13026, i32 0, i32 1
  %13028 = getelementptr inbounds %struct.Reg, %struct.Reg* %13027, i32 0, i32 0
  %RAX.i1339 = bitcast %union.anon* %13028 to i64*
  %13029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13030 = getelementptr inbounds %struct.GPR, %struct.GPR* %13029, i32 0, i32 5
  %13031 = getelementptr inbounds %struct.Reg, %struct.Reg* %13030, i32 0, i32 0
  %RCX.i1340 = bitcast %union.anon* %13031 to i64*
  %13032 = load i64, i64* %RAX.i1339
  %13033 = load i64, i64* %RCX.i1340
  %13034 = mul i64 %13033, 2
  %13035 = add i64 %13034, %13032
  %13036 = load i16, i16* %DX.i
  %13037 = zext i16 %13036 to i64
  %13038 = load i64, i64* %PC.i1338
  %13039 = add i64 %13038, 4
  store i64 %13039, i64* %PC.i1338
  %13040 = inttoptr i64 %13035 to i16*
  store i16 %13036, i16* %13040
  store %struct.Memory* %loadMem_4af33b, %struct.Memory** %MEMORY
  %loadMem_4af33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13042 = getelementptr inbounds %struct.GPR, %struct.GPR* %13041, i32 0, i32 33
  %13043 = getelementptr inbounds %struct.Reg, %struct.Reg* %13042, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %13043 to i64*
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13045 = getelementptr inbounds %struct.GPR, %struct.GPR* %13044, i32 0, i32 1
  %13046 = getelementptr inbounds %struct.Reg, %struct.Reg* %13045, i32 0, i32 0
  %RAX.i1336 = bitcast %union.anon* %13046 to i64*
  %13047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13048 = getelementptr inbounds %struct.GPR, %struct.GPR* %13047, i32 0, i32 15
  %13049 = getelementptr inbounds %struct.Reg, %struct.Reg* %13048, i32 0, i32 0
  %RBP.i1337 = bitcast %union.anon* %13049 to i64*
  %13050 = load i64, i64* %RBP.i1337
  %13051 = sub i64 %13050, 16
  %13052 = load i64, i64* %PC.i1335
  %13053 = add i64 %13052, 3
  store i64 %13053, i64* %PC.i1335
  %13054 = inttoptr i64 %13051 to i32*
  %13055 = load i32, i32* %13054
  %13056 = zext i32 %13055 to i64
  store i64 %13056, i64* %RAX.i1336, align 8
  store %struct.Memory* %loadMem_4af33f, %struct.Memory** %MEMORY
  %loadMem_4af342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13058 = getelementptr inbounds %struct.GPR, %struct.GPR* %13057, i32 0, i32 33
  %13059 = getelementptr inbounds %struct.Reg, %struct.Reg* %13058, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %13059 to i64*
  %13060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13061 = getelementptr inbounds %struct.GPR, %struct.GPR* %13060, i32 0, i32 1
  %13062 = getelementptr inbounds %struct.Reg, %struct.Reg* %13061, i32 0, i32 0
  %RAX.i1334 = bitcast %union.anon* %13062 to i64*
  %13063 = load i64, i64* %RAX.i1334
  %13064 = load i64, i64* %PC.i1333
  %13065 = add i64 %13064, 3
  store i64 %13065, i64* %PC.i1333
  %13066 = trunc i64 %13063 to i32
  %13067 = add i32 1, %13066
  %13068 = zext i32 %13067 to i64
  store i64 %13068, i64* %RAX.i1334, align 8
  %13069 = icmp ult i32 %13067, %13066
  %13070 = icmp ult i32 %13067, 1
  %13071 = or i1 %13069, %13070
  %13072 = zext i1 %13071 to i8
  %13073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13072, i8* %13073, align 1
  %13074 = and i32 %13067, 255
  %13075 = call i32 @llvm.ctpop.i32(i32 %13074)
  %13076 = trunc i32 %13075 to i8
  %13077 = and i8 %13076, 1
  %13078 = xor i8 %13077, 1
  %13079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13078, i8* %13079, align 1
  %13080 = xor i64 1, %13063
  %13081 = trunc i64 %13080 to i32
  %13082 = xor i32 %13081, %13067
  %13083 = lshr i32 %13082, 4
  %13084 = trunc i32 %13083 to i8
  %13085 = and i8 %13084, 1
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13085, i8* %13086, align 1
  %13087 = icmp eq i32 %13067, 0
  %13088 = zext i1 %13087 to i8
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13088, i8* %13089, align 1
  %13090 = lshr i32 %13067, 31
  %13091 = trunc i32 %13090 to i8
  %13092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13091, i8* %13092, align 1
  %13093 = lshr i32 %13066, 31
  %13094 = xor i32 %13090, %13093
  %13095 = add i32 %13094, %13090
  %13096 = icmp eq i32 %13095, 2
  %13097 = zext i1 %13096 to i8
  %13098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13097, i8* %13098, align 1
  store %struct.Memory* %loadMem_4af342, %struct.Memory** %MEMORY
  %loadMem_4af345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13100 = getelementptr inbounds %struct.GPR, %struct.GPR* %13099, i32 0, i32 33
  %13101 = getelementptr inbounds %struct.Reg, %struct.Reg* %13100, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %13101 to i64*
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 1
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %EAX.i1331 = bitcast %union.anon* %13104 to i32*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 15
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %RBP.i1332 = bitcast %union.anon* %13107 to i64*
  %13108 = load i64, i64* %RBP.i1332
  %13109 = sub i64 %13108, 16
  %13110 = load i32, i32* %EAX.i1331
  %13111 = zext i32 %13110 to i64
  %13112 = load i64, i64* %PC.i1330
  %13113 = add i64 %13112, 3
  store i64 %13113, i64* %PC.i1330
  %13114 = inttoptr i64 %13109 to i32*
  store i32 %13110, i32* %13114
  store %struct.Memory* %loadMem_4af345, %struct.Memory** %MEMORY
  %loadMem_4af348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13116 = getelementptr inbounds %struct.GPR, %struct.GPR* %13115, i32 0, i32 33
  %13117 = getelementptr inbounds %struct.Reg, %struct.Reg* %13116, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %13117 to i64*
  %13118 = load i64, i64* %PC.i1329
  %13119 = add i64 %13118, -193
  %13120 = load i64, i64* %PC.i1329
  %13121 = add i64 %13120, 5
  store i64 %13121, i64* %PC.i1329
  %13122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13119, i64* %13122, align 8
  store %struct.Memory* %loadMem_4af348, %struct.Memory** %MEMORY
  br label %block_.L_4af287

block_.L_4af34d:                                  ; preds = %block_.L_4af287
  %loadMem_4af34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13124 = getelementptr inbounds %struct.GPR, %struct.GPR* %13123, i32 0, i32 33
  %13125 = getelementptr inbounds %struct.Reg, %struct.Reg* %13124, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %13125 to i64*
  %13126 = load i64, i64* %PC.i1328
  %13127 = add i64 %13126, 5
  %13128 = load i64, i64* %PC.i1328
  %13129 = add i64 %13128, 5
  store i64 %13129, i64* %PC.i1328
  %13130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13127, i64* %13130, align 8
  store %struct.Memory* %loadMem_4af34d, %struct.Memory** %MEMORY
  br label %block_.L_4af352

block_.L_4af352:                                  ; preds = %block_.L_4af34d
  %loadMem_4af352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13132 = getelementptr inbounds %struct.GPR, %struct.GPR* %13131, i32 0, i32 33
  %13133 = getelementptr inbounds %struct.Reg, %struct.Reg* %13132, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %13133 to i64*
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13135 = getelementptr inbounds %struct.GPR, %struct.GPR* %13134, i32 0, i32 1
  %13136 = getelementptr inbounds %struct.Reg, %struct.Reg* %13135, i32 0, i32 0
  %RAX.i1326 = bitcast %union.anon* %13136 to i64*
  %13137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13138 = getelementptr inbounds %struct.GPR, %struct.GPR* %13137, i32 0, i32 15
  %13139 = getelementptr inbounds %struct.Reg, %struct.Reg* %13138, i32 0, i32 0
  %RBP.i1327 = bitcast %union.anon* %13139 to i64*
  %13140 = load i64, i64* %RBP.i1327
  %13141 = sub i64 %13140, 12
  %13142 = load i64, i64* %PC.i1325
  %13143 = add i64 %13142, 3
  store i64 %13143, i64* %PC.i1325
  %13144 = inttoptr i64 %13141 to i32*
  %13145 = load i32, i32* %13144
  %13146 = zext i32 %13145 to i64
  store i64 %13146, i64* %RAX.i1326, align 8
  store %struct.Memory* %loadMem_4af352, %struct.Memory** %MEMORY
  %loadMem_4af355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13148 = getelementptr inbounds %struct.GPR, %struct.GPR* %13147, i32 0, i32 33
  %13149 = getelementptr inbounds %struct.Reg, %struct.Reg* %13148, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %13149 to i64*
  %13150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13151 = getelementptr inbounds %struct.GPR, %struct.GPR* %13150, i32 0, i32 1
  %13152 = getelementptr inbounds %struct.Reg, %struct.Reg* %13151, i32 0, i32 0
  %RAX.i1324 = bitcast %union.anon* %13152 to i64*
  %13153 = load i64, i64* %RAX.i1324
  %13154 = load i64, i64* %PC.i1323
  %13155 = add i64 %13154, 3
  store i64 %13155, i64* %PC.i1323
  %13156 = trunc i64 %13153 to i32
  %13157 = add i32 1, %13156
  %13158 = zext i32 %13157 to i64
  store i64 %13158, i64* %RAX.i1324, align 8
  %13159 = icmp ult i32 %13157, %13156
  %13160 = icmp ult i32 %13157, 1
  %13161 = or i1 %13159, %13160
  %13162 = zext i1 %13161 to i8
  %13163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13162, i8* %13163, align 1
  %13164 = and i32 %13157, 255
  %13165 = call i32 @llvm.ctpop.i32(i32 %13164)
  %13166 = trunc i32 %13165 to i8
  %13167 = and i8 %13166, 1
  %13168 = xor i8 %13167, 1
  %13169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13168, i8* %13169, align 1
  %13170 = xor i64 1, %13153
  %13171 = trunc i64 %13170 to i32
  %13172 = xor i32 %13171, %13157
  %13173 = lshr i32 %13172, 4
  %13174 = trunc i32 %13173 to i8
  %13175 = and i8 %13174, 1
  %13176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13175, i8* %13176, align 1
  %13177 = icmp eq i32 %13157, 0
  %13178 = zext i1 %13177 to i8
  %13179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13178, i8* %13179, align 1
  %13180 = lshr i32 %13157, 31
  %13181 = trunc i32 %13180 to i8
  %13182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13181, i8* %13182, align 1
  %13183 = lshr i32 %13156, 31
  %13184 = xor i32 %13180, %13183
  %13185 = add i32 %13184, %13180
  %13186 = icmp eq i32 %13185, 2
  %13187 = zext i1 %13186 to i8
  %13188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13187, i8* %13188, align 1
  store %struct.Memory* %loadMem_4af355, %struct.Memory** %MEMORY
  %loadMem_4af358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13190 = getelementptr inbounds %struct.GPR, %struct.GPR* %13189, i32 0, i32 33
  %13191 = getelementptr inbounds %struct.Reg, %struct.Reg* %13190, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %13191 to i64*
  %13192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13193 = getelementptr inbounds %struct.GPR, %struct.GPR* %13192, i32 0, i32 1
  %13194 = getelementptr inbounds %struct.Reg, %struct.Reg* %13193, i32 0, i32 0
  %EAX.i1321 = bitcast %union.anon* %13194 to i32*
  %13195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13196 = getelementptr inbounds %struct.GPR, %struct.GPR* %13195, i32 0, i32 15
  %13197 = getelementptr inbounds %struct.Reg, %struct.Reg* %13196, i32 0, i32 0
  %RBP.i1322 = bitcast %union.anon* %13197 to i64*
  %13198 = load i64, i64* %RBP.i1322
  %13199 = sub i64 %13198, 12
  %13200 = load i32, i32* %EAX.i1321
  %13201 = zext i32 %13200 to i64
  %13202 = load i64, i64* %PC.i1320
  %13203 = add i64 %13202, 3
  store i64 %13203, i64* %PC.i1320
  %13204 = inttoptr i64 %13199 to i32*
  store i32 %13200, i32* %13204
  store %struct.Memory* %loadMem_4af358, %struct.Memory** %MEMORY
  %loadMem_4af35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13206 = getelementptr inbounds %struct.GPR, %struct.GPR* %13205, i32 0, i32 33
  %13207 = getelementptr inbounds %struct.Reg, %struct.Reg* %13206, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %13207 to i64*
  %13208 = load i64, i64* %PC.i1319
  %13209 = add i64 %13208, -247
  %13210 = load i64, i64* %PC.i1319
  %13211 = add i64 %13210, 5
  store i64 %13211, i64* %PC.i1319
  %13212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13209, i64* %13212, align 8
  store %struct.Memory* %loadMem_4af35b, %struct.Memory** %MEMORY
  br label %block_.L_4af264

block_.L_4af360:                                  ; preds = %block_.L_4af264
  %loadMem_4af360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13214 = getelementptr inbounds %struct.GPR, %struct.GPR* %13213, i32 0, i32 33
  %13215 = getelementptr inbounds %struct.Reg, %struct.Reg* %13214, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %13215 to i64*
  %13216 = load i64, i64* %PC.i1318
  %13217 = add i64 %13216, 5
  %13218 = load i64, i64* %PC.i1318
  %13219 = add i64 %13218, 5
  store i64 %13219, i64* %PC.i1318
  %13220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13217, i64* %13220, align 8
  store %struct.Memory* %loadMem_4af360, %struct.Memory** %MEMORY
  br label %block_.L_4af365

block_.L_4af365:                                  ; preds = %block_.L_4af360
  %loadMem_4af365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13222 = getelementptr inbounds %struct.GPR, %struct.GPR* %13221, i32 0, i32 33
  %13223 = getelementptr inbounds %struct.Reg, %struct.Reg* %13222, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %13223 to i64*
  %13224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13225 = getelementptr inbounds %struct.GPR, %struct.GPR* %13224, i32 0, i32 1
  %13226 = getelementptr inbounds %struct.Reg, %struct.Reg* %13225, i32 0, i32 0
  %RAX.i1316 = bitcast %union.anon* %13226 to i64*
  %13227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13228 = getelementptr inbounds %struct.GPR, %struct.GPR* %13227, i32 0, i32 15
  %13229 = getelementptr inbounds %struct.Reg, %struct.Reg* %13228, i32 0, i32 0
  %RBP.i1317 = bitcast %union.anon* %13229 to i64*
  %13230 = load i64, i64* %RBP.i1317
  %13231 = sub i64 %13230, 8
  %13232 = load i64, i64* %PC.i1315
  %13233 = add i64 %13232, 3
  store i64 %13233, i64* %PC.i1315
  %13234 = inttoptr i64 %13231 to i32*
  %13235 = load i32, i32* %13234
  %13236 = zext i32 %13235 to i64
  store i64 %13236, i64* %RAX.i1316, align 8
  store %struct.Memory* %loadMem_4af365, %struct.Memory** %MEMORY
  %loadMem_4af368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13238 = getelementptr inbounds %struct.GPR, %struct.GPR* %13237, i32 0, i32 33
  %13239 = getelementptr inbounds %struct.Reg, %struct.Reg* %13238, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %13239 to i64*
  %13240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13241 = getelementptr inbounds %struct.GPR, %struct.GPR* %13240, i32 0, i32 1
  %13242 = getelementptr inbounds %struct.Reg, %struct.Reg* %13241, i32 0, i32 0
  %RAX.i1314 = bitcast %union.anon* %13242 to i64*
  %13243 = load i64, i64* %RAX.i1314
  %13244 = load i64, i64* %PC.i1313
  %13245 = add i64 %13244, 3
  store i64 %13245, i64* %PC.i1313
  %13246 = trunc i64 %13243 to i32
  %13247 = add i32 1, %13246
  %13248 = zext i32 %13247 to i64
  store i64 %13248, i64* %RAX.i1314, align 8
  %13249 = icmp ult i32 %13247, %13246
  %13250 = icmp ult i32 %13247, 1
  %13251 = or i1 %13249, %13250
  %13252 = zext i1 %13251 to i8
  %13253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13252, i8* %13253, align 1
  %13254 = and i32 %13247, 255
  %13255 = call i32 @llvm.ctpop.i32(i32 %13254)
  %13256 = trunc i32 %13255 to i8
  %13257 = and i8 %13256, 1
  %13258 = xor i8 %13257, 1
  %13259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13258, i8* %13259, align 1
  %13260 = xor i64 1, %13243
  %13261 = trunc i64 %13260 to i32
  %13262 = xor i32 %13261, %13247
  %13263 = lshr i32 %13262, 4
  %13264 = trunc i32 %13263 to i8
  %13265 = and i8 %13264, 1
  %13266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13265, i8* %13266, align 1
  %13267 = icmp eq i32 %13247, 0
  %13268 = zext i1 %13267 to i8
  %13269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13268, i8* %13269, align 1
  %13270 = lshr i32 %13247, 31
  %13271 = trunc i32 %13270 to i8
  %13272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13271, i8* %13272, align 1
  %13273 = lshr i32 %13246, 31
  %13274 = xor i32 %13270, %13273
  %13275 = add i32 %13274, %13270
  %13276 = icmp eq i32 %13275, 2
  %13277 = zext i1 %13276 to i8
  %13278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13277, i8* %13278, align 1
  store %struct.Memory* %loadMem_4af368, %struct.Memory** %MEMORY
  %loadMem_4af36b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13280 = getelementptr inbounds %struct.GPR, %struct.GPR* %13279, i32 0, i32 33
  %13281 = getelementptr inbounds %struct.Reg, %struct.Reg* %13280, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %13281 to i64*
  %13282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13283 = getelementptr inbounds %struct.GPR, %struct.GPR* %13282, i32 0, i32 1
  %13284 = getelementptr inbounds %struct.Reg, %struct.Reg* %13283, i32 0, i32 0
  %EAX.i1311 = bitcast %union.anon* %13284 to i32*
  %13285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13286 = getelementptr inbounds %struct.GPR, %struct.GPR* %13285, i32 0, i32 15
  %13287 = getelementptr inbounds %struct.Reg, %struct.Reg* %13286, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %13287 to i64*
  %13288 = load i64, i64* %RBP.i1312
  %13289 = sub i64 %13288, 8
  %13290 = load i32, i32* %EAX.i1311
  %13291 = zext i32 %13290 to i64
  %13292 = load i64, i64* %PC.i1310
  %13293 = add i64 %13292, 3
  store i64 %13293, i64* %PC.i1310
  %13294 = inttoptr i64 %13289 to i32*
  store i32 %13290, i32* %13294
  store %struct.Memory* %loadMem_4af36b, %struct.Memory** %MEMORY
  %loadMem_4af36e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13296 = getelementptr inbounds %struct.GPR, %struct.GPR* %13295, i32 0, i32 33
  %13297 = getelementptr inbounds %struct.Reg, %struct.Reg* %13296, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %13297 to i64*
  %13298 = load i64, i64* %PC.i1309
  %13299 = add i64 %13298, -468
  %13300 = load i64, i64* %PC.i1309
  %13301 = add i64 %13300, 5
  store i64 %13301, i64* %PC.i1309
  %13302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13299, i64* %13302, align 8
  store %struct.Memory* %loadMem_4af36e, %struct.Memory** %MEMORY
  br label %block_.L_4af19a

block_.L_4af373:                                  ; preds = %block_.L_4af19a
  %loadMem_4af373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13304 = getelementptr inbounds %struct.GPR, %struct.GPR* %13303, i32 0, i32 33
  %13305 = getelementptr inbounds %struct.Reg, %struct.Reg* %13304, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %13305 to i64*
  %13306 = load i64, i64* %PC.i1308
  %13307 = add i64 %13306, 5
  %13308 = load i64, i64* %PC.i1308
  %13309 = add i64 %13308, 5
  store i64 %13309, i64* %PC.i1308
  %13310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13307, i64* %13310, align 8
  store %struct.Memory* %loadMem_4af373, %struct.Memory** %MEMORY
  br label %block_.L_4af378

block_.L_4af378:                                  ; preds = %block_.L_4af373
  %loadMem_4af378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13312 = getelementptr inbounds %struct.GPR, %struct.GPR* %13311, i32 0, i32 33
  %13313 = getelementptr inbounds %struct.Reg, %struct.Reg* %13312, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %13313 to i64*
  %13314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13315 = getelementptr inbounds %struct.GPR, %struct.GPR* %13314, i32 0, i32 1
  %13316 = getelementptr inbounds %struct.Reg, %struct.Reg* %13315, i32 0, i32 0
  %RAX.i1306 = bitcast %union.anon* %13316 to i64*
  %13317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13318 = getelementptr inbounds %struct.GPR, %struct.GPR* %13317, i32 0, i32 15
  %13319 = getelementptr inbounds %struct.Reg, %struct.Reg* %13318, i32 0, i32 0
  %RBP.i1307 = bitcast %union.anon* %13319 to i64*
  %13320 = load i64, i64* %RBP.i1307
  %13321 = sub i64 %13320, 4
  %13322 = load i64, i64* %PC.i1305
  %13323 = add i64 %13322, 3
  store i64 %13323, i64* %PC.i1305
  %13324 = inttoptr i64 %13321 to i32*
  %13325 = load i32, i32* %13324
  %13326 = zext i32 %13325 to i64
  store i64 %13326, i64* %RAX.i1306, align 8
  store %struct.Memory* %loadMem_4af378, %struct.Memory** %MEMORY
  %loadMem_4af37b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13328 = getelementptr inbounds %struct.GPR, %struct.GPR* %13327, i32 0, i32 33
  %13329 = getelementptr inbounds %struct.Reg, %struct.Reg* %13328, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %13329 to i64*
  %13330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13331 = getelementptr inbounds %struct.GPR, %struct.GPR* %13330, i32 0, i32 1
  %13332 = getelementptr inbounds %struct.Reg, %struct.Reg* %13331, i32 0, i32 0
  %RAX.i1304 = bitcast %union.anon* %13332 to i64*
  %13333 = load i64, i64* %RAX.i1304
  %13334 = load i64, i64* %PC.i1303
  %13335 = add i64 %13334, 3
  store i64 %13335, i64* %PC.i1303
  %13336 = trunc i64 %13333 to i32
  %13337 = add i32 1, %13336
  %13338 = zext i32 %13337 to i64
  store i64 %13338, i64* %RAX.i1304, align 8
  %13339 = icmp ult i32 %13337, %13336
  %13340 = icmp ult i32 %13337, 1
  %13341 = or i1 %13339, %13340
  %13342 = zext i1 %13341 to i8
  %13343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13342, i8* %13343, align 1
  %13344 = and i32 %13337, 255
  %13345 = call i32 @llvm.ctpop.i32(i32 %13344)
  %13346 = trunc i32 %13345 to i8
  %13347 = and i8 %13346, 1
  %13348 = xor i8 %13347, 1
  %13349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13348, i8* %13349, align 1
  %13350 = xor i64 1, %13333
  %13351 = trunc i64 %13350 to i32
  %13352 = xor i32 %13351, %13337
  %13353 = lshr i32 %13352, 4
  %13354 = trunc i32 %13353 to i8
  %13355 = and i8 %13354, 1
  %13356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13355, i8* %13356, align 1
  %13357 = icmp eq i32 %13337, 0
  %13358 = zext i1 %13357 to i8
  %13359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13358, i8* %13359, align 1
  %13360 = lshr i32 %13337, 31
  %13361 = trunc i32 %13360 to i8
  %13362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13361, i8* %13362, align 1
  %13363 = lshr i32 %13336, 31
  %13364 = xor i32 %13360, %13363
  %13365 = add i32 %13364, %13360
  %13366 = icmp eq i32 %13365, 2
  %13367 = zext i1 %13366 to i8
  %13368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13367, i8* %13368, align 1
  store %struct.Memory* %loadMem_4af37b, %struct.Memory** %MEMORY
  %loadMem_4af37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13370 = getelementptr inbounds %struct.GPR, %struct.GPR* %13369, i32 0, i32 33
  %13371 = getelementptr inbounds %struct.Reg, %struct.Reg* %13370, i32 0, i32 0
  %PC.i1300 = bitcast %union.anon* %13371 to i64*
  %13372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13373 = getelementptr inbounds %struct.GPR, %struct.GPR* %13372, i32 0, i32 1
  %13374 = getelementptr inbounds %struct.Reg, %struct.Reg* %13373, i32 0, i32 0
  %EAX.i1301 = bitcast %union.anon* %13374 to i32*
  %13375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13376 = getelementptr inbounds %struct.GPR, %struct.GPR* %13375, i32 0, i32 15
  %13377 = getelementptr inbounds %struct.Reg, %struct.Reg* %13376, i32 0, i32 0
  %RBP.i1302 = bitcast %union.anon* %13377 to i64*
  %13378 = load i64, i64* %RBP.i1302
  %13379 = sub i64 %13378, 4
  %13380 = load i32, i32* %EAX.i1301
  %13381 = zext i32 %13380 to i64
  %13382 = load i64, i64* %PC.i1300
  %13383 = add i64 %13382, 3
  store i64 %13383, i64* %PC.i1300
  %13384 = inttoptr i64 %13379 to i32*
  store i32 %13380, i32* %13384
  store %struct.Memory* %loadMem_4af37e, %struct.Memory** %MEMORY
  %loadMem_4af381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13386 = getelementptr inbounds %struct.GPR, %struct.GPR* %13385, i32 0, i32 33
  %13387 = getelementptr inbounds %struct.Reg, %struct.Reg* %13386, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %13387 to i64*
  %13388 = load i64, i64* %PC.i1299
  %13389 = add i64 %13388, -510
  %13390 = load i64, i64* %PC.i1299
  %13391 = add i64 %13390, 5
  store i64 %13391, i64* %PC.i1299
  %13392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13389, i64* %13392, align 8
  store %struct.Memory* %loadMem_4af381, %struct.Memory** %MEMORY
  br label %block_.L_4af183

block_.L_4af386:                                  ; preds = %block_.L_4af183
  %loadMem_4af386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13394 = getelementptr inbounds %struct.GPR, %struct.GPR* %13393, i32 0, i32 33
  %13395 = getelementptr inbounds %struct.Reg, %struct.Reg* %13394, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %13395 to i64*
  %13396 = load i64, i64* %PC.i1298
  %13397 = add i64 %13396, 2556
  %13398 = load i64, i64* %PC.i1298
  %13399 = add i64 %13398, 5
  store i64 %13399, i64* %PC.i1298
  %13400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13397, i64* %13400, align 8
  store %struct.Memory* %loadMem_4af386, %struct.Memory** %MEMORY
  br label %block_.L_4afd82

block_.L_4af38b:                                  ; preds = %block_.L_4aeef3
  %loadMem_4af38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13402 = getelementptr inbounds %struct.GPR, %struct.GPR* %13401, i32 0, i32 33
  %13403 = getelementptr inbounds %struct.Reg, %struct.Reg* %13402, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %13403 to i64*
  %13404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13405 = getelementptr inbounds %struct.GPR, %struct.GPR* %13404, i32 0, i32 15
  %13406 = getelementptr inbounds %struct.Reg, %struct.Reg* %13405, i32 0, i32 0
  %RBP.i1297 = bitcast %union.anon* %13406 to i64*
  %13407 = load i64, i64* %RBP.i1297
  %13408 = sub i64 %13407, 4
  %13409 = load i64, i64* %PC.i1296
  %13410 = add i64 %13409, 7
  store i64 %13410, i64* %PC.i1296
  %13411 = inttoptr i64 %13408 to i32*
  store i32 0, i32* %13411
  store %struct.Memory* %loadMem_4af38b, %struct.Memory** %MEMORY
  br label %block_.L_4af392

block_.L_4af392:                                  ; preds = %block_.L_4af3f9, %block_.L_4af38b
  %loadMem_4af392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13413 = getelementptr inbounds %struct.GPR, %struct.GPR* %13412, i32 0, i32 33
  %13414 = getelementptr inbounds %struct.Reg, %struct.Reg* %13413, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %13414 to i64*
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13416 = getelementptr inbounds %struct.GPR, %struct.GPR* %13415, i32 0, i32 1
  %13417 = getelementptr inbounds %struct.Reg, %struct.Reg* %13416, i32 0, i32 0
  %RAX.i1294 = bitcast %union.anon* %13417 to i64*
  %13418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13419 = getelementptr inbounds %struct.GPR, %struct.GPR* %13418, i32 0, i32 15
  %13420 = getelementptr inbounds %struct.Reg, %struct.Reg* %13419, i32 0, i32 0
  %RBP.i1295 = bitcast %union.anon* %13420 to i64*
  %13421 = load i64, i64* %RBP.i1295
  %13422 = sub i64 %13421, 4
  %13423 = load i64, i64* %PC.i1293
  %13424 = add i64 %13423, 3
  store i64 %13424, i64* %PC.i1293
  %13425 = inttoptr i64 %13422 to i32*
  %13426 = load i32, i32* %13425
  %13427 = zext i32 %13426 to i64
  store i64 %13427, i64* %RAX.i1294, align 8
  store %struct.Memory* %loadMem_4af392, %struct.Memory** %MEMORY
  %loadMem_4af395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13429 = getelementptr inbounds %struct.GPR, %struct.GPR* %13428, i32 0, i32 33
  %13430 = getelementptr inbounds %struct.Reg, %struct.Reg* %13429, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %13430 to i64*
  %13431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13432 = getelementptr inbounds %struct.GPR, %struct.GPR* %13431, i32 0, i32 5
  %13433 = getelementptr inbounds %struct.Reg, %struct.Reg* %13432, i32 0, i32 0
  %RCX.i1292 = bitcast %union.anon* %13433 to i64*
  %13434 = load i64, i64* %PC.i1291
  %13435 = add i64 %13434, 8
  store i64 %13435, i64* %PC.i1291
  %13436 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13436, i64* %RCX.i1292, align 8
  store %struct.Memory* %loadMem_4af395, %struct.Memory** %MEMORY
  %loadMem_4af39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13438 = getelementptr inbounds %struct.GPR, %struct.GPR* %13437, i32 0, i32 33
  %13439 = getelementptr inbounds %struct.Reg, %struct.Reg* %13438, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %13439 to i64*
  %13440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13441 = getelementptr inbounds %struct.GPR, %struct.GPR* %13440, i32 0, i32 1
  %13442 = getelementptr inbounds %struct.Reg, %struct.Reg* %13441, i32 0, i32 0
  %EAX.i1289 = bitcast %union.anon* %13442 to i32*
  %13443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13444 = getelementptr inbounds %struct.GPR, %struct.GPR* %13443, i32 0, i32 5
  %13445 = getelementptr inbounds %struct.Reg, %struct.Reg* %13444, i32 0, i32 0
  %RCX.i1290 = bitcast %union.anon* %13445 to i64*
  %13446 = load i32, i32* %EAX.i1289
  %13447 = zext i32 %13446 to i64
  %13448 = load i64, i64* %RCX.i1290
  %13449 = add i64 %13448, 60
  %13450 = load i64, i64* %PC.i1288
  %13451 = add i64 %13450, 3
  store i64 %13451, i64* %PC.i1288
  %13452 = inttoptr i64 %13449 to i32*
  %13453 = load i32, i32* %13452
  %13454 = sub i32 %13446, %13453
  %13455 = icmp ult i32 %13446, %13453
  %13456 = zext i1 %13455 to i8
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13456, i8* %13457, align 1
  %13458 = and i32 %13454, 255
  %13459 = call i32 @llvm.ctpop.i32(i32 %13458)
  %13460 = trunc i32 %13459 to i8
  %13461 = and i8 %13460, 1
  %13462 = xor i8 %13461, 1
  %13463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13462, i8* %13463, align 1
  %13464 = xor i32 %13453, %13446
  %13465 = xor i32 %13464, %13454
  %13466 = lshr i32 %13465, 4
  %13467 = trunc i32 %13466 to i8
  %13468 = and i8 %13467, 1
  %13469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13468, i8* %13469, align 1
  %13470 = icmp eq i32 %13454, 0
  %13471 = zext i1 %13470 to i8
  %13472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13471, i8* %13472, align 1
  %13473 = lshr i32 %13454, 31
  %13474 = trunc i32 %13473 to i8
  %13475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13474, i8* %13475, align 1
  %13476 = lshr i32 %13446, 31
  %13477 = lshr i32 %13453, 31
  %13478 = xor i32 %13477, %13476
  %13479 = xor i32 %13473, %13476
  %13480 = add i32 %13479, %13478
  %13481 = icmp eq i32 %13480, 2
  %13482 = zext i1 %13481 to i8
  %13483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13482, i8* %13483, align 1
  store %struct.Memory* %loadMem_4af39d, %struct.Memory** %MEMORY
  %loadMem_4af3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13485 = getelementptr inbounds %struct.GPR, %struct.GPR* %13484, i32 0, i32 33
  %13486 = getelementptr inbounds %struct.Reg, %struct.Reg* %13485, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %13486 to i64*
  %13487 = load i64, i64* %PC.i1287
  %13488 = add i64 %13487, 103
  %13489 = load i64, i64* %PC.i1287
  %13490 = add i64 %13489, 6
  %13491 = load i64, i64* %PC.i1287
  %13492 = add i64 %13491, 6
  store i64 %13492, i64* %PC.i1287
  %13493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13494 = load i8, i8* %13493, align 1
  %13495 = icmp ne i8 %13494, 0
  %13496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13497 = load i8, i8* %13496, align 1
  %13498 = icmp ne i8 %13497, 0
  %13499 = xor i1 %13495, %13498
  %13500 = xor i1 %13499, true
  %13501 = zext i1 %13500 to i8
  store i8 %13501, i8* %BRANCH_TAKEN, align 1
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13503 = select i1 %13499, i64 %13490, i64 %13488
  store i64 %13503, i64* %13502, align 8
  store %struct.Memory* %loadMem_4af3a0, %struct.Memory** %MEMORY
  %loadBr_4af3a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af3a0 = icmp eq i8 %loadBr_4af3a0, 1
  br i1 %cmpBr_4af3a0, label %block_.L_4af407, label %block_4af3a6

block_4af3a6:                                     ; preds = %block_.L_4af392
  %loadMem_4af3a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13505 = getelementptr inbounds %struct.GPR, %struct.GPR* %13504, i32 0, i32 33
  %13506 = getelementptr inbounds %struct.Reg, %struct.Reg* %13505, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %13506 to i64*
  %13507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13508 = getelementptr inbounds %struct.GPR, %struct.GPR* %13507, i32 0, i32 15
  %13509 = getelementptr inbounds %struct.Reg, %struct.Reg* %13508, i32 0, i32 0
  %RBP.i1286 = bitcast %union.anon* %13509 to i64*
  %13510 = load i64, i64* %RBP.i1286
  %13511 = sub i64 %13510, 8
  %13512 = load i64, i64* %PC.i1285
  %13513 = add i64 %13512, 7
  store i64 %13513, i64* %PC.i1285
  %13514 = inttoptr i64 %13511 to i32*
  store i32 0, i32* %13514
  store %struct.Memory* %loadMem_4af3a6, %struct.Memory** %MEMORY
  br label %block_.L_4af3ad

block_.L_4af3ad:                                  ; preds = %block_4af3c1, %block_4af3a6
  %loadMem_4af3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13516 = getelementptr inbounds %struct.GPR, %struct.GPR* %13515, i32 0, i32 33
  %13517 = getelementptr inbounds %struct.Reg, %struct.Reg* %13516, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %13517 to i64*
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13519 = getelementptr inbounds %struct.GPR, %struct.GPR* %13518, i32 0, i32 1
  %13520 = getelementptr inbounds %struct.Reg, %struct.Reg* %13519, i32 0, i32 0
  %RAX.i1283 = bitcast %union.anon* %13520 to i64*
  %13521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13522 = getelementptr inbounds %struct.GPR, %struct.GPR* %13521, i32 0, i32 15
  %13523 = getelementptr inbounds %struct.Reg, %struct.Reg* %13522, i32 0, i32 0
  %RBP.i1284 = bitcast %union.anon* %13523 to i64*
  %13524 = load i64, i64* %RBP.i1284
  %13525 = sub i64 %13524, 8
  %13526 = load i64, i64* %PC.i1282
  %13527 = add i64 %13526, 3
  store i64 %13527, i64* %PC.i1282
  %13528 = inttoptr i64 %13525 to i32*
  %13529 = load i32, i32* %13528
  %13530 = zext i32 %13529 to i64
  store i64 %13530, i64* %RAX.i1283, align 8
  store %struct.Memory* %loadMem_4af3ad, %struct.Memory** %MEMORY
  %loadMem_4af3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13532 = getelementptr inbounds %struct.GPR, %struct.GPR* %13531, i32 0, i32 33
  %13533 = getelementptr inbounds %struct.Reg, %struct.Reg* %13532, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %13533 to i64*
  %13534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13535 = getelementptr inbounds %struct.GPR, %struct.GPR* %13534, i32 0, i32 5
  %13536 = getelementptr inbounds %struct.Reg, %struct.Reg* %13535, i32 0, i32 0
  %RCX.i1281 = bitcast %union.anon* %13536 to i64*
  %13537 = load i64, i64* %PC.i1280
  %13538 = add i64 %13537, 8
  store i64 %13538, i64* %PC.i1280
  %13539 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13539, i64* %RCX.i1281, align 8
  store %struct.Memory* %loadMem_4af3b0, %struct.Memory** %MEMORY
  %loadMem_4af3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13541 = getelementptr inbounds %struct.GPR, %struct.GPR* %13540, i32 0, i32 33
  %13542 = getelementptr inbounds %struct.Reg, %struct.Reg* %13541, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %13542 to i64*
  %13543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13544 = getelementptr inbounds %struct.GPR, %struct.GPR* %13543, i32 0, i32 1
  %13545 = getelementptr inbounds %struct.Reg, %struct.Reg* %13544, i32 0, i32 0
  %EAX.i1278 = bitcast %union.anon* %13545 to i32*
  %13546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13547 = getelementptr inbounds %struct.GPR, %struct.GPR* %13546, i32 0, i32 5
  %13548 = getelementptr inbounds %struct.Reg, %struct.Reg* %13547, i32 0, i32 0
  %RCX.i1279 = bitcast %union.anon* %13548 to i64*
  %13549 = load i32, i32* %EAX.i1278
  %13550 = zext i32 %13549 to i64
  %13551 = load i64, i64* %RCX.i1279
  %13552 = add i64 %13551, 52
  %13553 = load i64, i64* %PC.i1277
  %13554 = add i64 %13553, 3
  store i64 %13554, i64* %PC.i1277
  %13555 = inttoptr i64 %13552 to i32*
  %13556 = load i32, i32* %13555
  %13557 = sub i32 %13549, %13556
  %13558 = icmp ult i32 %13549, %13556
  %13559 = zext i1 %13558 to i8
  %13560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13559, i8* %13560, align 1
  %13561 = and i32 %13557, 255
  %13562 = call i32 @llvm.ctpop.i32(i32 %13561)
  %13563 = trunc i32 %13562 to i8
  %13564 = and i8 %13563, 1
  %13565 = xor i8 %13564, 1
  %13566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13565, i8* %13566, align 1
  %13567 = xor i32 %13556, %13549
  %13568 = xor i32 %13567, %13557
  %13569 = lshr i32 %13568, 4
  %13570 = trunc i32 %13569 to i8
  %13571 = and i8 %13570, 1
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13571, i8* %13572, align 1
  %13573 = icmp eq i32 %13557, 0
  %13574 = zext i1 %13573 to i8
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13574, i8* %13575, align 1
  %13576 = lshr i32 %13557, 31
  %13577 = trunc i32 %13576 to i8
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13577, i8* %13578, align 1
  %13579 = lshr i32 %13549, 31
  %13580 = lshr i32 %13556, 31
  %13581 = xor i32 %13580, %13579
  %13582 = xor i32 %13576, %13579
  %13583 = add i32 %13582, %13581
  %13584 = icmp eq i32 %13583, 2
  %13585 = zext i1 %13584 to i8
  %13586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13585, i8* %13586, align 1
  store %struct.Memory* %loadMem_4af3b8, %struct.Memory** %MEMORY
  %loadMem_4af3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13588 = getelementptr inbounds %struct.GPR, %struct.GPR* %13587, i32 0, i32 33
  %13589 = getelementptr inbounds %struct.Reg, %struct.Reg* %13588, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %13589 to i64*
  %13590 = load i64, i64* %PC.i1276
  %13591 = add i64 %13590, 57
  %13592 = load i64, i64* %PC.i1276
  %13593 = add i64 %13592, 6
  %13594 = load i64, i64* %PC.i1276
  %13595 = add i64 %13594, 6
  store i64 %13595, i64* %PC.i1276
  %13596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13597 = load i8, i8* %13596, align 1
  %13598 = icmp ne i8 %13597, 0
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13600 = load i8, i8* %13599, align 1
  %13601 = icmp ne i8 %13600, 0
  %13602 = xor i1 %13598, %13601
  %13603 = xor i1 %13602, true
  %13604 = zext i1 %13603 to i8
  store i8 %13604, i8* %BRANCH_TAKEN, align 1
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13606 = select i1 %13602, i64 %13593, i64 %13591
  store i64 %13606, i64* %13605, align 8
  store %struct.Memory* %loadMem_4af3bb, %struct.Memory** %MEMORY
  %loadBr_4af3bb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af3bb = icmp eq i8 %loadBr_4af3bb, 1
  br i1 %cmpBr_4af3bb, label %block_.L_4af3f4, label %block_4af3c1

block_4af3c1:                                     ; preds = %block_.L_4af3ad
  %loadMem_4af3c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13608 = getelementptr inbounds %struct.GPR, %struct.GPR* %13607, i32 0, i32 33
  %13609 = getelementptr inbounds %struct.Reg, %struct.Reg* %13608, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %13609 to i64*
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13611 = getelementptr inbounds %struct.GPR, %struct.GPR* %13610, i32 0, i32 1
  %13612 = getelementptr inbounds %struct.Reg, %struct.Reg* %13611, i32 0, i32 0
  %RAX.i1275 = bitcast %union.anon* %13612 to i64*
  %13613 = load i64, i64* %PC.i1274
  %13614 = add i64 %13613, ptrtoint (%G_0x277050__rip__type* @G_0x277050__rip_ to i64)
  %13615 = load i64, i64* %PC.i1274
  %13616 = add i64 %13615, 7
  store i64 %13616, i64* %PC.i1274
  %13617 = inttoptr i64 %13614 to i64*
  %13618 = load i64, i64* %13617
  store i64 %13618, i64* %RAX.i1275, align 8
  store %struct.Memory* %loadMem_4af3c1, %struct.Memory** %MEMORY
  %loadMem_4af3c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13620 = getelementptr inbounds %struct.GPR, %struct.GPR* %13619, i32 0, i32 33
  %13621 = getelementptr inbounds %struct.Reg, %struct.Reg* %13620, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %13621 to i64*
  %13622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13623 = getelementptr inbounds %struct.GPR, %struct.GPR* %13622, i32 0, i32 5
  %13624 = getelementptr inbounds %struct.Reg, %struct.Reg* %13623, i32 0, i32 0
  %RCX.i1272 = bitcast %union.anon* %13624 to i64*
  %13625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13626 = getelementptr inbounds %struct.GPR, %struct.GPR* %13625, i32 0, i32 15
  %13627 = getelementptr inbounds %struct.Reg, %struct.Reg* %13626, i32 0, i32 0
  %RBP.i1273 = bitcast %union.anon* %13627 to i64*
  %13628 = load i64, i64* %RBP.i1273
  %13629 = sub i64 %13628, 4
  %13630 = load i64, i64* %PC.i1271
  %13631 = add i64 %13630, 4
  store i64 %13631, i64* %PC.i1271
  %13632 = inttoptr i64 %13629 to i32*
  %13633 = load i32, i32* %13632
  %13634 = sext i32 %13633 to i64
  store i64 %13634, i64* %RCX.i1272, align 8
  store %struct.Memory* %loadMem_4af3c8, %struct.Memory** %MEMORY
  %loadMem_4af3cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13636 = getelementptr inbounds %struct.GPR, %struct.GPR* %13635, i32 0, i32 33
  %13637 = getelementptr inbounds %struct.Reg, %struct.Reg* %13636, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %13637 to i64*
  %13638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13639 = getelementptr inbounds %struct.GPR, %struct.GPR* %13638, i32 0, i32 1
  %13640 = getelementptr inbounds %struct.Reg, %struct.Reg* %13639, i32 0, i32 0
  %RAX.i1269 = bitcast %union.anon* %13640 to i64*
  %13641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13642 = getelementptr inbounds %struct.GPR, %struct.GPR* %13641, i32 0, i32 5
  %13643 = getelementptr inbounds %struct.Reg, %struct.Reg* %13642, i32 0, i32 0
  %RCX.i1270 = bitcast %union.anon* %13643 to i64*
  %13644 = load i64, i64* %RAX.i1269
  %13645 = load i64, i64* %RCX.i1270
  %13646 = mul i64 %13645, 8
  %13647 = add i64 %13646, %13644
  %13648 = load i64, i64* %PC.i1268
  %13649 = add i64 %13648, 4
  store i64 %13649, i64* %PC.i1268
  %13650 = inttoptr i64 %13647 to i64*
  %13651 = load i64, i64* %13650
  store i64 %13651, i64* %RAX.i1269, align 8
  store %struct.Memory* %loadMem_4af3cc, %struct.Memory** %MEMORY
  %loadMem_4af3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13653 = getelementptr inbounds %struct.GPR, %struct.GPR* %13652, i32 0, i32 33
  %13654 = getelementptr inbounds %struct.Reg, %struct.Reg* %13653, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %13654 to i64*
  %13655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13656 = getelementptr inbounds %struct.GPR, %struct.GPR* %13655, i32 0, i32 5
  %13657 = getelementptr inbounds %struct.Reg, %struct.Reg* %13656, i32 0, i32 0
  %RCX.i1266 = bitcast %union.anon* %13657 to i64*
  %13658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13659 = getelementptr inbounds %struct.GPR, %struct.GPR* %13658, i32 0, i32 15
  %13660 = getelementptr inbounds %struct.Reg, %struct.Reg* %13659, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %13660 to i64*
  %13661 = load i64, i64* %RBP.i1267
  %13662 = sub i64 %13661, 8
  %13663 = load i64, i64* %PC.i1265
  %13664 = add i64 %13663, 4
  store i64 %13664, i64* %PC.i1265
  %13665 = inttoptr i64 %13662 to i32*
  %13666 = load i32, i32* %13665
  %13667 = sext i32 %13666 to i64
  store i64 %13667, i64* %RCX.i1266, align 8
  store %struct.Memory* %loadMem_4af3d0, %struct.Memory** %MEMORY
  %loadMem_4af3d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13669 = getelementptr inbounds %struct.GPR, %struct.GPR* %13668, i32 0, i32 33
  %13670 = getelementptr inbounds %struct.Reg, %struct.Reg* %13669, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %13670 to i64*
  %13671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13672 = getelementptr inbounds %struct.GPR, %struct.GPR* %13671, i32 0, i32 1
  %13673 = getelementptr inbounds %struct.Reg, %struct.Reg* %13672, i32 0, i32 0
  %RAX.i1262 = bitcast %union.anon* %13673 to i64*
  %13674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13675 = getelementptr inbounds %struct.GPR, %struct.GPR* %13674, i32 0, i32 5
  %13676 = getelementptr inbounds %struct.Reg, %struct.Reg* %13675, i32 0, i32 0
  %RCX.i1263 = bitcast %union.anon* %13676 to i64*
  %13677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13678 = getelementptr inbounds %struct.GPR, %struct.GPR* %13677, i32 0, i32 7
  %13679 = getelementptr inbounds %struct.Reg, %struct.Reg* %13678, i32 0, i32 0
  %RDX.i1264 = bitcast %union.anon* %13679 to i64*
  %13680 = load i64, i64* %RAX.i1262
  %13681 = load i64, i64* %RCX.i1263
  %13682 = mul i64 %13681, 2
  %13683 = add i64 %13682, %13680
  %13684 = load i64, i64* %PC.i1261
  %13685 = add i64 %13684, 4
  store i64 %13685, i64* %PC.i1261
  %13686 = inttoptr i64 %13683 to i16*
  %13687 = load i16, i16* %13686
  %13688 = zext i16 %13687 to i64
  store i64 %13688, i64* %RDX.i1264, align 8
  store %struct.Memory* %loadMem_4af3d4, %struct.Memory** %MEMORY
  %loadMem_4af3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13690 = getelementptr inbounds %struct.GPR, %struct.GPR* %13689, i32 0, i32 33
  %13691 = getelementptr inbounds %struct.Reg, %struct.Reg* %13690, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %13691 to i64*
  %13692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13693 = getelementptr inbounds %struct.GPR, %struct.GPR* %13692, i32 0, i32 7
  %13694 = getelementptr inbounds %struct.Reg, %struct.Reg* %13693, i32 0, i32 0
  %EDX.i1259 = bitcast %union.anon* %13694 to i32*
  %13695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13696 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13695, i64 0, i64 0
  %YMM0.i1260 = bitcast %union.VectorReg* %13696 to %"class.std::bitset"*
  %13697 = bitcast %"class.std::bitset"* %YMM0.i1260 to i8*
  %13698 = load i32, i32* %EDX.i1259
  %13699 = zext i32 %13698 to i64
  %13700 = load i64, i64* %PC.i1258
  %13701 = add i64 %13700, 4
  store i64 %13701, i64* %PC.i1258
  %13702 = sitofp i32 %13698 to double
  %13703 = bitcast i8* %13697 to double*
  store double %13702, double* %13703, align 1
  store %struct.Memory* %loadMem_4af3d8, %struct.Memory** %MEMORY
  %loadMem_4af3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13705 = getelementptr inbounds %struct.GPR, %struct.GPR* %13704, i32 0, i32 33
  %13706 = getelementptr inbounds %struct.Reg, %struct.Reg* %13705, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %13706 to i64*
  %13707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13708 = getelementptr inbounds %struct.GPR, %struct.GPR* %13707, i32 0, i32 15
  %13709 = getelementptr inbounds %struct.Reg, %struct.Reg* %13708, i32 0, i32 0
  %RBP.i1256 = bitcast %union.anon* %13709 to i64*
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13711 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13710, i64 0, i64 0
  %YMM0.i1257 = bitcast %union.VectorReg* %13711 to %"class.std::bitset"*
  %13712 = bitcast %"class.std::bitset"* %YMM0.i1257 to i8*
  %13713 = bitcast %"class.std::bitset"* %YMM0.i1257 to i8*
  %13714 = load i64, i64* %RBP.i1256
  %13715 = sub i64 %13714, 32
  %13716 = load i64, i64* %PC.i1255
  %13717 = add i64 %13716, 5
  store i64 %13717, i64* %PC.i1255
  %13718 = bitcast i8* %13713 to double*
  %13719 = load double, double* %13718, align 1
  %13720 = getelementptr inbounds i8, i8* %13713, i64 8
  %13721 = bitcast i8* %13720 to i64*
  %13722 = load i64, i64* %13721, align 1
  %13723 = inttoptr i64 %13715 to double*
  %13724 = load double, double* %13723
  %13725 = fadd double %13719, %13724
  %13726 = bitcast i8* %13712 to double*
  store double %13725, double* %13726, align 1
  %13727 = getelementptr inbounds i8, i8* %13712, i64 8
  %13728 = bitcast i8* %13727 to i64*
  store i64 %13722, i64* %13728, align 1
  store %struct.Memory* %loadMem_4af3dc, %struct.Memory** %MEMORY
  %loadMem_4af3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13730 = getelementptr inbounds %struct.GPR, %struct.GPR* %13729, i32 0, i32 33
  %13731 = getelementptr inbounds %struct.Reg, %struct.Reg* %13730, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %13731 to i64*
  %13732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13733 = getelementptr inbounds %struct.GPR, %struct.GPR* %13732, i32 0, i32 15
  %13734 = getelementptr inbounds %struct.Reg, %struct.Reg* %13733, i32 0, i32 0
  %RBP.i1253 = bitcast %union.anon* %13734 to i64*
  %13735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13736 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13735, i64 0, i64 0
  %XMM0.i1254 = bitcast %union.VectorReg* %13736 to %union.vec128_t*
  %13737 = load i64, i64* %RBP.i1253
  %13738 = sub i64 %13737, 32
  %13739 = bitcast %union.vec128_t* %XMM0.i1254 to i8*
  %13740 = load i64, i64* %PC.i1252
  %13741 = add i64 %13740, 5
  store i64 %13741, i64* %PC.i1252
  %13742 = bitcast i8* %13739 to double*
  %13743 = load double, double* %13742, align 1
  %13744 = inttoptr i64 %13738 to double*
  store double %13743, double* %13744
  store %struct.Memory* %loadMem_4af3e1, %struct.Memory** %MEMORY
  %loadMem_4af3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13746 = getelementptr inbounds %struct.GPR, %struct.GPR* %13745, i32 0, i32 33
  %13747 = getelementptr inbounds %struct.Reg, %struct.Reg* %13746, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %13747 to i64*
  %13748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13749 = getelementptr inbounds %struct.GPR, %struct.GPR* %13748, i32 0, i32 1
  %13750 = getelementptr inbounds %struct.Reg, %struct.Reg* %13749, i32 0, i32 0
  %RAX.i1250 = bitcast %union.anon* %13750 to i64*
  %13751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13752 = getelementptr inbounds %struct.GPR, %struct.GPR* %13751, i32 0, i32 15
  %13753 = getelementptr inbounds %struct.Reg, %struct.Reg* %13752, i32 0, i32 0
  %RBP.i1251 = bitcast %union.anon* %13753 to i64*
  %13754 = load i64, i64* %RBP.i1251
  %13755 = sub i64 %13754, 8
  %13756 = load i64, i64* %PC.i1249
  %13757 = add i64 %13756, 3
  store i64 %13757, i64* %PC.i1249
  %13758 = inttoptr i64 %13755 to i32*
  %13759 = load i32, i32* %13758
  %13760 = zext i32 %13759 to i64
  store i64 %13760, i64* %RAX.i1250, align 8
  store %struct.Memory* %loadMem_4af3e6, %struct.Memory** %MEMORY
  %loadMem_4af3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13762 = getelementptr inbounds %struct.GPR, %struct.GPR* %13761, i32 0, i32 33
  %13763 = getelementptr inbounds %struct.Reg, %struct.Reg* %13762, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %13763 to i64*
  %13764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13765 = getelementptr inbounds %struct.GPR, %struct.GPR* %13764, i32 0, i32 1
  %13766 = getelementptr inbounds %struct.Reg, %struct.Reg* %13765, i32 0, i32 0
  %RAX.i1248 = bitcast %union.anon* %13766 to i64*
  %13767 = load i64, i64* %RAX.i1248
  %13768 = load i64, i64* %PC.i1247
  %13769 = add i64 %13768, 3
  store i64 %13769, i64* %PC.i1247
  %13770 = trunc i64 %13767 to i32
  %13771 = add i32 1, %13770
  %13772 = zext i32 %13771 to i64
  store i64 %13772, i64* %RAX.i1248, align 8
  %13773 = icmp ult i32 %13771, %13770
  %13774 = icmp ult i32 %13771, 1
  %13775 = or i1 %13773, %13774
  %13776 = zext i1 %13775 to i8
  %13777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13776, i8* %13777, align 1
  %13778 = and i32 %13771, 255
  %13779 = call i32 @llvm.ctpop.i32(i32 %13778)
  %13780 = trunc i32 %13779 to i8
  %13781 = and i8 %13780, 1
  %13782 = xor i8 %13781, 1
  %13783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13782, i8* %13783, align 1
  %13784 = xor i64 1, %13767
  %13785 = trunc i64 %13784 to i32
  %13786 = xor i32 %13785, %13771
  %13787 = lshr i32 %13786, 4
  %13788 = trunc i32 %13787 to i8
  %13789 = and i8 %13788, 1
  %13790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13789, i8* %13790, align 1
  %13791 = icmp eq i32 %13771, 0
  %13792 = zext i1 %13791 to i8
  %13793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13792, i8* %13793, align 1
  %13794 = lshr i32 %13771, 31
  %13795 = trunc i32 %13794 to i8
  %13796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13795, i8* %13796, align 1
  %13797 = lshr i32 %13770, 31
  %13798 = xor i32 %13794, %13797
  %13799 = add i32 %13798, %13794
  %13800 = icmp eq i32 %13799, 2
  %13801 = zext i1 %13800 to i8
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13801, i8* %13802, align 1
  store %struct.Memory* %loadMem_4af3e9, %struct.Memory** %MEMORY
  %loadMem_4af3ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13804 = getelementptr inbounds %struct.GPR, %struct.GPR* %13803, i32 0, i32 33
  %13805 = getelementptr inbounds %struct.Reg, %struct.Reg* %13804, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %13805 to i64*
  %13806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13807 = getelementptr inbounds %struct.GPR, %struct.GPR* %13806, i32 0, i32 1
  %13808 = getelementptr inbounds %struct.Reg, %struct.Reg* %13807, i32 0, i32 0
  %EAX.i1245 = bitcast %union.anon* %13808 to i32*
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13810 = getelementptr inbounds %struct.GPR, %struct.GPR* %13809, i32 0, i32 15
  %13811 = getelementptr inbounds %struct.Reg, %struct.Reg* %13810, i32 0, i32 0
  %RBP.i1246 = bitcast %union.anon* %13811 to i64*
  %13812 = load i64, i64* %RBP.i1246
  %13813 = sub i64 %13812, 8
  %13814 = load i32, i32* %EAX.i1245
  %13815 = zext i32 %13814 to i64
  %13816 = load i64, i64* %PC.i1244
  %13817 = add i64 %13816, 3
  store i64 %13817, i64* %PC.i1244
  %13818 = inttoptr i64 %13813 to i32*
  store i32 %13814, i32* %13818
  store %struct.Memory* %loadMem_4af3ec, %struct.Memory** %MEMORY
  %loadMem_4af3ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %13819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13820 = getelementptr inbounds %struct.GPR, %struct.GPR* %13819, i32 0, i32 33
  %13821 = getelementptr inbounds %struct.Reg, %struct.Reg* %13820, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %13821 to i64*
  %13822 = load i64, i64* %PC.i1243
  %13823 = add i64 %13822, -66
  %13824 = load i64, i64* %PC.i1243
  %13825 = add i64 %13824, 5
  store i64 %13825, i64* %PC.i1243
  %13826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13823, i64* %13826, align 8
  store %struct.Memory* %loadMem_4af3ef, %struct.Memory** %MEMORY
  br label %block_.L_4af3ad

block_.L_4af3f4:                                  ; preds = %block_.L_4af3ad
  %loadMem_4af3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13828 = getelementptr inbounds %struct.GPR, %struct.GPR* %13827, i32 0, i32 33
  %13829 = getelementptr inbounds %struct.Reg, %struct.Reg* %13828, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %13829 to i64*
  %13830 = load i64, i64* %PC.i1242
  %13831 = add i64 %13830, 5
  %13832 = load i64, i64* %PC.i1242
  %13833 = add i64 %13832, 5
  store i64 %13833, i64* %PC.i1242
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13831, i64* %13834, align 8
  store %struct.Memory* %loadMem_4af3f4, %struct.Memory** %MEMORY
  br label %block_.L_4af3f9

block_.L_4af3f9:                                  ; preds = %block_.L_4af3f4
  %loadMem_4af3f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13836 = getelementptr inbounds %struct.GPR, %struct.GPR* %13835, i32 0, i32 33
  %13837 = getelementptr inbounds %struct.Reg, %struct.Reg* %13836, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %13837 to i64*
  %13838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13839 = getelementptr inbounds %struct.GPR, %struct.GPR* %13838, i32 0, i32 1
  %13840 = getelementptr inbounds %struct.Reg, %struct.Reg* %13839, i32 0, i32 0
  %RAX.i1240 = bitcast %union.anon* %13840 to i64*
  %13841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13842 = getelementptr inbounds %struct.GPR, %struct.GPR* %13841, i32 0, i32 15
  %13843 = getelementptr inbounds %struct.Reg, %struct.Reg* %13842, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %13843 to i64*
  %13844 = load i64, i64* %RBP.i1241
  %13845 = sub i64 %13844, 4
  %13846 = load i64, i64* %PC.i1239
  %13847 = add i64 %13846, 3
  store i64 %13847, i64* %PC.i1239
  %13848 = inttoptr i64 %13845 to i32*
  %13849 = load i32, i32* %13848
  %13850 = zext i32 %13849 to i64
  store i64 %13850, i64* %RAX.i1240, align 8
  store %struct.Memory* %loadMem_4af3f9, %struct.Memory** %MEMORY
  %loadMem_4af3fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13852 = getelementptr inbounds %struct.GPR, %struct.GPR* %13851, i32 0, i32 33
  %13853 = getelementptr inbounds %struct.Reg, %struct.Reg* %13852, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %13853 to i64*
  %13854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13855 = getelementptr inbounds %struct.GPR, %struct.GPR* %13854, i32 0, i32 1
  %13856 = getelementptr inbounds %struct.Reg, %struct.Reg* %13855, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %13856 to i64*
  %13857 = load i64, i64* %RAX.i1238
  %13858 = load i64, i64* %PC.i1237
  %13859 = add i64 %13858, 3
  store i64 %13859, i64* %PC.i1237
  %13860 = trunc i64 %13857 to i32
  %13861 = add i32 1, %13860
  %13862 = zext i32 %13861 to i64
  store i64 %13862, i64* %RAX.i1238, align 8
  %13863 = icmp ult i32 %13861, %13860
  %13864 = icmp ult i32 %13861, 1
  %13865 = or i1 %13863, %13864
  %13866 = zext i1 %13865 to i8
  %13867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13866, i8* %13867, align 1
  %13868 = and i32 %13861, 255
  %13869 = call i32 @llvm.ctpop.i32(i32 %13868)
  %13870 = trunc i32 %13869 to i8
  %13871 = and i8 %13870, 1
  %13872 = xor i8 %13871, 1
  %13873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13872, i8* %13873, align 1
  %13874 = xor i64 1, %13857
  %13875 = trunc i64 %13874 to i32
  %13876 = xor i32 %13875, %13861
  %13877 = lshr i32 %13876, 4
  %13878 = trunc i32 %13877 to i8
  %13879 = and i8 %13878, 1
  %13880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13879, i8* %13880, align 1
  %13881 = icmp eq i32 %13861, 0
  %13882 = zext i1 %13881 to i8
  %13883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13882, i8* %13883, align 1
  %13884 = lshr i32 %13861, 31
  %13885 = trunc i32 %13884 to i8
  %13886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13885, i8* %13886, align 1
  %13887 = lshr i32 %13860, 31
  %13888 = xor i32 %13884, %13887
  %13889 = add i32 %13888, %13884
  %13890 = icmp eq i32 %13889, 2
  %13891 = zext i1 %13890 to i8
  %13892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13891, i8* %13892, align 1
  store %struct.Memory* %loadMem_4af3fc, %struct.Memory** %MEMORY
  %loadMem_4af3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %13893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13894 = getelementptr inbounds %struct.GPR, %struct.GPR* %13893, i32 0, i32 33
  %13895 = getelementptr inbounds %struct.Reg, %struct.Reg* %13894, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %13895 to i64*
  %13896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13897 = getelementptr inbounds %struct.GPR, %struct.GPR* %13896, i32 0, i32 1
  %13898 = getelementptr inbounds %struct.Reg, %struct.Reg* %13897, i32 0, i32 0
  %EAX.i1235 = bitcast %union.anon* %13898 to i32*
  %13899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13900 = getelementptr inbounds %struct.GPR, %struct.GPR* %13899, i32 0, i32 15
  %13901 = getelementptr inbounds %struct.Reg, %struct.Reg* %13900, i32 0, i32 0
  %RBP.i1236 = bitcast %union.anon* %13901 to i64*
  %13902 = load i64, i64* %RBP.i1236
  %13903 = sub i64 %13902, 4
  %13904 = load i32, i32* %EAX.i1235
  %13905 = zext i32 %13904 to i64
  %13906 = load i64, i64* %PC.i1234
  %13907 = add i64 %13906, 3
  store i64 %13907, i64* %PC.i1234
  %13908 = inttoptr i64 %13903 to i32*
  store i32 %13904, i32* %13908
  store %struct.Memory* %loadMem_4af3ff, %struct.Memory** %MEMORY
  %loadMem_4af402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 33
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %13911 to i64*
  %13912 = load i64, i64* %PC.i1233
  %13913 = add i64 %13912, -112
  %13914 = load i64, i64* %PC.i1233
  %13915 = add i64 %13914, 5
  store i64 %13915, i64* %PC.i1233
  %13916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13913, i64* %13916, align 8
  store %struct.Memory* %loadMem_4af402, %struct.Memory** %MEMORY
  br label %block_.L_4af392

block_.L_4af407:                                  ; preds = %block_.L_4af392
  %loadMem_4af407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13918 = getelementptr inbounds %struct.GPR, %struct.GPR* %13917, i32 0, i32 33
  %13919 = getelementptr inbounds %struct.Reg, %struct.Reg* %13918, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %13919 to i64*
  %13920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13921 = getelementptr inbounds %struct.GPR, %struct.GPR* %13920, i32 0, i32 15
  %13922 = getelementptr inbounds %struct.Reg, %struct.Reg* %13921, i32 0, i32 0
  %RBP.i1232 = bitcast %union.anon* %13922 to i64*
  %13923 = load i64, i64* %RBP.i1232
  %13924 = sub i64 %13923, 35396
  %13925 = load i64, i64* %PC.i1231
  %13926 = add i64 %13925, 10
  store i64 %13926, i64* %PC.i1231
  %13927 = inttoptr i64 %13924 to i32*
  store i32 0, i32* %13927
  store %struct.Memory* %loadMem_4af407, %struct.Memory** %MEMORY
  br label %block_.L_4af411

block_.L_4af411:                                  ; preds = %block_.L_4af9be, %block_.L_4af407
  %loadMem_4af411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13929 = getelementptr inbounds %struct.GPR, %struct.GPR* %13928, i32 0, i32 33
  %13930 = getelementptr inbounds %struct.Reg, %struct.Reg* %13929, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %13930 to i64*
  %13931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13932 = getelementptr inbounds %struct.GPR, %struct.GPR* %13931, i32 0, i32 1
  %13933 = getelementptr inbounds %struct.Reg, %struct.Reg* %13932, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %13933 to i64*
  %13934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13935 = getelementptr inbounds %struct.GPR, %struct.GPR* %13934, i32 0, i32 15
  %13936 = getelementptr inbounds %struct.Reg, %struct.Reg* %13935, i32 0, i32 0
  %RBP.i1230 = bitcast %union.anon* %13936 to i64*
  %13937 = load i64, i64* %RBP.i1230
  %13938 = sub i64 %13937, 35396
  %13939 = load i64, i64* %PC.i1228
  %13940 = add i64 %13939, 6
  store i64 %13940, i64* %PC.i1228
  %13941 = inttoptr i64 %13938 to i32*
  %13942 = load i32, i32* %13941
  %13943 = zext i32 %13942 to i64
  store i64 %13943, i64* %RAX.i1229, align 8
  store %struct.Memory* %loadMem_4af411, %struct.Memory** %MEMORY
  %loadMem_4af417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13945 = getelementptr inbounds %struct.GPR, %struct.GPR* %13944, i32 0, i32 33
  %13946 = getelementptr inbounds %struct.Reg, %struct.Reg* %13945, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %13946 to i64*
  %13947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13948 = getelementptr inbounds %struct.GPR, %struct.GPR* %13947, i32 0, i32 5
  %13949 = getelementptr inbounds %struct.Reg, %struct.Reg* %13948, i32 0, i32 0
  %RCX.i1226 = bitcast %union.anon* %13949 to i64*
  %13950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13951 = getelementptr inbounds %struct.GPR, %struct.GPR* %13950, i32 0, i32 15
  %13952 = getelementptr inbounds %struct.Reg, %struct.Reg* %13951, i32 0, i32 0
  %RBP.i1227 = bitcast %union.anon* %13952 to i64*
  %13953 = load i64, i64* %RBP.i1227
  %13954 = sub i64 %13953, 808
  %13955 = load i64, i64* %PC.i1225
  %13956 = add i64 %13955, 6
  store i64 %13956, i64* %PC.i1225
  %13957 = inttoptr i64 %13954 to i32*
  %13958 = load i32, i32* %13957
  %13959 = zext i32 %13958 to i64
  store i64 %13959, i64* %RCX.i1226, align 8
  store %struct.Memory* %loadMem_4af417, %struct.Memory** %MEMORY
  %loadMem_4af41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13961 = getelementptr inbounds %struct.GPR, %struct.GPR* %13960, i32 0, i32 33
  %13962 = getelementptr inbounds %struct.Reg, %struct.Reg* %13961, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %13962 to i64*
  %13963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13964 = getelementptr inbounds %struct.GPR, %struct.GPR* %13963, i32 0, i32 5
  %13965 = getelementptr inbounds %struct.Reg, %struct.Reg* %13964, i32 0, i32 0
  %RCX.i1224 = bitcast %union.anon* %13965 to i64*
  %13966 = load i64, i64* %RCX.i1224
  %13967 = load i64, i64* %PC.i1223
  %13968 = add i64 %13967, 3
  store i64 %13968, i64* %PC.i1223
  %13969 = trunc i64 %13966 to i32
  %13970 = add i32 2, %13969
  %13971 = zext i32 %13970 to i64
  store i64 %13971, i64* %RCX.i1224, align 8
  %13972 = icmp ult i32 %13970, %13969
  %13973 = icmp ult i32 %13970, 2
  %13974 = or i1 %13972, %13973
  %13975 = zext i1 %13974 to i8
  %13976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13975, i8* %13976, align 1
  %13977 = and i32 %13970, 255
  %13978 = call i32 @llvm.ctpop.i32(i32 %13977)
  %13979 = trunc i32 %13978 to i8
  %13980 = and i8 %13979, 1
  %13981 = xor i8 %13980, 1
  %13982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13981, i8* %13982, align 1
  %13983 = xor i64 2, %13966
  %13984 = trunc i64 %13983 to i32
  %13985 = xor i32 %13984, %13970
  %13986 = lshr i32 %13985, 4
  %13987 = trunc i32 %13986 to i8
  %13988 = and i8 %13987, 1
  %13989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13988, i8* %13989, align 1
  %13990 = icmp eq i32 %13970, 0
  %13991 = zext i1 %13990 to i8
  %13992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13991, i8* %13992, align 1
  %13993 = lshr i32 %13970, 31
  %13994 = trunc i32 %13993 to i8
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13994, i8* %13995, align 1
  %13996 = lshr i32 %13969, 31
  %13997 = xor i32 %13993, %13996
  %13998 = add i32 %13997, %13993
  %13999 = icmp eq i32 %13998, 2
  %14000 = zext i1 %13999 to i8
  %14001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14000, i8* %14001, align 1
  store %struct.Memory* %loadMem_4af41d, %struct.Memory** %MEMORY
  %loadMem_4af420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14003 = getelementptr inbounds %struct.GPR, %struct.GPR* %14002, i32 0, i32 33
  %14004 = getelementptr inbounds %struct.Reg, %struct.Reg* %14003, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %14004 to i64*
  %14005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14006 = getelementptr inbounds %struct.GPR, %struct.GPR* %14005, i32 0, i32 1
  %14007 = getelementptr inbounds %struct.Reg, %struct.Reg* %14006, i32 0, i32 0
  %EAX.i1221 = bitcast %union.anon* %14007 to i32*
  %14008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14009 = getelementptr inbounds %struct.GPR, %struct.GPR* %14008, i32 0, i32 5
  %14010 = getelementptr inbounds %struct.Reg, %struct.Reg* %14009, i32 0, i32 0
  %ECX.i1222 = bitcast %union.anon* %14010 to i32*
  %14011 = load i32, i32* %EAX.i1221
  %14012 = zext i32 %14011 to i64
  %14013 = load i32, i32* %ECX.i1222
  %14014 = zext i32 %14013 to i64
  %14015 = load i64, i64* %PC.i1220
  %14016 = add i64 %14015, 2
  store i64 %14016, i64* %PC.i1220
  %14017 = sub i32 %14011, %14013
  %14018 = icmp ult i32 %14011, %14013
  %14019 = zext i1 %14018 to i8
  %14020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14019, i8* %14020, align 1
  %14021 = and i32 %14017, 255
  %14022 = call i32 @llvm.ctpop.i32(i32 %14021)
  %14023 = trunc i32 %14022 to i8
  %14024 = and i8 %14023, 1
  %14025 = xor i8 %14024, 1
  %14026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14025, i8* %14026, align 1
  %14027 = xor i64 %14014, %14012
  %14028 = trunc i64 %14027 to i32
  %14029 = xor i32 %14028, %14017
  %14030 = lshr i32 %14029, 4
  %14031 = trunc i32 %14030 to i8
  %14032 = and i8 %14031, 1
  %14033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14032, i8* %14033, align 1
  %14034 = icmp eq i32 %14017, 0
  %14035 = zext i1 %14034 to i8
  %14036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14035, i8* %14036, align 1
  %14037 = lshr i32 %14017, 31
  %14038 = trunc i32 %14037 to i8
  %14039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14038, i8* %14039, align 1
  %14040 = lshr i32 %14011, 31
  %14041 = lshr i32 %14013, 31
  %14042 = xor i32 %14041, %14040
  %14043 = xor i32 %14037, %14040
  %14044 = add i32 %14043, %14042
  %14045 = icmp eq i32 %14044, 2
  %14046 = zext i1 %14045 to i8
  %14047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14046, i8* %14047, align 1
  store %struct.Memory* %loadMem_4af420, %struct.Memory** %MEMORY
  %loadMem_4af422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14049 = getelementptr inbounds %struct.GPR, %struct.GPR* %14048, i32 0, i32 33
  %14050 = getelementptr inbounds %struct.Reg, %struct.Reg* %14049, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %14050 to i64*
  %14051 = load i64, i64* %PC.i1219
  %14052 = add i64 %14051, 1456
  %14053 = load i64, i64* %PC.i1219
  %14054 = add i64 %14053, 6
  %14055 = load i64, i64* %PC.i1219
  %14056 = add i64 %14055, 6
  store i64 %14056, i64* %PC.i1219
  %14057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14058 = load i8, i8* %14057, align 1
  %14059 = icmp ne i8 %14058, 0
  %14060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14061 = load i8, i8* %14060, align 1
  %14062 = icmp ne i8 %14061, 0
  %14063 = xor i1 %14059, %14062
  %14064 = xor i1 %14063, true
  %14065 = zext i1 %14064 to i8
  store i8 %14065, i8* %BRANCH_TAKEN, align 1
  %14066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14067 = select i1 %14063, i64 %14054, i64 %14052
  store i64 %14067, i64* %14066, align 8
  store %struct.Memory* %loadMem_4af422, %struct.Memory** %MEMORY
  %loadBr_4af422 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af422 = icmp eq i8 %loadBr_4af422, 1
  br i1 %cmpBr_4af422, label %block_.L_4af9d2, label %block_4af428

block_4af428:                                     ; preds = %block_.L_4af411
  %loadMem_4af428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14069 = getelementptr inbounds %struct.GPR, %struct.GPR* %14068, i32 0, i32 33
  %14070 = getelementptr inbounds %struct.Reg, %struct.Reg* %14069, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %14070 to i64*
  %14071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14072 = getelementptr inbounds %struct.GPR, %struct.GPR* %14071, i32 0, i32 15
  %14073 = getelementptr inbounds %struct.Reg, %struct.Reg* %14072, i32 0, i32 0
  %RBP.i1218 = bitcast %union.anon* %14073 to i64*
  %14074 = load i64, i64* %RBP.i1218
  %14075 = sub i64 %14074, 12
  %14076 = load i64, i64* %PC.i1217
  %14077 = add i64 %14076, 7
  store i64 %14077, i64* %PC.i1217
  %14078 = inttoptr i64 %14075 to i32*
  store i32 0, i32* %14078
  store %struct.Memory* %loadMem_4af428, %struct.Memory** %MEMORY
  br label %block_.L_4af42f

block_.L_4af42f:                                  ; preds = %block_.L_4af9ab, %block_4af428
  %loadMem_4af42f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14080 = getelementptr inbounds %struct.GPR, %struct.GPR* %14079, i32 0, i32 33
  %14081 = getelementptr inbounds %struct.Reg, %struct.Reg* %14080, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %14081 to i64*
  %14082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14083 = getelementptr inbounds %struct.GPR, %struct.GPR* %14082, i32 0, i32 1
  %14084 = getelementptr inbounds %struct.Reg, %struct.Reg* %14083, i32 0, i32 0
  %RAX.i1215 = bitcast %union.anon* %14084 to i64*
  %14085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14086 = getelementptr inbounds %struct.GPR, %struct.GPR* %14085, i32 0, i32 15
  %14087 = getelementptr inbounds %struct.Reg, %struct.Reg* %14086, i32 0, i32 0
  %RBP.i1216 = bitcast %union.anon* %14087 to i64*
  %14088 = load i64, i64* %RBP.i1216
  %14089 = sub i64 %14088, 12
  %14090 = load i64, i64* %PC.i1214
  %14091 = add i64 %14090, 3
  store i64 %14091, i64* %PC.i1214
  %14092 = inttoptr i64 %14089 to i32*
  %14093 = load i32, i32* %14092
  %14094 = zext i32 %14093 to i64
  store i64 %14094, i64* %RAX.i1215, align 8
  store %struct.Memory* %loadMem_4af42f, %struct.Memory** %MEMORY
  %loadMem_4af432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14096 = getelementptr inbounds %struct.GPR, %struct.GPR* %14095, i32 0, i32 33
  %14097 = getelementptr inbounds %struct.Reg, %struct.Reg* %14096, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %14097 to i64*
  %14098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14099 = getelementptr inbounds %struct.GPR, %struct.GPR* %14098, i32 0, i32 5
  %14100 = getelementptr inbounds %struct.Reg, %struct.Reg* %14099, i32 0, i32 0
  %RCX.i1212 = bitcast %union.anon* %14100 to i64*
  %14101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14102 = getelementptr inbounds %struct.GPR, %struct.GPR* %14101, i32 0, i32 15
  %14103 = getelementptr inbounds %struct.Reg, %struct.Reg* %14102, i32 0, i32 0
  %RBP.i1213 = bitcast %union.anon* %14103 to i64*
  %14104 = load i64, i64* %RBP.i1213
  %14105 = sub i64 %14104, 35396
  %14106 = load i64, i64* %PC.i1211
  %14107 = add i64 %14106, 7
  store i64 %14107, i64* %PC.i1211
  %14108 = inttoptr i64 %14105 to i32*
  %14109 = load i32, i32* %14108
  %14110 = sext i32 %14109 to i64
  store i64 %14110, i64* %RCX.i1212, align 8
  store %struct.Memory* %loadMem_4af432, %struct.Memory** %MEMORY
  %loadMem_4af439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14112 = getelementptr inbounds %struct.GPR, %struct.GPR* %14111, i32 0, i32 33
  %14113 = getelementptr inbounds %struct.Reg, %struct.Reg* %14112, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %14113 to i64*
  %14114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14115 = getelementptr inbounds %struct.GPR, %struct.GPR* %14114, i32 0, i32 1
  %14116 = getelementptr inbounds %struct.Reg, %struct.Reg* %14115, i32 0, i32 0
  %EAX.i1209 = bitcast %union.anon* %14116 to i32*
  %14117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14118 = getelementptr inbounds %struct.GPR, %struct.GPR* %14117, i32 0, i32 5
  %14119 = getelementptr inbounds %struct.Reg, %struct.Reg* %14118, i32 0, i32 0
  %RCX.i1210 = bitcast %union.anon* %14119 to i64*
  %14120 = load i32, i32* %EAX.i1209
  %14121 = zext i32 %14120 to i64
  %14122 = load i64, i64* %RCX.i1210
  %14123 = mul i64 %14122, 4
  %14124 = add i64 %14123, 7489456
  %14125 = load i64, i64* %PC.i1208
  %14126 = add i64 %14125, 7
  store i64 %14126, i64* %PC.i1208
  %14127 = inttoptr i64 %14124 to i32*
  %14128 = load i32, i32* %14127
  %14129 = sub i32 %14120, %14128
  %14130 = icmp ult i32 %14120, %14128
  %14131 = zext i1 %14130 to i8
  %14132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14131, i8* %14132, align 1
  %14133 = and i32 %14129, 255
  %14134 = call i32 @llvm.ctpop.i32(i32 %14133)
  %14135 = trunc i32 %14134 to i8
  %14136 = and i8 %14135, 1
  %14137 = xor i8 %14136, 1
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14137, i8* %14138, align 1
  %14139 = xor i32 %14128, %14120
  %14140 = xor i32 %14139, %14129
  %14141 = lshr i32 %14140, 4
  %14142 = trunc i32 %14141 to i8
  %14143 = and i8 %14142, 1
  %14144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14143, i8* %14144, align 1
  %14145 = icmp eq i32 %14129, 0
  %14146 = zext i1 %14145 to i8
  %14147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14146, i8* %14147, align 1
  %14148 = lshr i32 %14129, 31
  %14149 = trunc i32 %14148 to i8
  %14150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14149, i8* %14150, align 1
  %14151 = lshr i32 %14120, 31
  %14152 = lshr i32 %14128, 31
  %14153 = xor i32 %14152, %14151
  %14154 = xor i32 %14148, %14151
  %14155 = add i32 %14154, %14153
  %14156 = icmp eq i32 %14155, 2
  %14157 = zext i1 %14156 to i8
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14157, i8* %14158, align 1
  store %struct.Memory* %loadMem_4af439, %struct.Memory** %MEMORY
  %loadMem_4af440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14160 = getelementptr inbounds %struct.GPR, %struct.GPR* %14159, i32 0, i32 33
  %14161 = getelementptr inbounds %struct.Reg, %struct.Reg* %14160, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %14161 to i64*
  %14162 = load i64, i64* %PC.i1207
  %14163 = add i64 %14162, 1401
  %14164 = load i64, i64* %PC.i1207
  %14165 = add i64 %14164, 6
  %14166 = load i64, i64* %PC.i1207
  %14167 = add i64 %14166, 6
  store i64 %14167, i64* %PC.i1207
  %14168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14169 = load i8, i8* %14168, align 1
  %14170 = icmp ne i8 %14169, 0
  %14171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14172 = load i8, i8* %14171, align 1
  %14173 = icmp ne i8 %14172, 0
  %14174 = xor i1 %14170, %14173
  %14175 = xor i1 %14174, true
  %14176 = zext i1 %14175 to i8
  store i8 %14176, i8* %BRANCH_TAKEN, align 1
  %14177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14178 = select i1 %14174, i64 %14165, i64 %14163
  store i64 %14178, i64* %14177, align 8
  store %struct.Memory* %loadMem_4af440, %struct.Memory** %MEMORY
  %loadBr_4af440 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af440 = icmp eq i8 %loadBr_4af440, 1
  br i1 %cmpBr_4af440, label %block_.L_4af9b9, label %block_4af446

block_4af446:                                     ; preds = %block_.L_4af42f
  %loadMem_4af446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14180 = getelementptr inbounds %struct.GPR, %struct.GPR* %14179, i32 0, i32 33
  %14181 = getelementptr inbounds %struct.Reg, %struct.Reg* %14180, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %14181 to i64*
  %14182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14183 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14182, i64 0, i64 0
  %YMM0.i1205 = bitcast %union.VectorReg* %14183 to %"class.std::bitset"*
  %14184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14184, i64 0, i64 0
  %XMM0.i1206 = bitcast %union.VectorReg* %14185 to %union.vec128_t*
  %14186 = bitcast %"class.std::bitset"* %YMM0.i1205 to i8*
  %14187 = bitcast %"class.std::bitset"* %YMM0.i1205 to i8*
  %14188 = bitcast %union.vec128_t* %XMM0.i1206 to i8*
  %14189 = load i64, i64* %PC.i1204
  %14190 = add i64 %14189, 3
  store i64 %14190, i64* %PC.i1204
  %14191 = bitcast i8* %14187 to i64*
  %14192 = load i64, i64* %14191, align 1
  %14193 = getelementptr inbounds i8, i8* %14187, i64 8
  %14194 = bitcast i8* %14193 to i64*
  %14195 = load i64, i64* %14194, align 1
  %14196 = bitcast i8* %14188 to i64*
  %14197 = load i64, i64* %14196, align 1
  %14198 = getelementptr inbounds i8, i8* %14188, i64 8
  %14199 = bitcast i8* %14198 to i64*
  %14200 = load i64, i64* %14199, align 1
  %14201 = xor i64 %14197, %14192
  %14202 = xor i64 %14200, %14195
  %14203 = trunc i64 %14201 to i32
  %14204 = lshr i64 %14201, 32
  %14205 = trunc i64 %14204 to i32
  %14206 = bitcast i8* %14186 to i32*
  store i32 %14203, i32* %14206, align 1
  %14207 = getelementptr inbounds i8, i8* %14186, i64 4
  %14208 = bitcast i8* %14207 to i32*
  store i32 %14205, i32* %14208, align 1
  %14209 = trunc i64 %14202 to i32
  %14210 = getelementptr inbounds i8, i8* %14186, i64 8
  %14211 = bitcast i8* %14210 to i32*
  store i32 %14209, i32* %14211, align 1
  %14212 = lshr i64 %14202, 32
  %14213 = trunc i64 %14212 to i32
  %14214 = getelementptr inbounds i8, i8* %14186, i64 12
  %14215 = bitcast i8* %14214 to i32*
  store i32 %14213, i32* %14215, align 1
  store %struct.Memory* %loadMem_4af446, %struct.Memory** %MEMORY
  %loadMem_4af449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14217 = getelementptr inbounds %struct.GPR, %struct.GPR* %14216, i32 0, i32 33
  %14218 = getelementptr inbounds %struct.Reg, %struct.Reg* %14217, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %14218 to i64*
  %14219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14220 = getelementptr inbounds %struct.GPR, %struct.GPR* %14219, i32 0, i32 1
  %14221 = getelementptr inbounds %struct.Reg, %struct.Reg* %14220, i32 0, i32 0
  %RAX.i1202 = bitcast %union.anon* %14221 to i64*
  %14222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14223 = getelementptr inbounds %struct.GPR, %struct.GPR* %14222, i32 0, i32 15
  %14224 = getelementptr inbounds %struct.Reg, %struct.Reg* %14223, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %14224 to i64*
  %14225 = load i64, i64* %RBP.i1203
  %14226 = sub i64 %14225, 768
  %14227 = load i64, i64* %PC.i1201
  %14228 = add i64 %14227, 7
  store i64 %14228, i64* %PC.i1201
  store i64 %14226, i64* %RAX.i1202, align 8
  store %struct.Memory* %loadMem_4af449, %struct.Memory** %MEMORY
  %loadMem_4af450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14230 = getelementptr inbounds %struct.GPR, %struct.GPR* %14229, i32 0, i32 33
  %14231 = getelementptr inbounds %struct.Reg, %struct.Reg* %14230, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %14231 to i64*
  %14232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14233 = getelementptr inbounds %struct.GPR, %struct.GPR* %14232, i32 0, i32 5
  %14234 = getelementptr inbounds %struct.Reg, %struct.Reg* %14233, i32 0, i32 0
  %RCX.i1199 = bitcast %union.anon* %14234 to i64*
  %14235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14236 = getelementptr inbounds %struct.GPR, %struct.GPR* %14235, i32 0, i32 15
  %14237 = getelementptr inbounds %struct.Reg, %struct.Reg* %14236, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %14237 to i64*
  %14238 = load i64, i64* %RBP.i1200
  %14239 = sub i64 %14238, 35396
  %14240 = load i64, i64* %PC.i1198
  %14241 = add i64 %14240, 7
  store i64 %14241, i64* %PC.i1198
  %14242 = inttoptr i64 %14239 to i32*
  %14243 = load i32, i32* %14242
  %14244 = sext i32 %14243 to i64
  store i64 %14244, i64* %RCX.i1199, align 8
  store %struct.Memory* %loadMem_4af450, %struct.Memory** %MEMORY
  %loadMem_4af457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14246 = getelementptr inbounds %struct.GPR, %struct.GPR* %14245, i32 0, i32 33
  %14247 = getelementptr inbounds %struct.Reg, %struct.Reg* %14246, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %14247 to i64*
  %14248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14249 = getelementptr inbounds %struct.GPR, %struct.GPR* %14248, i32 0, i32 5
  %14250 = getelementptr inbounds %struct.Reg, %struct.Reg* %14249, i32 0, i32 0
  %RCX.i1197 = bitcast %union.anon* %14250 to i64*
  %14251 = load i64, i64* %RCX.i1197
  %14252 = load i64, i64* %PC.i1196
  %14253 = add i64 %14252, 4
  store i64 %14253, i64* %PC.i1196
  %14254 = sext i64 %14251 to i128
  %14255 = and i128 %14254, -18446744073709551616
  %14256 = zext i64 %14251 to i128
  %14257 = or i128 %14255, %14256
  %14258 = mul i128 120, %14257
  %14259 = trunc i128 %14258 to i64
  store i64 %14259, i64* %RCX.i1197, align 8
  %14260 = sext i64 %14259 to i128
  %14261 = icmp ne i128 %14260, %14258
  %14262 = zext i1 %14261 to i8
  %14263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14262, i8* %14263, align 1
  %14264 = trunc i128 %14258 to i32
  %14265 = and i32 %14264, 255
  %14266 = call i32 @llvm.ctpop.i32(i32 %14265)
  %14267 = trunc i32 %14266 to i8
  %14268 = and i8 %14267, 1
  %14269 = xor i8 %14268, 1
  %14270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14269, i8* %14270, align 1
  %14271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14271, align 1
  %14272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14272, align 1
  %14273 = lshr i64 %14259, 63
  %14274 = trunc i64 %14273 to i8
  %14275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14274, i8* %14275, align 1
  %14276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14262, i8* %14276, align 1
  store %struct.Memory* %loadMem_4af457, %struct.Memory** %MEMORY
  %loadMem_4af45b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14278 = getelementptr inbounds %struct.GPR, %struct.GPR* %14277, i32 0, i32 33
  %14279 = getelementptr inbounds %struct.Reg, %struct.Reg* %14278, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %14279 to i64*
  %14280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14281 = getelementptr inbounds %struct.GPR, %struct.GPR* %14280, i32 0, i32 1
  %14282 = getelementptr inbounds %struct.Reg, %struct.Reg* %14281, i32 0, i32 0
  %RAX.i1194 = bitcast %union.anon* %14282 to i64*
  %14283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14284 = getelementptr inbounds %struct.GPR, %struct.GPR* %14283, i32 0, i32 5
  %14285 = getelementptr inbounds %struct.Reg, %struct.Reg* %14284, i32 0, i32 0
  %RCX.i1195 = bitcast %union.anon* %14285 to i64*
  %14286 = load i64, i64* %RAX.i1194
  %14287 = load i64, i64* %RCX.i1195
  %14288 = load i64, i64* %PC.i1193
  %14289 = add i64 %14288, 3
  store i64 %14289, i64* %PC.i1193
  %14290 = add i64 %14287, %14286
  store i64 %14290, i64* %RAX.i1194, align 8
  %14291 = icmp ult i64 %14290, %14286
  %14292 = icmp ult i64 %14290, %14287
  %14293 = or i1 %14291, %14292
  %14294 = zext i1 %14293 to i8
  %14295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14294, i8* %14295, align 1
  %14296 = trunc i64 %14290 to i32
  %14297 = and i32 %14296, 255
  %14298 = call i32 @llvm.ctpop.i32(i32 %14297)
  %14299 = trunc i32 %14298 to i8
  %14300 = and i8 %14299, 1
  %14301 = xor i8 %14300, 1
  %14302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14301, i8* %14302, align 1
  %14303 = xor i64 %14287, %14286
  %14304 = xor i64 %14303, %14290
  %14305 = lshr i64 %14304, 4
  %14306 = trunc i64 %14305 to i8
  %14307 = and i8 %14306, 1
  %14308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14307, i8* %14308, align 1
  %14309 = icmp eq i64 %14290, 0
  %14310 = zext i1 %14309 to i8
  %14311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14310, i8* %14311, align 1
  %14312 = lshr i64 %14290, 63
  %14313 = trunc i64 %14312 to i8
  %14314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14313, i8* %14314, align 1
  %14315 = lshr i64 %14286, 63
  %14316 = lshr i64 %14287, 63
  %14317 = xor i64 %14312, %14315
  %14318 = xor i64 %14312, %14316
  %14319 = add i64 %14317, %14318
  %14320 = icmp eq i64 %14319, 2
  %14321 = zext i1 %14320 to i8
  %14322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14321, i8* %14322, align 1
  store %struct.Memory* %loadMem_4af45b, %struct.Memory** %MEMORY
  %loadMem_4af45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14324 = getelementptr inbounds %struct.GPR, %struct.GPR* %14323, i32 0, i32 33
  %14325 = getelementptr inbounds %struct.Reg, %struct.Reg* %14324, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %14325 to i64*
  %14326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14327 = getelementptr inbounds %struct.GPR, %struct.GPR* %14326, i32 0, i32 5
  %14328 = getelementptr inbounds %struct.Reg, %struct.Reg* %14327, i32 0, i32 0
  %RCX.i1191 = bitcast %union.anon* %14328 to i64*
  %14329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14330 = getelementptr inbounds %struct.GPR, %struct.GPR* %14329, i32 0, i32 15
  %14331 = getelementptr inbounds %struct.Reg, %struct.Reg* %14330, i32 0, i32 0
  %RBP.i1192 = bitcast %union.anon* %14331 to i64*
  %14332 = load i64, i64* %RBP.i1192
  %14333 = sub i64 %14332, 12
  %14334 = load i64, i64* %PC.i1190
  %14335 = add i64 %14334, 4
  store i64 %14335, i64* %PC.i1190
  %14336 = inttoptr i64 %14333 to i32*
  %14337 = load i32, i32* %14336
  %14338 = sext i32 %14337 to i64
  store i64 %14338, i64* %RCX.i1191, align 8
  store %struct.Memory* %loadMem_4af45e, %struct.Memory** %MEMORY
  %loadMem_4af462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14340 = getelementptr inbounds %struct.GPR, %struct.GPR* %14339, i32 0, i32 33
  %14341 = getelementptr inbounds %struct.Reg, %struct.Reg* %14340, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %14341 to i64*
  %14342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14343 = getelementptr inbounds %struct.GPR, %struct.GPR* %14342, i32 0, i32 1
  %14344 = getelementptr inbounds %struct.Reg, %struct.Reg* %14343, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %14344 to i64*
  %14345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14346 = getelementptr inbounds %struct.GPR, %struct.GPR* %14345, i32 0, i32 5
  %14347 = getelementptr inbounds %struct.Reg, %struct.Reg* %14346, i32 0, i32 0
  %RCX.i1188 = bitcast %union.anon* %14347 to i64*
  %14348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14349 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14348, i64 0, i64 0
  %XMM0.i1189 = bitcast %union.VectorReg* %14349 to %union.vec128_t*
  %14350 = load i64, i64* %RAX.i1187
  %14351 = load i64, i64* %RCX.i1188
  %14352 = mul i64 %14351, 8
  %14353 = add i64 %14352, %14350
  %14354 = bitcast %union.vec128_t* %XMM0.i1189 to i8*
  %14355 = load i64, i64* %PC.i1186
  %14356 = add i64 %14355, 5
  store i64 %14356, i64* %PC.i1186
  %14357 = bitcast i8* %14354 to double*
  %14358 = load double, double* %14357, align 1
  %14359 = inttoptr i64 %14353 to double*
  store double %14358, double* %14359
  store %struct.Memory* %loadMem_4af462, %struct.Memory** %MEMORY
  %loadMem_4af467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14361 = getelementptr inbounds %struct.GPR, %struct.GPR* %14360, i32 0, i32 33
  %14362 = getelementptr inbounds %struct.Reg, %struct.Reg* %14361, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %14362 to i64*
  %14363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14364 = getelementptr inbounds %struct.GPR, %struct.GPR* %14363, i32 0, i32 1
  %14365 = getelementptr inbounds %struct.Reg, %struct.Reg* %14364, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %14365 to i64*
  %14366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14367 = getelementptr inbounds %struct.GPR, %struct.GPR* %14366, i32 0, i32 15
  %14368 = getelementptr inbounds %struct.Reg, %struct.Reg* %14367, i32 0, i32 0
  %RBP.i1185 = bitcast %union.anon* %14368 to i64*
  %14369 = load i64, i64* %RBP.i1185
  %14370 = sub i64 %14369, 35396
  %14371 = load i64, i64* %PC.i1183
  %14372 = add i64 %14371, 7
  store i64 %14372, i64* %PC.i1183
  %14373 = inttoptr i64 %14370 to i32*
  %14374 = load i32, i32* %14373
  %14375 = sext i32 %14374 to i64
  store i64 %14375, i64* %RAX.i1184, align 8
  store %struct.Memory* %loadMem_4af467, %struct.Memory** %MEMORY
  %loadMem_4af46e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14377 = getelementptr inbounds %struct.GPR, %struct.GPR* %14376, i32 0, i32 33
  %14378 = getelementptr inbounds %struct.Reg, %struct.Reg* %14377, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %14378 to i64*
  %14379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14380 = getelementptr inbounds %struct.GPR, %struct.GPR* %14379, i32 0, i32 1
  %14381 = getelementptr inbounds %struct.Reg, %struct.Reg* %14380, i32 0, i32 0
  %RAX.i1182 = bitcast %union.anon* %14381 to i64*
  %14382 = load i64, i64* %RAX.i1182
  %14383 = mul i64 %14382, 8
  %14384 = add i64 %14383, 7482144
  %14385 = load i64, i64* %PC.i1181
  %14386 = add i64 %14385, 8
  store i64 %14386, i64* %PC.i1181
  %14387 = inttoptr i64 %14384 to i64*
  %14388 = load i64, i64* %14387
  store i64 %14388, i64* %RAX.i1182, align 8
  store %struct.Memory* %loadMem_4af46e, %struct.Memory** %MEMORY
  %loadMem_4af476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14390 = getelementptr inbounds %struct.GPR, %struct.GPR* %14389, i32 0, i32 33
  %14391 = getelementptr inbounds %struct.Reg, %struct.Reg* %14390, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %14391 to i64*
  %14392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14393 = getelementptr inbounds %struct.GPR, %struct.GPR* %14392, i32 0, i32 5
  %14394 = getelementptr inbounds %struct.Reg, %struct.Reg* %14393, i32 0, i32 0
  %RCX.i1179 = bitcast %union.anon* %14394 to i64*
  %14395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14396 = getelementptr inbounds %struct.GPR, %struct.GPR* %14395, i32 0, i32 15
  %14397 = getelementptr inbounds %struct.Reg, %struct.Reg* %14396, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %14397 to i64*
  %14398 = load i64, i64* %RBP.i1180
  %14399 = sub i64 %14398, 12
  %14400 = load i64, i64* %PC.i1178
  %14401 = add i64 %14400, 4
  store i64 %14401, i64* %PC.i1178
  %14402 = inttoptr i64 %14399 to i32*
  %14403 = load i32, i32* %14402
  %14404 = sext i32 %14403 to i64
  store i64 %14404, i64* %RCX.i1179, align 8
  store %struct.Memory* %loadMem_4af476, %struct.Memory** %MEMORY
  %loadMem_4af47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14406 = getelementptr inbounds %struct.GPR, %struct.GPR* %14405, i32 0, i32 33
  %14407 = getelementptr inbounds %struct.Reg, %struct.Reg* %14406, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %14407 to i64*
  %14408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14409 = getelementptr inbounds %struct.GPR, %struct.GPR* %14408, i32 0, i32 1
  %14410 = getelementptr inbounds %struct.Reg, %struct.Reg* %14409, i32 0, i32 0
  %RAX.i1176 = bitcast %union.anon* %14410 to i64*
  %14411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14412 = getelementptr inbounds %struct.GPR, %struct.GPR* %14411, i32 0, i32 5
  %14413 = getelementptr inbounds %struct.Reg, %struct.Reg* %14412, i32 0, i32 0
  %RCX.i1177 = bitcast %union.anon* %14413 to i64*
  %14414 = load i64, i64* %RAX.i1176
  %14415 = load i64, i64* %RCX.i1177
  %14416 = mul i64 %14415, 8
  %14417 = add i64 %14416, %14414
  %14418 = load i64, i64* %PC.i1175
  %14419 = add i64 %14418, 4
  store i64 %14419, i64* %PC.i1175
  %14420 = inttoptr i64 %14417 to i64*
  %14421 = load i64, i64* %14420
  store i64 %14421, i64* %RAX.i1176, align 8
  store %struct.Memory* %loadMem_4af47a, %struct.Memory** %MEMORY
  %loadMem_4af47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14423 = getelementptr inbounds %struct.GPR, %struct.GPR* %14422, i32 0, i32 33
  %14424 = getelementptr inbounds %struct.Reg, %struct.Reg* %14423, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %14424 to i64*
  %14425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14426 = getelementptr inbounds %struct.GPR, %struct.GPR* %14425, i32 0, i32 1
  %14427 = getelementptr inbounds %struct.Reg, %struct.Reg* %14426, i32 0, i32 0
  %RAX.i1174 = bitcast %union.anon* %14427 to i64*
  %14428 = load i64, i64* %RAX.i1174
  %14429 = add i64 %14428, 6432
  %14430 = load i64, i64* %PC.i1173
  %14431 = add i64 %14430, 7
  store i64 %14431, i64* %PC.i1173
  %14432 = inttoptr i64 %14429 to i64*
  %14433 = load i64, i64* %14432
  store i64 %14433, i64* %RAX.i1174, align 8
  store %struct.Memory* %loadMem_4af47e, %struct.Memory** %MEMORY
  %loadMem_4af485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14435 = getelementptr inbounds %struct.GPR, %struct.GPR* %14434, i32 0, i32 33
  %14436 = getelementptr inbounds %struct.Reg, %struct.Reg* %14435, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %14436 to i64*
  %14437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14438 = getelementptr inbounds %struct.GPR, %struct.GPR* %14437, i32 0, i32 1
  %14439 = getelementptr inbounds %struct.Reg, %struct.Reg* %14438, i32 0, i32 0
  %RAX.i1171 = bitcast %union.anon* %14439 to i64*
  %14440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14441 = getelementptr inbounds %struct.GPR, %struct.GPR* %14440, i32 0, i32 15
  %14442 = getelementptr inbounds %struct.Reg, %struct.Reg* %14441, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %14442 to i64*
  %14443 = load i64, i64* %RBP.i1172
  %14444 = sub i64 %14443, 784
  %14445 = load i64, i64* %RAX.i1171
  %14446 = load i64, i64* %PC.i1170
  %14447 = add i64 %14446, 7
  store i64 %14447, i64* %PC.i1170
  %14448 = inttoptr i64 %14444 to i64*
  store i64 %14445, i64* %14448
  store %struct.Memory* %loadMem_4af485, %struct.Memory** %MEMORY
  %loadMem_4af48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14450 = getelementptr inbounds %struct.GPR, %struct.GPR* %14449, i32 0, i32 33
  %14451 = getelementptr inbounds %struct.Reg, %struct.Reg* %14450, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %14451 to i64*
  %14452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14453 = getelementptr inbounds %struct.GPR, %struct.GPR* %14452, i32 0, i32 1
  %14454 = getelementptr inbounds %struct.Reg, %struct.Reg* %14453, i32 0, i32 0
  %RAX.i1168 = bitcast %union.anon* %14454 to i64*
  %14455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14456 = getelementptr inbounds %struct.GPR, %struct.GPR* %14455, i32 0, i32 15
  %14457 = getelementptr inbounds %struct.Reg, %struct.Reg* %14456, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %14457 to i64*
  %14458 = load i64, i64* %RBP.i1169
  %14459 = sub i64 %14458, 35396
  %14460 = load i64, i64* %PC.i1167
  %14461 = add i64 %14460, 7
  store i64 %14461, i64* %PC.i1167
  %14462 = inttoptr i64 %14459 to i32*
  %14463 = load i32, i32* %14462
  %14464 = sext i32 %14463 to i64
  store i64 %14464, i64* %RAX.i1168, align 8
  store %struct.Memory* %loadMem_4af48c, %struct.Memory** %MEMORY
  %loadMem_4af493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14466 = getelementptr inbounds %struct.GPR, %struct.GPR* %14465, i32 0, i32 33
  %14467 = getelementptr inbounds %struct.Reg, %struct.Reg* %14466, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %14467 to i64*
  %14468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14469 = getelementptr inbounds %struct.GPR, %struct.GPR* %14468, i32 0, i32 1
  %14470 = getelementptr inbounds %struct.Reg, %struct.Reg* %14469, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %14470 to i64*
  %14471 = load i64, i64* %RAX.i1166
  %14472 = mul i64 %14471, 8
  %14473 = add i64 %14472, 7482144
  %14474 = load i64, i64* %PC.i1165
  %14475 = add i64 %14474, 8
  store i64 %14475, i64* %PC.i1165
  %14476 = inttoptr i64 %14473 to i64*
  %14477 = load i64, i64* %14476
  store i64 %14477, i64* %RAX.i1166, align 8
  store %struct.Memory* %loadMem_4af493, %struct.Memory** %MEMORY
  %loadMem_4af49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14479 = getelementptr inbounds %struct.GPR, %struct.GPR* %14478, i32 0, i32 33
  %14480 = getelementptr inbounds %struct.Reg, %struct.Reg* %14479, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %14480 to i64*
  %14481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14482 = getelementptr inbounds %struct.GPR, %struct.GPR* %14481, i32 0, i32 5
  %14483 = getelementptr inbounds %struct.Reg, %struct.Reg* %14482, i32 0, i32 0
  %RCX.i1163 = bitcast %union.anon* %14483 to i64*
  %14484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14485 = getelementptr inbounds %struct.GPR, %struct.GPR* %14484, i32 0, i32 15
  %14486 = getelementptr inbounds %struct.Reg, %struct.Reg* %14485, i32 0, i32 0
  %RBP.i1164 = bitcast %union.anon* %14486 to i64*
  %14487 = load i64, i64* %RBP.i1164
  %14488 = sub i64 %14487, 12
  %14489 = load i64, i64* %PC.i1162
  %14490 = add i64 %14489, 4
  store i64 %14490, i64* %PC.i1162
  %14491 = inttoptr i64 %14488 to i32*
  %14492 = load i32, i32* %14491
  %14493 = sext i32 %14492 to i64
  store i64 %14493, i64* %RCX.i1163, align 8
  store %struct.Memory* %loadMem_4af49b, %struct.Memory** %MEMORY
  %loadMem_4af49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14495 = getelementptr inbounds %struct.GPR, %struct.GPR* %14494, i32 0, i32 33
  %14496 = getelementptr inbounds %struct.Reg, %struct.Reg* %14495, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %14496 to i64*
  %14497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14498 = getelementptr inbounds %struct.GPR, %struct.GPR* %14497, i32 0, i32 1
  %14499 = getelementptr inbounds %struct.Reg, %struct.Reg* %14498, i32 0, i32 0
  %RAX.i1160 = bitcast %union.anon* %14499 to i64*
  %14500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14501 = getelementptr inbounds %struct.GPR, %struct.GPR* %14500, i32 0, i32 5
  %14502 = getelementptr inbounds %struct.Reg, %struct.Reg* %14501, i32 0, i32 0
  %RCX.i1161 = bitcast %union.anon* %14502 to i64*
  %14503 = load i64, i64* %RAX.i1160
  %14504 = load i64, i64* %RCX.i1161
  %14505 = mul i64 %14504, 8
  %14506 = add i64 %14505, %14503
  %14507 = load i64, i64* %PC.i1159
  %14508 = add i64 %14507, 4
  store i64 %14508, i64* %PC.i1159
  %14509 = inttoptr i64 %14506 to i64*
  %14510 = load i64, i64* %14509
  store i64 %14510, i64* %RAX.i1160, align 8
  store %struct.Memory* %loadMem_4af49f, %struct.Memory** %MEMORY
  %loadMem_4af4a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14512 = getelementptr inbounds %struct.GPR, %struct.GPR* %14511, i32 0, i32 33
  %14513 = getelementptr inbounds %struct.Reg, %struct.Reg* %14512, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %14513 to i64*
  %14514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14515 = getelementptr inbounds %struct.GPR, %struct.GPR* %14514, i32 0, i32 1
  %14516 = getelementptr inbounds %struct.Reg, %struct.Reg* %14515, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %14516 to i64*
  %14517 = load i64, i64* %RAX.i1158
  %14518 = add i64 %14517, 6440
  %14519 = load i64, i64* %PC.i1157
  %14520 = add i64 %14519, 7
  store i64 %14520, i64* %PC.i1157
  %14521 = inttoptr i64 %14518 to i64*
  %14522 = load i64, i64* %14521
  store i64 %14522, i64* %RAX.i1158, align 8
  store %struct.Memory* %loadMem_4af4a3, %struct.Memory** %MEMORY
  %loadMem_4af4aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %14523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14524 = getelementptr inbounds %struct.GPR, %struct.GPR* %14523, i32 0, i32 33
  %14525 = getelementptr inbounds %struct.Reg, %struct.Reg* %14524, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %14525 to i64*
  %14526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14527 = getelementptr inbounds %struct.GPR, %struct.GPR* %14526, i32 0, i32 1
  %14528 = getelementptr inbounds %struct.Reg, %struct.Reg* %14527, i32 0, i32 0
  %RAX.i1155 = bitcast %union.anon* %14528 to i64*
  %14529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14530 = getelementptr inbounds %struct.GPR, %struct.GPR* %14529, i32 0, i32 15
  %14531 = getelementptr inbounds %struct.Reg, %struct.Reg* %14530, i32 0, i32 0
  %RBP.i1156 = bitcast %union.anon* %14531 to i64*
  %14532 = load i64, i64* %RBP.i1156
  %14533 = sub i64 %14532, 792
  %14534 = load i64, i64* %RAX.i1155
  %14535 = load i64, i64* %PC.i1154
  %14536 = add i64 %14535, 7
  store i64 %14536, i64* %PC.i1154
  %14537 = inttoptr i64 %14533 to i64*
  store i64 %14534, i64* %14537
  store %struct.Memory* %loadMem_4af4aa, %struct.Memory** %MEMORY
  %loadMem_4af4b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14539 = getelementptr inbounds %struct.GPR, %struct.GPR* %14538, i32 0, i32 33
  %14540 = getelementptr inbounds %struct.Reg, %struct.Reg* %14539, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %14540 to i64*
  %14541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14542 = getelementptr inbounds %struct.GPR, %struct.GPR* %14541, i32 0, i32 15
  %14543 = getelementptr inbounds %struct.Reg, %struct.Reg* %14542, i32 0, i32 0
  %RBP.i1153 = bitcast %union.anon* %14543 to i64*
  %14544 = load i64, i64* %RBP.i1153
  %14545 = sub i64 %14544, 4
  %14546 = load i64, i64* %PC.i1152
  %14547 = add i64 %14546, 7
  store i64 %14547, i64* %PC.i1152
  %14548 = inttoptr i64 %14545 to i32*
  store i32 0, i32* %14548
  store %struct.Memory* %loadMem_4af4b1, %struct.Memory** %MEMORY
  br label %block_.L_4af4b8

block_.L_4af4b8:                                  ; preds = %block_4af4da, %block_4af446
  %loadMem_4af4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14550 = getelementptr inbounds %struct.GPR, %struct.GPR* %14549, i32 0, i32 33
  %14551 = getelementptr inbounds %struct.Reg, %struct.Reg* %14550, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %14551 to i64*
  %14552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14553 = getelementptr inbounds %struct.GPR, %struct.GPR* %14552, i32 0, i32 1
  %14554 = getelementptr inbounds %struct.Reg, %struct.Reg* %14553, i32 0, i32 0
  %RAX.i1150 = bitcast %union.anon* %14554 to i64*
  %14555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14556 = getelementptr inbounds %struct.GPR, %struct.GPR* %14555, i32 0, i32 15
  %14557 = getelementptr inbounds %struct.Reg, %struct.Reg* %14556, i32 0, i32 0
  %RBP.i1151 = bitcast %union.anon* %14557 to i64*
  %14558 = load i64, i64* %RBP.i1151
  %14559 = sub i64 %14558, 4
  %14560 = load i64, i64* %PC.i1149
  %14561 = add i64 %14560, 3
  store i64 %14561, i64* %PC.i1149
  %14562 = inttoptr i64 %14559 to i32*
  %14563 = load i32, i32* %14562
  %14564 = zext i32 %14563 to i64
  store i64 %14564, i64* %RAX.i1150, align 8
  store %struct.Memory* %loadMem_4af4b8, %struct.Memory** %MEMORY
  %loadMem_4af4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14566 = getelementptr inbounds %struct.GPR, %struct.GPR* %14565, i32 0, i32 33
  %14567 = getelementptr inbounds %struct.Reg, %struct.Reg* %14566, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %14567 to i64*
  %14568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14569 = getelementptr inbounds %struct.GPR, %struct.GPR* %14568, i32 0, i32 5
  %14570 = getelementptr inbounds %struct.Reg, %struct.Reg* %14569, i32 0, i32 0
  %RCX.i1148 = bitcast %union.anon* %14570 to i64*
  %14571 = load i64, i64* %PC.i1147
  %14572 = add i64 %14571, 8
  store i64 %14572, i64* %PC.i1147
  %14573 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14573, i64* %RCX.i1148, align 8
  store %struct.Memory* %loadMem_4af4bb, %struct.Memory** %MEMORY
  %loadMem_4af4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14575 = getelementptr inbounds %struct.GPR, %struct.GPR* %14574, i32 0, i32 33
  %14576 = getelementptr inbounds %struct.Reg, %struct.Reg* %14575, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %14576 to i64*
  %14577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14578 = getelementptr inbounds %struct.GPR, %struct.GPR* %14577, i32 0, i32 5
  %14579 = getelementptr inbounds %struct.Reg, %struct.Reg* %14578, i32 0, i32 0
  %RCX.i1145 = bitcast %union.anon* %14579 to i64*
  %14580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14581 = getelementptr inbounds %struct.GPR, %struct.GPR* %14580, i32 0, i32 7
  %14582 = getelementptr inbounds %struct.Reg, %struct.Reg* %14581, i32 0, i32 0
  %RDX.i1146 = bitcast %union.anon* %14582 to i64*
  %14583 = load i64, i64* %RCX.i1145
  %14584 = add i64 %14583, 60
  %14585 = load i64, i64* %PC.i1144
  %14586 = add i64 %14585, 3
  store i64 %14586, i64* %PC.i1144
  %14587 = inttoptr i64 %14584 to i32*
  %14588 = load i32, i32* %14587
  %14589 = zext i32 %14588 to i64
  store i64 %14589, i64* %RDX.i1146, align 8
  store %struct.Memory* %loadMem_4af4c3, %struct.Memory** %MEMORY
  %loadMem_4af4c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14591 = getelementptr inbounds %struct.GPR, %struct.GPR* %14590, i32 0, i32 33
  %14592 = getelementptr inbounds %struct.Reg, %struct.Reg* %14591, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %14592 to i64*
  %14593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14594 = getelementptr inbounds %struct.GPR, %struct.GPR* %14593, i32 0, i32 5
  %14595 = getelementptr inbounds %struct.Reg, %struct.Reg* %14594, i32 0, i32 0
  %RCX.i1143 = bitcast %union.anon* %14595 to i64*
  %14596 = load i64, i64* %PC.i1142
  %14597 = add i64 %14596, 8
  store i64 %14597, i64* %PC.i1142
  %14598 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14598, i64* %RCX.i1143, align 8
  store %struct.Memory* %loadMem_4af4c6, %struct.Memory** %MEMORY
  %loadMem_4af4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %14599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14600 = getelementptr inbounds %struct.GPR, %struct.GPR* %14599, i32 0, i32 33
  %14601 = getelementptr inbounds %struct.Reg, %struct.Reg* %14600, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %14601 to i64*
  %14602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14603 = getelementptr inbounds %struct.GPR, %struct.GPR* %14602, i32 0, i32 5
  %14604 = getelementptr inbounds %struct.Reg, %struct.Reg* %14603, i32 0, i32 0
  %RCX.i1140 = bitcast %union.anon* %14604 to i64*
  %14605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14606 = getelementptr inbounds %struct.GPR, %struct.GPR* %14605, i32 0, i32 7
  %14607 = getelementptr inbounds %struct.Reg, %struct.Reg* %14606, i32 0, i32 0
  %RDX.i1141 = bitcast %union.anon* %14607 to i64*
  %14608 = load i64, i64* %RDX.i1141
  %14609 = load i64, i64* %RCX.i1140
  %14610 = add i64 %14609, 52
  %14611 = load i64, i64* %PC.i1139
  %14612 = add i64 %14611, 4
  store i64 %14612, i64* %PC.i1139
  %14613 = inttoptr i64 %14610 to i32*
  %14614 = load i32, i32* %14613
  %14615 = shl i64 %14608, 32
  %14616 = ashr exact i64 %14615, 32
  %14617 = sext i32 %14614 to i64
  %14618 = mul i64 %14617, %14616
  %14619 = trunc i64 %14618 to i32
  %14620 = and i64 %14618, 4294967295
  store i64 %14620, i64* %RDX.i1141, align 8
  %14621 = shl i64 %14618, 32
  %14622 = ashr exact i64 %14621, 32
  %14623 = icmp ne i64 %14622, %14618
  %14624 = zext i1 %14623 to i8
  %14625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14624, i8* %14625, align 1
  %14626 = and i32 %14619, 255
  %14627 = call i32 @llvm.ctpop.i32(i32 %14626)
  %14628 = trunc i32 %14627 to i8
  %14629 = and i8 %14628, 1
  %14630 = xor i8 %14629, 1
  %14631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14630, i8* %14631, align 1
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14632, align 1
  %14633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14633, align 1
  %14634 = lshr i32 %14619, 31
  %14635 = trunc i32 %14634 to i8
  %14636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14635, i8* %14636, align 1
  %14637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14624, i8* %14637, align 1
  store %struct.Memory* %loadMem_4af4ce, %struct.Memory** %MEMORY
  %loadMem_4af4d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14639 = getelementptr inbounds %struct.GPR, %struct.GPR* %14638, i32 0, i32 33
  %14640 = getelementptr inbounds %struct.Reg, %struct.Reg* %14639, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %14640 to i64*
  %14641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14642 = getelementptr inbounds %struct.GPR, %struct.GPR* %14641, i32 0, i32 1
  %14643 = getelementptr inbounds %struct.Reg, %struct.Reg* %14642, i32 0, i32 0
  %EAX.i1137 = bitcast %union.anon* %14643 to i32*
  %14644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14645 = getelementptr inbounds %struct.GPR, %struct.GPR* %14644, i32 0, i32 7
  %14646 = getelementptr inbounds %struct.Reg, %struct.Reg* %14645, i32 0, i32 0
  %EDX.i1138 = bitcast %union.anon* %14646 to i32*
  %14647 = load i32, i32* %EAX.i1137
  %14648 = zext i32 %14647 to i64
  %14649 = load i32, i32* %EDX.i1138
  %14650 = zext i32 %14649 to i64
  %14651 = load i64, i64* %PC.i1136
  %14652 = add i64 %14651, 2
  store i64 %14652, i64* %PC.i1136
  %14653 = sub i32 %14647, %14649
  %14654 = icmp ult i32 %14647, %14649
  %14655 = zext i1 %14654 to i8
  %14656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14655, i8* %14656, align 1
  %14657 = and i32 %14653, 255
  %14658 = call i32 @llvm.ctpop.i32(i32 %14657)
  %14659 = trunc i32 %14658 to i8
  %14660 = and i8 %14659, 1
  %14661 = xor i8 %14660, 1
  %14662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14661, i8* %14662, align 1
  %14663 = xor i64 %14650, %14648
  %14664 = trunc i64 %14663 to i32
  %14665 = xor i32 %14664, %14653
  %14666 = lshr i32 %14665, 4
  %14667 = trunc i32 %14666 to i8
  %14668 = and i8 %14667, 1
  %14669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14668, i8* %14669, align 1
  %14670 = icmp eq i32 %14653, 0
  %14671 = zext i1 %14670 to i8
  %14672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14671, i8* %14672, align 1
  %14673 = lshr i32 %14653, 31
  %14674 = trunc i32 %14673 to i8
  %14675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14674, i8* %14675, align 1
  %14676 = lshr i32 %14647, 31
  %14677 = lshr i32 %14649, 31
  %14678 = xor i32 %14677, %14676
  %14679 = xor i32 %14673, %14676
  %14680 = add i32 %14679, %14678
  %14681 = icmp eq i32 %14680, 2
  %14682 = zext i1 %14681 to i8
  %14683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14682, i8* %14683, align 1
  store %struct.Memory* %loadMem_4af4d2, %struct.Memory** %MEMORY
  %loadMem_4af4d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14685 = getelementptr inbounds %struct.GPR, %struct.GPR* %14684, i32 0, i32 33
  %14686 = getelementptr inbounds %struct.Reg, %struct.Reg* %14685, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %14686 to i64*
  %14687 = load i64, i64* %PC.i1135
  %14688 = add i64 %14687, 74
  %14689 = load i64, i64* %PC.i1135
  %14690 = add i64 %14689, 6
  %14691 = load i64, i64* %PC.i1135
  %14692 = add i64 %14691, 6
  store i64 %14692, i64* %PC.i1135
  %14693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14694 = load i8, i8* %14693, align 1
  %14695 = icmp ne i8 %14694, 0
  %14696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14697 = load i8, i8* %14696, align 1
  %14698 = icmp ne i8 %14697, 0
  %14699 = xor i1 %14695, %14698
  %14700 = xor i1 %14699, true
  %14701 = zext i1 %14700 to i8
  store i8 %14701, i8* %BRANCH_TAKEN, align 1
  %14702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14703 = select i1 %14699, i64 %14690, i64 %14688
  store i64 %14703, i64* %14702, align 8
  store %struct.Memory* %loadMem_4af4d4, %struct.Memory** %MEMORY
  %loadBr_4af4d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af4d4 = icmp eq i8 %loadBr_4af4d4, 1
  br i1 %cmpBr_4af4d4, label %block_.L_4af51e, label %block_4af4da

block_4af4da:                                     ; preds = %block_.L_4af4b8
  %loadMem_4af4da = load %struct.Memory*, %struct.Memory** %MEMORY
  %14704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14705 = getelementptr inbounds %struct.GPR, %struct.GPR* %14704, i32 0, i32 33
  %14706 = getelementptr inbounds %struct.Reg, %struct.Reg* %14705, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %14706 to i64*
  %14707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14708 = getelementptr inbounds %struct.GPR, %struct.GPR* %14707, i32 0, i32 1
  %14709 = getelementptr inbounds %struct.Reg, %struct.Reg* %14708, i32 0, i32 0
  %RAX.i1133 = bitcast %union.anon* %14709 to i64*
  %14710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14711 = getelementptr inbounds %struct.GPR, %struct.GPR* %14710, i32 0, i32 15
  %14712 = getelementptr inbounds %struct.Reg, %struct.Reg* %14711, i32 0, i32 0
  %RBP.i1134 = bitcast %union.anon* %14712 to i64*
  %14713 = load i64, i64* %RBP.i1134
  %14714 = sub i64 %14713, 768
  %14715 = load i64, i64* %PC.i1132
  %14716 = add i64 %14715, 7
  store i64 %14716, i64* %PC.i1132
  store i64 %14714, i64* %RAX.i1133, align 8
  store %struct.Memory* %loadMem_4af4da, %struct.Memory** %MEMORY
  %loadMem_4af4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14718 = getelementptr inbounds %struct.GPR, %struct.GPR* %14717, i32 0, i32 33
  %14719 = getelementptr inbounds %struct.Reg, %struct.Reg* %14718, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %14719 to i64*
  %14720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14721 = getelementptr inbounds %struct.GPR, %struct.GPR* %14720, i32 0, i32 5
  %14722 = getelementptr inbounds %struct.Reg, %struct.Reg* %14721, i32 0, i32 0
  %RCX.i1130 = bitcast %union.anon* %14722 to i64*
  %14723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14724 = getelementptr inbounds %struct.GPR, %struct.GPR* %14723, i32 0, i32 15
  %14725 = getelementptr inbounds %struct.Reg, %struct.Reg* %14724, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %14725 to i64*
  %14726 = load i64, i64* %RBP.i1131
  %14727 = sub i64 %14726, 784
  %14728 = load i64, i64* %PC.i1129
  %14729 = add i64 %14728, 7
  store i64 %14729, i64* %PC.i1129
  %14730 = inttoptr i64 %14727 to i64*
  %14731 = load i64, i64* %14730
  store i64 %14731, i64* %RCX.i1130, align 8
  store %struct.Memory* %loadMem_4af4e1, %struct.Memory** %MEMORY
  %loadMem_4af4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14733 = getelementptr inbounds %struct.GPR, %struct.GPR* %14732, i32 0, i32 33
  %14734 = getelementptr inbounds %struct.Reg, %struct.Reg* %14733, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %14734 to i64*
  %14735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14736 = getelementptr inbounds %struct.GPR, %struct.GPR* %14735, i32 0, i32 7
  %14737 = getelementptr inbounds %struct.Reg, %struct.Reg* %14736, i32 0, i32 0
  %RDX.i1127 = bitcast %union.anon* %14737 to i64*
  %14738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14739 = getelementptr inbounds %struct.GPR, %struct.GPR* %14738, i32 0, i32 15
  %14740 = getelementptr inbounds %struct.Reg, %struct.Reg* %14739, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %14740 to i64*
  %14741 = load i64, i64* %RBP.i1128
  %14742 = sub i64 %14741, 4
  %14743 = load i64, i64* %PC.i1126
  %14744 = add i64 %14743, 4
  store i64 %14744, i64* %PC.i1126
  %14745 = inttoptr i64 %14742 to i32*
  %14746 = load i32, i32* %14745
  %14747 = sext i32 %14746 to i64
  store i64 %14747, i64* %RDX.i1127, align 8
  store %struct.Memory* %loadMem_4af4e8, %struct.Memory** %MEMORY
  %loadMem_4af4ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %14748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14749 = getelementptr inbounds %struct.GPR, %struct.GPR* %14748, i32 0, i32 33
  %14750 = getelementptr inbounds %struct.Reg, %struct.Reg* %14749, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %14750 to i64*
  %14751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14752 = getelementptr inbounds %struct.GPR, %struct.GPR* %14751, i32 0, i32 5
  %14753 = getelementptr inbounds %struct.Reg, %struct.Reg* %14752, i32 0, i32 0
  %RCX.i1123 = bitcast %union.anon* %14753 to i64*
  %14754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14755 = getelementptr inbounds %struct.GPR, %struct.GPR* %14754, i32 0, i32 7
  %14756 = getelementptr inbounds %struct.Reg, %struct.Reg* %14755, i32 0, i32 0
  %RDX.i1124 = bitcast %union.anon* %14756 to i64*
  %14757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14758 = getelementptr inbounds %struct.GPR, %struct.GPR* %14757, i32 0, i32 9
  %14759 = getelementptr inbounds %struct.Reg, %struct.Reg* %14758, i32 0, i32 0
  %RSI.i1125 = bitcast %union.anon* %14759 to i64*
  %14760 = load i64, i64* %RCX.i1123
  %14761 = load i64, i64* %RDX.i1124
  %14762 = mul i64 %14761, 2
  %14763 = add i64 %14762, %14760
  %14764 = load i64, i64* %PC.i1122
  %14765 = add i64 %14764, 4
  store i64 %14765, i64* %PC.i1122
  %14766 = inttoptr i64 %14763 to i16*
  %14767 = load i16, i16* %14766
  %14768 = zext i16 %14767 to i64
  store i64 %14768, i64* %RSI.i1125, align 8
  store %struct.Memory* %loadMem_4af4ec, %struct.Memory** %MEMORY
  %loadMem_4af4f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14770 = getelementptr inbounds %struct.GPR, %struct.GPR* %14769, i32 0, i32 33
  %14771 = getelementptr inbounds %struct.Reg, %struct.Reg* %14770, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %14771 to i64*
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14773 = getelementptr inbounds %struct.GPR, %struct.GPR* %14772, i32 0, i32 9
  %14774 = getelementptr inbounds %struct.Reg, %struct.Reg* %14773, i32 0, i32 0
  %ESI.i1120 = bitcast %union.anon* %14774 to i32*
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14776 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14775, i64 0, i64 0
  %YMM0.i1121 = bitcast %union.VectorReg* %14776 to %"class.std::bitset"*
  %14777 = bitcast %"class.std::bitset"* %YMM0.i1121 to i8*
  %14778 = load i32, i32* %ESI.i1120
  %14779 = zext i32 %14778 to i64
  %14780 = load i64, i64* %PC.i1119
  %14781 = add i64 %14780, 4
  store i64 %14781, i64* %PC.i1119
  %14782 = sitofp i32 %14778 to double
  %14783 = bitcast i8* %14777 to double*
  store double %14782, double* %14783, align 1
  store %struct.Memory* %loadMem_4af4f0, %struct.Memory** %MEMORY
  %loadMem_4af4f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14785 = getelementptr inbounds %struct.GPR, %struct.GPR* %14784, i32 0, i32 33
  %14786 = getelementptr inbounds %struct.Reg, %struct.Reg* %14785, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %14786 to i64*
  %14787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14788 = getelementptr inbounds %struct.GPR, %struct.GPR* %14787, i32 0, i32 5
  %14789 = getelementptr inbounds %struct.Reg, %struct.Reg* %14788, i32 0, i32 0
  %RCX.i1117 = bitcast %union.anon* %14789 to i64*
  %14790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14791 = getelementptr inbounds %struct.GPR, %struct.GPR* %14790, i32 0, i32 15
  %14792 = getelementptr inbounds %struct.Reg, %struct.Reg* %14791, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %14792 to i64*
  %14793 = load i64, i64* %RBP.i1118
  %14794 = sub i64 %14793, 35396
  %14795 = load i64, i64* %PC.i1116
  %14796 = add i64 %14795, 7
  store i64 %14796, i64* %PC.i1116
  %14797 = inttoptr i64 %14794 to i32*
  %14798 = load i32, i32* %14797
  %14799 = sext i32 %14798 to i64
  store i64 %14799, i64* %RCX.i1117, align 8
  store %struct.Memory* %loadMem_4af4f4, %struct.Memory** %MEMORY
  %loadMem_4af4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14801 = getelementptr inbounds %struct.GPR, %struct.GPR* %14800, i32 0, i32 33
  %14802 = getelementptr inbounds %struct.Reg, %struct.Reg* %14801, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %14802 to i64*
  %14803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14804 = getelementptr inbounds %struct.GPR, %struct.GPR* %14803, i32 0, i32 5
  %14805 = getelementptr inbounds %struct.Reg, %struct.Reg* %14804, i32 0, i32 0
  %RCX.i1115 = bitcast %union.anon* %14805 to i64*
  %14806 = load i64, i64* %RCX.i1115
  %14807 = load i64, i64* %PC.i1114
  %14808 = add i64 %14807, 4
  store i64 %14808, i64* %PC.i1114
  %14809 = sext i64 %14806 to i128
  %14810 = and i128 %14809, -18446744073709551616
  %14811 = zext i64 %14806 to i128
  %14812 = or i128 %14810, %14811
  %14813 = mul i128 120, %14812
  %14814 = trunc i128 %14813 to i64
  store i64 %14814, i64* %RCX.i1115, align 8
  %14815 = sext i64 %14814 to i128
  %14816 = icmp ne i128 %14815, %14813
  %14817 = zext i1 %14816 to i8
  %14818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14817, i8* %14818, align 1
  %14819 = trunc i128 %14813 to i32
  %14820 = and i32 %14819, 255
  %14821 = call i32 @llvm.ctpop.i32(i32 %14820)
  %14822 = trunc i32 %14821 to i8
  %14823 = and i8 %14822, 1
  %14824 = xor i8 %14823, 1
  %14825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14824, i8* %14825, align 1
  %14826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14826, align 1
  %14827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14827, align 1
  %14828 = lshr i64 %14814, 63
  %14829 = trunc i64 %14828 to i8
  %14830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14829, i8* %14830, align 1
  %14831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14817, i8* %14831, align 1
  store %struct.Memory* %loadMem_4af4fb, %struct.Memory** %MEMORY
  %loadMem_4af4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %14832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14833 = getelementptr inbounds %struct.GPR, %struct.GPR* %14832, i32 0, i32 33
  %14834 = getelementptr inbounds %struct.Reg, %struct.Reg* %14833, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %14834 to i64*
  %14835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14836 = getelementptr inbounds %struct.GPR, %struct.GPR* %14835, i32 0, i32 1
  %14837 = getelementptr inbounds %struct.Reg, %struct.Reg* %14836, i32 0, i32 0
  %RAX.i1112 = bitcast %union.anon* %14837 to i64*
  %14838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14839 = getelementptr inbounds %struct.GPR, %struct.GPR* %14838, i32 0, i32 5
  %14840 = getelementptr inbounds %struct.Reg, %struct.Reg* %14839, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %14840 to i64*
  %14841 = load i64, i64* %RAX.i1112
  %14842 = load i64, i64* %RCX.i1113
  %14843 = load i64, i64* %PC.i1111
  %14844 = add i64 %14843, 3
  store i64 %14844, i64* %PC.i1111
  %14845 = add i64 %14842, %14841
  store i64 %14845, i64* %RAX.i1112, align 8
  %14846 = icmp ult i64 %14845, %14841
  %14847 = icmp ult i64 %14845, %14842
  %14848 = or i1 %14846, %14847
  %14849 = zext i1 %14848 to i8
  %14850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14849, i8* %14850, align 1
  %14851 = trunc i64 %14845 to i32
  %14852 = and i32 %14851, 255
  %14853 = call i32 @llvm.ctpop.i32(i32 %14852)
  %14854 = trunc i32 %14853 to i8
  %14855 = and i8 %14854, 1
  %14856 = xor i8 %14855, 1
  %14857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14856, i8* %14857, align 1
  %14858 = xor i64 %14842, %14841
  %14859 = xor i64 %14858, %14845
  %14860 = lshr i64 %14859, 4
  %14861 = trunc i64 %14860 to i8
  %14862 = and i8 %14861, 1
  %14863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14862, i8* %14863, align 1
  %14864 = icmp eq i64 %14845, 0
  %14865 = zext i1 %14864 to i8
  %14866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14865, i8* %14866, align 1
  %14867 = lshr i64 %14845, 63
  %14868 = trunc i64 %14867 to i8
  %14869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14868, i8* %14869, align 1
  %14870 = lshr i64 %14841, 63
  %14871 = lshr i64 %14842, 63
  %14872 = xor i64 %14867, %14870
  %14873 = xor i64 %14867, %14871
  %14874 = add i64 %14872, %14873
  %14875 = icmp eq i64 %14874, 2
  %14876 = zext i1 %14875 to i8
  %14877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14876, i8* %14877, align 1
  store %struct.Memory* %loadMem_4af4ff, %struct.Memory** %MEMORY
  %loadMem_4af502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14879 = getelementptr inbounds %struct.GPR, %struct.GPR* %14878, i32 0, i32 33
  %14880 = getelementptr inbounds %struct.Reg, %struct.Reg* %14879, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %14880 to i64*
  %14881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14882 = getelementptr inbounds %struct.GPR, %struct.GPR* %14881, i32 0, i32 5
  %14883 = getelementptr inbounds %struct.Reg, %struct.Reg* %14882, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %14883 to i64*
  %14884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14885 = getelementptr inbounds %struct.GPR, %struct.GPR* %14884, i32 0, i32 15
  %14886 = getelementptr inbounds %struct.Reg, %struct.Reg* %14885, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %14886 to i64*
  %14887 = load i64, i64* %RBP.i1110
  %14888 = sub i64 %14887, 12
  %14889 = load i64, i64* %PC.i1108
  %14890 = add i64 %14889, 4
  store i64 %14890, i64* %PC.i1108
  %14891 = inttoptr i64 %14888 to i32*
  %14892 = load i32, i32* %14891
  %14893 = sext i32 %14892 to i64
  store i64 %14893, i64* %RCX.i1109, align 8
  store %struct.Memory* %loadMem_4af502, %struct.Memory** %MEMORY
  %loadMem_4af506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14895 = getelementptr inbounds %struct.GPR, %struct.GPR* %14894, i32 0, i32 33
  %14896 = getelementptr inbounds %struct.Reg, %struct.Reg* %14895, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %14896 to i64*
  %14897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14898 = getelementptr inbounds %struct.GPR, %struct.GPR* %14897, i32 0, i32 1
  %14899 = getelementptr inbounds %struct.Reg, %struct.Reg* %14898, i32 0, i32 0
  %RAX.i1105 = bitcast %union.anon* %14899 to i64*
  %14900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14901 = getelementptr inbounds %struct.GPR, %struct.GPR* %14900, i32 0, i32 5
  %14902 = getelementptr inbounds %struct.Reg, %struct.Reg* %14901, i32 0, i32 0
  %RCX.i1106 = bitcast %union.anon* %14902 to i64*
  %14903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14904 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14903, i64 0, i64 0
  %YMM0.i1107 = bitcast %union.VectorReg* %14904 to %"class.std::bitset"*
  %14905 = bitcast %"class.std::bitset"* %YMM0.i1107 to i8*
  %14906 = bitcast %"class.std::bitset"* %YMM0.i1107 to i8*
  %14907 = load i64, i64* %RAX.i1105
  %14908 = load i64, i64* %RCX.i1106
  %14909 = mul i64 %14908, 8
  %14910 = add i64 %14909, %14907
  %14911 = load i64, i64* %PC.i1104
  %14912 = add i64 %14911, 5
  store i64 %14912, i64* %PC.i1104
  %14913 = bitcast i8* %14906 to double*
  %14914 = load double, double* %14913, align 1
  %14915 = getelementptr inbounds i8, i8* %14906, i64 8
  %14916 = bitcast i8* %14915 to i64*
  %14917 = load i64, i64* %14916, align 1
  %14918 = inttoptr i64 %14910 to double*
  %14919 = load double, double* %14918
  %14920 = fadd double %14914, %14919
  %14921 = bitcast i8* %14905 to double*
  store double %14920, double* %14921, align 1
  %14922 = getelementptr inbounds i8, i8* %14905, i64 8
  %14923 = bitcast i8* %14922 to i64*
  store i64 %14917, i64* %14923, align 1
  store %struct.Memory* %loadMem_4af506, %struct.Memory** %MEMORY
  %loadMem_4af50b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14925 = getelementptr inbounds %struct.GPR, %struct.GPR* %14924, i32 0, i32 33
  %14926 = getelementptr inbounds %struct.Reg, %struct.Reg* %14925, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %14926 to i64*
  %14927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14928 = getelementptr inbounds %struct.GPR, %struct.GPR* %14927, i32 0, i32 1
  %14929 = getelementptr inbounds %struct.Reg, %struct.Reg* %14928, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %14929 to i64*
  %14930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14931 = getelementptr inbounds %struct.GPR, %struct.GPR* %14930, i32 0, i32 5
  %14932 = getelementptr inbounds %struct.Reg, %struct.Reg* %14931, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %14932 to i64*
  %14933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14934 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14933, i64 0, i64 0
  %XMM0.i1103 = bitcast %union.VectorReg* %14934 to %union.vec128_t*
  %14935 = load i64, i64* %RAX.i1101
  %14936 = load i64, i64* %RCX.i1102
  %14937 = mul i64 %14936, 8
  %14938 = add i64 %14937, %14935
  %14939 = bitcast %union.vec128_t* %XMM0.i1103 to i8*
  %14940 = load i64, i64* %PC.i1100
  %14941 = add i64 %14940, 5
  store i64 %14941, i64* %PC.i1100
  %14942 = bitcast i8* %14939 to double*
  %14943 = load double, double* %14942, align 1
  %14944 = inttoptr i64 %14938 to double*
  store double %14943, double* %14944
  store %struct.Memory* %loadMem_4af50b, %struct.Memory** %MEMORY
  %loadMem_4af510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14946 = getelementptr inbounds %struct.GPR, %struct.GPR* %14945, i32 0, i32 33
  %14947 = getelementptr inbounds %struct.Reg, %struct.Reg* %14946, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %14947 to i64*
  %14948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14949 = getelementptr inbounds %struct.GPR, %struct.GPR* %14948, i32 0, i32 1
  %14950 = getelementptr inbounds %struct.Reg, %struct.Reg* %14949, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %14950 to i64*
  %14951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14952 = getelementptr inbounds %struct.GPR, %struct.GPR* %14951, i32 0, i32 15
  %14953 = getelementptr inbounds %struct.Reg, %struct.Reg* %14952, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %14953 to i64*
  %14954 = load i64, i64* %RBP.i1099
  %14955 = sub i64 %14954, 4
  %14956 = load i64, i64* %PC.i1097
  %14957 = add i64 %14956, 3
  store i64 %14957, i64* %PC.i1097
  %14958 = inttoptr i64 %14955 to i32*
  %14959 = load i32, i32* %14958
  %14960 = zext i32 %14959 to i64
  store i64 %14960, i64* %RAX.i1098, align 8
  store %struct.Memory* %loadMem_4af510, %struct.Memory** %MEMORY
  %loadMem_4af513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14962 = getelementptr inbounds %struct.GPR, %struct.GPR* %14961, i32 0, i32 33
  %14963 = getelementptr inbounds %struct.Reg, %struct.Reg* %14962, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %14963 to i64*
  %14964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14965 = getelementptr inbounds %struct.GPR, %struct.GPR* %14964, i32 0, i32 1
  %14966 = getelementptr inbounds %struct.Reg, %struct.Reg* %14965, i32 0, i32 0
  %RAX.i1096 = bitcast %union.anon* %14966 to i64*
  %14967 = load i64, i64* %RAX.i1096
  %14968 = load i64, i64* %PC.i1095
  %14969 = add i64 %14968, 3
  store i64 %14969, i64* %PC.i1095
  %14970 = trunc i64 %14967 to i32
  %14971 = add i32 1, %14970
  %14972 = zext i32 %14971 to i64
  store i64 %14972, i64* %RAX.i1096, align 8
  %14973 = icmp ult i32 %14971, %14970
  %14974 = icmp ult i32 %14971, 1
  %14975 = or i1 %14973, %14974
  %14976 = zext i1 %14975 to i8
  %14977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14976, i8* %14977, align 1
  %14978 = and i32 %14971, 255
  %14979 = call i32 @llvm.ctpop.i32(i32 %14978)
  %14980 = trunc i32 %14979 to i8
  %14981 = and i8 %14980, 1
  %14982 = xor i8 %14981, 1
  %14983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14982, i8* %14983, align 1
  %14984 = xor i64 1, %14967
  %14985 = trunc i64 %14984 to i32
  %14986 = xor i32 %14985, %14971
  %14987 = lshr i32 %14986, 4
  %14988 = trunc i32 %14987 to i8
  %14989 = and i8 %14988, 1
  %14990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14989, i8* %14990, align 1
  %14991 = icmp eq i32 %14971, 0
  %14992 = zext i1 %14991 to i8
  %14993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14992, i8* %14993, align 1
  %14994 = lshr i32 %14971, 31
  %14995 = trunc i32 %14994 to i8
  %14996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14995, i8* %14996, align 1
  %14997 = lshr i32 %14970, 31
  %14998 = xor i32 %14994, %14997
  %14999 = add i32 %14998, %14994
  %15000 = icmp eq i32 %14999, 2
  %15001 = zext i1 %15000 to i8
  %15002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15001, i8* %15002, align 1
  store %struct.Memory* %loadMem_4af513, %struct.Memory** %MEMORY
  %loadMem_4af516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15004 = getelementptr inbounds %struct.GPR, %struct.GPR* %15003, i32 0, i32 33
  %15005 = getelementptr inbounds %struct.Reg, %struct.Reg* %15004, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %15005 to i64*
  %15006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15007 = getelementptr inbounds %struct.GPR, %struct.GPR* %15006, i32 0, i32 1
  %15008 = getelementptr inbounds %struct.Reg, %struct.Reg* %15007, i32 0, i32 0
  %EAX.i1093 = bitcast %union.anon* %15008 to i32*
  %15009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15010 = getelementptr inbounds %struct.GPR, %struct.GPR* %15009, i32 0, i32 15
  %15011 = getelementptr inbounds %struct.Reg, %struct.Reg* %15010, i32 0, i32 0
  %RBP.i1094 = bitcast %union.anon* %15011 to i64*
  %15012 = load i64, i64* %RBP.i1094
  %15013 = sub i64 %15012, 4
  %15014 = load i32, i32* %EAX.i1093
  %15015 = zext i32 %15014 to i64
  %15016 = load i64, i64* %PC.i1092
  %15017 = add i64 %15016, 3
  store i64 %15017, i64* %PC.i1092
  %15018 = inttoptr i64 %15013 to i32*
  store i32 %15014, i32* %15018
  store %struct.Memory* %loadMem_4af516, %struct.Memory** %MEMORY
  %loadMem_4af519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15020 = getelementptr inbounds %struct.GPR, %struct.GPR* %15019, i32 0, i32 33
  %15021 = getelementptr inbounds %struct.Reg, %struct.Reg* %15020, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %15021 to i64*
  %15022 = load i64, i64* %PC.i1091
  %15023 = add i64 %15022, -97
  %15024 = load i64, i64* %PC.i1091
  %15025 = add i64 %15024, 5
  store i64 %15025, i64* %PC.i1091
  %15026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15023, i64* %15026, align 8
  store %struct.Memory* %loadMem_4af519, %struct.Memory** %MEMORY
  br label %block_.L_4af4b8

block_.L_4af51e:                                  ; preds = %block_.L_4af4b8
  %loadMem_4af51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15028 = getelementptr inbounds %struct.GPR, %struct.GPR* %15027, i32 0, i32 33
  %15029 = getelementptr inbounds %struct.Reg, %struct.Reg* %15028, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %15029 to i64*
  %15030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15031 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15030, i64 0, i64 0
  %YMM0.i1089 = bitcast %union.VectorReg* %15031 to %"class.std::bitset"*
  %15032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15033 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15032, i64 0, i64 0
  %XMM0.i1090 = bitcast %union.VectorReg* %15033 to %union.vec128_t*
  %15034 = bitcast %"class.std::bitset"* %YMM0.i1089 to i8*
  %15035 = bitcast %"class.std::bitset"* %YMM0.i1089 to i8*
  %15036 = bitcast %union.vec128_t* %XMM0.i1090 to i8*
  %15037 = load i64, i64* %PC.i1088
  %15038 = add i64 %15037, 3
  store i64 %15038, i64* %PC.i1088
  %15039 = bitcast i8* %15035 to i64*
  %15040 = load i64, i64* %15039, align 1
  %15041 = getelementptr inbounds i8, i8* %15035, i64 8
  %15042 = bitcast i8* %15041 to i64*
  %15043 = load i64, i64* %15042, align 1
  %15044 = bitcast i8* %15036 to i64*
  %15045 = load i64, i64* %15044, align 1
  %15046 = getelementptr inbounds i8, i8* %15036, i64 8
  %15047 = bitcast i8* %15046 to i64*
  %15048 = load i64, i64* %15047, align 1
  %15049 = xor i64 %15045, %15040
  %15050 = xor i64 %15048, %15043
  %15051 = trunc i64 %15049 to i32
  %15052 = lshr i64 %15049, 32
  %15053 = trunc i64 %15052 to i32
  %15054 = bitcast i8* %15034 to i32*
  store i32 %15051, i32* %15054, align 1
  %15055 = getelementptr inbounds i8, i8* %15034, i64 4
  %15056 = bitcast i8* %15055 to i32*
  store i32 %15053, i32* %15056, align 1
  %15057 = trunc i64 %15050 to i32
  %15058 = getelementptr inbounds i8, i8* %15034, i64 8
  %15059 = bitcast i8* %15058 to i32*
  store i32 %15057, i32* %15059, align 1
  %15060 = lshr i64 %15050, 32
  %15061 = trunc i64 %15060 to i32
  %15062 = getelementptr inbounds i8, i8* %15034, i64 12
  %15063 = bitcast i8* %15062 to i32*
  store i32 %15061, i32* %15063, align 1
  store %struct.Memory* %loadMem_4af51e, %struct.Memory** %MEMORY
  %loadMem_4af521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15065 = getelementptr inbounds %struct.GPR, %struct.GPR* %15064, i32 0, i32 33
  %15066 = getelementptr inbounds %struct.Reg, %struct.Reg* %15065, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %15066 to i64*
  %15067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15068 = getelementptr inbounds %struct.GPR, %struct.GPR* %15067, i32 0, i32 1
  %15069 = getelementptr inbounds %struct.Reg, %struct.Reg* %15068, i32 0, i32 0
  %RAX.i1086 = bitcast %union.anon* %15069 to i64*
  %15070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15071 = getelementptr inbounds %struct.GPR, %struct.GPR* %15070, i32 0, i32 15
  %15072 = getelementptr inbounds %struct.Reg, %struct.Reg* %15071, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %15072 to i64*
  %15073 = load i64, i64* %RBP.i1087
  %15074 = sub i64 %15073, 768
  %15075 = load i64, i64* %PC.i1085
  %15076 = add i64 %15075, 7
  store i64 %15076, i64* %PC.i1085
  store i64 %15074, i64* %RAX.i1086, align 8
  store %struct.Memory* %loadMem_4af521, %struct.Memory** %MEMORY
  %loadMem_4af528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15078 = getelementptr inbounds %struct.GPR, %struct.GPR* %15077, i32 0, i32 33
  %15079 = getelementptr inbounds %struct.Reg, %struct.Reg* %15078, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %15079 to i64*
  %15080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15081 = getelementptr inbounds %struct.GPR, %struct.GPR* %15080, i32 0, i32 5
  %15082 = getelementptr inbounds %struct.Reg, %struct.Reg* %15081, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %15082 to i64*
  %15083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15084 = getelementptr inbounds %struct.GPR, %struct.GPR* %15083, i32 0, i32 15
  %15085 = getelementptr inbounds %struct.Reg, %struct.Reg* %15084, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %15085 to i64*
  %15086 = load i64, i64* %RBP.i1084
  %15087 = sub i64 %15086, 35396
  %15088 = load i64, i64* %PC.i1082
  %15089 = add i64 %15088, 7
  store i64 %15089, i64* %PC.i1082
  %15090 = inttoptr i64 %15087 to i32*
  %15091 = load i32, i32* %15090
  %15092 = sext i32 %15091 to i64
  store i64 %15092, i64* %RCX.i1083, align 8
  store %struct.Memory* %loadMem_4af528, %struct.Memory** %MEMORY
  %loadMem_4af52f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15094 = getelementptr inbounds %struct.GPR, %struct.GPR* %15093, i32 0, i32 33
  %15095 = getelementptr inbounds %struct.Reg, %struct.Reg* %15094, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %15095 to i64*
  %15096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15097 = getelementptr inbounds %struct.GPR, %struct.GPR* %15096, i32 0, i32 5
  %15098 = getelementptr inbounds %struct.Reg, %struct.Reg* %15097, i32 0, i32 0
  %RCX.i1081 = bitcast %union.anon* %15098 to i64*
  %15099 = load i64, i64* %RCX.i1081
  %15100 = load i64, i64* %PC.i1080
  %15101 = add i64 %15100, 4
  store i64 %15101, i64* %PC.i1080
  %15102 = sext i64 %15099 to i128
  %15103 = and i128 %15102, -18446744073709551616
  %15104 = zext i64 %15099 to i128
  %15105 = or i128 %15103, %15104
  %15106 = mul i128 120, %15105
  %15107 = trunc i128 %15106 to i64
  store i64 %15107, i64* %RCX.i1081, align 8
  %15108 = sext i64 %15107 to i128
  %15109 = icmp ne i128 %15108, %15106
  %15110 = zext i1 %15109 to i8
  %15111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15110, i8* %15111, align 1
  %15112 = trunc i128 %15106 to i32
  %15113 = and i32 %15112, 255
  %15114 = call i32 @llvm.ctpop.i32(i32 %15113)
  %15115 = trunc i32 %15114 to i8
  %15116 = and i8 %15115, 1
  %15117 = xor i8 %15116, 1
  %15118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15117, i8* %15118, align 1
  %15119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15119, align 1
  %15120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15120, align 1
  %15121 = lshr i64 %15107, 63
  %15122 = trunc i64 %15121 to i8
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15122, i8* %15123, align 1
  %15124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15110, i8* %15124, align 1
  store %struct.Memory* %loadMem_4af52f, %struct.Memory** %MEMORY
  %loadMem_4af533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15126 = getelementptr inbounds %struct.GPR, %struct.GPR* %15125, i32 0, i32 33
  %15127 = getelementptr inbounds %struct.Reg, %struct.Reg* %15126, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %15127 to i64*
  %15128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15129 = getelementptr inbounds %struct.GPR, %struct.GPR* %15128, i32 0, i32 1
  %15130 = getelementptr inbounds %struct.Reg, %struct.Reg* %15129, i32 0, i32 0
  %RAX.i1078 = bitcast %union.anon* %15130 to i64*
  %15131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15132 = getelementptr inbounds %struct.GPR, %struct.GPR* %15131, i32 0, i32 5
  %15133 = getelementptr inbounds %struct.Reg, %struct.Reg* %15132, i32 0, i32 0
  %RCX.i1079 = bitcast %union.anon* %15133 to i64*
  %15134 = load i64, i64* %RAX.i1078
  %15135 = load i64, i64* %RCX.i1079
  %15136 = load i64, i64* %PC.i1077
  %15137 = add i64 %15136, 3
  store i64 %15137, i64* %PC.i1077
  %15138 = add i64 %15135, %15134
  store i64 %15138, i64* %RAX.i1078, align 8
  %15139 = icmp ult i64 %15138, %15134
  %15140 = icmp ult i64 %15138, %15135
  %15141 = or i1 %15139, %15140
  %15142 = zext i1 %15141 to i8
  %15143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15142, i8* %15143, align 1
  %15144 = trunc i64 %15138 to i32
  %15145 = and i32 %15144, 255
  %15146 = call i32 @llvm.ctpop.i32(i32 %15145)
  %15147 = trunc i32 %15146 to i8
  %15148 = and i8 %15147, 1
  %15149 = xor i8 %15148, 1
  %15150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15149, i8* %15150, align 1
  %15151 = xor i64 %15135, %15134
  %15152 = xor i64 %15151, %15138
  %15153 = lshr i64 %15152, 4
  %15154 = trunc i64 %15153 to i8
  %15155 = and i8 %15154, 1
  %15156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15155, i8* %15156, align 1
  %15157 = icmp eq i64 %15138, 0
  %15158 = zext i1 %15157 to i8
  %15159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15158, i8* %15159, align 1
  %15160 = lshr i64 %15138, 63
  %15161 = trunc i64 %15160 to i8
  %15162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15161, i8* %15162, align 1
  %15163 = lshr i64 %15134, 63
  %15164 = lshr i64 %15135, 63
  %15165 = xor i64 %15160, %15163
  %15166 = xor i64 %15160, %15164
  %15167 = add i64 %15165, %15166
  %15168 = icmp eq i64 %15167, 2
  %15169 = zext i1 %15168 to i8
  %15170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15169, i8* %15170, align 1
  store %struct.Memory* %loadMem_4af533, %struct.Memory** %MEMORY
  %loadMem_4af536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15172 = getelementptr inbounds %struct.GPR, %struct.GPR* %15171, i32 0, i32 33
  %15173 = getelementptr inbounds %struct.Reg, %struct.Reg* %15172, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %15173 to i64*
  %15174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15175 = getelementptr inbounds %struct.GPR, %struct.GPR* %15174, i32 0, i32 5
  %15176 = getelementptr inbounds %struct.Reg, %struct.Reg* %15175, i32 0, i32 0
  %RCX.i1075 = bitcast %union.anon* %15176 to i64*
  %15177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15178 = getelementptr inbounds %struct.GPR, %struct.GPR* %15177, i32 0, i32 15
  %15179 = getelementptr inbounds %struct.Reg, %struct.Reg* %15178, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %15179 to i64*
  %15180 = load i64, i64* %RBP.i1076
  %15181 = sub i64 %15180, 12
  %15182 = load i64, i64* %PC.i1074
  %15183 = add i64 %15182, 4
  store i64 %15183, i64* %PC.i1074
  %15184 = inttoptr i64 %15181 to i32*
  %15185 = load i32, i32* %15184
  %15186 = sext i32 %15185 to i64
  store i64 %15186, i64* %RCX.i1075, align 8
  store %struct.Memory* %loadMem_4af536, %struct.Memory** %MEMORY
  %loadMem_4af53a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15188 = getelementptr inbounds %struct.GPR, %struct.GPR* %15187, i32 0, i32 33
  %15189 = getelementptr inbounds %struct.Reg, %struct.Reg* %15188, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %15189 to i64*
  %15190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15191 = getelementptr inbounds %struct.GPR, %struct.GPR* %15190, i32 0, i32 1
  %15192 = getelementptr inbounds %struct.Reg, %struct.Reg* %15191, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %15192 to i64*
  %15193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15194 = getelementptr inbounds %struct.GPR, %struct.GPR* %15193, i32 0, i32 5
  %15195 = getelementptr inbounds %struct.Reg, %struct.Reg* %15194, i32 0, i32 0
  %RCX.i1072 = bitcast %union.anon* %15195 to i64*
  %15196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15196, i64 0, i64 1
  %YMM1.i1073 = bitcast %union.VectorReg* %15197 to %"class.std::bitset"*
  %15198 = bitcast %"class.std::bitset"* %YMM1.i1073 to i8*
  %15199 = load i64, i64* %RAX.i1071
  %15200 = load i64, i64* %RCX.i1072
  %15201 = mul i64 %15200, 8
  %15202 = add i64 %15201, %15199
  %15203 = load i64, i64* %PC.i1070
  %15204 = add i64 %15203, 5
  store i64 %15204, i64* %PC.i1070
  %15205 = inttoptr i64 %15202 to double*
  %15206 = load double, double* %15205
  %15207 = bitcast i8* %15198 to double*
  store double %15206, double* %15207, align 1
  %15208 = getelementptr inbounds i8, i8* %15198, i64 8
  %15209 = bitcast i8* %15208 to double*
  store double 0.000000e+00, double* %15209, align 1
  store %struct.Memory* %loadMem_4af53a, %struct.Memory** %MEMORY
  %loadMem_4af53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15211 = getelementptr inbounds %struct.GPR, %struct.GPR* %15210, i32 0, i32 33
  %15212 = getelementptr inbounds %struct.Reg, %struct.Reg* %15211, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %15212 to i64*
  %15213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15214 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15213, i64 0, i64 0
  %XMM0.i1065 = bitcast %union.VectorReg* %15214 to %union.vec128_t*
  %15215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15216 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15215, i64 0, i64 1
  %XMM1.i1066 = bitcast %union.VectorReg* %15216 to %union.vec128_t*
  %15217 = bitcast %union.vec128_t* %XMM1.i1066 to i8*
  %15218 = bitcast %union.vec128_t* %XMM0.i1065 to i8*
  %15219 = load i64, i64* %PC.i1064
  %15220 = add i64 %15219, 4
  store i64 %15220, i64* %PC.i1064
  %15221 = bitcast i8* %15217 to double*
  %15222 = load double, double* %15221, align 1
  %15223 = bitcast i8* %15218 to double*
  %15224 = load double, double* %15223, align 1
  %15225 = fcmp uno double %15222, %15224
  br i1 %15225, label %15226, label %15238

; <label>:15226:                                  ; preds = %block_.L_4af51e
  %15227 = fadd double %15222, %15224
  %15228 = bitcast double %15227 to i64
  %15229 = and i64 %15228, 9221120237041090560
  %15230 = icmp eq i64 %15229, 9218868437227405312
  %15231 = and i64 %15228, 2251799813685247
  %15232 = icmp ne i64 %15231, 0
  %15233 = and i1 %15230, %15232
  br i1 %15233, label %15234, label %15244

; <label>:15234:                                  ; preds = %15226
  %15235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15236 = load i64, i64* %15235, align 8
  %15237 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %15236, %struct.Memory* %loadMem_4af53f)
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:15238:                                  ; preds = %block_.L_4af51e
  %15239 = fcmp ogt double %15222, %15224
  br i1 %15239, label %15244, label %15240

; <label>:15240:                                  ; preds = %15238
  %15241 = fcmp olt double %15222, %15224
  br i1 %15241, label %15244, label %15242

; <label>:15242:                                  ; preds = %15240
  %15243 = fcmp oeq double %15222, %15224
  br i1 %15243, label %15244, label %15251

; <label>:15244:                                  ; preds = %15242, %15240, %15238, %15226
  %15245 = phi i8 [ 0, %15238 ], [ 0, %15240 ], [ 1, %15242 ], [ 1, %15226 ]
  %15246 = phi i8 [ 0, %15238 ], [ 0, %15240 ], [ 0, %15242 ], [ 1, %15226 ]
  %15247 = phi i8 [ 0, %15238 ], [ 1, %15240 ], [ 0, %15242 ], [ 1, %15226 ]
  %15248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15245, i8* %15248, align 1
  %15249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15246, i8* %15249, align 1
  %15250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15247, i8* %15250, align 1
  br label %15251

; <label>:15251:                                  ; preds = %15244, %15242
  %15252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15252, align 1
  %15253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15253, align 1
  %15254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15254, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %15234, %15251
  %15255 = phi %struct.Memory* [ %15237, %15234 ], [ %loadMem_4af53f, %15251 ]
  store %struct.Memory* %15255, %struct.Memory** %MEMORY
  %loadMem_4af543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15257 = getelementptr inbounds %struct.GPR, %struct.GPR* %15256, i32 0, i32 33
  %15258 = getelementptr inbounds %struct.Reg, %struct.Reg* %15257, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %15258 to i64*
  %15259 = load i64, i64* %PC.i1063
  %15260 = add i64 %15259, 17
  %15261 = load i64, i64* %PC.i1063
  %15262 = add i64 %15261, 6
  %15263 = load i64, i64* %PC.i1063
  %15264 = add i64 %15263, 6
  store i64 %15264, i64* %PC.i1063
  %15265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15266 = load i8, i8* %15265, align 1
  %15267 = icmp eq i8 %15266, 0
  %15268 = zext i1 %15267 to i8
  store i8 %15268, i8* %BRANCH_TAKEN, align 1
  %15269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15270 = select i1 %15267, i64 %15260, i64 %15262
  store i64 %15270, i64* %15269, align 8
  store %struct.Memory* %loadMem_4af543, %struct.Memory** %MEMORY
  %loadBr_4af543 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af543 = icmp eq i8 %loadBr_4af543, 1
  br i1 %cmpBr_4af543, label %block_.L_4af554, label %block_4af549

block_4af549:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_4af549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15272 = getelementptr inbounds %struct.GPR, %struct.GPR* %15271, i32 0, i32 33
  %15273 = getelementptr inbounds %struct.Reg, %struct.Reg* %15272, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %15273 to i64*
  %15274 = load i64, i64* %PC.i1062
  %15275 = add i64 %15274, 11
  %15276 = load i64, i64* %PC.i1062
  %15277 = add i64 %15276, 6
  %15278 = load i64, i64* %PC.i1062
  %15279 = add i64 %15278, 6
  store i64 %15279, i64* %PC.i1062
  %15280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15281 = load i8, i8* %15280, align 1
  store i8 %15281, i8* %BRANCH_TAKEN, align 1
  %15282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15283 = icmp ne i8 %15281, 0
  %15284 = select i1 %15283, i64 %15275, i64 %15277
  store i64 %15284, i64* %15282, align 8
  store %struct.Memory* %loadMem_4af549, %struct.Memory** %MEMORY
  %loadBr_4af549 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af549 = icmp eq i8 %loadBr_4af549, 1
  br i1 %cmpBr_4af549, label %block_.L_4af554, label %block_4af54f

block_4af54f:                                     ; preds = %block_4af549
  %loadMem_4af54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15286 = getelementptr inbounds %struct.GPR, %struct.GPR* %15285, i32 0, i32 33
  %15287 = getelementptr inbounds %struct.Reg, %struct.Reg* %15286, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %15287 to i64*
  %15288 = load i64, i64* %PC.i1061
  %15289 = add i64 %15288, 75
  %15290 = load i64, i64* %PC.i1061
  %15291 = add i64 %15290, 5
  store i64 %15291, i64* %PC.i1061
  %15292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15289, i64* %15292, align 8
  store %struct.Memory* %loadMem_4af54f, %struct.Memory** %MEMORY
  br label %block_.L_4af59a

block_.L_4af554:                                  ; preds = %block_4af549, %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_4af554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15294 = getelementptr inbounds %struct.GPR, %struct.GPR* %15293, i32 0, i32 33
  %15295 = getelementptr inbounds %struct.Reg, %struct.Reg* %15294, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %15295 to i64*
  %15296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15296, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %15297 to %"class.std::bitset"*
  %15298 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %15299 = load i64, i64* %PC.i1060
  %15300 = add i64 %15299, ptrtoint (%G_0x232c__rip__type* @G_0x232c__rip_ to i64)
  %15301 = load i64, i64* %PC.i1060
  %15302 = add i64 %15301, 8
  store i64 %15302, i64* %PC.i1060
  %15303 = inttoptr i64 %15300 to double*
  %15304 = load double, double* %15303
  %15305 = bitcast i8* %15298 to double*
  store double %15304, double* %15305, align 1
  %15306 = getelementptr inbounds i8, i8* %15298, i64 8
  %15307 = bitcast i8* %15306 to double*
  store double 0.000000e+00, double* %15307, align 1
  store %struct.Memory* %loadMem_4af554, %struct.Memory** %MEMORY
  %loadMem_4af55c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15309 = getelementptr inbounds %struct.GPR, %struct.GPR* %15308, i32 0, i32 33
  %15310 = getelementptr inbounds %struct.Reg, %struct.Reg* %15309, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %15310 to i64*
  %15311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15312 = getelementptr inbounds %struct.GPR, %struct.GPR* %15311, i32 0, i32 1
  %15313 = getelementptr inbounds %struct.Reg, %struct.Reg* %15312, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %15313 to i64*
  %15314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15315 = getelementptr inbounds %struct.GPR, %struct.GPR* %15314, i32 0, i32 15
  %15316 = getelementptr inbounds %struct.Reg, %struct.Reg* %15315, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %15316 to i64*
  %15317 = load i64, i64* %RBP.i1059
  %15318 = sub i64 %15317, 768
  %15319 = load i64, i64* %PC.i1057
  %15320 = add i64 %15319, 7
  store i64 %15320, i64* %PC.i1057
  store i64 %15318, i64* %RAX.i1058, align 8
  store %struct.Memory* %loadMem_4af55c, %struct.Memory** %MEMORY
  %loadMem_4af563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15322 = getelementptr inbounds %struct.GPR, %struct.GPR* %15321, i32 0, i32 33
  %15323 = getelementptr inbounds %struct.Reg, %struct.Reg* %15322, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %15323 to i64*
  %15324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15325 = getelementptr inbounds %struct.GPR, %struct.GPR* %15324, i32 0, i32 15
  %15326 = getelementptr inbounds %struct.Reg, %struct.Reg* %15325, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %15326 to i64*
  %15327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15328 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15327, i64 0, i64 1
  %YMM1.i1056 = bitcast %union.VectorReg* %15328 to %"class.std::bitset"*
  %15329 = bitcast %"class.std::bitset"* %YMM1.i1056 to i8*
  %15330 = load i64, i64* %RBP.i1055
  %15331 = sub i64 %15330, 804
  %15332 = load i64, i64* %PC.i1054
  %15333 = add i64 %15332, 8
  store i64 %15333, i64* %PC.i1054
  %15334 = inttoptr i64 %15331 to i32*
  %15335 = load i32, i32* %15334
  %15336 = sitofp i32 %15335 to double
  %15337 = bitcast i8* %15329 to double*
  store double %15336, double* %15337, align 1
  store %struct.Memory* %loadMem_4af563, %struct.Memory** %MEMORY
  %loadMem_4af56b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15339 = getelementptr inbounds %struct.GPR, %struct.GPR* %15338, i32 0, i32 33
  %15340 = getelementptr inbounds %struct.Reg, %struct.Reg* %15339, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %15340 to i64*
  %15341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15342 = getelementptr inbounds %struct.GPR, %struct.GPR* %15341, i32 0, i32 15
  %15343 = getelementptr inbounds %struct.Reg, %struct.Reg* %15342, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %15343 to i64*
  %15344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15345 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15344, i64 0, i64 1
  %YMM1.i1053 = bitcast %union.VectorReg* %15345 to %"class.std::bitset"*
  %15346 = bitcast %"class.std::bitset"* %YMM1.i1053 to i8*
  %15347 = bitcast %"class.std::bitset"* %YMM1.i1053 to i8*
  %15348 = load i64, i64* %RBP.i1052
  %15349 = sub i64 %15348, 32
  %15350 = load i64, i64* %PC.i1051
  %15351 = add i64 %15350, 5
  store i64 %15351, i64* %PC.i1051
  %15352 = bitcast i8* %15347 to double*
  %15353 = load double, double* %15352, align 1
  %15354 = getelementptr inbounds i8, i8* %15347, i64 8
  %15355 = bitcast i8* %15354 to i64*
  %15356 = load i64, i64* %15355, align 1
  %15357 = inttoptr i64 %15349 to double*
  %15358 = load double, double* %15357
  %15359 = fmul double %15353, %15358
  %15360 = bitcast i8* %15346 to double*
  store double %15359, double* %15360, align 1
  %15361 = getelementptr inbounds i8, i8* %15346, i64 8
  %15362 = bitcast i8* %15361 to i64*
  store i64 %15356, i64* %15362, align 1
  store %struct.Memory* %loadMem_4af56b, %struct.Memory** %MEMORY
  %loadMem_4af570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15364 = getelementptr inbounds %struct.GPR, %struct.GPR* %15363, i32 0, i32 33
  %15365 = getelementptr inbounds %struct.Reg, %struct.Reg* %15364, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %15365 to i64*
  %15366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15367 = getelementptr inbounds %struct.GPR, %struct.GPR* %15366, i32 0, i32 5
  %15368 = getelementptr inbounds %struct.Reg, %struct.Reg* %15367, i32 0, i32 0
  %RCX.i1049 = bitcast %union.anon* %15368 to i64*
  %15369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15370 = getelementptr inbounds %struct.GPR, %struct.GPR* %15369, i32 0, i32 15
  %15371 = getelementptr inbounds %struct.Reg, %struct.Reg* %15370, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %15371 to i64*
  %15372 = load i64, i64* %RBP.i1050
  %15373 = sub i64 %15372, 35396
  %15374 = load i64, i64* %PC.i1048
  %15375 = add i64 %15374, 7
  store i64 %15375, i64* %PC.i1048
  %15376 = inttoptr i64 %15373 to i32*
  %15377 = load i32, i32* %15376
  %15378 = sext i32 %15377 to i64
  store i64 %15378, i64* %RCX.i1049, align 8
  store %struct.Memory* %loadMem_4af570, %struct.Memory** %MEMORY
  %loadMem_4af577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15380 = getelementptr inbounds %struct.GPR, %struct.GPR* %15379, i32 0, i32 33
  %15381 = getelementptr inbounds %struct.Reg, %struct.Reg* %15380, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %15381 to i64*
  %15382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15383 = getelementptr inbounds %struct.GPR, %struct.GPR* %15382, i32 0, i32 5
  %15384 = getelementptr inbounds %struct.Reg, %struct.Reg* %15383, i32 0, i32 0
  %RCX.i1047 = bitcast %union.anon* %15384 to i64*
  %15385 = load i64, i64* %RCX.i1047
  %15386 = load i64, i64* %PC.i1046
  %15387 = add i64 %15386, 4
  store i64 %15387, i64* %PC.i1046
  %15388 = sext i64 %15385 to i128
  %15389 = and i128 %15388, -18446744073709551616
  %15390 = zext i64 %15385 to i128
  %15391 = or i128 %15389, %15390
  %15392 = mul i128 120, %15391
  %15393 = trunc i128 %15392 to i64
  store i64 %15393, i64* %RCX.i1047, align 8
  %15394 = sext i64 %15393 to i128
  %15395 = icmp ne i128 %15394, %15392
  %15396 = zext i1 %15395 to i8
  %15397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15396, i8* %15397, align 1
  %15398 = trunc i128 %15392 to i32
  %15399 = and i32 %15398, 255
  %15400 = call i32 @llvm.ctpop.i32(i32 %15399)
  %15401 = trunc i32 %15400 to i8
  %15402 = and i8 %15401, 1
  %15403 = xor i8 %15402, 1
  %15404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15403, i8* %15404, align 1
  %15405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15405, align 1
  %15406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15406, align 1
  %15407 = lshr i64 %15393, 63
  %15408 = trunc i64 %15407 to i8
  %15409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15408, i8* %15409, align 1
  %15410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15396, i8* %15410, align 1
  store %struct.Memory* %loadMem_4af577, %struct.Memory** %MEMORY
  %loadMem_4af57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15412 = getelementptr inbounds %struct.GPR, %struct.GPR* %15411, i32 0, i32 33
  %15413 = getelementptr inbounds %struct.Reg, %struct.Reg* %15412, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %15413 to i64*
  %15414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15415 = getelementptr inbounds %struct.GPR, %struct.GPR* %15414, i32 0, i32 1
  %15416 = getelementptr inbounds %struct.Reg, %struct.Reg* %15415, i32 0, i32 0
  %RAX.i1044 = bitcast %union.anon* %15416 to i64*
  %15417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15418 = getelementptr inbounds %struct.GPR, %struct.GPR* %15417, i32 0, i32 5
  %15419 = getelementptr inbounds %struct.Reg, %struct.Reg* %15418, i32 0, i32 0
  %RCX.i1045 = bitcast %union.anon* %15419 to i64*
  %15420 = load i64, i64* %RAX.i1044
  %15421 = load i64, i64* %RCX.i1045
  %15422 = load i64, i64* %PC.i1043
  %15423 = add i64 %15422, 3
  store i64 %15423, i64* %PC.i1043
  %15424 = add i64 %15421, %15420
  store i64 %15424, i64* %RAX.i1044, align 8
  %15425 = icmp ult i64 %15424, %15420
  %15426 = icmp ult i64 %15424, %15421
  %15427 = or i1 %15425, %15426
  %15428 = zext i1 %15427 to i8
  %15429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15428, i8* %15429, align 1
  %15430 = trunc i64 %15424 to i32
  %15431 = and i32 %15430, 255
  %15432 = call i32 @llvm.ctpop.i32(i32 %15431)
  %15433 = trunc i32 %15432 to i8
  %15434 = and i8 %15433, 1
  %15435 = xor i8 %15434, 1
  %15436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15435, i8* %15436, align 1
  %15437 = xor i64 %15421, %15420
  %15438 = xor i64 %15437, %15424
  %15439 = lshr i64 %15438, 4
  %15440 = trunc i64 %15439 to i8
  %15441 = and i8 %15440, 1
  %15442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15441, i8* %15442, align 1
  %15443 = icmp eq i64 %15424, 0
  %15444 = zext i1 %15443 to i8
  %15445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15444, i8* %15445, align 1
  %15446 = lshr i64 %15424, 63
  %15447 = trunc i64 %15446 to i8
  %15448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15447, i8* %15448, align 1
  %15449 = lshr i64 %15420, 63
  %15450 = lshr i64 %15421, 63
  %15451 = xor i64 %15446, %15449
  %15452 = xor i64 %15446, %15450
  %15453 = add i64 %15451, %15452
  %15454 = icmp eq i64 %15453, 2
  %15455 = zext i1 %15454 to i8
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15455, i8* %15456, align 1
  store %struct.Memory* %loadMem_4af57b, %struct.Memory** %MEMORY
  %loadMem_4af57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15458 = getelementptr inbounds %struct.GPR, %struct.GPR* %15457, i32 0, i32 33
  %15459 = getelementptr inbounds %struct.Reg, %struct.Reg* %15458, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %15459 to i64*
  %15460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15461 = getelementptr inbounds %struct.GPR, %struct.GPR* %15460, i32 0, i32 5
  %15462 = getelementptr inbounds %struct.Reg, %struct.Reg* %15461, i32 0, i32 0
  %RCX.i1041 = bitcast %union.anon* %15462 to i64*
  %15463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15464 = getelementptr inbounds %struct.GPR, %struct.GPR* %15463, i32 0, i32 15
  %15465 = getelementptr inbounds %struct.Reg, %struct.Reg* %15464, i32 0, i32 0
  %RBP.i1042 = bitcast %union.anon* %15465 to i64*
  %15466 = load i64, i64* %RBP.i1042
  %15467 = sub i64 %15466, 12
  %15468 = load i64, i64* %PC.i1040
  %15469 = add i64 %15468, 4
  store i64 %15469, i64* %PC.i1040
  %15470 = inttoptr i64 %15467 to i32*
  %15471 = load i32, i32* %15470
  %15472 = sext i32 %15471 to i64
  store i64 %15472, i64* %RCX.i1041, align 8
  store %struct.Memory* %loadMem_4af57e, %struct.Memory** %MEMORY
  %loadMem_4af582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15474 = getelementptr inbounds %struct.GPR, %struct.GPR* %15473, i32 0, i32 33
  %15475 = getelementptr inbounds %struct.Reg, %struct.Reg* %15474, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %15475 to i64*
  %15476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15477 = getelementptr inbounds %struct.GPR, %struct.GPR* %15476, i32 0, i32 1
  %15478 = getelementptr inbounds %struct.Reg, %struct.Reg* %15477, i32 0, i32 0
  %RAX.i1037 = bitcast %union.anon* %15478 to i64*
  %15479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15480 = getelementptr inbounds %struct.GPR, %struct.GPR* %15479, i32 0, i32 5
  %15481 = getelementptr inbounds %struct.Reg, %struct.Reg* %15480, i32 0, i32 0
  %RCX.i1038 = bitcast %union.anon* %15481 to i64*
  %15482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15483 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15482, i64 0, i64 1
  %YMM1.i1039 = bitcast %union.VectorReg* %15483 to %"class.std::bitset"*
  %15484 = bitcast %"class.std::bitset"* %YMM1.i1039 to i8*
  %15485 = bitcast %"class.std::bitset"* %YMM1.i1039 to i8*
  %15486 = load i64, i64* %RAX.i1037
  %15487 = load i64, i64* %RCX.i1038
  %15488 = mul i64 %15487, 8
  %15489 = add i64 %15488, %15486
  %15490 = load i64, i64* %PC.i1036
  %15491 = add i64 %15490, 5
  store i64 %15491, i64* %PC.i1036
  %15492 = bitcast i8* %15485 to double*
  %15493 = load double, double* %15492, align 1
  %15494 = getelementptr inbounds i8, i8* %15485, i64 8
  %15495 = bitcast i8* %15494 to i64*
  %15496 = load i64, i64* %15495, align 1
  %15497 = inttoptr i64 %15489 to double*
  %15498 = load double, double* %15497
  %15499 = fdiv double %15493, %15498
  %15500 = bitcast i8* %15484 to double*
  store double %15499, double* %15500, align 1
  %15501 = getelementptr inbounds i8, i8* %15484, i64 8
  %15502 = bitcast i8* %15501 to i64*
  store i64 %15496, i64* %15502, align 1
  store %struct.Memory* %loadMem_4af582, %struct.Memory** %MEMORY
  %loadMem_4af587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15504 = getelementptr inbounds %struct.GPR, %struct.GPR* %15503, i32 0, i32 33
  %15505 = getelementptr inbounds %struct.Reg, %struct.Reg* %15504, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %15505 to i64*
  %15506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15507 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15506, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %15507 to %"class.std::bitset"*
  %15508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15509 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15508, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %15509 to %union.vec128_t*
  %15510 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %15511 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %15512 = bitcast %union.vec128_t* %XMM0.i to i8*
  %15513 = load i64, i64* %PC.i1035
  %15514 = add i64 %15513, 4
  store i64 %15514, i64* %PC.i1035
  %15515 = bitcast i8* %15511 to double*
  %15516 = load double, double* %15515, align 1
  %15517 = getelementptr inbounds i8, i8* %15511, i64 8
  %15518 = bitcast i8* %15517 to i64*
  %15519 = load i64, i64* %15518, align 1
  %15520 = bitcast i8* %15512 to double*
  %15521 = load double, double* %15520, align 1
  %15522 = fadd double %15516, %15521
  %15523 = bitcast i8* %15510 to double*
  store double %15522, double* %15523, align 1
  %15524 = getelementptr inbounds i8, i8* %15510, i64 8
  %15525 = bitcast i8* %15524 to i64*
  store i64 %15519, i64* %15525, align 1
  store %struct.Memory* %loadMem_4af587, %struct.Memory** %MEMORY
  %loadMem_4af58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15527 = getelementptr inbounds %struct.GPR, %struct.GPR* %15526, i32 0, i32 33
  %15528 = getelementptr inbounds %struct.Reg, %struct.Reg* %15527, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %15528 to i64*
  %15529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15530 = getelementptr inbounds %struct.GPR, %struct.GPR* %15529, i32 0, i32 7
  %15531 = getelementptr inbounds %struct.Reg, %struct.Reg* %15530, i32 0, i32 0
  %RDX.i1034 = bitcast %union.anon* %15531 to i64*
  %15532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15533 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15532, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %15533 to %union.vec128_t*
  %15534 = bitcast %union.vec128_t* %XMM1.i to i8*
  %15535 = load i64, i64* %PC.i1033
  %15536 = add i64 %15535, 4
  store i64 %15536, i64* %PC.i1033
  %15537 = bitcast i8* %15534 to double*
  %15538 = load double, double* %15537, align 1
  %15539 = call double @llvm.trunc.f64(double %15538)
  %15540 = call double @llvm.fabs.f64(double %15539)
  %15541 = fcmp ogt double %15540, 0x41DFFFFFFFC00000
  %15542 = fptosi double %15539 to i32
  %15543 = zext i32 %15542 to i64
  %15544 = select i1 %15541, i64 2147483648, i64 %15543
  store i64 %15544, i64* %RDX.i1034, align 8
  store %struct.Memory* %loadMem_4af58b, %struct.Memory** %MEMORY
  %loadMem_4af58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15546 = getelementptr inbounds %struct.GPR, %struct.GPR* %15545, i32 0, i32 33
  %15547 = getelementptr inbounds %struct.Reg, %struct.Reg* %15546, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %15547 to i64*
  %15548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15549 = getelementptr inbounds %struct.GPR, %struct.GPR* %15548, i32 0, i32 7
  %15550 = getelementptr inbounds %struct.Reg, %struct.Reg* %15549, i32 0, i32 0
  %EDX.i1031 = bitcast %union.anon* %15550 to i32*
  %15551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15552 = getelementptr inbounds %struct.GPR, %struct.GPR* %15551, i32 0, i32 15
  %15553 = getelementptr inbounds %struct.Reg, %struct.Reg* %15552, i32 0, i32 0
  %RBP.i1032 = bitcast %union.anon* %15553 to i64*
  %15554 = load i64, i64* %RBP.i1032
  %15555 = sub i64 %15554, 35400
  %15556 = load i32, i32* %EDX.i1031
  %15557 = zext i32 %15556 to i64
  %15558 = load i64, i64* %PC.i1030
  %15559 = add i64 %15558, 6
  store i64 %15559, i64* %PC.i1030
  %15560 = inttoptr i64 %15555 to i32*
  store i32 %15556, i32* %15560
  store %struct.Memory* %loadMem_4af58f, %struct.Memory** %MEMORY
  %loadMem_4af595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15562 = getelementptr inbounds %struct.GPR, %struct.GPR* %15561, i32 0, i32 33
  %15563 = getelementptr inbounds %struct.Reg, %struct.Reg* %15562, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %15563 to i64*
  %15564 = load i64, i64* %PC.i1029
  %15565 = add i64 %15564, 17
  %15566 = load i64, i64* %PC.i1029
  %15567 = add i64 %15566, 5
  store i64 %15567, i64* %PC.i1029
  %15568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15565, i64* %15568, align 8
  store %struct.Memory* %loadMem_4af595, %struct.Memory** %MEMORY
  br label %block_.L_4af5a6

block_.L_4af59a:                                  ; preds = %block_4af54f
  %loadMem_4af59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15570 = getelementptr inbounds %struct.GPR, %struct.GPR* %15569, i32 0, i32 33
  %15571 = getelementptr inbounds %struct.Reg, %struct.Reg* %15570, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %15571 to i64*
  %15572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15573 = getelementptr inbounds %struct.GPR, %struct.GPR* %15572, i32 0, i32 1
  %15574 = getelementptr inbounds %struct.Reg, %struct.Reg* %15573, i32 0, i32 0
  %RAX.i1027 = bitcast %union.anon* %15574 to i64*
  %15575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15576 = getelementptr inbounds %struct.GPR, %struct.GPR* %15575, i32 0, i32 15
  %15577 = getelementptr inbounds %struct.Reg, %struct.Reg* %15576, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %15577 to i64*
  %15578 = load i64, i64* %RBP.i1028
  %15579 = sub i64 %15578, 804
  %15580 = load i64, i64* %PC.i1026
  %15581 = add i64 %15580, 6
  store i64 %15581, i64* %PC.i1026
  %15582 = inttoptr i64 %15579 to i32*
  %15583 = load i32, i32* %15582
  %15584 = zext i32 %15583 to i64
  store i64 %15584, i64* %RAX.i1027, align 8
  store %struct.Memory* %loadMem_4af59a, %struct.Memory** %MEMORY
  %loadMem_4af5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15586 = getelementptr inbounds %struct.GPR, %struct.GPR* %15585, i32 0, i32 33
  %15587 = getelementptr inbounds %struct.Reg, %struct.Reg* %15586, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %15587 to i64*
  %15588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15589 = getelementptr inbounds %struct.GPR, %struct.GPR* %15588, i32 0, i32 1
  %15590 = getelementptr inbounds %struct.Reg, %struct.Reg* %15589, i32 0, i32 0
  %EAX.i1024 = bitcast %union.anon* %15590 to i32*
  %15591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15592 = getelementptr inbounds %struct.GPR, %struct.GPR* %15591, i32 0, i32 15
  %15593 = getelementptr inbounds %struct.Reg, %struct.Reg* %15592, i32 0, i32 0
  %RBP.i1025 = bitcast %union.anon* %15593 to i64*
  %15594 = load i64, i64* %RBP.i1025
  %15595 = sub i64 %15594, 35400
  %15596 = load i32, i32* %EAX.i1024
  %15597 = zext i32 %15596 to i64
  %15598 = load i64, i64* %PC.i1023
  %15599 = add i64 %15598, 6
  store i64 %15599, i64* %PC.i1023
  %15600 = inttoptr i64 %15595 to i32*
  store i32 %15596, i32* %15600
  store %struct.Memory* %loadMem_4af5a0, %struct.Memory** %MEMORY
  br label %block_.L_4af5a6

block_.L_4af5a6:                                  ; preds = %block_.L_4af59a, %block_.L_4af554
  %loadMem_4af5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15602 = getelementptr inbounds %struct.GPR, %struct.GPR* %15601, i32 0, i32 33
  %15603 = getelementptr inbounds %struct.Reg, %struct.Reg* %15602, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %15603 to i64*
  %15604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15605 = getelementptr inbounds %struct.GPR, %struct.GPR* %15604, i32 0, i32 15
  %15606 = getelementptr inbounds %struct.Reg, %struct.Reg* %15605, i32 0, i32 0
  %RBP.i1022 = bitcast %union.anon* %15606 to i64*
  %15607 = load i64, i64* %RBP.i1022
  %15608 = sub i64 %15607, 35400
  %15609 = load i64, i64* %PC.i1021
  %15610 = add i64 %15609, 7
  store i64 %15610, i64* %PC.i1021
  %15611 = inttoptr i64 %15608 to i32*
  %15612 = load i32, i32* %15611
  %15613 = sub i32 %15612, -64
  %15614 = icmp ult i32 %15612, -64
  %15615 = zext i1 %15614 to i8
  %15616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15615, i8* %15616, align 1
  %15617 = and i32 %15613, 255
  %15618 = call i32 @llvm.ctpop.i32(i32 %15617)
  %15619 = trunc i32 %15618 to i8
  %15620 = and i8 %15619, 1
  %15621 = xor i8 %15620, 1
  %15622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15621, i8* %15622, align 1
  %15623 = xor i32 %15612, -64
  %15624 = xor i32 %15623, %15613
  %15625 = lshr i32 %15624, 4
  %15626 = trunc i32 %15625 to i8
  %15627 = and i8 %15626, 1
  %15628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15627, i8* %15628, align 1
  %15629 = icmp eq i32 %15613, 0
  %15630 = zext i1 %15629 to i8
  %15631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15630, i8* %15631, align 1
  %15632 = lshr i32 %15613, 31
  %15633 = trunc i32 %15632 to i8
  %15634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15633, i8* %15634, align 1
  %15635 = lshr i32 %15612, 31
  %15636 = xor i32 %15635, 1
  %15637 = xor i32 %15632, %15635
  %15638 = add i32 %15637, %15636
  %15639 = icmp eq i32 %15638, 2
  %15640 = zext i1 %15639 to i8
  %15641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15640, i8* %15641, align 1
  store %struct.Memory* %loadMem_4af5a6, %struct.Memory** %MEMORY
  %loadMem_4af5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %15642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15643 = getelementptr inbounds %struct.GPR, %struct.GPR* %15642, i32 0, i32 33
  %15644 = getelementptr inbounds %struct.Reg, %struct.Reg* %15643, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %15644 to i64*
  %15645 = load i64, i64* %PC.i1020
  %15646 = add i64 %15645, 19
  %15647 = load i64, i64* %PC.i1020
  %15648 = add i64 %15647, 6
  %15649 = load i64, i64* %PC.i1020
  %15650 = add i64 %15649, 6
  store i64 %15650, i64* %PC.i1020
  %15651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15652 = load i8, i8* %15651, align 1
  %15653 = icmp ne i8 %15652, 0
  %15654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15655 = load i8, i8* %15654, align 1
  %15656 = icmp ne i8 %15655, 0
  %15657 = xor i1 %15653, %15656
  %15658 = zext i1 %15657 to i8
  store i8 %15658, i8* %BRANCH_TAKEN, align 1
  %15659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15660 = select i1 %15657, i64 %15646, i64 %15648
  store i64 %15660, i64* %15659, align 8
  store %struct.Memory* %loadMem_4af5ad, %struct.Memory** %MEMORY
  %loadBr_4af5ad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af5ad = icmp eq i8 %loadBr_4af5ad, 1
  br i1 %cmpBr_4af5ad, label %block_.L_4af5c0, label %block_4af5b3

block_4af5b3:                                     ; preds = %block_.L_4af5a6
  %loadMem_4af5b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15662 = getelementptr inbounds %struct.GPR, %struct.GPR* %15661, i32 0, i32 33
  %15663 = getelementptr inbounds %struct.Reg, %struct.Reg* %15662, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %15663 to i64*
  %15664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15665 = getelementptr inbounds %struct.GPR, %struct.GPR* %15664, i32 0, i32 15
  %15666 = getelementptr inbounds %struct.Reg, %struct.Reg* %15665, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %15666 to i64*
  %15667 = load i64, i64* %RBP.i1019
  %15668 = sub i64 %15667, 35400
  %15669 = load i64, i64* %PC.i1018
  %15670 = add i64 %15669, 7
  store i64 %15670, i64* %PC.i1018
  %15671 = inttoptr i64 %15668 to i32*
  %15672 = load i32, i32* %15671
  %15673 = sub i32 %15672, 127
  %15674 = icmp ult i32 %15672, 127
  %15675 = zext i1 %15674 to i8
  %15676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15675, i8* %15676, align 1
  %15677 = and i32 %15673, 255
  %15678 = call i32 @llvm.ctpop.i32(i32 %15677)
  %15679 = trunc i32 %15678 to i8
  %15680 = and i8 %15679, 1
  %15681 = xor i8 %15680, 1
  %15682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15681, i8* %15682, align 1
  %15683 = xor i32 %15672, 127
  %15684 = xor i32 %15683, %15673
  %15685 = lshr i32 %15684, 4
  %15686 = trunc i32 %15685 to i8
  %15687 = and i8 %15686, 1
  %15688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15687, i8* %15688, align 1
  %15689 = icmp eq i32 %15673, 0
  %15690 = zext i1 %15689 to i8
  %15691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15690, i8* %15691, align 1
  %15692 = lshr i32 %15673, 31
  %15693 = trunc i32 %15692 to i8
  %15694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15693, i8* %15694, align 1
  %15695 = lshr i32 %15672, 31
  %15696 = xor i32 %15692, %15695
  %15697 = add i32 %15696, %15695
  %15698 = icmp eq i32 %15697, 2
  %15699 = zext i1 %15698 to i8
  %15700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15699, i8* %15700, align 1
  store %struct.Memory* %loadMem_4af5b3, %struct.Memory** %MEMORY
  %loadMem_4af5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %15701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15702 = getelementptr inbounds %struct.GPR, %struct.GPR* %15701, i32 0, i32 33
  %15703 = getelementptr inbounds %struct.Reg, %struct.Reg* %15702, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %15703 to i64*
  %15704 = load i64, i64* %PC.i1017
  %15705 = add i64 %15704, 18
  %15706 = load i64, i64* %PC.i1017
  %15707 = add i64 %15706, 6
  %15708 = load i64, i64* %PC.i1017
  %15709 = add i64 %15708, 6
  store i64 %15709, i64* %PC.i1017
  %15710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15711 = load i8, i8* %15710, align 1
  %15712 = icmp ne i8 %15711, 0
  %15713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15714 = load i8, i8* %15713, align 1
  %15715 = icmp ne i8 %15714, 0
  %15716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15717 = load i8, i8* %15716, align 1
  %15718 = icmp ne i8 %15717, 0
  %15719 = xor i1 %15715, %15718
  %15720 = or i1 %15712, %15719
  %15721 = zext i1 %15720 to i8
  store i8 %15721, i8* %BRANCH_TAKEN, align 1
  %15722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15723 = select i1 %15720, i64 %15705, i64 %15707
  store i64 %15723, i64* %15722, align 8
  store %struct.Memory* %loadMem_4af5ba, %struct.Memory** %MEMORY
  %loadBr_4af5ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af5ba = icmp eq i8 %loadBr_4af5ba, 1
  br i1 %cmpBr_4af5ba, label %block_.L_4af5cc, label %block_.L_4af5c0

block_.L_4af5c0:                                  ; preds = %block_4af5b3, %block_.L_4af5a6
  %loadMem_4af5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15725 = getelementptr inbounds %struct.GPR, %struct.GPR* %15724, i32 0, i32 33
  %15726 = getelementptr inbounds %struct.Reg, %struct.Reg* %15725, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %15726 to i64*
  %15727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15728 = getelementptr inbounds %struct.GPR, %struct.GPR* %15727, i32 0, i32 1
  %15729 = getelementptr inbounds %struct.Reg, %struct.Reg* %15728, i32 0, i32 0
  %RAX.i1015 = bitcast %union.anon* %15729 to i64*
  %15730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15731 = getelementptr inbounds %struct.GPR, %struct.GPR* %15730, i32 0, i32 15
  %15732 = getelementptr inbounds %struct.Reg, %struct.Reg* %15731, i32 0, i32 0
  %RBP.i1016 = bitcast %union.anon* %15732 to i64*
  %15733 = load i64, i64* %RBP.i1016
  %15734 = sub i64 %15733, 804
  %15735 = load i64, i64* %PC.i1014
  %15736 = add i64 %15735, 6
  store i64 %15736, i64* %PC.i1014
  %15737 = inttoptr i64 %15734 to i32*
  %15738 = load i32, i32* %15737
  %15739 = zext i32 %15738 to i64
  store i64 %15739, i64* %RAX.i1015, align 8
  store %struct.Memory* %loadMem_4af5c0, %struct.Memory** %MEMORY
  %loadMem_4af5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15741 = getelementptr inbounds %struct.GPR, %struct.GPR* %15740, i32 0, i32 33
  %15742 = getelementptr inbounds %struct.Reg, %struct.Reg* %15741, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %15742 to i64*
  %15743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15744 = getelementptr inbounds %struct.GPR, %struct.GPR* %15743, i32 0, i32 1
  %15745 = getelementptr inbounds %struct.Reg, %struct.Reg* %15744, i32 0, i32 0
  %EAX.i1012 = bitcast %union.anon* %15745 to i32*
  %15746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15747 = getelementptr inbounds %struct.GPR, %struct.GPR* %15746, i32 0, i32 15
  %15748 = getelementptr inbounds %struct.Reg, %struct.Reg* %15747, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %15748 to i64*
  %15749 = load i64, i64* %RBP.i1013
  %15750 = sub i64 %15749, 35400
  %15751 = load i32, i32* %EAX.i1012
  %15752 = zext i32 %15751 to i64
  %15753 = load i64, i64* %PC.i1011
  %15754 = add i64 %15753, 6
  store i64 %15754, i64* %PC.i1011
  %15755 = inttoptr i64 %15750 to i32*
  store i32 %15751, i32* %15755
  store %struct.Memory* %loadMem_4af5c6, %struct.Memory** %MEMORY
  br label %block_.L_4af5cc

block_.L_4af5cc:                                  ; preds = %block_.L_4af5c0, %block_4af5b3
  %loadMem_4af5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15757 = getelementptr inbounds %struct.GPR, %struct.GPR* %15756, i32 0, i32 33
  %15758 = getelementptr inbounds %struct.Reg, %struct.Reg* %15757, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %15758 to i64*
  %15759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15760 = getelementptr inbounds %struct.GPR, %struct.GPR* %15759, i32 0, i32 1
  %15761 = getelementptr inbounds %struct.Reg, %struct.Reg* %15760, i32 0, i32 0
  %RAX.i1009 = bitcast %union.anon* %15761 to i64*
  %15762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15763 = getelementptr inbounds %struct.GPR, %struct.GPR* %15762, i32 0, i32 15
  %15764 = getelementptr inbounds %struct.Reg, %struct.Reg* %15763, i32 0, i32 0
  %RBP.i1010 = bitcast %union.anon* %15764 to i64*
  %15765 = load i64, i64* %RBP.i1010
  %15766 = sub i64 %15765, 2976
  %15767 = load i64, i64* %PC.i1008
  %15768 = add i64 %15767, 7
  store i64 %15768, i64* %PC.i1008
  store i64 %15766, i64* %RAX.i1009, align 8
  store %struct.Memory* %loadMem_4af5cc, %struct.Memory** %MEMORY
  %loadMem_4af5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15770 = getelementptr inbounds %struct.GPR, %struct.GPR* %15769, i32 0, i32 33
  %15771 = getelementptr inbounds %struct.Reg, %struct.Reg* %15770, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %15771 to i64*
  %15772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15773 = getelementptr inbounds %struct.GPR, %struct.GPR* %15772, i32 0, i32 5
  %15774 = getelementptr inbounds %struct.Reg, %struct.Reg* %15773, i32 0, i32 0
  %RCX.i1006 = bitcast %union.anon* %15774 to i64*
  %15775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15776 = getelementptr inbounds %struct.GPR, %struct.GPR* %15775, i32 0, i32 15
  %15777 = getelementptr inbounds %struct.Reg, %struct.Reg* %15776, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %15777 to i64*
  %15778 = load i64, i64* %RBP.i1007
  %15779 = sub i64 %15778, 1888
  %15780 = load i64, i64* %PC.i1005
  %15781 = add i64 %15780, 7
  store i64 %15781, i64* %PC.i1005
  store i64 %15779, i64* %RCX.i1006, align 8
  store %struct.Memory* %loadMem_4af5d3, %struct.Memory** %MEMORY
  %loadMem_4af5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %15782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15783 = getelementptr inbounds %struct.GPR, %struct.GPR* %15782, i32 0, i32 33
  %15784 = getelementptr inbounds %struct.Reg, %struct.Reg* %15783, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %15784 to i64*
  %15785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15786 = getelementptr inbounds %struct.GPR, %struct.GPR* %15785, i32 0, i32 15
  %15787 = getelementptr inbounds %struct.Reg, %struct.Reg* %15786, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %15787 to i64*
  %15788 = load i64, i64* %RBP.i1004
  %15789 = sub i64 %15788, 35404
  %15790 = load i64, i64* %PC.i1003
  %15791 = add i64 %15790, 10
  store i64 %15791, i64* %PC.i1003
  %15792 = inttoptr i64 %15789 to i32*
  store i32 0, i32* %15792
  store %struct.Memory* %loadMem_4af5da, %struct.Memory** %MEMORY
  %loadMem_4af5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15794 = getelementptr inbounds %struct.GPR, %struct.GPR* %15793, i32 0, i32 33
  %15795 = getelementptr inbounds %struct.Reg, %struct.Reg* %15794, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %15795 to i64*
  %15796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15797 = getelementptr inbounds %struct.GPR, %struct.GPR* %15796, i32 0, i32 7
  %15798 = getelementptr inbounds %struct.Reg, %struct.Reg* %15797, i32 0, i32 0
  %RDX.i1001 = bitcast %union.anon* %15798 to i64*
  %15799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15800 = getelementptr inbounds %struct.GPR, %struct.GPR* %15799, i32 0, i32 15
  %15801 = getelementptr inbounds %struct.Reg, %struct.Reg* %15800, i32 0, i32 0
  %RBP.i1002 = bitcast %union.anon* %15801 to i64*
  %15802 = load i64, i64* %RBP.i1002
  %15803 = sub i64 %15802, 35400
  %15804 = load i64, i64* %PC.i1000
  %15805 = add i64 %15804, 6
  store i64 %15805, i64* %PC.i1000
  %15806 = inttoptr i64 %15803 to i32*
  %15807 = load i32, i32* %15806
  %15808 = zext i32 %15807 to i64
  store i64 %15808, i64* %RDX.i1001, align 8
  store %struct.Memory* %loadMem_4af5e4, %struct.Memory** %MEMORY
  %loadMem_4af5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %15809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15810 = getelementptr inbounds %struct.GPR, %struct.GPR* %15809, i32 0, i32 33
  %15811 = getelementptr inbounds %struct.Reg, %struct.Reg* %15810, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %15811 to i64*
  %15812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15813 = getelementptr inbounds %struct.GPR, %struct.GPR* %15812, i32 0, i32 9
  %15814 = getelementptr inbounds %struct.Reg, %struct.Reg* %15813, i32 0, i32 0
  %RSI.i998 = bitcast %union.anon* %15814 to i64*
  %15815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15816 = getelementptr inbounds %struct.GPR, %struct.GPR* %15815, i32 0, i32 15
  %15817 = getelementptr inbounds %struct.Reg, %struct.Reg* %15816, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %15817 to i64*
  %15818 = load i64, i64* %RBP.i999
  %15819 = sub i64 %15818, 35396
  %15820 = load i64, i64* %PC.i997
  %15821 = add i64 %15820, 7
  store i64 %15821, i64* %PC.i997
  %15822 = inttoptr i64 %15819 to i32*
  %15823 = load i32, i32* %15822
  %15824 = sext i32 %15823 to i64
  store i64 %15824, i64* %RSI.i998, align 8
  store %struct.Memory* %loadMem_4af5ea, %struct.Memory** %MEMORY
  %loadMem_4af5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15826 = getelementptr inbounds %struct.GPR, %struct.GPR* %15825, i32 0, i32 33
  %15827 = getelementptr inbounds %struct.Reg, %struct.Reg* %15826, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %15827 to i64*
  %15828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15829 = getelementptr inbounds %struct.GPR, %struct.GPR* %15828, i32 0, i32 9
  %15830 = getelementptr inbounds %struct.Reg, %struct.Reg* %15829, i32 0, i32 0
  %RSI.i996 = bitcast %union.anon* %15830 to i64*
  %15831 = load i64, i64* %RSI.i996
  %15832 = load i64, i64* %PC.i995
  %15833 = add i64 %15832, 7
  store i64 %15833, i64* %PC.i995
  %15834 = sext i64 %15831 to i128
  %15835 = and i128 %15834, -18446744073709551616
  %15836 = zext i64 %15831 to i128
  %15837 = or i128 %15835, %15836
  %15838 = mul i128 180, %15837
  %15839 = trunc i128 %15838 to i64
  store i64 %15839, i64* %RSI.i996, align 8
  %15840 = sext i64 %15839 to i128
  %15841 = icmp ne i128 %15840, %15838
  %15842 = zext i1 %15841 to i8
  %15843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15842, i8* %15843, align 1
  %15844 = trunc i128 %15838 to i32
  %15845 = and i32 %15844, 255
  %15846 = call i32 @llvm.ctpop.i32(i32 %15845)
  %15847 = trunc i32 %15846 to i8
  %15848 = and i8 %15847, 1
  %15849 = xor i8 %15848, 1
  %15850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15849, i8* %15850, align 1
  %15851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15851, align 1
  %15852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15852, align 1
  %15853 = lshr i64 %15839, 63
  %15854 = trunc i64 %15853 to i8
  %15855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15854, i8* %15855, align 1
  %15856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15842, i8* %15856, align 1
  store %struct.Memory* %loadMem_4af5f1, %struct.Memory** %MEMORY
  %loadMem_4af5f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15858 = getelementptr inbounds %struct.GPR, %struct.GPR* %15857, i32 0, i32 33
  %15859 = getelementptr inbounds %struct.Reg, %struct.Reg* %15858, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %15859 to i64*
  %15860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15861 = getelementptr inbounds %struct.GPR, %struct.GPR* %15860, i32 0, i32 5
  %15862 = getelementptr inbounds %struct.Reg, %struct.Reg* %15861, i32 0, i32 0
  %RCX.i993 = bitcast %union.anon* %15862 to i64*
  %15863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15864 = getelementptr inbounds %struct.GPR, %struct.GPR* %15863, i32 0, i32 11
  %15865 = getelementptr inbounds %struct.Reg, %struct.Reg* %15864, i32 0, i32 0
  %RDI.i994 = bitcast %union.anon* %15865 to i64*
  %15866 = load i64, i64* %RCX.i993
  %15867 = load i64, i64* %PC.i992
  %15868 = add i64 %15867, 3
  store i64 %15868, i64* %PC.i992
  store i64 %15866, i64* %RDI.i994, align 8
  store %struct.Memory* %loadMem_4af5f8, %struct.Memory** %MEMORY
  %loadMem_4af5fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15870 = getelementptr inbounds %struct.GPR, %struct.GPR* %15869, i32 0, i32 33
  %15871 = getelementptr inbounds %struct.Reg, %struct.Reg* %15870, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %15871 to i64*
  %15872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15873 = getelementptr inbounds %struct.GPR, %struct.GPR* %15872, i32 0, i32 9
  %15874 = getelementptr inbounds %struct.Reg, %struct.Reg* %15873, i32 0, i32 0
  %RSI.i990 = bitcast %union.anon* %15874 to i64*
  %15875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15876 = getelementptr inbounds %struct.GPR, %struct.GPR* %15875, i32 0, i32 11
  %15877 = getelementptr inbounds %struct.Reg, %struct.Reg* %15876, i32 0, i32 0
  %RDI.i991 = bitcast %union.anon* %15877 to i64*
  %15878 = load i64, i64* %RDI.i991
  %15879 = load i64, i64* %RSI.i990
  %15880 = load i64, i64* %PC.i989
  %15881 = add i64 %15880, 3
  store i64 %15881, i64* %PC.i989
  %15882 = add i64 %15879, %15878
  store i64 %15882, i64* %RDI.i991, align 8
  %15883 = icmp ult i64 %15882, %15878
  %15884 = icmp ult i64 %15882, %15879
  %15885 = or i1 %15883, %15884
  %15886 = zext i1 %15885 to i8
  %15887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15886, i8* %15887, align 1
  %15888 = trunc i64 %15882 to i32
  %15889 = and i32 %15888, 255
  %15890 = call i32 @llvm.ctpop.i32(i32 %15889)
  %15891 = trunc i32 %15890 to i8
  %15892 = and i8 %15891, 1
  %15893 = xor i8 %15892, 1
  %15894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15893, i8* %15894, align 1
  %15895 = xor i64 %15879, %15878
  %15896 = xor i64 %15895, %15882
  %15897 = lshr i64 %15896, 4
  %15898 = trunc i64 %15897 to i8
  %15899 = and i8 %15898, 1
  %15900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15899, i8* %15900, align 1
  %15901 = icmp eq i64 %15882, 0
  %15902 = zext i1 %15901 to i8
  %15903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15902, i8* %15903, align 1
  %15904 = lshr i64 %15882, 63
  %15905 = trunc i64 %15904 to i8
  %15906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15905, i8* %15906, align 1
  %15907 = lshr i64 %15878, 63
  %15908 = lshr i64 %15879, 63
  %15909 = xor i64 %15904, %15907
  %15910 = xor i64 %15904, %15908
  %15911 = add i64 %15909, %15910
  %15912 = icmp eq i64 %15911, 2
  %15913 = zext i1 %15912 to i8
  %15914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15913, i8* %15914, align 1
  store %struct.Memory* %loadMem_4af5fb, %struct.Memory** %MEMORY
  %loadMem_4af5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %15915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15916 = getelementptr inbounds %struct.GPR, %struct.GPR* %15915, i32 0, i32 33
  %15917 = getelementptr inbounds %struct.Reg, %struct.Reg* %15916, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %15917 to i64*
  %15918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15919 = getelementptr inbounds %struct.GPR, %struct.GPR* %15918, i32 0, i32 9
  %15920 = getelementptr inbounds %struct.Reg, %struct.Reg* %15919, i32 0, i32 0
  %RSI.i987 = bitcast %union.anon* %15920 to i64*
  %15921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15922 = getelementptr inbounds %struct.GPR, %struct.GPR* %15921, i32 0, i32 15
  %15923 = getelementptr inbounds %struct.Reg, %struct.Reg* %15922, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %15923 to i64*
  %15924 = load i64, i64* %RBP.i988
  %15925 = sub i64 %15924, 12
  %15926 = load i64, i64* %PC.i986
  %15927 = add i64 %15926, 4
  store i64 %15927, i64* %PC.i986
  %15928 = inttoptr i64 %15925 to i32*
  %15929 = load i32, i32* %15928
  %15930 = sext i32 %15929 to i64
  store i64 %15930, i64* %RSI.i987, align 8
  store %struct.Memory* %loadMem_4af5fe, %struct.Memory** %MEMORY
  %loadMem_4af602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15932 = getelementptr inbounds %struct.GPR, %struct.GPR* %15931, i32 0, i32 33
  %15933 = getelementptr inbounds %struct.Reg, %struct.Reg* %15932, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %15933 to i64*
  %15934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15935 = getelementptr inbounds %struct.GPR, %struct.GPR* %15934, i32 0, i32 9
  %15936 = getelementptr inbounds %struct.Reg, %struct.Reg* %15935, i32 0, i32 0
  %RSI.i985 = bitcast %union.anon* %15936 to i64*
  %15937 = load i64, i64* %RSI.i985
  %15938 = load i64, i64* %PC.i984
  %15939 = add i64 %15938, 4
  store i64 %15939, i64* %PC.i984
  %15940 = sext i64 %15937 to i128
  %15941 = and i128 %15940, -18446744073709551616
  %15942 = zext i64 %15937 to i128
  %15943 = or i128 %15941, %15942
  %15944 = mul i128 12, %15943
  %15945 = trunc i128 %15944 to i64
  store i64 %15945, i64* %RSI.i985, align 8
  %15946 = sext i64 %15945 to i128
  %15947 = icmp ne i128 %15946, %15944
  %15948 = zext i1 %15947 to i8
  %15949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15948, i8* %15949, align 1
  %15950 = trunc i128 %15944 to i32
  %15951 = and i32 %15950, 255
  %15952 = call i32 @llvm.ctpop.i32(i32 %15951)
  %15953 = trunc i32 %15952 to i8
  %15954 = and i8 %15953, 1
  %15955 = xor i8 %15954, 1
  %15956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15955, i8* %15956, align 1
  %15957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15957, align 1
  %15958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15958, align 1
  %15959 = lshr i64 %15945, 63
  %15960 = trunc i64 %15959 to i8
  %15961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15960, i8* %15961, align 1
  %15962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15948, i8* %15962, align 1
  store %struct.Memory* %loadMem_4af602, %struct.Memory** %MEMORY
  %loadMem_4af606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15964 = getelementptr inbounds %struct.GPR, %struct.GPR* %15963, i32 0, i32 33
  %15965 = getelementptr inbounds %struct.Reg, %struct.Reg* %15964, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %15965 to i64*
  %15966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15967 = getelementptr inbounds %struct.GPR, %struct.GPR* %15966, i32 0, i32 9
  %15968 = getelementptr inbounds %struct.Reg, %struct.Reg* %15967, i32 0, i32 0
  %RSI.i982 = bitcast %union.anon* %15968 to i64*
  %15969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15970 = getelementptr inbounds %struct.GPR, %struct.GPR* %15969, i32 0, i32 11
  %15971 = getelementptr inbounds %struct.Reg, %struct.Reg* %15970, i32 0, i32 0
  %RDI.i983 = bitcast %union.anon* %15971 to i64*
  %15972 = load i64, i64* %RDI.i983
  %15973 = load i64, i64* %RSI.i982
  %15974 = load i64, i64* %PC.i981
  %15975 = add i64 %15974, 3
  store i64 %15975, i64* %PC.i981
  %15976 = add i64 %15973, %15972
  store i64 %15976, i64* %RDI.i983, align 8
  %15977 = icmp ult i64 %15976, %15972
  %15978 = icmp ult i64 %15976, %15973
  %15979 = or i1 %15977, %15978
  %15980 = zext i1 %15979 to i8
  %15981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15980, i8* %15981, align 1
  %15982 = trunc i64 %15976 to i32
  %15983 = and i32 %15982, 255
  %15984 = call i32 @llvm.ctpop.i32(i32 %15983)
  %15985 = trunc i32 %15984 to i8
  %15986 = and i8 %15985, 1
  %15987 = xor i8 %15986, 1
  %15988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15987, i8* %15988, align 1
  %15989 = xor i64 %15973, %15972
  %15990 = xor i64 %15989, %15976
  %15991 = lshr i64 %15990, 4
  %15992 = trunc i64 %15991 to i8
  %15993 = and i8 %15992, 1
  %15994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15993, i8* %15994, align 1
  %15995 = icmp eq i64 %15976, 0
  %15996 = zext i1 %15995 to i8
  %15997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15996, i8* %15997, align 1
  %15998 = lshr i64 %15976, 63
  %15999 = trunc i64 %15998 to i8
  %16000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15999, i8* %16000, align 1
  %16001 = lshr i64 %15972, 63
  %16002 = lshr i64 %15973, 63
  %16003 = xor i64 %15998, %16001
  %16004 = xor i64 %15998, %16002
  %16005 = add i64 %16003, %16004
  %16006 = icmp eq i64 %16005, 2
  %16007 = zext i1 %16006 to i8
  %16008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16007, i8* %16008, align 1
  store %struct.Memory* %loadMem_4af606, %struct.Memory** %MEMORY
  %loadMem_4af609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16010 = getelementptr inbounds %struct.GPR, %struct.GPR* %16009, i32 0, i32 33
  %16011 = getelementptr inbounds %struct.Reg, %struct.Reg* %16010, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %16011 to i64*
  %16012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16013 = getelementptr inbounds %struct.GPR, %struct.GPR* %16012, i32 0, i32 7
  %16014 = getelementptr inbounds %struct.Reg, %struct.Reg* %16013, i32 0, i32 0
  %EDX.i979 = bitcast %union.anon* %16014 to i32*
  %16015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16016 = getelementptr inbounds %struct.GPR, %struct.GPR* %16015, i32 0, i32 11
  %16017 = getelementptr inbounds %struct.Reg, %struct.Reg* %16016, i32 0, i32 0
  %RDI.i980 = bitcast %union.anon* %16017 to i64*
  %16018 = load i64, i64* %RDI.i980
  %16019 = load i32, i32* %EDX.i979
  %16020 = zext i32 %16019 to i64
  %16021 = load i64, i64* %PC.i978
  %16022 = add i64 %16021, 2
  store i64 %16022, i64* %PC.i978
  %16023 = inttoptr i64 %16018 to i32*
  store i32 %16019, i32* %16023
  store %struct.Memory* %loadMem_4af609, %struct.Memory** %MEMORY
  %loadMem_4af60b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16025 = getelementptr inbounds %struct.GPR, %struct.GPR* %16024, i32 0, i32 33
  %16026 = getelementptr inbounds %struct.Reg, %struct.Reg* %16025, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %16026 to i64*
  %16027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16028 = getelementptr inbounds %struct.GPR, %struct.GPR* %16027, i32 0, i32 7
  %16029 = getelementptr inbounds %struct.Reg, %struct.Reg* %16028, i32 0, i32 0
  %RDX.i976 = bitcast %union.anon* %16029 to i64*
  %16030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16031 = getelementptr inbounds %struct.GPR, %struct.GPR* %16030, i32 0, i32 15
  %16032 = getelementptr inbounds %struct.Reg, %struct.Reg* %16031, i32 0, i32 0
  %RBP.i977 = bitcast %union.anon* %16032 to i64*
  %16033 = load i64, i64* %RBP.i977
  %16034 = sub i64 %16033, 800
  %16035 = load i64, i64* %PC.i975
  %16036 = add i64 %16035, 6
  store i64 %16036, i64* %PC.i975
  %16037 = inttoptr i64 %16034 to i32*
  %16038 = load i32, i32* %16037
  %16039 = zext i32 %16038 to i64
  store i64 %16039, i64* %RDX.i976, align 8
  store %struct.Memory* %loadMem_4af60b, %struct.Memory** %MEMORY
  %loadMem_4af611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16041 = getelementptr inbounds %struct.GPR, %struct.GPR* %16040, i32 0, i32 33
  %16042 = getelementptr inbounds %struct.Reg, %struct.Reg* %16041, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %16042 to i64*
  %16043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16044 = getelementptr inbounds %struct.GPR, %struct.GPR* %16043, i32 0, i32 9
  %16045 = getelementptr inbounds %struct.Reg, %struct.Reg* %16044, i32 0, i32 0
  %RSI.i973 = bitcast %union.anon* %16045 to i64*
  %16046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16047 = getelementptr inbounds %struct.GPR, %struct.GPR* %16046, i32 0, i32 15
  %16048 = getelementptr inbounds %struct.Reg, %struct.Reg* %16047, i32 0, i32 0
  %RBP.i974 = bitcast %union.anon* %16048 to i64*
  %16049 = load i64, i64* %RBP.i974
  %16050 = sub i64 %16049, 35396
  %16051 = load i64, i64* %PC.i972
  %16052 = add i64 %16051, 7
  store i64 %16052, i64* %PC.i972
  %16053 = inttoptr i64 %16050 to i32*
  %16054 = load i32, i32* %16053
  %16055 = sext i32 %16054 to i64
  store i64 %16055, i64* %RSI.i973, align 8
  store %struct.Memory* %loadMem_4af611, %struct.Memory** %MEMORY
  %loadMem_4af618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16057 = getelementptr inbounds %struct.GPR, %struct.GPR* %16056, i32 0, i32 33
  %16058 = getelementptr inbounds %struct.Reg, %struct.Reg* %16057, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %16058 to i64*
  %16059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16060 = getelementptr inbounds %struct.GPR, %struct.GPR* %16059, i32 0, i32 9
  %16061 = getelementptr inbounds %struct.Reg, %struct.Reg* %16060, i32 0, i32 0
  %RSI.i971 = bitcast %union.anon* %16061 to i64*
  %16062 = load i64, i64* %RSI.i971
  %16063 = load i64, i64* %PC.i970
  %16064 = add i64 %16063, 7
  store i64 %16064, i64* %PC.i970
  %16065 = sext i64 %16062 to i128
  %16066 = and i128 %16065, -18446744073709551616
  %16067 = zext i64 %16062 to i128
  %16068 = or i128 %16066, %16067
  %16069 = mul i128 180, %16068
  %16070 = trunc i128 %16069 to i64
  store i64 %16070, i64* %RSI.i971, align 8
  %16071 = sext i64 %16070 to i128
  %16072 = icmp ne i128 %16071, %16069
  %16073 = zext i1 %16072 to i8
  %16074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16073, i8* %16074, align 1
  %16075 = trunc i128 %16069 to i32
  %16076 = and i32 %16075, 255
  %16077 = call i32 @llvm.ctpop.i32(i32 %16076)
  %16078 = trunc i32 %16077 to i8
  %16079 = and i8 %16078, 1
  %16080 = xor i8 %16079, 1
  %16081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16080, i8* %16081, align 1
  %16082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16082, align 1
  %16083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16083, align 1
  %16084 = lshr i64 %16070, 63
  %16085 = trunc i64 %16084 to i8
  %16086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16085, i8* %16086, align 1
  %16087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16073, i8* %16087, align 1
  store %struct.Memory* %loadMem_4af618, %struct.Memory** %MEMORY
  %loadMem_4af61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16089 = getelementptr inbounds %struct.GPR, %struct.GPR* %16088, i32 0, i32 33
  %16090 = getelementptr inbounds %struct.Reg, %struct.Reg* %16089, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %16090 to i64*
  %16091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16092 = getelementptr inbounds %struct.GPR, %struct.GPR* %16091, i32 0, i32 5
  %16093 = getelementptr inbounds %struct.Reg, %struct.Reg* %16092, i32 0, i32 0
  %RCX.i968 = bitcast %union.anon* %16093 to i64*
  %16094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16095 = getelementptr inbounds %struct.GPR, %struct.GPR* %16094, i32 0, i32 11
  %16096 = getelementptr inbounds %struct.Reg, %struct.Reg* %16095, i32 0, i32 0
  %RDI.i969 = bitcast %union.anon* %16096 to i64*
  %16097 = load i64, i64* %RCX.i968
  %16098 = load i64, i64* %PC.i967
  %16099 = add i64 %16098, 3
  store i64 %16099, i64* %PC.i967
  store i64 %16097, i64* %RDI.i969, align 8
  store %struct.Memory* %loadMem_4af61f, %struct.Memory** %MEMORY
  %loadMem_4af622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16101 = getelementptr inbounds %struct.GPR, %struct.GPR* %16100, i32 0, i32 33
  %16102 = getelementptr inbounds %struct.Reg, %struct.Reg* %16101, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %16102 to i64*
  %16103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16104 = getelementptr inbounds %struct.GPR, %struct.GPR* %16103, i32 0, i32 9
  %16105 = getelementptr inbounds %struct.Reg, %struct.Reg* %16104, i32 0, i32 0
  %RSI.i965 = bitcast %union.anon* %16105 to i64*
  %16106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16107 = getelementptr inbounds %struct.GPR, %struct.GPR* %16106, i32 0, i32 11
  %16108 = getelementptr inbounds %struct.Reg, %struct.Reg* %16107, i32 0, i32 0
  %RDI.i966 = bitcast %union.anon* %16108 to i64*
  %16109 = load i64, i64* %RDI.i966
  %16110 = load i64, i64* %RSI.i965
  %16111 = load i64, i64* %PC.i964
  %16112 = add i64 %16111, 3
  store i64 %16112, i64* %PC.i964
  %16113 = add i64 %16110, %16109
  store i64 %16113, i64* %RDI.i966, align 8
  %16114 = icmp ult i64 %16113, %16109
  %16115 = icmp ult i64 %16113, %16110
  %16116 = or i1 %16114, %16115
  %16117 = zext i1 %16116 to i8
  %16118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16117, i8* %16118, align 1
  %16119 = trunc i64 %16113 to i32
  %16120 = and i32 %16119, 255
  %16121 = call i32 @llvm.ctpop.i32(i32 %16120)
  %16122 = trunc i32 %16121 to i8
  %16123 = and i8 %16122, 1
  %16124 = xor i8 %16123, 1
  %16125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16124, i8* %16125, align 1
  %16126 = xor i64 %16110, %16109
  %16127 = xor i64 %16126, %16113
  %16128 = lshr i64 %16127, 4
  %16129 = trunc i64 %16128 to i8
  %16130 = and i8 %16129, 1
  %16131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16130, i8* %16131, align 1
  %16132 = icmp eq i64 %16113, 0
  %16133 = zext i1 %16132 to i8
  %16134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16133, i8* %16134, align 1
  %16135 = lshr i64 %16113, 63
  %16136 = trunc i64 %16135 to i8
  %16137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16136, i8* %16137, align 1
  %16138 = lshr i64 %16109, 63
  %16139 = lshr i64 %16110, 63
  %16140 = xor i64 %16135, %16138
  %16141 = xor i64 %16135, %16139
  %16142 = add i64 %16140, %16141
  %16143 = icmp eq i64 %16142, 2
  %16144 = zext i1 %16143 to i8
  %16145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16144, i8* %16145, align 1
  store %struct.Memory* %loadMem_4af622, %struct.Memory** %MEMORY
  %loadMem_4af625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16147 = getelementptr inbounds %struct.GPR, %struct.GPR* %16146, i32 0, i32 33
  %16148 = getelementptr inbounds %struct.Reg, %struct.Reg* %16147, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %16148 to i64*
  %16149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16150 = getelementptr inbounds %struct.GPR, %struct.GPR* %16149, i32 0, i32 9
  %16151 = getelementptr inbounds %struct.Reg, %struct.Reg* %16150, i32 0, i32 0
  %RSI.i962 = bitcast %union.anon* %16151 to i64*
  %16152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16153 = getelementptr inbounds %struct.GPR, %struct.GPR* %16152, i32 0, i32 15
  %16154 = getelementptr inbounds %struct.Reg, %struct.Reg* %16153, i32 0, i32 0
  %RBP.i963 = bitcast %union.anon* %16154 to i64*
  %16155 = load i64, i64* %RBP.i963
  %16156 = sub i64 %16155, 12
  %16157 = load i64, i64* %PC.i961
  %16158 = add i64 %16157, 4
  store i64 %16158, i64* %PC.i961
  %16159 = inttoptr i64 %16156 to i32*
  %16160 = load i32, i32* %16159
  %16161 = sext i32 %16160 to i64
  store i64 %16161, i64* %RSI.i962, align 8
  store %struct.Memory* %loadMem_4af625, %struct.Memory** %MEMORY
  %loadMem_4af629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16163 = getelementptr inbounds %struct.GPR, %struct.GPR* %16162, i32 0, i32 33
  %16164 = getelementptr inbounds %struct.Reg, %struct.Reg* %16163, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %16164 to i64*
  %16165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16166 = getelementptr inbounds %struct.GPR, %struct.GPR* %16165, i32 0, i32 9
  %16167 = getelementptr inbounds %struct.Reg, %struct.Reg* %16166, i32 0, i32 0
  %RSI.i960 = bitcast %union.anon* %16167 to i64*
  %16168 = load i64, i64* %RSI.i960
  %16169 = load i64, i64* %PC.i959
  %16170 = add i64 %16169, 4
  store i64 %16170, i64* %PC.i959
  %16171 = sext i64 %16168 to i128
  %16172 = and i128 %16171, -18446744073709551616
  %16173 = zext i64 %16168 to i128
  %16174 = or i128 %16172, %16173
  %16175 = mul i128 12, %16174
  %16176 = trunc i128 %16175 to i64
  store i64 %16176, i64* %RSI.i960, align 8
  %16177 = sext i64 %16176 to i128
  %16178 = icmp ne i128 %16177, %16175
  %16179 = zext i1 %16178 to i8
  %16180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16179, i8* %16180, align 1
  %16181 = trunc i128 %16175 to i32
  %16182 = and i32 %16181, 255
  %16183 = call i32 @llvm.ctpop.i32(i32 %16182)
  %16184 = trunc i32 %16183 to i8
  %16185 = and i8 %16184, 1
  %16186 = xor i8 %16185, 1
  %16187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16186, i8* %16187, align 1
  %16188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16188, align 1
  %16189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16189, align 1
  %16190 = lshr i64 %16176, 63
  %16191 = trunc i64 %16190 to i8
  %16192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16191, i8* %16192, align 1
  %16193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16179, i8* %16193, align 1
  store %struct.Memory* %loadMem_4af629, %struct.Memory** %MEMORY
  %loadMem_4af62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16195 = getelementptr inbounds %struct.GPR, %struct.GPR* %16194, i32 0, i32 33
  %16196 = getelementptr inbounds %struct.Reg, %struct.Reg* %16195, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %16196 to i64*
  %16197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16198 = getelementptr inbounds %struct.GPR, %struct.GPR* %16197, i32 0, i32 9
  %16199 = getelementptr inbounds %struct.Reg, %struct.Reg* %16198, i32 0, i32 0
  %RSI.i957 = bitcast %union.anon* %16199 to i64*
  %16200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16201 = getelementptr inbounds %struct.GPR, %struct.GPR* %16200, i32 0, i32 11
  %16202 = getelementptr inbounds %struct.Reg, %struct.Reg* %16201, i32 0, i32 0
  %RDI.i958 = bitcast %union.anon* %16202 to i64*
  %16203 = load i64, i64* %RDI.i958
  %16204 = load i64, i64* %RSI.i957
  %16205 = load i64, i64* %PC.i956
  %16206 = add i64 %16205, 3
  store i64 %16206, i64* %PC.i956
  %16207 = add i64 %16204, %16203
  store i64 %16207, i64* %RDI.i958, align 8
  %16208 = icmp ult i64 %16207, %16203
  %16209 = icmp ult i64 %16207, %16204
  %16210 = or i1 %16208, %16209
  %16211 = zext i1 %16210 to i8
  %16212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16211, i8* %16212, align 1
  %16213 = trunc i64 %16207 to i32
  %16214 = and i32 %16213, 255
  %16215 = call i32 @llvm.ctpop.i32(i32 %16214)
  %16216 = trunc i32 %16215 to i8
  %16217 = and i8 %16216, 1
  %16218 = xor i8 %16217, 1
  %16219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16218, i8* %16219, align 1
  %16220 = xor i64 %16204, %16203
  %16221 = xor i64 %16220, %16207
  %16222 = lshr i64 %16221, 4
  %16223 = trunc i64 %16222 to i8
  %16224 = and i8 %16223, 1
  %16225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16224, i8* %16225, align 1
  %16226 = icmp eq i64 %16207, 0
  %16227 = zext i1 %16226 to i8
  %16228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16227, i8* %16228, align 1
  %16229 = lshr i64 %16207, 63
  %16230 = trunc i64 %16229 to i8
  %16231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16230, i8* %16231, align 1
  %16232 = lshr i64 %16203, 63
  %16233 = lshr i64 %16204, 63
  %16234 = xor i64 %16229, %16232
  %16235 = xor i64 %16229, %16233
  %16236 = add i64 %16234, %16235
  %16237 = icmp eq i64 %16236, 2
  %16238 = zext i1 %16237 to i8
  %16239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16238, i8* %16239, align 1
  store %struct.Memory* %loadMem_4af62d, %struct.Memory** %MEMORY
  %loadMem_4af630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16241 = getelementptr inbounds %struct.GPR, %struct.GPR* %16240, i32 0, i32 33
  %16242 = getelementptr inbounds %struct.Reg, %struct.Reg* %16241, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %16242 to i64*
  %16243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16244 = getelementptr inbounds %struct.GPR, %struct.GPR* %16243, i32 0, i32 7
  %16245 = getelementptr inbounds %struct.Reg, %struct.Reg* %16244, i32 0, i32 0
  %EDX.i954 = bitcast %union.anon* %16245 to i32*
  %16246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16247 = getelementptr inbounds %struct.GPR, %struct.GPR* %16246, i32 0, i32 11
  %16248 = getelementptr inbounds %struct.Reg, %struct.Reg* %16247, i32 0, i32 0
  %RDI.i955 = bitcast %union.anon* %16248 to i64*
  %16249 = load i64, i64* %RDI.i955
  %16250 = add i64 %16249, 4
  %16251 = load i32, i32* %EDX.i954
  %16252 = zext i32 %16251 to i64
  %16253 = load i64, i64* %PC.i953
  %16254 = add i64 %16253, 3
  store i64 %16254, i64* %PC.i953
  %16255 = inttoptr i64 %16250 to i32*
  store i32 %16251, i32* %16255
  store %struct.Memory* %loadMem_4af630, %struct.Memory** %MEMORY
  %loadMem_4af633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16257 = getelementptr inbounds %struct.GPR, %struct.GPR* %16256, i32 0, i32 33
  %16258 = getelementptr inbounds %struct.Reg, %struct.Reg* %16257, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %16258 to i64*
  %16259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16260 = getelementptr inbounds %struct.GPR, %struct.GPR* %16259, i32 0, i32 7
  %16261 = getelementptr inbounds %struct.Reg, %struct.Reg* %16260, i32 0, i32 0
  %RDX.i951 = bitcast %union.anon* %16261 to i64*
  %16262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16263 = getelementptr inbounds %struct.GPR, %struct.GPR* %16262, i32 0, i32 15
  %16264 = getelementptr inbounds %struct.Reg, %struct.Reg* %16263, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %16264 to i64*
  %16265 = load i64, i64* %RBP.i952
  %16266 = sub i64 %16265, 796
  %16267 = load i64, i64* %PC.i950
  %16268 = add i64 %16267, 6
  store i64 %16268, i64* %PC.i950
  %16269 = inttoptr i64 %16266 to i32*
  %16270 = load i32, i32* %16269
  %16271 = zext i32 %16270 to i64
  store i64 %16271, i64* %RDX.i951, align 8
  store %struct.Memory* %loadMem_4af633, %struct.Memory** %MEMORY
  %loadMem_4af639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16273 = getelementptr inbounds %struct.GPR, %struct.GPR* %16272, i32 0, i32 33
  %16274 = getelementptr inbounds %struct.Reg, %struct.Reg* %16273, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %16274 to i64*
  %16275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16276 = getelementptr inbounds %struct.GPR, %struct.GPR* %16275, i32 0, i32 9
  %16277 = getelementptr inbounds %struct.Reg, %struct.Reg* %16276, i32 0, i32 0
  %RSI.i948 = bitcast %union.anon* %16277 to i64*
  %16278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16279 = getelementptr inbounds %struct.GPR, %struct.GPR* %16278, i32 0, i32 15
  %16280 = getelementptr inbounds %struct.Reg, %struct.Reg* %16279, i32 0, i32 0
  %RBP.i949 = bitcast %union.anon* %16280 to i64*
  %16281 = load i64, i64* %RBP.i949
  %16282 = sub i64 %16281, 35396
  %16283 = load i64, i64* %PC.i947
  %16284 = add i64 %16283, 7
  store i64 %16284, i64* %PC.i947
  %16285 = inttoptr i64 %16282 to i32*
  %16286 = load i32, i32* %16285
  %16287 = sext i32 %16286 to i64
  store i64 %16287, i64* %RSI.i948, align 8
  store %struct.Memory* %loadMem_4af639, %struct.Memory** %MEMORY
  %loadMem_4af640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16289 = getelementptr inbounds %struct.GPR, %struct.GPR* %16288, i32 0, i32 33
  %16290 = getelementptr inbounds %struct.Reg, %struct.Reg* %16289, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %16290 to i64*
  %16291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16292 = getelementptr inbounds %struct.GPR, %struct.GPR* %16291, i32 0, i32 9
  %16293 = getelementptr inbounds %struct.Reg, %struct.Reg* %16292, i32 0, i32 0
  %RSI.i946 = bitcast %union.anon* %16293 to i64*
  %16294 = load i64, i64* %RSI.i946
  %16295 = load i64, i64* %PC.i945
  %16296 = add i64 %16295, 7
  store i64 %16296, i64* %PC.i945
  %16297 = sext i64 %16294 to i128
  %16298 = and i128 %16297, -18446744073709551616
  %16299 = zext i64 %16294 to i128
  %16300 = or i128 %16298, %16299
  %16301 = mul i128 180, %16300
  %16302 = trunc i128 %16301 to i64
  store i64 %16302, i64* %RSI.i946, align 8
  %16303 = sext i64 %16302 to i128
  %16304 = icmp ne i128 %16303, %16301
  %16305 = zext i1 %16304 to i8
  %16306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16305, i8* %16306, align 1
  %16307 = trunc i128 %16301 to i32
  %16308 = and i32 %16307, 255
  %16309 = call i32 @llvm.ctpop.i32(i32 %16308)
  %16310 = trunc i32 %16309 to i8
  %16311 = and i8 %16310, 1
  %16312 = xor i8 %16311, 1
  %16313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16312, i8* %16313, align 1
  %16314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16314, align 1
  %16315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16315, align 1
  %16316 = lshr i64 %16302, 63
  %16317 = trunc i64 %16316 to i8
  %16318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16317, i8* %16318, align 1
  %16319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16305, i8* %16319, align 1
  store %struct.Memory* %loadMem_4af640, %struct.Memory** %MEMORY
  %loadMem_4af647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16321 = getelementptr inbounds %struct.GPR, %struct.GPR* %16320, i32 0, i32 33
  %16322 = getelementptr inbounds %struct.Reg, %struct.Reg* %16321, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %16322 to i64*
  %16323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16324 = getelementptr inbounds %struct.GPR, %struct.GPR* %16323, i32 0, i32 5
  %16325 = getelementptr inbounds %struct.Reg, %struct.Reg* %16324, i32 0, i32 0
  %RCX.i943 = bitcast %union.anon* %16325 to i64*
  %16326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16327 = getelementptr inbounds %struct.GPR, %struct.GPR* %16326, i32 0, i32 9
  %16328 = getelementptr inbounds %struct.Reg, %struct.Reg* %16327, i32 0, i32 0
  %RSI.i944 = bitcast %union.anon* %16328 to i64*
  %16329 = load i64, i64* %RCX.i943
  %16330 = load i64, i64* %RSI.i944
  %16331 = load i64, i64* %PC.i942
  %16332 = add i64 %16331, 3
  store i64 %16332, i64* %PC.i942
  %16333 = add i64 %16330, %16329
  store i64 %16333, i64* %RCX.i943, align 8
  %16334 = icmp ult i64 %16333, %16329
  %16335 = icmp ult i64 %16333, %16330
  %16336 = or i1 %16334, %16335
  %16337 = zext i1 %16336 to i8
  %16338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16337, i8* %16338, align 1
  %16339 = trunc i64 %16333 to i32
  %16340 = and i32 %16339, 255
  %16341 = call i32 @llvm.ctpop.i32(i32 %16340)
  %16342 = trunc i32 %16341 to i8
  %16343 = and i8 %16342, 1
  %16344 = xor i8 %16343, 1
  %16345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16344, i8* %16345, align 1
  %16346 = xor i64 %16330, %16329
  %16347 = xor i64 %16346, %16333
  %16348 = lshr i64 %16347, 4
  %16349 = trunc i64 %16348 to i8
  %16350 = and i8 %16349, 1
  %16351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16350, i8* %16351, align 1
  %16352 = icmp eq i64 %16333, 0
  %16353 = zext i1 %16352 to i8
  %16354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16353, i8* %16354, align 1
  %16355 = lshr i64 %16333, 63
  %16356 = trunc i64 %16355 to i8
  %16357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16356, i8* %16357, align 1
  %16358 = lshr i64 %16329, 63
  %16359 = lshr i64 %16330, 63
  %16360 = xor i64 %16355, %16358
  %16361 = xor i64 %16355, %16359
  %16362 = add i64 %16360, %16361
  %16363 = icmp eq i64 %16362, 2
  %16364 = zext i1 %16363 to i8
  %16365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16364, i8* %16365, align 1
  store %struct.Memory* %loadMem_4af647, %struct.Memory** %MEMORY
  %loadMem_4af64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16367 = getelementptr inbounds %struct.GPR, %struct.GPR* %16366, i32 0, i32 33
  %16368 = getelementptr inbounds %struct.Reg, %struct.Reg* %16367, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %16368 to i64*
  %16369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16370 = getelementptr inbounds %struct.GPR, %struct.GPR* %16369, i32 0, i32 9
  %16371 = getelementptr inbounds %struct.Reg, %struct.Reg* %16370, i32 0, i32 0
  %RSI.i940 = bitcast %union.anon* %16371 to i64*
  %16372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16373 = getelementptr inbounds %struct.GPR, %struct.GPR* %16372, i32 0, i32 15
  %16374 = getelementptr inbounds %struct.Reg, %struct.Reg* %16373, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %16374 to i64*
  %16375 = load i64, i64* %RBP.i941
  %16376 = sub i64 %16375, 12
  %16377 = load i64, i64* %PC.i939
  %16378 = add i64 %16377, 4
  store i64 %16378, i64* %PC.i939
  %16379 = inttoptr i64 %16376 to i32*
  %16380 = load i32, i32* %16379
  %16381 = sext i32 %16380 to i64
  store i64 %16381, i64* %RSI.i940, align 8
  store %struct.Memory* %loadMem_4af64a, %struct.Memory** %MEMORY
  %loadMem_4af64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16383 = getelementptr inbounds %struct.GPR, %struct.GPR* %16382, i32 0, i32 33
  %16384 = getelementptr inbounds %struct.Reg, %struct.Reg* %16383, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %16384 to i64*
  %16385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16386 = getelementptr inbounds %struct.GPR, %struct.GPR* %16385, i32 0, i32 9
  %16387 = getelementptr inbounds %struct.Reg, %struct.Reg* %16386, i32 0, i32 0
  %RSI.i938 = bitcast %union.anon* %16387 to i64*
  %16388 = load i64, i64* %RSI.i938
  %16389 = load i64, i64* %PC.i937
  %16390 = add i64 %16389, 4
  store i64 %16390, i64* %PC.i937
  %16391 = sext i64 %16388 to i128
  %16392 = and i128 %16391, -18446744073709551616
  %16393 = zext i64 %16388 to i128
  %16394 = or i128 %16392, %16393
  %16395 = mul i128 12, %16394
  %16396 = trunc i128 %16395 to i64
  store i64 %16396, i64* %RSI.i938, align 8
  %16397 = sext i64 %16396 to i128
  %16398 = icmp ne i128 %16397, %16395
  %16399 = zext i1 %16398 to i8
  %16400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16399, i8* %16400, align 1
  %16401 = trunc i128 %16395 to i32
  %16402 = and i32 %16401, 255
  %16403 = call i32 @llvm.ctpop.i32(i32 %16402)
  %16404 = trunc i32 %16403 to i8
  %16405 = and i8 %16404, 1
  %16406 = xor i8 %16405, 1
  %16407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16406, i8* %16407, align 1
  %16408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16408, align 1
  %16409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16409, align 1
  %16410 = lshr i64 %16396, 63
  %16411 = trunc i64 %16410 to i8
  %16412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16411, i8* %16412, align 1
  %16413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16399, i8* %16413, align 1
  store %struct.Memory* %loadMem_4af64e, %struct.Memory** %MEMORY
  %loadMem_4af652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16415 = getelementptr inbounds %struct.GPR, %struct.GPR* %16414, i32 0, i32 33
  %16416 = getelementptr inbounds %struct.Reg, %struct.Reg* %16415, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %16416 to i64*
  %16417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16418 = getelementptr inbounds %struct.GPR, %struct.GPR* %16417, i32 0, i32 5
  %16419 = getelementptr inbounds %struct.Reg, %struct.Reg* %16418, i32 0, i32 0
  %RCX.i935 = bitcast %union.anon* %16419 to i64*
  %16420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16421 = getelementptr inbounds %struct.GPR, %struct.GPR* %16420, i32 0, i32 9
  %16422 = getelementptr inbounds %struct.Reg, %struct.Reg* %16421, i32 0, i32 0
  %RSI.i936 = bitcast %union.anon* %16422 to i64*
  %16423 = load i64, i64* %RCX.i935
  %16424 = load i64, i64* %RSI.i936
  %16425 = load i64, i64* %PC.i934
  %16426 = add i64 %16425, 3
  store i64 %16426, i64* %PC.i934
  %16427 = add i64 %16424, %16423
  store i64 %16427, i64* %RCX.i935, align 8
  %16428 = icmp ult i64 %16427, %16423
  %16429 = icmp ult i64 %16427, %16424
  %16430 = or i1 %16428, %16429
  %16431 = zext i1 %16430 to i8
  %16432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16431, i8* %16432, align 1
  %16433 = trunc i64 %16427 to i32
  %16434 = and i32 %16433, 255
  %16435 = call i32 @llvm.ctpop.i32(i32 %16434)
  %16436 = trunc i32 %16435 to i8
  %16437 = and i8 %16436, 1
  %16438 = xor i8 %16437, 1
  %16439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16438, i8* %16439, align 1
  %16440 = xor i64 %16424, %16423
  %16441 = xor i64 %16440, %16427
  %16442 = lshr i64 %16441, 4
  %16443 = trunc i64 %16442 to i8
  %16444 = and i8 %16443, 1
  %16445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16444, i8* %16445, align 1
  %16446 = icmp eq i64 %16427, 0
  %16447 = zext i1 %16446 to i8
  %16448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16447, i8* %16448, align 1
  %16449 = lshr i64 %16427, 63
  %16450 = trunc i64 %16449 to i8
  %16451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16450, i8* %16451, align 1
  %16452 = lshr i64 %16423, 63
  %16453 = lshr i64 %16424, 63
  %16454 = xor i64 %16449, %16452
  %16455 = xor i64 %16449, %16453
  %16456 = add i64 %16454, %16455
  %16457 = icmp eq i64 %16456, 2
  %16458 = zext i1 %16457 to i8
  %16459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16458, i8* %16459, align 1
  store %struct.Memory* %loadMem_4af652, %struct.Memory** %MEMORY
  %loadMem_4af655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16461 = getelementptr inbounds %struct.GPR, %struct.GPR* %16460, i32 0, i32 33
  %16462 = getelementptr inbounds %struct.Reg, %struct.Reg* %16461, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %16462 to i64*
  %16463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16464 = getelementptr inbounds %struct.GPR, %struct.GPR* %16463, i32 0, i32 7
  %16465 = getelementptr inbounds %struct.Reg, %struct.Reg* %16464, i32 0, i32 0
  %EDX.i932 = bitcast %union.anon* %16465 to i32*
  %16466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16467 = getelementptr inbounds %struct.GPR, %struct.GPR* %16466, i32 0, i32 5
  %16468 = getelementptr inbounds %struct.Reg, %struct.Reg* %16467, i32 0, i32 0
  %RCX.i933 = bitcast %union.anon* %16468 to i64*
  %16469 = load i64, i64* %RCX.i933
  %16470 = add i64 %16469, 8
  %16471 = load i32, i32* %EDX.i932
  %16472 = zext i32 %16471 to i64
  %16473 = load i64, i64* %PC.i931
  %16474 = add i64 %16473, 3
  store i64 %16474, i64* %PC.i931
  %16475 = inttoptr i64 %16470 to i32*
  store i32 %16471, i32* %16475
  store %struct.Memory* %loadMem_4af655, %struct.Memory** %MEMORY
  %loadMem_4af658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16477 = getelementptr inbounds %struct.GPR, %struct.GPR* %16476, i32 0, i32 33
  %16478 = getelementptr inbounds %struct.Reg, %struct.Reg* %16477, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %16478 to i64*
  %16479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16480 = getelementptr inbounds %struct.GPR, %struct.GPR* %16479, i32 0, i32 5
  %16481 = getelementptr inbounds %struct.Reg, %struct.Reg* %16480, i32 0, i32 0
  %RCX.i929 = bitcast %union.anon* %16481 to i64*
  %16482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16483 = getelementptr inbounds %struct.GPR, %struct.GPR* %16482, i32 0, i32 15
  %16484 = getelementptr inbounds %struct.Reg, %struct.Reg* %16483, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %16484 to i64*
  %16485 = load i64, i64* %RBP.i930
  %16486 = sub i64 %16485, 35396
  %16487 = load i64, i64* %PC.i928
  %16488 = add i64 %16487, 7
  store i64 %16488, i64* %PC.i928
  %16489 = inttoptr i64 %16486 to i32*
  %16490 = load i32, i32* %16489
  %16491 = sext i32 %16490 to i64
  store i64 %16491, i64* %RCX.i929, align 8
  store %struct.Memory* %loadMem_4af658, %struct.Memory** %MEMORY
  %loadMem_4af65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16493 = getelementptr inbounds %struct.GPR, %struct.GPR* %16492, i32 0, i32 33
  %16494 = getelementptr inbounds %struct.Reg, %struct.Reg* %16493, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %16494 to i64*
  %16495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16496 = getelementptr inbounds %struct.GPR, %struct.GPR* %16495, i32 0, i32 5
  %16497 = getelementptr inbounds %struct.Reg, %struct.Reg* %16496, i32 0, i32 0
  %RCX.i927 = bitcast %union.anon* %16497 to i64*
  %16498 = load i64, i64* %RCX.i927
  %16499 = load i64, i64* %PC.i926
  %16500 = add i64 %16499, 7
  store i64 %16500, i64* %PC.i926
  %16501 = sext i64 %16498 to i128
  %16502 = and i128 %16501, -18446744073709551616
  %16503 = zext i64 %16498 to i128
  %16504 = or i128 %16502, %16503
  %16505 = mul i128 180, %16504
  %16506 = trunc i128 %16505 to i64
  store i64 %16506, i64* %RCX.i927, align 8
  %16507 = sext i64 %16506 to i128
  %16508 = icmp ne i128 %16507, %16505
  %16509 = zext i1 %16508 to i8
  %16510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16509, i8* %16510, align 1
  %16511 = trunc i128 %16505 to i32
  %16512 = and i32 %16511, 255
  %16513 = call i32 @llvm.ctpop.i32(i32 %16512)
  %16514 = trunc i32 %16513 to i8
  %16515 = and i8 %16514, 1
  %16516 = xor i8 %16515, 1
  %16517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16516, i8* %16517, align 1
  %16518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16518, align 1
  %16519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16519, align 1
  %16520 = lshr i64 %16506, 63
  %16521 = trunc i64 %16520 to i8
  %16522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16521, i8* %16522, align 1
  %16523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16509, i8* %16523, align 1
  store %struct.Memory* %loadMem_4af65f, %struct.Memory** %MEMORY
  %loadMem_4af666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16525 = getelementptr inbounds %struct.GPR, %struct.GPR* %16524, i32 0, i32 33
  %16526 = getelementptr inbounds %struct.Reg, %struct.Reg* %16525, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %16526 to i64*
  %16527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16528 = getelementptr inbounds %struct.GPR, %struct.GPR* %16527, i32 0, i32 1
  %16529 = getelementptr inbounds %struct.Reg, %struct.Reg* %16528, i32 0, i32 0
  %RAX.i924 = bitcast %union.anon* %16529 to i64*
  %16530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16531 = getelementptr inbounds %struct.GPR, %struct.GPR* %16530, i32 0, i32 9
  %16532 = getelementptr inbounds %struct.Reg, %struct.Reg* %16531, i32 0, i32 0
  %RSI.i925 = bitcast %union.anon* %16532 to i64*
  %16533 = load i64, i64* %RAX.i924
  %16534 = load i64, i64* %PC.i923
  %16535 = add i64 %16534, 3
  store i64 %16535, i64* %PC.i923
  store i64 %16533, i64* %RSI.i925, align 8
  store %struct.Memory* %loadMem_4af666, %struct.Memory** %MEMORY
  %loadMem_4af669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16537 = getelementptr inbounds %struct.GPR, %struct.GPR* %16536, i32 0, i32 33
  %16538 = getelementptr inbounds %struct.Reg, %struct.Reg* %16537, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %16538 to i64*
  %16539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16540 = getelementptr inbounds %struct.GPR, %struct.GPR* %16539, i32 0, i32 5
  %16541 = getelementptr inbounds %struct.Reg, %struct.Reg* %16540, i32 0, i32 0
  %RCX.i921 = bitcast %union.anon* %16541 to i64*
  %16542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16543 = getelementptr inbounds %struct.GPR, %struct.GPR* %16542, i32 0, i32 9
  %16544 = getelementptr inbounds %struct.Reg, %struct.Reg* %16543, i32 0, i32 0
  %RSI.i922 = bitcast %union.anon* %16544 to i64*
  %16545 = load i64, i64* %RSI.i922
  %16546 = load i64, i64* %RCX.i921
  %16547 = load i64, i64* %PC.i920
  %16548 = add i64 %16547, 3
  store i64 %16548, i64* %PC.i920
  %16549 = add i64 %16546, %16545
  store i64 %16549, i64* %RSI.i922, align 8
  %16550 = icmp ult i64 %16549, %16545
  %16551 = icmp ult i64 %16549, %16546
  %16552 = or i1 %16550, %16551
  %16553 = zext i1 %16552 to i8
  %16554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16553, i8* %16554, align 1
  %16555 = trunc i64 %16549 to i32
  %16556 = and i32 %16555, 255
  %16557 = call i32 @llvm.ctpop.i32(i32 %16556)
  %16558 = trunc i32 %16557 to i8
  %16559 = and i8 %16558, 1
  %16560 = xor i8 %16559, 1
  %16561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16560, i8* %16561, align 1
  %16562 = xor i64 %16546, %16545
  %16563 = xor i64 %16562, %16549
  %16564 = lshr i64 %16563, 4
  %16565 = trunc i64 %16564 to i8
  %16566 = and i8 %16565, 1
  %16567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16566, i8* %16567, align 1
  %16568 = icmp eq i64 %16549, 0
  %16569 = zext i1 %16568 to i8
  %16570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16569, i8* %16570, align 1
  %16571 = lshr i64 %16549, 63
  %16572 = trunc i64 %16571 to i8
  %16573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16572, i8* %16573, align 1
  %16574 = lshr i64 %16545, 63
  %16575 = lshr i64 %16546, 63
  %16576 = xor i64 %16571, %16574
  %16577 = xor i64 %16571, %16575
  %16578 = add i64 %16576, %16577
  %16579 = icmp eq i64 %16578, 2
  %16580 = zext i1 %16579 to i8
  %16581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16580, i8* %16581, align 1
  store %struct.Memory* %loadMem_4af669, %struct.Memory** %MEMORY
  %loadMem_4af66c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16583 = getelementptr inbounds %struct.GPR, %struct.GPR* %16582, i32 0, i32 33
  %16584 = getelementptr inbounds %struct.Reg, %struct.Reg* %16583, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %16584 to i64*
  %16585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16586 = getelementptr inbounds %struct.GPR, %struct.GPR* %16585, i32 0, i32 5
  %16587 = getelementptr inbounds %struct.Reg, %struct.Reg* %16586, i32 0, i32 0
  %RCX.i918 = bitcast %union.anon* %16587 to i64*
  %16588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16589 = getelementptr inbounds %struct.GPR, %struct.GPR* %16588, i32 0, i32 15
  %16590 = getelementptr inbounds %struct.Reg, %struct.Reg* %16589, i32 0, i32 0
  %RBP.i919 = bitcast %union.anon* %16590 to i64*
  %16591 = load i64, i64* %RBP.i919
  %16592 = sub i64 %16591, 12
  %16593 = load i64, i64* %PC.i917
  %16594 = add i64 %16593, 4
  store i64 %16594, i64* %PC.i917
  %16595 = inttoptr i64 %16592 to i32*
  %16596 = load i32, i32* %16595
  %16597 = sext i32 %16596 to i64
  store i64 %16597, i64* %RCX.i918, align 8
  store %struct.Memory* %loadMem_4af66c, %struct.Memory** %MEMORY
  %loadMem_4af670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16599 = getelementptr inbounds %struct.GPR, %struct.GPR* %16598, i32 0, i32 33
  %16600 = getelementptr inbounds %struct.Reg, %struct.Reg* %16599, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %16600 to i64*
  %16601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16602 = getelementptr inbounds %struct.GPR, %struct.GPR* %16601, i32 0, i32 5
  %16603 = getelementptr inbounds %struct.Reg, %struct.Reg* %16602, i32 0, i32 0
  %RCX.i916 = bitcast %union.anon* %16603 to i64*
  %16604 = load i64, i64* %RCX.i916
  %16605 = load i64, i64* %PC.i915
  %16606 = add i64 %16605, 4
  store i64 %16606, i64* %PC.i915
  %16607 = sext i64 %16604 to i128
  %16608 = and i128 %16607, -18446744073709551616
  %16609 = zext i64 %16604 to i128
  %16610 = or i128 %16608, %16609
  %16611 = mul i128 12, %16610
  %16612 = trunc i128 %16611 to i64
  store i64 %16612, i64* %RCX.i916, align 8
  %16613 = sext i64 %16612 to i128
  %16614 = icmp ne i128 %16613, %16611
  %16615 = zext i1 %16614 to i8
  %16616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16615, i8* %16616, align 1
  %16617 = trunc i128 %16611 to i32
  %16618 = and i32 %16617, 255
  %16619 = call i32 @llvm.ctpop.i32(i32 %16618)
  %16620 = trunc i32 %16619 to i8
  %16621 = and i8 %16620, 1
  %16622 = xor i8 %16621, 1
  %16623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16622, i8* %16623, align 1
  %16624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16624, align 1
  %16625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16625, align 1
  %16626 = lshr i64 %16612, 63
  %16627 = trunc i64 %16626 to i8
  %16628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16627, i8* %16628, align 1
  %16629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16615, i8* %16629, align 1
  store %struct.Memory* %loadMem_4af670, %struct.Memory** %MEMORY
  %loadMem_4af674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16631 = getelementptr inbounds %struct.GPR, %struct.GPR* %16630, i32 0, i32 33
  %16632 = getelementptr inbounds %struct.Reg, %struct.Reg* %16631, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %16632 to i64*
  %16633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16634 = getelementptr inbounds %struct.GPR, %struct.GPR* %16633, i32 0, i32 5
  %16635 = getelementptr inbounds %struct.Reg, %struct.Reg* %16634, i32 0, i32 0
  %RCX.i913 = bitcast %union.anon* %16635 to i64*
  %16636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16637 = getelementptr inbounds %struct.GPR, %struct.GPR* %16636, i32 0, i32 9
  %16638 = getelementptr inbounds %struct.Reg, %struct.Reg* %16637, i32 0, i32 0
  %RSI.i914 = bitcast %union.anon* %16638 to i64*
  %16639 = load i64, i64* %RSI.i914
  %16640 = load i64, i64* %RCX.i913
  %16641 = load i64, i64* %PC.i912
  %16642 = add i64 %16641, 3
  store i64 %16642, i64* %PC.i912
  %16643 = add i64 %16640, %16639
  store i64 %16643, i64* %RSI.i914, align 8
  %16644 = icmp ult i64 %16643, %16639
  %16645 = icmp ult i64 %16643, %16640
  %16646 = or i1 %16644, %16645
  %16647 = zext i1 %16646 to i8
  %16648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16647, i8* %16648, align 1
  %16649 = trunc i64 %16643 to i32
  %16650 = and i32 %16649, 255
  %16651 = call i32 @llvm.ctpop.i32(i32 %16650)
  %16652 = trunc i32 %16651 to i8
  %16653 = and i8 %16652, 1
  %16654 = xor i8 %16653, 1
  %16655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16654, i8* %16655, align 1
  %16656 = xor i64 %16640, %16639
  %16657 = xor i64 %16656, %16643
  %16658 = lshr i64 %16657, 4
  %16659 = trunc i64 %16658 to i8
  %16660 = and i8 %16659, 1
  %16661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16660, i8* %16661, align 1
  %16662 = icmp eq i64 %16643, 0
  %16663 = zext i1 %16662 to i8
  %16664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16663, i8* %16664, align 1
  %16665 = lshr i64 %16643, 63
  %16666 = trunc i64 %16665 to i8
  %16667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16666, i8* %16667, align 1
  %16668 = lshr i64 %16639, 63
  %16669 = lshr i64 %16640, 63
  %16670 = xor i64 %16665, %16668
  %16671 = xor i64 %16665, %16669
  %16672 = add i64 %16670, %16671
  %16673 = icmp eq i64 %16672, 2
  %16674 = zext i1 %16673 to i8
  %16675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16674, i8* %16675, align 1
  store %struct.Memory* %loadMem_4af674, %struct.Memory** %MEMORY
  %loadMem_4af677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16677 = getelementptr inbounds %struct.GPR, %struct.GPR* %16676, i32 0, i32 33
  %16678 = getelementptr inbounds %struct.Reg, %struct.Reg* %16677, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %16678 to i64*
  %16679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16680 = getelementptr inbounds %struct.GPR, %struct.GPR* %16679, i32 0, i32 9
  %16681 = getelementptr inbounds %struct.Reg, %struct.Reg* %16680, i32 0, i32 0
  %RSI.i911 = bitcast %union.anon* %16681 to i64*
  %16682 = load i64, i64* %RSI.i911
  %16683 = load i64, i64* %PC.i910
  %16684 = add i64 %16683, 6
  store i64 %16684, i64* %PC.i910
  %16685 = inttoptr i64 %16682 to i32*
  store i32 0, i32* %16685
  store %struct.Memory* %loadMem_4af677, %struct.Memory** %MEMORY
  %loadMem_4af67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16687 = getelementptr inbounds %struct.GPR, %struct.GPR* %16686, i32 0, i32 33
  %16688 = getelementptr inbounds %struct.Reg, %struct.Reg* %16687, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %16688 to i64*
  %16689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16690 = getelementptr inbounds %struct.GPR, %struct.GPR* %16689, i32 0, i32 5
  %16691 = getelementptr inbounds %struct.Reg, %struct.Reg* %16690, i32 0, i32 0
  %RCX.i908 = bitcast %union.anon* %16691 to i64*
  %16692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16693 = getelementptr inbounds %struct.GPR, %struct.GPR* %16692, i32 0, i32 15
  %16694 = getelementptr inbounds %struct.Reg, %struct.Reg* %16693, i32 0, i32 0
  %RBP.i909 = bitcast %union.anon* %16694 to i64*
  %16695 = load i64, i64* %RBP.i909
  %16696 = sub i64 %16695, 35396
  %16697 = load i64, i64* %PC.i907
  %16698 = add i64 %16697, 7
  store i64 %16698, i64* %PC.i907
  %16699 = inttoptr i64 %16696 to i32*
  %16700 = load i32, i32* %16699
  %16701 = sext i32 %16700 to i64
  store i64 %16701, i64* %RCX.i908, align 8
  store %struct.Memory* %loadMem_4af67d, %struct.Memory** %MEMORY
  %loadMem_4af684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16703 = getelementptr inbounds %struct.GPR, %struct.GPR* %16702, i32 0, i32 33
  %16704 = getelementptr inbounds %struct.Reg, %struct.Reg* %16703, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %16704 to i64*
  %16705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16706 = getelementptr inbounds %struct.GPR, %struct.GPR* %16705, i32 0, i32 5
  %16707 = getelementptr inbounds %struct.Reg, %struct.Reg* %16706, i32 0, i32 0
  %RCX.i906 = bitcast %union.anon* %16707 to i64*
  %16708 = load i64, i64* %RCX.i906
  %16709 = load i64, i64* %PC.i905
  %16710 = add i64 %16709, 7
  store i64 %16710, i64* %PC.i905
  %16711 = sext i64 %16708 to i128
  %16712 = and i128 %16711, -18446744073709551616
  %16713 = zext i64 %16708 to i128
  %16714 = or i128 %16712, %16713
  %16715 = mul i128 180, %16714
  %16716 = trunc i128 %16715 to i64
  store i64 %16716, i64* %RCX.i906, align 8
  %16717 = sext i64 %16716 to i128
  %16718 = icmp ne i128 %16717, %16715
  %16719 = zext i1 %16718 to i8
  %16720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16719, i8* %16720, align 1
  %16721 = trunc i128 %16715 to i32
  %16722 = and i32 %16721, 255
  %16723 = call i32 @llvm.ctpop.i32(i32 %16722)
  %16724 = trunc i32 %16723 to i8
  %16725 = and i8 %16724, 1
  %16726 = xor i8 %16725, 1
  %16727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16726, i8* %16727, align 1
  %16728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16728, align 1
  %16729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16729, align 1
  %16730 = lshr i64 %16716, 63
  %16731 = trunc i64 %16730 to i8
  %16732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16731, i8* %16732, align 1
  %16733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16719, i8* %16733, align 1
  store %struct.Memory* %loadMem_4af684, %struct.Memory** %MEMORY
  %loadMem_4af68b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16735 = getelementptr inbounds %struct.GPR, %struct.GPR* %16734, i32 0, i32 33
  %16736 = getelementptr inbounds %struct.Reg, %struct.Reg* %16735, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %16736 to i64*
  %16737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16738 = getelementptr inbounds %struct.GPR, %struct.GPR* %16737, i32 0, i32 1
  %16739 = getelementptr inbounds %struct.Reg, %struct.Reg* %16738, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %16739 to i64*
  %16740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16741 = getelementptr inbounds %struct.GPR, %struct.GPR* %16740, i32 0, i32 9
  %16742 = getelementptr inbounds %struct.Reg, %struct.Reg* %16741, i32 0, i32 0
  %RSI.i904 = bitcast %union.anon* %16742 to i64*
  %16743 = load i64, i64* %RAX.i903
  %16744 = load i64, i64* %PC.i902
  %16745 = add i64 %16744, 3
  store i64 %16745, i64* %PC.i902
  store i64 %16743, i64* %RSI.i904, align 8
  store %struct.Memory* %loadMem_4af68b, %struct.Memory** %MEMORY
  %loadMem_4af68e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16747 = getelementptr inbounds %struct.GPR, %struct.GPR* %16746, i32 0, i32 33
  %16748 = getelementptr inbounds %struct.Reg, %struct.Reg* %16747, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %16748 to i64*
  %16749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16750 = getelementptr inbounds %struct.GPR, %struct.GPR* %16749, i32 0, i32 5
  %16751 = getelementptr inbounds %struct.Reg, %struct.Reg* %16750, i32 0, i32 0
  %RCX.i900 = bitcast %union.anon* %16751 to i64*
  %16752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16753 = getelementptr inbounds %struct.GPR, %struct.GPR* %16752, i32 0, i32 9
  %16754 = getelementptr inbounds %struct.Reg, %struct.Reg* %16753, i32 0, i32 0
  %RSI.i901 = bitcast %union.anon* %16754 to i64*
  %16755 = load i64, i64* %RSI.i901
  %16756 = load i64, i64* %RCX.i900
  %16757 = load i64, i64* %PC.i899
  %16758 = add i64 %16757, 3
  store i64 %16758, i64* %PC.i899
  %16759 = add i64 %16756, %16755
  store i64 %16759, i64* %RSI.i901, align 8
  %16760 = icmp ult i64 %16759, %16755
  %16761 = icmp ult i64 %16759, %16756
  %16762 = or i1 %16760, %16761
  %16763 = zext i1 %16762 to i8
  %16764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16763, i8* %16764, align 1
  %16765 = trunc i64 %16759 to i32
  %16766 = and i32 %16765, 255
  %16767 = call i32 @llvm.ctpop.i32(i32 %16766)
  %16768 = trunc i32 %16767 to i8
  %16769 = and i8 %16768, 1
  %16770 = xor i8 %16769, 1
  %16771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16770, i8* %16771, align 1
  %16772 = xor i64 %16756, %16755
  %16773 = xor i64 %16772, %16759
  %16774 = lshr i64 %16773, 4
  %16775 = trunc i64 %16774 to i8
  %16776 = and i8 %16775, 1
  %16777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16776, i8* %16777, align 1
  %16778 = icmp eq i64 %16759, 0
  %16779 = zext i1 %16778 to i8
  %16780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16779, i8* %16780, align 1
  %16781 = lshr i64 %16759, 63
  %16782 = trunc i64 %16781 to i8
  %16783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16782, i8* %16783, align 1
  %16784 = lshr i64 %16755, 63
  %16785 = lshr i64 %16756, 63
  %16786 = xor i64 %16781, %16784
  %16787 = xor i64 %16781, %16785
  %16788 = add i64 %16786, %16787
  %16789 = icmp eq i64 %16788, 2
  %16790 = zext i1 %16789 to i8
  %16791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16790, i8* %16791, align 1
  store %struct.Memory* %loadMem_4af68e, %struct.Memory** %MEMORY
  %loadMem_4af691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16793 = getelementptr inbounds %struct.GPR, %struct.GPR* %16792, i32 0, i32 33
  %16794 = getelementptr inbounds %struct.Reg, %struct.Reg* %16793, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %16794 to i64*
  %16795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16796 = getelementptr inbounds %struct.GPR, %struct.GPR* %16795, i32 0, i32 5
  %16797 = getelementptr inbounds %struct.Reg, %struct.Reg* %16796, i32 0, i32 0
  %RCX.i897 = bitcast %union.anon* %16797 to i64*
  %16798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16799 = getelementptr inbounds %struct.GPR, %struct.GPR* %16798, i32 0, i32 15
  %16800 = getelementptr inbounds %struct.Reg, %struct.Reg* %16799, i32 0, i32 0
  %RBP.i898 = bitcast %union.anon* %16800 to i64*
  %16801 = load i64, i64* %RBP.i898
  %16802 = sub i64 %16801, 12
  %16803 = load i64, i64* %PC.i896
  %16804 = add i64 %16803, 4
  store i64 %16804, i64* %PC.i896
  %16805 = inttoptr i64 %16802 to i32*
  %16806 = load i32, i32* %16805
  %16807 = sext i32 %16806 to i64
  store i64 %16807, i64* %RCX.i897, align 8
  store %struct.Memory* %loadMem_4af691, %struct.Memory** %MEMORY
  %loadMem_4af695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16809 = getelementptr inbounds %struct.GPR, %struct.GPR* %16808, i32 0, i32 33
  %16810 = getelementptr inbounds %struct.Reg, %struct.Reg* %16809, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %16810 to i64*
  %16811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16812 = getelementptr inbounds %struct.GPR, %struct.GPR* %16811, i32 0, i32 5
  %16813 = getelementptr inbounds %struct.Reg, %struct.Reg* %16812, i32 0, i32 0
  %RCX.i895 = bitcast %union.anon* %16813 to i64*
  %16814 = load i64, i64* %RCX.i895
  %16815 = load i64, i64* %PC.i894
  %16816 = add i64 %16815, 4
  store i64 %16816, i64* %PC.i894
  %16817 = sext i64 %16814 to i128
  %16818 = and i128 %16817, -18446744073709551616
  %16819 = zext i64 %16814 to i128
  %16820 = or i128 %16818, %16819
  %16821 = mul i128 12, %16820
  %16822 = trunc i128 %16821 to i64
  store i64 %16822, i64* %RCX.i895, align 8
  %16823 = sext i64 %16822 to i128
  %16824 = icmp ne i128 %16823, %16821
  %16825 = zext i1 %16824 to i8
  %16826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16825, i8* %16826, align 1
  %16827 = trunc i128 %16821 to i32
  %16828 = and i32 %16827, 255
  %16829 = call i32 @llvm.ctpop.i32(i32 %16828)
  %16830 = trunc i32 %16829 to i8
  %16831 = and i8 %16830, 1
  %16832 = xor i8 %16831, 1
  %16833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16832, i8* %16833, align 1
  %16834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16834, align 1
  %16835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16835, align 1
  %16836 = lshr i64 %16822, 63
  %16837 = trunc i64 %16836 to i8
  %16838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16837, i8* %16838, align 1
  %16839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16825, i8* %16839, align 1
  store %struct.Memory* %loadMem_4af695, %struct.Memory** %MEMORY
  %loadMem_4af699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16841 = getelementptr inbounds %struct.GPR, %struct.GPR* %16840, i32 0, i32 33
  %16842 = getelementptr inbounds %struct.Reg, %struct.Reg* %16841, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %16842 to i64*
  %16843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16844 = getelementptr inbounds %struct.GPR, %struct.GPR* %16843, i32 0, i32 5
  %16845 = getelementptr inbounds %struct.Reg, %struct.Reg* %16844, i32 0, i32 0
  %RCX.i892 = bitcast %union.anon* %16845 to i64*
  %16846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16847 = getelementptr inbounds %struct.GPR, %struct.GPR* %16846, i32 0, i32 9
  %16848 = getelementptr inbounds %struct.Reg, %struct.Reg* %16847, i32 0, i32 0
  %RSI.i893 = bitcast %union.anon* %16848 to i64*
  %16849 = load i64, i64* %RSI.i893
  %16850 = load i64, i64* %RCX.i892
  %16851 = load i64, i64* %PC.i891
  %16852 = add i64 %16851, 3
  store i64 %16852, i64* %PC.i891
  %16853 = add i64 %16850, %16849
  store i64 %16853, i64* %RSI.i893, align 8
  %16854 = icmp ult i64 %16853, %16849
  %16855 = icmp ult i64 %16853, %16850
  %16856 = or i1 %16854, %16855
  %16857 = zext i1 %16856 to i8
  %16858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16857, i8* %16858, align 1
  %16859 = trunc i64 %16853 to i32
  %16860 = and i32 %16859, 255
  %16861 = call i32 @llvm.ctpop.i32(i32 %16860)
  %16862 = trunc i32 %16861 to i8
  %16863 = and i8 %16862, 1
  %16864 = xor i8 %16863, 1
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16864, i8* %16865, align 1
  %16866 = xor i64 %16850, %16849
  %16867 = xor i64 %16866, %16853
  %16868 = lshr i64 %16867, 4
  %16869 = trunc i64 %16868 to i8
  %16870 = and i8 %16869, 1
  %16871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16870, i8* %16871, align 1
  %16872 = icmp eq i64 %16853, 0
  %16873 = zext i1 %16872 to i8
  %16874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16873, i8* %16874, align 1
  %16875 = lshr i64 %16853, 63
  %16876 = trunc i64 %16875 to i8
  %16877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16876, i8* %16877, align 1
  %16878 = lshr i64 %16849, 63
  %16879 = lshr i64 %16850, 63
  %16880 = xor i64 %16875, %16878
  %16881 = xor i64 %16875, %16879
  %16882 = add i64 %16880, %16881
  %16883 = icmp eq i64 %16882, 2
  %16884 = zext i1 %16883 to i8
  %16885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16884, i8* %16885, align 1
  store %struct.Memory* %loadMem_4af699, %struct.Memory** %MEMORY
  %loadMem_4af69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16887 = getelementptr inbounds %struct.GPR, %struct.GPR* %16886, i32 0, i32 33
  %16888 = getelementptr inbounds %struct.Reg, %struct.Reg* %16887, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %16888 to i64*
  %16889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16890 = getelementptr inbounds %struct.GPR, %struct.GPR* %16889, i32 0, i32 9
  %16891 = getelementptr inbounds %struct.Reg, %struct.Reg* %16890, i32 0, i32 0
  %RSI.i890 = bitcast %union.anon* %16891 to i64*
  %16892 = load i64, i64* %RSI.i890
  %16893 = add i64 %16892, 4
  %16894 = load i64, i64* %PC.i889
  %16895 = add i64 %16894, 7
  store i64 %16895, i64* %PC.i889
  %16896 = inttoptr i64 %16893 to i32*
  store i32 0, i32* %16896
  store %struct.Memory* %loadMem_4af69c, %struct.Memory** %MEMORY
  %loadMem_4af6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16898 = getelementptr inbounds %struct.GPR, %struct.GPR* %16897, i32 0, i32 33
  %16899 = getelementptr inbounds %struct.Reg, %struct.Reg* %16898, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %16899 to i64*
  %16900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16901 = getelementptr inbounds %struct.GPR, %struct.GPR* %16900, i32 0, i32 5
  %16902 = getelementptr inbounds %struct.Reg, %struct.Reg* %16901, i32 0, i32 0
  %RCX.i887 = bitcast %union.anon* %16902 to i64*
  %16903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16904 = getelementptr inbounds %struct.GPR, %struct.GPR* %16903, i32 0, i32 15
  %16905 = getelementptr inbounds %struct.Reg, %struct.Reg* %16904, i32 0, i32 0
  %RBP.i888 = bitcast %union.anon* %16905 to i64*
  %16906 = load i64, i64* %RBP.i888
  %16907 = sub i64 %16906, 35396
  %16908 = load i64, i64* %PC.i886
  %16909 = add i64 %16908, 7
  store i64 %16909, i64* %PC.i886
  %16910 = inttoptr i64 %16907 to i32*
  %16911 = load i32, i32* %16910
  %16912 = sext i32 %16911 to i64
  store i64 %16912, i64* %RCX.i887, align 8
  store %struct.Memory* %loadMem_4af6a3, %struct.Memory** %MEMORY
  %loadMem_4af6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %16913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16914 = getelementptr inbounds %struct.GPR, %struct.GPR* %16913, i32 0, i32 33
  %16915 = getelementptr inbounds %struct.Reg, %struct.Reg* %16914, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %16915 to i64*
  %16916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16917 = getelementptr inbounds %struct.GPR, %struct.GPR* %16916, i32 0, i32 5
  %16918 = getelementptr inbounds %struct.Reg, %struct.Reg* %16917, i32 0, i32 0
  %RCX.i885 = bitcast %union.anon* %16918 to i64*
  %16919 = load i64, i64* %RCX.i885
  %16920 = load i64, i64* %PC.i884
  %16921 = add i64 %16920, 7
  store i64 %16921, i64* %PC.i884
  %16922 = sext i64 %16919 to i128
  %16923 = and i128 %16922, -18446744073709551616
  %16924 = zext i64 %16919 to i128
  %16925 = or i128 %16923, %16924
  %16926 = mul i128 180, %16925
  %16927 = trunc i128 %16926 to i64
  store i64 %16927, i64* %RCX.i885, align 8
  %16928 = sext i64 %16927 to i128
  %16929 = icmp ne i128 %16928, %16926
  %16930 = zext i1 %16929 to i8
  %16931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16930, i8* %16931, align 1
  %16932 = trunc i128 %16926 to i32
  %16933 = and i32 %16932, 255
  %16934 = call i32 @llvm.ctpop.i32(i32 %16933)
  %16935 = trunc i32 %16934 to i8
  %16936 = and i8 %16935, 1
  %16937 = xor i8 %16936, 1
  %16938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16937, i8* %16938, align 1
  %16939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16939, align 1
  %16940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16940, align 1
  %16941 = lshr i64 %16927, 63
  %16942 = trunc i64 %16941 to i8
  %16943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16942, i8* %16943, align 1
  %16944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16930, i8* %16944, align 1
  store %struct.Memory* %loadMem_4af6aa, %struct.Memory** %MEMORY
  %loadMem_4af6b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16946 = getelementptr inbounds %struct.GPR, %struct.GPR* %16945, i32 0, i32 33
  %16947 = getelementptr inbounds %struct.Reg, %struct.Reg* %16946, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %16947 to i64*
  %16948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16949 = getelementptr inbounds %struct.GPR, %struct.GPR* %16948, i32 0, i32 1
  %16950 = getelementptr inbounds %struct.Reg, %struct.Reg* %16949, i32 0, i32 0
  %RAX.i882 = bitcast %union.anon* %16950 to i64*
  %16951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16952 = getelementptr inbounds %struct.GPR, %struct.GPR* %16951, i32 0, i32 5
  %16953 = getelementptr inbounds %struct.Reg, %struct.Reg* %16952, i32 0, i32 0
  %RCX.i883 = bitcast %union.anon* %16953 to i64*
  %16954 = load i64, i64* %RAX.i882
  %16955 = load i64, i64* %RCX.i883
  %16956 = load i64, i64* %PC.i881
  %16957 = add i64 %16956, 3
  store i64 %16957, i64* %PC.i881
  %16958 = add i64 %16955, %16954
  store i64 %16958, i64* %RAX.i882, align 8
  %16959 = icmp ult i64 %16958, %16954
  %16960 = icmp ult i64 %16958, %16955
  %16961 = or i1 %16959, %16960
  %16962 = zext i1 %16961 to i8
  %16963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16962, i8* %16963, align 1
  %16964 = trunc i64 %16958 to i32
  %16965 = and i32 %16964, 255
  %16966 = call i32 @llvm.ctpop.i32(i32 %16965)
  %16967 = trunc i32 %16966 to i8
  %16968 = and i8 %16967, 1
  %16969 = xor i8 %16968, 1
  %16970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16969, i8* %16970, align 1
  %16971 = xor i64 %16955, %16954
  %16972 = xor i64 %16971, %16958
  %16973 = lshr i64 %16972, 4
  %16974 = trunc i64 %16973 to i8
  %16975 = and i8 %16974, 1
  %16976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16975, i8* %16976, align 1
  %16977 = icmp eq i64 %16958, 0
  %16978 = zext i1 %16977 to i8
  %16979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16978, i8* %16979, align 1
  %16980 = lshr i64 %16958, 63
  %16981 = trunc i64 %16980 to i8
  %16982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16981, i8* %16982, align 1
  %16983 = lshr i64 %16954, 63
  %16984 = lshr i64 %16955, 63
  %16985 = xor i64 %16980, %16983
  %16986 = xor i64 %16980, %16984
  %16987 = add i64 %16985, %16986
  %16988 = icmp eq i64 %16987, 2
  %16989 = zext i1 %16988 to i8
  %16990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16989, i8* %16990, align 1
  store %struct.Memory* %loadMem_4af6b1, %struct.Memory** %MEMORY
  %loadMem_4af6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16992 = getelementptr inbounds %struct.GPR, %struct.GPR* %16991, i32 0, i32 33
  %16993 = getelementptr inbounds %struct.Reg, %struct.Reg* %16992, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %16993 to i64*
  %16994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16995 = getelementptr inbounds %struct.GPR, %struct.GPR* %16994, i32 0, i32 5
  %16996 = getelementptr inbounds %struct.Reg, %struct.Reg* %16995, i32 0, i32 0
  %RCX.i879 = bitcast %union.anon* %16996 to i64*
  %16997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16998 = getelementptr inbounds %struct.GPR, %struct.GPR* %16997, i32 0, i32 15
  %16999 = getelementptr inbounds %struct.Reg, %struct.Reg* %16998, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %16999 to i64*
  %17000 = load i64, i64* %RBP.i880
  %17001 = sub i64 %17000, 12
  %17002 = load i64, i64* %PC.i878
  %17003 = add i64 %17002, 4
  store i64 %17003, i64* %PC.i878
  %17004 = inttoptr i64 %17001 to i32*
  %17005 = load i32, i32* %17004
  %17006 = sext i32 %17005 to i64
  store i64 %17006, i64* %RCX.i879, align 8
  store %struct.Memory* %loadMem_4af6b4, %struct.Memory** %MEMORY
  %loadMem_4af6b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17008 = getelementptr inbounds %struct.GPR, %struct.GPR* %17007, i32 0, i32 33
  %17009 = getelementptr inbounds %struct.Reg, %struct.Reg* %17008, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %17009 to i64*
  %17010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17011 = getelementptr inbounds %struct.GPR, %struct.GPR* %17010, i32 0, i32 5
  %17012 = getelementptr inbounds %struct.Reg, %struct.Reg* %17011, i32 0, i32 0
  %RCX.i877 = bitcast %union.anon* %17012 to i64*
  %17013 = load i64, i64* %RCX.i877
  %17014 = load i64, i64* %PC.i876
  %17015 = add i64 %17014, 4
  store i64 %17015, i64* %PC.i876
  %17016 = sext i64 %17013 to i128
  %17017 = and i128 %17016, -18446744073709551616
  %17018 = zext i64 %17013 to i128
  %17019 = or i128 %17017, %17018
  %17020 = mul i128 12, %17019
  %17021 = trunc i128 %17020 to i64
  store i64 %17021, i64* %RCX.i877, align 8
  %17022 = sext i64 %17021 to i128
  %17023 = icmp ne i128 %17022, %17020
  %17024 = zext i1 %17023 to i8
  %17025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17024, i8* %17025, align 1
  %17026 = trunc i128 %17020 to i32
  %17027 = and i32 %17026, 255
  %17028 = call i32 @llvm.ctpop.i32(i32 %17027)
  %17029 = trunc i32 %17028 to i8
  %17030 = and i8 %17029, 1
  %17031 = xor i8 %17030, 1
  %17032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17031, i8* %17032, align 1
  %17033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17033, align 1
  %17034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17034, align 1
  %17035 = lshr i64 %17021, 63
  %17036 = trunc i64 %17035 to i8
  %17037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17036, i8* %17037, align 1
  %17038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17024, i8* %17038, align 1
  store %struct.Memory* %loadMem_4af6b8, %struct.Memory** %MEMORY
  %loadMem_4af6bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17040 = getelementptr inbounds %struct.GPR, %struct.GPR* %17039, i32 0, i32 33
  %17041 = getelementptr inbounds %struct.Reg, %struct.Reg* %17040, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %17041 to i64*
  %17042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17043 = getelementptr inbounds %struct.GPR, %struct.GPR* %17042, i32 0, i32 1
  %17044 = getelementptr inbounds %struct.Reg, %struct.Reg* %17043, i32 0, i32 0
  %RAX.i874 = bitcast %union.anon* %17044 to i64*
  %17045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17046 = getelementptr inbounds %struct.GPR, %struct.GPR* %17045, i32 0, i32 5
  %17047 = getelementptr inbounds %struct.Reg, %struct.Reg* %17046, i32 0, i32 0
  %RCX.i875 = bitcast %union.anon* %17047 to i64*
  %17048 = load i64, i64* %RAX.i874
  %17049 = load i64, i64* %RCX.i875
  %17050 = load i64, i64* %PC.i873
  %17051 = add i64 %17050, 3
  store i64 %17051, i64* %PC.i873
  %17052 = add i64 %17049, %17048
  store i64 %17052, i64* %RAX.i874, align 8
  %17053 = icmp ult i64 %17052, %17048
  %17054 = icmp ult i64 %17052, %17049
  %17055 = or i1 %17053, %17054
  %17056 = zext i1 %17055 to i8
  %17057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17056, i8* %17057, align 1
  %17058 = trunc i64 %17052 to i32
  %17059 = and i32 %17058, 255
  %17060 = call i32 @llvm.ctpop.i32(i32 %17059)
  %17061 = trunc i32 %17060 to i8
  %17062 = and i8 %17061, 1
  %17063 = xor i8 %17062, 1
  %17064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17063, i8* %17064, align 1
  %17065 = xor i64 %17049, %17048
  %17066 = xor i64 %17065, %17052
  %17067 = lshr i64 %17066, 4
  %17068 = trunc i64 %17067 to i8
  %17069 = and i8 %17068, 1
  %17070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17069, i8* %17070, align 1
  %17071 = icmp eq i64 %17052, 0
  %17072 = zext i1 %17071 to i8
  %17073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17072, i8* %17073, align 1
  %17074 = lshr i64 %17052, 63
  %17075 = trunc i64 %17074 to i8
  %17076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17075, i8* %17076, align 1
  %17077 = lshr i64 %17048, 63
  %17078 = lshr i64 %17049, 63
  %17079 = xor i64 %17074, %17077
  %17080 = xor i64 %17074, %17078
  %17081 = add i64 %17079, %17080
  %17082 = icmp eq i64 %17081, 2
  %17083 = zext i1 %17082 to i8
  %17084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17083, i8* %17084, align 1
  store %struct.Memory* %loadMem_4af6bc, %struct.Memory** %MEMORY
  %loadMem_4af6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %17085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17086 = getelementptr inbounds %struct.GPR, %struct.GPR* %17085, i32 0, i32 33
  %17087 = getelementptr inbounds %struct.Reg, %struct.Reg* %17086, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %17087 to i64*
  %17088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17089 = getelementptr inbounds %struct.GPR, %struct.GPR* %17088, i32 0, i32 1
  %17090 = getelementptr inbounds %struct.Reg, %struct.Reg* %17089, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %17090 to i64*
  %17091 = load i64, i64* %RAX.i872
  %17092 = add i64 %17091, 8
  %17093 = load i64, i64* %PC.i871
  %17094 = add i64 %17093, 7
  store i64 %17094, i64* %PC.i871
  %17095 = inttoptr i64 %17092 to i32*
  store i32 0, i32* %17095
  store %struct.Memory* %loadMem_4af6bf, %struct.Memory** %MEMORY
  %loadMem_4af6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17097 = getelementptr inbounds %struct.GPR, %struct.GPR* %17096, i32 0, i32 33
  %17098 = getelementptr inbounds %struct.Reg, %struct.Reg* %17097, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %17098 to i64*
  %17099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17100 = getelementptr inbounds %struct.GPR, %struct.GPR* %17099, i32 0, i32 15
  %17101 = getelementptr inbounds %struct.Reg, %struct.Reg* %17100, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %17101 to i64*
  %17102 = load i64, i64* %RBP.i870
  %17103 = sub i64 %17102, 4
  %17104 = load i64, i64* %PC.i869
  %17105 = add i64 %17104, 7
  store i64 %17105, i64* %PC.i869
  %17106 = inttoptr i64 %17103 to i32*
  store i32 0, i32* %17106
  store %struct.Memory* %loadMem_4af6c6, %struct.Memory** %MEMORY
  br label %block_.L_4af6cd

block_.L_4af6cd:                                  ; preds = %block_.L_4af7c8, %block_.L_4af5cc
  %loadMem_4af6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17108 = getelementptr inbounds %struct.GPR, %struct.GPR* %17107, i32 0, i32 33
  %17109 = getelementptr inbounds %struct.Reg, %struct.Reg* %17108, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %17109 to i64*
  %17110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17111 = getelementptr inbounds %struct.GPR, %struct.GPR* %17110, i32 0, i32 1
  %17112 = getelementptr inbounds %struct.Reg, %struct.Reg* %17111, i32 0, i32 0
  %RAX.i867 = bitcast %union.anon* %17112 to i64*
  %17113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17114 = getelementptr inbounds %struct.GPR, %struct.GPR* %17113, i32 0, i32 15
  %17115 = getelementptr inbounds %struct.Reg, %struct.Reg* %17114, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %17115 to i64*
  %17116 = load i64, i64* %RBP.i868
  %17117 = sub i64 %17116, 4
  %17118 = load i64, i64* %PC.i866
  %17119 = add i64 %17118, 3
  store i64 %17119, i64* %PC.i866
  %17120 = inttoptr i64 %17117 to i32*
  %17121 = load i32, i32* %17120
  %17122 = zext i32 %17121 to i64
  store i64 %17122, i64* %RAX.i867, align 8
  store %struct.Memory* %loadMem_4af6cd, %struct.Memory** %MEMORY
  %loadMem_4af6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17124 = getelementptr inbounds %struct.GPR, %struct.GPR* %17123, i32 0, i32 33
  %17125 = getelementptr inbounds %struct.Reg, %struct.Reg* %17124, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %17125 to i64*
  %17126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17127 = getelementptr inbounds %struct.GPR, %struct.GPR* %17126, i32 0, i32 5
  %17128 = getelementptr inbounds %struct.Reg, %struct.Reg* %17127, i32 0, i32 0
  %RCX.i865 = bitcast %union.anon* %17128 to i64*
  %17129 = load i64, i64* %PC.i864
  %17130 = add i64 %17129, 8
  store i64 %17130, i64* %PC.i864
  %17131 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17131, i64* %RCX.i865, align 8
  store %struct.Memory* %loadMem_4af6d0, %struct.Memory** %MEMORY
  %loadMem_4af6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17133 = getelementptr inbounds %struct.GPR, %struct.GPR* %17132, i32 0, i32 33
  %17134 = getelementptr inbounds %struct.Reg, %struct.Reg* %17133, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %17134 to i64*
  %17135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17136 = getelementptr inbounds %struct.GPR, %struct.GPR* %17135, i32 0, i32 5
  %17137 = getelementptr inbounds %struct.Reg, %struct.Reg* %17136, i32 0, i32 0
  %RCX.i862 = bitcast %union.anon* %17137 to i64*
  %17138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17139 = getelementptr inbounds %struct.GPR, %struct.GPR* %17138, i32 0, i32 7
  %17140 = getelementptr inbounds %struct.Reg, %struct.Reg* %17139, i32 0, i32 0
  %RDX.i863 = bitcast %union.anon* %17140 to i64*
  %17141 = load i64, i64* %RCX.i862
  %17142 = add i64 %17141, 60
  %17143 = load i64, i64* %PC.i861
  %17144 = add i64 %17143, 3
  store i64 %17144, i64* %PC.i861
  %17145 = inttoptr i64 %17142 to i32*
  %17146 = load i32, i32* %17145
  %17147 = zext i32 %17146 to i64
  store i64 %17147, i64* %RDX.i863, align 8
  store %struct.Memory* %loadMem_4af6d8, %struct.Memory** %MEMORY
  %loadMem_4af6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %17148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17149 = getelementptr inbounds %struct.GPR, %struct.GPR* %17148, i32 0, i32 33
  %17150 = getelementptr inbounds %struct.Reg, %struct.Reg* %17149, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %17150 to i64*
  %17151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17152 = getelementptr inbounds %struct.GPR, %struct.GPR* %17151, i32 0, i32 5
  %17153 = getelementptr inbounds %struct.Reg, %struct.Reg* %17152, i32 0, i32 0
  %RCX.i860 = bitcast %union.anon* %17153 to i64*
  %17154 = load i64, i64* %PC.i859
  %17155 = add i64 %17154, 8
  store i64 %17155, i64* %PC.i859
  %17156 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17156, i64* %RCX.i860, align 8
  store %struct.Memory* %loadMem_4af6db, %struct.Memory** %MEMORY
  %loadMem_4af6e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17158 = getelementptr inbounds %struct.GPR, %struct.GPR* %17157, i32 0, i32 33
  %17159 = getelementptr inbounds %struct.Reg, %struct.Reg* %17158, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %17159 to i64*
  %17160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17161 = getelementptr inbounds %struct.GPR, %struct.GPR* %17160, i32 0, i32 5
  %17162 = getelementptr inbounds %struct.Reg, %struct.Reg* %17161, i32 0, i32 0
  %RCX.i857 = bitcast %union.anon* %17162 to i64*
  %17163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17164 = getelementptr inbounds %struct.GPR, %struct.GPR* %17163, i32 0, i32 7
  %17165 = getelementptr inbounds %struct.Reg, %struct.Reg* %17164, i32 0, i32 0
  %RDX.i858 = bitcast %union.anon* %17165 to i64*
  %17166 = load i64, i64* %RDX.i858
  %17167 = load i64, i64* %RCX.i857
  %17168 = add i64 %17167, 52
  %17169 = load i64, i64* %PC.i856
  %17170 = add i64 %17169, 4
  store i64 %17170, i64* %PC.i856
  %17171 = inttoptr i64 %17168 to i32*
  %17172 = load i32, i32* %17171
  %17173 = shl i64 %17166, 32
  %17174 = ashr exact i64 %17173, 32
  %17175 = sext i32 %17172 to i64
  %17176 = mul i64 %17175, %17174
  %17177 = trunc i64 %17176 to i32
  %17178 = and i64 %17176, 4294967295
  store i64 %17178, i64* %RDX.i858, align 8
  %17179 = shl i64 %17176, 32
  %17180 = ashr exact i64 %17179, 32
  %17181 = icmp ne i64 %17180, %17176
  %17182 = zext i1 %17181 to i8
  %17183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17182, i8* %17183, align 1
  %17184 = and i32 %17177, 255
  %17185 = call i32 @llvm.ctpop.i32(i32 %17184)
  %17186 = trunc i32 %17185 to i8
  %17187 = and i8 %17186, 1
  %17188 = xor i8 %17187, 1
  %17189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17188, i8* %17189, align 1
  %17190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17190, align 1
  %17191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17191, align 1
  %17192 = lshr i32 %17177, 31
  %17193 = trunc i32 %17192 to i8
  %17194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17193, i8* %17194, align 1
  %17195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17182, i8* %17195, align 1
  store %struct.Memory* %loadMem_4af6e3, %struct.Memory** %MEMORY
  %loadMem_4af6e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17197 = getelementptr inbounds %struct.GPR, %struct.GPR* %17196, i32 0, i32 33
  %17198 = getelementptr inbounds %struct.Reg, %struct.Reg* %17197, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %17198 to i64*
  %17199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17200 = getelementptr inbounds %struct.GPR, %struct.GPR* %17199, i32 0, i32 1
  %17201 = getelementptr inbounds %struct.Reg, %struct.Reg* %17200, i32 0, i32 0
  %EAX.i854 = bitcast %union.anon* %17201 to i32*
  %17202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17203 = getelementptr inbounds %struct.GPR, %struct.GPR* %17202, i32 0, i32 7
  %17204 = getelementptr inbounds %struct.Reg, %struct.Reg* %17203, i32 0, i32 0
  %EDX.i855 = bitcast %union.anon* %17204 to i32*
  %17205 = load i32, i32* %EAX.i854
  %17206 = zext i32 %17205 to i64
  %17207 = load i32, i32* %EDX.i855
  %17208 = zext i32 %17207 to i64
  %17209 = load i64, i64* %PC.i853
  %17210 = add i64 %17209, 2
  store i64 %17210, i64* %PC.i853
  %17211 = sub i32 %17205, %17207
  %17212 = icmp ult i32 %17205, %17207
  %17213 = zext i1 %17212 to i8
  %17214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17213, i8* %17214, align 1
  %17215 = and i32 %17211, 255
  %17216 = call i32 @llvm.ctpop.i32(i32 %17215)
  %17217 = trunc i32 %17216 to i8
  %17218 = and i8 %17217, 1
  %17219 = xor i8 %17218, 1
  %17220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17219, i8* %17220, align 1
  %17221 = xor i64 %17208, %17206
  %17222 = trunc i64 %17221 to i32
  %17223 = xor i32 %17222, %17211
  %17224 = lshr i32 %17223, 4
  %17225 = trunc i32 %17224 to i8
  %17226 = and i8 %17225, 1
  %17227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17226, i8* %17227, align 1
  %17228 = icmp eq i32 %17211, 0
  %17229 = zext i1 %17228 to i8
  %17230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17229, i8* %17230, align 1
  %17231 = lshr i32 %17211, 31
  %17232 = trunc i32 %17231 to i8
  %17233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17232, i8* %17233, align 1
  %17234 = lshr i32 %17205, 31
  %17235 = lshr i32 %17207, 31
  %17236 = xor i32 %17235, %17234
  %17237 = xor i32 %17231, %17234
  %17238 = add i32 %17237, %17236
  %17239 = icmp eq i32 %17238, 2
  %17240 = zext i1 %17239 to i8
  %17241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17240, i8* %17241, align 1
  store %struct.Memory* %loadMem_4af6e7, %struct.Memory** %MEMORY
  %loadMem_4af6e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17243 = getelementptr inbounds %struct.GPR, %struct.GPR* %17242, i32 0, i32 33
  %17244 = getelementptr inbounds %struct.Reg, %struct.Reg* %17243, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %17244 to i64*
  %17245 = load i64, i64* %PC.i852
  %17246 = add i64 %17245, 261
  %17247 = load i64, i64* %PC.i852
  %17248 = add i64 %17247, 6
  %17249 = load i64, i64* %PC.i852
  %17250 = add i64 %17249, 6
  store i64 %17250, i64* %PC.i852
  %17251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17252 = load i8, i8* %17251, align 1
  %17253 = icmp ne i8 %17252, 0
  %17254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17255 = load i8, i8* %17254, align 1
  %17256 = icmp ne i8 %17255, 0
  %17257 = xor i1 %17253, %17256
  %17258 = xor i1 %17257, true
  %17259 = zext i1 %17258 to i8
  store i8 %17259, i8* %BRANCH_TAKEN, align 1
  %17260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17261 = select i1 %17257, i64 %17248, i64 %17246
  store i64 %17261, i64* %17260, align 8
  store %struct.Memory* %loadMem_4af6e9, %struct.Memory** %MEMORY
  %loadBr_4af6e9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af6e9 = icmp eq i8 %loadBr_4af6e9, 1
  br i1 %cmpBr_4af6e9, label %block_.L_4af7ee, label %block_4af6ef

block_4af6ef:                                     ; preds = %block_.L_4af6cd
  %loadMem_4af6ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %17262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17263 = getelementptr inbounds %struct.GPR, %struct.GPR* %17262, i32 0, i32 33
  %17264 = getelementptr inbounds %struct.Reg, %struct.Reg* %17263, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %17264 to i64*
  %17265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17266 = getelementptr inbounds %struct.GPR, %struct.GPR* %17265, i32 0, i32 1
  %17267 = getelementptr inbounds %struct.Reg, %struct.Reg* %17266, i32 0, i32 0
  %RAX.i850 = bitcast %union.anon* %17267 to i64*
  %17268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17269 = getelementptr inbounds %struct.GPR, %struct.GPR* %17268, i32 0, i32 15
  %17270 = getelementptr inbounds %struct.Reg, %struct.Reg* %17269, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %17270 to i64*
  %17271 = load i64, i64* %RBP.i851
  %17272 = sub i64 %17271, 784
  %17273 = load i64, i64* %PC.i849
  %17274 = add i64 %17273, 7
  store i64 %17274, i64* %PC.i849
  %17275 = inttoptr i64 %17272 to i64*
  %17276 = load i64, i64* %17275
  store i64 %17276, i64* %RAX.i850, align 8
  store %struct.Memory* %loadMem_4af6ef, %struct.Memory** %MEMORY
  %loadMem_4af6f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17278 = getelementptr inbounds %struct.GPR, %struct.GPR* %17277, i32 0, i32 33
  %17279 = getelementptr inbounds %struct.Reg, %struct.Reg* %17278, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %17279 to i64*
  %17280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17281 = getelementptr inbounds %struct.GPR, %struct.GPR* %17280, i32 0, i32 5
  %17282 = getelementptr inbounds %struct.Reg, %struct.Reg* %17281, i32 0, i32 0
  %RCX.i847 = bitcast %union.anon* %17282 to i64*
  %17283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17284 = getelementptr inbounds %struct.GPR, %struct.GPR* %17283, i32 0, i32 15
  %17285 = getelementptr inbounds %struct.Reg, %struct.Reg* %17284, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %17285 to i64*
  %17286 = load i64, i64* %RBP.i848
  %17287 = sub i64 %17286, 4
  %17288 = load i64, i64* %PC.i846
  %17289 = add i64 %17288, 4
  store i64 %17289, i64* %PC.i846
  %17290 = inttoptr i64 %17287 to i32*
  %17291 = load i32, i32* %17290
  %17292 = sext i32 %17291 to i64
  store i64 %17292, i64* %RCX.i847, align 8
  store %struct.Memory* %loadMem_4af6f6, %struct.Memory** %MEMORY
  %loadMem_4af6fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %17293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17294 = getelementptr inbounds %struct.GPR, %struct.GPR* %17293, i32 0, i32 33
  %17295 = getelementptr inbounds %struct.Reg, %struct.Reg* %17294, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %17295 to i64*
  %17296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17297 = getelementptr inbounds %struct.GPR, %struct.GPR* %17296, i32 0, i32 1
  %17298 = getelementptr inbounds %struct.Reg, %struct.Reg* %17297, i32 0, i32 0
  %RAX.i843 = bitcast %union.anon* %17298 to i64*
  %17299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17300 = getelementptr inbounds %struct.GPR, %struct.GPR* %17299, i32 0, i32 5
  %17301 = getelementptr inbounds %struct.Reg, %struct.Reg* %17300, i32 0, i32 0
  %RCX.i844 = bitcast %union.anon* %17301 to i64*
  %17302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17303 = getelementptr inbounds %struct.GPR, %struct.GPR* %17302, i32 0, i32 7
  %17304 = getelementptr inbounds %struct.Reg, %struct.Reg* %17303, i32 0, i32 0
  %RDX.i845 = bitcast %union.anon* %17304 to i64*
  %17305 = load i64, i64* %RAX.i843
  %17306 = load i64, i64* %RCX.i844
  %17307 = mul i64 %17306, 2
  %17308 = add i64 %17307, %17305
  %17309 = load i64, i64* %PC.i842
  %17310 = add i64 %17309, 4
  store i64 %17310, i64* %PC.i842
  %17311 = inttoptr i64 %17308 to i16*
  %17312 = load i16, i16* %17311
  %17313 = zext i16 %17312 to i64
  store i64 %17313, i64* %RDX.i845, align 8
  store %struct.Memory* %loadMem_4af6fa, %struct.Memory** %MEMORY
  %loadMem_4af6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %17314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17315 = getelementptr inbounds %struct.GPR, %struct.GPR* %17314, i32 0, i32 33
  %17316 = getelementptr inbounds %struct.Reg, %struct.Reg* %17315, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %17316 to i64*
  %17317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17318 = getelementptr inbounds %struct.GPR, %struct.GPR* %17317, i32 0, i32 7
  %17319 = getelementptr inbounds %struct.Reg, %struct.Reg* %17318, i32 0, i32 0
  %RDX.i840 = bitcast %union.anon* %17319 to i64*
  %17320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17321 = getelementptr inbounds %struct.GPR, %struct.GPR* %17320, i32 0, i32 15
  %17322 = getelementptr inbounds %struct.Reg, %struct.Reg* %17321, i32 0, i32 0
  %RBP.i841 = bitcast %union.anon* %17322 to i64*
  %17323 = load i64, i64* %RDX.i840
  %17324 = load i64, i64* %RBP.i841
  %17325 = sub i64 %17324, 35400
  %17326 = load i64, i64* %PC.i839
  %17327 = add i64 %17326, 7
  store i64 %17327, i64* %PC.i839
  %17328 = inttoptr i64 %17325 to i32*
  %17329 = load i32, i32* %17328
  %17330 = shl i64 %17323, 32
  %17331 = ashr exact i64 %17330, 32
  %17332 = sext i32 %17329 to i64
  %17333 = mul i64 %17332, %17331
  %17334 = trunc i64 %17333 to i32
  %17335 = and i64 %17333, 4294967295
  store i64 %17335, i64* %RDX.i840, align 8
  %17336 = shl i64 %17333, 32
  %17337 = ashr exact i64 %17336, 32
  %17338 = icmp ne i64 %17337, %17333
  %17339 = zext i1 %17338 to i8
  %17340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17339, i8* %17340, align 1
  %17341 = and i32 %17334, 255
  %17342 = call i32 @llvm.ctpop.i32(i32 %17341)
  %17343 = trunc i32 %17342 to i8
  %17344 = and i8 %17343, 1
  %17345 = xor i8 %17344, 1
  %17346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17345, i8* %17346, align 1
  %17347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17347, align 1
  %17348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17348, align 1
  %17349 = lshr i32 %17334, 31
  %17350 = trunc i32 %17349 to i8
  %17351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17350, i8* %17351, align 1
  %17352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17339, i8* %17352, align 1
  store %struct.Memory* %loadMem_4af6fe, %struct.Memory** %MEMORY
  %loadMem_4af705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17354 = getelementptr inbounds %struct.GPR, %struct.GPR* %17353, i32 0, i32 33
  %17355 = getelementptr inbounds %struct.Reg, %struct.Reg* %17354, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %17355 to i64*
  %17356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17357 = getelementptr inbounds %struct.GPR, %struct.GPR* %17356, i32 0, i32 7
  %17358 = getelementptr inbounds %struct.Reg, %struct.Reg* %17357, i32 0, i32 0
  %RDX.i838 = bitcast %union.anon* %17358 to i64*
  %17359 = load i64, i64* %RDX.i838
  %17360 = load i64, i64* %PC.i837
  %17361 = add i64 %17360, 7
  store i64 %17361, i64* %PC.i837
  %17362 = trunc i64 %17359 to i32
  %17363 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %17364 = add i32 %17363, %17362
  %17365 = zext i32 %17364 to i64
  store i64 %17365, i64* %RDX.i838, align 8
  %17366 = icmp ult i32 %17364, %17362
  %17367 = icmp ult i32 %17364, %17363
  %17368 = or i1 %17366, %17367
  %17369 = zext i1 %17368 to i8
  %17370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17369, i8* %17370, align 1
  %17371 = and i32 %17364, 255
  %17372 = call i32 @llvm.ctpop.i32(i32 %17371)
  %17373 = trunc i32 %17372 to i8
  %17374 = and i8 %17373, 1
  %17375 = xor i8 %17374, 1
  %17376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17375, i8* %17376, align 1
  %17377 = xor i32 %17363, %17362
  %17378 = xor i32 %17377, %17364
  %17379 = lshr i32 %17378, 4
  %17380 = trunc i32 %17379 to i8
  %17381 = and i8 %17380, 1
  %17382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17381, i8* %17382, align 1
  %17383 = icmp eq i32 %17364, 0
  %17384 = zext i1 %17383 to i8
  %17385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17384, i8* %17385, align 1
  %17386 = lshr i32 %17364, 31
  %17387 = trunc i32 %17386 to i8
  %17388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17387, i8* %17388, align 1
  %17389 = lshr i32 %17362, 31
  %17390 = lshr i32 %17363, 31
  %17391 = xor i32 %17386, %17389
  %17392 = xor i32 %17386, %17390
  %17393 = add i32 %17391, %17392
  %17394 = icmp eq i32 %17393, 2
  %17395 = zext i1 %17394 to i8
  %17396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17395, i8* %17396, align 1
  store %struct.Memory* %loadMem_4af705, %struct.Memory** %MEMORY
  %loadMem_4af70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17398 = getelementptr inbounds %struct.GPR, %struct.GPR* %17397, i32 0, i32 33
  %17399 = getelementptr inbounds %struct.Reg, %struct.Reg* %17398, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %17399 to i64*
  %17400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17401 = getelementptr inbounds %struct.GPR, %struct.GPR* %17400, i32 0, i32 5
  %17402 = getelementptr inbounds %struct.Reg, %struct.Reg* %17401, i32 0, i32 0
  %RCX.i836 = bitcast %union.anon* %17402 to i64*
  %17403 = load i64, i64* %PC.i835
  %17404 = add i64 %17403, 7
  store i64 %17404, i64* %PC.i835
  %17405 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %17406 = zext i32 %17405 to i64
  store i64 %17406, i64* %RCX.i836, align 8
  store %struct.Memory* %loadMem_4af70c, %struct.Memory** %MEMORY
  %loadMem_4af713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17408 = getelementptr inbounds %struct.GPR, %struct.GPR* %17407, i32 0, i32 33
  %17409 = getelementptr inbounds %struct.Reg, %struct.Reg* %17408, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %17409 to i64*
  %17410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17411 = getelementptr inbounds %struct.GPR, %struct.GPR* %17410, i32 0, i32 5
  %17412 = getelementptr inbounds %struct.Reg, %struct.Reg* %17411, i32 0, i32 0
  %17413 = bitcast %union.anon* %17412 to %struct.anon.2*
  %CL.i832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %17413, i32 0, i32 0
  %17414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17415 = getelementptr inbounds %struct.GPR, %struct.GPR* %17414, i32 0, i32 7
  %17416 = getelementptr inbounds %struct.Reg, %struct.Reg* %17415, i32 0, i32 0
  %RDX.i833 = bitcast %union.anon* %17416 to i64*
  %17417 = load i64, i64* %RDX.i833
  %17418 = load i8, i8* %CL.i832
  %17419 = zext i8 %17418 to i64
  %17420 = load i64, i64* %PC.i831
  %17421 = add i64 %17420, 2
  store i64 %17421, i64* %PC.i831
  %17422 = trunc i64 %17419 to i5
  switch i5 %17422, label %17426 [
    i5 0, label %routine_sarl__cl___edx.exit834
    i5 1, label %17423
  ]

; <label>:17423:                                  ; preds = %block_4af6ef
  %17424 = shl i64 %17417, 32
  %17425 = ashr i64 %17424, 33
  br label %17433

; <label>:17426:                                  ; preds = %block_4af6ef
  %17427 = and i64 %17419, 31
  %17428 = add i64 %17427, -1
  %17429 = shl i64 %17417, 32
  %17430 = ashr exact i64 %17429, 32
  %17431 = ashr i64 %17430, %17428
  %17432 = lshr i64 %17431, 1
  br label %17433

; <label>:17433:                                  ; preds = %17426, %17423
  %17434 = phi i64 [ %17432, %17426 ], [ %17425, %17423 ]
  %17435 = phi i64 [ %17431, %17426 ], [ %17417, %17423 ]
  %17436 = trunc i64 %17435 to i8
  %17437 = and i8 %17436, 1
  %17438 = trunc i64 %17434 to i32
  %17439 = and i64 %17434, 4294967295
  store i64 %17439, i64* %RDX.i833, align 8
  %17440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17437, i8* %17440, align 1
  %17441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17442 = and i32 %17438, 255
  %17443 = call i32 @llvm.ctpop.i32(i32 %17442)
  %17444 = trunc i32 %17443 to i8
  %17445 = and i8 %17444, 1
  %17446 = xor i8 %17445, 1
  store i8 %17446, i8* %17441, align 1
  %17447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17447, align 1
  %17448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17449 = icmp eq i32 %17438, 0
  %17450 = zext i1 %17449 to i8
  store i8 %17450, i8* %17448, align 1
  %17451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17452 = lshr i32 %17438, 31
  %17453 = trunc i32 %17452 to i8
  store i8 %17453, i8* %17451, align 1
  %17454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17454, align 1
  br label %routine_sarl__cl___edx.exit834

routine_sarl__cl___edx.exit834:                   ; preds = %block_4af6ef, %17433
  store %struct.Memory* %loadMem_4af713, %struct.Memory** %MEMORY
  %loadMem_4af715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17456 = getelementptr inbounds %struct.GPR, %struct.GPR* %17455, i32 0, i32 33
  %17457 = getelementptr inbounds %struct.Reg, %struct.Reg* %17456, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %17457 to i64*
  %17458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17459 = getelementptr inbounds %struct.GPR, %struct.GPR* %17458, i32 0, i32 7
  %17460 = getelementptr inbounds %struct.Reg, %struct.Reg* %17459, i32 0, i32 0
  %RDX.i829 = bitcast %union.anon* %17460 to i64*
  %17461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17462 = getelementptr inbounds %struct.GPR, %struct.GPR* %17461, i32 0, i32 15
  %17463 = getelementptr inbounds %struct.Reg, %struct.Reg* %17462, i32 0, i32 0
  %RBP.i830 = bitcast %union.anon* %17463 to i64*
  %17464 = load i64, i64* %RDX.i829
  %17465 = load i64, i64* %RBP.i830
  %17466 = sub i64 %17465, 35404
  %17467 = load i64, i64* %PC.i828
  %17468 = add i64 %17467, 6
  store i64 %17468, i64* %PC.i828
  %17469 = trunc i64 %17464 to i32
  %17470 = inttoptr i64 %17466 to i32*
  %17471 = load i32, i32* %17470
  %17472 = add i32 %17471, %17469
  %17473 = zext i32 %17472 to i64
  store i64 %17473, i64* %RDX.i829, align 8
  %17474 = icmp ult i32 %17472, %17469
  %17475 = icmp ult i32 %17472, %17471
  %17476 = or i1 %17474, %17475
  %17477 = zext i1 %17476 to i8
  %17478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17477, i8* %17478, align 1
  %17479 = and i32 %17472, 255
  %17480 = call i32 @llvm.ctpop.i32(i32 %17479)
  %17481 = trunc i32 %17480 to i8
  %17482 = and i8 %17481, 1
  %17483 = xor i8 %17482, 1
  %17484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17483, i8* %17484, align 1
  %17485 = xor i32 %17471, %17469
  %17486 = xor i32 %17485, %17472
  %17487 = lshr i32 %17486, 4
  %17488 = trunc i32 %17487 to i8
  %17489 = and i8 %17488, 1
  %17490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17489, i8* %17490, align 1
  %17491 = icmp eq i32 %17472, 0
  %17492 = zext i1 %17491 to i8
  %17493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17492, i8* %17493, align 1
  %17494 = lshr i32 %17472, 31
  %17495 = trunc i32 %17494 to i8
  %17496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17495, i8* %17496, align 1
  %17497 = lshr i32 %17469, 31
  %17498 = lshr i32 %17471, 31
  %17499 = xor i32 %17494, %17497
  %17500 = xor i32 %17494, %17498
  %17501 = add i32 %17499, %17500
  %17502 = icmp eq i32 %17501, 2
  %17503 = zext i1 %17502 to i8
  %17504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17503, i8* %17504, align 1
  store %struct.Memory* %loadMem_4af715, %struct.Memory** %MEMORY
  %loadMem_4af71b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17506 = getelementptr inbounds %struct.GPR, %struct.GPR* %17505, i32 0, i32 33
  %17507 = getelementptr inbounds %struct.Reg, %struct.Reg* %17506, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %17507 to i64*
  %17508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17509 = getelementptr inbounds %struct.GPR, %struct.GPR* %17508, i32 0, i32 7
  %17510 = getelementptr inbounds %struct.Reg, %struct.Reg* %17509, i32 0, i32 0
  %EDX.i827 = bitcast %union.anon* %17510 to i32*
  %17511 = load i32, i32* %EDX.i827
  %17512 = zext i32 %17511 to i64
  %17513 = load i64, i64* %PC.i826
  %17514 = add i64 %17513, 3
  store i64 %17514, i64* %PC.i826
  %17515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17515, align 1
  %17516 = and i32 %17511, 255
  %17517 = call i32 @llvm.ctpop.i32(i32 %17516)
  %17518 = trunc i32 %17517 to i8
  %17519 = and i8 %17518, 1
  %17520 = xor i8 %17519, 1
  %17521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17520, i8* %17521, align 1
  %17522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17522, align 1
  %17523 = icmp eq i32 %17511, 0
  %17524 = zext i1 %17523 to i8
  %17525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17524, i8* %17525, align 1
  %17526 = lshr i32 %17511, 31
  %17527 = trunc i32 %17526 to i8
  %17528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17527, i8* %17528, align 1
  %17529 = lshr i32 %17511, 31
  %17530 = xor i32 %17526, %17529
  %17531 = add i32 %17530, %17529
  %17532 = icmp eq i32 %17531, 2
  %17533 = zext i1 %17532 to i8
  %17534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17533, i8* %17534, align 1
  store %struct.Memory* %loadMem_4af71b, %struct.Memory** %MEMORY
  %loadMem_4af71e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17536 = getelementptr inbounds %struct.GPR, %struct.GPR* %17535, i32 0, i32 33
  %17537 = getelementptr inbounds %struct.Reg, %struct.Reg* %17536, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %17537 to i64*
  %17538 = load i64, i64* %PC.i825
  %17539 = add i64 %17538, 19
  %17540 = load i64, i64* %PC.i825
  %17541 = add i64 %17540, 6
  %17542 = load i64, i64* %PC.i825
  %17543 = add i64 %17542, 6
  store i64 %17543, i64* %PC.i825
  %17544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17545 = load i8, i8* %17544, align 1
  %17546 = icmp ne i8 %17545, 0
  %17547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17548 = load i8, i8* %17547, align 1
  %17549 = icmp ne i8 %17548, 0
  %17550 = xor i1 %17546, %17549
  %17551 = xor i1 %17550, true
  %17552 = zext i1 %17551 to i8
  store i8 %17552, i8* %BRANCH_TAKEN, align 1
  %17553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17554 = select i1 %17550, i64 %17541, i64 %17539
  store i64 %17554, i64* %17553, align 8
  store %struct.Memory* %loadMem_4af71e, %struct.Memory** %MEMORY
  %loadBr_4af71e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af71e = icmp eq i8 %loadBr_4af71e, 1
  br i1 %cmpBr_4af71e, label %block_.L_4af731, label %block_4af724

block_4af724:                                     ; preds = %routine_sarl__cl___edx.exit834
  %loadMem_4af724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17556 = getelementptr inbounds %struct.GPR, %struct.GPR* %17555, i32 0, i32 33
  %17557 = getelementptr inbounds %struct.Reg, %struct.Reg* %17556, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %17557 to i64*
  %17558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17559 = getelementptr inbounds %struct.GPR, %struct.GPR* %17558, i32 0, i32 1
  %17560 = getelementptr inbounds %struct.Reg, %struct.Reg* %17559, i32 0, i32 0
  %EAX.i823 = bitcast %union.anon* %17560 to i32*
  %17561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17562 = getelementptr inbounds %struct.GPR, %struct.GPR* %17561, i32 0, i32 1
  %17563 = getelementptr inbounds %struct.Reg, %struct.Reg* %17562, i32 0, i32 0
  %RAX.i824 = bitcast %union.anon* %17563 to i64*
  %17564 = load i64, i64* %RAX.i824
  %17565 = load i32, i32* %EAX.i823
  %17566 = zext i32 %17565 to i64
  %17567 = load i64, i64* %PC.i822
  %17568 = add i64 %17567, 2
  store i64 %17568, i64* %PC.i822
  %17569 = xor i64 %17566, %17564
  %17570 = trunc i64 %17569 to i32
  %17571 = and i64 %17569, 4294967295
  store i64 %17571, i64* %RAX.i824, align 8
  %17572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17572, align 1
  %17573 = and i32 %17570, 255
  %17574 = call i32 @llvm.ctpop.i32(i32 %17573)
  %17575 = trunc i32 %17574 to i8
  %17576 = and i8 %17575, 1
  %17577 = xor i8 %17576, 1
  %17578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17577, i8* %17578, align 1
  %17579 = icmp eq i32 %17570, 0
  %17580 = zext i1 %17579 to i8
  %17581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17580, i8* %17581, align 1
  %17582 = lshr i32 %17570, 31
  %17583 = trunc i32 %17582 to i8
  %17584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17583, i8* %17584, align 1
  %17585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17585, align 1
  %17586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17586, align 1
  store %struct.Memory* %loadMem_4af724, %struct.Memory** %MEMORY
  %loadMem_4af726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17588 = getelementptr inbounds %struct.GPR, %struct.GPR* %17587, i32 0, i32 33
  %17589 = getelementptr inbounds %struct.Reg, %struct.Reg* %17588, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %17589 to i64*
  %17590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17591 = getelementptr inbounds %struct.GPR, %struct.GPR* %17590, i32 0, i32 1
  %17592 = getelementptr inbounds %struct.Reg, %struct.Reg* %17591, i32 0, i32 0
  %EAX.i820 = bitcast %union.anon* %17592 to i32*
  %17593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17594 = getelementptr inbounds %struct.GPR, %struct.GPR* %17593, i32 0, i32 15
  %17595 = getelementptr inbounds %struct.Reg, %struct.Reg* %17594, i32 0, i32 0
  %RBP.i821 = bitcast %union.anon* %17595 to i64*
  %17596 = load i64, i64* %RBP.i821
  %17597 = sub i64 %17596, 35456
  %17598 = load i32, i32* %EAX.i820
  %17599 = zext i32 %17598 to i64
  %17600 = load i64, i64* %PC.i819
  %17601 = add i64 %17600, 6
  store i64 %17601, i64* %PC.i819
  %17602 = inttoptr i64 %17597 to i32*
  store i32 %17598, i32* %17602
  store %struct.Memory* %loadMem_4af726, %struct.Memory** %MEMORY
  %loadMem_4af72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17604 = getelementptr inbounds %struct.GPR, %struct.GPR* %17603, i32 0, i32 33
  %17605 = getelementptr inbounds %struct.Reg, %struct.Reg* %17604, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %17605 to i64*
  %17606 = load i64, i64* %PC.i818
  %17607 = add i64 %17606, 156
  %17608 = load i64, i64* %PC.i818
  %17609 = add i64 %17608, 5
  store i64 %17609, i64* %PC.i818
  %17610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17607, i64* %17610, align 8
  store %struct.Memory* %loadMem_4af72c, %struct.Memory** %MEMORY
  br label %block_.L_4af7c8

block_.L_4af731:                                  ; preds = %routine_sarl__cl___edx.exit834
  %loadMem_4af731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17612 = getelementptr inbounds %struct.GPR, %struct.GPR* %17611, i32 0, i32 33
  %17613 = getelementptr inbounds %struct.Reg, %struct.Reg* %17612, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %17613 to i64*
  %17614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17615 = getelementptr inbounds %struct.GPR, %struct.GPR* %17614, i32 0, i32 1
  %17616 = getelementptr inbounds %struct.Reg, %struct.Reg* %17615, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %17616 to i64*
  %17617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17618 = getelementptr inbounds %struct.GPR, %struct.GPR* %17617, i32 0, i32 15
  %17619 = getelementptr inbounds %struct.Reg, %struct.Reg* %17618, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %17619 to i64*
  %17620 = load i64, i64* %RBP.i817
  %17621 = sub i64 %17620, 784
  %17622 = load i64, i64* %PC.i815
  %17623 = add i64 %17622, 7
  store i64 %17623, i64* %PC.i815
  %17624 = inttoptr i64 %17621 to i64*
  %17625 = load i64, i64* %17624
  store i64 %17625, i64* %RAX.i816, align 8
  store %struct.Memory* %loadMem_4af731, %struct.Memory** %MEMORY
  %loadMem_4af738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17627 = getelementptr inbounds %struct.GPR, %struct.GPR* %17626, i32 0, i32 33
  %17628 = getelementptr inbounds %struct.Reg, %struct.Reg* %17627, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %17628 to i64*
  %17629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17630 = getelementptr inbounds %struct.GPR, %struct.GPR* %17629, i32 0, i32 5
  %17631 = getelementptr inbounds %struct.Reg, %struct.Reg* %17630, i32 0, i32 0
  %RCX.i813 = bitcast %union.anon* %17631 to i64*
  %17632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17633 = getelementptr inbounds %struct.GPR, %struct.GPR* %17632, i32 0, i32 15
  %17634 = getelementptr inbounds %struct.Reg, %struct.Reg* %17633, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %17634 to i64*
  %17635 = load i64, i64* %RBP.i814
  %17636 = sub i64 %17635, 4
  %17637 = load i64, i64* %PC.i812
  %17638 = add i64 %17637, 4
  store i64 %17638, i64* %PC.i812
  %17639 = inttoptr i64 %17636 to i32*
  %17640 = load i32, i32* %17639
  %17641 = sext i32 %17640 to i64
  store i64 %17641, i64* %RCX.i813, align 8
  store %struct.Memory* %loadMem_4af738, %struct.Memory** %MEMORY
  %loadMem_4af73c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17643 = getelementptr inbounds %struct.GPR, %struct.GPR* %17642, i32 0, i32 33
  %17644 = getelementptr inbounds %struct.Reg, %struct.Reg* %17643, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %17644 to i64*
  %17645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17646 = getelementptr inbounds %struct.GPR, %struct.GPR* %17645, i32 0, i32 1
  %17647 = getelementptr inbounds %struct.Reg, %struct.Reg* %17646, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %17647 to i64*
  %17648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17649 = getelementptr inbounds %struct.GPR, %struct.GPR* %17648, i32 0, i32 5
  %17650 = getelementptr inbounds %struct.Reg, %struct.Reg* %17649, i32 0, i32 0
  %RCX.i810 = bitcast %union.anon* %17650 to i64*
  %17651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17652 = getelementptr inbounds %struct.GPR, %struct.GPR* %17651, i32 0, i32 7
  %17653 = getelementptr inbounds %struct.Reg, %struct.Reg* %17652, i32 0, i32 0
  %RDX.i811 = bitcast %union.anon* %17653 to i64*
  %17654 = load i64, i64* %RAX.i809
  %17655 = load i64, i64* %RCX.i810
  %17656 = mul i64 %17655, 2
  %17657 = add i64 %17656, %17654
  %17658 = load i64, i64* %PC.i808
  %17659 = add i64 %17658, 4
  store i64 %17659, i64* %PC.i808
  %17660 = inttoptr i64 %17657 to i16*
  %17661 = load i16, i16* %17660
  %17662 = zext i16 %17661 to i64
  store i64 %17662, i64* %RDX.i811, align 8
  store %struct.Memory* %loadMem_4af73c, %struct.Memory** %MEMORY
  %loadMem_4af740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17664 = getelementptr inbounds %struct.GPR, %struct.GPR* %17663, i32 0, i32 33
  %17665 = getelementptr inbounds %struct.Reg, %struct.Reg* %17664, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %17665 to i64*
  %17666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17667 = getelementptr inbounds %struct.GPR, %struct.GPR* %17666, i32 0, i32 7
  %17668 = getelementptr inbounds %struct.Reg, %struct.Reg* %17667, i32 0, i32 0
  %RDX.i806 = bitcast %union.anon* %17668 to i64*
  %17669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17670 = getelementptr inbounds %struct.GPR, %struct.GPR* %17669, i32 0, i32 15
  %17671 = getelementptr inbounds %struct.Reg, %struct.Reg* %17670, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %17671 to i64*
  %17672 = load i64, i64* %RDX.i806
  %17673 = load i64, i64* %RBP.i807
  %17674 = sub i64 %17673, 35400
  %17675 = load i64, i64* %PC.i805
  %17676 = add i64 %17675, 7
  store i64 %17676, i64* %PC.i805
  %17677 = inttoptr i64 %17674 to i32*
  %17678 = load i32, i32* %17677
  %17679 = shl i64 %17672, 32
  %17680 = ashr exact i64 %17679, 32
  %17681 = sext i32 %17678 to i64
  %17682 = mul i64 %17681, %17680
  %17683 = trunc i64 %17682 to i32
  %17684 = and i64 %17682, 4294967295
  store i64 %17684, i64* %RDX.i806, align 8
  %17685 = shl i64 %17682, 32
  %17686 = ashr exact i64 %17685, 32
  %17687 = icmp ne i64 %17686, %17682
  %17688 = zext i1 %17687 to i8
  %17689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17688, i8* %17689, align 1
  %17690 = and i32 %17683, 255
  %17691 = call i32 @llvm.ctpop.i32(i32 %17690)
  %17692 = trunc i32 %17691 to i8
  %17693 = and i8 %17692, 1
  %17694 = xor i8 %17693, 1
  %17695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17694, i8* %17695, align 1
  %17696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17696, align 1
  %17697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17697, align 1
  %17698 = lshr i32 %17683, 31
  %17699 = trunc i32 %17698 to i8
  %17700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17699, i8* %17700, align 1
  %17701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17688, i8* %17701, align 1
  store %struct.Memory* %loadMem_4af740, %struct.Memory** %MEMORY
  %loadMem_4af747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17703 = getelementptr inbounds %struct.GPR, %struct.GPR* %17702, i32 0, i32 33
  %17704 = getelementptr inbounds %struct.Reg, %struct.Reg* %17703, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %17704 to i64*
  %17705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17706 = getelementptr inbounds %struct.GPR, %struct.GPR* %17705, i32 0, i32 7
  %17707 = getelementptr inbounds %struct.Reg, %struct.Reg* %17706, i32 0, i32 0
  %RDX.i804 = bitcast %union.anon* %17707 to i64*
  %17708 = load i64, i64* %RDX.i804
  %17709 = load i64, i64* %PC.i803
  %17710 = add i64 %17709, 7
  store i64 %17710, i64* %PC.i803
  %17711 = trunc i64 %17708 to i32
  %17712 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %17713 = add i32 %17712, %17711
  %17714 = zext i32 %17713 to i64
  store i64 %17714, i64* %RDX.i804, align 8
  %17715 = icmp ult i32 %17713, %17711
  %17716 = icmp ult i32 %17713, %17712
  %17717 = or i1 %17715, %17716
  %17718 = zext i1 %17717 to i8
  %17719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17718, i8* %17719, align 1
  %17720 = and i32 %17713, 255
  %17721 = call i32 @llvm.ctpop.i32(i32 %17720)
  %17722 = trunc i32 %17721 to i8
  %17723 = and i8 %17722, 1
  %17724 = xor i8 %17723, 1
  %17725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17724, i8* %17725, align 1
  %17726 = xor i32 %17712, %17711
  %17727 = xor i32 %17726, %17713
  %17728 = lshr i32 %17727, 4
  %17729 = trunc i32 %17728 to i8
  %17730 = and i8 %17729, 1
  %17731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17730, i8* %17731, align 1
  %17732 = icmp eq i32 %17713, 0
  %17733 = zext i1 %17732 to i8
  %17734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17733, i8* %17734, align 1
  %17735 = lshr i32 %17713, 31
  %17736 = trunc i32 %17735 to i8
  %17737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17736, i8* %17737, align 1
  %17738 = lshr i32 %17711, 31
  %17739 = lshr i32 %17712, 31
  %17740 = xor i32 %17735, %17738
  %17741 = xor i32 %17735, %17739
  %17742 = add i32 %17740, %17741
  %17743 = icmp eq i32 %17742, 2
  %17744 = zext i1 %17743 to i8
  %17745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17744, i8* %17745, align 1
  store %struct.Memory* %loadMem_4af747, %struct.Memory** %MEMORY
  %loadMem_4af74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17747 = getelementptr inbounds %struct.GPR, %struct.GPR* %17746, i32 0, i32 33
  %17748 = getelementptr inbounds %struct.Reg, %struct.Reg* %17747, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %17748 to i64*
  %17749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17750 = getelementptr inbounds %struct.GPR, %struct.GPR* %17749, i32 0, i32 5
  %17751 = getelementptr inbounds %struct.Reg, %struct.Reg* %17750, i32 0, i32 0
  %RCX.i802 = bitcast %union.anon* %17751 to i64*
  %17752 = load i64, i64* %PC.i801
  %17753 = add i64 %17752, 7
  store i64 %17753, i64* %PC.i801
  %17754 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %17755 = zext i32 %17754 to i64
  store i64 %17755, i64* %RCX.i802, align 8
  store %struct.Memory* %loadMem_4af74e, %struct.Memory** %MEMORY
  %loadMem_4af755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17757 = getelementptr inbounds %struct.GPR, %struct.GPR* %17756, i32 0, i32 33
  %17758 = getelementptr inbounds %struct.Reg, %struct.Reg* %17757, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %17758 to i64*
  %17759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17760 = getelementptr inbounds %struct.GPR, %struct.GPR* %17759, i32 0, i32 5
  %17761 = getelementptr inbounds %struct.Reg, %struct.Reg* %17760, i32 0, i32 0
  %17762 = bitcast %union.anon* %17761 to %struct.anon.2*
  %CL.i798 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %17762, i32 0, i32 0
  %17763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17764 = getelementptr inbounds %struct.GPR, %struct.GPR* %17763, i32 0, i32 7
  %17765 = getelementptr inbounds %struct.Reg, %struct.Reg* %17764, i32 0, i32 0
  %RDX.i799 = bitcast %union.anon* %17765 to i64*
  %17766 = load i64, i64* %RDX.i799
  %17767 = load i8, i8* %CL.i798
  %17768 = zext i8 %17767 to i64
  %17769 = load i64, i64* %PC.i797
  %17770 = add i64 %17769, 2
  store i64 %17770, i64* %PC.i797
  %17771 = trunc i64 %17768 to i5
  switch i5 %17771, label %17775 [
    i5 0, label %routine_sarl__cl___edx.exit800
    i5 1, label %17772
  ]

; <label>:17772:                                  ; preds = %block_.L_4af731
  %17773 = shl i64 %17766, 32
  %17774 = ashr i64 %17773, 33
  br label %17782

; <label>:17775:                                  ; preds = %block_.L_4af731
  %17776 = and i64 %17768, 31
  %17777 = add i64 %17776, -1
  %17778 = shl i64 %17766, 32
  %17779 = ashr exact i64 %17778, 32
  %17780 = ashr i64 %17779, %17777
  %17781 = lshr i64 %17780, 1
  br label %17782

; <label>:17782:                                  ; preds = %17775, %17772
  %17783 = phi i64 [ %17781, %17775 ], [ %17774, %17772 ]
  %17784 = phi i64 [ %17780, %17775 ], [ %17766, %17772 ]
  %17785 = trunc i64 %17784 to i8
  %17786 = and i8 %17785, 1
  %17787 = trunc i64 %17783 to i32
  %17788 = and i64 %17783, 4294967295
  store i64 %17788, i64* %RDX.i799, align 8
  %17789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17786, i8* %17789, align 1
  %17790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17791 = and i32 %17787, 255
  %17792 = call i32 @llvm.ctpop.i32(i32 %17791)
  %17793 = trunc i32 %17792 to i8
  %17794 = and i8 %17793, 1
  %17795 = xor i8 %17794, 1
  store i8 %17795, i8* %17790, align 1
  %17796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17796, align 1
  %17797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17798 = icmp eq i32 %17787, 0
  %17799 = zext i1 %17798 to i8
  store i8 %17799, i8* %17797, align 1
  %17800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17801 = lshr i32 %17787, 31
  %17802 = trunc i32 %17801 to i8
  store i8 %17802, i8* %17800, align 1
  %17803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17803, align 1
  br label %routine_sarl__cl___edx.exit800

routine_sarl__cl___edx.exit800:                   ; preds = %block_.L_4af731, %17782
  store %struct.Memory* %loadMem_4af755, %struct.Memory** %MEMORY
  %loadMem_4af757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17805 = getelementptr inbounds %struct.GPR, %struct.GPR* %17804, i32 0, i32 33
  %17806 = getelementptr inbounds %struct.Reg, %struct.Reg* %17805, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %17806 to i64*
  %17807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17808 = getelementptr inbounds %struct.GPR, %struct.GPR* %17807, i32 0, i32 7
  %17809 = getelementptr inbounds %struct.Reg, %struct.Reg* %17808, i32 0, i32 0
  %RDX.i795 = bitcast %union.anon* %17809 to i64*
  %17810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17811 = getelementptr inbounds %struct.GPR, %struct.GPR* %17810, i32 0, i32 15
  %17812 = getelementptr inbounds %struct.Reg, %struct.Reg* %17811, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %17812 to i64*
  %17813 = load i64, i64* %RDX.i795
  %17814 = load i64, i64* %RBP.i796
  %17815 = sub i64 %17814, 35404
  %17816 = load i64, i64* %PC.i794
  %17817 = add i64 %17816, 6
  store i64 %17817, i64* %PC.i794
  %17818 = trunc i64 %17813 to i32
  %17819 = inttoptr i64 %17815 to i32*
  %17820 = load i32, i32* %17819
  %17821 = add i32 %17820, %17818
  %17822 = zext i32 %17821 to i64
  store i64 %17822, i64* %RDX.i795, align 8
  %17823 = icmp ult i32 %17821, %17818
  %17824 = icmp ult i32 %17821, %17820
  %17825 = or i1 %17823, %17824
  %17826 = zext i1 %17825 to i8
  %17827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17826, i8* %17827, align 1
  %17828 = and i32 %17821, 255
  %17829 = call i32 @llvm.ctpop.i32(i32 %17828)
  %17830 = trunc i32 %17829 to i8
  %17831 = and i8 %17830, 1
  %17832 = xor i8 %17831, 1
  %17833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17832, i8* %17833, align 1
  %17834 = xor i32 %17820, %17818
  %17835 = xor i32 %17834, %17821
  %17836 = lshr i32 %17835, 4
  %17837 = trunc i32 %17836 to i8
  %17838 = and i8 %17837, 1
  %17839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17838, i8* %17839, align 1
  %17840 = icmp eq i32 %17821, 0
  %17841 = zext i1 %17840 to i8
  %17842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17841, i8* %17842, align 1
  %17843 = lshr i32 %17821, 31
  %17844 = trunc i32 %17843 to i8
  %17845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17844, i8* %17845, align 1
  %17846 = lshr i32 %17818, 31
  %17847 = lshr i32 %17820, 31
  %17848 = xor i32 %17843, %17846
  %17849 = xor i32 %17843, %17847
  %17850 = add i32 %17848, %17849
  %17851 = icmp eq i32 %17850, 2
  %17852 = zext i1 %17851 to i8
  %17853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17852, i8* %17853, align 1
  store %struct.Memory* %loadMem_4af757, %struct.Memory** %MEMORY
  %loadMem_4af75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17855 = getelementptr inbounds %struct.GPR, %struct.GPR* %17854, i32 0, i32 33
  %17856 = getelementptr inbounds %struct.Reg, %struct.Reg* %17855, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %17856 to i64*
  %17857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17858 = getelementptr inbounds %struct.GPR, %struct.GPR* %17857, i32 0, i32 1
  %17859 = getelementptr inbounds %struct.Reg, %struct.Reg* %17858, i32 0, i32 0
  %RAX.i793 = bitcast %union.anon* %17859 to i64*
  %17860 = load i64, i64* %PC.i792
  %17861 = add i64 %17860, 8
  store i64 %17861, i64* %PC.i792
  %17862 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17862, i64* %RAX.i793, align 8
  store %struct.Memory* %loadMem_4af75d, %struct.Memory** %MEMORY
  %loadMem_4af765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17864 = getelementptr inbounds %struct.GPR, %struct.GPR* %17863, i32 0, i32 33
  %17865 = getelementptr inbounds %struct.Reg, %struct.Reg* %17864, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %17865 to i64*
  %17866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17867 = getelementptr inbounds %struct.GPR, %struct.GPR* %17866, i32 0, i32 7
  %17868 = getelementptr inbounds %struct.Reg, %struct.Reg* %17867, i32 0, i32 0
  %EDX.i790 = bitcast %union.anon* %17868 to i32*
  %17869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17870 = getelementptr inbounds %struct.GPR, %struct.GPR* %17869, i32 0, i32 1
  %17871 = getelementptr inbounds %struct.Reg, %struct.Reg* %17870, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %17871 to i64*
  %17872 = load i32, i32* %EDX.i790
  %17873 = zext i32 %17872 to i64
  %17874 = load i64, i64* %RAX.i791
  %17875 = add i64 %17874, 72684
  %17876 = load i64, i64* %PC.i789
  %17877 = add i64 %17876, 6
  store i64 %17877, i64* %PC.i789
  %17878 = inttoptr i64 %17875 to i32*
  %17879 = load i32, i32* %17878
  %17880 = sub i32 %17872, %17879
  %17881 = icmp ult i32 %17872, %17879
  %17882 = zext i1 %17881 to i8
  %17883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17882, i8* %17883, align 1
  %17884 = and i32 %17880, 255
  %17885 = call i32 @llvm.ctpop.i32(i32 %17884)
  %17886 = trunc i32 %17885 to i8
  %17887 = and i8 %17886, 1
  %17888 = xor i8 %17887, 1
  %17889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17888, i8* %17889, align 1
  %17890 = xor i32 %17879, %17872
  %17891 = xor i32 %17890, %17880
  %17892 = lshr i32 %17891, 4
  %17893 = trunc i32 %17892 to i8
  %17894 = and i8 %17893, 1
  %17895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17894, i8* %17895, align 1
  %17896 = icmp eq i32 %17880, 0
  %17897 = zext i1 %17896 to i8
  %17898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17897, i8* %17898, align 1
  %17899 = lshr i32 %17880, 31
  %17900 = trunc i32 %17899 to i8
  %17901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17900, i8* %17901, align 1
  %17902 = lshr i32 %17872, 31
  %17903 = lshr i32 %17879, 31
  %17904 = xor i32 %17903, %17902
  %17905 = xor i32 %17899, %17902
  %17906 = add i32 %17905, %17904
  %17907 = icmp eq i32 %17906, 2
  %17908 = zext i1 %17907 to i8
  %17909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17908, i8* %17909, align 1
  store %struct.Memory* %loadMem_4af765, %struct.Memory** %MEMORY
  %loadMem_4af76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17911 = getelementptr inbounds %struct.GPR, %struct.GPR* %17910, i32 0, i32 33
  %17912 = getelementptr inbounds %struct.Reg, %struct.Reg* %17911, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %17912 to i64*
  %17913 = load i64, i64* %PC.i788
  %17914 = add i64 %17913, 31
  %17915 = load i64, i64* %PC.i788
  %17916 = add i64 %17915, 6
  %17917 = load i64, i64* %PC.i788
  %17918 = add i64 %17917, 6
  store i64 %17918, i64* %PC.i788
  %17919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17920 = load i8, i8* %17919, align 1
  %17921 = icmp ne i8 %17920, 0
  %17922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17923 = load i8, i8* %17922, align 1
  %17924 = icmp ne i8 %17923, 0
  %17925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17926 = load i8, i8* %17925, align 1
  %17927 = icmp ne i8 %17926, 0
  %17928 = xor i1 %17924, %17927
  %17929 = or i1 %17921, %17928
  %17930 = zext i1 %17929 to i8
  store i8 %17930, i8* %BRANCH_TAKEN, align 1
  %17931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17932 = select i1 %17929, i64 %17914, i64 %17916
  store i64 %17932, i64* %17931, align 8
  store %struct.Memory* %loadMem_4af76b, %struct.Memory** %MEMORY
  %loadBr_4af76b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af76b = icmp eq i8 %loadBr_4af76b, 1
  br i1 %cmpBr_4af76b, label %block_.L_4af78a, label %block_4af771

block_4af771:                                     ; preds = %routine_sarl__cl___edx.exit800
  %loadMem_4af771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17934 = getelementptr inbounds %struct.GPR, %struct.GPR* %17933, i32 0, i32 33
  %17935 = getelementptr inbounds %struct.Reg, %struct.Reg* %17934, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %17935 to i64*
  %17936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17937 = getelementptr inbounds %struct.GPR, %struct.GPR* %17936, i32 0, i32 1
  %17938 = getelementptr inbounds %struct.Reg, %struct.Reg* %17937, i32 0, i32 0
  %RAX.i787 = bitcast %union.anon* %17938 to i64*
  %17939 = load i64, i64* %PC.i786
  %17940 = add i64 %17939, 8
  store i64 %17940, i64* %PC.i786
  %17941 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17941, i64* %RAX.i787, align 8
  store %struct.Memory* %loadMem_4af771, %struct.Memory** %MEMORY
  %loadMem_4af779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17943 = getelementptr inbounds %struct.GPR, %struct.GPR* %17942, i32 0, i32 33
  %17944 = getelementptr inbounds %struct.Reg, %struct.Reg* %17943, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %17944 to i64*
  %17945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17946 = getelementptr inbounds %struct.GPR, %struct.GPR* %17945, i32 0, i32 1
  %17947 = getelementptr inbounds %struct.Reg, %struct.Reg* %17946, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %17947 to i64*
  %17948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17949 = getelementptr inbounds %struct.GPR, %struct.GPR* %17948, i32 0, i32 5
  %17950 = getelementptr inbounds %struct.Reg, %struct.Reg* %17949, i32 0, i32 0
  %RCX.i785 = bitcast %union.anon* %17950 to i64*
  %17951 = load i64, i64* %RAX.i784
  %17952 = add i64 %17951, 72684
  %17953 = load i64, i64* %PC.i783
  %17954 = add i64 %17953, 6
  store i64 %17954, i64* %PC.i783
  %17955 = inttoptr i64 %17952 to i32*
  %17956 = load i32, i32* %17955
  %17957 = zext i32 %17956 to i64
  store i64 %17957, i64* %RCX.i785, align 8
  store %struct.Memory* %loadMem_4af779, %struct.Memory** %MEMORY
  %loadMem_4af77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17959 = getelementptr inbounds %struct.GPR, %struct.GPR* %17958, i32 0, i32 33
  %17960 = getelementptr inbounds %struct.Reg, %struct.Reg* %17959, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %17960 to i64*
  %17961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17962 = getelementptr inbounds %struct.GPR, %struct.GPR* %17961, i32 0, i32 5
  %17963 = getelementptr inbounds %struct.Reg, %struct.Reg* %17962, i32 0, i32 0
  %ECX.i781 = bitcast %union.anon* %17963 to i32*
  %17964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17965 = getelementptr inbounds %struct.GPR, %struct.GPR* %17964, i32 0, i32 15
  %17966 = getelementptr inbounds %struct.Reg, %struct.Reg* %17965, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %17966 to i64*
  %17967 = load i64, i64* %RBP.i782
  %17968 = sub i64 %17967, 35460
  %17969 = load i32, i32* %ECX.i781
  %17970 = zext i32 %17969 to i64
  %17971 = load i64, i64* %PC.i780
  %17972 = add i64 %17971, 6
  store i64 %17972, i64* %PC.i780
  %17973 = inttoptr i64 %17968 to i32*
  store i32 %17969, i32* %17973
  store %struct.Memory* %loadMem_4af77f, %struct.Memory** %MEMORY
  %loadMem_4af785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17975 = getelementptr inbounds %struct.GPR, %struct.GPR* %17974, i32 0, i32 33
  %17976 = getelementptr inbounds %struct.Reg, %struct.Reg* %17975, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %17976 to i64*
  %17977 = load i64, i64* %PC.i779
  %17978 = add i64 %17977, 55
  %17979 = load i64, i64* %PC.i779
  %17980 = add i64 %17979, 5
  store i64 %17980, i64* %PC.i779
  %17981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17978, i64* %17981, align 8
  store %struct.Memory* %loadMem_4af785, %struct.Memory** %MEMORY
  br label %block_.L_4af7bc

block_.L_4af78a:                                  ; preds = %routine_sarl__cl___edx.exit800
  %loadMem_4af78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17983 = getelementptr inbounds %struct.GPR, %struct.GPR* %17982, i32 0, i32 33
  %17984 = getelementptr inbounds %struct.Reg, %struct.Reg* %17983, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %17984 to i64*
  %17985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17986 = getelementptr inbounds %struct.GPR, %struct.GPR* %17985, i32 0, i32 1
  %17987 = getelementptr inbounds %struct.Reg, %struct.Reg* %17986, i32 0, i32 0
  %RAX.i777 = bitcast %union.anon* %17987 to i64*
  %17988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17989 = getelementptr inbounds %struct.GPR, %struct.GPR* %17988, i32 0, i32 15
  %17990 = getelementptr inbounds %struct.Reg, %struct.Reg* %17989, i32 0, i32 0
  %RBP.i778 = bitcast %union.anon* %17990 to i64*
  %17991 = load i64, i64* %RBP.i778
  %17992 = sub i64 %17991, 784
  %17993 = load i64, i64* %PC.i776
  %17994 = add i64 %17993, 7
  store i64 %17994, i64* %PC.i776
  %17995 = inttoptr i64 %17992 to i64*
  %17996 = load i64, i64* %17995
  store i64 %17996, i64* %RAX.i777, align 8
  store %struct.Memory* %loadMem_4af78a, %struct.Memory** %MEMORY
  %loadMem_4af791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17998 = getelementptr inbounds %struct.GPR, %struct.GPR* %17997, i32 0, i32 33
  %17999 = getelementptr inbounds %struct.Reg, %struct.Reg* %17998, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %17999 to i64*
  %18000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18001 = getelementptr inbounds %struct.GPR, %struct.GPR* %18000, i32 0, i32 5
  %18002 = getelementptr inbounds %struct.Reg, %struct.Reg* %18001, i32 0, i32 0
  %RCX.i774 = bitcast %union.anon* %18002 to i64*
  %18003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18004 = getelementptr inbounds %struct.GPR, %struct.GPR* %18003, i32 0, i32 15
  %18005 = getelementptr inbounds %struct.Reg, %struct.Reg* %18004, i32 0, i32 0
  %RBP.i775 = bitcast %union.anon* %18005 to i64*
  %18006 = load i64, i64* %RBP.i775
  %18007 = sub i64 %18006, 4
  %18008 = load i64, i64* %PC.i773
  %18009 = add i64 %18008, 4
  store i64 %18009, i64* %PC.i773
  %18010 = inttoptr i64 %18007 to i32*
  %18011 = load i32, i32* %18010
  %18012 = sext i32 %18011 to i64
  store i64 %18012, i64* %RCX.i774, align 8
  store %struct.Memory* %loadMem_4af791, %struct.Memory** %MEMORY
  %loadMem_4af795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18014 = getelementptr inbounds %struct.GPR, %struct.GPR* %18013, i32 0, i32 33
  %18015 = getelementptr inbounds %struct.Reg, %struct.Reg* %18014, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %18015 to i64*
  %18016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18017 = getelementptr inbounds %struct.GPR, %struct.GPR* %18016, i32 0, i32 1
  %18018 = getelementptr inbounds %struct.Reg, %struct.Reg* %18017, i32 0, i32 0
  %RAX.i770 = bitcast %union.anon* %18018 to i64*
  %18019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18020 = getelementptr inbounds %struct.GPR, %struct.GPR* %18019, i32 0, i32 5
  %18021 = getelementptr inbounds %struct.Reg, %struct.Reg* %18020, i32 0, i32 0
  %RCX.i771 = bitcast %union.anon* %18021 to i64*
  %18022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18023 = getelementptr inbounds %struct.GPR, %struct.GPR* %18022, i32 0, i32 7
  %18024 = getelementptr inbounds %struct.Reg, %struct.Reg* %18023, i32 0, i32 0
  %RDX.i772 = bitcast %union.anon* %18024 to i64*
  %18025 = load i64, i64* %RAX.i770
  %18026 = load i64, i64* %RCX.i771
  %18027 = mul i64 %18026, 2
  %18028 = add i64 %18027, %18025
  %18029 = load i64, i64* %PC.i769
  %18030 = add i64 %18029, 4
  store i64 %18030, i64* %PC.i769
  %18031 = inttoptr i64 %18028 to i16*
  %18032 = load i16, i16* %18031
  %18033 = zext i16 %18032 to i64
  store i64 %18033, i64* %RDX.i772, align 8
  store %struct.Memory* %loadMem_4af795, %struct.Memory** %MEMORY
  %loadMem_4af799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18035 = getelementptr inbounds %struct.GPR, %struct.GPR* %18034, i32 0, i32 33
  %18036 = getelementptr inbounds %struct.Reg, %struct.Reg* %18035, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %18036 to i64*
  %18037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18038 = getelementptr inbounds %struct.GPR, %struct.GPR* %18037, i32 0, i32 7
  %18039 = getelementptr inbounds %struct.Reg, %struct.Reg* %18038, i32 0, i32 0
  %RDX.i767 = bitcast %union.anon* %18039 to i64*
  %18040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18041 = getelementptr inbounds %struct.GPR, %struct.GPR* %18040, i32 0, i32 15
  %18042 = getelementptr inbounds %struct.Reg, %struct.Reg* %18041, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %18042 to i64*
  %18043 = load i64, i64* %RDX.i767
  %18044 = load i64, i64* %RBP.i768
  %18045 = sub i64 %18044, 35400
  %18046 = load i64, i64* %PC.i766
  %18047 = add i64 %18046, 7
  store i64 %18047, i64* %PC.i766
  %18048 = inttoptr i64 %18045 to i32*
  %18049 = load i32, i32* %18048
  %18050 = shl i64 %18043, 32
  %18051 = ashr exact i64 %18050, 32
  %18052 = sext i32 %18049 to i64
  %18053 = mul i64 %18052, %18051
  %18054 = trunc i64 %18053 to i32
  %18055 = and i64 %18053, 4294967295
  store i64 %18055, i64* %RDX.i767, align 8
  %18056 = shl i64 %18053, 32
  %18057 = ashr exact i64 %18056, 32
  %18058 = icmp ne i64 %18057, %18053
  %18059 = zext i1 %18058 to i8
  %18060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18059, i8* %18060, align 1
  %18061 = and i32 %18054, 255
  %18062 = call i32 @llvm.ctpop.i32(i32 %18061)
  %18063 = trunc i32 %18062 to i8
  %18064 = and i8 %18063, 1
  %18065 = xor i8 %18064, 1
  %18066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18065, i8* %18066, align 1
  %18067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18067, align 1
  %18068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18068, align 1
  %18069 = lshr i32 %18054, 31
  %18070 = trunc i32 %18069 to i8
  %18071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18070, i8* %18071, align 1
  %18072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18059, i8* %18072, align 1
  store %struct.Memory* %loadMem_4af799, %struct.Memory** %MEMORY
  %loadMem_4af7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18074 = getelementptr inbounds %struct.GPR, %struct.GPR* %18073, i32 0, i32 33
  %18075 = getelementptr inbounds %struct.Reg, %struct.Reg* %18074, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %18075 to i64*
  %18076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18077 = getelementptr inbounds %struct.GPR, %struct.GPR* %18076, i32 0, i32 7
  %18078 = getelementptr inbounds %struct.Reg, %struct.Reg* %18077, i32 0, i32 0
  %RDX.i765 = bitcast %union.anon* %18078 to i64*
  %18079 = load i64, i64* %RDX.i765
  %18080 = load i64, i64* %PC.i764
  %18081 = add i64 %18080, 7
  store i64 %18081, i64* %PC.i764
  %18082 = trunc i64 %18079 to i32
  %18083 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %18084 = add i32 %18083, %18082
  %18085 = zext i32 %18084 to i64
  store i64 %18085, i64* %RDX.i765, align 8
  %18086 = icmp ult i32 %18084, %18082
  %18087 = icmp ult i32 %18084, %18083
  %18088 = or i1 %18086, %18087
  %18089 = zext i1 %18088 to i8
  %18090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18089, i8* %18090, align 1
  %18091 = and i32 %18084, 255
  %18092 = call i32 @llvm.ctpop.i32(i32 %18091)
  %18093 = trunc i32 %18092 to i8
  %18094 = and i8 %18093, 1
  %18095 = xor i8 %18094, 1
  %18096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18095, i8* %18096, align 1
  %18097 = xor i32 %18083, %18082
  %18098 = xor i32 %18097, %18084
  %18099 = lshr i32 %18098, 4
  %18100 = trunc i32 %18099 to i8
  %18101 = and i8 %18100, 1
  %18102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18101, i8* %18102, align 1
  %18103 = icmp eq i32 %18084, 0
  %18104 = zext i1 %18103 to i8
  %18105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18104, i8* %18105, align 1
  %18106 = lshr i32 %18084, 31
  %18107 = trunc i32 %18106 to i8
  %18108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18107, i8* %18108, align 1
  %18109 = lshr i32 %18082, 31
  %18110 = lshr i32 %18083, 31
  %18111 = xor i32 %18106, %18109
  %18112 = xor i32 %18106, %18110
  %18113 = add i32 %18111, %18112
  %18114 = icmp eq i32 %18113, 2
  %18115 = zext i1 %18114 to i8
  %18116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18115, i8* %18116, align 1
  store %struct.Memory* %loadMem_4af7a0, %struct.Memory** %MEMORY
  %loadMem_4af7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18118 = getelementptr inbounds %struct.GPR, %struct.GPR* %18117, i32 0, i32 33
  %18119 = getelementptr inbounds %struct.Reg, %struct.Reg* %18118, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %18119 to i64*
  %18120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18121 = getelementptr inbounds %struct.GPR, %struct.GPR* %18120, i32 0, i32 5
  %18122 = getelementptr inbounds %struct.Reg, %struct.Reg* %18121, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %18122 to i64*
  %18123 = load i64, i64* %PC.i762
  %18124 = add i64 %18123, 7
  store i64 %18124, i64* %PC.i762
  %18125 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %18126 = zext i32 %18125 to i64
  store i64 %18126, i64* %RCX.i763, align 8
  store %struct.Memory* %loadMem_4af7a7, %struct.Memory** %MEMORY
  %loadMem_4af7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %18127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18128 = getelementptr inbounds %struct.GPR, %struct.GPR* %18127, i32 0, i32 33
  %18129 = getelementptr inbounds %struct.Reg, %struct.Reg* %18128, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %18129 to i64*
  %18130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18131 = getelementptr inbounds %struct.GPR, %struct.GPR* %18130, i32 0, i32 5
  %18132 = getelementptr inbounds %struct.Reg, %struct.Reg* %18131, i32 0, i32 0
  %18133 = bitcast %union.anon* %18132 to %struct.anon.2*
  %CL.i759 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18133, i32 0, i32 0
  %18134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18135 = getelementptr inbounds %struct.GPR, %struct.GPR* %18134, i32 0, i32 7
  %18136 = getelementptr inbounds %struct.Reg, %struct.Reg* %18135, i32 0, i32 0
  %RDX.i760 = bitcast %union.anon* %18136 to i64*
  %18137 = load i64, i64* %RDX.i760
  %18138 = load i8, i8* %CL.i759
  %18139 = zext i8 %18138 to i64
  %18140 = load i64, i64* %PC.i758
  %18141 = add i64 %18140, 2
  store i64 %18141, i64* %PC.i758
  %18142 = trunc i64 %18139 to i5
  switch i5 %18142, label %18146 [
    i5 0, label %routine_sarl__cl___edx.exit761
    i5 1, label %18143
  ]

; <label>:18143:                                  ; preds = %block_.L_4af78a
  %18144 = shl i64 %18137, 32
  %18145 = ashr i64 %18144, 33
  br label %18153

; <label>:18146:                                  ; preds = %block_.L_4af78a
  %18147 = and i64 %18139, 31
  %18148 = add i64 %18147, -1
  %18149 = shl i64 %18137, 32
  %18150 = ashr exact i64 %18149, 32
  %18151 = ashr i64 %18150, %18148
  %18152 = lshr i64 %18151, 1
  br label %18153

; <label>:18153:                                  ; preds = %18146, %18143
  %18154 = phi i64 [ %18152, %18146 ], [ %18145, %18143 ]
  %18155 = phi i64 [ %18151, %18146 ], [ %18137, %18143 ]
  %18156 = trunc i64 %18155 to i8
  %18157 = and i8 %18156, 1
  %18158 = trunc i64 %18154 to i32
  %18159 = and i64 %18154, 4294967295
  store i64 %18159, i64* %RDX.i760, align 8
  %18160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18157, i8* %18160, align 1
  %18161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18162 = and i32 %18158, 255
  %18163 = call i32 @llvm.ctpop.i32(i32 %18162)
  %18164 = trunc i32 %18163 to i8
  %18165 = and i8 %18164, 1
  %18166 = xor i8 %18165, 1
  store i8 %18166, i8* %18161, align 1
  %18167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18167, align 1
  %18168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18169 = icmp eq i32 %18158, 0
  %18170 = zext i1 %18169 to i8
  store i8 %18170, i8* %18168, align 1
  %18171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18172 = lshr i32 %18158, 31
  %18173 = trunc i32 %18172 to i8
  store i8 %18173, i8* %18171, align 1
  %18174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18174, align 1
  br label %routine_sarl__cl___edx.exit761

routine_sarl__cl___edx.exit761:                   ; preds = %block_.L_4af78a, %18153
  store %struct.Memory* %loadMem_4af7ae, %struct.Memory** %MEMORY
  %loadMem_4af7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18176 = getelementptr inbounds %struct.GPR, %struct.GPR* %18175, i32 0, i32 33
  %18177 = getelementptr inbounds %struct.Reg, %struct.Reg* %18176, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %18177 to i64*
  %18178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18179 = getelementptr inbounds %struct.GPR, %struct.GPR* %18178, i32 0, i32 7
  %18180 = getelementptr inbounds %struct.Reg, %struct.Reg* %18179, i32 0, i32 0
  %RDX.i756 = bitcast %union.anon* %18180 to i64*
  %18181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18182 = getelementptr inbounds %struct.GPR, %struct.GPR* %18181, i32 0, i32 15
  %18183 = getelementptr inbounds %struct.Reg, %struct.Reg* %18182, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %18183 to i64*
  %18184 = load i64, i64* %RDX.i756
  %18185 = load i64, i64* %RBP.i757
  %18186 = sub i64 %18185, 35404
  %18187 = load i64, i64* %PC.i755
  %18188 = add i64 %18187, 6
  store i64 %18188, i64* %PC.i755
  %18189 = trunc i64 %18184 to i32
  %18190 = inttoptr i64 %18186 to i32*
  %18191 = load i32, i32* %18190
  %18192 = add i32 %18191, %18189
  %18193 = zext i32 %18192 to i64
  store i64 %18193, i64* %RDX.i756, align 8
  %18194 = icmp ult i32 %18192, %18189
  %18195 = icmp ult i32 %18192, %18191
  %18196 = or i1 %18194, %18195
  %18197 = zext i1 %18196 to i8
  %18198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18197, i8* %18198, align 1
  %18199 = and i32 %18192, 255
  %18200 = call i32 @llvm.ctpop.i32(i32 %18199)
  %18201 = trunc i32 %18200 to i8
  %18202 = and i8 %18201, 1
  %18203 = xor i8 %18202, 1
  %18204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18203, i8* %18204, align 1
  %18205 = xor i32 %18191, %18189
  %18206 = xor i32 %18205, %18192
  %18207 = lshr i32 %18206, 4
  %18208 = trunc i32 %18207 to i8
  %18209 = and i8 %18208, 1
  %18210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18209, i8* %18210, align 1
  %18211 = icmp eq i32 %18192, 0
  %18212 = zext i1 %18211 to i8
  %18213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18212, i8* %18213, align 1
  %18214 = lshr i32 %18192, 31
  %18215 = trunc i32 %18214 to i8
  %18216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18215, i8* %18216, align 1
  %18217 = lshr i32 %18189, 31
  %18218 = lshr i32 %18191, 31
  %18219 = xor i32 %18214, %18217
  %18220 = xor i32 %18214, %18218
  %18221 = add i32 %18219, %18220
  %18222 = icmp eq i32 %18221, 2
  %18223 = zext i1 %18222 to i8
  %18224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18223, i8* %18224, align 1
  store %struct.Memory* %loadMem_4af7b0, %struct.Memory** %MEMORY
  %loadMem_4af7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18226 = getelementptr inbounds %struct.GPR, %struct.GPR* %18225, i32 0, i32 33
  %18227 = getelementptr inbounds %struct.Reg, %struct.Reg* %18226, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %18227 to i64*
  %18228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18229 = getelementptr inbounds %struct.GPR, %struct.GPR* %18228, i32 0, i32 7
  %18230 = getelementptr inbounds %struct.Reg, %struct.Reg* %18229, i32 0, i32 0
  %EDX.i753 = bitcast %union.anon* %18230 to i32*
  %18231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18232 = getelementptr inbounds %struct.GPR, %struct.GPR* %18231, i32 0, i32 15
  %18233 = getelementptr inbounds %struct.Reg, %struct.Reg* %18232, i32 0, i32 0
  %RBP.i754 = bitcast %union.anon* %18233 to i64*
  %18234 = load i64, i64* %RBP.i754
  %18235 = sub i64 %18234, 35460
  %18236 = load i32, i32* %EDX.i753
  %18237 = zext i32 %18236 to i64
  %18238 = load i64, i64* %PC.i752
  %18239 = add i64 %18238, 6
  store i64 %18239, i64* %PC.i752
  %18240 = inttoptr i64 %18235 to i32*
  store i32 %18236, i32* %18240
  store %struct.Memory* %loadMem_4af7b6, %struct.Memory** %MEMORY
  br label %block_.L_4af7bc

block_.L_4af7bc:                                  ; preds = %routine_sarl__cl___edx.exit761, %block_4af771
  %loadMem_4af7bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %18241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18242 = getelementptr inbounds %struct.GPR, %struct.GPR* %18241, i32 0, i32 33
  %18243 = getelementptr inbounds %struct.Reg, %struct.Reg* %18242, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %18243 to i64*
  %18244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18245 = getelementptr inbounds %struct.GPR, %struct.GPR* %18244, i32 0, i32 1
  %18246 = getelementptr inbounds %struct.Reg, %struct.Reg* %18245, i32 0, i32 0
  %RAX.i750 = bitcast %union.anon* %18246 to i64*
  %18247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18248 = getelementptr inbounds %struct.GPR, %struct.GPR* %18247, i32 0, i32 15
  %18249 = getelementptr inbounds %struct.Reg, %struct.Reg* %18248, i32 0, i32 0
  %RBP.i751 = bitcast %union.anon* %18249 to i64*
  %18250 = load i64, i64* %RBP.i751
  %18251 = sub i64 %18250, 35460
  %18252 = load i64, i64* %PC.i749
  %18253 = add i64 %18252, 6
  store i64 %18253, i64* %PC.i749
  %18254 = inttoptr i64 %18251 to i32*
  %18255 = load i32, i32* %18254
  %18256 = zext i32 %18255 to i64
  store i64 %18256, i64* %RAX.i750, align 8
  store %struct.Memory* %loadMem_4af7bc, %struct.Memory** %MEMORY
  %loadMem_4af7c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18258 = getelementptr inbounds %struct.GPR, %struct.GPR* %18257, i32 0, i32 33
  %18259 = getelementptr inbounds %struct.Reg, %struct.Reg* %18258, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %18259 to i64*
  %18260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18261 = getelementptr inbounds %struct.GPR, %struct.GPR* %18260, i32 0, i32 1
  %18262 = getelementptr inbounds %struct.Reg, %struct.Reg* %18261, i32 0, i32 0
  %EAX.i747 = bitcast %union.anon* %18262 to i32*
  %18263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18264 = getelementptr inbounds %struct.GPR, %struct.GPR* %18263, i32 0, i32 15
  %18265 = getelementptr inbounds %struct.Reg, %struct.Reg* %18264, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %18265 to i64*
  %18266 = load i64, i64* %RBP.i748
  %18267 = sub i64 %18266, 35456
  %18268 = load i32, i32* %EAX.i747
  %18269 = zext i32 %18268 to i64
  %18270 = load i64, i64* %PC.i746
  %18271 = add i64 %18270, 6
  store i64 %18271, i64* %PC.i746
  %18272 = inttoptr i64 %18267 to i32*
  store i32 %18268, i32* %18272
  store %struct.Memory* %loadMem_4af7c2, %struct.Memory** %MEMORY
  br label %block_.L_4af7c8

block_.L_4af7c8:                                  ; preds = %block_.L_4af7bc, %block_4af724
  %loadMem_4af7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18274 = getelementptr inbounds %struct.GPR, %struct.GPR* %18273, i32 0, i32 33
  %18275 = getelementptr inbounds %struct.Reg, %struct.Reg* %18274, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %18275 to i64*
  %18276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18277 = getelementptr inbounds %struct.GPR, %struct.GPR* %18276, i32 0, i32 1
  %18278 = getelementptr inbounds %struct.Reg, %struct.Reg* %18277, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %18278 to i64*
  %18279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18280 = getelementptr inbounds %struct.GPR, %struct.GPR* %18279, i32 0, i32 15
  %18281 = getelementptr inbounds %struct.Reg, %struct.Reg* %18280, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %18281 to i64*
  %18282 = load i64, i64* %RBP.i745
  %18283 = sub i64 %18282, 35456
  %18284 = load i64, i64* %PC.i743
  %18285 = add i64 %18284, 6
  store i64 %18285, i64* %PC.i743
  %18286 = inttoptr i64 %18283 to i32*
  %18287 = load i32, i32* %18286
  %18288 = zext i32 %18287 to i64
  store i64 %18288, i64* %RAX.i744, align 8
  store %struct.Memory* %loadMem_4af7c8, %struct.Memory** %MEMORY
  %loadMem_4af7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %18289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18290 = getelementptr inbounds %struct.GPR, %struct.GPR* %18289, i32 0, i32 33
  %18291 = getelementptr inbounds %struct.Reg, %struct.Reg* %18290, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %18291 to i64*
  %18292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18293 = getelementptr inbounds %struct.GPR, %struct.GPR* %18292, i32 0, i32 1
  %18294 = getelementptr inbounds %struct.Reg, %struct.Reg* %18293, i32 0, i32 0
  %AX.i741 = bitcast %union.anon* %18294 to i16*
  %18295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18296 = getelementptr inbounds %struct.GPR, %struct.GPR* %18295, i32 0, i32 5
  %18297 = getelementptr inbounds %struct.Reg, %struct.Reg* %18296, i32 0, i32 0
  %CX.i742 = bitcast %union.anon* %18297 to i16*
  %18298 = load i16, i16* %AX.i741
  %18299 = zext i16 %18298 to i64
  %18300 = load i64, i64* %PC.i740
  %18301 = add i64 %18300, 3
  store i64 %18301, i64* %PC.i740
  store i16 %18298, i16* %CX.i742, align 2
  store %struct.Memory* %loadMem_4af7ce, %struct.Memory** %MEMORY
  %loadMem_4af7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18303 = getelementptr inbounds %struct.GPR, %struct.GPR* %18302, i32 0, i32 33
  %18304 = getelementptr inbounds %struct.Reg, %struct.Reg* %18303, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %18304 to i64*
  %18305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18306 = getelementptr inbounds %struct.GPR, %struct.GPR* %18305, i32 0, i32 7
  %18307 = getelementptr inbounds %struct.Reg, %struct.Reg* %18306, i32 0, i32 0
  %RDX.i738 = bitcast %union.anon* %18307 to i64*
  %18308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18309 = getelementptr inbounds %struct.GPR, %struct.GPR* %18308, i32 0, i32 15
  %18310 = getelementptr inbounds %struct.Reg, %struct.Reg* %18309, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %18310 to i64*
  %18311 = load i64, i64* %RBP.i739
  %18312 = sub i64 %18311, 792
  %18313 = load i64, i64* %PC.i737
  %18314 = add i64 %18313, 7
  store i64 %18314, i64* %PC.i737
  %18315 = inttoptr i64 %18312 to i64*
  %18316 = load i64, i64* %18315
  store i64 %18316, i64* %RDX.i738, align 8
  store %struct.Memory* %loadMem_4af7d1, %struct.Memory** %MEMORY
  %loadMem_4af7d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18318 = getelementptr inbounds %struct.GPR, %struct.GPR* %18317, i32 0, i32 33
  %18319 = getelementptr inbounds %struct.Reg, %struct.Reg* %18318, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %18319 to i64*
  %18320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18321 = getelementptr inbounds %struct.GPR, %struct.GPR* %18320, i32 0, i32 9
  %18322 = getelementptr inbounds %struct.Reg, %struct.Reg* %18321, i32 0, i32 0
  %RSI.i735 = bitcast %union.anon* %18322 to i64*
  %18323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18324 = getelementptr inbounds %struct.GPR, %struct.GPR* %18323, i32 0, i32 15
  %18325 = getelementptr inbounds %struct.Reg, %struct.Reg* %18324, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %18325 to i64*
  %18326 = load i64, i64* %RBP.i736
  %18327 = sub i64 %18326, 4
  %18328 = load i64, i64* %PC.i734
  %18329 = add i64 %18328, 4
  store i64 %18329, i64* %PC.i734
  %18330 = inttoptr i64 %18327 to i32*
  %18331 = load i32, i32* %18330
  %18332 = sext i32 %18331 to i64
  store i64 %18332, i64* %RSI.i735, align 8
  store %struct.Memory* %loadMem_4af7d8, %struct.Memory** %MEMORY
  %loadMem_4af7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %18333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18334 = getelementptr inbounds %struct.GPR, %struct.GPR* %18333, i32 0, i32 33
  %18335 = getelementptr inbounds %struct.Reg, %struct.Reg* %18334, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %18335 to i64*
  %18336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18337 = getelementptr inbounds %struct.GPR, %struct.GPR* %18336, i32 0, i32 5
  %18338 = getelementptr inbounds %struct.Reg, %struct.Reg* %18337, i32 0, i32 0
  %CX.i731 = bitcast %union.anon* %18338 to i16*
  %18339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18340 = getelementptr inbounds %struct.GPR, %struct.GPR* %18339, i32 0, i32 7
  %18341 = getelementptr inbounds %struct.Reg, %struct.Reg* %18340, i32 0, i32 0
  %RDX.i732 = bitcast %union.anon* %18341 to i64*
  %18342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18343 = getelementptr inbounds %struct.GPR, %struct.GPR* %18342, i32 0, i32 9
  %18344 = getelementptr inbounds %struct.Reg, %struct.Reg* %18343, i32 0, i32 0
  %RSI.i733 = bitcast %union.anon* %18344 to i64*
  %18345 = load i64, i64* %RDX.i732
  %18346 = load i64, i64* %RSI.i733
  %18347 = mul i64 %18346, 2
  %18348 = add i64 %18347, %18345
  %18349 = load i16, i16* %CX.i731
  %18350 = zext i16 %18349 to i64
  %18351 = load i64, i64* %PC.i730
  %18352 = add i64 %18351, 4
  store i64 %18352, i64* %PC.i730
  %18353 = inttoptr i64 %18348 to i16*
  store i16 %18349, i16* %18353
  store %struct.Memory* %loadMem_4af7dc, %struct.Memory** %MEMORY
  %loadMem_4af7e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18355 = getelementptr inbounds %struct.GPR, %struct.GPR* %18354, i32 0, i32 33
  %18356 = getelementptr inbounds %struct.Reg, %struct.Reg* %18355, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %18356 to i64*
  %18357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18358 = getelementptr inbounds %struct.GPR, %struct.GPR* %18357, i32 0, i32 1
  %18359 = getelementptr inbounds %struct.Reg, %struct.Reg* %18358, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %18359 to i64*
  %18360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18361 = getelementptr inbounds %struct.GPR, %struct.GPR* %18360, i32 0, i32 15
  %18362 = getelementptr inbounds %struct.Reg, %struct.Reg* %18361, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %18362 to i64*
  %18363 = load i64, i64* %RBP.i729
  %18364 = sub i64 %18363, 4
  %18365 = load i64, i64* %PC.i727
  %18366 = add i64 %18365, 3
  store i64 %18366, i64* %PC.i727
  %18367 = inttoptr i64 %18364 to i32*
  %18368 = load i32, i32* %18367
  %18369 = zext i32 %18368 to i64
  store i64 %18369, i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_4af7e0, %struct.Memory** %MEMORY
  %loadMem_4af7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18371 = getelementptr inbounds %struct.GPR, %struct.GPR* %18370, i32 0, i32 33
  %18372 = getelementptr inbounds %struct.Reg, %struct.Reg* %18371, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %18372 to i64*
  %18373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18374 = getelementptr inbounds %struct.GPR, %struct.GPR* %18373, i32 0, i32 1
  %18375 = getelementptr inbounds %struct.Reg, %struct.Reg* %18374, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %18375 to i64*
  %18376 = load i64, i64* %RAX.i726
  %18377 = load i64, i64* %PC.i725
  %18378 = add i64 %18377, 3
  store i64 %18378, i64* %PC.i725
  %18379 = trunc i64 %18376 to i32
  %18380 = add i32 1, %18379
  %18381 = zext i32 %18380 to i64
  store i64 %18381, i64* %RAX.i726, align 8
  %18382 = icmp ult i32 %18380, %18379
  %18383 = icmp ult i32 %18380, 1
  %18384 = or i1 %18382, %18383
  %18385 = zext i1 %18384 to i8
  %18386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18385, i8* %18386, align 1
  %18387 = and i32 %18380, 255
  %18388 = call i32 @llvm.ctpop.i32(i32 %18387)
  %18389 = trunc i32 %18388 to i8
  %18390 = and i8 %18389, 1
  %18391 = xor i8 %18390, 1
  %18392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18391, i8* %18392, align 1
  %18393 = xor i64 1, %18376
  %18394 = trunc i64 %18393 to i32
  %18395 = xor i32 %18394, %18380
  %18396 = lshr i32 %18395, 4
  %18397 = trunc i32 %18396 to i8
  %18398 = and i8 %18397, 1
  %18399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18398, i8* %18399, align 1
  %18400 = icmp eq i32 %18380, 0
  %18401 = zext i1 %18400 to i8
  %18402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18401, i8* %18402, align 1
  %18403 = lshr i32 %18380, 31
  %18404 = trunc i32 %18403 to i8
  %18405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18404, i8* %18405, align 1
  %18406 = lshr i32 %18379, 31
  %18407 = xor i32 %18403, %18406
  %18408 = add i32 %18407, %18403
  %18409 = icmp eq i32 %18408, 2
  %18410 = zext i1 %18409 to i8
  %18411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18410, i8* %18411, align 1
  store %struct.Memory* %loadMem_4af7e3, %struct.Memory** %MEMORY
  %loadMem_4af7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18413 = getelementptr inbounds %struct.GPR, %struct.GPR* %18412, i32 0, i32 33
  %18414 = getelementptr inbounds %struct.Reg, %struct.Reg* %18413, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %18414 to i64*
  %18415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18416 = getelementptr inbounds %struct.GPR, %struct.GPR* %18415, i32 0, i32 1
  %18417 = getelementptr inbounds %struct.Reg, %struct.Reg* %18416, i32 0, i32 0
  %EAX.i723 = bitcast %union.anon* %18417 to i32*
  %18418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18419 = getelementptr inbounds %struct.GPR, %struct.GPR* %18418, i32 0, i32 15
  %18420 = getelementptr inbounds %struct.Reg, %struct.Reg* %18419, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %18420 to i64*
  %18421 = load i64, i64* %RBP.i724
  %18422 = sub i64 %18421, 4
  %18423 = load i32, i32* %EAX.i723
  %18424 = zext i32 %18423 to i64
  %18425 = load i64, i64* %PC.i722
  %18426 = add i64 %18425, 3
  store i64 %18426, i64* %PC.i722
  %18427 = inttoptr i64 %18422 to i32*
  store i32 %18423, i32* %18427
  store %struct.Memory* %loadMem_4af7e6, %struct.Memory** %MEMORY
  %loadMem_4af7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18429 = getelementptr inbounds %struct.GPR, %struct.GPR* %18428, i32 0, i32 33
  %18430 = getelementptr inbounds %struct.Reg, %struct.Reg* %18429, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %18430 to i64*
  %18431 = load i64, i64* %PC.i721
  %18432 = add i64 %18431, -284
  %18433 = load i64, i64* %PC.i721
  %18434 = add i64 %18433, 5
  store i64 %18434, i64* %PC.i721
  %18435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18432, i64* %18435, align 8
  store %struct.Memory* %loadMem_4af7e9, %struct.Memory** %MEMORY
  br label %block_.L_4af6cd

block_.L_4af7ee:                                  ; preds = %block_.L_4af6cd
  %loadMem_4af7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %18436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18437 = getelementptr inbounds %struct.GPR, %struct.GPR* %18436, i32 0, i32 33
  %18438 = getelementptr inbounds %struct.Reg, %struct.Reg* %18437, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %18438 to i64*
  %18439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18440 = getelementptr inbounds %struct.GPR, %struct.GPR* %18439, i32 0, i32 15
  %18441 = getelementptr inbounds %struct.Reg, %struct.Reg* %18440, i32 0, i32 0
  %RBP.i720 = bitcast %union.anon* %18441 to i64*
  %18442 = load i64, i64* %RBP.i720
  %18443 = sub i64 %18442, 4
  %18444 = load i64, i64* %PC.i719
  %18445 = add i64 %18444, 7
  store i64 %18445, i64* %PC.i719
  %18446 = inttoptr i64 %18443 to i32*
  store i32 0, i32* %18446
  store %struct.Memory* %loadMem_4af7ee, %struct.Memory** %MEMORY
  br label %block_.L_4af7f5

block_.L_4af7f5:                                  ; preds = %block_.L_4af998, %block_.L_4af7ee
  %loadMem_4af7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18448 = getelementptr inbounds %struct.GPR, %struct.GPR* %18447, i32 0, i32 33
  %18449 = getelementptr inbounds %struct.Reg, %struct.Reg* %18448, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %18449 to i64*
  %18450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18451 = getelementptr inbounds %struct.GPR, %struct.GPR* %18450, i32 0, i32 1
  %18452 = getelementptr inbounds %struct.Reg, %struct.Reg* %18451, i32 0, i32 0
  %RAX.i717 = bitcast %union.anon* %18452 to i64*
  %18453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18454 = getelementptr inbounds %struct.GPR, %struct.GPR* %18453, i32 0, i32 15
  %18455 = getelementptr inbounds %struct.Reg, %struct.Reg* %18454, i32 0, i32 0
  %RBP.i718 = bitcast %union.anon* %18455 to i64*
  %18456 = load i64, i64* %RBP.i718
  %18457 = sub i64 %18456, 4
  %18458 = load i64, i64* %PC.i716
  %18459 = add i64 %18458, 3
  store i64 %18459, i64* %PC.i716
  %18460 = inttoptr i64 %18457 to i32*
  %18461 = load i32, i32* %18460
  %18462 = zext i32 %18461 to i64
  store i64 %18462, i64* %RAX.i717, align 8
  store %struct.Memory* %loadMem_4af7f5, %struct.Memory** %MEMORY
  %loadMem_4af7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18464 = getelementptr inbounds %struct.GPR, %struct.GPR* %18463, i32 0, i32 33
  %18465 = getelementptr inbounds %struct.Reg, %struct.Reg* %18464, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %18465 to i64*
  %18466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18467 = getelementptr inbounds %struct.GPR, %struct.GPR* %18466, i32 0, i32 5
  %18468 = getelementptr inbounds %struct.Reg, %struct.Reg* %18467, i32 0, i32 0
  %RCX.i715 = bitcast %union.anon* %18468 to i64*
  %18469 = load i64, i64* %PC.i714
  %18470 = add i64 %18469, 8
  store i64 %18470, i64* %PC.i714
  %18471 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18471, i64* %RCX.i715, align 8
  store %struct.Memory* %loadMem_4af7f8, %struct.Memory** %MEMORY
  %loadMem_4af800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18473 = getelementptr inbounds %struct.GPR, %struct.GPR* %18472, i32 0, i32 33
  %18474 = getelementptr inbounds %struct.Reg, %struct.Reg* %18473, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %18474 to i64*
  %18475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18476 = getelementptr inbounds %struct.GPR, %struct.GPR* %18475, i32 0, i32 5
  %18477 = getelementptr inbounds %struct.Reg, %struct.Reg* %18476, i32 0, i32 0
  %RCX.i712 = bitcast %union.anon* %18477 to i64*
  %18478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18479 = getelementptr inbounds %struct.GPR, %struct.GPR* %18478, i32 0, i32 7
  %18480 = getelementptr inbounds %struct.Reg, %struct.Reg* %18479, i32 0, i32 0
  %RDX.i713 = bitcast %union.anon* %18480 to i64*
  %18481 = load i64, i64* %RCX.i712
  %18482 = add i64 %18481, 60
  %18483 = load i64, i64* %PC.i711
  %18484 = add i64 %18483, 3
  store i64 %18484, i64* %PC.i711
  %18485 = inttoptr i64 %18482 to i32*
  %18486 = load i32, i32* %18485
  %18487 = zext i32 %18486 to i64
  store i64 %18487, i64* %RDX.i713, align 8
  store %struct.Memory* %loadMem_4af800, %struct.Memory** %MEMORY
  %loadMem_4af803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18489 = getelementptr inbounds %struct.GPR, %struct.GPR* %18488, i32 0, i32 33
  %18490 = getelementptr inbounds %struct.Reg, %struct.Reg* %18489, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %18490 to i64*
  %18491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18492 = getelementptr inbounds %struct.GPR, %struct.GPR* %18491, i32 0, i32 7
  %18493 = getelementptr inbounds %struct.Reg, %struct.Reg* %18492, i32 0, i32 0
  %RDX.i710 = bitcast %union.anon* %18493 to i64*
  %18494 = load i64, i64* %RDX.i710
  %18495 = load i64, i64* %PC.i709
  %18496 = add i64 %18495, 3
  store i64 %18496, i64* %PC.i709
  %18497 = trunc i64 %18494 to i32
  %18498 = add i32 8, %18497
  %18499 = zext i32 %18498 to i64
  store i64 %18499, i64* %RDX.i710, align 8
  %18500 = icmp ult i32 %18498, %18497
  %18501 = icmp ult i32 %18498, 8
  %18502 = or i1 %18500, %18501
  %18503 = zext i1 %18502 to i8
  %18504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18503, i8* %18504, align 1
  %18505 = and i32 %18498, 255
  %18506 = call i32 @llvm.ctpop.i32(i32 %18505)
  %18507 = trunc i32 %18506 to i8
  %18508 = and i8 %18507, 1
  %18509 = xor i8 %18508, 1
  %18510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18509, i8* %18510, align 1
  %18511 = xor i64 8, %18494
  %18512 = trunc i64 %18511 to i32
  %18513 = xor i32 %18512, %18498
  %18514 = lshr i32 %18513, 4
  %18515 = trunc i32 %18514 to i8
  %18516 = and i8 %18515, 1
  %18517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18516, i8* %18517, align 1
  %18518 = icmp eq i32 %18498, 0
  %18519 = zext i1 %18518 to i8
  %18520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18519, i8* %18520, align 1
  %18521 = lshr i32 %18498, 31
  %18522 = trunc i32 %18521 to i8
  %18523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18522, i8* %18523, align 1
  %18524 = lshr i32 %18497, 31
  %18525 = xor i32 %18521, %18524
  %18526 = add i32 %18525, %18521
  %18527 = icmp eq i32 %18526, 2
  %18528 = zext i1 %18527 to i8
  %18529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18528, i8* %18529, align 1
  store %struct.Memory* %loadMem_4af803, %struct.Memory** %MEMORY
  %loadMem_4af806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18531 = getelementptr inbounds %struct.GPR, %struct.GPR* %18530, i32 0, i32 33
  %18532 = getelementptr inbounds %struct.Reg, %struct.Reg* %18531, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %18532 to i64*
  %18533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18534 = getelementptr inbounds %struct.GPR, %struct.GPR* %18533, i32 0, i32 7
  %18535 = getelementptr inbounds %struct.Reg, %struct.Reg* %18534, i32 0, i32 0
  %RDX.i708 = bitcast %union.anon* %18535 to i64*
  %18536 = load i64, i64* %RDX.i708
  %18537 = load i64, i64* %PC.i707
  %18538 = add i64 %18537, 3
  store i64 %18538, i64* %PC.i707
  %18539 = and i64 %18536, 4294967295
  %18540 = shl i64 %18539, 1
  %18541 = trunc i64 %18540 to i32
  %18542 = icmp slt i32 %18541, 0
  %18543 = shl i32 %18541, 1
  %18544 = zext i32 %18543 to i64
  store i64 %18544, i64* %RDX.i708, align 8
  %18545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18546 = zext i1 %18542 to i8
  store i8 %18546, i8* %18545, align 1
  %18547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18548 = and i32 %18543, 254
  %18549 = call i32 @llvm.ctpop.i32(i32 %18548)
  %18550 = trunc i32 %18549 to i8
  %18551 = and i8 %18550, 1
  %18552 = xor i8 %18551, 1
  store i8 %18552, i8* %18547, align 1
  %18553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18553, align 1
  %18554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18555 = icmp eq i32 %18543, 0
  %18556 = zext i1 %18555 to i8
  store i8 %18556, i8* %18554, align 1
  %18557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18558 = lshr i32 %18543, 31
  %18559 = trunc i32 %18558 to i8
  store i8 %18559, i8* %18557, align 1
  %18560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18560, align 1
  store %struct.Memory* %loadMem_4af806, %struct.Memory** %MEMORY
  %loadMem_4af809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18562 = getelementptr inbounds %struct.GPR, %struct.GPR* %18561, i32 0, i32 33
  %18563 = getelementptr inbounds %struct.Reg, %struct.Reg* %18562, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %18563 to i64*
  %18564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18565 = getelementptr inbounds %struct.GPR, %struct.GPR* %18564, i32 0, i32 1
  %18566 = getelementptr inbounds %struct.Reg, %struct.Reg* %18565, i32 0, i32 0
  %EAX.i705 = bitcast %union.anon* %18566 to i32*
  %18567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18568 = getelementptr inbounds %struct.GPR, %struct.GPR* %18567, i32 0, i32 7
  %18569 = getelementptr inbounds %struct.Reg, %struct.Reg* %18568, i32 0, i32 0
  %EDX.i706 = bitcast %union.anon* %18569 to i32*
  %18570 = load i32, i32* %EAX.i705
  %18571 = zext i32 %18570 to i64
  %18572 = load i32, i32* %EDX.i706
  %18573 = zext i32 %18572 to i64
  %18574 = load i64, i64* %PC.i704
  %18575 = add i64 %18574, 2
  store i64 %18575, i64* %PC.i704
  %18576 = sub i32 %18570, %18572
  %18577 = icmp ult i32 %18570, %18572
  %18578 = zext i1 %18577 to i8
  %18579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18578, i8* %18579, align 1
  %18580 = and i32 %18576, 255
  %18581 = call i32 @llvm.ctpop.i32(i32 %18580)
  %18582 = trunc i32 %18581 to i8
  %18583 = and i8 %18582, 1
  %18584 = xor i8 %18583, 1
  %18585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18584, i8* %18585, align 1
  %18586 = xor i64 %18573, %18571
  %18587 = trunc i64 %18586 to i32
  %18588 = xor i32 %18587, %18576
  %18589 = lshr i32 %18588, 4
  %18590 = trunc i32 %18589 to i8
  %18591 = and i8 %18590, 1
  %18592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18591, i8* %18592, align 1
  %18593 = icmp eq i32 %18576, 0
  %18594 = zext i1 %18593 to i8
  %18595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18594, i8* %18595, align 1
  %18596 = lshr i32 %18576, 31
  %18597 = trunc i32 %18596 to i8
  %18598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18597, i8* %18598, align 1
  %18599 = lshr i32 %18570, 31
  %18600 = lshr i32 %18572, 31
  %18601 = xor i32 %18600, %18599
  %18602 = xor i32 %18596, %18599
  %18603 = add i32 %18602, %18601
  %18604 = icmp eq i32 %18603, 2
  %18605 = zext i1 %18604 to i8
  %18606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18605, i8* %18606, align 1
  store %struct.Memory* %loadMem_4af809, %struct.Memory** %MEMORY
  %loadMem_4af80b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18608 = getelementptr inbounds %struct.GPR, %struct.GPR* %18607, i32 0, i32 33
  %18609 = getelementptr inbounds %struct.Reg, %struct.Reg* %18608, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %18609 to i64*
  %18610 = load i64, i64* %PC.i703
  %18611 = add i64 %18610, 411
  %18612 = load i64, i64* %PC.i703
  %18613 = add i64 %18612, 6
  %18614 = load i64, i64* %PC.i703
  %18615 = add i64 %18614, 6
  store i64 %18615, i64* %PC.i703
  %18616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18617 = load i8, i8* %18616, align 1
  %18618 = icmp ne i8 %18617, 0
  %18619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18620 = load i8, i8* %18619, align 1
  %18621 = icmp ne i8 %18620, 0
  %18622 = xor i1 %18618, %18621
  %18623 = xor i1 %18622, true
  %18624 = zext i1 %18623 to i8
  store i8 %18624, i8* %BRANCH_TAKEN, align 1
  %18625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18626 = select i1 %18622, i64 %18613, i64 %18611
  store i64 %18626, i64* %18625, align 8
  store %struct.Memory* %loadMem_4af80b, %struct.Memory** %MEMORY
  %loadBr_4af80b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af80b = icmp eq i8 %loadBr_4af80b, 1
  br i1 %cmpBr_4af80b, label %block_.L_4af9a6, label %block_4af811

block_4af811:                                     ; preds = %block_.L_4af7f5
  %loadMem_4af811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18628 = getelementptr inbounds %struct.GPR, %struct.GPR* %18627, i32 0, i32 33
  %18629 = getelementptr inbounds %struct.Reg, %struct.Reg* %18628, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %18629 to i64*
  %18630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18631 = getelementptr inbounds %struct.GPR, %struct.GPR* %18630, i32 0, i32 15
  %18632 = getelementptr inbounds %struct.Reg, %struct.Reg* %18631, i32 0, i32 0
  %RBP.i702 = bitcast %union.anon* %18632 to i64*
  %18633 = load i64, i64* %RBP.i702
  %18634 = sub i64 %18633, 8
  %18635 = load i64, i64* %PC.i701
  %18636 = add i64 %18635, 7
  store i64 %18636, i64* %PC.i701
  %18637 = inttoptr i64 %18634 to i32*
  store i32 0, i32* %18637
  store %struct.Memory* %loadMem_4af811, %struct.Memory** %MEMORY
  br label %block_.L_4af818

block_.L_4af818:                                  ; preds = %block_.L_4af955, %block_4af811
  %loadMem_4af818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18639 = getelementptr inbounds %struct.GPR, %struct.GPR* %18638, i32 0, i32 33
  %18640 = getelementptr inbounds %struct.Reg, %struct.Reg* %18639, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %18640 to i64*
  %18641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18642 = getelementptr inbounds %struct.GPR, %struct.GPR* %18641, i32 0, i32 1
  %18643 = getelementptr inbounds %struct.Reg, %struct.Reg* %18642, i32 0, i32 0
  %RAX.i699 = bitcast %union.anon* %18643 to i64*
  %18644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18645 = getelementptr inbounds %struct.GPR, %struct.GPR* %18644, i32 0, i32 15
  %18646 = getelementptr inbounds %struct.Reg, %struct.Reg* %18645, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %18646 to i64*
  %18647 = load i64, i64* %RBP.i700
  %18648 = sub i64 %18647, 8
  %18649 = load i64, i64* %PC.i698
  %18650 = add i64 %18649, 3
  store i64 %18650, i64* %PC.i698
  %18651 = inttoptr i64 %18648 to i32*
  %18652 = load i32, i32* %18651
  %18653 = zext i32 %18652 to i64
  store i64 %18653, i64* %RAX.i699, align 8
  store %struct.Memory* %loadMem_4af818, %struct.Memory** %MEMORY
  %loadMem_4af81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18655 = getelementptr inbounds %struct.GPR, %struct.GPR* %18654, i32 0, i32 33
  %18656 = getelementptr inbounds %struct.Reg, %struct.Reg* %18655, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %18656 to i64*
  %18657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18658 = getelementptr inbounds %struct.GPR, %struct.GPR* %18657, i32 0, i32 5
  %18659 = getelementptr inbounds %struct.Reg, %struct.Reg* %18658, i32 0, i32 0
  %RCX.i697 = bitcast %union.anon* %18659 to i64*
  %18660 = load i64, i64* %PC.i696
  %18661 = add i64 %18660, 8
  store i64 %18661, i64* %PC.i696
  %18662 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18662, i64* %RCX.i697, align 8
  store %struct.Memory* %loadMem_4af81b, %struct.Memory** %MEMORY
  %loadMem_4af823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18664 = getelementptr inbounds %struct.GPR, %struct.GPR* %18663, i32 0, i32 33
  %18665 = getelementptr inbounds %struct.Reg, %struct.Reg* %18664, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %18665 to i64*
  %18666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18667 = getelementptr inbounds %struct.GPR, %struct.GPR* %18666, i32 0, i32 5
  %18668 = getelementptr inbounds %struct.Reg, %struct.Reg* %18667, i32 0, i32 0
  %RCX.i694 = bitcast %union.anon* %18668 to i64*
  %18669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18670 = getelementptr inbounds %struct.GPR, %struct.GPR* %18669, i32 0, i32 7
  %18671 = getelementptr inbounds %struct.Reg, %struct.Reg* %18670, i32 0, i32 0
  %RDX.i695 = bitcast %union.anon* %18671 to i64*
  %18672 = load i64, i64* %RCX.i694
  %18673 = add i64 %18672, 52
  %18674 = load i64, i64* %PC.i693
  %18675 = add i64 %18674, 3
  store i64 %18675, i64* %PC.i693
  %18676 = inttoptr i64 %18673 to i32*
  %18677 = load i32, i32* %18676
  %18678 = zext i32 %18677 to i64
  store i64 %18678, i64* %RDX.i695, align 8
  store %struct.Memory* %loadMem_4af823, %struct.Memory** %MEMORY
  %loadMem_4af826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18680 = getelementptr inbounds %struct.GPR, %struct.GPR* %18679, i32 0, i32 33
  %18681 = getelementptr inbounds %struct.Reg, %struct.Reg* %18680, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %18681 to i64*
  %18682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18683 = getelementptr inbounds %struct.GPR, %struct.GPR* %18682, i32 0, i32 7
  %18684 = getelementptr inbounds %struct.Reg, %struct.Reg* %18683, i32 0, i32 0
  %RDX.i692 = bitcast %union.anon* %18684 to i64*
  %18685 = load i64, i64* %RDX.i692
  %18686 = load i64, i64* %PC.i691
  %18687 = add i64 %18686, 3
  store i64 %18687, i64* %PC.i691
  %18688 = trunc i64 %18685 to i32
  %18689 = add i32 8, %18688
  %18690 = zext i32 %18689 to i64
  store i64 %18690, i64* %RDX.i692, align 8
  %18691 = icmp ult i32 %18689, %18688
  %18692 = icmp ult i32 %18689, 8
  %18693 = or i1 %18691, %18692
  %18694 = zext i1 %18693 to i8
  %18695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18694, i8* %18695, align 1
  %18696 = and i32 %18689, 255
  %18697 = call i32 @llvm.ctpop.i32(i32 %18696)
  %18698 = trunc i32 %18697 to i8
  %18699 = and i8 %18698, 1
  %18700 = xor i8 %18699, 1
  %18701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18700, i8* %18701, align 1
  %18702 = xor i64 8, %18685
  %18703 = trunc i64 %18702 to i32
  %18704 = xor i32 %18703, %18689
  %18705 = lshr i32 %18704, 4
  %18706 = trunc i32 %18705 to i8
  %18707 = and i8 %18706, 1
  %18708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18707, i8* %18708, align 1
  %18709 = icmp eq i32 %18689, 0
  %18710 = zext i1 %18709 to i8
  %18711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18710, i8* %18711, align 1
  %18712 = lshr i32 %18689, 31
  %18713 = trunc i32 %18712 to i8
  %18714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18713, i8* %18714, align 1
  %18715 = lshr i32 %18688, 31
  %18716 = xor i32 %18712, %18715
  %18717 = add i32 %18716, %18712
  %18718 = icmp eq i32 %18717, 2
  %18719 = zext i1 %18718 to i8
  %18720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18719, i8* %18720, align 1
  store %struct.Memory* %loadMem_4af826, %struct.Memory** %MEMORY
  %loadMem_4af829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18722 = getelementptr inbounds %struct.GPR, %struct.GPR* %18721, i32 0, i32 33
  %18723 = getelementptr inbounds %struct.Reg, %struct.Reg* %18722, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %18723 to i64*
  %18724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18725 = getelementptr inbounds %struct.GPR, %struct.GPR* %18724, i32 0, i32 7
  %18726 = getelementptr inbounds %struct.Reg, %struct.Reg* %18725, i32 0, i32 0
  %RDX.i690 = bitcast %union.anon* %18726 to i64*
  %18727 = load i64, i64* %RDX.i690
  %18728 = load i64, i64* %PC.i689
  %18729 = add i64 %18728, 3
  store i64 %18729, i64* %PC.i689
  %18730 = and i64 %18727, 4294967295
  %18731 = shl i64 %18730, 1
  %18732 = trunc i64 %18731 to i32
  %18733 = icmp slt i32 %18732, 0
  %18734 = shl i32 %18732, 1
  %18735 = zext i32 %18734 to i64
  store i64 %18735, i64* %RDX.i690, align 8
  %18736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18737 = zext i1 %18733 to i8
  store i8 %18737, i8* %18736, align 1
  %18738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18739 = and i32 %18734, 254
  %18740 = call i32 @llvm.ctpop.i32(i32 %18739)
  %18741 = trunc i32 %18740 to i8
  %18742 = and i8 %18741, 1
  %18743 = xor i8 %18742, 1
  store i8 %18743, i8* %18738, align 1
  %18744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18744, align 1
  %18745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18746 = icmp eq i32 %18734, 0
  %18747 = zext i1 %18746 to i8
  store i8 %18747, i8* %18745, align 1
  %18748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18749 = lshr i32 %18734, 31
  %18750 = trunc i32 %18749 to i8
  store i8 %18750, i8* %18748, align 1
  %18751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18751, align 1
  store %struct.Memory* %loadMem_4af829, %struct.Memory** %MEMORY
  %loadMem_4af82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18753 = getelementptr inbounds %struct.GPR, %struct.GPR* %18752, i32 0, i32 33
  %18754 = getelementptr inbounds %struct.Reg, %struct.Reg* %18753, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %18754 to i64*
  %18755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18756 = getelementptr inbounds %struct.GPR, %struct.GPR* %18755, i32 0, i32 1
  %18757 = getelementptr inbounds %struct.Reg, %struct.Reg* %18756, i32 0, i32 0
  %EAX.i687 = bitcast %union.anon* %18757 to i32*
  %18758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18759 = getelementptr inbounds %struct.GPR, %struct.GPR* %18758, i32 0, i32 7
  %18760 = getelementptr inbounds %struct.Reg, %struct.Reg* %18759, i32 0, i32 0
  %EDX.i688 = bitcast %union.anon* %18760 to i32*
  %18761 = load i32, i32* %EAX.i687
  %18762 = zext i32 %18761 to i64
  %18763 = load i32, i32* %EDX.i688
  %18764 = zext i32 %18763 to i64
  %18765 = load i64, i64* %PC.i686
  %18766 = add i64 %18765, 2
  store i64 %18766, i64* %PC.i686
  %18767 = sub i32 %18761, %18763
  %18768 = icmp ult i32 %18761, %18763
  %18769 = zext i1 %18768 to i8
  %18770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18769, i8* %18770, align 1
  %18771 = and i32 %18767, 255
  %18772 = call i32 @llvm.ctpop.i32(i32 %18771)
  %18773 = trunc i32 %18772 to i8
  %18774 = and i8 %18773, 1
  %18775 = xor i8 %18774, 1
  %18776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18775, i8* %18776, align 1
  %18777 = xor i64 %18764, %18762
  %18778 = trunc i64 %18777 to i32
  %18779 = xor i32 %18778, %18767
  %18780 = lshr i32 %18779, 4
  %18781 = trunc i32 %18780 to i8
  %18782 = and i8 %18781, 1
  %18783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18782, i8* %18783, align 1
  %18784 = icmp eq i32 %18767, 0
  %18785 = zext i1 %18784 to i8
  %18786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18785, i8* %18786, align 1
  %18787 = lshr i32 %18767, 31
  %18788 = trunc i32 %18787 to i8
  %18789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18788, i8* %18789, align 1
  %18790 = lshr i32 %18761, 31
  %18791 = lshr i32 %18763, 31
  %18792 = xor i32 %18791, %18790
  %18793 = xor i32 %18787, %18790
  %18794 = add i32 %18793, %18792
  %18795 = icmp eq i32 %18794, 2
  %18796 = zext i1 %18795 to i8
  %18797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18796, i8* %18797, align 1
  store %struct.Memory* %loadMem_4af82c, %struct.Memory** %MEMORY
  %loadMem_4af82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18799 = getelementptr inbounds %struct.GPR, %struct.GPR* %18798, i32 0, i32 33
  %18800 = getelementptr inbounds %struct.Reg, %struct.Reg* %18799, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %18800 to i64*
  %18801 = load i64, i64* %PC.i685
  %18802 = add i64 %18801, 357
  %18803 = load i64, i64* %PC.i685
  %18804 = add i64 %18803, 6
  %18805 = load i64, i64* %PC.i685
  %18806 = add i64 %18805, 6
  store i64 %18806, i64* %PC.i685
  %18807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18808 = load i8, i8* %18807, align 1
  %18809 = icmp ne i8 %18808, 0
  %18810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18811 = load i8, i8* %18810, align 1
  %18812 = icmp ne i8 %18811, 0
  %18813 = xor i1 %18809, %18812
  %18814 = xor i1 %18813, true
  %18815 = zext i1 %18814 to i8
  store i8 %18815, i8* %BRANCH_TAKEN, align 1
  %18816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18817 = select i1 %18813, i64 %18804, i64 %18802
  store i64 %18817, i64* %18816, align 8
  store %struct.Memory* %loadMem_4af82e, %struct.Memory** %MEMORY
  %loadBr_4af82e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af82e = icmp eq i8 %loadBr_4af82e, 1
  br i1 %cmpBr_4af82e, label %block_.L_4af993, label %block_4af834

block_4af834:                                     ; preds = %block_.L_4af818
  %loadMem_4af834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18819 = getelementptr inbounds %struct.GPR, %struct.GPR* %18818, i32 0, i32 33
  %18820 = getelementptr inbounds %struct.Reg, %struct.Reg* %18819, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %18820 to i64*
  %18821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18822 = getelementptr inbounds %struct.GPR, %struct.GPR* %18821, i32 0, i32 1
  %18823 = getelementptr inbounds %struct.Reg, %struct.Reg* %18822, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %18823 to i64*
  %18824 = load i64, i64* %PC.i683
  %18825 = add i64 %18824, 8
  store i64 %18825, i64* %PC.i683
  %18826 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %18826, i64* %RAX.i684, align 8
  store %struct.Memory* %loadMem_4af834, %struct.Memory** %MEMORY
  %loadMem_4af83c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18828 = getelementptr inbounds %struct.GPR, %struct.GPR* %18827, i32 0, i32 33
  %18829 = getelementptr inbounds %struct.Reg, %struct.Reg* %18828, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %18829 to i64*
  %18830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18831 = getelementptr inbounds %struct.GPR, %struct.GPR* %18830, i32 0, i32 5
  %18832 = getelementptr inbounds %struct.Reg, %struct.Reg* %18831, i32 0, i32 0
  %RCX.i681 = bitcast %union.anon* %18832 to i64*
  %18833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18834 = getelementptr inbounds %struct.GPR, %struct.GPR* %18833, i32 0, i32 15
  %18835 = getelementptr inbounds %struct.Reg, %struct.Reg* %18834, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %18835 to i64*
  %18836 = load i64, i64* %RBP.i682
  %18837 = sub i64 %18836, 12
  %18838 = load i64, i64* %PC.i680
  %18839 = add i64 %18838, 4
  store i64 %18839, i64* %PC.i680
  %18840 = inttoptr i64 %18837 to i32*
  %18841 = load i32, i32* %18840
  %18842 = sext i32 %18841 to i64
  store i64 %18842, i64* %RCX.i681, align 8
  store %struct.Memory* %loadMem_4af83c, %struct.Memory** %MEMORY
  %loadMem_4af840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18844 = getelementptr inbounds %struct.GPR, %struct.GPR* %18843, i32 0, i32 33
  %18845 = getelementptr inbounds %struct.Reg, %struct.Reg* %18844, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %18845 to i64*
  %18846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18847 = getelementptr inbounds %struct.GPR, %struct.GPR* %18846, i32 0, i32 1
  %18848 = getelementptr inbounds %struct.Reg, %struct.Reg* %18847, i32 0, i32 0
  %RAX.i678 = bitcast %union.anon* %18848 to i64*
  %18849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18850 = getelementptr inbounds %struct.GPR, %struct.GPR* %18849, i32 0, i32 5
  %18851 = getelementptr inbounds %struct.Reg, %struct.Reg* %18850, i32 0, i32 0
  %RCX.i679 = bitcast %union.anon* %18851 to i64*
  %18852 = load i64, i64* %RAX.i678
  %18853 = load i64, i64* %RCX.i679
  %18854 = mul i64 %18853, 8
  %18855 = add i64 %18854, %18852
  %18856 = load i64, i64* %PC.i677
  %18857 = add i64 %18856, 4
  store i64 %18857, i64* %PC.i677
  %18858 = inttoptr i64 %18855 to i64*
  %18859 = load i64, i64* %18858
  store i64 %18859, i64* %RAX.i678, align 8
  store %struct.Memory* %loadMem_4af840, %struct.Memory** %MEMORY
  %loadMem_4af844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18861 = getelementptr inbounds %struct.GPR, %struct.GPR* %18860, i32 0, i32 33
  %18862 = getelementptr inbounds %struct.Reg, %struct.Reg* %18861, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %18862 to i64*
  %18863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18864 = getelementptr inbounds %struct.GPR, %struct.GPR* %18863, i32 0, i32 1
  %18865 = getelementptr inbounds %struct.Reg, %struct.Reg* %18864, i32 0, i32 0
  %RAX.i676 = bitcast %union.anon* %18865 to i64*
  %18866 = load i64, i64* %RAX.i676
  %18867 = add i64 %18866, 6448
  %18868 = load i64, i64* %PC.i675
  %18869 = add i64 %18868, 7
  store i64 %18869, i64* %PC.i675
  %18870 = inttoptr i64 %18867 to i64*
  %18871 = load i64, i64* %18870
  store i64 %18871, i64* %RAX.i676, align 8
  store %struct.Memory* %loadMem_4af844, %struct.Memory** %MEMORY
  %loadMem_4af84b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18873 = getelementptr inbounds %struct.GPR, %struct.GPR* %18872, i32 0, i32 33
  %18874 = getelementptr inbounds %struct.Reg, %struct.Reg* %18873, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %18874 to i64*
  %18875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18876 = getelementptr inbounds %struct.GPR, %struct.GPR* %18875, i32 0, i32 5
  %18877 = getelementptr inbounds %struct.Reg, %struct.Reg* %18876, i32 0, i32 0
  %RCX.i673 = bitcast %union.anon* %18877 to i64*
  %18878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18879 = getelementptr inbounds %struct.GPR, %struct.GPR* %18878, i32 0, i32 15
  %18880 = getelementptr inbounds %struct.Reg, %struct.Reg* %18879, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %18880 to i64*
  %18881 = load i64, i64* %RBP.i674
  %18882 = sub i64 %18881, 4
  %18883 = load i64, i64* %PC.i672
  %18884 = add i64 %18883, 4
  store i64 %18884, i64* %PC.i672
  %18885 = inttoptr i64 %18882 to i32*
  %18886 = load i32, i32* %18885
  %18887 = sext i32 %18886 to i64
  store i64 %18887, i64* %RCX.i673, align 8
  store %struct.Memory* %loadMem_4af84b, %struct.Memory** %MEMORY
  %loadMem_4af84f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18889 = getelementptr inbounds %struct.GPR, %struct.GPR* %18888, i32 0, i32 33
  %18890 = getelementptr inbounds %struct.Reg, %struct.Reg* %18889, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %18890 to i64*
  %18891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18892 = getelementptr inbounds %struct.GPR, %struct.GPR* %18891, i32 0, i32 1
  %18893 = getelementptr inbounds %struct.Reg, %struct.Reg* %18892, i32 0, i32 0
  %RAX.i670 = bitcast %union.anon* %18893 to i64*
  %18894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18895 = getelementptr inbounds %struct.GPR, %struct.GPR* %18894, i32 0, i32 5
  %18896 = getelementptr inbounds %struct.Reg, %struct.Reg* %18895, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %18896 to i64*
  %18897 = load i64, i64* %RAX.i670
  %18898 = load i64, i64* %RCX.i671
  %18899 = mul i64 %18898, 8
  %18900 = add i64 %18899, %18897
  %18901 = load i64, i64* %PC.i669
  %18902 = add i64 %18901, 4
  store i64 %18902, i64* %PC.i669
  %18903 = inttoptr i64 %18900 to i64*
  %18904 = load i64, i64* %18903
  store i64 %18904, i64* %RAX.i670, align 8
  store %struct.Memory* %loadMem_4af84f, %struct.Memory** %MEMORY
  %loadMem_4af853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18906 = getelementptr inbounds %struct.GPR, %struct.GPR* %18905, i32 0, i32 33
  %18907 = getelementptr inbounds %struct.Reg, %struct.Reg* %18906, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %18907 to i64*
  %18908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18909 = getelementptr inbounds %struct.GPR, %struct.GPR* %18908, i32 0, i32 5
  %18910 = getelementptr inbounds %struct.Reg, %struct.Reg* %18909, i32 0, i32 0
  %RCX.i667 = bitcast %union.anon* %18910 to i64*
  %18911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18912 = getelementptr inbounds %struct.GPR, %struct.GPR* %18911, i32 0, i32 15
  %18913 = getelementptr inbounds %struct.Reg, %struct.Reg* %18912, i32 0, i32 0
  %RBP.i668 = bitcast %union.anon* %18913 to i64*
  %18914 = load i64, i64* %RBP.i668
  %18915 = sub i64 %18914, 8
  %18916 = load i64, i64* %PC.i666
  %18917 = add i64 %18916, 4
  store i64 %18917, i64* %PC.i666
  %18918 = inttoptr i64 %18915 to i32*
  %18919 = load i32, i32* %18918
  %18920 = sext i32 %18919 to i64
  store i64 %18920, i64* %RCX.i667, align 8
  store %struct.Memory* %loadMem_4af853, %struct.Memory** %MEMORY
  %loadMem_4af857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18922 = getelementptr inbounds %struct.GPR, %struct.GPR* %18921, i32 0, i32 33
  %18923 = getelementptr inbounds %struct.Reg, %struct.Reg* %18922, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %18923 to i64*
  %18924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18925 = getelementptr inbounds %struct.GPR, %struct.GPR* %18924, i32 0, i32 1
  %18926 = getelementptr inbounds %struct.Reg, %struct.Reg* %18925, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %18926 to i64*
  %18927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18928 = getelementptr inbounds %struct.GPR, %struct.GPR* %18927, i32 0, i32 5
  %18929 = getelementptr inbounds %struct.Reg, %struct.Reg* %18928, i32 0, i32 0
  %RCX.i664 = bitcast %union.anon* %18929 to i64*
  %18930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18931 = getelementptr inbounds %struct.GPR, %struct.GPR* %18930, i32 0, i32 7
  %18932 = getelementptr inbounds %struct.Reg, %struct.Reg* %18931, i32 0, i32 0
  %RDX.i665 = bitcast %union.anon* %18932 to i64*
  %18933 = load i64, i64* %RAX.i663
  %18934 = load i64, i64* %RCX.i664
  %18935 = mul i64 %18934, 2
  %18936 = add i64 %18935, %18933
  %18937 = load i64, i64* %PC.i662
  %18938 = add i64 %18937, 4
  store i64 %18938, i64* %PC.i662
  %18939 = inttoptr i64 %18936 to i16*
  %18940 = load i16, i16* %18939
  %18941 = zext i16 %18940 to i64
  store i64 %18941, i64* %RDX.i665, align 8
  store %struct.Memory* %loadMem_4af857, %struct.Memory** %MEMORY
  %loadMem_4af85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18943 = getelementptr inbounds %struct.GPR, %struct.GPR* %18942, i32 0, i32 33
  %18944 = getelementptr inbounds %struct.Reg, %struct.Reg* %18943, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %18944 to i64*
  %18945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18946 = getelementptr inbounds %struct.GPR, %struct.GPR* %18945, i32 0, i32 7
  %18947 = getelementptr inbounds %struct.Reg, %struct.Reg* %18946, i32 0, i32 0
  %RDX.i660 = bitcast %union.anon* %18947 to i64*
  %18948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18949 = getelementptr inbounds %struct.GPR, %struct.GPR* %18948, i32 0, i32 15
  %18950 = getelementptr inbounds %struct.Reg, %struct.Reg* %18949, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %18950 to i64*
  %18951 = load i64, i64* %RDX.i660
  %18952 = load i64, i64* %RBP.i661
  %18953 = sub i64 %18952, 35400
  %18954 = load i64, i64* %PC.i659
  %18955 = add i64 %18954, 7
  store i64 %18955, i64* %PC.i659
  %18956 = inttoptr i64 %18953 to i32*
  %18957 = load i32, i32* %18956
  %18958 = shl i64 %18951, 32
  %18959 = ashr exact i64 %18958, 32
  %18960 = sext i32 %18957 to i64
  %18961 = mul i64 %18960, %18959
  %18962 = trunc i64 %18961 to i32
  %18963 = and i64 %18961, 4294967295
  store i64 %18963, i64* %RDX.i660, align 8
  %18964 = shl i64 %18961, 32
  %18965 = ashr exact i64 %18964, 32
  %18966 = icmp ne i64 %18965, %18961
  %18967 = zext i1 %18966 to i8
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18967, i8* %18968, align 1
  %18969 = and i32 %18962, 255
  %18970 = call i32 @llvm.ctpop.i32(i32 %18969)
  %18971 = trunc i32 %18970 to i8
  %18972 = and i8 %18971, 1
  %18973 = xor i8 %18972, 1
  %18974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18973, i8* %18974, align 1
  %18975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18975, align 1
  %18976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18976, align 1
  %18977 = lshr i32 %18962, 31
  %18978 = trunc i32 %18977 to i8
  %18979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18978, i8* %18979, align 1
  %18980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18967, i8* %18980, align 1
  store %struct.Memory* %loadMem_4af85b, %struct.Memory** %MEMORY
  %loadMem_4af862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18982 = getelementptr inbounds %struct.GPR, %struct.GPR* %18981, i32 0, i32 33
  %18983 = getelementptr inbounds %struct.Reg, %struct.Reg* %18982, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %18983 to i64*
  %18984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18985 = getelementptr inbounds %struct.GPR, %struct.GPR* %18984, i32 0, i32 7
  %18986 = getelementptr inbounds %struct.Reg, %struct.Reg* %18985, i32 0, i32 0
  %RDX.i658 = bitcast %union.anon* %18986 to i64*
  %18987 = load i64, i64* %RDX.i658
  %18988 = load i64, i64* %PC.i657
  %18989 = add i64 %18988, 7
  store i64 %18989, i64* %PC.i657
  %18990 = trunc i64 %18987 to i32
  %18991 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %18992 = add i32 %18991, %18990
  %18993 = zext i32 %18992 to i64
  store i64 %18993, i64* %RDX.i658, align 8
  %18994 = icmp ult i32 %18992, %18990
  %18995 = icmp ult i32 %18992, %18991
  %18996 = or i1 %18994, %18995
  %18997 = zext i1 %18996 to i8
  %18998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18997, i8* %18998, align 1
  %18999 = and i32 %18992, 255
  %19000 = call i32 @llvm.ctpop.i32(i32 %18999)
  %19001 = trunc i32 %19000 to i8
  %19002 = and i8 %19001, 1
  %19003 = xor i8 %19002, 1
  %19004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19003, i8* %19004, align 1
  %19005 = xor i32 %18991, %18990
  %19006 = xor i32 %19005, %18992
  %19007 = lshr i32 %19006, 4
  %19008 = trunc i32 %19007 to i8
  %19009 = and i8 %19008, 1
  %19010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19009, i8* %19010, align 1
  %19011 = icmp eq i32 %18992, 0
  %19012 = zext i1 %19011 to i8
  %19013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19012, i8* %19013, align 1
  %19014 = lshr i32 %18992, 31
  %19015 = trunc i32 %19014 to i8
  %19016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19015, i8* %19016, align 1
  %19017 = lshr i32 %18990, 31
  %19018 = lshr i32 %18991, 31
  %19019 = xor i32 %19014, %19017
  %19020 = xor i32 %19014, %19018
  %19021 = add i32 %19019, %19020
  %19022 = icmp eq i32 %19021, 2
  %19023 = zext i1 %19022 to i8
  %19024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19023, i8* %19024, align 1
  store %struct.Memory* %loadMem_4af862, %struct.Memory** %MEMORY
  %loadMem_4af869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19026 = getelementptr inbounds %struct.GPR, %struct.GPR* %19025, i32 0, i32 33
  %19027 = getelementptr inbounds %struct.Reg, %struct.Reg* %19026, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %19027 to i64*
  %19028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19029 = getelementptr inbounds %struct.GPR, %struct.GPR* %19028, i32 0, i32 5
  %19030 = getelementptr inbounds %struct.Reg, %struct.Reg* %19029, i32 0, i32 0
  %RCX.i656 = bitcast %union.anon* %19030 to i64*
  %19031 = load i64, i64* %PC.i655
  %19032 = add i64 %19031, 7
  store i64 %19032, i64* %PC.i655
  %19033 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %19034 = zext i32 %19033 to i64
  store i64 %19034, i64* %RCX.i656, align 8
  store %struct.Memory* %loadMem_4af869, %struct.Memory** %MEMORY
  %loadMem_4af870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19036 = getelementptr inbounds %struct.GPR, %struct.GPR* %19035, i32 0, i32 33
  %19037 = getelementptr inbounds %struct.Reg, %struct.Reg* %19036, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %19037 to i64*
  %19038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19039 = getelementptr inbounds %struct.GPR, %struct.GPR* %19038, i32 0, i32 5
  %19040 = getelementptr inbounds %struct.Reg, %struct.Reg* %19039, i32 0, i32 0
  %19041 = bitcast %union.anon* %19040 to %struct.anon.2*
  %CL.i652 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %19041, i32 0, i32 0
  %19042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19043 = getelementptr inbounds %struct.GPR, %struct.GPR* %19042, i32 0, i32 7
  %19044 = getelementptr inbounds %struct.Reg, %struct.Reg* %19043, i32 0, i32 0
  %RDX.i653 = bitcast %union.anon* %19044 to i64*
  %19045 = load i64, i64* %RDX.i653
  %19046 = load i8, i8* %CL.i652
  %19047 = zext i8 %19046 to i64
  %19048 = load i64, i64* %PC.i651
  %19049 = add i64 %19048, 2
  store i64 %19049, i64* %PC.i651
  %19050 = trunc i64 %19047 to i5
  switch i5 %19050, label %19054 [
    i5 0, label %routine_sarl__cl___edx.exit654
    i5 1, label %19051
  ]

; <label>:19051:                                  ; preds = %block_4af834
  %19052 = shl i64 %19045, 32
  %19053 = ashr i64 %19052, 33
  br label %19061

; <label>:19054:                                  ; preds = %block_4af834
  %19055 = and i64 %19047, 31
  %19056 = add i64 %19055, -1
  %19057 = shl i64 %19045, 32
  %19058 = ashr exact i64 %19057, 32
  %19059 = ashr i64 %19058, %19056
  %19060 = lshr i64 %19059, 1
  br label %19061

; <label>:19061:                                  ; preds = %19054, %19051
  %19062 = phi i64 [ %19060, %19054 ], [ %19053, %19051 ]
  %19063 = phi i64 [ %19059, %19054 ], [ %19045, %19051 ]
  %19064 = trunc i64 %19063 to i8
  %19065 = and i8 %19064, 1
  %19066 = trunc i64 %19062 to i32
  %19067 = and i64 %19062, 4294967295
  store i64 %19067, i64* %RDX.i653, align 8
  %19068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19065, i8* %19068, align 1
  %19069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19070 = and i32 %19066, 255
  %19071 = call i32 @llvm.ctpop.i32(i32 %19070)
  %19072 = trunc i32 %19071 to i8
  %19073 = and i8 %19072, 1
  %19074 = xor i8 %19073, 1
  store i8 %19074, i8* %19069, align 1
  %19075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19075, align 1
  %19076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19077 = icmp eq i32 %19066, 0
  %19078 = zext i1 %19077 to i8
  store i8 %19078, i8* %19076, align 1
  %19079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19080 = lshr i32 %19066, 31
  %19081 = trunc i32 %19080 to i8
  store i8 %19081, i8* %19079, align 1
  %19082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19082, align 1
  br label %routine_sarl__cl___edx.exit654

routine_sarl__cl___edx.exit654:                   ; preds = %block_4af834, %19061
  store %struct.Memory* %loadMem_4af870, %struct.Memory** %MEMORY
  %loadMem_4af872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19084 = getelementptr inbounds %struct.GPR, %struct.GPR* %19083, i32 0, i32 33
  %19085 = getelementptr inbounds %struct.Reg, %struct.Reg* %19084, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %19085 to i64*
  %19086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19087 = getelementptr inbounds %struct.GPR, %struct.GPR* %19086, i32 0, i32 7
  %19088 = getelementptr inbounds %struct.Reg, %struct.Reg* %19087, i32 0, i32 0
  %RDX.i649 = bitcast %union.anon* %19088 to i64*
  %19089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19090 = getelementptr inbounds %struct.GPR, %struct.GPR* %19089, i32 0, i32 15
  %19091 = getelementptr inbounds %struct.Reg, %struct.Reg* %19090, i32 0, i32 0
  %RBP.i650 = bitcast %union.anon* %19091 to i64*
  %19092 = load i64, i64* %RDX.i649
  %19093 = load i64, i64* %RBP.i650
  %19094 = sub i64 %19093, 35404
  %19095 = load i64, i64* %PC.i648
  %19096 = add i64 %19095, 6
  store i64 %19096, i64* %PC.i648
  %19097 = trunc i64 %19092 to i32
  %19098 = inttoptr i64 %19094 to i32*
  %19099 = load i32, i32* %19098
  %19100 = add i32 %19099, %19097
  %19101 = zext i32 %19100 to i64
  store i64 %19101, i64* %RDX.i649, align 8
  %19102 = icmp ult i32 %19100, %19097
  %19103 = icmp ult i32 %19100, %19099
  %19104 = or i1 %19102, %19103
  %19105 = zext i1 %19104 to i8
  %19106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19105, i8* %19106, align 1
  %19107 = and i32 %19100, 255
  %19108 = call i32 @llvm.ctpop.i32(i32 %19107)
  %19109 = trunc i32 %19108 to i8
  %19110 = and i8 %19109, 1
  %19111 = xor i8 %19110, 1
  %19112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19111, i8* %19112, align 1
  %19113 = xor i32 %19099, %19097
  %19114 = xor i32 %19113, %19100
  %19115 = lshr i32 %19114, 4
  %19116 = trunc i32 %19115 to i8
  %19117 = and i8 %19116, 1
  %19118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19117, i8* %19118, align 1
  %19119 = icmp eq i32 %19100, 0
  %19120 = zext i1 %19119 to i8
  %19121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19120, i8* %19121, align 1
  %19122 = lshr i32 %19100, 31
  %19123 = trunc i32 %19122 to i8
  %19124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19123, i8* %19124, align 1
  %19125 = lshr i32 %19097, 31
  %19126 = lshr i32 %19099, 31
  %19127 = xor i32 %19122, %19125
  %19128 = xor i32 %19122, %19126
  %19129 = add i32 %19127, %19128
  %19130 = icmp eq i32 %19129, 2
  %19131 = zext i1 %19130 to i8
  %19132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19131, i8* %19132, align 1
  store %struct.Memory* %loadMem_4af872, %struct.Memory** %MEMORY
  %loadMem_4af878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19134 = getelementptr inbounds %struct.GPR, %struct.GPR* %19133, i32 0, i32 33
  %19135 = getelementptr inbounds %struct.Reg, %struct.Reg* %19134, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %19135 to i64*
  %19136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19137 = getelementptr inbounds %struct.GPR, %struct.GPR* %19136, i32 0, i32 7
  %19138 = getelementptr inbounds %struct.Reg, %struct.Reg* %19137, i32 0, i32 0
  %EDX.i647 = bitcast %union.anon* %19138 to i32*
  %19139 = load i32, i32* %EDX.i647
  %19140 = zext i32 %19139 to i64
  %19141 = load i64, i64* %PC.i646
  %19142 = add i64 %19141, 3
  store i64 %19142, i64* %PC.i646
  %19143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19143, align 1
  %19144 = and i32 %19139, 255
  %19145 = call i32 @llvm.ctpop.i32(i32 %19144)
  %19146 = trunc i32 %19145 to i8
  %19147 = and i8 %19146, 1
  %19148 = xor i8 %19147, 1
  %19149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19148, i8* %19149, align 1
  %19150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19150, align 1
  %19151 = icmp eq i32 %19139, 0
  %19152 = zext i1 %19151 to i8
  %19153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19152, i8* %19153, align 1
  %19154 = lshr i32 %19139, 31
  %19155 = trunc i32 %19154 to i8
  %19156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19155, i8* %19156, align 1
  %19157 = lshr i32 %19139, 31
  %19158 = xor i32 %19154, %19157
  %19159 = add i32 %19158, %19157
  %19160 = icmp eq i32 %19159, 2
  %19161 = zext i1 %19160 to i8
  %19162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19161, i8* %19162, align 1
  store %struct.Memory* %loadMem_4af878, %struct.Memory** %MEMORY
  %loadMem_4af87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19164 = getelementptr inbounds %struct.GPR, %struct.GPR* %19163, i32 0, i32 33
  %19165 = getelementptr inbounds %struct.Reg, %struct.Reg* %19164, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %19165 to i64*
  %19166 = load i64, i64* %PC.i645
  %19167 = add i64 %19166, 19
  %19168 = load i64, i64* %PC.i645
  %19169 = add i64 %19168, 6
  %19170 = load i64, i64* %PC.i645
  %19171 = add i64 %19170, 6
  store i64 %19171, i64* %PC.i645
  %19172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19173 = load i8, i8* %19172, align 1
  %19174 = icmp ne i8 %19173, 0
  %19175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19176 = load i8, i8* %19175, align 1
  %19177 = icmp ne i8 %19176, 0
  %19178 = xor i1 %19174, %19177
  %19179 = xor i1 %19178, true
  %19180 = zext i1 %19179 to i8
  store i8 %19180, i8* %BRANCH_TAKEN, align 1
  %19181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19182 = select i1 %19178, i64 %19169, i64 %19167
  store i64 %19182, i64* %19181, align 8
  store %struct.Memory* %loadMem_4af87b, %struct.Memory** %MEMORY
  %loadBr_4af87b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af87b = icmp eq i8 %loadBr_4af87b, 1
  br i1 %cmpBr_4af87b, label %block_.L_4af88e, label %block_4af881

block_4af881:                                     ; preds = %routine_sarl__cl___edx.exit654
  %loadMem_4af881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19184 = getelementptr inbounds %struct.GPR, %struct.GPR* %19183, i32 0, i32 33
  %19185 = getelementptr inbounds %struct.Reg, %struct.Reg* %19184, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %19185 to i64*
  %19186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19187 = getelementptr inbounds %struct.GPR, %struct.GPR* %19186, i32 0, i32 1
  %19188 = getelementptr inbounds %struct.Reg, %struct.Reg* %19187, i32 0, i32 0
  %EAX.i643 = bitcast %union.anon* %19188 to i32*
  %19189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19190 = getelementptr inbounds %struct.GPR, %struct.GPR* %19189, i32 0, i32 1
  %19191 = getelementptr inbounds %struct.Reg, %struct.Reg* %19190, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %19191 to i64*
  %19192 = load i64, i64* %RAX.i644
  %19193 = load i32, i32* %EAX.i643
  %19194 = zext i32 %19193 to i64
  %19195 = load i64, i64* %PC.i642
  %19196 = add i64 %19195, 2
  store i64 %19196, i64* %PC.i642
  %19197 = xor i64 %19194, %19192
  %19198 = trunc i64 %19197 to i32
  %19199 = and i64 %19197, 4294967295
  store i64 %19199, i64* %RAX.i644, align 8
  %19200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19200, align 1
  %19201 = and i32 %19198, 255
  %19202 = call i32 @llvm.ctpop.i32(i32 %19201)
  %19203 = trunc i32 %19202 to i8
  %19204 = and i8 %19203, 1
  %19205 = xor i8 %19204, 1
  %19206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19205, i8* %19206, align 1
  %19207 = icmp eq i32 %19198, 0
  %19208 = zext i1 %19207 to i8
  %19209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19208, i8* %19209, align 1
  %19210 = lshr i32 %19198, 31
  %19211 = trunc i32 %19210 to i8
  %19212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19211, i8* %19212, align 1
  %19213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19213, align 1
  %19214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19214, align 1
  store %struct.Memory* %loadMem_4af881, %struct.Memory** %MEMORY
  %loadMem_4af883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19216 = getelementptr inbounds %struct.GPR, %struct.GPR* %19215, i32 0, i32 33
  %19217 = getelementptr inbounds %struct.Reg, %struct.Reg* %19216, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %19217 to i64*
  %19218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19219 = getelementptr inbounds %struct.GPR, %struct.GPR* %19218, i32 0, i32 1
  %19220 = getelementptr inbounds %struct.Reg, %struct.Reg* %19219, i32 0, i32 0
  %EAX.i640 = bitcast %union.anon* %19220 to i32*
  %19221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19222 = getelementptr inbounds %struct.GPR, %struct.GPR* %19221, i32 0, i32 15
  %19223 = getelementptr inbounds %struct.Reg, %struct.Reg* %19222, i32 0, i32 0
  %RBP.i641 = bitcast %union.anon* %19223 to i64*
  %19224 = load i64, i64* %RBP.i641
  %19225 = sub i64 %19224, 35464
  %19226 = load i32, i32* %EAX.i640
  %19227 = zext i32 %19226 to i64
  %19228 = load i64, i64* %PC.i639
  %19229 = add i64 %19228, 6
  store i64 %19229, i64* %PC.i639
  %19230 = inttoptr i64 %19225 to i32*
  store i32 %19226, i32* %19230
  store %struct.Memory* %loadMem_4af883, %struct.Memory** %MEMORY
  %loadMem_4af889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19232 = getelementptr inbounds %struct.GPR, %struct.GPR* %19231, i32 0, i32 33
  %19233 = getelementptr inbounds %struct.Reg, %struct.Reg* %19232, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %19233 to i64*
  %19234 = load i64, i64* %PC.i638
  %19235 = add i64 %19234, 204
  %19236 = load i64, i64* %PC.i638
  %19237 = add i64 %19236, 5
  store i64 %19237, i64* %PC.i638
  %19238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19235, i64* %19238, align 8
  store %struct.Memory* %loadMem_4af889, %struct.Memory** %MEMORY
  br label %block_.L_4af955

block_.L_4af88e:                                  ; preds = %routine_sarl__cl___edx.exit654
  %loadMem_4af88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19240 = getelementptr inbounds %struct.GPR, %struct.GPR* %19239, i32 0, i32 33
  %19241 = getelementptr inbounds %struct.Reg, %struct.Reg* %19240, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %19241 to i64*
  %19242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19243 = getelementptr inbounds %struct.GPR, %struct.GPR* %19242, i32 0, i32 1
  %19244 = getelementptr inbounds %struct.Reg, %struct.Reg* %19243, i32 0, i32 0
  %RAX.i637 = bitcast %union.anon* %19244 to i64*
  %19245 = load i64, i64* %PC.i636
  %19246 = add i64 %19245, 8
  store i64 %19246, i64* %PC.i636
  %19247 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %19247, i64* %RAX.i637, align 8
  store %struct.Memory* %loadMem_4af88e, %struct.Memory** %MEMORY
  %loadMem_4af896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19249 = getelementptr inbounds %struct.GPR, %struct.GPR* %19248, i32 0, i32 33
  %19250 = getelementptr inbounds %struct.Reg, %struct.Reg* %19249, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %19250 to i64*
  %19251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19252 = getelementptr inbounds %struct.GPR, %struct.GPR* %19251, i32 0, i32 5
  %19253 = getelementptr inbounds %struct.Reg, %struct.Reg* %19252, i32 0, i32 0
  %RCX.i634 = bitcast %union.anon* %19253 to i64*
  %19254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19255 = getelementptr inbounds %struct.GPR, %struct.GPR* %19254, i32 0, i32 15
  %19256 = getelementptr inbounds %struct.Reg, %struct.Reg* %19255, i32 0, i32 0
  %RBP.i635 = bitcast %union.anon* %19256 to i64*
  %19257 = load i64, i64* %RBP.i635
  %19258 = sub i64 %19257, 12
  %19259 = load i64, i64* %PC.i633
  %19260 = add i64 %19259, 4
  store i64 %19260, i64* %PC.i633
  %19261 = inttoptr i64 %19258 to i32*
  %19262 = load i32, i32* %19261
  %19263 = sext i32 %19262 to i64
  store i64 %19263, i64* %RCX.i634, align 8
  store %struct.Memory* %loadMem_4af896, %struct.Memory** %MEMORY
  %loadMem_4af89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19265 = getelementptr inbounds %struct.GPR, %struct.GPR* %19264, i32 0, i32 33
  %19266 = getelementptr inbounds %struct.Reg, %struct.Reg* %19265, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %19266 to i64*
  %19267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19268 = getelementptr inbounds %struct.GPR, %struct.GPR* %19267, i32 0, i32 1
  %19269 = getelementptr inbounds %struct.Reg, %struct.Reg* %19268, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %19269 to i64*
  %19270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19271 = getelementptr inbounds %struct.GPR, %struct.GPR* %19270, i32 0, i32 5
  %19272 = getelementptr inbounds %struct.Reg, %struct.Reg* %19271, i32 0, i32 0
  %RCX.i632 = bitcast %union.anon* %19272 to i64*
  %19273 = load i64, i64* %RAX.i631
  %19274 = load i64, i64* %RCX.i632
  %19275 = mul i64 %19274, 8
  %19276 = add i64 %19275, %19273
  %19277 = load i64, i64* %PC.i630
  %19278 = add i64 %19277, 4
  store i64 %19278, i64* %PC.i630
  %19279 = inttoptr i64 %19276 to i64*
  %19280 = load i64, i64* %19279
  store i64 %19280, i64* %RAX.i631, align 8
  store %struct.Memory* %loadMem_4af89a, %struct.Memory** %MEMORY
  %loadMem_4af89e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19282 = getelementptr inbounds %struct.GPR, %struct.GPR* %19281, i32 0, i32 33
  %19283 = getelementptr inbounds %struct.Reg, %struct.Reg* %19282, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %19283 to i64*
  %19284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19285 = getelementptr inbounds %struct.GPR, %struct.GPR* %19284, i32 0, i32 1
  %19286 = getelementptr inbounds %struct.Reg, %struct.Reg* %19285, i32 0, i32 0
  %RAX.i629 = bitcast %union.anon* %19286 to i64*
  %19287 = load i64, i64* %RAX.i629
  %19288 = add i64 %19287, 6448
  %19289 = load i64, i64* %PC.i628
  %19290 = add i64 %19289, 7
  store i64 %19290, i64* %PC.i628
  %19291 = inttoptr i64 %19288 to i64*
  %19292 = load i64, i64* %19291
  store i64 %19292, i64* %RAX.i629, align 8
  store %struct.Memory* %loadMem_4af89e, %struct.Memory** %MEMORY
  %loadMem_4af8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19294 = getelementptr inbounds %struct.GPR, %struct.GPR* %19293, i32 0, i32 33
  %19295 = getelementptr inbounds %struct.Reg, %struct.Reg* %19294, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %19295 to i64*
  %19296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19297 = getelementptr inbounds %struct.GPR, %struct.GPR* %19296, i32 0, i32 5
  %19298 = getelementptr inbounds %struct.Reg, %struct.Reg* %19297, i32 0, i32 0
  %RCX.i626 = bitcast %union.anon* %19298 to i64*
  %19299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19300 = getelementptr inbounds %struct.GPR, %struct.GPR* %19299, i32 0, i32 15
  %19301 = getelementptr inbounds %struct.Reg, %struct.Reg* %19300, i32 0, i32 0
  %RBP.i627 = bitcast %union.anon* %19301 to i64*
  %19302 = load i64, i64* %RBP.i627
  %19303 = sub i64 %19302, 4
  %19304 = load i64, i64* %PC.i625
  %19305 = add i64 %19304, 4
  store i64 %19305, i64* %PC.i625
  %19306 = inttoptr i64 %19303 to i32*
  %19307 = load i32, i32* %19306
  %19308 = sext i32 %19307 to i64
  store i64 %19308, i64* %RCX.i626, align 8
  store %struct.Memory* %loadMem_4af8a5, %struct.Memory** %MEMORY
  %loadMem_4af8a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19310 = getelementptr inbounds %struct.GPR, %struct.GPR* %19309, i32 0, i32 33
  %19311 = getelementptr inbounds %struct.Reg, %struct.Reg* %19310, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %19311 to i64*
  %19312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19313 = getelementptr inbounds %struct.GPR, %struct.GPR* %19312, i32 0, i32 1
  %19314 = getelementptr inbounds %struct.Reg, %struct.Reg* %19313, i32 0, i32 0
  %RAX.i623 = bitcast %union.anon* %19314 to i64*
  %19315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19316 = getelementptr inbounds %struct.GPR, %struct.GPR* %19315, i32 0, i32 5
  %19317 = getelementptr inbounds %struct.Reg, %struct.Reg* %19316, i32 0, i32 0
  %RCX.i624 = bitcast %union.anon* %19317 to i64*
  %19318 = load i64, i64* %RAX.i623
  %19319 = load i64, i64* %RCX.i624
  %19320 = mul i64 %19319, 8
  %19321 = add i64 %19320, %19318
  %19322 = load i64, i64* %PC.i622
  %19323 = add i64 %19322, 4
  store i64 %19323, i64* %PC.i622
  %19324 = inttoptr i64 %19321 to i64*
  %19325 = load i64, i64* %19324
  store i64 %19325, i64* %RAX.i623, align 8
  store %struct.Memory* %loadMem_4af8a9, %struct.Memory** %MEMORY
  %loadMem_4af8ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %19326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19327 = getelementptr inbounds %struct.GPR, %struct.GPR* %19326, i32 0, i32 33
  %19328 = getelementptr inbounds %struct.Reg, %struct.Reg* %19327, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %19328 to i64*
  %19329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19330 = getelementptr inbounds %struct.GPR, %struct.GPR* %19329, i32 0, i32 5
  %19331 = getelementptr inbounds %struct.Reg, %struct.Reg* %19330, i32 0, i32 0
  %RCX.i620 = bitcast %union.anon* %19331 to i64*
  %19332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19333 = getelementptr inbounds %struct.GPR, %struct.GPR* %19332, i32 0, i32 15
  %19334 = getelementptr inbounds %struct.Reg, %struct.Reg* %19333, i32 0, i32 0
  %RBP.i621 = bitcast %union.anon* %19334 to i64*
  %19335 = load i64, i64* %RBP.i621
  %19336 = sub i64 %19335, 8
  %19337 = load i64, i64* %PC.i619
  %19338 = add i64 %19337, 4
  store i64 %19338, i64* %PC.i619
  %19339 = inttoptr i64 %19336 to i32*
  %19340 = load i32, i32* %19339
  %19341 = sext i32 %19340 to i64
  store i64 %19341, i64* %RCX.i620, align 8
  store %struct.Memory* %loadMem_4af8ad, %struct.Memory** %MEMORY
  %loadMem_4af8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19343 = getelementptr inbounds %struct.GPR, %struct.GPR* %19342, i32 0, i32 33
  %19344 = getelementptr inbounds %struct.Reg, %struct.Reg* %19343, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %19344 to i64*
  %19345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19346 = getelementptr inbounds %struct.GPR, %struct.GPR* %19345, i32 0, i32 1
  %19347 = getelementptr inbounds %struct.Reg, %struct.Reg* %19346, i32 0, i32 0
  %RAX.i616 = bitcast %union.anon* %19347 to i64*
  %19348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19349 = getelementptr inbounds %struct.GPR, %struct.GPR* %19348, i32 0, i32 5
  %19350 = getelementptr inbounds %struct.Reg, %struct.Reg* %19349, i32 0, i32 0
  %RCX.i617 = bitcast %union.anon* %19350 to i64*
  %19351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19352 = getelementptr inbounds %struct.GPR, %struct.GPR* %19351, i32 0, i32 7
  %19353 = getelementptr inbounds %struct.Reg, %struct.Reg* %19352, i32 0, i32 0
  %RDX.i618 = bitcast %union.anon* %19353 to i64*
  %19354 = load i64, i64* %RAX.i616
  %19355 = load i64, i64* %RCX.i617
  %19356 = mul i64 %19355, 2
  %19357 = add i64 %19356, %19354
  %19358 = load i64, i64* %PC.i615
  %19359 = add i64 %19358, 4
  store i64 %19359, i64* %PC.i615
  %19360 = inttoptr i64 %19357 to i16*
  %19361 = load i16, i16* %19360
  %19362 = zext i16 %19361 to i64
  store i64 %19362, i64* %RDX.i618, align 8
  store %struct.Memory* %loadMem_4af8b1, %struct.Memory** %MEMORY
  %loadMem_4af8b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19364 = getelementptr inbounds %struct.GPR, %struct.GPR* %19363, i32 0, i32 33
  %19365 = getelementptr inbounds %struct.Reg, %struct.Reg* %19364, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %19365 to i64*
  %19366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19367 = getelementptr inbounds %struct.GPR, %struct.GPR* %19366, i32 0, i32 7
  %19368 = getelementptr inbounds %struct.Reg, %struct.Reg* %19367, i32 0, i32 0
  %RDX.i613 = bitcast %union.anon* %19368 to i64*
  %19369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19370 = getelementptr inbounds %struct.GPR, %struct.GPR* %19369, i32 0, i32 15
  %19371 = getelementptr inbounds %struct.Reg, %struct.Reg* %19370, i32 0, i32 0
  %RBP.i614 = bitcast %union.anon* %19371 to i64*
  %19372 = load i64, i64* %RDX.i613
  %19373 = load i64, i64* %RBP.i614
  %19374 = sub i64 %19373, 35400
  %19375 = load i64, i64* %PC.i612
  %19376 = add i64 %19375, 7
  store i64 %19376, i64* %PC.i612
  %19377 = inttoptr i64 %19374 to i32*
  %19378 = load i32, i32* %19377
  %19379 = shl i64 %19372, 32
  %19380 = ashr exact i64 %19379, 32
  %19381 = sext i32 %19378 to i64
  %19382 = mul i64 %19381, %19380
  %19383 = trunc i64 %19382 to i32
  %19384 = and i64 %19382, 4294967295
  store i64 %19384, i64* %RDX.i613, align 8
  %19385 = shl i64 %19382, 32
  %19386 = ashr exact i64 %19385, 32
  %19387 = icmp ne i64 %19386, %19382
  %19388 = zext i1 %19387 to i8
  %19389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19388, i8* %19389, align 1
  %19390 = and i32 %19383, 255
  %19391 = call i32 @llvm.ctpop.i32(i32 %19390)
  %19392 = trunc i32 %19391 to i8
  %19393 = and i8 %19392, 1
  %19394 = xor i8 %19393, 1
  %19395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19394, i8* %19395, align 1
  %19396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19396, align 1
  %19397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19397, align 1
  %19398 = lshr i32 %19383, 31
  %19399 = trunc i32 %19398 to i8
  %19400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19399, i8* %19400, align 1
  %19401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19388, i8* %19401, align 1
  store %struct.Memory* %loadMem_4af8b5, %struct.Memory** %MEMORY
  %loadMem_4af8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %19402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19403 = getelementptr inbounds %struct.GPR, %struct.GPR* %19402, i32 0, i32 33
  %19404 = getelementptr inbounds %struct.Reg, %struct.Reg* %19403, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %19404 to i64*
  %19405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19406 = getelementptr inbounds %struct.GPR, %struct.GPR* %19405, i32 0, i32 7
  %19407 = getelementptr inbounds %struct.Reg, %struct.Reg* %19406, i32 0, i32 0
  %RDX.i611 = bitcast %union.anon* %19407 to i64*
  %19408 = load i64, i64* %RDX.i611
  %19409 = load i64, i64* %PC.i610
  %19410 = add i64 %19409, 7
  store i64 %19410, i64* %PC.i610
  %19411 = trunc i64 %19408 to i32
  %19412 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %19413 = add i32 %19412, %19411
  %19414 = zext i32 %19413 to i64
  store i64 %19414, i64* %RDX.i611, align 8
  %19415 = icmp ult i32 %19413, %19411
  %19416 = icmp ult i32 %19413, %19412
  %19417 = or i1 %19415, %19416
  %19418 = zext i1 %19417 to i8
  %19419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19418, i8* %19419, align 1
  %19420 = and i32 %19413, 255
  %19421 = call i32 @llvm.ctpop.i32(i32 %19420)
  %19422 = trunc i32 %19421 to i8
  %19423 = and i8 %19422, 1
  %19424 = xor i8 %19423, 1
  %19425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19424, i8* %19425, align 1
  %19426 = xor i32 %19412, %19411
  %19427 = xor i32 %19426, %19413
  %19428 = lshr i32 %19427, 4
  %19429 = trunc i32 %19428 to i8
  %19430 = and i8 %19429, 1
  %19431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19430, i8* %19431, align 1
  %19432 = icmp eq i32 %19413, 0
  %19433 = zext i1 %19432 to i8
  %19434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19433, i8* %19434, align 1
  %19435 = lshr i32 %19413, 31
  %19436 = trunc i32 %19435 to i8
  %19437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19436, i8* %19437, align 1
  %19438 = lshr i32 %19411, 31
  %19439 = lshr i32 %19412, 31
  %19440 = xor i32 %19435, %19438
  %19441 = xor i32 %19435, %19439
  %19442 = add i32 %19440, %19441
  %19443 = icmp eq i32 %19442, 2
  %19444 = zext i1 %19443 to i8
  %19445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19444, i8* %19445, align 1
  store %struct.Memory* %loadMem_4af8bc, %struct.Memory** %MEMORY
  %loadMem_4af8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19447 = getelementptr inbounds %struct.GPR, %struct.GPR* %19446, i32 0, i32 33
  %19448 = getelementptr inbounds %struct.Reg, %struct.Reg* %19447, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %19448 to i64*
  %19449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19450 = getelementptr inbounds %struct.GPR, %struct.GPR* %19449, i32 0, i32 5
  %19451 = getelementptr inbounds %struct.Reg, %struct.Reg* %19450, i32 0, i32 0
  %RCX.i609 = bitcast %union.anon* %19451 to i64*
  %19452 = load i64, i64* %PC.i608
  %19453 = add i64 %19452, 7
  store i64 %19453, i64* %PC.i608
  %19454 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %19455 = zext i32 %19454 to i64
  store i64 %19455, i64* %RCX.i609, align 8
  store %struct.Memory* %loadMem_4af8c3, %struct.Memory** %MEMORY
  %loadMem_4af8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %19456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19457 = getelementptr inbounds %struct.GPR, %struct.GPR* %19456, i32 0, i32 33
  %19458 = getelementptr inbounds %struct.Reg, %struct.Reg* %19457, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %19458 to i64*
  %19459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19460 = getelementptr inbounds %struct.GPR, %struct.GPR* %19459, i32 0, i32 5
  %19461 = getelementptr inbounds %struct.Reg, %struct.Reg* %19460, i32 0, i32 0
  %19462 = bitcast %union.anon* %19461 to %struct.anon.2*
  %CL.i605 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %19462, i32 0, i32 0
  %19463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19464 = getelementptr inbounds %struct.GPR, %struct.GPR* %19463, i32 0, i32 7
  %19465 = getelementptr inbounds %struct.Reg, %struct.Reg* %19464, i32 0, i32 0
  %RDX.i606 = bitcast %union.anon* %19465 to i64*
  %19466 = load i64, i64* %RDX.i606
  %19467 = load i8, i8* %CL.i605
  %19468 = zext i8 %19467 to i64
  %19469 = load i64, i64* %PC.i604
  %19470 = add i64 %19469, 2
  store i64 %19470, i64* %PC.i604
  %19471 = trunc i64 %19468 to i5
  switch i5 %19471, label %19475 [
    i5 0, label %routine_sarl__cl___edx.exit607
    i5 1, label %19472
  ]

; <label>:19472:                                  ; preds = %block_.L_4af88e
  %19473 = shl i64 %19466, 32
  %19474 = ashr i64 %19473, 33
  br label %19482

; <label>:19475:                                  ; preds = %block_.L_4af88e
  %19476 = and i64 %19468, 31
  %19477 = add i64 %19476, -1
  %19478 = shl i64 %19466, 32
  %19479 = ashr exact i64 %19478, 32
  %19480 = ashr i64 %19479, %19477
  %19481 = lshr i64 %19480, 1
  br label %19482

; <label>:19482:                                  ; preds = %19475, %19472
  %19483 = phi i64 [ %19481, %19475 ], [ %19474, %19472 ]
  %19484 = phi i64 [ %19480, %19475 ], [ %19466, %19472 ]
  %19485 = trunc i64 %19484 to i8
  %19486 = and i8 %19485, 1
  %19487 = trunc i64 %19483 to i32
  %19488 = and i64 %19483, 4294967295
  store i64 %19488, i64* %RDX.i606, align 8
  %19489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19486, i8* %19489, align 1
  %19490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19491 = and i32 %19487, 255
  %19492 = call i32 @llvm.ctpop.i32(i32 %19491)
  %19493 = trunc i32 %19492 to i8
  %19494 = and i8 %19493, 1
  %19495 = xor i8 %19494, 1
  store i8 %19495, i8* %19490, align 1
  %19496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19496, align 1
  %19497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19498 = icmp eq i32 %19487, 0
  %19499 = zext i1 %19498 to i8
  store i8 %19499, i8* %19497, align 1
  %19500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19501 = lshr i32 %19487, 31
  %19502 = trunc i32 %19501 to i8
  store i8 %19502, i8* %19500, align 1
  %19503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19503, align 1
  br label %routine_sarl__cl___edx.exit607

routine_sarl__cl___edx.exit607:                   ; preds = %block_.L_4af88e, %19482
  store %struct.Memory* %loadMem_4af8ca, %struct.Memory** %MEMORY
  %loadMem_4af8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %19504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19505 = getelementptr inbounds %struct.GPR, %struct.GPR* %19504, i32 0, i32 33
  %19506 = getelementptr inbounds %struct.Reg, %struct.Reg* %19505, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %19506 to i64*
  %19507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19508 = getelementptr inbounds %struct.GPR, %struct.GPR* %19507, i32 0, i32 7
  %19509 = getelementptr inbounds %struct.Reg, %struct.Reg* %19508, i32 0, i32 0
  %RDX.i602 = bitcast %union.anon* %19509 to i64*
  %19510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19511 = getelementptr inbounds %struct.GPR, %struct.GPR* %19510, i32 0, i32 15
  %19512 = getelementptr inbounds %struct.Reg, %struct.Reg* %19511, i32 0, i32 0
  %RBP.i603 = bitcast %union.anon* %19512 to i64*
  %19513 = load i64, i64* %RDX.i602
  %19514 = load i64, i64* %RBP.i603
  %19515 = sub i64 %19514, 35404
  %19516 = load i64, i64* %PC.i601
  %19517 = add i64 %19516, 6
  store i64 %19517, i64* %PC.i601
  %19518 = trunc i64 %19513 to i32
  %19519 = inttoptr i64 %19515 to i32*
  %19520 = load i32, i32* %19519
  %19521 = add i32 %19520, %19518
  %19522 = zext i32 %19521 to i64
  store i64 %19522, i64* %RDX.i602, align 8
  %19523 = icmp ult i32 %19521, %19518
  %19524 = icmp ult i32 %19521, %19520
  %19525 = or i1 %19523, %19524
  %19526 = zext i1 %19525 to i8
  %19527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19526, i8* %19527, align 1
  %19528 = and i32 %19521, 255
  %19529 = call i32 @llvm.ctpop.i32(i32 %19528)
  %19530 = trunc i32 %19529 to i8
  %19531 = and i8 %19530, 1
  %19532 = xor i8 %19531, 1
  %19533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19532, i8* %19533, align 1
  %19534 = xor i32 %19520, %19518
  %19535 = xor i32 %19534, %19521
  %19536 = lshr i32 %19535, 4
  %19537 = trunc i32 %19536 to i8
  %19538 = and i8 %19537, 1
  %19539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19538, i8* %19539, align 1
  %19540 = icmp eq i32 %19521, 0
  %19541 = zext i1 %19540 to i8
  %19542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19541, i8* %19542, align 1
  %19543 = lshr i32 %19521, 31
  %19544 = trunc i32 %19543 to i8
  %19545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19544, i8* %19545, align 1
  %19546 = lshr i32 %19518, 31
  %19547 = lshr i32 %19520, 31
  %19548 = xor i32 %19543, %19546
  %19549 = xor i32 %19543, %19547
  %19550 = add i32 %19548, %19549
  %19551 = icmp eq i32 %19550, 2
  %19552 = zext i1 %19551 to i8
  %19553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19552, i8* %19553, align 1
  store %struct.Memory* %loadMem_4af8cc, %struct.Memory** %MEMORY
  %loadMem_4af8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19555 = getelementptr inbounds %struct.GPR, %struct.GPR* %19554, i32 0, i32 33
  %19556 = getelementptr inbounds %struct.Reg, %struct.Reg* %19555, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %19556 to i64*
  %19557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19558 = getelementptr inbounds %struct.GPR, %struct.GPR* %19557, i32 0, i32 1
  %19559 = getelementptr inbounds %struct.Reg, %struct.Reg* %19558, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %19559 to i64*
  %19560 = load i64, i64* %PC.i599
  %19561 = add i64 %19560, 8
  store i64 %19561, i64* %PC.i599
  %19562 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %19562, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_4af8d2, %struct.Memory** %MEMORY
  %loadMem_4af8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %19563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19564 = getelementptr inbounds %struct.GPR, %struct.GPR* %19563, i32 0, i32 33
  %19565 = getelementptr inbounds %struct.Reg, %struct.Reg* %19564, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %19565 to i64*
  %19566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19567 = getelementptr inbounds %struct.GPR, %struct.GPR* %19566, i32 0, i32 7
  %19568 = getelementptr inbounds %struct.Reg, %struct.Reg* %19567, i32 0, i32 0
  %EDX.i597 = bitcast %union.anon* %19568 to i32*
  %19569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19570 = getelementptr inbounds %struct.GPR, %struct.GPR* %19569, i32 0, i32 1
  %19571 = getelementptr inbounds %struct.Reg, %struct.Reg* %19570, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %19571 to i64*
  %19572 = load i32, i32* %EDX.i597
  %19573 = zext i32 %19572 to i64
  %19574 = load i64, i64* %RAX.i598
  %19575 = add i64 %19574, 72684
  %19576 = load i64, i64* %PC.i596
  %19577 = add i64 %19576, 6
  store i64 %19577, i64* %PC.i596
  %19578 = inttoptr i64 %19575 to i32*
  %19579 = load i32, i32* %19578
  %19580 = sub i32 %19572, %19579
  %19581 = icmp ult i32 %19572, %19579
  %19582 = zext i1 %19581 to i8
  %19583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19582, i8* %19583, align 1
  %19584 = and i32 %19580, 255
  %19585 = call i32 @llvm.ctpop.i32(i32 %19584)
  %19586 = trunc i32 %19585 to i8
  %19587 = and i8 %19586, 1
  %19588 = xor i8 %19587, 1
  %19589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19588, i8* %19589, align 1
  %19590 = xor i32 %19579, %19572
  %19591 = xor i32 %19590, %19580
  %19592 = lshr i32 %19591, 4
  %19593 = trunc i32 %19592 to i8
  %19594 = and i8 %19593, 1
  %19595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19594, i8* %19595, align 1
  %19596 = icmp eq i32 %19580, 0
  %19597 = zext i1 %19596 to i8
  %19598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19597, i8* %19598, align 1
  %19599 = lshr i32 %19580, 31
  %19600 = trunc i32 %19599 to i8
  %19601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19600, i8* %19601, align 1
  %19602 = lshr i32 %19572, 31
  %19603 = lshr i32 %19579, 31
  %19604 = xor i32 %19603, %19602
  %19605 = xor i32 %19599, %19602
  %19606 = add i32 %19605, %19604
  %19607 = icmp eq i32 %19606, 2
  %19608 = zext i1 %19607 to i8
  %19609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19608, i8* %19609, align 1
  store %struct.Memory* %loadMem_4af8da, %struct.Memory** %MEMORY
  %loadMem_4af8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19611 = getelementptr inbounds %struct.GPR, %struct.GPR* %19610, i32 0, i32 33
  %19612 = getelementptr inbounds %struct.Reg, %struct.Reg* %19611, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %19612 to i64*
  %19613 = load i64, i64* %PC.i595
  %19614 = add i64 %19613, 31
  %19615 = load i64, i64* %PC.i595
  %19616 = add i64 %19615, 6
  %19617 = load i64, i64* %PC.i595
  %19618 = add i64 %19617, 6
  store i64 %19618, i64* %PC.i595
  %19619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19620 = load i8, i8* %19619, align 1
  %19621 = icmp ne i8 %19620, 0
  %19622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19623 = load i8, i8* %19622, align 1
  %19624 = icmp ne i8 %19623, 0
  %19625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19626 = load i8, i8* %19625, align 1
  %19627 = icmp ne i8 %19626, 0
  %19628 = xor i1 %19624, %19627
  %19629 = or i1 %19621, %19628
  %19630 = zext i1 %19629 to i8
  store i8 %19630, i8* %BRANCH_TAKEN, align 1
  %19631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19632 = select i1 %19629, i64 %19614, i64 %19616
  store i64 %19632, i64* %19631, align 8
  store %struct.Memory* %loadMem_4af8e0, %struct.Memory** %MEMORY
  %loadBr_4af8e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af8e0 = icmp eq i8 %loadBr_4af8e0, 1
  br i1 %cmpBr_4af8e0, label %block_.L_4af8ff, label %block_4af8e6

block_4af8e6:                                     ; preds = %routine_sarl__cl___edx.exit607
  %loadMem_4af8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19634 = getelementptr inbounds %struct.GPR, %struct.GPR* %19633, i32 0, i32 33
  %19635 = getelementptr inbounds %struct.Reg, %struct.Reg* %19634, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %19635 to i64*
  %19636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19637 = getelementptr inbounds %struct.GPR, %struct.GPR* %19636, i32 0, i32 1
  %19638 = getelementptr inbounds %struct.Reg, %struct.Reg* %19637, i32 0, i32 0
  %RAX.i594 = bitcast %union.anon* %19638 to i64*
  %19639 = load i64, i64* %PC.i593
  %19640 = add i64 %19639, 8
  store i64 %19640, i64* %PC.i593
  %19641 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %19641, i64* %RAX.i594, align 8
  store %struct.Memory* %loadMem_4af8e6, %struct.Memory** %MEMORY
  %loadMem_4af8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %19642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19643 = getelementptr inbounds %struct.GPR, %struct.GPR* %19642, i32 0, i32 33
  %19644 = getelementptr inbounds %struct.Reg, %struct.Reg* %19643, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %19644 to i64*
  %19645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19646 = getelementptr inbounds %struct.GPR, %struct.GPR* %19645, i32 0, i32 1
  %19647 = getelementptr inbounds %struct.Reg, %struct.Reg* %19646, i32 0, i32 0
  %RAX.i591 = bitcast %union.anon* %19647 to i64*
  %19648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19649 = getelementptr inbounds %struct.GPR, %struct.GPR* %19648, i32 0, i32 5
  %19650 = getelementptr inbounds %struct.Reg, %struct.Reg* %19649, i32 0, i32 0
  %RCX.i592 = bitcast %union.anon* %19650 to i64*
  %19651 = load i64, i64* %RAX.i591
  %19652 = add i64 %19651, 72684
  %19653 = load i64, i64* %PC.i590
  %19654 = add i64 %19653, 6
  store i64 %19654, i64* %PC.i590
  %19655 = inttoptr i64 %19652 to i32*
  %19656 = load i32, i32* %19655
  %19657 = zext i32 %19656 to i64
  store i64 %19657, i64* %RCX.i592, align 8
  store %struct.Memory* %loadMem_4af8ee, %struct.Memory** %MEMORY
  %loadMem_4af8f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19659 = getelementptr inbounds %struct.GPR, %struct.GPR* %19658, i32 0, i32 33
  %19660 = getelementptr inbounds %struct.Reg, %struct.Reg* %19659, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %19660 to i64*
  %19661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19662 = getelementptr inbounds %struct.GPR, %struct.GPR* %19661, i32 0, i32 5
  %19663 = getelementptr inbounds %struct.Reg, %struct.Reg* %19662, i32 0, i32 0
  %ECX.i588 = bitcast %union.anon* %19663 to i32*
  %19664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19665 = getelementptr inbounds %struct.GPR, %struct.GPR* %19664, i32 0, i32 15
  %19666 = getelementptr inbounds %struct.Reg, %struct.Reg* %19665, i32 0, i32 0
  %RBP.i589 = bitcast %union.anon* %19666 to i64*
  %19667 = load i64, i64* %RBP.i589
  %19668 = sub i64 %19667, 35468
  %19669 = load i32, i32* %ECX.i588
  %19670 = zext i32 %19669 to i64
  %19671 = load i64, i64* %PC.i587
  %19672 = add i64 %19671, 6
  store i64 %19672, i64* %PC.i587
  %19673 = inttoptr i64 %19668 to i32*
  store i32 %19669, i32* %19673
  store %struct.Memory* %loadMem_4af8f4, %struct.Memory** %MEMORY
  %loadMem_4af8fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %19674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19675 = getelementptr inbounds %struct.GPR, %struct.GPR* %19674, i32 0, i32 33
  %19676 = getelementptr inbounds %struct.Reg, %struct.Reg* %19675, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %19676 to i64*
  %19677 = load i64, i64* %PC.i586
  %19678 = add i64 %19677, 79
  %19679 = load i64, i64* %PC.i586
  %19680 = add i64 %19679, 5
  store i64 %19680, i64* %PC.i586
  %19681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19678, i64* %19681, align 8
  store %struct.Memory* %loadMem_4af8fa, %struct.Memory** %MEMORY
  br label %block_.L_4af949

block_.L_4af8ff:                                  ; preds = %routine_sarl__cl___edx.exit607
  %loadMem_4af8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %19682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19683 = getelementptr inbounds %struct.GPR, %struct.GPR* %19682, i32 0, i32 33
  %19684 = getelementptr inbounds %struct.Reg, %struct.Reg* %19683, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %19684 to i64*
  %19685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19686 = getelementptr inbounds %struct.GPR, %struct.GPR* %19685, i32 0, i32 1
  %19687 = getelementptr inbounds %struct.Reg, %struct.Reg* %19686, i32 0, i32 0
  %RAX.i585 = bitcast %union.anon* %19687 to i64*
  %19688 = load i64, i64* %PC.i584
  %19689 = add i64 %19688, 8
  store i64 %19689, i64* %PC.i584
  %19690 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %19690, i64* %RAX.i585, align 8
  store %struct.Memory* %loadMem_4af8ff, %struct.Memory** %MEMORY
  %loadMem_4af907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19692 = getelementptr inbounds %struct.GPR, %struct.GPR* %19691, i32 0, i32 33
  %19693 = getelementptr inbounds %struct.Reg, %struct.Reg* %19692, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %19693 to i64*
  %19694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19695 = getelementptr inbounds %struct.GPR, %struct.GPR* %19694, i32 0, i32 5
  %19696 = getelementptr inbounds %struct.Reg, %struct.Reg* %19695, i32 0, i32 0
  %RCX.i582 = bitcast %union.anon* %19696 to i64*
  %19697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19698 = getelementptr inbounds %struct.GPR, %struct.GPR* %19697, i32 0, i32 15
  %19699 = getelementptr inbounds %struct.Reg, %struct.Reg* %19698, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %19699 to i64*
  %19700 = load i64, i64* %RBP.i583
  %19701 = sub i64 %19700, 12
  %19702 = load i64, i64* %PC.i581
  %19703 = add i64 %19702, 4
  store i64 %19703, i64* %PC.i581
  %19704 = inttoptr i64 %19701 to i32*
  %19705 = load i32, i32* %19704
  %19706 = sext i32 %19705 to i64
  store i64 %19706, i64* %RCX.i582, align 8
  store %struct.Memory* %loadMem_4af907, %struct.Memory** %MEMORY
  %loadMem_4af90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19708 = getelementptr inbounds %struct.GPR, %struct.GPR* %19707, i32 0, i32 33
  %19709 = getelementptr inbounds %struct.Reg, %struct.Reg* %19708, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %19709 to i64*
  %19710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19711 = getelementptr inbounds %struct.GPR, %struct.GPR* %19710, i32 0, i32 1
  %19712 = getelementptr inbounds %struct.Reg, %struct.Reg* %19711, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %19712 to i64*
  %19713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19714 = getelementptr inbounds %struct.GPR, %struct.GPR* %19713, i32 0, i32 5
  %19715 = getelementptr inbounds %struct.Reg, %struct.Reg* %19714, i32 0, i32 0
  %RCX.i580 = bitcast %union.anon* %19715 to i64*
  %19716 = load i64, i64* %RAX.i579
  %19717 = load i64, i64* %RCX.i580
  %19718 = mul i64 %19717, 8
  %19719 = add i64 %19718, %19716
  %19720 = load i64, i64* %PC.i578
  %19721 = add i64 %19720, 4
  store i64 %19721, i64* %PC.i578
  %19722 = inttoptr i64 %19719 to i64*
  %19723 = load i64, i64* %19722
  store i64 %19723, i64* %RAX.i579, align 8
  store %struct.Memory* %loadMem_4af90b, %struct.Memory** %MEMORY
  %loadMem_4af90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19725 = getelementptr inbounds %struct.GPR, %struct.GPR* %19724, i32 0, i32 33
  %19726 = getelementptr inbounds %struct.Reg, %struct.Reg* %19725, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %19726 to i64*
  %19727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19728 = getelementptr inbounds %struct.GPR, %struct.GPR* %19727, i32 0, i32 1
  %19729 = getelementptr inbounds %struct.Reg, %struct.Reg* %19728, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %19729 to i64*
  %19730 = load i64, i64* %RAX.i577
  %19731 = add i64 %19730, 6448
  %19732 = load i64, i64* %PC.i576
  %19733 = add i64 %19732, 7
  store i64 %19733, i64* %PC.i576
  %19734 = inttoptr i64 %19731 to i64*
  %19735 = load i64, i64* %19734
  store i64 %19735, i64* %RAX.i577, align 8
  store %struct.Memory* %loadMem_4af90f, %struct.Memory** %MEMORY
  %loadMem_4af916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19737 = getelementptr inbounds %struct.GPR, %struct.GPR* %19736, i32 0, i32 33
  %19738 = getelementptr inbounds %struct.Reg, %struct.Reg* %19737, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %19738 to i64*
  %19739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19740 = getelementptr inbounds %struct.GPR, %struct.GPR* %19739, i32 0, i32 5
  %19741 = getelementptr inbounds %struct.Reg, %struct.Reg* %19740, i32 0, i32 0
  %RCX.i574 = bitcast %union.anon* %19741 to i64*
  %19742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19743 = getelementptr inbounds %struct.GPR, %struct.GPR* %19742, i32 0, i32 15
  %19744 = getelementptr inbounds %struct.Reg, %struct.Reg* %19743, i32 0, i32 0
  %RBP.i575 = bitcast %union.anon* %19744 to i64*
  %19745 = load i64, i64* %RBP.i575
  %19746 = sub i64 %19745, 4
  %19747 = load i64, i64* %PC.i573
  %19748 = add i64 %19747, 4
  store i64 %19748, i64* %PC.i573
  %19749 = inttoptr i64 %19746 to i32*
  %19750 = load i32, i32* %19749
  %19751 = sext i32 %19750 to i64
  store i64 %19751, i64* %RCX.i574, align 8
  store %struct.Memory* %loadMem_4af916, %struct.Memory** %MEMORY
  %loadMem_4af91a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19753 = getelementptr inbounds %struct.GPR, %struct.GPR* %19752, i32 0, i32 33
  %19754 = getelementptr inbounds %struct.Reg, %struct.Reg* %19753, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %19754 to i64*
  %19755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19756 = getelementptr inbounds %struct.GPR, %struct.GPR* %19755, i32 0, i32 1
  %19757 = getelementptr inbounds %struct.Reg, %struct.Reg* %19756, i32 0, i32 0
  %RAX.i571 = bitcast %union.anon* %19757 to i64*
  %19758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19759 = getelementptr inbounds %struct.GPR, %struct.GPR* %19758, i32 0, i32 5
  %19760 = getelementptr inbounds %struct.Reg, %struct.Reg* %19759, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %19760 to i64*
  %19761 = load i64, i64* %RAX.i571
  %19762 = load i64, i64* %RCX.i572
  %19763 = mul i64 %19762, 8
  %19764 = add i64 %19763, %19761
  %19765 = load i64, i64* %PC.i570
  %19766 = add i64 %19765, 4
  store i64 %19766, i64* %PC.i570
  %19767 = inttoptr i64 %19764 to i64*
  %19768 = load i64, i64* %19767
  store i64 %19768, i64* %RAX.i571, align 8
  store %struct.Memory* %loadMem_4af91a, %struct.Memory** %MEMORY
  %loadMem_4af91e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19770 = getelementptr inbounds %struct.GPR, %struct.GPR* %19769, i32 0, i32 33
  %19771 = getelementptr inbounds %struct.Reg, %struct.Reg* %19770, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %19771 to i64*
  %19772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19773 = getelementptr inbounds %struct.GPR, %struct.GPR* %19772, i32 0, i32 5
  %19774 = getelementptr inbounds %struct.Reg, %struct.Reg* %19773, i32 0, i32 0
  %RCX.i568 = bitcast %union.anon* %19774 to i64*
  %19775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19776 = getelementptr inbounds %struct.GPR, %struct.GPR* %19775, i32 0, i32 15
  %19777 = getelementptr inbounds %struct.Reg, %struct.Reg* %19776, i32 0, i32 0
  %RBP.i569 = bitcast %union.anon* %19777 to i64*
  %19778 = load i64, i64* %RBP.i569
  %19779 = sub i64 %19778, 8
  %19780 = load i64, i64* %PC.i567
  %19781 = add i64 %19780, 4
  store i64 %19781, i64* %PC.i567
  %19782 = inttoptr i64 %19779 to i32*
  %19783 = load i32, i32* %19782
  %19784 = sext i32 %19783 to i64
  store i64 %19784, i64* %RCX.i568, align 8
  store %struct.Memory* %loadMem_4af91e, %struct.Memory** %MEMORY
  %loadMem_4af922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19786 = getelementptr inbounds %struct.GPR, %struct.GPR* %19785, i32 0, i32 33
  %19787 = getelementptr inbounds %struct.Reg, %struct.Reg* %19786, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %19787 to i64*
  %19788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19789 = getelementptr inbounds %struct.GPR, %struct.GPR* %19788, i32 0, i32 1
  %19790 = getelementptr inbounds %struct.Reg, %struct.Reg* %19789, i32 0, i32 0
  %RAX.i564 = bitcast %union.anon* %19790 to i64*
  %19791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19792 = getelementptr inbounds %struct.GPR, %struct.GPR* %19791, i32 0, i32 5
  %19793 = getelementptr inbounds %struct.Reg, %struct.Reg* %19792, i32 0, i32 0
  %RCX.i565 = bitcast %union.anon* %19793 to i64*
  %19794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19795 = getelementptr inbounds %struct.GPR, %struct.GPR* %19794, i32 0, i32 7
  %19796 = getelementptr inbounds %struct.Reg, %struct.Reg* %19795, i32 0, i32 0
  %RDX.i566 = bitcast %union.anon* %19796 to i64*
  %19797 = load i64, i64* %RAX.i564
  %19798 = load i64, i64* %RCX.i565
  %19799 = mul i64 %19798, 2
  %19800 = add i64 %19799, %19797
  %19801 = load i64, i64* %PC.i563
  %19802 = add i64 %19801, 4
  store i64 %19802, i64* %PC.i563
  %19803 = inttoptr i64 %19800 to i16*
  %19804 = load i16, i16* %19803
  %19805 = zext i16 %19804 to i64
  store i64 %19805, i64* %RDX.i566, align 8
  store %struct.Memory* %loadMem_4af922, %struct.Memory** %MEMORY
  %loadMem_4af926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19807 = getelementptr inbounds %struct.GPR, %struct.GPR* %19806, i32 0, i32 33
  %19808 = getelementptr inbounds %struct.Reg, %struct.Reg* %19807, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %19808 to i64*
  %19809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19810 = getelementptr inbounds %struct.GPR, %struct.GPR* %19809, i32 0, i32 7
  %19811 = getelementptr inbounds %struct.Reg, %struct.Reg* %19810, i32 0, i32 0
  %RDX.i561 = bitcast %union.anon* %19811 to i64*
  %19812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19813 = getelementptr inbounds %struct.GPR, %struct.GPR* %19812, i32 0, i32 15
  %19814 = getelementptr inbounds %struct.Reg, %struct.Reg* %19813, i32 0, i32 0
  %RBP.i562 = bitcast %union.anon* %19814 to i64*
  %19815 = load i64, i64* %RDX.i561
  %19816 = load i64, i64* %RBP.i562
  %19817 = sub i64 %19816, 35400
  %19818 = load i64, i64* %PC.i560
  %19819 = add i64 %19818, 7
  store i64 %19819, i64* %PC.i560
  %19820 = inttoptr i64 %19817 to i32*
  %19821 = load i32, i32* %19820
  %19822 = shl i64 %19815, 32
  %19823 = ashr exact i64 %19822, 32
  %19824 = sext i32 %19821 to i64
  %19825 = mul i64 %19824, %19823
  %19826 = trunc i64 %19825 to i32
  %19827 = and i64 %19825, 4294967295
  store i64 %19827, i64* %RDX.i561, align 8
  %19828 = shl i64 %19825, 32
  %19829 = ashr exact i64 %19828, 32
  %19830 = icmp ne i64 %19829, %19825
  %19831 = zext i1 %19830 to i8
  %19832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19831, i8* %19832, align 1
  %19833 = and i32 %19826, 255
  %19834 = call i32 @llvm.ctpop.i32(i32 %19833)
  %19835 = trunc i32 %19834 to i8
  %19836 = and i8 %19835, 1
  %19837 = xor i8 %19836, 1
  %19838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19837, i8* %19838, align 1
  %19839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19839, align 1
  %19840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19840, align 1
  %19841 = lshr i32 %19826, 31
  %19842 = trunc i32 %19841 to i8
  %19843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19842, i8* %19843, align 1
  %19844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19831, i8* %19844, align 1
  store %struct.Memory* %loadMem_4af926, %struct.Memory** %MEMORY
  %loadMem_4af92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19846 = getelementptr inbounds %struct.GPR, %struct.GPR* %19845, i32 0, i32 33
  %19847 = getelementptr inbounds %struct.Reg, %struct.Reg* %19846, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %19847 to i64*
  %19848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19849 = getelementptr inbounds %struct.GPR, %struct.GPR* %19848, i32 0, i32 7
  %19850 = getelementptr inbounds %struct.Reg, %struct.Reg* %19849, i32 0, i32 0
  %RDX.i559 = bitcast %union.anon* %19850 to i64*
  %19851 = load i64, i64* %RDX.i559
  %19852 = load i64, i64* %PC.i558
  %19853 = add i64 %19852, 7
  store i64 %19853, i64* %PC.i558
  %19854 = trunc i64 %19851 to i32
  %19855 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %19856 = add i32 %19855, %19854
  %19857 = zext i32 %19856 to i64
  store i64 %19857, i64* %RDX.i559, align 8
  %19858 = icmp ult i32 %19856, %19854
  %19859 = icmp ult i32 %19856, %19855
  %19860 = or i1 %19858, %19859
  %19861 = zext i1 %19860 to i8
  %19862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19861, i8* %19862, align 1
  %19863 = and i32 %19856, 255
  %19864 = call i32 @llvm.ctpop.i32(i32 %19863)
  %19865 = trunc i32 %19864 to i8
  %19866 = and i8 %19865, 1
  %19867 = xor i8 %19866, 1
  %19868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19867, i8* %19868, align 1
  %19869 = xor i32 %19855, %19854
  %19870 = xor i32 %19869, %19856
  %19871 = lshr i32 %19870, 4
  %19872 = trunc i32 %19871 to i8
  %19873 = and i8 %19872, 1
  %19874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19873, i8* %19874, align 1
  %19875 = icmp eq i32 %19856, 0
  %19876 = zext i1 %19875 to i8
  %19877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19876, i8* %19877, align 1
  %19878 = lshr i32 %19856, 31
  %19879 = trunc i32 %19878 to i8
  %19880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19879, i8* %19880, align 1
  %19881 = lshr i32 %19854, 31
  %19882 = lshr i32 %19855, 31
  %19883 = xor i32 %19878, %19881
  %19884 = xor i32 %19878, %19882
  %19885 = add i32 %19883, %19884
  %19886 = icmp eq i32 %19885, 2
  %19887 = zext i1 %19886 to i8
  %19888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19887, i8* %19888, align 1
  store %struct.Memory* %loadMem_4af92d, %struct.Memory** %MEMORY
  %loadMem_4af934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19890 = getelementptr inbounds %struct.GPR, %struct.GPR* %19889, i32 0, i32 33
  %19891 = getelementptr inbounds %struct.Reg, %struct.Reg* %19890, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %19891 to i64*
  %19892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19893 = getelementptr inbounds %struct.GPR, %struct.GPR* %19892, i32 0, i32 5
  %19894 = getelementptr inbounds %struct.Reg, %struct.Reg* %19893, i32 0, i32 0
  %RCX.i557 = bitcast %union.anon* %19894 to i64*
  %19895 = load i64, i64* %PC.i556
  %19896 = add i64 %19895, 7
  store i64 %19896, i64* %PC.i556
  %19897 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %19898 = zext i32 %19897 to i64
  store i64 %19898, i64* %RCX.i557, align 8
  store %struct.Memory* %loadMem_4af934, %struct.Memory** %MEMORY
  %loadMem_4af93b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19900 = getelementptr inbounds %struct.GPR, %struct.GPR* %19899, i32 0, i32 33
  %19901 = getelementptr inbounds %struct.Reg, %struct.Reg* %19900, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %19901 to i64*
  %19902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19903 = getelementptr inbounds %struct.GPR, %struct.GPR* %19902, i32 0, i32 5
  %19904 = getelementptr inbounds %struct.Reg, %struct.Reg* %19903, i32 0, i32 0
  %19905 = bitcast %union.anon* %19904 to %struct.anon.2*
  %CL.i554 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %19905, i32 0, i32 0
  %19906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19907 = getelementptr inbounds %struct.GPR, %struct.GPR* %19906, i32 0, i32 7
  %19908 = getelementptr inbounds %struct.Reg, %struct.Reg* %19907, i32 0, i32 0
  %RDX.i555 = bitcast %union.anon* %19908 to i64*
  %19909 = load i64, i64* %RDX.i555
  %19910 = load i8, i8* %CL.i554
  %19911 = zext i8 %19910 to i64
  %19912 = load i64, i64* %PC.i553
  %19913 = add i64 %19912, 2
  store i64 %19913, i64* %PC.i553
  %19914 = trunc i64 %19911 to i5
  switch i5 %19914, label %19918 [
    i5 0, label %routine_sarl__cl___edx.exit
    i5 1, label %19915
  ]

; <label>:19915:                                  ; preds = %block_.L_4af8ff
  %19916 = shl i64 %19909, 32
  %19917 = ashr i64 %19916, 33
  br label %19925

; <label>:19918:                                  ; preds = %block_.L_4af8ff
  %19919 = and i64 %19911, 31
  %19920 = add i64 %19919, -1
  %19921 = shl i64 %19909, 32
  %19922 = ashr exact i64 %19921, 32
  %19923 = ashr i64 %19922, %19920
  %19924 = lshr i64 %19923, 1
  br label %19925

; <label>:19925:                                  ; preds = %19918, %19915
  %19926 = phi i64 [ %19924, %19918 ], [ %19917, %19915 ]
  %19927 = phi i64 [ %19923, %19918 ], [ %19909, %19915 ]
  %19928 = trunc i64 %19927 to i8
  %19929 = and i8 %19928, 1
  %19930 = trunc i64 %19926 to i32
  %19931 = and i64 %19926, 4294967295
  store i64 %19931, i64* %RDX.i555, align 8
  %19932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19929, i8* %19932, align 1
  %19933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19934 = and i32 %19930, 255
  %19935 = call i32 @llvm.ctpop.i32(i32 %19934)
  %19936 = trunc i32 %19935 to i8
  %19937 = and i8 %19936, 1
  %19938 = xor i8 %19937, 1
  store i8 %19938, i8* %19933, align 1
  %19939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19939, align 1
  %19940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19941 = icmp eq i32 %19930, 0
  %19942 = zext i1 %19941 to i8
  store i8 %19942, i8* %19940, align 1
  %19943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19944 = lshr i32 %19930, 31
  %19945 = trunc i32 %19944 to i8
  store i8 %19945, i8* %19943, align 1
  %19946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19946, align 1
  br label %routine_sarl__cl___edx.exit

routine_sarl__cl___edx.exit:                      ; preds = %block_.L_4af8ff, %19925
  store %struct.Memory* %loadMem_4af93b, %struct.Memory** %MEMORY
  %loadMem_4af93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19948 = getelementptr inbounds %struct.GPR, %struct.GPR* %19947, i32 0, i32 33
  %19949 = getelementptr inbounds %struct.Reg, %struct.Reg* %19948, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %19949 to i64*
  %19950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19951 = getelementptr inbounds %struct.GPR, %struct.GPR* %19950, i32 0, i32 7
  %19952 = getelementptr inbounds %struct.Reg, %struct.Reg* %19951, i32 0, i32 0
  %RDX.i551 = bitcast %union.anon* %19952 to i64*
  %19953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19954 = getelementptr inbounds %struct.GPR, %struct.GPR* %19953, i32 0, i32 15
  %19955 = getelementptr inbounds %struct.Reg, %struct.Reg* %19954, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %19955 to i64*
  %19956 = load i64, i64* %RDX.i551
  %19957 = load i64, i64* %RBP.i552
  %19958 = sub i64 %19957, 35404
  %19959 = load i64, i64* %PC.i550
  %19960 = add i64 %19959, 6
  store i64 %19960, i64* %PC.i550
  %19961 = trunc i64 %19956 to i32
  %19962 = inttoptr i64 %19958 to i32*
  %19963 = load i32, i32* %19962
  %19964 = add i32 %19963, %19961
  %19965 = zext i32 %19964 to i64
  store i64 %19965, i64* %RDX.i551, align 8
  %19966 = icmp ult i32 %19964, %19961
  %19967 = icmp ult i32 %19964, %19963
  %19968 = or i1 %19966, %19967
  %19969 = zext i1 %19968 to i8
  %19970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19969, i8* %19970, align 1
  %19971 = and i32 %19964, 255
  %19972 = call i32 @llvm.ctpop.i32(i32 %19971)
  %19973 = trunc i32 %19972 to i8
  %19974 = and i8 %19973, 1
  %19975 = xor i8 %19974, 1
  %19976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19975, i8* %19976, align 1
  %19977 = xor i32 %19963, %19961
  %19978 = xor i32 %19977, %19964
  %19979 = lshr i32 %19978, 4
  %19980 = trunc i32 %19979 to i8
  %19981 = and i8 %19980, 1
  %19982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19981, i8* %19982, align 1
  %19983 = icmp eq i32 %19964, 0
  %19984 = zext i1 %19983 to i8
  %19985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19984, i8* %19985, align 1
  %19986 = lshr i32 %19964, 31
  %19987 = trunc i32 %19986 to i8
  %19988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19987, i8* %19988, align 1
  %19989 = lshr i32 %19961, 31
  %19990 = lshr i32 %19963, 31
  %19991 = xor i32 %19986, %19989
  %19992 = xor i32 %19986, %19990
  %19993 = add i32 %19991, %19992
  %19994 = icmp eq i32 %19993, 2
  %19995 = zext i1 %19994 to i8
  %19996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19995, i8* %19996, align 1
  store %struct.Memory* %loadMem_4af93d, %struct.Memory** %MEMORY
  %loadMem_4af943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19998 = getelementptr inbounds %struct.GPR, %struct.GPR* %19997, i32 0, i32 33
  %19999 = getelementptr inbounds %struct.Reg, %struct.Reg* %19998, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %19999 to i64*
  %20000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20001 = getelementptr inbounds %struct.GPR, %struct.GPR* %20000, i32 0, i32 7
  %20002 = getelementptr inbounds %struct.Reg, %struct.Reg* %20001, i32 0, i32 0
  %EDX.i548 = bitcast %union.anon* %20002 to i32*
  %20003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20004 = getelementptr inbounds %struct.GPR, %struct.GPR* %20003, i32 0, i32 15
  %20005 = getelementptr inbounds %struct.Reg, %struct.Reg* %20004, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %20005 to i64*
  %20006 = load i64, i64* %RBP.i549
  %20007 = sub i64 %20006, 35468
  %20008 = load i32, i32* %EDX.i548
  %20009 = zext i32 %20008 to i64
  %20010 = load i64, i64* %PC.i547
  %20011 = add i64 %20010, 6
  store i64 %20011, i64* %PC.i547
  %20012 = inttoptr i64 %20007 to i32*
  store i32 %20008, i32* %20012
  store %struct.Memory* %loadMem_4af943, %struct.Memory** %MEMORY
  br label %block_.L_4af949

block_.L_4af949:                                  ; preds = %routine_sarl__cl___edx.exit, %block_4af8e6
  %loadMem_4af949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20014 = getelementptr inbounds %struct.GPR, %struct.GPR* %20013, i32 0, i32 33
  %20015 = getelementptr inbounds %struct.Reg, %struct.Reg* %20014, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %20015 to i64*
  %20016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20017 = getelementptr inbounds %struct.GPR, %struct.GPR* %20016, i32 0, i32 1
  %20018 = getelementptr inbounds %struct.Reg, %struct.Reg* %20017, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %20018 to i64*
  %20019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20020 = getelementptr inbounds %struct.GPR, %struct.GPR* %20019, i32 0, i32 15
  %20021 = getelementptr inbounds %struct.Reg, %struct.Reg* %20020, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %20021 to i64*
  %20022 = load i64, i64* %RBP.i546
  %20023 = sub i64 %20022, 35468
  %20024 = load i64, i64* %PC.i544
  %20025 = add i64 %20024, 6
  store i64 %20025, i64* %PC.i544
  %20026 = inttoptr i64 %20023 to i32*
  %20027 = load i32, i32* %20026
  %20028 = zext i32 %20027 to i64
  store i64 %20028, i64* %RAX.i545, align 8
  store %struct.Memory* %loadMem_4af949, %struct.Memory** %MEMORY
  %loadMem_4af94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20030 = getelementptr inbounds %struct.GPR, %struct.GPR* %20029, i32 0, i32 33
  %20031 = getelementptr inbounds %struct.Reg, %struct.Reg* %20030, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %20031 to i64*
  %20032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20033 = getelementptr inbounds %struct.GPR, %struct.GPR* %20032, i32 0, i32 1
  %20034 = getelementptr inbounds %struct.Reg, %struct.Reg* %20033, i32 0, i32 0
  %EAX.i542 = bitcast %union.anon* %20034 to i32*
  %20035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20036 = getelementptr inbounds %struct.GPR, %struct.GPR* %20035, i32 0, i32 15
  %20037 = getelementptr inbounds %struct.Reg, %struct.Reg* %20036, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %20037 to i64*
  %20038 = load i64, i64* %RBP.i543
  %20039 = sub i64 %20038, 35464
  %20040 = load i32, i32* %EAX.i542
  %20041 = zext i32 %20040 to i64
  %20042 = load i64, i64* %PC.i541
  %20043 = add i64 %20042, 6
  store i64 %20043, i64* %PC.i541
  %20044 = inttoptr i64 %20039 to i32*
  store i32 %20040, i32* %20044
  store %struct.Memory* %loadMem_4af94f, %struct.Memory** %MEMORY
  br label %block_.L_4af955

block_.L_4af955:                                  ; preds = %block_.L_4af949, %block_4af881
  %loadMem_4af955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20046 = getelementptr inbounds %struct.GPR, %struct.GPR* %20045, i32 0, i32 33
  %20047 = getelementptr inbounds %struct.Reg, %struct.Reg* %20046, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %20047 to i64*
  %20048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20049 = getelementptr inbounds %struct.GPR, %struct.GPR* %20048, i32 0, i32 1
  %20050 = getelementptr inbounds %struct.Reg, %struct.Reg* %20049, i32 0, i32 0
  %RAX.i539 = bitcast %union.anon* %20050 to i64*
  %20051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20052 = getelementptr inbounds %struct.GPR, %struct.GPR* %20051, i32 0, i32 15
  %20053 = getelementptr inbounds %struct.Reg, %struct.Reg* %20052, i32 0, i32 0
  %RBP.i540 = bitcast %union.anon* %20053 to i64*
  %20054 = load i64, i64* %RBP.i540
  %20055 = sub i64 %20054, 35464
  %20056 = load i64, i64* %PC.i538
  %20057 = add i64 %20056, 6
  store i64 %20057, i64* %PC.i538
  %20058 = inttoptr i64 %20055 to i32*
  %20059 = load i32, i32* %20058
  %20060 = zext i32 %20059 to i64
  store i64 %20060, i64* %RAX.i539, align 8
  store %struct.Memory* %loadMem_4af955, %struct.Memory** %MEMORY
  %loadMem_4af95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20062 = getelementptr inbounds %struct.GPR, %struct.GPR* %20061, i32 0, i32 33
  %20063 = getelementptr inbounds %struct.Reg, %struct.Reg* %20062, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %20063 to i64*
  %20064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20065 = getelementptr inbounds %struct.GPR, %struct.GPR* %20064, i32 0, i32 1
  %20066 = getelementptr inbounds %struct.Reg, %struct.Reg* %20065, i32 0, i32 0
  %AX.i = bitcast %union.anon* %20066 to i16*
  %20067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20068 = getelementptr inbounds %struct.GPR, %struct.GPR* %20067, i32 0, i32 5
  %20069 = getelementptr inbounds %struct.Reg, %struct.Reg* %20068, i32 0, i32 0
  %CX.i537 = bitcast %union.anon* %20069 to i16*
  %20070 = load i16, i16* %AX.i
  %20071 = zext i16 %20070 to i64
  %20072 = load i64, i64* %PC.i536
  %20073 = add i64 %20072, 3
  store i64 %20073, i64* %PC.i536
  store i16 %20070, i16* %CX.i537, align 2
  store %struct.Memory* %loadMem_4af95b, %struct.Memory** %MEMORY
  %loadMem_4af95e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20075 = getelementptr inbounds %struct.GPR, %struct.GPR* %20074, i32 0, i32 33
  %20076 = getelementptr inbounds %struct.Reg, %struct.Reg* %20075, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %20076 to i64*
  %20077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20078 = getelementptr inbounds %struct.GPR, %struct.GPR* %20077, i32 0, i32 7
  %20079 = getelementptr inbounds %struct.Reg, %struct.Reg* %20078, i32 0, i32 0
  %RDX.i535 = bitcast %union.anon* %20079 to i64*
  %20080 = load i64, i64* %PC.i534
  %20081 = add i64 %20080, 8
  store i64 %20081, i64* %PC.i534
  %20082 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %20082, i64* %RDX.i535, align 8
  store %struct.Memory* %loadMem_4af95e, %struct.Memory** %MEMORY
  %loadMem_4af966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20084 = getelementptr inbounds %struct.GPR, %struct.GPR* %20083, i32 0, i32 33
  %20085 = getelementptr inbounds %struct.Reg, %struct.Reg* %20084, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %20085 to i64*
  %20086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20087 = getelementptr inbounds %struct.GPR, %struct.GPR* %20086, i32 0, i32 9
  %20088 = getelementptr inbounds %struct.Reg, %struct.Reg* %20087, i32 0, i32 0
  %RSI.i532 = bitcast %union.anon* %20088 to i64*
  %20089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20090 = getelementptr inbounds %struct.GPR, %struct.GPR* %20089, i32 0, i32 15
  %20091 = getelementptr inbounds %struct.Reg, %struct.Reg* %20090, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %20091 to i64*
  %20092 = load i64, i64* %RBP.i533
  %20093 = sub i64 %20092, 12
  %20094 = load i64, i64* %PC.i531
  %20095 = add i64 %20094, 4
  store i64 %20095, i64* %PC.i531
  %20096 = inttoptr i64 %20093 to i32*
  %20097 = load i32, i32* %20096
  %20098 = sext i32 %20097 to i64
  store i64 %20098, i64* %RSI.i532, align 8
  store %struct.Memory* %loadMem_4af966, %struct.Memory** %MEMORY
  %loadMem_4af96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %20099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20100 = getelementptr inbounds %struct.GPR, %struct.GPR* %20099, i32 0, i32 33
  %20101 = getelementptr inbounds %struct.Reg, %struct.Reg* %20100, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %20101 to i64*
  %20102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20103 = getelementptr inbounds %struct.GPR, %struct.GPR* %20102, i32 0, i32 7
  %20104 = getelementptr inbounds %struct.Reg, %struct.Reg* %20103, i32 0, i32 0
  %RDX.i529 = bitcast %union.anon* %20104 to i64*
  %20105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20106 = getelementptr inbounds %struct.GPR, %struct.GPR* %20105, i32 0, i32 9
  %20107 = getelementptr inbounds %struct.Reg, %struct.Reg* %20106, i32 0, i32 0
  %RSI.i530 = bitcast %union.anon* %20107 to i64*
  %20108 = load i64, i64* %RDX.i529
  %20109 = load i64, i64* %RSI.i530
  %20110 = mul i64 %20109, 8
  %20111 = add i64 %20110, %20108
  %20112 = load i64, i64* %PC.i528
  %20113 = add i64 %20112, 4
  store i64 %20113, i64* %PC.i528
  %20114 = inttoptr i64 %20111 to i64*
  %20115 = load i64, i64* %20114
  store i64 %20115, i64* %RDX.i529, align 8
  store %struct.Memory* %loadMem_4af96a, %struct.Memory** %MEMORY
  %loadMem_4af96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20117 = getelementptr inbounds %struct.GPR, %struct.GPR* %20116, i32 0, i32 33
  %20118 = getelementptr inbounds %struct.Reg, %struct.Reg* %20117, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %20118 to i64*
  %20119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20120 = getelementptr inbounds %struct.GPR, %struct.GPR* %20119, i32 0, i32 7
  %20121 = getelementptr inbounds %struct.Reg, %struct.Reg* %20120, i32 0, i32 0
  %RDX.i527 = bitcast %union.anon* %20121 to i64*
  %20122 = load i64, i64* %RDX.i527
  %20123 = add i64 %20122, 6456
  %20124 = load i64, i64* %PC.i526
  %20125 = add i64 %20124, 7
  store i64 %20125, i64* %PC.i526
  %20126 = inttoptr i64 %20123 to i64*
  %20127 = load i64, i64* %20126
  store i64 %20127, i64* %RDX.i527, align 8
  store %struct.Memory* %loadMem_4af96e, %struct.Memory** %MEMORY
  %loadMem_4af975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20129 = getelementptr inbounds %struct.GPR, %struct.GPR* %20128, i32 0, i32 33
  %20130 = getelementptr inbounds %struct.Reg, %struct.Reg* %20129, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %20130 to i64*
  %20131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20132 = getelementptr inbounds %struct.GPR, %struct.GPR* %20131, i32 0, i32 9
  %20133 = getelementptr inbounds %struct.Reg, %struct.Reg* %20132, i32 0, i32 0
  %RSI.i524 = bitcast %union.anon* %20133 to i64*
  %20134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20135 = getelementptr inbounds %struct.GPR, %struct.GPR* %20134, i32 0, i32 15
  %20136 = getelementptr inbounds %struct.Reg, %struct.Reg* %20135, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %20136 to i64*
  %20137 = load i64, i64* %RBP.i525
  %20138 = sub i64 %20137, 4
  %20139 = load i64, i64* %PC.i523
  %20140 = add i64 %20139, 4
  store i64 %20140, i64* %PC.i523
  %20141 = inttoptr i64 %20138 to i32*
  %20142 = load i32, i32* %20141
  %20143 = sext i32 %20142 to i64
  store i64 %20143, i64* %RSI.i524, align 8
  store %struct.Memory* %loadMem_4af975, %struct.Memory** %MEMORY
  %loadMem_4af979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20145 = getelementptr inbounds %struct.GPR, %struct.GPR* %20144, i32 0, i32 33
  %20146 = getelementptr inbounds %struct.Reg, %struct.Reg* %20145, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %20146 to i64*
  %20147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20148 = getelementptr inbounds %struct.GPR, %struct.GPR* %20147, i32 0, i32 7
  %20149 = getelementptr inbounds %struct.Reg, %struct.Reg* %20148, i32 0, i32 0
  %RDX.i521 = bitcast %union.anon* %20149 to i64*
  %20150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20151 = getelementptr inbounds %struct.GPR, %struct.GPR* %20150, i32 0, i32 9
  %20152 = getelementptr inbounds %struct.Reg, %struct.Reg* %20151, i32 0, i32 0
  %RSI.i522 = bitcast %union.anon* %20152 to i64*
  %20153 = load i64, i64* %RDX.i521
  %20154 = load i64, i64* %RSI.i522
  %20155 = mul i64 %20154, 8
  %20156 = add i64 %20155, %20153
  %20157 = load i64, i64* %PC.i520
  %20158 = add i64 %20157, 4
  store i64 %20158, i64* %PC.i520
  %20159 = inttoptr i64 %20156 to i64*
  %20160 = load i64, i64* %20159
  store i64 %20160, i64* %RDX.i521, align 8
  store %struct.Memory* %loadMem_4af979, %struct.Memory** %MEMORY
  %loadMem_4af97d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20162 = getelementptr inbounds %struct.GPR, %struct.GPR* %20161, i32 0, i32 33
  %20163 = getelementptr inbounds %struct.Reg, %struct.Reg* %20162, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %20163 to i64*
  %20164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20165 = getelementptr inbounds %struct.GPR, %struct.GPR* %20164, i32 0, i32 9
  %20166 = getelementptr inbounds %struct.Reg, %struct.Reg* %20165, i32 0, i32 0
  %RSI.i518 = bitcast %union.anon* %20166 to i64*
  %20167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20168 = getelementptr inbounds %struct.GPR, %struct.GPR* %20167, i32 0, i32 15
  %20169 = getelementptr inbounds %struct.Reg, %struct.Reg* %20168, i32 0, i32 0
  %RBP.i519 = bitcast %union.anon* %20169 to i64*
  %20170 = load i64, i64* %RBP.i519
  %20171 = sub i64 %20170, 8
  %20172 = load i64, i64* %PC.i517
  %20173 = add i64 %20172, 4
  store i64 %20173, i64* %PC.i517
  %20174 = inttoptr i64 %20171 to i32*
  %20175 = load i32, i32* %20174
  %20176 = sext i32 %20175 to i64
  store i64 %20176, i64* %RSI.i518, align 8
  store %struct.Memory* %loadMem_4af97d, %struct.Memory** %MEMORY
  %loadMem_4af981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20178 = getelementptr inbounds %struct.GPR, %struct.GPR* %20177, i32 0, i32 33
  %20179 = getelementptr inbounds %struct.Reg, %struct.Reg* %20178, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %20179 to i64*
  %20180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20181 = getelementptr inbounds %struct.GPR, %struct.GPR* %20180, i32 0, i32 5
  %20182 = getelementptr inbounds %struct.Reg, %struct.Reg* %20181, i32 0, i32 0
  %CX.i = bitcast %union.anon* %20182 to i16*
  %20183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20184 = getelementptr inbounds %struct.GPR, %struct.GPR* %20183, i32 0, i32 7
  %20185 = getelementptr inbounds %struct.Reg, %struct.Reg* %20184, i32 0, i32 0
  %RDX.i515 = bitcast %union.anon* %20185 to i64*
  %20186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20187 = getelementptr inbounds %struct.GPR, %struct.GPR* %20186, i32 0, i32 9
  %20188 = getelementptr inbounds %struct.Reg, %struct.Reg* %20187, i32 0, i32 0
  %RSI.i516 = bitcast %union.anon* %20188 to i64*
  %20189 = load i64, i64* %RDX.i515
  %20190 = load i64, i64* %RSI.i516
  %20191 = mul i64 %20190, 2
  %20192 = add i64 %20191, %20189
  %20193 = load i16, i16* %CX.i
  %20194 = zext i16 %20193 to i64
  %20195 = load i64, i64* %PC.i514
  %20196 = add i64 %20195, 4
  store i64 %20196, i64* %PC.i514
  %20197 = inttoptr i64 %20192 to i16*
  store i16 %20193, i16* %20197
  store %struct.Memory* %loadMem_4af981, %struct.Memory** %MEMORY
  %loadMem_4af985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20199 = getelementptr inbounds %struct.GPR, %struct.GPR* %20198, i32 0, i32 33
  %20200 = getelementptr inbounds %struct.Reg, %struct.Reg* %20199, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %20200 to i64*
  %20201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20202 = getelementptr inbounds %struct.GPR, %struct.GPR* %20201, i32 0, i32 1
  %20203 = getelementptr inbounds %struct.Reg, %struct.Reg* %20202, i32 0, i32 0
  %RAX.i512 = bitcast %union.anon* %20203 to i64*
  %20204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20205 = getelementptr inbounds %struct.GPR, %struct.GPR* %20204, i32 0, i32 15
  %20206 = getelementptr inbounds %struct.Reg, %struct.Reg* %20205, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %20206 to i64*
  %20207 = load i64, i64* %RBP.i513
  %20208 = sub i64 %20207, 8
  %20209 = load i64, i64* %PC.i511
  %20210 = add i64 %20209, 3
  store i64 %20210, i64* %PC.i511
  %20211 = inttoptr i64 %20208 to i32*
  %20212 = load i32, i32* %20211
  %20213 = zext i32 %20212 to i64
  store i64 %20213, i64* %RAX.i512, align 8
  store %struct.Memory* %loadMem_4af985, %struct.Memory** %MEMORY
  %loadMem_4af988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20215 = getelementptr inbounds %struct.GPR, %struct.GPR* %20214, i32 0, i32 33
  %20216 = getelementptr inbounds %struct.Reg, %struct.Reg* %20215, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %20216 to i64*
  %20217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20218 = getelementptr inbounds %struct.GPR, %struct.GPR* %20217, i32 0, i32 1
  %20219 = getelementptr inbounds %struct.Reg, %struct.Reg* %20218, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %20219 to i64*
  %20220 = load i64, i64* %RAX.i510
  %20221 = load i64, i64* %PC.i509
  %20222 = add i64 %20221, 3
  store i64 %20222, i64* %PC.i509
  %20223 = trunc i64 %20220 to i32
  %20224 = add i32 1, %20223
  %20225 = zext i32 %20224 to i64
  store i64 %20225, i64* %RAX.i510, align 8
  %20226 = icmp ult i32 %20224, %20223
  %20227 = icmp ult i32 %20224, 1
  %20228 = or i1 %20226, %20227
  %20229 = zext i1 %20228 to i8
  %20230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20229, i8* %20230, align 1
  %20231 = and i32 %20224, 255
  %20232 = call i32 @llvm.ctpop.i32(i32 %20231)
  %20233 = trunc i32 %20232 to i8
  %20234 = and i8 %20233, 1
  %20235 = xor i8 %20234, 1
  %20236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20235, i8* %20236, align 1
  %20237 = xor i64 1, %20220
  %20238 = trunc i64 %20237 to i32
  %20239 = xor i32 %20238, %20224
  %20240 = lshr i32 %20239, 4
  %20241 = trunc i32 %20240 to i8
  %20242 = and i8 %20241, 1
  %20243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20242, i8* %20243, align 1
  %20244 = icmp eq i32 %20224, 0
  %20245 = zext i1 %20244 to i8
  %20246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20245, i8* %20246, align 1
  %20247 = lshr i32 %20224, 31
  %20248 = trunc i32 %20247 to i8
  %20249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20248, i8* %20249, align 1
  %20250 = lshr i32 %20223, 31
  %20251 = xor i32 %20247, %20250
  %20252 = add i32 %20251, %20247
  %20253 = icmp eq i32 %20252, 2
  %20254 = zext i1 %20253 to i8
  %20255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20254, i8* %20255, align 1
  store %struct.Memory* %loadMem_4af988, %struct.Memory** %MEMORY
  %loadMem_4af98b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20257 = getelementptr inbounds %struct.GPR, %struct.GPR* %20256, i32 0, i32 33
  %20258 = getelementptr inbounds %struct.Reg, %struct.Reg* %20257, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %20258 to i64*
  %20259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20260 = getelementptr inbounds %struct.GPR, %struct.GPR* %20259, i32 0, i32 1
  %20261 = getelementptr inbounds %struct.Reg, %struct.Reg* %20260, i32 0, i32 0
  %EAX.i507 = bitcast %union.anon* %20261 to i32*
  %20262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20263 = getelementptr inbounds %struct.GPR, %struct.GPR* %20262, i32 0, i32 15
  %20264 = getelementptr inbounds %struct.Reg, %struct.Reg* %20263, i32 0, i32 0
  %RBP.i508 = bitcast %union.anon* %20264 to i64*
  %20265 = load i64, i64* %RBP.i508
  %20266 = sub i64 %20265, 8
  %20267 = load i32, i32* %EAX.i507
  %20268 = zext i32 %20267 to i64
  %20269 = load i64, i64* %PC.i506
  %20270 = add i64 %20269, 3
  store i64 %20270, i64* %PC.i506
  %20271 = inttoptr i64 %20266 to i32*
  store i32 %20267, i32* %20271
  store %struct.Memory* %loadMem_4af98b, %struct.Memory** %MEMORY
  %loadMem_4af98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20273 = getelementptr inbounds %struct.GPR, %struct.GPR* %20272, i32 0, i32 33
  %20274 = getelementptr inbounds %struct.Reg, %struct.Reg* %20273, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %20274 to i64*
  %20275 = load i64, i64* %PC.i505
  %20276 = add i64 %20275, -374
  %20277 = load i64, i64* %PC.i505
  %20278 = add i64 %20277, 5
  store i64 %20278, i64* %PC.i505
  %20279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20276, i64* %20279, align 8
  store %struct.Memory* %loadMem_4af98e, %struct.Memory** %MEMORY
  br label %block_.L_4af818

block_.L_4af993:                                  ; preds = %block_.L_4af818
  %loadMem_4af993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20281 = getelementptr inbounds %struct.GPR, %struct.GPR* %20280, i32 0, i32 33
  %20282 = getelementptr inbounds %struct.Reg, %struct.Reg* %20281, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %20282 to i64*
  %20283 = load i64, i64* %PC.i504
  %20284 = add i64 %20283, 5
  %20285 = load i64, i64* %PC.i504
  %20286 = add i64 %20285, 5
  store i64 %20286, i64* %PC.i504
  %20287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20284, i64* %20287, align 8
  store %struct.Memory* %loadMem_4af993, %struct.Memory** %MEMORY
  br label %block_.L_4af998

block_.L_4af998:                                  ; preds = %block_.L_4af993
  %loadMem_4af998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20289 = getelementptr inbounds %struct.GPR, %struct.GPR* %20288, i32 0, i32 33
  %20290 = getelementptr inbounds %struct.Reg, %struct.Reg* %20289, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %20290 to i64*
  %20291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20292 = getelementptr inbounds %struct.GPR, %struct.GPR* %20291, i32 0, i32 1
  %20293 = getelementptr inbounds %struct.Reg, %struct.Reg* %20292, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %20293 to i64*
  %20294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20295 = getelementptr inbounds %struct.GPR, %struct.GPR* %20294, i32 0, i32 15
  %20296 = getelementptr inbounds %struct.Reg, %struct.Reg* %20295, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %20296 to i64*
  %20297 = load i64, i64* %RBP.i503
  %20298 = sub i64 %20297, 4
  %20299 = load i64, i64* %PC.i501
  %20300 = add i64 %20299, 3
  store i64 %20300, i64* %PC.i501
  %20301 = inttoptr i64 %20298 to i32*
  %20302 = load i32, i32* %20301
  %20303 = zext i32 %20302 to i64
  store i64 %20303, i64* %RAX.i502, align 8
  store %struct.Memory* %loadMem_4af998, %struct.Memory** %MEMORY
  %loadMem_4af99b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20305 = getelementptr inbounds %struct.GPR, %struct.GPR* %20304, i32 0, i32 33
  %20306 = getelementptr inbounds %struct.Reg, %struct.Reg* %20305, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %20306 to i64*
  %20307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20308 = getelementptr inbounds %struct.GPR, %struct.GPR* %20307, i32 0, i32 1
  %20309 = getelementptr inbounds %struct.Reg, %struct.Reg* %20308, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %20309 to i64*
  %20310 = load i64, i64* %RAX.i500
  %20311 = load i64, i64* %PC.i499
  %20312 = add i64 %20311, 3
  store i64 %20312, i64* %PC.i499
  %20313 = trunc i64 %20310 to i32
  %20314 = add i32 1, %20313
  %20315 = zext i32 %20314 to i64
  store i64 %20315, i64* %RAX.i500, align 8
  %20316 = icmp ult i32 %20314, %20313
  %20317 = icmp ult i32 %20314, 1
  %20318 = or i1 %20316, %20317
  %20319 = zext i1 %20318 to i8
  %20320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20319, i8* %20320, align 1
  %20321 = and i32 %20314, 255
  %20322 = call i32 @llvm.ctpop.i32(i32 %20321)
  %20323 = trunc i32 %20322 to i8
  %20324 = and i8 %20323, 1
  %20325 = xor i8 %20324, 1
  %20326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20325, i8* %20326, align 1
  %20327 = xor i64 1, %20310
  %20328 = trunc i64 %20327 to i32
  %20329 = xor i32 %20328, %20314
  %20330 = lshr i32 %20329, 4
  %20331 = trunc i32 %20330 to i8
  %20332 = and i8 %20331, 1
  %20333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20332, i8* %20333, align 1
  %20334 = icmp eq i32 %20314, 0
  %20335 = zext i1 %20334 to i8
  %20336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20335, i8* %20336, align 1
  %20337 = lshr i32 %20314, 31
  %20338 = trunc i32 %20337 to i8
  %20339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20338, i8* %20339, align 1
  %20340 = lshr i32 %20313, 31
  %20341 = xor i32 %20337, %20340
  %20342 = add i32 %20341, %20337
  %20343 = icmp eq i32 %20342, 2
  %20344 = zext i1 %20343 to i8
  %20345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20344, i8* %20345, align 1
  store %struct.Memory* %loadMem_4af99b, %struct.Memory** %MEMORY
  %loadMem_4af99e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20347 = getelementptr inbounds %struct.GPR, %struct.GPR* %20346, i32 0, i32 33
  %20348 = getelementptr inbounds %struct.Reg, %struct.Reg* %20347, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %20348 to i64*
  %20349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20350 = getelementptr inbounds %struct.GPR, %struct.GPR* %20349, i32 0, i32 1
  %20351 = getelementptr inbounds %struct.Reg, %struct.Reg* %20350, i32 0, i32 0
  %EAX.i497 = bitcast %union.anon* %20351 to i32*
  %20352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20353 = getelementptr inbounds %struct.GPR, %struct.GPR* %20352, i32 0, i32 15
  %20354 = getelementptr inbounds %struct.Reg, %struct.Reg* %20353, i32 0, i32 0
  %RBP.i498 = bitcast %union.anon* %20354 to i64*
  %20355 = load i64, i64* %RBP.i498
  %20356 = sub i64 %20355, 4
  %20357 = load i32, i32* %EAX.i497
  %20358 = zext i32 %20357 to i64
  %20359 = load i64, i64* %PC.i496
  %20360 = add i64 %20359, 3
  store i64 %20360, i64* %PC.i496
  %20361 = inttoptr i64 %20356 to i32*
  store i32 %20357, i32* %20361
  store %struct.Memory* %loadMem_4af99e, %struct.Memory** %MEMORY
  %loadMem_4af9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20363 = getelementptr inbounds %struct.GPR, %struct.GPR* %20362, i32 0, i32 33
  %20364 = getelementptr inbounds %struct.Reg, %struct.Reg* %20363, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %20364 to i64*
  %20365 = load i64, i64* %PC.i495
  %20366 = add i64 %20365, -428
  %20367 = load i64, i64* %PC.i495
  %20368 = add i64 %20367, 5
  store i64 %20368, i64* %PC.i495
  %20369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20366, i64* %20369, align 8
  store %struct.Memory* %loadMem_4af9a1, %struct.Memory** %MEMORY
  br label %block_.L_4af7f5

block_.L_4af9a6:                                  ; preds = %block_.L_4af7f5
  %loadMem_4af9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20371 = getelementptr inbounds %struct.GPR, %struct.GPR* %20370, i32 0, i32 33
  %20372 = getelementptr inbounds %struct.Reg, %struct.Reg* %20371, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %20372 to i64*
  %20373 = load i64, i64* %PC.i494
  %20374 = add i64 %20373, 5
  %20375 = load i64, i64* %PC.i494
  %20376 = add i64 %20375, 5
  store i64 %20376, i64* %PC.i494
  %20377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20374, i64* %20377, align 8
  store %struct.Memory* %loadMem_4af9a6, %struct.Memory** %MEMORY
  br label %block_.L_4af9ab

block_.L_4af9ab:                                  ; preds = %block_.L_4af9a6
  %loadMem_4af9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %20378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20379 = getelementptr inbounds %struct.GPR, %struct.GPR* %20378, i32 0, i32 33
  %20380 = getelementptr inbounds %struct.Reg, %struct.Reg* %20379, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %20380 to i64*
  %20381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20382 = getelementptr inbounds %struct.GPR, %struct.GPR* %20381, i32 0, i32 1
  %20383 = getelementptr inbounds %struct.Reg, %struct.Reg* %20382, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %20383 to i64*
  %20384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20385 = getelementptr inbounds %struct.GPR, %struct.GPR* %20384, i32 0, i32 15
  %20386 = getelementptr inbounds %struct.Reg, %struct.Reg* %20385, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %20386 to i64*
  %20387 = load i64, i64* %RBP.i493
  %20388 = sub i64 %20387, 12
  %20389 = load i64, i64* %PC.i491
  %20390 = add i64 %20389, 3
  store i64 %20390, i64* %PC.i491
  %20391 = inttoptr i64 %20388 to i32*
  %20392 = load i32, i32* %20391
  %20393 = zext i32 %20392 to i64
  store i64 %20393, i64* %RAX.i492, align 8
  store %struct.Memory* %loadMem_4af9ab, %struct.Memory** %MEMORY
  %loadMem_4af9ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %20394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20395 = getelementptr inbounds %struct.GPR, %struct.GPR* %20394, i32 0, i32 33
  %20396 = getelementptr inbounds %struct.Reg, %struct.Reg* %20395, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %20396 to i64*
  %20397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20398 = getelementptr inbounds %struct.GPR, %struct.GPR* %20397, i32 0, i32 1
  %20399 = getelementptr inbounds %struct.Reg, %struct.Reg* %20398, i32 0, i32 0
  %RAX.i490 = bitcast %union.anon* %20399 to i64*
  %20400 = load i64, i64* %RAX.i490
  %20401 = load i64, i64* %PC.i489
  %20402 = add i64 %20401, 3
  store i64 %20402, i64* %PC.i489
  %20403 = trunc i64 %20400 to i32
  %20404 = add i32 1, %20403
  %20405 = zext i32 %20404 to i64
  store i64 %20405, i64* %RAX.i490, align 8
  %20406 = icmp ult i32 %20404, %20403
  %20407 = icmp ult i32 %20404, 1
  %20408 = or i1 %20406, %20407
  %20409 = zext i1 %20408 to i8
  %20410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20409, i8* %20410, align 1
  %20411 = and i32 %20404, 255
  %20412 = call i32 @llvm.ctpop.i32(i32 %20411)
  %20413 = trunc i32 %20412 to i8
  %20414 = and i8 %20413, 1
  %20415 = xor i8 %20414, 1
  %20416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20415, i8* %20416, align 1
  %20417 = xor i64 1, %20400
  %20418 = trunc i64 %20417 to i32
  %20419 = xor i32 %20418, %20404
  %20420 = lshr i32 %20419, 4
  %20421 = trunc i32 %20420 to i8
  %20422 = and i8 %20421, 1
  %20423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20422, i8* %20423, align 1
  %20424 = icmp eq i32 %20404, 0
  %20425 = zext i1 %20424 to i8
  %20426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20425, i8* %20426, align 1
  %20427 = lshr i32 %20404, 31
  %20428 = trunc i32 %20427 to i8
  %20429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20428, i8* %20429, align 1
  %20430 = lshr i32 %20403, 31
  %20431 = xor i32 %20427, %20430
  %20432 = add i32 %20431, %20427
  %20433 = icmp eq i32 %20432, 2
  %20434 = zext i1 %20433 to i8
  %20435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20434, i8* %20435, align 1
  store %struct.Memory* %loadMem_4af9ae, %struct.Memory** %MEMORY
  %loadMem_4af9b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20437 = getelementptr inbounds %struct.GPR, %struct.GPR* %20436, i32 0, i32 33
  %20438 = getelementptr inbounds %struct.Reg, %struct.Reg* %20437, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %20438 to i64*
  %20439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20440 = getelementptr inbounds %struct.GPR, %struct.GPR* %20439, i32 0, i32 1
  %20441 = getelementptr inbounds %struct.Reg, %struct.Reg* %20440, i32 0, i32 0
  %EAX.i487 = bitcast %union.anon* %20441 to i32*
  %20442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20443 = getelementptr inbounds %struct.GPR, %struct.GPR* %20442, i32 0, i32 15
  %20444 = getelementptr inbounds %struct.Reg, %struct.Reg* %20443, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %20444 to i64*
  %20445 = load i64, i64* %RBP.i488
  %20446 = sub i64 %20445, 12
  %20447 = load i32, i32* %EAX.i487
  %20448 = zext i32 %20447 to i64
  %20449 = load i64, i64* %PC.i486
  %20450 = add i64 %20449, 3
  store i64 %20450, i64* %PC.i486
  %20451 = inttoptr i64 %20446 to i32*
  store i32 %20447, i32* %20451
  store %struct.Memory* %loadMem_4af9b1, %struct.Memory** %MEMORY
  %loadMem_4af9b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20453 = getelementptr inbounds %struct.GPR, %struct.GPR* %20452, i32 0, i32 33
  %20454 = getelementptr inbounds %struct.Reg, %struct.Reg* %20453, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %20454 to i64*
  %20455 = load i64, i64* %PC.i485
  %20456 = add i64 %20455, -1413
  %20457 = load i64, i64* %PC.i485
  %20458 = add i64 %20457, 5
  store i64 %20458, i64* %PC.i485
  %20459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20456, i64* %20459, align 8
  store %struct.Memory* %loadMem_4af9b4, %struct.Memory** %MEMORY
  br label %block_.L_4af42f

block_.L_4af9b9:                                  ; preds = %block_.L_4af42f
  %loadMem_4af9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20461 = getelementptr inbounds %struct.GPR, %struct.GPR* %20460, i32 0, i32 33
  %20462 = getelementptr inbounds %struct.Reg, %struct.Reg* %20461, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %20462 to i64*
  %20463 = load i64, i64* %PC.i484
  %20464 = add i64 %20463, 5
  %20465 = load i64, i64* %PC.i484
  %20466 = add i64 %20465, 5
  store i64 %20466, i64* %PC.i484
  %20467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20464, i64* %20467, align 8
  store %struct.Memory* %loadMem_4af9b9, %struct.Memory** %MEMORY
  br label %block_.L_4af9be

block_.L_4af9be:                                  ; preds = %block_.L_4af9b9
  %loadMem_4af9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %20468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20469 = getelementptr inbounds %struct.GPR, %struct.GPR* %20468, i32 0, i32 33
  %20470 = getelementptr inbounds %struct.Reg, %struct.Reg* %20469, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %20470 to i64*
  %20471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20472 = getelementptr inbounds %struct.GPR, %struct.GPR* %20471, i32 0, i32 1
  %20473 = getelementptr inbounds %struct.Reg, %struct.Reg* %20472, i32 0, i32 0
  %RAX.i482 = bitcast %union.anon* %20473 to i64*
  %20474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20475 = getelementptr inbounds %struct.GPR, %struct.GPR* %20474, i32 0, i32 15
  %20476 = getelementptr inbounds %struct.Reg, %struct.Reg* %20475, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %20476 to i64*
  %20477 = load i64, i64* %RBP.i483
  %20478 = sub i64 %20477, 35396
  %20479 = load i64, i64* %PC.i481
  %20480 = add i64 %20479, 6
  store i64 %20480, i64* %PC.i481
  %20481 = inttoptr i64 %20478 to i32*
  %20482 = load i32, i32* %20481
  %20483 = zext i32 %20482 to i64
  store i64 %20483, i64* %RAX.i482, align 8
  store %struct.Memory* %loadMem_4af9be, %struct.Memory** %MEMORY
  %loadMem_4af9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20485 = getelementptr inbounds %struct.GPR, %struct.GPR* %20484, i32 0, i32 33
  %20486 = getelementptr inbounds %struct.Reg, %struct.Reg* %20485, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %20486 to i64*
  %20487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20488 = getelementptr inbounds %struct.GPR, %struct.GPR* %20487, i32 0, i32 1
  %20489 = getelementptr inbounds %struct.Reg, %struct.Reg* %20488, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %20489 to i64*
  %20490 = load i64, i64* %RAX.i480
  %20491 = load i64, i64* %PC.i479
  %20492 = add i64 %20491, 3
  store i64 %20492, i64* %PC.i479
  %20493 = trunc i64 %20490 to i32
  %20494 = add i32 1, %20493
  %20495 = zext i32 %20494 to i64
  store i64 %20495, i64* %RAX.i480, align 8
  %20496 = icmp ult i32 %20494, %20493
  %20497 = icmp ult i32 %20494, 1
  %20498 = or i1 %20496, %20497
  %20499 = zext i1 %20498 to i8
  %20500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20499, i8* %20500, align 1
  %20501 = and i32 %20494, 255
  %20502 = call i32 @llvm.ctpop.i32(i32 %20501)
  %20503 = trunc i32 %20502 to i8
  %20504 = and i8 %20503, 1
  %20505 = xor i8 %20504, 1
  %20506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20505, i8* %20506, align 1
  %20507 = xor i64 1, %20490
  %20508 = trunc i64 %20507 to i32
  %20509 = xor i32 %20508, %20494
  %20510 = lshr i32 %20509, 4
  %20511 = trunc i32 %20510 to i8
  %20512 = and i8 %20511, 1
  %20513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20512, i8* %20513, align 1
  %20514 = icmp eq i32 %20494, 0
  %20515 = zext i1 %20514 to i8
  %20516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20515, i8* %20516, align 1
  %20517 = lshr i32 %20494, 31
  %20518 = trunc i32 %20517 to i8
  %20519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20518, i8* %20519, align 1
  %20520 = lshr i32 %20493, 31
  %20521 = xor i32 %20517, %20520
  %20522 = add i32 %20521, %20517
  %20523 = icmp eq i32 %20522, 2
  %20524 = zext i1 %20523 to i8
  %20525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20524, i8* %20525, align 1
  store %struct.Memory* %loadMem_4af9c4, %struct.Memory** %MEMORY
  %loadMem_4af9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20527 = getelementptr inbounds %struct.GPR, %struct.GPR* %20526, i32 0, i32 33
  %20528 = getelementptr inbounds %struct.Reg, %struct.Reg* %20527, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %20528 to i64*
  %20529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20530 = getelementptr inbounds %struct.GPR, %struct.GPR* %20529, i32 0, i32 1
  %20531 = getelementptr inbounds %struct.Reg, %struct.Reg* %20530, i32 0, i32 0
  %EAX.i477 = bitcast %union.anon* %20531 to i32*
  %20532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20533 = getelementptr inbounds %struct.GPR, %struct.GPR* %20532, i32 0, i32 15
  %20534 = getelementptr inbounds %struct.Reg, %struct.Reg* %20533, i32 0, i32 0
  %RBP.i478 = bitcast %union.anon* %20534 to i64*
  %20535 = load i64, i64* %RBP.i478
  %20536 = sub i64 %20535, 35396
  %20537 = load i32, i32* %EAX.i477
  %20538 = zext i32 %20537 to i64
  %20539 = load i64, i64* %PC.i476
  %20540 = add i64 %20539, 6
  store i64 %20540, i64* %PC.i476
  %20541 = inttoptr i64 %20536 to i32*
  store i32 %20537, i32* %20541
  store %struct.Memory* %loadMem_4af9c7, %struct.Memory** %MEMORY
  %loadMem_4af9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20543 = getelementptr inbounds %struct.GPR, %struct.GPR* %20542, i32 0, i32 33
  %20544 = getelementptr inbounds %struct.Reg, %struct.Reg* %20543, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %20544 to i64*
  %20545 = load i64, i64* %PC.i475
  %20546 = add i64 %20545, -1468
  %20547 = load i64, i64* %PC.i475
  %20548 = add i64 %20547, 5
  store i64 %20548, i64* %PC.i475
  %20549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20546, i64* %20549, align 8
  store %struct.Memory* %loadMem_4af9cd, %struct.Memory** %MEMORY
  br label %block_.L_4af411

block_.L_4af9d2:                                  ; preds = %block_.L_4af411
  %loadMem_4af9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20551 = getelementptr inbounds %struct.GPR, %struct.GPR* %20550, i32 0, i32 33
  %20552 = getelementptr inbounds %struct.Reg, %struct.Reg* %20551, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %20552 to i64*
  %20553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20554 = getelementptr inbounds %struct.GPR, %struct.GPR* %20553, i32 0, i32 1
  %20555 = getelementptr inbounds %struct.Reg, %struct.Reg* %20554, i32 0, i32 0
  %RAX.i474 = bitcast %union.anon* %20555 to i64*
  %20556 = load i64, i64* %PC.i473
  %20557 = add i64 %20556, 8
  store i64 %20557, i64* %PC.i473
  %20558 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %20558, i64* %RAX.i474, align 8
  store %struct.Memory* %loadMem_4af9d2, %struct.Memory** %MEMORY
  %loadMem_4af9da = load %struct.Memory*, %struct.Memory** %MEMORY
  %20559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20560 = getelementptr inbounds %struct.GPR, %struct.GPR* %20559, i32 0, i32 33
  %20561 = getelementptr inbounds %struct.Reg, %struct.Reg* %20560, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %20561 to i64*
  %20562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20563 = getelementptr inbounds %struct.GPR, %struct.GPR* %20562, i32 0, i32 1
  %20564 = getelementptr inbounds %struct.Reg, %struct.Reg* %20563, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %20564 to i64*
  %20565 = load i64, i64* %RAX.i472
  %20566 = add i64 %20565, 196
  %20567 = load i64, i64* %PC.i471
  %20568 = add i64 %20567, 7
  store i64 %20568, i64* %PC.i471
  %20569 = inttoptr i64 %20566 to i32*
  %20570 = load i32, i32* %20569
  %20571 = sub i32 %20570, 1
  %20572 = icmp ult i32 %20570, 1
  %20573 = zext i1 %20572 to i8
  %20574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20573, i8* %20574, align 1
  %20575 = and i32 %20571, 255
  %20576 = call i32 @llvm.ctpop.i32(i32 %20575)
  %20577 = trunc i32 %20576 to i8
  %20578 = and i8 %20577, 1
  %20579 = xor i8 %20578, 1
  %20580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20579, i8* %20580, align 1
  %20581 = xor i32 %20570, 1
  %20582 = xor i32 %20581, %20571
  %20583 = lshr i32 %20582, 4
  %20584 = trunc i32 %20583 to i8
  %20585 = and i8 %20584, 1
  %20586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20585, i8* %20586, align 1
  %20587 = icmp eq i32 %20571, 0
  %20588 = zext i1 %20587 to i8
  %20589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20588, i8* %20589, align 1
  %20590 = lshr i32 %20571, 31
  %20591 = trunc i32 %20590 to i8
  %20592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20591, i8* %20592, align 1
  %20593 = lshr i32 %20570, 31
  %20594 = xor i32 %20590, %20593
  %20595 = add i32 %20594, %20593
  %20596 = icmp eq i32 %20595, 2
  %20597 = zext i1 %20596 to i8
  %20598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20597, i8* %20598, align 1
  store %struct.Memory* %loadMem_4af9da, %struct.Memory** %MEMORY
  %loadMem_4af9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20600 = getelementptr inbounds %struct.GPR, %struct.GPR* %20599, i32 0, i32 33
  %20601 = getelementptr inbounds %struct.Reg, %struct.Reg* %20600, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %20601 to i64*
  %20602 = load i64, i64* %PC.i470
  %20603 = add i64 %20602, 301
  %20604 = load i64, i64* %PC.i470
  %20605 = add i64 %20604, 6
  %20606 = load i64, i64* %PC.i470
  %20607 = add i64 %20606, 6
  store i64 %20607, i64* %PC.i470
  %20608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20609 = load i8, i8* %20608, align 1
  %20610 = icmp eq i8 %20609, 0
  %20611 = zext i1 %20610 to i8
  store i8 %20611, i8* %BRANCH_TAKEN, align 1
  %20612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20613 = select i1 %20610, i64 %20603, i64 %20605
  store i64 %20613, i64* %20612, align 8
  store %struct.Memory* %loadMem_4af9e1, %struct.Memory** %MEMORY
  %loadBr_4af9e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4af9e1 = icmp eq i8 %loadBr_4af9e1, 1
  br i1 %cmpBr_4af9e1, label %block_.L_4afb0e, label %block_4af9e7

block_4af9e7:                                     ; preds = %block_.L_4af9d2
  %loadMem_4af9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20615 = getelementptr inbounds %struct.GPR, %struct.GPR* %20614, i32 0, i32 33
  %20616 = getelementptr inbounds %struct.Reg, %struct.Reg* %20615, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %20616 to i64*
  %20617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20618 = getelementptr inbounds %struct.GPR, %struct.GPR* %20617, i32 0, i32 15
  %20619 = getelementptr inbounds %struct.Reg, %struct.Reg* %20618, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %20619 to i64*
  %20620 = load i64, i64* %RBP.i469
  %20621 = sub i64 %20620, 35396
  %20622 = load i64, i64* %PC.i468
  %20623 = add i64 %20622, 10
  store i64 %20623, i64* %PC.i468
  %20624 = inttoptr i64 %20621 to i32*
  store i32 0, i32* %20624
  store %struct.Memory* %loadMem_4af9e7, %struct.Memory** %MEMORY
  br label %block_.L_4af9f1

block_.L_4af9f1:                                  ; preds = %block_.L_4afaf5, %block_4af9e7
  %loadMem_4af9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20626 = getelementptr inbounds %struct.GPR, %struct.GPR* %20625, i32 0, i32 33
  %20627 = getelementptr inbounds %struct.Reg, %struct.Reg* %20626, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %20627 to i64*
  %20628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20629 = getelementptr inbounds %struct.GPR, %struct.GPR* %20628, i32 0, i32 1
  %20630 = getelementptr inbounds %struct.Reg, %struct.Reg* %20629, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %20630 to i64*
  %20631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20632 = getelementptr inbounds %struct.GPR, %struct.GPR* %20631, i32 0, i32 15
  %20633 = getelementptr inbounds %struct.Reg, %struct.Reg* %20632, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %20633 to i64*
  %20634 = load i64, i64* %RBP.i467
  %20635 = sub i64 %20634, 35396
  %20636 = load i64, i64* %PC.i465
  %20637 = add i64 %20636, 6
  store i64 %20637, i64* %PC.i465
  %20638 = inttoptr i64 %20635 to i32*
  %20639 = load i32, i32* %20638
  %20640 = zext i32 %20639 to i64
  store i64 %20640, i64* %RAX.i466, align 8
  store %struct.Memory* %loadMem_4af9f1, %struct.Memory** %MEMORY
  %loadMem_4af9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20642 = getelementptr inbounds %struct.GPR, %struct.GPR* %20641, i32 0, i32 33
  %20643 = getelementptr inbounds %struct.Reg, %struct.Reg* %20642, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %20643 to i64*
  %20644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20645 = getelementptr inbounds %struct.GPR, %struct.GPR* %20644, i32 0, i32 5
  %20646 = getelementptr inbounds %struct.Reg, %struct.Reg* %20645, i32 0, i32 0
  %RCX.i463 = bitcast %union.anon* %20646 to i64*
  %20647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20648 = getelementptr inbounds %struct.GPR, %struct.GPR* %20647, i32 0, i32 15
  %20649 = getelementptr inbounds %struct.Reg, %struct.Reg* %20648, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %20649 to i64*
  %20650 = load i64, i64* %RBP.i464
  %20651 = sub i64 %20650, 808
  %20652 = load i64, i64* %PC.i462
  %20653 = add i64 %20652, 6
  store i64 %20653, i64* %PC.i462
  %20654 = inttoptr i64 %20651 to i32*
  %20655 = load i32, i32* %20654
  %20656 = zext i32 %20655 to i64
  store i64 %20656, i64* %RCX.i463, align 8
  store %struct.Memory* %loadMem_4af9f7, %struct.Memory** %MEMORY
  %loadMem_4af9fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20658 = getelementptr inbounds %struct.GPR, %struct.GPR* %20657, i32 0, i32 33
  %20659 = getelementptr inbounds %struct.Reg, %struct.Reg* %20658, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %20659 to i64*
  %20660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20661 = getelementptr inbounds %struct.GPR, %struct.GPR* %20660, i32 0, i32 5
  %20662 = getelementptr inbounds %struct.Reg, %struct.Reg* %20661, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %20662 to i64*
  %20663 = load i64, i64* %RCX.i461
  %20664 = load i64, i64* %PC.i460
  %20665 = add i64 %20664, 3
  store i64 %20665, i64* %PC.i460
  %20666 = trunc i64 %20663 to i32
  %20667 = add i32 2, %20666
  %20668 = zext i32 %20667 to i64
  store i64 %20668, i64* %RCX.i461, align 8
  %20669 = icmp ult i32 %20667, %20666
  %20670 = icmp ult i32 %20667, 2
  %20671 = or i1 %20669, %20670
  %20672 = zext i1 %20671 to i8
  %20673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20672, i8* %20673, align 1
  %20674 = and i32 %20667, 255
  %20675 = call i32 @llvm.ctpop.i32(i32 %20674)
  %20676 = trunc i32 %20675 to i8
  %20677 = and i8 %20676, 1
  %20678 = xor i8 %20677, 1
  %20679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20678, i8* %20679, align 1
  %20680 = xor i64 2, %20663
  %20681 = trunc i64 %20680 to i32
  %20682 = xor i32 %20681, %20667
  %20683 = lshr i32 %20682, 4
  %20684 = trunc i32 %20683 to i8
  %20685 = and i8 %20684, 1
  %20686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20685, i8* %20686, align 1
  %20687 = icmp eq i32 %20667, 0
  %20688 = zext i1 %20687 to i8
  %20689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20688, i8* %20689, align 1
  %20690 = lshr i32 %20667, 31
  %20691 = trunc i32 %20690 to i8
  %20692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20691, i8* %20692, align 1
  %20693 = lshr i32 %20666, 31
  %20694 = xor i32 %20690, %20693
  %20695 = add i32 %20694, %20690
  %20696 = icmp eq i32 %20695, 2
  %20697 = zext i1 %20696 to i8
  %20698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20697, i8* %20698, align 1
  store %struct.Memory* %loadMem_4af9fd, %struct.Memory** %MEMORY
  %loadMem_4afa00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20700 = getelementptr inbounds %struct.GPR, %struct.GPR* %20699, i32 0, i32 33
  %20701 = getelementptr inbounds %struct.Reg, %struct.Reg* %20700, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %20701 to i64*
  %20702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20703 = getelementptr inbounds %struct.GPR, %struct.GPR* %20702, i32 0, i32 1
  %20704 = getelementptr inbounds %struct.Reg, %struct.Reg* %20703, i32 0, i32 0
  %EAX.i458 = bitcast %union.anon* %20704 to i32*
  %20705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20706 = getelementptr inbounds %struct.GPR, %struct.GPR* %20705, i32 0, i32 5
  %20707 = getelementptr inbounds %struct.Reg, %struct.Reg* %20706, i32 0, i32 0
  %ECX.i459 = bitcast %union.anon* %20707 to i32*
  %20708 = load i32, i32* %EAX.i458
  %20709 = zext i32 %20708 to i64
  %20710 = load i32, i32* %ECX.i459
  %20711 = zext i32 %20710 to i64
  %20712 = load i64, i64* %PC.i457
  %20713 = add i64 %20712, 2
  store i64 %20713, i64* %PC.i457
  %20714 = sub i32 %20708, %20710
  %20715 = icmp ult i32 %20708, %20710
  %20716 = zext i1 %20715 to i8
  %20717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20716, i8* %20717, align 1
  %20718 = and i32 %20714, 255
  %20719 = call i32 @llvm.ctpop.i32(i32 %20718)
  %20720 = trunc i32 %20719 to i8
  %20721 = and i8 %20720, 1
  %20722 = xor i8 %20721, 1
  %20723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20722, i8* %20723, align 1
  %20724 = xor i64 %20711, %20709
  %20725 = trunc i64 %20724 to i32
  %20726 = xor i32 %20725, %20714
  %20727 = lshr i32 %20726, 4
  %20728 = trunc i32 %20727 to i8
  %20729 = and i8 %20728, 1
  %20730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20729, i8* %20730, align 1
  %20731 = icmp eq i32 %20714, 0
  %20732 = zext i1 %20731 to i8
  %20733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20732, i8* %20733, align 1
  %20734 = lshr i32 %20714, 31
  %20735 = trunc i32 %20734 to i8
  %20736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20735, i8* %20736, align 1
  %20737 = lshr i32 %20708, 31
  %20738 = lshr i32 %20710, 31
  %20739 = xor i32 %20738, %20737
  %20740 = xor i32 %20734, %20737
  %20741 = add i32 %20740, %20739
  %20742 = icmp eq i32 %20741, 2
  %20743 = zext i1 %20742 to i8
  %20744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20743, i8* %20744, align 1
  store %struct.Memory* %loadMem_4afa00, %struct.Memory** %MEMORY
  %loadMem_4afa02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20746 = getelementptr inbounds %struct.GPR, %struct.GPR* %20745, i32 0, i32 33
  %20747 = getelementptr inbounds %struct.Reg, %struct.Reg* %20746, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %20747 to i64*
  %20748 = load i64, i64* %PC.i456
  %20749 = add i64 %20748, 263
  %20750 = load i64, i64* %PC.i456
  %20751 = add i64 %20750, 6
  %20752 = load i64, i64* %PC.i456
  %20753 = add i64 %20752, 6
  store i64 %20753, i64* %PC.i456
  %20754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20755 = load i8, i8* %20754, align 1
  %20756 = icmp ne i8 %20755, 0
  %20757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20758 = load i8, i8* %20757, align 1
  %20759 = icmp ne i8 %20758, 0
  %20760 = xor i1 %20756, %20759
  %20761 = xor i1 %20760, true
  %20762 = zext i1 %20761 to i8
  store i8 %20762, i8* %BRANCH_TAKEN, align 1
  %20763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20764 = select i1 %20760, i64 %20751, i64 %20749
  store i64 %20764, i64* %20763, align 8
  store %struct.Memory* %loadMem_4afa02, %struct.Memory** %MEMORY
  %loadBr_4afa02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afa02 = icmp eq i8 %loadBr_4afa02, 1
  br i1 %cmpBr_4afa02, label %block_.L_4afb09, label %block_4afa08

block_4afa08:                                     ; preds = %block_.L_4af9f1
  %loadMem_4afa08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20766 = getelementptr inbounds %struct.GPR, %struct.GPR* %20765, i32 0, i32 33
  %20767 = getelementptr inbounds %struct.Reg, %struct.Reg* %20766, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %20767 to i64*
  %20768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20769 = getelementptr inbounds %struct.GPR, %struct.GPR* %20768, i32 0, i32 15
  %20770 = getelementptr inbounds %struct.Reg, %struct.Reg* %20769, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %20770 to i64*
  %20771 = load i64, i64* %RBP.i455
  %20772 = sub i64 %20771, 36
  %20773 = load i64, i64* %PC.i454
  %20774 = add i64 %20773, 7
  store i64 %20774, i64* %PC.i454
  %20775 = inttoptr i64 %20772 to i32*
  store i32 0, i32* %20775
  store %struct.Memory* %loadMem_4afa08, %struct.Memory** %MEMORY
  br label %block_.L_4afa0f

block_.L_4afa0f:                                  ; preds = %block_.L_4afae2, %block_4afa08
  %loadMem_4afa0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20777 = getelementptr inbounds %struct.GPR, %struct.GPR* %20776, i32 0, i32 33
  %20778 = getelementptr inbounds %struct.Reg, %struct.Reg* %20777, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %20778 to i64*
  %20779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20780 = getelementptr inbounds %struct.GPR, %struct.GPR* %20779, i32 0, i32 1
  %20781 = getelementptr inbounds %struct.Reg, %struct.Reg* %20780, i32 0, i32 0
  %RAX.i452 = bitcast %union.anon* %20781 to i64*
  %20782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20783 = getelementptr inbounds %struct.GPR, %struct.GPR* %20782, i32 0, i32 15
  %20784 = getelementptr inbounds %struct.Reg, %struct.Reg* %20783, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %20784 to i64*
  %20785 = load i64, i64* %RBP.i453
  %20786 = sub i64 %20785, 36
  %20787 = load i64, i64* %PC.i451
  %20788 = add i64 %20787, 3
  store i64 %20788, i64* %PC.i451
  %20789 = inttoptr i64 %20786 to i32*
  %20790 = load i32, i32* %20789
  %20791 = zext i32 %20790 to i64
  store i64 %20791, i64* %RAX.i452, align 8
  store %struct.Memory* %loadMem_4afa0f, %struct.Memory** %MEMORY
  %loadMem_4afa12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20793 = getelementptr inbounds %struct.GPR, %struct.GPR* %20792, i32 0, i32 33
  %20794 = getelementptr inbounds %struct.Reg, %struct.Reg* %20793, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %20794 to i64*
  %20795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20796 = getelementptr inbounds %struct.GPR, %struct.GPR* %20795, i32 0, i32 5
  %20797 = getelementptr inbounds %struct.Reg, %struct.Reg* %20796, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %20797 to i64*
  %20798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20799 = getelementptr inbounds %struct.GPR, %struct.GPR* %20798, i32 0, i32 15
  %20800 = getelementptr inbounds %struct.Reg, %struct.Reg* %20799, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %20800 to i64*
  %20801 = load i64, i64* %RBP.i450
  %20802 = sub i64 %20801, 35396
  %20803 = load i64, i64* %PC.i448
  %20804 = add i64 %20803, 7
  store i64 %20804, i64* %PC.i448
  %20805 = inttoptr i64 %20802 to i32*
  %20806 = load i32, i32* %20805
  %20807 = sext i32 %20806 to i64
  store i64 %20807, i64* %RCX.i449, align 8
  store %struct.Memory* %loadMem_4afa12, %struct.Memory** %MEMORY
  %loadMem_4afa19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20809 = getelementptr inbounds %struct.GPR, %struct.GPR* %20808, i32 0, i32 33
  %20810 = getelementptr inbounds %struct.Reg, %struct.Reg* %20809, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %20810 to i64*
  %20811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20812 = getelementptr inbounds %struct.GPR, %struct.GPR* %20811, i32 0, i32 1
  %20813 = getelementptr inbounds %struct.Reg, %struct.Reg* %20812, i32 0, i32 0
  %EAX.i446 = bitcast %union.anon* %20813 to i32*
  %20814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20815 = getelementptr inbounds %struct.GPR, %struct.GPR* %20814, i32 0, i32 5
  %20816 = getelementptr inbounds %struct.Reg, %struct.Reg* %20815, i32 0, i32 0
  %RCX.i447 = bitcast %union.anon* %20816 to i64*
  %20817 = load i32, i32* %EAX.i446
  %20818 = zext i32 %20817 to i64
  %20819 = load i64, i64* %RCX.i447
  %20820 = mul i64 %20819, 4
  %20821 = add i64 %20820, 7489456
  %20822 = load i64, i64* %PC.i445
  %20823 = add i64 %20822, 7
  store i64 %20823, i64* %PC.i445
  %20824 = inttoptr i64 %20821 to i32*
  %20825 = load i32, i32* %20824
  %20826 = sub i32 %20817, %20825
  %20827 = icmp ult i32 %20817, %20825
  %20828 = zext i1 %20827 to i8
  %20829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20828, i8* %20829, align 1
  %20830 = and i32 %20826, 255
  %20831 = call i32 @llvm.ctpop.i32(i32 %20830)
  %20832 = trunc i32 %20831 to i8
  %20833 = and i8 %20832, 1
  %20834 = xor i8 %20833, 1
  %20835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20834, i8* %20835, align 1
  %20836 = xor i32 %20825, %20817
  %20837 = xor i32 %20836, %20826
  %20838 = lshr i32 %20837, 4
  %20839 = trunc i32 %20838 to i8
  %20840 = and i8 %20839, 1
  %20841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20840, i8* %20841, align 1
  %20842 = icmp eq i32 %20826, 0
  %20843 = zext i1 %20842 to i8
  %20844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20843, i8* %20844, align 1
  %20845 = lshr i32 %20826, 31
  %20846 = trunc i32 %20845 to i8
  %20847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20846, i8* %20847, align 1
  %20848 = lshr i32 %20817, 31
  %20849 = lshr i32 %20825, 31
  %20850 = xor i32 %20849, %20848
  %20851 = xor i32 %20845, %20848
  %20852 = add i32 %20851, %20850
  %20853 = icmp eq i32 %20852, 2
  %20854 = zext i1 %20853 to i8
  %20855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20854, i8* %20855, align 1
  store %struct.Memory* %loadMem_4afa19, %struct.Memory** %MEMORY
  %loadMem_4afa20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20857 = getelementptr inbounds %struct.GPR, %struct.GPR* %20856, i32 0, i32 33
  %20858 = getelementptr inbounds %struct.Reg, %struct.Reg* %20857, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %20858 to i64*
  %20859 = load i64, i64* %PC.i444
  %20860 = add i64 %20859, 208
  %20861 = load i64, i64* %PC.i444
  %20862 = add i64 %20861, 6
  %20863 = load i64, i64* %PC.i444
  %20864 = add i64 %20863, 6
  store i64 %20864, i64* %PC.i444
  %20865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20866 = load i8, i8* %20865, align 1
  %20867 = icmp ne i8 %20866, 0
  %20868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20869 = load i8, i8* %20868, align 1
  %20870 = icmp ne i8 %20869, 0
  %20871 = xor i1 %20867, %20870
  %20872 = xor i1 %20871, true
  %20873 = zext i1 %20872 to i8
  store i8 %20873, i8* %BRANCH_TAKEN, align 1
  %20874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20875 = select i1 %20871, i64 %20862, i64 %20860
  store i64 %20875, i64* %20874, align 8
  store %struct.Memory* %loadMem_4afa20, %struct.Memory** %MEMORY
  %loadBr_4afa20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afa20 = icmp eq i8 %loadBr_4afa20, 1
  br i1 %cmpBr_4afa20, label %block_.L_4afaf0, label %block_4afa26

block_4afa26:                                     ; preds = %block_.L_4afa0f
  %loadMem_4afa26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20877 = getelementptr inbounds %struct.GPR, %struct.GPR* %20876, i32 0, i32 33
  %20878 = getelementptr inbounds %struct.Reg, %struct.Reg* %20877, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %20878 to i64*
  %20879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20880 = getelementptr inbounds %struct.GPR, %struct.GPR* %20879, i32 0, i32 15
  %20881 = getelementptr inbounds %struct.Reg, %struct.Reg* %20880, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %20881 to i64*
  %20882 = load i64, i64* %RBP.i443
  %20883 = sub i64 %20882, 40
  %20884 = load i64, i64* %PC.i442
  %20885 = add i64 %20884, 7
  store i64 %20885, i64* %PC.i442
  %20886 = inttoptr i64 %20883 to i32*
  store i32 0, i32* %20886
  store %struct.Memory* %loadMem_4afa26, %struct.Memory** %MEMORY
  br label %block_.L_4afa2d

block_.L_4afa2d:                                  ; preds = %block_4afa37, %block_4afa26
  %loadMem_4afa2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20888 = getelementptr inbounds %struct.GPR, %struct.GPR* %20887, i32 0, i32 33
  %20889 = getelementptr inbounds %struct.Reg, %struct.Reg* %20888, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %20889 to i64*
  %20890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20891 = getelementptr inbounds %struct.GPR, %struct.GPR* %20890, i32 0, i32 15
  %20892 = getelementptr inbounds %struct.Reg, %struct.Reg* %20891, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %20892 to i64*
  %20893 = load i64, i64* %RBP.i441
  %20894 = sub i64 %20893, 40
  %20895 = load i64, i64* %PC.i440
  %20896 = add i64 %20895, 4
  store i64 %20896, i64* %PC.i440
  %20897 = inttoptr i64 %20894 to i32*
  %20898 = load i32, i32* %20897
  %20899 = sub i32 %20898, 3
  %20900 = icmp ult i32 %20898, 3
  %20901 = zext i1 %20900 to i8
  %20902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20901, i8* %20902, align 1
  %20903 = and i32 %20899, 255
  %20904 = call i32 @llvm.ctpop.i32(i32 %20903)
  %20905 = trunc i32 %20904 to i8
  %20906 = and i8 %20905, 1
  %20907 = xor i8 %20906, 1
  %20908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20907, i8* %20908, align 1
  %20909 = xor i32 %20898, 3
  %20910 = xor i32 %20909, %20899
  %20911 = lshr i32 %20910, 4
  %20912 = trunc i32 %20911 to i8
  %20913 = and i8 %20912, 1
  %20914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20913, i8* %20914, align 1
  %20915 = icmp eq i32 %20899, 0
  %20916 = zext i1 %20915 to i8
  %20917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20916, i8* %20917, align 1
  %20918 = lshr i32 %20899, 31
  %20919 = trunc i32 %20918 to i8
  %20920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20919, i8* %20920, align 1
  %20921 = lshr i32 %20898, 31
  %20922 = xor i32 %20918, %20921
  %20923 = add i32 %20922, %20921
  %20924 = icmp eq i32 %20923, 2
  %20925 = zext i1 %20924 to i8
  %20926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20925, i8* %20926, align 1
  store %struct.Memory* %loadMem_4afa2d, %struct.Memory** %MEMORY
  %loadMem_4afa31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20928 = getelementptr inbounds %struct.GPR, %struct.GPR* %20927, i32 0, i32 33
  %20929 = getelementptr inbounds %struct.Reg, %struct.Reg* %20928, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %20929 to i64*
  %20930 = load i64, i64* %PC.i439
  %20931 = add i64 %20930, 172
  %20932 = load i64, i64* %PC.i439
  %20933 = add i64 %20932, 6
  %20934 = load i64, i64* %PC.i439
  %20935 = add i64 %20934, 6
  store i64 %20935, i64* %PC.i439
  %20936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20937 = load i8, i8* %20936, align 1
  %20938 = icmp ne i8 %20937, 0
  %20939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20940 = load i8, i8* %20939, align 1
  %20941 = icmp ne i8 %20940, 0
  %20942 = xor i1 %20938, %20941
  %20943 = xor i1 %20942, true
  %20944 = zext i1 %20943 to i8
  store i8 %20944, i8* %BRANCH_TAKEN, align 1
  %20945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20946 = select i1 %20942, i64 %20933, i64 %20931
  store i64 %20946, i64* %20945, align 8
  store %struct.Memory* %loadMem_4afa31, %struct.Memory** %MEMORY
  %loadBr_4afa31 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afa31 = icmp eq i8 %loadBr_4afa31, 1
  br i1 %cmpBr_4afa31, label %block_.L_4afadd, label %block_4afa37

block_4afa37:                                     ; preds = %block_.L_4afa2d
  %loadMem_4afa37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20948 = getelementptr inbounds %struct.GPR, %struct.GPR* %20947, i32 0, i32 33
  %20949 = getelementptr inbounds %struct.Reg, %struct.Reg* %20948, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %20949 to i64*
  %20950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20951 = getelementptr inbounds %struct.GPR, %struct.GPR* %20950, i32 0, i32 1
  %20952 = getelementptr inbounds %struct.Reg, %struct.Reg* %20951, i32 0, i32 0
  %RAX.i437 = bitcast %union.anon* %20952 to i64*
  %20953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20954 = getelementptr inbounds %struct.GPR, %struct.GPR* %20953, i32 0, i32 15
  %20955 = getelementptr inbounds %struct.Reg, %struct.Reg* %20954, i32 0, i32 0
  %RBP.i438 = bitcast %union.anon* %20955 to i64*
  %20956 = load i64, i64* %RBP.i438
  %20957 = sub i64 %20956, 2976
  %20958 = load i64, i64* %PC.i436
  %20959 = add i64 %20958, 7
  store i64 %20959, i64* %PC.i436
  store i64 %20957, i64* %RAX.i437, align 8
  store %struct.Memory* %loadMem_4afa37, %struct.Memory** %MEMORY
  %loadMem_4afa3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20961 = getelementptr inbounds %struct.GPR, %struct.GPR* %20960, i32 0, i32 33
  %20962 = getelementptr inbounds %struct.Reg, %struct.Reg* %20961, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %20962 to i64*
  %20963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20964 = getelementptr inbounds %struct.GPR, %struct.GPR* %20963, i32 0, i32 5
  %20965 = getelementptr inbounds %struct.Reg, %struct.Reg* %20964, i32 0, i32 0
  %RCX.i434 = bitcast %union.anon* %20965 to i64*
  %20966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20967 = getelementptr inbounds %struct.GPR, %struct.GPR* %20966, i32 0, i32 15
  %20968 = getelementptr inbounds %struct.Reg, %struct.Reg* %20967, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %20968 to i64*
  %20969 = load i64, i64* %RBP.i435
  %20970 = sub i64 %20969, 1888
  %20971 = load i64, i64* %PC.i433
  %20972 = add i64 %20971, 7
  store i64 %20972, i64* %PC.i433
  store i64 %20970, i64* %RCX.i434, align 8
  store %struct.Memory* %loadMem_4afa3e, %struct.Memory** %MEMORY
  %loadMem_4afa45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20974 = getelementptr inbounds %struct.GPR, %struct.GPR* %20973, i32 0, i32 33
  %20975 = getelementptr inbounds %struct.Reg, %struct.Reg* %20974, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %20975 to i64*
  %20976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20977 = getelementptr inbounds %struct.GPR, %struct.GPR* %20976, i32 0, i32 7
  %20978 = getelementptr inbounds %struct.Reg, %struct.Reg* %20977, i32 0, i32 0
  %RDX.i431 = bitcast %union.anon* %20978 to i64*
  %20979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20980 = getelementptr inbounds %struct.GPR, %struct.GPR* %20979, i32 0, i32 15
  %20981 = getelementptr inbounds %struct.Reg, %struct.Reg* %20980, i32 0, i32 0
  %RBP.i432 = bitcast %union.anon* %20981 to i64*
  %20982 = load i64, i64* %RBP.i432
  %20983 = sub i64 %20982, 35396
  %20984 = load i64, i64* %PC.i430
  %20985 = add i64 %20984, 7
  store i64 %20985, i64* %PC.i430
  %20986 = inttoptr i64 %20983 to i32*
  %20987 = load i32, i32* %20986
  %20988 = sext i32 %20987 to i64
  store i64 %20988, i64* %RDX.i431, align 8
  store %struct.Memory* %loadMem_4afa45, %struct.Memory** %MEMORY
  %loadMem_4afa4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20990 = getelementptr inbounds %struct.GPR, %struct.GPR* %20989, i32 0, i32 33
  %20991 = getelementptr inbounds %struct.Reg, %struct.Reg* %20990, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %20991 to i64*
  %20992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20993 = getelementptr inbounds %struct.GPR, %struct.GPR* %20992, i32 0, i32 7
  %20994 = getelementptr inbounds %struct.Reg, %struct.Reg* %20993, i32 0, i32 0
  %RDX.i429 = bitcast %union.anon* %20994 to i64*
  %20995 = load i64, i64* %RDX.i429
  %20996 = load i64, i64* %PC.i428
  %20997 = add i64 %20996, 7
  store i64 %20997, i64* %PC.i428
  %20998 = sext i64 %20995 to i128
  %20999 = and i128 %20998, -18446744073709551616
  %21000 = zext i64 %20995 to i128
  %21001 = or i128 %20999, %21000
  %21002 = mul i128 180, %21001
  %21003 = trunc i128 %21002 to i64
  store i64 %21003, i64* %RDX.i429, align 8
  %21004 = sext i64 %21003 to i128
  %21005 = icmp ne i128 %21004, %21002
  %21006 = zext i1 %21005 to i8
  %21007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21006, i8* %21007, align 1
  %21008 = trunc i128 %21002 to i32
  %21009 = and i32 %21008, 255
  %21010 = call i32 @llvm.ctpop.i32(i32 %21009)
  %21011 = trunc i32 %21010 to i8
  %21012 = and i8 %21011, 1
  %21013 = xor i8 %21012, 1
  %21014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21013, i8* %21014, align 1
  %21015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21015, align 1
  %21016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %21016, align 1
  %21017 = lshr i64 %21003, 63
  %21018 = trunc i64 %21017 to i8
  %21019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21018, i8* %21019, align 1
  %21020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21006, i8* %21020, align 1
  store %struct.Memory* %loadMem_4afa4c, %struct.Memory** %MEMORY
  %loadMem_4afa53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21022 = getelementptr inbounds %struct.GPR, %struct.GPR* %21021, i32 0, i32 33
  %21023 = getelementptr inbounds %struct.Reg, %struct.Reg* %21022, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %21023 to i64*
  %21024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21025 = getelementptr inbounds %struct.GPR, %struct.GPR* %21024, i32 0, i32 5
  %21026 = getelementptr inbounds %struct.Reg, %struct.Reg* %21025, i32 0, i32 0
  %RCX.i426 = bitcast %union.anon* %21026 to i64*
  %21027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21028 = getelementptr inbounds %struct.GPR, %struct.GPR* %21027, i32 0, i32 7
  %21029 = getelementptr inbounds %struct.Reg, %struct.Reg* %21028, i32 0, i32 0
  %RDX.i427 = bitcast %union.anon* %21029 to i64*
  %21030 = load i64, i64* %RCX.i426
  %21031 = load i64, i64* %RDX.i427
  %21032 = load i64, i64* %PC.i425
  %21033 = add i64 %21032, 3
  store i64 %21033, i64* %PC.i425
  %21034 = add i64 %21031, %21030
  store i64 %21034, i64* %RCX.i426, align 8
  %21035 = icmp ult i64 %21034, %21030
  %21036 = icmp ult i64 %21034, %21031
  %21037 = or i1 %21035, %21036
  %21038 = zext i1 %21037 to i8
  %21039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21038, i8* %21039, align 1
  %21040 = trunc i64 %21034 to i32
  %21041 = and i32 %21040, 255
  %21042 = call i32 @llvm.ctpop.i32(i32 %21041)
  %21043 = trunc i32 %21042 to i8
  %21044 = and i8 %21043, 1
  %21045 = xor i8 %21044, 1
  %21046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21045, i8* %21046, align 1
  %21047 = xor i64 %21031, %21030
  %21048 = xor i64 %21047, %21034
  %21049 = lshr i64 %21048, 4
  %21050 = trunc i64 %21049 to i8
  %21051 = and i8 %21050, 1
  %21052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21051, i8* %21052, align 1
  %21053 = icmp eq i64 %21034, 0
  %21054 = zext i1 %21053 to i8
  %21055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21054, i8* %21055, align 1
  %21056 = lshr i64 %21034, 63
  %21057 = trunc i64 %21056 to i8
  %21058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21057, i8* %21058, align 1
  %21059 = lshr i64 %21030, 63
  %21060 = lshr i64 %21031, 63
  %21061 = xor i64 %21056, %21059
  %21062 = xor i64 %21056, %21060
  %21063 = add i64 %21061, %21062
  %21064 = icmp eq i64 %21063, 2
  %21065 = zext i1 %21064 to i8
  %21066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21065, i8* %21066, align 1
  store %struct.Memory* %loadMem_4afa53, %struct.Memory** %MEMORY
  %loadMem_4afa56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21068 = getelementptr inbounds %struct.GPR, %struct.GPR* %21067, i32 0, i32 33
  %21069 = getelementptr inbounds %struct.Reg, %struct.Reg* %21068, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %21069 to i64*
  %21070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21071 = getelementptr inbounds %struct.GPR, %struct.GPR* %21070, i32 0, i32 7
  %21072 = getelementptr inbounds %struct.Reg, %struct.Reg* %21071, i32 0, i32 0
  %RDX.i423 = bitcast %union.anon* %21072 to i64*
  %21073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21074 = getelementptr inbounds %struct.GPR, %struct.GPR* %21073, i32 0, i32 15
  %21075 = getelementptr inbounds %struct.Reg, %struct.Reg* %21074, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %21075 to i64*
  %21076 = load i64, i64* %RBP.i424
  %21077 = sub i64 %21076, 36
  %21078 = load i64, i64* %PC.i422
  %21079 = add i64 %21078, 4
  store i64 %21079, i64* %PC.i422
  %21080 = inttoptr i64 %21077 to i32*
  %21081 = load i32, i32* %21080
  %21082 = sext i32 %21081 to i64
  store i64 %21082, i64* %RDX.i423, align 8
  store %struct.Memory* %loadMem_4afa56, %struct.Memory** %MEMORY
  %loadMem_4afa5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21084 = getelementptr inbounds %struct.GPR, %struct.GPR* %21083, i32 0, i32 33
  %21085 = getelementptr inbounds %struct.Reg, %struct.Reg* %21084, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %21085 to i64*
  %21086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21087 = getelementptr inbounds %struct.GPR, %struct.GPR* %21086, i32 0, i32 7
  %21088 = getelementptr inbounds %struct.Reg, %struct.Reg* %21087, i32 0, i32 0
  %RDX.i421 = bitcast %union.anon* %21088 to i64*
  %21089 = load i64, i64* %RDX.i421
  %21090 = load i64, i64* %PC.i420
  %21091 = add i64 %21090, 4
  store i64 %21091, i64* %PC.i420
  %21092 = sext i64 %21089 to i128
  %21093 = and i128 %21092, -18446744073709551616
  %21094 = zext i64 %21089 to i128
  %21095 = or i128 %21093, %21094
  %21096 = mul i128 12, %21095
  %21097 = trunc i128 %21096 to i64
  store i64 %21097, i64* %RDX.i421, align 8
  %21098 = sext i64 %21097 to i128
  %21099 = icmp ne i128 %21098, %21096
  %21100 = zext i1 %21099 to i8
  %21101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21100, i8* %21101, align 1
  %21102 = trunc i128 %21096 to i32
  %21103 = and i32 %21102, 255
  %21104 = call i32 @llvm.ctpop.i32(i32 %21103)
  %21105 = trunc i32 %21104 to i8
  %21106 = and i8 %21105, 1
  %21107 = xor i8 %21106, 1
  %21108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21107, i8* %21108, align 1
  %21109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21109, align 1
  %21110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %21110, align 1
  %21111 = lshr i64 %21097, 63
  %21112 = trunc i64 %21111 to i8
  %21113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21112, i8* %21113, align 1
  %21114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21100, i8* %21114, align 1
  store %struct.Memory* %loadMem_4afa5a, %struct.Memory** %MEMORY
  %loadMem_4afa5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21116 = getelementptr inbounds %struct.GPR, %struct.GPR* %21115, i32 0, i32 33
  %21117 = getelementptr inbounds %struct.Reg, %struct.Reg* %21116, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %21117 to i64*
  %21118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21119 = getelementptr inbounds %struct.GPR, %struct.GPR* %21118, i32 0, i32 5
  %21120 = getelementptr inbounds %struct.Reg, %struct.Reg* %21119, i32 0, i32 0
  %RCX.i418 = bitcast %union.anon* %21120 to i64*
  %21121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21122 = getelementptr inbounds %struct.GPR, %struct.GPR* %21121, i32 0, i32 7
  %21123 = getelementptr inbounds %struct.Reg, %struct.Reg* %21122, i32 0, i32 0
  %RDX.i419 = bitcast %union.anon* %21123 to i64*
  %21124 = load i64, i64* %RCX.i418
  %21125 = load i64, i64* %RDX.i419
  %21126 = load i64, i64* %PC.i417
  %21127 = add i64 %21126, 3
  store i64 %21127, i64* %PC.i417
  %21128 = add i64 %21125, %21124
  store i64 %21128, i64* %RCX.i418, align 8
  %21129 = icmp ult i64 %21128, %21124
  %21130 = icmp ult i64 %21128, %21125
  %21131 = or i1 %21129, %21130
  %21132 = zext i1 %21131 to i8
  %21133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21132, i8* %21133, align 1
  %21134 = trunc i64 %21128 to i32
  %21135 = and i32 %21134, 255
  %21136 = call i32 @llvm.ctpop.i32(i32 %21135)
  %21137 = trunc i32 %21136 to i8
  %21138 = and i8 %21137, 1
  %21139 = xor i8 %21138, 1
  %21140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21139, i8* %21140, align 1
  %21141 = xor i64 %21125, %21124
  %21142 = xor i64 %21141, %21128
  %21143 = lshr i64 %21142, 4
  %21144 = trunc i64 %21143 to i8
  %21145 = and i8 %21144, 1
  %21146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21145, i8* %21146, align 1
  %21147 = icmp eq i64 %21128, 0
  %21148 = zext i1 %21147 to i8
  %21149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21148, i8* %21149, align 1
  %21150 = lshr i64 %21128, 63
  %21151 = trunc i64 %21150 to i8
  %21152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21151, i8* %21152, align 1
  %21153 = lshr i64 %21124, 63
  %21154 = lshr i64 %21125, 63
  %21155 = xor i64 %21150, %21153
  %21156 = xor i64 %21150, %21154
  %21157 = add i64 %21155, %21156
  %21158 = icmp eq i64 %21157, 2
  %21159 = zext i1 %21158 to i8
  %21160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21159, i8* %21160, align 1
  store %struct.Memory* %loadMem_4afa5e, %struct.Memory** %MEMORY
  %loadMem_4afa61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21162 = getelementptr inbounds %struct.GPR, %struct.GPR* %21161, i32 0, i32 33
  %21163 = getelementptr inbounds %struct.Reg, %struct.Reg* %21162, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %21163 to i64*
  %21164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21165 = getelementptr inbounds %struct.GPR, %struct.GPR* %21164, i32 0, i32 7
  %21166 = getelementptr inbounds %struct.Reg, %struct.Reg* %21165, i32 0, i32 0
  %RDX.i415 = bitcast %union.anon* %21166 to i64*
  %21167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21168 = getelementptr inbounds %struct.GPR, %struct.GPR* %21167, i32 0, i32 15
  %21169 = getelementptr inbounds %struct.Reg, %struct.Reg* %21168, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %21169 to i64*
  %21170 = load i64, i64* %RBP.i416
  %21171 = sub i64 %21170, 40
  %21172 = load i64, i64* %PC.i414
  %21173 = add i64 %21172, 4
  store i64 %21173, i64* %PC.i414
  %21174 = inttoptr i64 %21171 to i32*
  %21175 = load i32, i32* %21174
  %21176 = sext i32 %21175 to i64
  store i64 %21176, i64* %RDX.i415, align 8
  store %struct.Memory* %loadMem_4afa61, %struct.Memory** %MEMORY
  %loadMem_4afa65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21178 = getelementptr inbounds %struct.GPR, %struct.GPR* %21177, i32 0, i32 33
  %21179 = getelementptr inbounds %struct.Reg, %struct.Reg* %21178, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %21179 to i64*
  %21180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21181 = getelementptr inbounds %struct.GPR, %struct.GPR* %21180, i32 0, i32 5
  %21182 = getelementptr inbounds %struct.Reg, %struct.Reg* %21181, i32 0, i32 0
  %RCX.i411 = bitcast %union.anon* %21182 to i64*
  %21183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21184 = getelementptr inbounds %struct.GPR, %struct.GPR* %21183, i32 0, i32 7
  %21185 = getelementptr inbounds %struct.Reg, %struct.Reg* %21184, i32 0, i32 0
  %RDX.i412 = bitcast %union.anon* %21185 to i64*
  %21186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21187 = getelementptr inbounds %struct.GPR, %struct.GPR* %21186, i32 0, i32 9
  %21188 = getelementptr inbounds %struct.Reg, %struct.Reg* %21187, i32 0, i32 0
  %RSI.i413 = bitcast %union.anon* %21188 to i64*
  %21189 = load i64, i64* %RCX.i411
  %21190 = load i64, i64* %RDX.i412
  %21191 = mul i64 %21190, 4
  %21192 = add i64 %21191, %21189
  %21193 = load i64, i64* %PC.i410
  %21194 = add i64 %21193, 3
  store i64 %21194, i64* %PC.i410
  %21195 = inttoptr i64 %21192 to i32*
  %21196 = load i32, i32* %21195
  %21197 = zext i32 %21196 to i64
  store i64 %21197, i64* %RSI.i413, align 8
  store %struct.Memory* %loadMem_4afa65, %struct.Memory** %MEMORY
  %loadMem_4afa68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21199 = getelementptr inbounds %struct.GPR, %struct.GPR* %21198, i32 0, i32 33
  %21200 = getelementptr inbounds %struct.Reg, %struct.Reg* %21199, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %21200 to i64*
  %21201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21202 = getelementptr inbounds %struct.GPR, %struct.GPR* %21201, i32 0, i32 5
  %21203 = getelementptr inbounds %struct.Reg, %struct.Reg* %21202, i32 0, i32 0
  %RCX.i409 = bitcast %union.anon* %21203 to i64*
  %21204 = load i64, i64* %PC.i408
  %21205 = add i64 %21204, 8
  store i64 %21205, i64* %PC.i408
  %21206 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %21206, i64* %RCX.i409, align 8
  store %struct.Memory* %loadMem_4afa68, %struct.Memory** %MEMORY
  %loadMem_4afa70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21208 = getelementptr inbounds %struct.GPR, %struct.GPR* %21207, i32 0, i32 33
  %21209 = getelementptr inbounds %struct.Reg, %struct.Reg* %21208, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %21209 to i64*
  %21210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21211 = getelementptr inbounds %struct.GPR, %struct.GPR* %21210, i32 0, i32 7
  %21212 = getelementptr inbounds %struct.Reg, %struct.Reg* %21211, i32 0, i32 0
  %RDX.i406 = bitcast %union.anon* %21212 to i64*
  %21213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21214 = getelementptr inbounds %struct.GPR, %struct.GPR* %21213, i32 0, i32 15
  %21215 = getelementptr inbounds %struct.Reg, %struct.Reg* %21214, i32 0, i32 0
  %RBP.i407 = bitcast %union.anon* %21215 to i64*
  %21216 = load i64, i64* %RBP.i407
  %21217 = sub i64 %21216, 35396
  %21218 = load i64, i64* %PC.i405
  %21219 = add i64 %21218, 7
  store i64 %21219, i64* %PC.i405
  %21220 = inttoptr i64 %21217 to i32*
  %21221 = load i32, i32* %21220
  %21222 = sext i32 %21221 to i64
  store i64 %21222, i64* %RDX.i406, align 8
  store %struct.Memory* %loadMem_4afa70, %struct.Memory** %MEMORY
  %loadMem_4afa77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21224 = getelementptr inbounds %struct.GPR, %struct.GPR* %21223, i32 0, i32 33
  %21225 = getelementptr inbounds %struct.Reg, %struct.Reg* %21224, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %21225 to i64*
  %21226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21227 = getelementptr inbounds %struct.GPR, %struct.GPR* %21226, i32 0, i32 5
  %21228 = getelementptr inbounds %struct.Reg, %struct.Reg* %21227, i32 0, i32 0
  %RCX.i403 = bitcast %union.anon* %21228 to i64*
  %21229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21230 = getelementptr inbounds %struct.GPR, %struct.GPR* %21229, i32 0, i32 7
  %21231 = getelementptr inbounds %struct.Reg, %struct.Reg* %21230, i32 0, i32 0
  %RDX.i404 = bitcast %union.anon* %21231 to i64*
  %21232 = load i64, i64* %RCX.i403
  %21233 = load i64, i64* %RDX.i404
  %21234 = mul i64 %21233, 8
  %21235 = add i64 %21234, %21232
  %21236 = load i64, i64* %PC.i402
  %21237 = add i64 %21236, 4
  store i64 %21237, i64* %PC.i402
  %21238 = inttoptr i64 %21235 to i64*
  %21239 = load i64, i64* %21238
  store i64 %21239, i64* %RCX.i403, align 8
  store %struct.Memory* %loadMem_4afa77, %struct.Memory** %MEMORY
  %loadMem_4afa7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21241 = getelementptr inbounds %struct.GPR, %struct.GPR* %21240, i32 0, i32 33
  %21242 = getelementptr inbounds %struct.Reg, %struct.Reg* %21241, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %21242 to i64*
  %21243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21244 = getelementptr inbounds %struct.GPR, %struct.GPR* %21243, i32 0, i32 7
  %21245 = getelementptr inbounds %struct.Reg, %struct.Reg* %21244, i32 0, i32 0
  %RDX.i400 = bitcast %union.anon* %21245 to i64*
  %21246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21247 = getelementptr inbounds %struct.GPR, %struct.GPR* %21246, i32 0, i32 15
  %21248 = getelementptr inbounds %struct.Reg, %struct.Reg* %21247, i32 0, i32 0
  %RBP.i401 = bitcast %union.anon* %21248 to i64*
  %21249 = load i64, i64* %RBP.i401
  %21250 = sub i64 %21249, 36
  %21251 = load i64, i64* %PC.i399
  %21252 = add i64 %21251, 4
  store i64 %21252, i64* %PC.i399
  %21253 = inttoptr i64 %21250 to i32*
  %21254 = load i32, i32* %21253
  %21255 = sext i32 %21254 to i64
  store i64 %21255, i64* %RDX.i400, align 8
  store %struct.Memory* %loadMem_4afa7b, %struct.Memory** %MEMORY
  %loadMem_4afa7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21257 = getelementptr inbounds %struct.GPR, %struct.GPR* %21256, i32 0, i32 33
  %21258 = getelementptr inbounds %struct.Reg, %struct.Reg* %21257, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %21258 to i64*
  %21259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21260 = getelementptr inbounds %struct.GPR, %struct.GPR* %21259, i32 0, i32 5
  %21261 = getelementptr inbounds %struct.Reg, %struct.Reg* %21260, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %21261 to i64*
  %21262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21263 = getelementptr inbounds %struct.GPR, %struct.GPR* %21262, i32 0, i32 7
  %21264 = getelementptr inbounds %struct.Reg, %struct.Reg* %21263, i32 0, i32 0
  %RDX.i398 = bitcast %union.anon* %21264 to i64*
  %21265 = load i64, i64* %RCX.i397
  %21266 = load i64, i64* %RDX.i398
  %21267 = mul i64 %21266, 8
  %21268 = add i64 %21267, %21265
  %21269 = load i64, i64* %PC.i396
  %21270 = add i64 %21269, 4
  store i64 %21270, i64* %PC.i396
  %21271 = inttoptr i64 %21268 to i64*
  %21272 = load i64, i64* %21271
  store i64 %21272, i64* %RCX.i397, align 8
  store %struct.Memory* %loadMem_4afa7f, %struct.Memory** %MEMORY
  %loadMem_4afa83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21274 = getelementptr inbounds %struct.GPR, %struct.GPR* %21273, i32 0, i32 33
  %21275 = getelementptr inbounds %struct.Reg, %struct.Reg* %21274, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %21275 to i64*
  %21276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21277 = getelementptr inbounds %struct.GPR, %struct.GPR* %21276, i32 0, i32 7
  %21278 = getelementptr inbounds %struct.Reg, %struct.Reg* %21277, i32 0, i32 0
  %RDX.i394 = bitcast %union.anon* %21278 to i64*
  %21279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21280 = getelementptr inbounds %struct.GPR, %struct.GPR* %21279, i32 0, i32 15
  %21281 = getelementptr inbounds %struct.Reg, %struct.Reg* %21280, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %21281 to i64*
  %21282 = load i64, i64* %RBP.i395
  %21283 = sub i64 %21282, 40
  %21284 = load i64, i64* %PC.i393
  %21285 = add i64 %21284, 4
  store i64 %21285, i64* %PC.i393
  %21286 = inttoptr i64 %21283 to i32*
  %21287 = load i32, i32* %21286
  %21288 = sext i32 %21287 to i64
  store i64 %21288, i64* %RDX.i394, align 8
  store %struct.Memory* %loadMem_4afa83, %struct.Memory** %MEMORY
  %loadMem_4afa87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21290 = getelementptr inbounds %struct.GPR, %struct.GPR* %21289, i32 0, i32 33
  %21291 = getelementptr inbounds %struct.Reg, %struct.Reg* %21290, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %21291 to i64*
  %21292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21293 = getelementptr inbounds %struct.GPR, %struct.GPR* %21292, i32 0, i32 9
  %21294 = getelementptr inbounds %struct.Reg, %struct.Reg* %21293, i32 0, i32 0
  %ESI.i390 = bitcast %union.anon* %21294 to i32*
  %21295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21296 = getelementptr inbounds %struct.GPR, %struct.GPR* %21295, i32 0, i32 5
  %21297 = getelementptr inbounds %struct.Reg, %struct.Reg* %21296, i32 0, i32 0
  %RCX.i391 = bitcast %union.anon* %21297 to i64*
  %21298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21299 = getelementptr inbounds %struct.GPR, %struct.GPR* %21298, i32 0, i32 7
  %21300 = getelementptr inbounds %struct.Reg, %struct.Reg* %21299, i32 0, i32 0
  %RDX.i392 = bitcast %union.anon* %21300 to i64*
  %21301 = load i64, i64* %RCX.i391
  %21302 = load i64, i64* %RDX.i392
  %21303 = mul i64 %21302, 4
  %21304 = add i64 %21303, %21301
  %21305 = load i32, i32* %ESI.i390
  %21306 = zext i32 %21305 to i64
  %21307 = load i64, i64* %PC.i389
  %21308 = add i64 %21307, 3
  store i64 %21308, i64* %PC.i389
  %21309 = inttoptr i64 %21304 to i32*
  store i32 %21305, i32* %21309
  store %struct.Memory* %loadMem_4afa87, %struct.Memory** %MEMORY
  %loadMem_4afa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21311 = getelementptr inbounds %struct.GPR, %struct.GPR* %21310, i32 0, i32 33
  %21312 = getelementptr inbounds %struct.Reg, %struct.Reg* %21311, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %21312 to i64*
  %21313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21314 = getelementptr inbounds %struct.GPR, %struct.GPR* %21313, i32 0, i32 5
  %21315 = getelementptr inbounds %struct.Reg, %struct.Reg* %21314, i32 0, i32 0
  %RCX.i387 = bitcast %union.anon* %21315 to i64*
  %21316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21317 = getelementptr inbounds %struct.GPR, %struct.GPR* %21316, i32 0, i32 15
  %21318 = getelementptr inbounds %struct.Reg, %struct.Reg* %21317, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %21318 to i64*
  %21319 = load i64, i64* %RBP.i388
  %21320 = sub i64 %21319, 35396
  %21321 = load i64, i64* %PC.i386
  %21322 = add i64 %21321, 7
  store i64 %21322, i64* %PC.i386
  %21323 = inttoptr i64 %21320 to i32*
  %21324 = load i32, i32* %21323
  %21325 = sext i32 %21324 to i64
  store i64 %21325, i64* %RCX.i387, align 8
  store %struct.Memory* %loadMem_4afa8a, %struct.Memory** %MEMORY
  %loadMem_4afa91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21327 = getelementptr inbounds %struct.GPR, %struct.GPR* %21326, i32 0, i32 33
  %21328 = getelementptr inbounds %struct.Reg, %struct.Reg* %21327, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %21328 to i64*
  %21329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21330 = getelementptr inbounds %struct.GPR, %struct.GPR* %21329, i32 0, i32 5
  %21331 = getelementptr inbounds %struct.Reg, %struct.Reg* %21330, i32 0, i32 0
  %RCX.i385 = bitcast %union.anon* %21331 to i64*
  %21332 = load i64, i64* %RCX.i385
  %21333 = load i64, i64* %PC.i384
  %21334 = add i64 %21333, 7
  store i64 %21334, i64* %PC.i384
  %21335 = sext i64 %21332 to i128
  %21336 = and i128 %21335, -18446744073709551616
  %21337 = zext i64 %21332 to i128
  %21338 = or i128 %21336, %21337
  %21339 = mul i128 180, %21338
  %21340 = trunc i128 %21339 to i64
  store i64 %21340, i64* %RCX.i385, align 8
  %21341 = sext i64 %21340 to i128
  %21342 = icmp ne i128 %21341, %21339
  %21343 = zext i1 %21342 to i8
  %21344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21343, i8* %21344, align 1
  %21345 = trunc i128 %21339 to i32
  %21346 = and i32 %21345, 255
  %21347 = call i32 @llvm.ctpop.i32(i32 %21346)
  %21348 = trunc i32 %21347 to i8
  %21349 = and i8 %21348, 1
  %21350 = xor i8 %21349, 1
  %21351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21350, i8* %21351, align 1
  %21352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21352, align 1
  %21353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %21353, align 1
  %21354 = lshr i64 %21340, 63
  %21355 = trunc i64 %21354 to i8
  %21356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21355, i8* %21356, align 1
  %21357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21343, i8* %21357, align 1
  store %struct.Memory* %loadMem_4afa91, %struct.Memory** %MEMORY
  %loadMem_4afa98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21359 = getelementptr inbounds %struct.GPR, %struct.GPR* %21358, i32 0, i32 33
  %21360 = getelementptr inbounds %struct.Reg, %struct.Reg* %21359, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %21360 to i64*
  %21361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21362 = getelementptr inbounds %struct.GPR, %struct.GPR* %21361, i32 0, i32 1
  %21363 = getelementptr inbounds %struct.Reg, %struct.Reg* %21362, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %21363 to i64*
  %21364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21365 = getelementptr inbounds %struct.GPR, %struct.GPR* %21364, i32 0, i32 5
  %21366 = getelementptr inbounds %struct.Reg, %struct.Reg* %21365, i32 0, i32 0
  %RCX.i383 = bitcast %union.anon* %21366 to i64*
  %21367 = load i64, i64* %RAX.i382
  %21368 = load i64, i64* %RCX.i383
  %21369 = load i64, i64* %PC.i381
  %21370 = add i64 %21369, 3
  store i64 %21370, i64* %PC.i381
  %21371 = add i64 %21368, %21367
  store i64 %21371, i64* %RAX.i382, align 8
  %21372 = icmp ult i64 %21371, %21367
  %21373 = icmp ult i64 %21371, %21368
  %21374 = or i1 %21372, %21373
  %21375 = zext i1 %21374 to i8
  %21376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21375, i8* %21376, align 1
  %21377 = trunc i64 %21371 to i32
  %21378 = and i32 %21377, 255
  %21379 = call i32 @llvm.ctpop.i32(i32 %21378)
  %21380 = trunc i32 %21379 to i8
  %21381 = and i8 %21380, 1
  %21382 = xor i8 %21381, 1
  %21383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21382, i8* %21383, align 1
  %21384 = xor i64 %21368, %21367
  %21385 = xor i64 %21384, %21371
  %21386 = lshr i64 %21385, 4
  %21387 = trunc i64 %21386 to i8
  %21388 = and i8 %21387, 1
  %21389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21388, i8* %21389, align 1
  %21390 = icmp eq i64 %21371, 0
  %21391 = zext i1 %21390 to i8
  %21392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21391, i8* %21392, align 1
  %21393 = lshr i64 %21371, 63
  %21394 = trunc i64 %21393 to i8
  %21395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21394, i8* %21395, align 1
  %21396 = lshr i64 %21367, 63
  %21397 = lshr i64 %21368, 63
  %21398 = xor i64 %21393, %21396
  %21399 = xor i64 %21393, %21397
  %21400 = add i64 %21398, %21399
  %21401 = icmp eq i64 %21400, 2
  %21402 = zext i1 %21401 to i8
  %21403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21402, i8* %21403, align 1
  store %struct.Memory* %loadMem_4afa98, %struct.Memory** %MEMORY
  %loadMem_4afa9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21405 = getelementptr inbounds %struct.GPR, %struct.GPR* %21404, i32 0, i32 33
  %21406 = getelementptr inbounds %struct.Reg, %struct.Reg* %21405, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %21406 to i64*
  %21407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21408 = getelementptr inbounds %struct.GPR, %struct.GPR* %21407, i32 0, i32 5
  %21409 = getelementptr inbounds %struct.Reg, %struct.Reg* %21408, i32 0, i32 0
  %RCX.i379 = bitcast %union.anon* %21409 to i64*
  %21410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21411 = getelementptr inbounds %struct.GPR, %struct.GPR* %21410, i32 0, i32 15
  %21412 = getelementptr inbounds %struct.Reg, %struct.Reg* %21411, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %21412 to i64*
  %21413 = load i64, i64* %RBP.i380
  %21414 = sub i64 %21413, 36
  %21415 = load i64, i64* %PC.i378
  %21416 = add i64 %21415, 4
  store i64 %21416, i64* %PC.i378
  %21417 = inttoptr i64 %21414 to i32*
  %21418 = load i32, i32* %21417
  %21419 = sext i32 %21418 to i64
  store i64 %21419, i64* %RCX.i379, align 8
  store %struct.Memory* %loadMem_4afa9b, %struct.Memory** %MEMORY
  %loadMem_4afa9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21421 = getelementptr inbounds %struct.GPR, %struct.GPR* %21420, i32 0, i32 33
  %21422 = getelementptr inbounds %struct.Reg, %struct.Reg* %21421, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %21422 to i64*
  %21423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21424 = getelementptr inbounds %struct.GPR, %struct.GPR* %21423, i32 0, i32 5
  %21425 = getelementptr inbounds %struct.Reg, %struct.Reg* %21424, i32 0, i32 0
  %RCX.i377 = bitcast %union.anon* %21425 to i64*
  %21426 = load i64, i64* %RCX.i377
  %21427 = load i64, i64* %PC.i376
  %21428 = add i64 %21427, 4
  store i64 %21428, i64* %PC.i376
  %21429 = sext i64 %21426 to i128
  %21430 = and i128 %21429, -18446744073709551616
  %21431 = zext i64 %21426 to i128
  %21432 = or i128 %21430, %21431
  %21433 = mul i128 12, %21432
  %21434 = trunc i128 %21433 to i64
  store i64 %21434, i64* %RCX.i377, align 8
  %21435 = sext i64 %21434 to i128
  %21436 = icmp ne i128 %21435, %21433
  %21437 = zext i1 %21436 to i8
  %21438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21437, i8* %21438, align 1
  %21439 = trunc i128 %21433 to i32
  %21440 = and i32 %21439, 255
  %21441 = call i32 @llvm.ctpop.i32(i32 %21440)
  %21442 = trunc i32 %21441 to i8
  %21443 = and i8 %21442, 1
  %21444 = xor i8 %21443, 1
  %21445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21444, i8* %21445, align 1
  %21446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21446, align 1
  %21447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %21447, align 1
  %21448 = lshr i64 %21434, 63
  %21449 = trunc i64 %21448 to i8
  %21450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21449, i8* %21450, align 1
  %21451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21437, i8* %21451, align 1
  store %struct.Memory* %loadMem_4afa9f, %struct.Memory** %MEMORY
  %loadMem_4afaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21453 = getelementptr inbounds %struct.GPR, %struct.GPR* %21452, i32 0, i32 33
  %21454 = getelementptr inbounds %struct.Reg, %struct.Reg* %21453, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %21454 to i64*
  %21455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21456 = getelementptr inbounds %struct.GPR, %struct.GPR* %21455, i32 0, i32 1
  %21457 = getelementptr inbounds %struct.Reg, %struct.Reg* %21456, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %21457 to i64*
  %21458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21459 = getelementptr inbounds %struct.GPR, %struct.GPR* %21458, i32 0, i32 5
  %21460 = getelementptr inbounds %struct.Reg, %struct.Reg* %21459, i32 0, i32 0
  %RCX.i375 = bitcast %union.anon* %21460 to i64*
  %21461 = load i64, i64* %RAX.i374
  %21462 = load i64, i64* %RCX.i375
  %21463 = load i64, i64* %PC.i373
  %21464 = add i64 %21463, 3
  store i64 %21464, i64* %PC.i373
  %21465 = add i64 %21462, %21461
  store i64 %21465, i64* %RAX.i374, align 8
  %21466 = icmp ult i64 %21465, %21461
  %21467 = icmp ult i64 %21465, %21462
  %21468 = or i1 %21466, %21467
  %21469 = zext i1 %21468 to i8
  %21470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21469, i8* %21470, align 1
  %21471 = trunc i64 %21465 to i32
  %21472 = and i32 %21471, 255
  %21473 = call i32 @llvm.ctpop.i32(i32 %21472)
  %21474 = trunc i32 %21473 to i8
  %21475 = and i8 %21474, 1
  %21476 = xor i8 %21475, 1
  %21477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21476, i8* %21477, align 1
  %21478 = xor i64 %21462, %21461
  %21479 = xor i64 %21478, %21465
  %21480 = lshr i64 %21479, 4
  %21481 = trunc i64 %21480 to i8
  %21482 = and i8 %21481, 1
  %21483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21482, i8* %21483, align 1
  %21484 = icmp eq i64 %21465, 0
  %21485 = zext i1 %21484 to i8
  %21486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21485, i8* %21486, align 1
  %21487 = lshr i64 %21465, 63
  %21488 = trunc i64 %21487 to i8
  %21489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21488, i8* %21489, align 1
  %21490 = lshr i64 %21461, 63
  %21491 = lshr i64 %21462, 63
  %21492 = xor i64 %21487, %21490
  %21493 = xor i64 %21487, %21491
  %21494 = add i64 %21492, %21493
  %21495 = icmp eq i64 %21494, 2
  %21496 = zext i1 %21495 to i8
  %21497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21496, i8* %21497, align 1
  store %struct.Memory* %loadMem_4afaa3, %struct.Memory** %MEMORY
  %loadMem_4afaa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21499 = getelementptr inbounds %struct.GPR, %struct.GPR* %21498, i32 0, i32 33
  %21500 = getelementptr inbounds %struct.Reg, %struct.Reg* %21499, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %21500 to i64*
  %21501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21502 = getelementptr inbounds %struct.GPR, %struct.GPR* %21501, i32 0, i32 5
  %21503 = getelementptr inbounds %struct.Reg, %struct.Reg* %21502, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %21503 to i64*
  %21504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21505 = getelementptr inbounds %struct.GPR, %struct.GPR* %21504, i32 0, i32 15
  %21506 = getelementptr inbounds %struct.Reg, %struct.Reg* %21505, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %21506 to i64*
  %21507 = load i64, i64* %RBP.i372
  %21508 = sub i64 %21507, 40
  %21509 = load i64, i64* %PC.i370
  %21510 = add i64 %21509, 4
  store i64 %21510, i64* %PC.i370
  %21511 = inttoptr i64 %21508 to i32*
  %21512 = load i32, i32* %21511
  %21513 = sext i32 %21512 to i64
  store i64 %21513, i64* %RCX.i371, align 8
  store %struct.Memory* %loadMem_4afaa6, %struct.Memory** %MEMORY
  %loadMem_4afaaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %21514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21515 = getelementptr inbounds %struct.GPR, %struct.GPR* %21514, i32 0, i32 33
  %21516 = getelementptr inbounds %struct.Reg, %struct.Reg* %21515, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %21516 to i64*
  %21517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21518 = getelementptr inbounds %struct.GPR, %struct.GPR* %21517, i32 0, i32 1
  %21519 = getelementptr inbounds %struct.Reg, %struct.Reg* %21518, i32 0, i32 0
  %RAX.i367 = bitcast %union.anon* %21519 to i64*
  %21520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21521 = getelementptr inbounds %struct.GPR, %struct.GPR* %21520, i32 0, i32 5
  %21522 = getelementptr inbounds %struct.Reg, %struct.Reg* %21521, i32 0, i32 0
  %RCX.i368 = bitcast %union.anon* %21522 to i64*
  %21523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21524 = getelementptr inbounds %struct.GPR, %struct.GPR* %21523, i32 0, i32 9
  %21525 = getelementptr inbounds %struct.Reg, %struct.Reg* %21524, i32 0, i32 0
  %RSI.i369 = bitcast %union.anon* %21525 to i64*
  %21526 = load i64, i64* %RAX.i367
  %21527 = load i64, i64* %RCX.i368
  %21528 = mul i64 %21527, 4
  %21529 = add i64 %21528, %21526
  %21530 = load i64, i64* %PC.i366
  %21531 = add i64 %21530, 3
  store i64 %21531, i64* %PC.i366
  %21532 = inttoptr i64 %21529 to i32*
  %21533 = load i32, i32* %21532
  %21534 = zext i32 %21533 to i64
  store i64 %21534, i64* %RSI.i369, align 8
  store %struct.Memory* %loadMem_4afaaa, %struct.Memory** %MEMORY
  %loadMem_4afaad = load %struct.Memory*, %struct.Memory** %MEMORY
  %21535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21536 = getelementptr inbounds %struct.GPR, %struct.GPR* %21535, i32 0, i32 33
  %21537 = getelementptr inbounds %struct.Reg, %struct.Reg* %21536, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %21537 to i64*
  %21538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21539 = getelementptr inbounds %struct.GPR, %struct.GPR* %21538, i32 0, i32 1
  %21540 = getelementptr inbounds %struct.Reg, %struct.Reg* %21539, i32 0, i32 0
  %RAX.i365 = bitcast %union.anon* %21540 to i64*
  %21541 = load i64, i64* %PC.i364
  %21542 = add i64 %21541, 8
  store i64 %21542, i64* %PC.i364
  %21543 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %21543, i64* %RAX.i365, align 8
  store %struct.Memory* %loadMem_4afaad, %struct.Memory** %MEMORY
  %loadMem_4afab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21545 = getelementptr inbounds %struct.GPR, %struct.GPR* %21544, i32 0, i32 33
  %21546 = getelementptr inbounds %struct.Reg, %struct.Reg* %21545, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %21546 to i64*
  %21547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21548 = getelementptr inbounds %struct.GPR, %struct.GPR* %21547, i32 0, i32 5
  %21549 = getelementptr inbounds %struct.Reg, %struct.Reg* %21548, i32 0, i32 0
  %RCX.i362 = bitcast %union.anon* %21549 to i64*
  %21550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21551 = getelementptr inbounds %struct.GPR, %struct.GPR* %21550, i32 0, i32 15
  %21552 = getelementptr inbounds %struct.Reg, %struct.Reg* %21551, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %21552 to i64*
  %21553 = load i64, i64* %RBP.i363
  %21554 = sub i64 %21553, 35396
  %21555 = load i64, i64* %PC.i361
  %21556 = add i64 %21555, 7
  store i64 %21556, i64* %PC.i361
  %21557 = inttoptr i64 %21554 to i32*
  %21558 = load i32, i32* %21557
  %21559 = sext i32 %21558 to i64
  store i64 %21559, i64* %RCX.i362, align 8
  store %struct.Memory* %loadMem_4afab5, %struct.Memory** %MEMORY
  %loadMem_4afabc = load %struct.Memory*, %struct.Memory** %MEMORY
  %21560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21561 = getelementptr inbounds %struct.GPR, %struct.GPR* %21560, i32 0, i32 33
  %21562 = getelementptr inbounds %struct.Reg, %struct.Reg* %21561, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %21562 to i64*
  %21563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21564 = getelementptr inbounds %struct.GPR, %struct.GPR* %21563, i32 0, i32 1
  %21565 = getelementptr inbounds %struct.Reg, %struct.Reg* %21564, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %21565 to i64*
  %21566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21567 = getelementptr inbounds %struct.GPR, %struct.GPR* %21566, i32 0, i32 5
  %21568 = getelementptr inbounds %struct.Reg, %struct.Reg* %21567, i32 0, i32 0
  %RCX.i360 = bitcast %union.anon* %21568 to i64*
  %21569 = load i64, i64* %RAX.i359
  %21570 = load i64, i64* %RCX.i360
  %21571 = mul i64 %21570, 8
  %21572 = add i64 %21571, %21569
  %21573 = load i64, i64* %PC.i358
  %21574 = add i64 %21573, 4
  store i64 %21574, i64* %PC.i358
  %21575 = inttoptr i64 %21572 to i64*
  %21576 = load i64, i64* %21575
  store i64 %21576, i64* %RAX.i359, align 8
  store %struct.Memory* %loadMem_4afabc, %struct.Memory** %MEMORY
  %loadMem_4afac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21578 = getelementptr inbounds %struct.GPR, %struct.GPR* %21577, i32 0, i32 33
  %21579 = getelementptr inbounds %struct.Reg, %struct.Reg* %21578, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %21579 to i64*
  %21580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21581 = getelementptr inbounds %struct.GPR, %struct.GPR* %21580, i32 0, i32 5
  %21582 = getelementptr inbounds %struct.Reg, %struct.Reg* %21581, i32 0, i32 0
  %RCX.i356 = bitcast %union.anon* %21582 to i64*
  %21583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21584 = getelementptr inbounds %struct.GPR, %struct.GPR* %21583, i32 0, i32 15
  %21585 = getelementptr inbounds %struct.Reg, %struct.Reg* %21584, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %21585 to i64*
  %21586 = load i64, i64* %RBP.i357
  %21587 = sub i64 %21586, 36
  %21588 = load i64, i64* %PC.i355
  %21589 = add i64 %21588, 4
  store i64 %21589, i64* %PC.i355
  %21590 = inttoptr i64 %21587 to i32*
  %21591 = load i32, i32* %21590
  %21592 = sext i32 %21591 to i64
  store i64 %21592, i64* %RCX.i356, align 8
  store %struct.Memory* %loadMem_4afac0, %struct.Memory** %MEMORY
  %loadMem_4afac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21594 = getelementptr inbounds %struct.GPR, %struct.GPR* %21593, i32 0, i32 33
  %21595 = getelementptr inbounds %struct.Reg, %struct.Reg* %21594, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %21595 to i64*
  %21596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21597 = getelementptr inbounds %struct.GPR, %struct.GPR* %21596, i32 0, i32 1
  %21598 = getelementptr inbounds %struct.Reg, %struct.Reg* %21597, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %21598 to i64*
  %21599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21600 = getelementptr inbounds %struct.GPR, %struct.GPR* %21599, i32 0, i32 5
  %21601 = getelementptr inbounds %struct.Reg, %struct.Reg* %21600, i32 0, i32 0
  %RCX.i354 = bitcast %union.anon* %21601 to i64*
  %21602 = load i64, i64* %RAX.i353
  %21603 = load i64, i64* %RCX.i354
  %21604 = mul i64 %21603, 8
  %21605 = add i64 %21604, %21602
  %21606 = load i64, i64* %PC.i352
  %21607 = add i64 %21606, 4
  store i64 %21607, i64* %PC.i352
  %21608 = inttoptr i64 %21605 to i64*
  %21609 = load i64, i64* %21608
  store i64 %21609, i64* %RAX.i353, align 8
  store %struct.Memory* %loadMem_4afac4, %struct.Memory** %MEMORY
  %loadMem_4afac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21611 = getelementptr inbounds %struct.GPR, %struct.GPR* %21610, i32 0, i32 33
  %21612 = getelementptr inbounds %struct.Reg, %struct.Reg* %21611, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %21612 to i64*
  %21613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21614 = getelementptr inbounds %struct.GPR, %struct.GPR* %21613, i32 0, i32 5
  %21615 = getelementptr inbounds %struct.Reg, %struct.Reg* %21614, i32 0, i32 0
  %RCX.i350 = bitcast %union.anon* %21615 to i64*
  %21616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21617 = getelementptr inbounds %struct.GPR, %struct.GPR* %21616, i32 0, i32 15
  %21618 = getelementptr inbounds %struct.Reg, %struct.Reg* %21617, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %21618 to i64*
  %21619 = load i64, i64* %RBP.i351
  %21620 = sub i64 %21619, 40
  %21621 = load i64, i64* %PC.i349
  %21622 = add i64 %21621, 4
  store i64 %21622, i64* %PC.i349
  %21623 = inttoptr i64 %21620 to i32*
  %21624 = load i32, i32* %21623
  %21625 = sext i32 %21624 to i64
  store i64 %21625, i64* %RCX.i350, align 8
  store %struct.Memory* %loadMem_4afac8, %struct.Memory** %MEMORY
  %loadMem_4afacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %21626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21627 = getelementptr inbounds %struct.GPR, %struct.GPR* %21626, i32 0, i32 33
  %21628 = getelementptr inbounds %struct.Reg, %struct.Reg* %21627, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %21628 to i64*
  %21629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21630 = getelementptr inbounds %struct.GPR, %struct.GPR* %21629, i32 0, i32 9
  %21631 = getelementptr inbounds %struct.Reg, %struct.Reg* %21630, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %21631 to i32*
  %21632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21633 = getelementptr inbounds %struct.GPR, %struct.GPR* %21632, i32 0, i32 1
  %21634 = getelementptr inbounds %struct.Reg, %struct.Reg* %21633, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %21634 to i64*
  %21635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21636 = getelementptr inbounds %struct.GPR, %struct.GPR* %21635, i32 0, i32 5
  %21637 = getelementptr inbounds %struct.Reg, %struct.Reg* %21636, i32 0, i32 0
  %RCX.i348 = bitcast %union.anon* %21637 to i64*
  %21638 = load i64, i64* %RAX.i347
  %21639 = load i64, i64* %RCX.i348
  %21640 = mul i64 %21639, 4
  %21641 = add i64 %21640, %21638
  %21642 = load i32, i32* %ESI.i
  %21643 = zext i32 %21642 to i64
  %21644 = load i64, i64* %PC.i346
  %21645 = add i64 %21644, 3
  store i64 %21645, i64* %PC.i346
  %21646 = inttoptr i64 %21641 to i32*
  store i32 %21642, i32* %21646
  store %struct.Memory* %loadMem_4afacc, %struct.Memory** %MEMORY
  %loadMem_4afacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %21647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21648 = getelementptr inbounds %struct.GPR, %struct.GPR* %21647, i32 0, i32 33
  %21649 = getelementptr inbounds %struct.Reg, %struct.Reg* %21648, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %21649 to i64*
  %21650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21651 = getelementptr inbounds %struct.GPR, %struct.GPR* %21650, i32 0, i32 1
  %21652 = getelementptr inbounds %struct.Reg, %struct.Reg* %21651, i32 0, i32 0
  %RAX.i344 = bitcast %union.anon* %21652 to i64*
  %21653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21654 = getelementptr inbounds %struct.GPR, %struct.GPR* %21653, i32 0, i32 15
  %21655 = getelementptr inbounds %struct.Reg, %struct.Reg* %21654, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %21655 to i64*
  %21656 = load i64, i64* %RBP.i345
  %21657 = sub i64 %21656, 40
  %21658 = load i64, i64* %PC.i343
  %21659 = add i64 %21658, 3
  store i64 %21659, i64* %PC.i343
  %21660 = inttoptr i64 %21657 to i32*
  %21661 = load i32, i32* %21660
  %21662 = zext i32 %21661 to i64
  store i64 %21662, i64* %RAX.i344, align 8
  store %struct.Memory* %loadMem_4afacf, %struct.Memory** %MEMORY
  %loadMem_4afad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21664 = getelementptr inbounds %struct.GPR, %struct.GPR* %21663, i32 0, i32 33
  %21665 = getelementptr inbounds %struct.Reg, %struct.Reg* %21664, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %21665 to i64*
  %21666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21667 = getelementptr inbounds %struct.GPR, %struct.GPR* %21666, i32 0, i32 1
  %21668 = getelementptr inbounds %struct.Reg, %struct.Reg* %21667, i32 0, i32 0
  %RAX.i342 = bitcast %union.anon* %21668 to i64*
  %21669 = load i64, i64* %RAX.i342
  %21670 = load i64, i64* %PC.i341
  %21671 = add i64 %21670, 3
  store i64 %21671, i64* %PC.i341
  %21672 = trunc i64 %21669 to i32
  %21673 = add i32 1, %21672
  %21674 = zext i32 %21673 to i64
  store i64 %21674, i64* %RAX.i342, align 8
  %21675 = icmp ult i32 %21673, %21672
  %21676 = icmp ult i32 %21673, 1
  %21677 = or i1 %21675, %21676
  %21678 = zext i1 %21677 to i8
  %21679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21678, i8* %21679, align 1
  %21680 = and i32 %21673, 255
  %21681 = call i32 @llvm.ctpop.i32(i32 %21680)
  %21682 = trunc i32 %21681 to i8
  %21683 = and i8 %21682, 1
  %21684 = xor i8 %21683, 1
  %21685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21684, i8* %21685, align 1
  %21686 = xor i64 1, %21669
  %21687 = trunc i64 %21686 to i32
  %21688 = xor i32 %21687, %21673
  %21689 = lshr i32 %21688, 4
  %21690 = trunc i32 %21689 to i8
  %21691 = and i8 %21690, 1
  %21692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21691, i8* %21692, align 1
  %21693 = icmp eq i32 %21673, 0
  %21694 = zext i1 %21693 to i8
  %21695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21694, i8* %21695, align 1
  %21696 = lshr i32 %21673, 31
  %21697 = trunc i32 %21696 to i8
  %21698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21697, i8* %21698, align 1
  %21699 = lshr i32 %21672, 31
  %21700 = xor i32 %21696, %21699
  %21701 = add i32 %21700, %21696
  %21702 = icmp eq i32 %21701, 2
  %21703 = zext i1 %21702 to i8
  %21704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21703, i8* %21704, align 1
  store %struct.Memory* %loadMem_4afad2, %struct.Memory** %MEMORY
  %loadMem_4afad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21706 = getelementptr inbounds %struct.GPR, %struct.GPR* %21705, i32 0, i32 33
  %21707 = getelementptr inbounds %struct.Reg, %struct.Reg* %21706, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %21707 to i64*
  %21708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21709 = getelementptr inbounds %struct.GPR, %struct.GPR* %21708, i32 0, i32 1
  %21710 = getelementptr inbounds %struct.Reg, %struct.Reg* %21709, i32 0, i32 0
  %EAX.i339 = bitcast %union.anon* %21710 to i32*
  %21711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21712 = getelementptr inbounds %struct.GPR, %struct.GPR* %21711, i32 0, i32 15
  %21713 = getelementptr inbounds %struct.Reg, %struct.Reg* %21712, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %21713 to i64*
  %21714 = load i64, i64* %RBP.i340
  %21715 = sub i64 %21714, 40
  %21716 = load i32, i32* %EAX.i339
  %21717 = zext i32 %21716 to i64
  %21718 = load i64, i64* %PC.i338
  %21719 = add i64 %21718, 3
  store i64 %21719, i64* %PC.i338
  %21720 = inttoptr i64 %21715 to i32*
  store i32 %21716, i32* %21720
  store %struct.Memory* %loadMem_4afad5, %struct.Memory** %MEMORY
  %loadMem_4afad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21722 = getelementptr inbounds %struct.GPR, %struct.GPR* %21721, i32 0, i32 33
  %21723 = getelementptr inbounds %struct.Reg, %struct.Reg* %21722, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %21723 to i64*
  %21724 = load i64, i64* %PC.i337
  %21725 = add i64 %21724, -171
  %21726 = load i64, i64* %PC.i337
  %21727 = add i64 %21726, 5
  store i64 %21727, i64* %PC.i337
  %21728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21725, i64* %21728, align 8
  store %struct.Memory* %loadMem_4afad8, %struct.Memory** %MEMORY
  br label %block_.L_4afa2d

block_.L_4afadd:                                  ; preds = %block_.L_4afa2d
  %loadMem_4afadd = load %struct.Memory*, %struct.Memory** %MEMORY
  %21729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21730 = getelementptr inbounds %struct.GPR, %struct.GPR* %21729, i32 0, i32 33
  %21731 = getelementptr inbounds %struct.Reg, %struct.Reg* %21730, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %21731 to i64*
  %21732 = load i64, i64* %PC.i336
  %21733 = add i64 %21732, 5
  %21734 = load i64, i64* %PC.i336
  %21735 = add i64 %21734, 5
  store i64 %21735, i64* %PC.i336
  %21736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21733, i64* %21736, align 8
  store %struct.Memory* %loadMem_4afadd, %struct.Memory** %MEMORY
  br label %block_.L_4afae2

block_.L_4afae2:                                  ; preds = %block_.L_4afadd
  %loadMem_4afae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21738 = getelementptr inbounds %struct.GPR, %struct.GPR* %21737, i32 0, i32 33
  %21739 = getelementptr inbounds %struct.Reg, %struct.Reg* %21738, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %21739 to i64*
  %21740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21741 = getelementptr inbounds %struct.GPR, %struct.GPR* %21740, i32 0, i32 1
  %21742 = getelementptr inbounds %struct.Reg, %struct.Reg* %21741, i32 0, i32 0
  %RAX.i334 = bitcast %union.anon* %21742 to i64*
  %21743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21744 = getelementptr inbounds %struct.GPR, %struct.GPR* %21743, i32 0, i32 15
  %21745 = getelementptr inbounds %struct.Reg, %struct.Reg* %21744, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %21745 to i64*
  %21746 = load i64, i64* %RBP.i335
  %21747 = sub i64 %21746, 36
  %21748 = load i64, i64* %PC.i333
  %21749 = add i64 %21748, 3
  store i64 %21749, i64* %PC.i333
  %21750 = inttoptr i64 %21747 to i32*
  %21751 = load i32, i32* %21750
  %21752 = zext i32 %21751 to i64
  store i64 %21752, i64* %RAX.i334, align 8
  store %struct.Memory* %loadMem_4afae2, %struct.Memory** %MEMORY
  %loadMem_4afae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21754 = getelementptr inbounds %struct.GPR, %struct.GPR* %21753, i32 0, i32 33
  %21755 = getelementptr inbounds %struct.Reg, %struct.Reg* %21754, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %21755 to i64*
  %21756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21757 = getelementptr inbounds %struct.GPR, %struct.GPR* %21756, i32 0, i32 1
  %21758 = getelementptr inbounds %struct.Reg, %struct.Reg* %21757, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %21758 to i64*
  %21759 = load i64, i64* %RAX.i332
  %21760 = load i64, i64* %PC.i331
  %21761 = add i64 %21760, 3
  store i64 %21761, i64* %PC.i331
  %21762 = trunc i64 %21759 to i32
  %21763 = add i32 1, %21762
  %21764 = zext i32 %21763 to i64
  store i64 %21764, i64* %RAX.i332, align 8
  %21765 = icmp ult i32 %21763, %21762
  %21766 = icmp ult i32 %21763, 1
  %21767 = or i1 %21765, %21766
  %21768 = zext i1 %21767 to i8
  %21769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21768, i8* %21769, align 1
  %21770 = and i32 %21763, 255
  %21771 = call i32 @llvm.ctpop.i32(i32 %21770)
  %21772 = trunc i32 %21771 to i8
  %21773 = and i8 %21772, 1
  %21774 = xor i8 %21773, 1
  %21775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21774, i8* %21775, align 1
  %21776 = xor i64 1, %21759
  %21777 = trunc i64 %21776 to i32
  %21778 = xor i32 %21777, %21763
  %21779 = lshr i32 %21778, 4
  %21780 = trunc i32 %21779 to i8
  %21781 = and i8 %21780, 1
  %21782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21781, i8* %21782, align 1
  %21783 = icmp eq i32 %21763, 0
  %21784 = zext i1 %21783 to i8
  %21785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21784, i8* %21785, align 1
  %21786 = lshr i32 %21763, 31
  %21787 = trunc i32 %21786 to i8
  %21788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21787, i8* %21788, align 1
  %21789 = lshr i32 %21762, 31
  %21790 = xor i32 %21786, %21789
  %21791 = add i32 %21790, %21786
  %21792 = icmp eq i32 %21791, 2
  %21793 = zext i1 %21792 to i8
  %21794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21793, i8* %21794, align 1
  store %struct.Memory* %loadMem_4afae5, %struct.Memory** %MEMORY
  %loadMem_4afae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21796 = getelementptr inbounds %struct.GPR, %struct.GPR* %21795, i32 0, i32 33
  %21797 = getelementptr inbounds %struct.Reg, %struct.Reg* %21796, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %21797 to i64*
  %21798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21799 = getelementptr inbounds %struct.GPR, %struct.GPR* %21798, i32 0, i32 1
  %21800 = getelementptr inbounds %struct.Reg, %struct.Reg* %21799, i32 0, i32 0
  %EAX.i329 = bitcast %union.anon* %21800 to i32*
  %21801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21802 = getelementptr inbounds %struct.GPR, %struct.GPR* %21801, i32 0, i32 15
  %21803 = getelementptr inbounds %struct.Reg, %struct.Reg* %21802, i32 0, i32 0
  %RBP.i330 = bitcast %union.anon* %21803 to i64*
  %21804 = load i64, i64* %RBP.i330
  %21805 = sub i64 %21804, 36
  %21806 = load i32, i32* %EAX.i329
  %21807 = zext i32 %21806 to i64
  %21808 = load i64, i64* %PC.i328
  %21809 = add i64 %21808, 3
  store i64 %21809, i64* %PC.i328
  %21810 = inttoptr i64 %21805 to i32*
  store i32 %21806, i32* %21810
  store %struct.Memory* %loadMem_4afae8, %struct.Memory** %MEMORY
  %loadMem_4afaeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %21811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21812 = getelementptr inbounds %struct.GPR, %struct.GPR* %21811, i32 0, i32 33
  %21813 = getelementptr inbounds %struct.Reg, %struct.Reg* %21812, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %21813 to i64*
  %21814 = load i64, i64* %PC.i327
  %21815 = add i64 %21814, -220
  %21816 = load i64, i64* %PC.i327
  %21817 = add i64 %21816, 5
  store i64 %21817, i64* %PC.i327
  %21818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21815, i64* %21818, align 8
  store %struct.Memory* %loadMem_4afaeb, %struct.Memory** %MEMORY
  br label %block_.L_4afa0f

block_.L_4afaf0:                                  ; preds = %block_.L_4afa0f
  %loadMem_4afaf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21820 = getelementptr inbounds %struct.GPR, %struct.GPR* %21819, i32 0, i32 33
  %21821 = getelementptr inbounds %struct.Reg, %struct.Reg* %21820, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %21821 to i64*
  %21822 = load i64, i64* %PC.i326
  %21823 = add i64 %21822, 5
  %21824 = load i64, i64* %PC.i326
  %21825 = add i64 %21824, 5
  store i64 %21825, i64* %PC.i326
  %21826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21823, i64* %21826, align 8
  store %struct.Memory* %loadMem_4afaf0, %struct.Memory** %MEMORY
  br label %block_.L_4afaf5

block_.L_4afaf5:                                  ; preds = %block_.L_4afaf0
  %loadMem_4afaf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21828 = getelementptr inbounds %struct.GPR, %struct.GPR* %21827, i32 0, i32 33
  %21829 = getelementptr inbounds %struct.Reg, %struct.Reg* %21828, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %21829 to i64*
  %21830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21831 = getelementptr inbounds %struct.GPR, %struct.GPR* %21830, i32 0, i32 1
  %21832 = getelementptr inbounds %struct.Reg, %struct.Reg* %21831, i32 0, i32 0
  %RAX.i324 = bitcast %union.anon* %21832 to i64*
  %21833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21834 = getelementptr inbounds %struct.GPR, %struct.GPR* %21833, i32 0, i32 15
  %21835 = getelementptr inbounds %struct.Reg, %struct.Reg* %21834, i32 0, i32 0
  %RBP.i325 = bitcast %union.anon* %21835 to i64*
  %21836 = load i64, i64* %RBP.i325
  %21837 = sub i64 %21836, 35396
  %21838 = load i64, i64* %PC.i323
  %21839 = add i64 %21838, 6
  store i64 %21839, i64* %PC.i323
  %21840 = inttoptr i64 %21837 to i32*
  %21841 = load i32, i32* %21840
  %21842 = zext i32 %21841 to i64
  store i64 %21842, i64* %RAX.i324, align 8
  store %struct.Memory* %loadMem_4afaf5, %struct.Memory** %MEMORY
  %loadMem_4afafb = load %struct.Memory*, %struct.Memory** %MEMORY
  %21843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21844 = getelementptr inbounds %struct.GPR, %struct.GPR* %21843, i32 0, i32 33
  %21845 = getelementptr inbounds %struct.Reg, %struct.Reg* %21844, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %21845 to i64*
  %21846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21847 = getelementptr inbounds %struct.GPR, %struct.GPR* %21846, i32 0, i32 1
  %21848 = getelementptr inbounds %struct.Reg, %struct.Reg* %21847, i32 0, i32 0
  %RAX.i322 = bitcast %union.anon* %21848 to i64*
  %21849 = load i64, i64* %RAX.i322
  %21850 = load i64, i64* %PC.i321
  %21851 = add i64 %21850, 3
  store i64 %21851, i64* %PC.i321
  %21852 = trunc i64 %21849 to i32
  %21853 = add i32 1, %21852
  %21854 = zext i32 %21853 to i64
  store i64 %21854, i64* %RAX.i322, align 8
  %21855 = icmp ult i32 %21853, %21852
  %21856 = icmp ult i32 %21853, 1
  %21857 = or i1 %21855, %21856
  %21858 = zext i1 %21857 to i8
  %21859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21858, i8* %21859, align 1
  %21860 = and i32 %21853, 255
  %21861 = call i32 @llvm.ctpop.i32(i32 %21860)
  %21862 = trunc i32 %21861 to i8
  %21863 = and i8 %21862, 1
  %21864 = xor i8 %21863, 1
  %21865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21864, i8* %21865, align 1
  %21866 = xor i64 1, %21849
  %21867 = trunc i64 %21866 to i32
  %21868 = xor i32 %21867, %21853
  %21869 = lshr i32 %21868, 4
  %21870 = trunc i32 %21869 to i8
  %21871 = and i8 %21870, 1
  %21872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21871, i8* %21872, align 1
  %21873 = icmp eq i32 %21853, 0
  %21874 = zext i1 %21873 to i8
  %21875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21874, i8* %21875, align 1
  %21876 = lshr i32 %21853, 31
  %21877 = trunc i32 %21876 to i8
  %21878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21877, i8* %21878, align 1
  %21879 = lshr i32 %21852, 31
  %21880 = xor i32 %21876, %21879
  %21881 = add i32 %21880, %21876
  %21882 = icmp eq i32 %21881, 2
  %21883 = zext i1 %21882 to i8
  %21884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21883, i8* %21884, align 1
  store %struct.Memory* %loadMem_4afafb, %struct.Memory** %MEMORY
  %loadMem_4afafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %21885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21886 = getelementptr inbounds %struct.GPR, %struct.GPR* %21885, i32 0, i32 33
  %21887 = getelementptr inbounds %struct.Reg, %struct.Reg* %21886, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %21887 to i64*
  %21888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21889 = getelementptr inbounds %struct.GPR, %struct.GPR* %21888, i32 0, i32 1
  %21890 = getelementptr inbounds %struct.Reg, %struct.Reg* %21889, i32 0, i32 0
  %EAX.i319 = bitcast %union.anon* %21890 to i32*
  %21891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21892 = getelementptr inbounds %struct.GPR, %struct.GPR* %21891, i32 0, i32 15
  %21893 = getelementptr inbounds %struct.Reg, %struct.Reg* %21892, i32 0, i32 0
  %RBP.i320 = bitcast %union.anon* %21893 to i64*
  %21894 = load i64, i64* %RBP.i320
  %21895 = sub i64 %21894, 35396
  %21896 = load i32, i32* %EAX.i319
  %21897 = zext i32 %21896 to i64
  %21898 = load i64, i64* %PC.i318
  %21899 = add i64 %21898, 6
  store i64 %21899, i64* %PC.i318
  %21900 = inttoptr i64 %21895 to i32*
  store i32 %21896, i32* %21900
  store %struct.Memory* %loadMem_4afafe, %struct.Memory** %MEMORY
  %loadMem_4afb04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21902 = getelementptr inbounds %struct.GPR, %struct.GPR* %21901, i32 0, i32 33
  %21903 = getelementptr inbounds %struct.Reg, %struct.Reg* %21902, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %21903 to i64*
  %21904 = load i64, i64* %PC.i317
  %21905 = add i64 %21904, -275
  %21906 = load i64, i64* %PC.i317
  %21907 = add i64 %21906, 5
  store i64 %21907, i64* %PC.i317
  %21908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21905, i64* %21908, align 8
  store %struct.Memory* %loadMem_4afb04, %struct.Memory** %MEMORY
  br label %block_.L_4af9f1

block_.L_4afb09:                                  ; preds = %block_.L_4af9f1
  %loadMem_4afb09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21910 = getelementptr inbounds %struct.GPR, %struct.GPR* %21909, i32 0, i32 33
  %21911 = getelementptr inbounds %struct.Reg, %struct.Reg* %21910, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %21911 to i64*
  %21912 = load i64, i64* %PC.i316
  %21913 = add i64 %21912, 338
  %21914 = load i64, i64* %PC.i316
  %21915 = add i64 %21914, 5
  store i64 %21915, i64* %PC.i316
  %21916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21913, i64* %21916, align 8
  store %struct.Memory* %loadMem_4afb09, %struct.Memory** %MEMORY
  br label %block_.L_4afc5b

block_.L_4afb0e:                                  ; preds = %block_.L_4af9d2
  %loadMem_4afb0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21918 = getelementptr inbounds %struct.GPR, %struct.GPR* %21917, i32 0, i32 33
  %21919 = getelementptr inbounds %struct.Reg, %struct.Reg* %21918, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %21919 to i64*
  %21920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21921 = getelementptr inbounds %struct.GPR, %struct.GPR* %21920, i32 0, i32 15
  %21922 = getelementptr inbounds %struct.Reg, %struct.Reg* %21921, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %21922 to i64*
  %21923 = load i64, i64* %RBP.i315
  %21924 = sub i64 %21923, 35396
  %21925 = load i64, i64* %PC.i314
  %21926 = add i64 %21925, 10
  store i64 %21926, i64* %PC.i314
  %21927 = inttoptr i64 %21924 to i32*
  store i32 0, i32* %21927
  store %struct.Memory* %loadMem_4afb0e, %struct.Memory** %MEMORY
  br label %block_.L_4afb18

block_.L_4afb18:                                  ; preds = %block_.L_4afc42, %block_.L_4afb0e
  %loadMem_4afb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21929 = getelementptr inbounds %struct.GPR, %struct.GPR* %21928, i32 0, i32 33
  %21930 = getelementptr inbounds %struct.Reg, %struct.Reg* %21929, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %21930 to i64*
  %21931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21932 = getelementptr inbounds %struct.GPR, %struct.GPR* %21931, i32 0, i32 1
  %21933 = getelementptr inbounds %struct.Reg, %struct.Reg* %21932, i32 0, i32 0
  %RAX.i312 = bitcast %union.anon* %21933 to i64*
  %21934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21935 = getelementptr inbounds %struct.GPR, %struct.GPR* %21934, i32 0, i32 15
  %21936 = getelementptr inbounds %struct.Reg, %struct.Reg* %21935, i32 0, i32 0
  %RBP.i313 = bitcast %union.anon* %21936 to i64*
  %21937 = load i64, i64* %RBP.i313
  %21938 = sub i64 %21937, 35396
  %21939 = load i64, i64* %PC.i311
  %21940 = add i64 %21939, 6
  store i64 %21940, i64* %PC.i311
  %21941 = inttoptr i64 %21938 to i32*
  %21942 = load i32, i32* %21941
  %21943 = zext i32 %21942 to i64
  store i64 %21943, i64* %RAX.i312, align 8
  store %struct.Memory* %loadMem_4afb18, %struct.Memory** %MEMORY
  %loadMem_4afb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21945 = getelementptr inbounds %struct.GPR, %struct.GPR* %21944, i32 0, i32 33
  %21946 = getelementptr inbounds %struct.Reg, %struct.Reg* %21945, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %21946 to i64*
  %21947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21948 = getelementptr inbounds %struct.GPR, %struct.GPR* %21947, i32 0, i32 5
  %21949 = getelementptr inbounds %struct.Reg, %struct.Reg* %21948, i32 0, i32 0
  %RCX.i309 = bitcast %union.anon* %21949 to i64*
  %21950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21951 = getelementptr inbounds %struct.GPR, %struct.GPR* %21950, i32 0, i32 15
  %21952 = getelementptr inbounds %struct.Reg, %struct.Reg* %21951, i32 0, i32 0
  %RBP.i310 = bitcast %union.anon* %21952 to i64*
  %21953 = load i64, i64* %RBP.i310
  %21954 = sub i64 %21953, 808
  %21955 = load i64, i64* %PC.i308
  %21956 = add i64 %21955, 6
  store i64 %21956, i64* %PC.i308
  %21957 = inttoptr i64 %21954 to i32*
  %21958 = load i32, i32* %21957
  %21959 = zext i32 %21958 to i64
  store i64 %21959, i64* %RCX.i309, align 8
  store %struct.Memory* %loadMem_4afb1e, %struct.Memory** %MEMORY
  %loadMem_4afb24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21961 = getelementptr inbounds %struct.GPR, %struct.GPR* %21960, i32 0, i32 33
  %21962 = getelementptr inbounds %struct.Reg, %struct.Reg* %21961, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %21962 to i64*
  %21963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21964 = getelementptr inbounds %struct.GPR, %struct.GPR* %21963, i32 0, i32 5
  %21965 = getelementptr inbounds %struct.Reg, %struct.Reg* %21964, i32 0, i32 0
  %RCX.i307 = bitcast %union.anon* %21965 to i64*
  %21966 = load i64, i64* %RCX.i307
  %21967 = load i64, i64* %PC.i306
  %21968 = add i64 %21967, 3
  store i64 %21968, i64* %PC.i306
  %21969 = trunc i64 %21966 to i32
  %21970 = add i32 2, %21969
  %21971 = zext i32 %21970 to i64
  store i64 %21971, i64* %RCX.i307, align 8
  %21972 = icmp ult i32 %21970, %21969
  %21973 = icmp ult i32 %21970, 2
  %21974 = or i1 %21972, %21973
  %21975 = zext i1 %21974 to i8
  %21976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21975, i8* %21976, align 1
  %21977 = and i32 %21970, 255
  %21978 = call i32 @llvm.ctpop.i32(i32 %21977)
  %21979 = trunc i32 %21978 to i8
  %21980 = and i8 %21979, 1
  %21981 = xor i8 %21980, 1
  %21982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21981, i8* %21982, align 1
  %21983 = xor i64 2, %21966
  %21984 = trunc i64 %21983 to i32
  %21985 = xor i32 %21984, %21970
  %21986 = lshr i32 %21985, 4
  %21987 = trunc i32 %21986 to i8
  %21988 = and i8 %21987, 1
  %21989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21988, i8* %21989, align 1
  %21990 = icmp eq i32 %21970, 0
  %21991 = zext i1 %21990 to i8
  %21992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21991, i8* %21992, align 1
  %21993 = lshr i32 %21970, 31
  %21994 = trunc i32 %21993 to i8
  %21995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21994, i8* %21995, align 1
  %21996 = lshr i32 %21969, 31
  %21997 = xor i32 %21993, %21996
  %21998 = add i32 %21997, %21993
  %21999 = icmp eq i32 %21998, 2
  %22000 = zext i1 %21999 to i8
  %22001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22000, i8* %22001, align 1
  store %struct.Memory* %loadMem_4afb24, %struct.Memory** %MEMORY
  %loadMem_4afb27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22003 = getelementptr inbounds %struct.GPR, %struct.GPR* %22002, i32 0, i32 33
  %22004 = getelementptr inbounds %struct.Reg, %struct.Reg* %22003, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %22004 to i64*
  %22005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22006 = getelementptr inbounds %struct.GPR, %struct.GPR* %22005, i32 0, i32 1
  %22007 = getelementptr inbounds %struct.Reg, %struct.Reg* %22006, i32 0, i32 0
  %EAX.i305 = bitcast %union.anon* %22007 to i32*
  %22008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22009 = getelementptr inbounds %struct.GPR, %struct.GPR* %22008, i32 0, i32 5
  %22010 = getelementptr inbounds %struct.Reg, %struct.Reg* %22009, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %22010 to i32*
  %22011 = load i32, i32* %EAX.i305
  %22012 = zext i32 %22011 to i64
  %22013 = load i32, i32* %ECX.i
  %22014 = zext i32 %22013 to i64
  %22015 = load i64, i64* %PC.i304
  %22016 = add i64 %22015, 2
  store i64 %22016, i64* %PC.i304
  %22017 = sub i32 %22011, %22013
  %22018 = icmp ult i32 %22011, %22013
  %22019 = zext i1 %22018 to i8
  %22020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22019, i8* %22020, align 1
  %22021 = and i32 %22017, 255
  %22022 = call i32 @llvm.ctpop.i32(i32 %22021)
  %22023 = trunc i32 %22022 to i8
  %22024 = and i8 %22023, 1
  %22025 = xor i8 %22024, 1
  %22026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22025, i8* %22026, align 1
  %22027 = xor i64 %22014, %22012
  %22028 = trunc i64 %22027 to i32
  %22029 = xor i32 %22028, %22017
  %22030 = lshr i32 %22029, 4
  %22031 = trunc i32 %22030 to i8
  %22032 = and i8 %22031, 1
  %22033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22032, i8* %22033, align 1
  %22034 = icmp eq i32 %22017, 0
  %22035 = zext i1 %22034 to i8
  %22036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22035, i8* %22036, align 1
  %22037 = lshr i32 %22017, 31
  %22038 = trunc i32 %22037 to i8
  %22039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22038, i8* %22039, align 1
  %22040 = lshr i32 %22011, 31
  %22041 = lshr i32 %22013, 31
  %22042 = xor i32 %22041, %22040
  %22043 = xor i32 %22037, %22040
  %22044 = add i32 %22043, %22042
  %22045 = icmp eq i32 %22044, 2
  %22046 = zext i1 %22045 to i8
  %22047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22046, i8* %22047, align 1
  store %struct.Memory* %loadMem_4afb27, %struct.Memory** %MEMORY
  %loadMem_4afb29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22049 = getelementptr inbounds %struct.GPR, %struct.GPR* %22048, i32 0, i32 33
  %22050 = getelementptr inbounds %struct.Reg, %struct.Reg* %22049, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %22050 to i64*
  %22051 = load i64, i64* %PC.i303
  %22052 = add i64 %22051, 301
  %22053 = load i64, i64* %PC.i303
  %22054 = add i64 %22053, 6
  %22055 = load i64, i64* %PC.i303
  %22056 = add i64 %22055, 6
  store i64 %22056, i64* %PC.i303
  %22057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22058 = load i8, i8* %22057, align 1
  %22059 = icmp ne i8 %22058, 0
  %22060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %22061 = load i8, i8* %22060, align 1
  %22062 = icmp ne i8 %22061, 0
  %22063 = xor i1 %22059, %22062
  %22064 = xor i1 %22063, true
  %22065 = zext i1 %22064 to i8
  store i8 %22065, i8* %BRANCH_TAKEN, align 1
  %22066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22067 = select i1 %22063, i64 %22054, i64 %22052
  store i64 %22067, i64* %22066, align 8
  store %struct.Memory* %loadMem_4afb29, %struct.Memory** %MEMORY
  %loadBr_4afb29 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afb29 = icmp eq i8 %loadBr_4afb29, 1
  br i1 %cmpBr_4afb29, label %block_.L_4afc56, label %block_4afb2f

block_4afb2f:                                     ; preds = %block_.L_4afb18
  %loadMem_4afb2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %22068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22069 = getelementptr inbounds %struct.GPR, %struct.GPR* %22068, i32 0, i32 33
  %22070 = getelementptr inbounds %struct.Reg, %struct.Reg* %22069, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %22070 to i64*
  %22071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22072 = getelementptr inbounds %struct.GPR, %struct.GPR* %22071, i32 0, i32 15
  %22073 = getelementptr inbounds %struct.Reg, %struct.Reg* %22072, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %22073 to i64*
  %22074 = load i64, i64* %RBP.i302
  %22075 = sub i64 %22074, 36
  %22076 = load i64, i64* %PC.i301
  %22077 = add i64 %22076, 7
  store i64 %22077, i64* %PC.i301
  %22078 = inttoptr i64 %22075 to i32*
  store i32 0, i32* %22078
  store %struct.Memory* %loadMem_4afb2f, %struct.Memory** %MEMORY
  br label %block_.L_4afb36

block_.L_4afb36:                                  ; preds = %routine_shll__cl___eax.exit, %block_4afb2f
  %loadMem_4afb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22080 = getelementptr inbounds %struct.GPR, %struct.GPR* %22079, i32 0, i32 33
  %22081 = getelementptr inbounds %struct.Reg, %struct.Reg* %22080, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %22081 to i64*
  %22082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22083 = getelementptr inbounds %struct.GPR, %struct.GPR* %22082, i32 0, i32 1
  %22084 = getelementptr inbounds %struct.Reg, %struct.Reg* %22083, i32 0, i32 0
  %RAX.i299 = bitcast %union.anon* %22084 to i64*
  %22085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22086 = getelementptr inbounds %struct.GPR, %struct.GPR* %22085, i32 0, i32 15
  %22087 = getelementptr inbounds %struct.Reg, %struct.Reg* %22086, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %22087 to i64*
  %22088 = load i64, i64* %RBP.i300
  %22089 = sub i64 %22088, 36
  %22090 = load i64, i64* %PC.i298
  %22091 = add i64 %22090, 3
  store i64 %22091, i64* %PC.i298
  %22092 = inttoptr i64 %22089 to i32*
  %22093 = load i32, i32* %22092
  %22094 = zext i32 %22093 to i64
  store i64 %22094, i64* %RAX.i299, align 8
  store %struct.Memory* %loadMem_4afb36, %struct.Memory** %MEMORY
  %loadMem_4afb39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22096 = getelementptr inbounds %struct.GPR, %struct.GPR* %22095, i32 0, i32 33
  %22097 = getelementptr inbounds %struct.Reg, %struct.Reg* %22096, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %22097 to i64*
  %22098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22099 = getelementptr inbounds %struct.GPR, %struct.GPR* %22098, i32 0, i32 5
  %22100 = getelementptr inbounds %struct.Reg, %struct.Reg* %22099, i32 0, i32 0
  %RCX.i296 = bitcast %union.anon* %22100 to i64*
  %22101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22102 = getelementptr inbounds %struct.GPR, %struct.GPR* %22101, i32 0, i32 15
  %22103 = getelementptr inbounds %struct.Reg, %struct.Reg* %22102, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %22103 to i64*
  %22104 = load i64, i64* %RBP.i297
  %22105 = sub i64 %22104, 35396
  %22106 = load i64, i64* %PC.i295
  %22107 = add i64 %22106, 7
  store i64 %22107, i64* %PC.i295
  %22108 = inttoptr i64 %22105 to i32*
  %22109 = load i32, i32* %22108
  %22110 = sext i32 %22109 to i64
  store i64 %22110, i64* %RCX.i296, align 8
  store %struct.Memory* %loadMem_4afb39, %struct.Memory** %MEMORY
  %loadMem_4afb40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22112 = getelementptr inbounds %struct.GPR, %struct.GPR* %22111, i32 0, i32 33
  %22113 = getelementptr inbounds %struct.Reg, %struct.Reg* %22112, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %22113 to i64*
  %22114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22115 = getelementptr inbounds %struct.GPR, %struct.GPR* %22114, i32 0, i32 1
  %22116 = getelementptr inbounds %struct.Reg, %struct.Reg* %22115, i32 0, i32 0
  %EAX.i293 = bitcast %union.anon* %22116 to i32*
  %22117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22118 = getelementptr inbounds %struct.GPR, %struct.GPR* %22117, i32 0, i32 5
  %22119 = getelementptr inbounds %struct.Reg, %struct.Reg* %22118, i32 0, i32 0
  %RCX.i294 = bitcast %union.anon* %22119 to i64*
  %22120 = load i32, i32* %EAX.i293
  %22121 = zext i32 %22120 to i64
  %22122 = load i64, i64* %RCX.i294
  %22123 = mul i64 %22122, 4
  %22124 = add i64 %22123, 7489456
  %22125 = load i64, i64* %PC.i292
  %22126 = add i64 %22125, 7
  store i64 %22126, i64* %PC.i292
  %22127 = inttoptr i64 %22124 to i32*
  %22128 = load i32, i32* %22127
  %22129 = sub i32 %22120, %22128
  %22130 = icmp ult i32 %22120, %22128
  %22131 = zext i1 %22130 to i8
  %22132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22131, i8* %22132, align 1
  %22133 = and i32 %22129, 255
  %22134 = call i32 @llvm.ctpop.i32(i32 %22133)
  %22135 = trunc i32 %22134 to i8
  %22136 = and i8 %22135, 1
  %22137 = xor i8 %22136, 1
  %22138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22137, i8* %22138, align 1
  %22139 = xor i32 %22128, %22120
  %22140 = xor i32 %22139, %22129
  %22141 = lshr i32 %22140, 4
  %22142 = trunc i32 %22141 to i8
  %22143 = and i8 %22142, 1
  %22144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22143, i8* %22144, align 1
  %22145 = icmp eq i32 %22129, 0
  %22146 = zext i1 %22145 to i8
  %22147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22146, i8* %22147, align 1
  %22148 = lshr i32 %22129, 31
  %22149 = trunc i32 %22148 to i8
  %22150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22149, i8* %22150, align 1
  %22151 = lshr i32 %22120, 31
  %22152 = lshr i32 %22128, 31
  %22153 = xor i32 %22152, %22151
  %22154 = xor i32 %22148, %22151
  %22155 = add i32 %22154, %22153
  %22156 = icmp eq i32 %22155, 2
  %22157 = zext i1 %22156 to i8
  %22158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22157, i8* %22158, align 1
  store %struct.Memory* %loadMem_4afb40, %struct.Memory** %MEMORY
  %loadMem_4afb47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22160 = getelementptr inbounds %struct.GPR, %struct.GPR* %22159, i32 0, i32 33
  %22161 = getelementptr inbounds %struct.Reg, %struct.Reg* %22160, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %22161 to i64*
  %22162 = load i64, i64* %PC.i291
  %22163 = add i64 %22162, 246
  %22164 = load i64, i64* %PC.i291
  %22165 = add i64 %22164, 6
  %22166 = load i64, i64* %PC.i291
  %22167 = add i64 %22166, 6
  store i64 %22167, i64* %PC.i291
  %22168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22169 = load i8, i8* %22168, align 1
  %22170 = icmp ne i8 %22169, 0
  %22171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %22172 = load i8, i8* %22171, align 1
  %22173 = icmp ne i8 %22172, 0
  %22174 = xor i1 %22170, %22173
  %22175 = xor i1 %22174, true
  %22176 = zext i1 %22175 to i8
  store i8 %22176, i8* %BRANCH_TAKEN, align 1
  %22177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22178 = select i1 %22174, i64 %22165, i64 %22163
  store i64 %22178, i64* %22177, align 8
  store %struct.Memory* %loadMem_4afb47, %struct.Memory** %MEMORY
  %loadBr_4afb47 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afb47 = icmp eq i8 %loadBr_4afb47, 1
  br i1 %cmpBr_4afb47, label %block_.L_4afc3d, label %block_4afb4d

block_4afb4d:                                     ; preds = %block_.L_4afb36
  %loadMem_4afb4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22180 = getelementptr inbounds %struct.GPR, %struct.GPR* %22179, i32 0, i32 33
  %22181 = getelementptr inbounds %struct.Reg, %struct.Reg* %22180, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %22181 to i64*
  %22182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22183 = getelementptr inbounds %struct.GPR, %struct.GPR* %22182, i32 0, i32 1
  %22184 = getelementptr inbounds %struct.Reg, %struct.Reg* %22183, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %22184 to i64*
  %22185 = load i64, i64* %PC.i289
  %22186 = add i64 %22185, 5
  store i64 %22186, i64* %PC.i289
  store i64 1, i64* %RAX.i290, align 8
  store %struct.Memory* %loadMem_4afb4d, %struct.Memory** %MEMORY
  %loadMem_4afb52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22188 = getelementptr inbounds %struct.GPR, %struct.GPR* %22187, i32 0, i32 33
  %22189 = getelementptr inbounds %struct.Reg, %struct.Reg* %22188, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %22189 to i64*
  %22190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22191 = getelementptr inbounds %struct.GPR, %struct.GPR* %22190, i32 0, i32 5
  %22192 = getelementptr inbounds %struct.Reg, %struct.Reg* %22191, i32 0, i32 0
  %RCX.i288 = bitcast %union.anon* %22192 to i64*
  %22193 = load i64, i64* %PC.i287
  %22194 = add i64 %22193, 7
  store i64 %22194, i64* %PC.i287
  %22195 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %22196 = zext i32 %22195 to i64
  store i64 %22196, i64* %RCX.i288, align 8
  store %struct.Memory* %loadMem_4afb52, %struct.Memory** %MEMORY
  %loadMem_4afb59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22198 = getelementptr inbounds %struct.GPR, %struct.GPR* %22197, i32 0, i32 33
  %22199 = getelementptr inbounds %struct.Reg, %struct.Reg* %22198, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %22199 to i64*
  %22200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22201 = getelementptr inbounds %struct.GPR, %struct.GPR* %22200, i32 0, i32 1
  %22202 = getelementptr inbounds %struct.Reg, %struct.Reg* %22201, i32 0, i32 0
  %EAX.i285 = bitcast %union.anon* %22202 to i32*
  %22203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22204 = getelementptr inbounds %struct.GPR, %struct.GPR* %22203, i32 0, i32 7
  %22205 = getelementptr inbounds %struct.Reg, %struct.Reg* %22204, i32 0, i32 0
  %RDX.i286 = bitcast %union.anon* %22205 to i64*
  %22206 = load i32, i32* %EAX.i285
  %22207 = zext i32 %22206 to i64
  %22208 = load i64, i64* %PC.i284
  %22209 = add i64 %22208, 2
  store i64 %22209, i64* %PC.i284
  %22210 = and i64 %22207, 4294967295
  store i64 %22210, i64* %RDX.i286, align 8
  store %struct.Memory* %loadMem_4afb59, %struct.Memory** %MEMORY
  %loadMem_4afb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %22211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22212 = getelementptr inbounds %struct.GPR, %struct.GPR* %22211, i32 0, i32 33
  %22213 = getelementptr inbounds %struct.Reg, %struct.Reg* %22212, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %22213 to i64*
  %22214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22215 = getelementptr inbounds %struct.GPR, %struct.GPR* %22214, i32 0, i32 5
  %22216 = getelementptr inbounds %struct.Reg, %struct.Reg* %22215, i32 0, i32 0
  %22217 = bitcast %union.anon* %22216 to %struct.anon.2*
  %CL.i281 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22217, i32 0, i32 0
  %22218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22219 = getelementptr inbounds %struct.GPR, %struct.GPR* %22218, i32 0, i32 7
  %22220 = getelementptr inbounds %struct.Reg, %struct.Reg* %22219, i32 0, i32 0
  %RDX.i282 = bitcast %union.anon* %22220 to i64*
  %22221 = load i64, i64* %RDX.i282
  %22222 = load i8, i8* %CL.i281
  %22223 = zext i8 %22222 to i64
  %22224 = load i64, i64* %PC.i280
  %22225 = add i64 %22224, 2
  store i64 %22225, i64* %PC.i280
  %22226 = trunc i64 %22223 to i5
  switch i5 %22226, label %22233 [
    i5 0, label %routine_shll__cl___edx.exit283
    i5 1, label %22227
  ]

; <label>:22227:                                  ; preds = %block_4afb4d
  %22228 = trunc i64 %22221 to i32
  %22229 = shl i32 %22228, 1
  %22230 = icmp slt i32 %22228, 0
  %22231 = icmp slt i32 %22229, 0
  %22232 = xor i1 %22230, %22231
  br label %22242

; <label>:22233:                                  ; preds = %block_4afb4d
  %22234 = and i64 %22223, 31
  %22235 = add i64 %22234, 4294967295
  %22236 = and i64 %22221, 4294967295
  %22237 = and i64 %22235, 4294967295
  %22238 = shl i64 %22236, %22237
  %22239 = trunc i64 %22238 to i32
  %22240 = icmp slt i32 %22239, 0
  %22241 = shl i32 %22239, 1
  br label %22242

; <label>:22242:                                  ; preds = %22233, %22227
  %22243 = phi i1 [ %22230, %22227 ], [ %22240, %22233 ]
  %22244 = phi i1 [ %22232, %22227 ], [ false, %22233 ]
  %22245 = phi i32 [ %22229, %22227 ], [ %22241, %22233 ]
  %22246 = zext i32 %22245 to i64
  store i64 %22246, i64* %RDX.i282, align 8
  %22247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22248 = zext i1 %22243 to i8
  store i8 %22248, i8* %22247, align 1
  %22249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22250 = and i32 %22245, 254
  %22251 = call i32 @llvm.ctpop.i32(i32 %22250)
  %22252 = trunc i32 %22251 to i8
  %22253 = and i8 %22252, 1
  %22254 = xor i8 %22253, 1
  store i8 %22254, i8* %22249, align 1
  %22255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22255, align 1
  %22256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22257 = icmp eq i32 %22245, 0
  %22258 = zext i1 %22257 to i8
  store i8 %22258, i8* %22256, align 1
  %22259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22260 = lshr i32 %22245, 31
  %22261 = trunc i32 %22260 to i8
  store i8 %22261, i8* %22259, align 1
  %22262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %22263 = zext i1 %22244 to i8
  store i8 %22263, i8* %22262, align 1
  br label %routine_shll__cl___edx.exit283

routine_shll__cl___edx.exit283:                   ; preds = %block_4afb4d, %22242
  store %struct.Memory* %loadMem_4afb5b, %struct.Memory** %MEMORY
  %loadMem_4afb5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22265 = getelementptr inbounds %struct.GPR, %struct.GPR* %22264, i32 0, i32 33
  %22266 = getelementptr inbounds %struct.Reg, %struct.Reg* %22265, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %22266 to i64*
  %22267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22268 = getelementptr inbounds %struct.GPR, %struct.GPR* %22267, i32 0, i32 9
  %22269 = getelementptr inbounds %struct.Reg, %struct.Reg* %22268, i32 0, i32 0
  %RSI.i279 = bitcast %union.anon* %22269 to i64*
  %22270 = load i64, i64* %PC.i278
  %22271 = add i64 %22270, 8
  store i64 %22271, i64* %PC.i278
  %22272 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %22272, i64* %RSI.i279, align 8
  store %struct.Memory* %loadMem_4afb5d, %struct.Memory** %MEMORY
  %loadMem_4afb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22274 = getelementptr inbounds %struct.GPR, %struct.GPR* %22273, i32 0, i32 33
  %22275 = getelementptr inbounds %struct.Reg, %struct.Reg* %22274, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %22275 to i64*
  %22276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22277 = getelementptr inbounds %struct.GPR, %struct.GPR* %22276, i32 0, i32 11
  %22278 = getelementptr inbounds %struct.Reg, %struct.Reg* %22277, i32 0, i32 0
  %RDI.i276 = bitcast %union.anon* %22278 to i64*
  %22279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22280 = getelementptr inbounds %struct.GPR, %struct.GPR* %22279, i32 0, i32 15
  %22281 = getelementptr inbounds %struct.Reg, %struct.Reg* %22280, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %22281 to i64*
  %22282 = load i64, i64* %RBP.i277
  %22283 = sub i64 %22282, 35396
  %22284 = load i64, i64* %PC.i275
  %22285 = add i64 %22284, 7
  store i64 %22285, i64* %PC.i275
  %22286 = inttoptr i64 %22283 to i32*
  %22287 = load i32, i32* %22286
  %22288 = sext i32 %22287 to i64
  store i64 %22288, i64* %RDI.i276, align 8
  store %struct.Memory* %loadMem_4afb65, %struct.Memory** %MEMORY
  %loadMem_4afb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22290 = getelementptr inbounds %struct.GPR, %struct.GPR* %22289, i32 0, i32 33
  %22291 = getelementptr inbounds %struct.Reg, %struct.Reg* %22290, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %22291 to i64*
  %22292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22293 = getelementptr inbounds %struct.GPR, %struct.GPR* %22292, i32 0, i32 9
  %22294 = getelementptr inbounds %struct.Reg, %struct.Reg* %22293, i32 0, i32 0
  %RSI.i273 = bitcast %union.anon* %22294 to i64*
  %22295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22296 = getelementptr inbounds %struct.GPR, %struct.GPR* %22295, i32 0, i32 11
  %22297 = getelementptr inbounds %struct.Reg, %struct.Reg* %22296, i32 0, i32 0
  %RDI.i274 = bitcast %union.anon* %22297 to i64*
  %22298 = load i64, i64* %RSI.i273
  %22299 = load i64, i64* %RDI.i274
  %22300 = mul i64 %22299, 8
  %22301 = add i64 %22300, %22298
  %22302 = load i64, i64* %PC.i272
  %22303 = add i64 %22302, 4
  store i64 %22303, i64* %PC.i272
  %22304 = inttoptr i64 %22301 to i64*
  %22305 = load i64, i64* %22304
  store i64 %22305, i64* %RSI.i273, align 8
  store %struct.Memory* %loadMem_4afb6c, %struct.Memory** %MEMORY
  %loadMem_4afb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22307 = getelementptr inbounds %struct.GPR, %struct.GPR* %22306, i32 0, i32 33
  %22308 = getelementptr inbounds %struct.Reg, %struct.Reg* %22307, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %22308 to i64*
  %22309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22310 = getelementptr inbounds %struct.GPR, %struct.GPR* %22309, i32 0, i32 11
  %22311 = getelementptr inbounds %struct.Reg, %struct.Reg* %22310, i32 0, i32 0
  %RDI.i270 = bitcast %union.anon* %22311 to i64*
  %22312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22313 = getelementptr inbounds %struct.GPR, %struct.GPR* %22312, i32 0, i32 15
  %22314 = getelementptr inbounds %struct.Reg, %struct.Reg* %22313, i32 0, i32 0
  %RBP.i271 = bitcast %union.anon* %22314 to i64*
  %22315 = load i64, i64* %RBP.i271
  %22316 = sub i64 %22315, 36
  %22317 = load i64, i64* %PC.i269
  %22318 = add i64 %22317, 4
  store i64 %22318, i64* %PC.i269
  %22319 = inttoptr i64 %22316 to i32*
  %22320 = load i32, i32* %22319
  %22321 = sext i32 %22320 to i64
  store i64 %22321, i64* %RDI.i270, align 8
  store %struct.Memory* %loadMem_4afb70, %struct.Memory** %MEMORY
  %loadMem_4afb74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22323 = getelementptr inbounds %struct.GPR, %struct.GPR* %22322, i32 0, i32 33
  %22324 = getelementptr inbounds %struct.Reg, %struct.Reg* %22323, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %22324 to i64*
  %22325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22326 = getelementptr inbounds %struct.GPR, %struct.GPR* %22325, i32 0, i32 9
  %22327 = getelementptr inbounds %struct.Reg, %struct.Reg* %22326, i32 0, i32 0
  %RSI.i267 = bitcast %union.anon* %22327 to i64*
  %22328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22329 = getelementptr inbounds %struct.GPR, %struct.GPR* %22328, i32 0, i32 11
  %22330 = getelementptr inbounds %struct.Reg, %struct.Reg* %22329, i32 0, i32 0
  %RDI.i268 = bitcast %union.anon* %22330 to i64*
  %22331 = load i64, i64* %RSI.i267
  %22332 = load i64, i64* %RDI.i268
  %22333 = mul i64 %22332, 8
  %22334 = add i64 %22333, %22331
  %22335 = load i64, i64* %PC.i266
  %22336 = add i64 %22335, 4
  store i64 %22336, i64* %PC.i266
  %22337 = inttoptr i64 %22334 to i64*
  %22338 = load i64, i64* %22337
  store i64 %22338, i64* %RSI.i267, align 8
  store %struct.Memory* %loadMem_4afb74, %struct.Memory** %MEMORY
  %loadMem_4afb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22340 = getelementptr inbounds %struct.GPR, %struct.GPR* %22339, i32 0, i32 33
  %22341 = getelementptr inbounds %struct.Reg, %struct.Reg* %22340, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %22341 to i64*
  %22342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22343 = getelementptr inbounds %struct.GPR, %struct.GPR* %22342, i32 0, i32 7
  %22344 = getelementptr inbounds %struct.Reg, %struct.Reg* %22343, i32 0, i32 0
  %EDX.i264 = bitcast %union.anon* %22344 to i32*
  %22345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22346 = getelementptr inbounds %struct.GPR, %struct.GPR* %22345, i32 0, i32 9
  %22347 = getelementptr inbounds %struct.Reg, %struct.Reg* %22346, i32 0, i32 0
  %RSI.i265 = bitcast %union.anon* %22347 to i64*
  %22348 = load i64, i64* %RSI.i265
  %22349 = load i32, i32* %EDX.i264
  %22350 = zext i32 %22349 to i64
  %22351 = load i64, i64* %PC.i263
  %22352 = add i64 %22351, 2
  store i64 %22352, i64* %PC.i263
  %22353 = inttoptr i64 %22348 to i32*
  store i32 %22349, i32* %22353
  store %struct.Memory* %loadMem_4afb78, %struct.Memory** %MEMORY
  %loadMem_4afb7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %22354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22355 = getelementptr inbounds %struct.GPR, %struct.GPR* %22354, i32 0, i32 33
  %22356 = getelementptr inbounds %struct.Reg, %struct.Reg* %22355, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %22356 to i64*
  %22357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22358 = getelementptr inbounds %struct.GPR, %struct.GPR* %22357, i32 0, i32 5
  %22359 = getelementptr inbounds %struct.Reg, %struct.Reg* %22358, i32 0, i32 0
  %RCX.i262 = bitcast %union.anon* %22359 to i64*
  %22360 = load i64, i64* %PC.i261
  %22361 = add i64 %22360, 7
  store i64 %22361, i64* %PC.i261
  %22362 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %22363 = zext i32 %22362 to i64
  store i64 %22363, i64* %RCX.i262, align 8
  store %struct.Memory* %loadMem_4afb7a, %struct.Memory** %MEMORY
  %loadMem_4afb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22365 = getelementptr inbounds %struct.GPR, %struct.GPR* %22364, i32 0, i32 33
  %22366 = getelementptr inbounds %struct.Reg, %struct.Reg* %22365, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %22366 to i64*
  %22367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22368 = getelementptr inbounds %struct.GPR, %struct.GPR* %22367, i32 0, i32 1
  %22369 = getelementptr inbounds %struct.Reg, %struct.Reg* %22368, i32 0, i32 0
  %EAX.i259 = bitcast %union.anon* %22369 to i32*
  %22370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22371 = getelementptr inbounds %struct.GPR, %struct.GPR* %22370, i32 0, i32 7
  %22372 = getelementptr inbounds %struct.Reg, %struct.Reg* %22371, i32 0, i32 0
  %RDX.i260 = bitcast %union.anon* %22372 to i64*
  %22373 = load i32, i32* %EAX.i259
  %22374 = zext i32 %22373 to i64
  %22375 = load i64, i64* %PC.i258
  %22376 = add i64 %22375, 2
  store i64 %22376, i64* %PC.i258
  %22377 = and i64 %22374, 4294967295
  store i64 %22377, i64* %RDX.i260, align 8
  store %struct.Memory* %loadMem_4afb81, %struct.Memory** %MEMORY
  %loadMem_4afb83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22379 = getelementptr inbounds %struct.GPR, %struct.GPR* %22378, i32 0, i32 33
  %22380 = getelementptr inbounds %struct.Reg, %struct.Reg* %22379, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %22380 to i64*
  %22381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22382 = getelementptr inbounds %struct.GPR, %struct.GPR* %22381, i32 0, i32 5
  %22383 = getelementptr inbounds %struct.Reg, %struct.Reg* %22382, i32 0, i32 0
  %22384 = bitcast %union.anon* %22383 to %struct.anon.2*
  %CL.i256 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22384, i32 0, i32 0
  %22385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22386 = getelementptr inbounds %struct.GPR, %struct.GPR* %22385, i32 0, i32 7
  %22387 = getelementptr inbounds %struct.Reg, %struct.Reg* %22386, i32 0, i32 0
  %RDX.i257 = bitcast %union.anon* %22387 to i64*
  %22388 = load i64, i64* %RDX.i257
  %22389 = load i8, i8* %CL.i256
  %22390 = zext i8 %22389 to i64
  %22391 = load i64, i64* %PC.i255
  %22392 = add i64 %22391, 2
  store i64 %22392, i64* %PC.i255
  %22393 = trunc i64 %22390 to i5
  switch i5 %22393, label %22400 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %22394
  ]

; <label>:22394:                                  ; preds = %routine_shll__cl___edx.exit283
  %22395 = trunc i64 %22388 to i32
  %22396 = shl i32 %22395, 1
  %22397 = icmp slt i32 %22395, 0
  %22398 = icmp slt i32 %22396, 0
  %22399 = xor i1 %22397, %22398
  br label %22409

; <label>:22400:                                  ; preds = %routine_shll__cl___edx.exit283
  %22401 = and i64 %22390, 31
  %22402 = add i64 %22401, 4294967295
  %22403 = and i64 %22388, 4294967295
  %22404 = and i64 %22402, 4294967295
  %22405 = shl i64 %22403, %22404
  %22406 = trunc i64 %22405 to i32
  %22407 = icmp slt i32 %22406, 0
  %22408 = shl i32 %22406, 1
  br label %22409

; <label>:22409:                                  ; preds = %22400, %22394
  %22410 = phi i1 [ %22397, %22394 ], [ %22407, %22400 ]
  %22411 = phi i1 [ %22399, %22394 ], [ false, %22400 ]
  %22412 = phi i32 [ %22396, %22394 ], [ %22408, %22400 ]
  %22413 = zext i32 %22412 to i64
  store i64 %22413, i64* %RDX.i257, align 8
  %22414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22415 = zext i1 %22410 to i8
  store i8 %22415, i8* %22414, align 1
  %22416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22417 = and i32 %22412, 254
  %22418 = call i32 @llvm.ctpop.i32(i32 %22417)
  %22419 = trunc i32 %22418 to i8
  %22420 = and i8 %22419, 1
  %22421 = xor i8 %22420, 1
  store i8 %22421, i8* %22416, align 1
  %22422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22422, align 1
  %22423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22424 = icmp eq i32 %22412, 0
  %22425 = zext i1 %22424 to i8
  store i8 %22425, i8* %22423, align 1
  %22426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22427 = lshr i32 %22412, 31
  %22428 = trunc i32 %22427 to i8
  store i8 %22428, i8* %22426, align 1
  %22429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %22430 = zext i1 %22411 to i8
  store i8 %22430, i8* %22429, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %routine_shll__cl___edx.exit283, %22409
  store %struct.Memory* %loadMem_4afb83, %struct.Memory** %MEMORY
  %loadMem_4afb85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22432 = getelementptr inbounds %struct.GPR, %struct.GPR* %22431, i32 0, i32 33
  %22433 = getelementptr inbounds %struct.Reg, %struct.Reg* %22432, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %22433 to i64*
  %22434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22435 = getelementptr inbounds %struct.GPR, %struct.GPR* %22434, i32 0, i32 9
  %22436 = getelementptr inbounds %struct.Reg, %struct.Reg* %22435, i32 0, i32 0
  %RSI.i254 = bitcast %union.anon* %22436 to i64*
  %22437 = load i64, i64* %PC.i253
  %22438 = add i64 %22437, 8
  store i64 %22438, i64* %PC.i253
  %22439 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %22439, i64* %RSI.i254, align 8
  store %struct.Memory* %loadMem_4afb85, %struct.Memory** %MEMORY
  %loadMem_4afb8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22441 = getelementptr inbounds %struct.GPR, %struct.GPR* %22440, i32 0, i32 33
  %22442 = getelementptr inbounds %struct.Reg, %struct.Reg* %22441, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %22442 to i64*
  %22443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22444 = getelementptr inbounds %struct.GPR, %struct.GPR* %22443, i32 0, i32 11
  %22445 = getelementptr inbounds %struct.Reg, %struct.Reg* %22444, i32 0, i32 0
  %RDI.i251 = bitcast %union.anon* %22445 to i64*
  %22446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22447 = getelementptr inbounds %struct.GPR, %struct.GPR* %22446, i32 0, i32 15
  %22448 = getelementptr inbounds %struct.Reg, %struct.Reg* %22447, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %22448 to i64*
  %22449 = load i64, i64* %RBP.i252
  %22450 = sub i64 %22449, 35396
  %22451 = load i64, i64* %PC.i250
  %22452 = add i64 %22451, 7
  store i64 %22452, i64* %PC.i250
  %22453 = inttoptr i64 %22450 to i32*
  %22454 = load i32, i32* %22453
  %22455 = sext i32 %22454 to i64
  store i64 %22455, i64* %RDI.i251, align 8
  store %struct.Memory* %loadMem_4afb8d, %struct.Memory** %MEMORY
  %loadMem_4afb94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22457 = getelementptr inbounds %struct.GPR, %struct.GPR* %22456, i32 0, i32 33
  %22458 = getelementptr inbounds %struct.Reg, %struct.Reg* %22457, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %22458 to i64*
  %22459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22460 = getelementptr inbounds %struct.GPR, %struct.GPR* %22459, i32 0, i32 9
  %22461 = getelementptr inbounds %struct.Reg, %struct.Reg* %22460, i32 0, i32 0
  %RSI.i248 = bitcast %union.anon* %22461 to i64*
  %22462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22463 = getelementptr inbounds %struct.GPR, %struct.GPR* %22462, i32 0, i32 11
  %22464 = getelementptr inbounds %struct.Reg, %struct.Reg* %22463, i32 0, i32 0
  %RDI.i249 = bitcast %union.anon* %22464 to i64*
  %22465 = load i64, i64* %RSI.i248
  %22466 = load i64, i64* %RDI.i249
  %22467 = mul i64 %22466, 8
  %22468 = add i64 %22467, %22465
  %22469 = load i64, i64* %PC.i247
  %22470 = add i64 %22469, 4
  store i64 %22470, i64* %PC.i247
  %22471 = inttoptr i64 %22468 to i64*
  %22472 = load i64, i64* %22471
  store i64 %22472, i64* %RSI.i248, align 8
  store %struct.Memory* %loadMem_4afb94, %struct.Memory** %MEMORY
  %loadMem_4afb98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22474 = getelementptr inbounds %struct.GPR, %struct.GPR* %22473, i32 0, i32 33
  %22475 = getelementptr inbounds %struct.Reg, %struct.Reg* %22474, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %22475 to i64*
  %22476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22477 = getelementptr inbounds %struct.GPR, %struct.GPR* %22476, i32 0, i32 11
  %22478 = getelementptr inbounds %struct.Reg, %struct.Reg* %22477, i32 0, i32 0
  %RDI.i245 = bitcast %union.anon* %22478 to i64*
  %22479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22480 = getelementptr inbounds %struct.GPR, %struct.GPR* %22479, i32 0, i32 15
  %22481 = getelementptr inbounds %struct.Reg, %struct.Reg* %22480, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %22481 to i64*
  %22482 = load i64, i64* %RBP.i246
  %22483 = sub i64 %22482, 36
  %22484 = load i64, i64* %PC.i244
  %22485 = add i64 %22484, 4
  store i64 %22485, i64* %PC.i244
  %22486 = inttoptr i64 %22483 to i32*
  %22487 = load i32, i32* %22486
  %22488 = sext i32 %22487 to i64
  store i64 %22488, i64* %RDI.i245, align 8
  store %struct.Memory* %loadMem_4afb98, %struct.Memory** %MEMORY
  %loadMem_4afb9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22490 = getelementptr inbounds %struct.GPR, %struct.GPR* %22489, i32 0, i32 33
  %22491 = getelementptr inbounds %struct.Reg, %struct.Reg* %22490, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %22491 to i64*
  %22492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22493 = getelementptr inbounds %struct.GPR, %struct.GPR* %22492, i32 0, i32 9
  %22494 = getelementptr inbounds %struct.Reg, %struct.Reg* %22493, i32 0, i32 0
  %RSI.i242 = bitcast %union.anon* %22494 to i64*
  %22495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22496 = getelementptr inbounds %struct.GPR, %struct.GPR* %22495, i32 0, i32 11
  %22497 = getelementptr inbounds %struct.Reg, %struct.Reg* %22496, i32 0, i32 0
  %RDI.i243 = bitcast %union.anon* %22497 to i64*
  %22498 = load i64, i64* %RSI.i242
  %22499 = load i64, i64* %RDI.i243
  %22500 = mul i64 %22499, 8
  %22501 = add i64 %22500, %22498
  %22502 = load i64, i64* %PC.i241
  %22503 = add i64 %22502, 4
  store i64 %22503, i64* %PC.i241
  %22504 = inttoptr i64 %22501 to i64*
  %22505 = load i64, i64* %22504
  store i64 %22505, i64* %RSI.i242, align 8
  store %struct.Memory* %loadMem_4afb9c, %struct.Memory** %MEMORY
  %loadMem_4afba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22507 = getelementptr inbounds %struct.GPR, %struct.GPR* %22506, i32 0, i32 33
  %22508 = getelementptr inbounds %struct.Reg, %struct.Reg* %22507, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %22508 to i64*
  %22509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22510 = getelementptr inbounds %struct.GPR, %struct.GPR* %22509, i32 0, i32 7
  %22511 = getelementptr inbounds %struct.Reg, %struct.Reg* %22510, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %22511 to i32*
  %22512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22513 = getelementptr inbounds %struct.GPR, %struct.GPR* %22512, i32 0, i32 9
  %22514 = getelementptr inbounds %struct.Reg, %struct.Reg* %22513, i32 0, i32 0
  %RSI.i240 = bitcast %union.anon* %22514 to i64*
  %22515 = load i64, i64* %RSI.i240
  %22516 = add i64 %22515, 4
  %22517 = load i32, i32* %EDX.i
  %22518 = zext i32 %22517 to i64
  %22519 = load i64, i64* %PC.i239
  %22520 = add i64 %22519, 3
  store i64 %22520, i64* %PC.i239
  %22521 = inttoptr i64 %22516 to i32*
  store i32 %22517, i32* %22521
  store %struct.Memory* %loadMem_4afba0, %struct.Memory** %MEMORY
  %loadMem_4afba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22523 = getelementptr inbounds %struct.GPR, %struct.GPR* %22522, i32 0, i32 33
  %22524 = getelementptr inbounds %struct.Reg, %struct.Reg* %22523, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %22524 to i64*
  %22525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22526 = getelementptr inbounds %struct.GPR, %struct.GPR* %22525, i32 0, i32 5
  %22527 = getelementptr inbounds %struct.Reg, %struct.Reg* %22526, i32 0, i32 0
  %RCX.i238 = bitcast %union.anon* %22527 to i64*
  %22528 = load i64, i64* %PC.i237
  %22529 = add i64 %22528, 7
  store i64 %22529, i64* %PC.i237
  %22530 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %22531 = zext i32 %22530 to i64
  store i64 %22531, i64* %RCX.i238, align 8
  store %struct.Memory* %loadMem_4afba3, %struct.Memory** %MEMORY
  %loadMem_4afbaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %22532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22533 = getelementptr inbounds %struct.GPR, %struct.GPR* %22532, i32 0, i32 33
  %22534 = getelementptr inbounds %struct.Reg, %struct.Reg* %22533, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %22534 to i64*
  %22535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22536 = getelementptr inbounds %struct.GPR, %struct.GPR* %22535, i32 0, i32 5
  %22537 = getelementptr inbounds %struct.Reg, %struct.Reg* %22536, i32 0, i32 0
  %22538 = bitcast %union.anon* %22537 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22538, i32 0, i32 0
  %22539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22540 = getelementptr inbounds %struct.GPR, %struct.GPR* %22539, i32 0, i32 1
  %22541 = getelementptr inbounds %struct.Reg, %struct.Reg* %22540, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %22541 to i64*
  %22542 = load i64, i64* %RAX.i236
  %22543 = load i8, i8* %CL.i
  %22544 = zext i8 %22543 to i64
  %22545 = load i64, i64* %PC.i235
  %22546 = add i64 %22545, 2
  store i64 %22546, i64* %PC.i235
  %22547 = trunc i64 %22544 to i5
  switch i5 %22547, label %22554 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %22548
  ]

; <label>:22548:                                  ; preds = %routine_shll__cl___edx.exit
  %22549 = trunc i64 %22542 to i32
  %22550 = shl i32 %22549, 1
  %22551 = icmp slt i32 %22549, 0
  %22552 = icmp slt i32 %22550, 0
  %22553 = xor i1 %22551, %22552
  br label %22563

; <label>:22554:                                  ; preds = %routine_shll__cl___edx.exit
  %22555 = and i64 %22544, 31
  %22556 = add i64 %22555, 4294967295
  %22557 = and i64 %22542, 4294967295
  %22558 = and i64 %22556, 4294967295
  %22559 = shl i64 %22557, %22558
  %22560 = trunc i64 %22559 to i32
  %22561 = icmp slt i32 %22560, 0
  %22562 = shl i32 %22560, 1
  br label %22563

; <label>:22563:                                  ; preds = %22554, %22548
  %22564 = phi i1 [ %22551, %22548 ], [ %22561, %22554 ]
  %22565 = phi i1 [ %22553, %22548 ], [ false, %22554 ]
  %22566 = phi i32 [ %22550, %22548 ], [ %22562, %22554 ]
  %22567 = zext i32 %22566 to i64
  store i64 %22567, i64* %RAX.i236, align 8
  %22568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22569 = zext i1 %22564 to i8
  store i8 %22569, i8* %22568, align 1
  %22570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22571 = and i32 %22566, 254
  %22572 = call i32 @llvm.ctpop.i32(i32 %22571)
  %22573 = trunc i32 %22572 to i8
  %22574 = and i8 %22573, 1
  %22575 = xor i8 %22574, 1
  store i8 %22575, i8* %22570, align 1
  %22576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22576, align 1
  %22577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22578 = icmp eq i32 %22566, 0
  %22579 = zext i1 %22578 to i8
  store i8 %22579, i8* %22577, align 1
  %22580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22581 = lshr i32 %22566, 31
  %22582 = trunc i32 %22581 to i8
  store i8 %22582, i8* %22580, align 1
  %22583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %22584 = zext i1 %22565 to i8
  store i8 %22584, i8* %22583, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %routine_shll__cl___edx.exit, %22563
  store %struct.Memory* %loadMem_4afbaa, %struct.Memory** %MEMORY
  %loadMem_4afbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %22585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22586 = getelementptr inbounds %struct.GPR, %struct.GPR* %22585, i32 0, i32 33
  %22587 = getelementptr inbounds %struct.Reg, %struct.Reg* %22586, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %22587 to i64*
  %22588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22589 = getelementptr inbounds %struct.GPR, %struct.GPR* %22588, i32 0, i32 9
  %22590 = getelementptr inbounds %struct.Reg, %struct.Reg* %22589, i32 0, i32 0
  %RSI.i234 = bitcast %union.anon* %22590 to i64*
  %22591 = load i64, i64* %PC.i233
  %22592 = add i64 %22591, 8
  store i64 %22592, i64* %PC.i233
  %22593 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %22593, i64* %RSI.i234, align 8
  store %struct.Memory* %loadMem_4afbac, %struct.Memory** %MEMORY
  %loadMem_4afbb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22595 = getelementptr inbounds %struct.GPR, %struct.GPR* %22594, i32 0, i32 33
  %22596 = getelementptr inbounds %struct.Reg, %struct.Reg* %22595, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %22596 to i64*
  %22597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22598 = getelementptr inbounds %struct.GPR, %struct.GPR* %22597, i32 0, i32 11
  %22599 = getelementptr inbounds %struct.Reg, %struct.Reg* %22598, i32 0, i32 0
  %RDI.i231 = bitcast %union.anon* %22599 to i64*
  %22600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22601 = getelementptr inbounds %struct.GPR, %struct.GPR* %22600, i32 0, i32 15
  %22602 = getelementptr inbounds %struct.Reg, %struct.Reg* %22601, i32 0, i32 0
  %RBP.i232 = bitcast %union.anon* %22602 to i64*
  %22603 = load i64, i64* %RBP.i232
  %22604 = sub i64 %22603, 35396
  %22605 = load i64, i64* %PC.i230
  %22606 = add i64 %22605, 7
  store i64 %22606, i64* %PC.i230
  %22607 = inttoptr i64 %22604 to i32*
  %22608 = load i32, i32* %22607
  %22609 = sext i32 %22608 to i64
  store i64 %22609, i64* %RDI.i231, align 8
  store %struct.Memory* %loadMem_4afbb4, %struct.Memory** %MEMORY
  %loadMem_4afbbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %22610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22611 = getelementptr inbounds %struct.GPR, %struct.GPR* %22610, i32 0, i32 33
  %22612 = getelementptr inbounds %struct.Reg, %struct.Reg* %22611, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %22612 to i64*
  %22613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22614 = getelementptr inbounds %struct.GPR, %struct.GPR* %22613, i32 0, i32 9
  %22615 = getelementptr inbounds %struct.Reg, %struct.Reg* %22614, i32 0, i32 0
  %RSI.i228 = bitcast %union.anon* %22615 to i64*
  %22616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22617 = getelementptr inbounds %struct.GPR, %struct.GPR* %22616, i32 0, i32 11
  %22618 = getelementptr inbounds %struct.Reg, %struct.Reg* %22617, i32 0, i32 0
  %RDI.i229 = bitcast %union.anon* %22618 to i64*
  %22619 = load i64, i64* %RSI.i228
  %22620 = load i64, i64* %RDI.i229
  %22621 = mul i64 %22620, 8
  %22622 = add i64 %22621, %22619
  %22623 = load i64, i64* %PC.i227
  %22624 = add i64 %22623, 4
  store i64 %22624, i64* %PC.i227
  %22625 = inttoptr i64 %22622 to i64*
  %22626 = load i64, i64* %22625
  store i64 %22626, i64* %RSI.i228, align 8
  store %struct.Memory* %loadMem_4afbbb, %struct.Memory** %MEMORY
  %loadMem_4afbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %22627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22628 = getelementptr inbounds %struct.GPR, %struct.GPR* %22627, i32 0, i32 33
  %22629 = getelementptr inbounds %struct.Reg, %struct.Reg* %22628, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %22629 to i64*
  %22630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22631 = getelementptr inbounds %struct.GPR, %struct.GPR* %22630, i32 0, i32 11
  %22632 = getelementptr inbounds %struct.Reg, %struct.Reg* %22631, i32 0, i32 0
  %RDI.i225 = bitcast %union.anon* %22632 to i64*
  %22633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22634 = getelementptr inbounds %struct.GPR, %struct.GPR* %22633, i32 0, i32 15
  %22635 = getelementptr inbounds %struct.Reg, %struct.Reg* %22634, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %22635 to i64*
  %22636 = load i64, i64* %RBP.i226
  %22637 = sub i64 %22636, 36
  %22638 = load i64, i64* %PC.i224
  %22639 = add i64 %22638, 4
  store i64 %22639, i64* %PC.i224
  %22640 = inttoptr i64 %22637 to i32*
  %22641 = load i32, i32* %22640
  %22642 = sext i32 %22641 to i64
  store i64 %22642, i64* %RDI.i225, align 8
  store %struct.Memory* %loadMem_4afbbf, %struct.Memory** %MEMORY
  %loadMem_4afbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22644 = getelementptr inbounds %struct.GPR, %struct.GPR* %22643, i32 0, i32 33
  %22645 = getelementptr inbounds %struct.Reg, %struct.Reg* %22644, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %22645 to i64*
  %22646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22647 = getelementptr inbounds %struct.GPR, %struct.GPR* %22646, i32 0, i32 9
  %22648 = getelementptr inbounds %struct.Reg, %struct.Reg* %22647, i32 0, i32 0
  %RSI.i222 = bitcast %union.anon* %22648 to i64*
  %22649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22650 = getelementptr inbounds %struct.GPR, %struct.GPR* %22649, i32 0, i32 11
  %22651 = getelementptr inbounds %struct.Reg, %struct.Reg* %22650, i32 0, i32 0
  %RDI.i223 = bitcast %union.anon* %22651 to i64*
  %22652 = load i64, i64* %RSI.i222
  %22653 = load i64, i64* %RDI.i223
  %22654 = mul i64 %22653, 8
  %22655 = add i64 %22654, %22652
  %22656 = load i64, i64* %PC.i221
  %22657 = add i64 %22656, 4
  store i64 %22657, i64* %PC.i221
  %22658 = inttoptr i64 %22655 to i64*
  %22659 = load i64, i64* %22658
  store i64 %22659, i64* %RSI.i222, align 8
  store %struct.Memory* %loadMem_4afbc3, %struct.Memory** %MEMORY
  %loadMem_4afbc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22661 = getelementptr inbounds %struct.GPR, %struct.GPR* %22660, i32 0, i32 33
  %22662 = getelementptr inbounds %struct.Reg, %struct.Reg* %22661, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %22662 to i64*
  %22663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22664 = getelementptr inbounds %struct.GPR, %struct.GPR* %22663, i32 0, i32 1
  %22665 = getelementptr inbounds %struct.Reg, %struct.Reg* %22664, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %22665 to i32*
  %22666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22667 = getelementptr inbounds %struct.GPR, %struct.GPR* %22666, i32 0, i32 9
  %22668 = getelementptr inbounds %struct.Reg, %struct.Reg* %22667, i32 0, i32 0
  %RSI.i220 = bitcast %union.anon* %22668 to i64*
  %22669 = load i64, i64* %RSI.i220
  %22670 = add i64 %22669, 8
  %22671 = load i32, i32* %EAX.i219
  %22672 = zext i32 %22671 to i64
  %22673 = load i64, i64* %PC.i218
  %22674 = add i64 %22673, 3
  store i64 %22674, i64* %PC.i218
  %22675 = inttoptr i64 %22670 to i32*
  store i32 %22671, i32* %22675
  store %struct.Memory* %loadMem_4afbc7, %struct.Memory** %MEMORY
  %loadMem_4afbca = load %struct.Memory*, %struct.Memory** %MEMORY
  %22676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22677 = getelementptr inbounds %struct.GPR, %struct.GPR* %22676, i32 0, i32 33
  %22678 = getelementptr inbounds %struct.Reg, %struct.Reg* %22677, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %22678 to i64*
  %22679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22680 = getelementptr inbounds %struct.GPR, %struct.GPR* %22679, i32 0, i32 9
  %22681 = getelementptr inbounds %struct.Reg, %struct.Reg* %22680, i32 0, i32 0
  %RSI.i217 = bitcast %union.anon* %22681 to i64*
  %22682 = load i64, i64* %PC.i216
  %22683 = add i64 %22682, 8
  store i64 %22683, i64* %PC.i216
  %22684 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %22684, i64* %RSI.i217, align 8
  store %struct.Memory* %loadMem_4afbca, %struct.Memory** %MEMORY
  %loadMem_4afbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22686 = getelementptr inbounds %struct.GPR, %struct.GPR* %22685, i32 0, i32 33
  %22687 = getelementptr inbounds %struct.Reg, %struct.Reg* %22686, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %22687 to i64*
  %22688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22689 = getelementptr inbounds %struct.GPR, %struct.GPR* %22688, i32 0, i32 11
  %22690 = getelementptr inbounds %struct.Reg, %struct.Reg* %22689, i32 0, i32 0
  %RDI.i214 = bitcast %union.anon* %22690 to i64*
  %22691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22692 = getelementptr inbounds %struct.GPR, %struct.GPR* %22691, i32 0, i32 15
  %22693 = getelementptr inbounds %struct.Reg, %struct.Reg* %22692, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %22693 to i64*
  %22694 = load i64, i64* %RBP.i215
  %22695 = sub i64 %22694, 35396
  %22696 = load i64, i64* %PC.i213
  %22697 = add i64 %22696, 7
  store i64 %22697, i64* %PC.i213
  %22698 = inttoptr i64 %22695 to i32*
  %22699 = load i32, i32* %22698
  %22700 = sext i32 %22699 to i64
  store i64 %22700, i64* %RDI.i214, align 8
  store %struct.Memory* %loadMem_4afbd2, %struct.Memory** %MEMORY
  %loadMem_4afbd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22702 = getelementptr inbounds %struct.GPR, %struct.GPR* %22701, i32 0, i32 33
  %22703 = getelementptr inbounds %struct.Reg, %struct.Reg* %22702, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %22703 to i64*
  %22704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22705 = getelementptr inbounds %struct.GPR, %struct.GPR* %22704, i32 0, i32 9
  %22706 = getelementptr inbounds %struct.Reg, %struct.Reg* %22705, i32 0, i32 0
  %RSI.i211 = bitcast %union.anon* %22706 to i64*
  %22707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22708 = getelementptr inbounds %struct.GPR, %struct.GPR* %22707, i32 0, i32 11
  %22709 = getelementptr inbounds %struct.Reg, %struct.Reg* %22708, i32 0, i32 0
  %RDI.i212 = bitcast %union.anon* %22709 to i64*
  %22710 = load i64, i64* %RSI.i211
  %22711 = load i64, i64* %RDI.i212
  %22712 = mul i64 %22711, 8
  %22713 = add i64 %22712, %22710
  %22714 = load i64, i64* %PC.i210
  %22715 = add i64 %22714, 4
  store i64 %22715, i64* %PC.i210
  %22716 = inttoptr i64 %22713 to i64*
  %22717 = load i64, i64* %22716
  store i64 %22717, i64* %RSI.i211, align 8
  store %struct.Memory* %loadMem_4afbd9, %struct.Memory** %MEMORY
  %loadMem_4afbdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %22718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22719 = getelementptr inbounds %struct.GPR, %struct.GPR* %22718, i32 0, i32 33
  %22720 = getelementptr inbounds %struct.Reg, %struct.Reg* %22719, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %22720 to i64*
  %22721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22722 = getelementptr inbounds %struct.GPR, %struct.GPR* %22721, i32 0, i32 11
  %22723 = getelementptr inbounds %struct.Reg, %struct.Reg* %22722, i32 0, i32 0
  %RDI.i208 = bitcast %union.anon* %22723 to i64*
  %22724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22725 = getelementptr inbounds %struct.GPR, %struct.GPR* %22724, i32 0, i32 15
  %22726 = getelementptr inbounds %struct.Reg, %struct.Reg* %22725, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %22726 to i64*
  %22727 = load i64, i64* %RBP.i209
  %22728 = sub i64 %22727, 36
  %22729 = load i64, i64* %PC.i207
  %22730 = add i64 %22729, 4
  store i64 %22730, i64* %PC.i207
  %22731 = inttoptr i64 %22728 to i32*
  %22732 = load i32, i32* %22731
  %22733 = sext i32 %22732 to i64
  store i64 %22733, i64* %RDI.i208, align 8
  store %struct.Memory* %loadMem_4afbdd, %struct.Memory** %MEMORY
  %loadMem_4afbe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22735 = getelementptr inbounds %struct.GPR, %struct.GPR* %22734, i32 0, i32 33
  %22736 = getelementptr inbounds %struct.Reg, %struct.Reg* %22735, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %22736 to i64*
  %22737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22738 = getelementptr inbounds %struct.GPR, %struct.GPR* %22737, i32 0, i32 9
  %22739 = getelementptr inbounds %struct.Reg, %struct.Reg* %22738, i32 0, i32 0
  %RSI.i205 = bitcast %union.anon* %22739 to i64*
  %22740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22741 = getelementptr inbounds %struct.GPR, %struct.GPR* %22740, i32 0, i32 11
  %22742 = getelementptr inbounds %struct.Reg, %struct.Reg* %22741, i32 0, i32 0
  %RDI.i206 = bitcast %union.anon* %22742 to i64*
  %22743 = load i64, i64* %RSI.i205
  %22744 = load i64, i64* %RDI.i206
  %22745 = mul i64 %22744, 8
  %22746 = add i64 %22745, %22743
  %22747 = load i64, i64* %PC.i204
  %22748 = add i64 %22747, 4
  store i64 %22748, i64* %PC.i204
  %22749 = inttoptr i64 %22746 to i64*
  %22750 = load i64, i64* %22749
  store i64 %22750, i64* %RSI.i205, align 8
  store %struct.Memory* %loadMem_4afbe1, %struct.Memory** %MEMORY
  %loadMem_4afbe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22752 = getelementptr inbounds %struct.GPR, %struct.GPR* %22751, i32 0, i32 33
  %22753 = getelementptr inbounds %struct.Reg, %struct.Reg* %22752, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %22753 to i64*
  %22754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22755 = getelementptr inbounds %struct.GPR, %struct.GPR* %22754, i32 0, i32 9
  %22756 = getelementptr inbounds %struct.Reg, %struct.Reg* %22755, i32 0, i32 0
  %RSI.i203 = bitcast %union.anon* %22756 to i64*
  %22757 = load i64, i64* %RSI.i203
  %22758 = load i64, i64* %PC.i202
  %22759 = add i64 %22758, 6
  store i64 %22759, i64* %PC.i202
  %22760 = inttoptr i64 %22757 to i32*
  store i32 0, i32* %22760
  store %struct.Memory* %loadMem_4afbe5, %struct.Memory** %MEMORY
  %loadMem_4afbeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %22761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22762 = getelementptr inbounds %struct.GPR, %struct.GPR* %22761, i32 0, i32 33
  %22763 = getelementptr inbounds %struct.Reg, %struct.Reg* %22762, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %22763 to i64*
  %22764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22765 = getelementptr inbounds %struct.GPR, %struct.GPR* %22764, i32 0, i32 9
  %22766 = getelementptr inbounds %struct.Reg, %struct.Reg* %22765, i32 0, i32 0
  %RSI.i201 = bitcast %union.anon* %22766 to i64*
  %22767 = load i64, i64* %PC.i200
  %22768 = add i64 %22767, 8
  store i64 %22768, i64* %PC.i200
  %22769 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %22769, i64* %RSI.i201, align 8
  store %struct.Memory* %loadMem_4afbeb, %struct.Memory** %MEMORY
  %loadMem_4afbf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22771 = getelementptr inbounds %struct.GPR, %struct.GPR* %22770, i32 0, i32 33
  %22772 = getelementptr inbounds %struct.Reg, %struct.Reg* %22771, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %22772 to i64*
  %22773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22774 = getelementptr inbounds %struct.GPR, %struct.GPR* %22773, i32 0, i32 11
  %22775 = getelementptr inbounds %struct.Reg, %struct.Reg* %22774, i32 0, i32 0
  %RDI.i198 = bitcast %union.anon* %22775 to i64*
  %22776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22777 = getelementptr inbounds %struct.GPR, %struct.GPR* %22776, i32 0, i32 15
  %22778 = getelementptr inbounds %struct.Reg, %struct.Reg* %22777, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %22778 to i64*
  %22779 = load i64, i64* %RBP.i199
  %22780 = sub i64 %22779, 35396
  %22781 = load i64, i64* %PC.i197
  %22782 = add i64 %22781, 7
  store i64 %22782, i64* %PC.i197
  %22783 = inttoptr i64 %22780 to i32*
  %22784 = load i32, i32* %22783
  %22785 = sext i32 %22784 to i64
  store i64 %22785, i64* %RDI.i198, align 8
  store %struct.Memory* %loadMem_4afbf3, %struct.Memory** %MEMORY
  %loadMem_4afbfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %22786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22787 = getelementptr inbounds %struct.GPR, %struct.GPR* %22786, i32 0, i32 33
  %22788 = getelementptr inbounds %struct.Reg, %struct.Reg* %22787, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %22788 to i64*
  %22789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22790 = getelementptr inbounds %struct.GPR, %struct.GPR* %22789, i32 0, i32 9
  %22791 = getelementptr inbounds %struct.Reg, %struct.Reg* %22790, i32 0, i32 0
  %RSI.i195 = bitcast %union.anon* %22791 to i64*
  %22792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22793 = getelementptr inbounds %struct.GPR, %struct.GPR* %22792, i32 0, i32 11
  %22794 = getelementptr inbounds %struct.Reg, %struct.Reg* %22793, i32 0, i32 0
  %RDI.i196 = bitcast %union.anon* %22794 to i64*
  %22795 = load i64, i64* %RSI.i195
  %22796 = load i64, i64* %RDI.i196
  %22797 = mul i64 %22796, 8
  %22798 = add i64 %22797, %22795
  %22799 = load i64, i64* %PC.i194
  %22800 = add i64 %22799, 4
  store i64 %22800, i64* %PC.i194
  %22801 = inttoptr i64 %22798 to i64*
  %22802 = load i64, i64* %22801
  store i64 %22802, i64* %RSI.i195, align 8
  store %struct.Memory* %loadMem_4afbfa, %struct.Memory** %MEMORY
  %loadMem_4afbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %22803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22804 = getelementptr inbounds %struct.GPR, %struct.GPR* %22803, i32 0, i32 33
  %22805 = getelementptr inbounds %struct.Reg, %struct.Reg* %22804, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %22805 to i64*
  %22806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22807 = getelementptr inbounds %struct.GPR, %struct.GPR* %22806, i32 0, i32 11
  %22808 = getelementptr inbounds %struct.Reg, %struct.Reg* %22807, i32 0, i32 0
  %RDI.i192 = bitcast %union.anon* %22808 to i64*
  %22809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22810 = getelementptr inbounds %struct.GPR, %struct.GPR* %22809, i32 0, i32 15
  %22811 = getelementptr inbounds %struct.Reg, %struct.Reg* %22810, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %22811 to i64*
  %22812 = load i64, i64* %RBP.i193
  %22813 = sub i64 %22812, 36
  %22814 = load i64, i64* %PC.i191
  %22815 = add i64 %22814, 4
  store i64 %22815, i64* %PC.i191
  %22816 = inttoptr i64 %22813 to i32*
  %22817 = load i32, i32* %22816
  %22818 = sext i32 %22817 to i64
  store i64 %22818, i64* %RDI.i192, align 8
  store %struct.Memory* %loadMem_4afbfe, %struct.Memory** %MEMORY
  %loadMem_4afc02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22820 = getelementptr inbounds %struct.GPR, %struct.GPR* %22819, i32 0, i32 33
  %22821 = getelementptr inbounds %struct.Reg, %struct.Reg* %22820, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %22821 to i64*
  %22822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22823 = getelementptr inbounds %struct.GPR, %struct.GPR* %22822, i32 0, i32 9
  %22824 = getelementptr inbounds %struct.Reg, %struct.Reg* %22823, i32 0, i32 0
  %RSI.i189 = bitcast %union.anon* %22824 to i64*
  %22825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22826 = getelementptr inbounds %struct.GPR, %struct.GPR* %22825, i32 0, i32 11
  %22827 = getelementptr inbounds %struct.Reg, %struct.Reg* %22826, i32 0, i32 0
  %RDI.i190 = bitcast %union.anon* %22827 to i64*
  %22828 = load i64, i64* %RSI.i189
  %22829 = load i64, i64* %RDI.i190
  %22830 = mul i64 %22829, 8
  %22831 = add i64 %22830, %22828
  %22832 = load i64, i64* %PC.i188
  %22833 = add i64 %22832, 4
  store i64 %22833, i64* %PC.i188
  %22834 = inttoptr i64 %22831 to i64*
  %22835 = load i64, i64* %22834
  store i64 %22835, i64* %RSI.i189, align 8
  store %struct.Memory* %loadMem_4afc02, %struct.Memory** %MEMORY
  %loadMem_4afc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22837 = getelementptr inbounds %struct.GPR, %struct.GPR* %22836, i32 0, i32 33
  %22838 = getelementptr inbounds %struct.Reg, %struct.Reg* %22837, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %22838 to i64*
  %22839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22840 = getelementptr inbounds %struct.GPR, %struct.GPR* %22839, i32 0, i32 9
  %22841 = getelementptr inbounds %struct.Reg, %struct.Reg* %22840, i32 0, i32 0
  %RSI.i187 = bitcast %union.anon* %22841 to i64*
  %22842 = load i64, i64* %RSI.i187
  %22843 = add i64 %22842, 4
  %22844 = load i64, i64* %PC.i186
  %22845 = add i64 %22844, 7
  store i64 %22845, i64* %PC.i186
  %22846 = inttoptr i64 %22843 to i32*
  store i32 0, i32* %22846
  store %struct.Memory* %loadMem_4afc06, %struct.Memory** %MEMORY
  %loadMem_4afc0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22848 = getelementptr inbounds %struct.GPR, %struct.GPR* %22847, i32 0, i32 33
  %22849 = getelementptr inbounds %struct.Reg, %struct.Reg* %22848, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %22849 to i64*
  %22850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22851 = getelementptr inbounds %struct.GPR, %struct.GPR* %22850, i32 0, i32 9
  %22852 = getelementptr inbounds %struct.Reg, %struct.Reg* %22851, i32 0, i32 0
  %RSI.i185 = bitcast %union.anon* %22852 to i64*
  %22853 = load i64, i64* %PC.i184
  %22854 = add i64 %22853, 8
  store i64 %22854, i64* %PC.i184
  %22855 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %22855, i64* %RSI.i185, align 8
  store %struct.Memory* %loadMem_4afc0d, %struct.Memory** %MEMORY
  %loadMem_4afc15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22857 = getelementptr inbounds %struct.GPR, %struct.GPR* %22856, i32 0, i32 33
  %22858 = getelementptr inbounds %struct.Reg, %struct.Reg* %22857, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %22858 to i64*
  %22859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22860 = getelementptr inbounds %struct.GPR, %struct.GPR* %22859, i32 0, i32 11
  %22861 = getelementptr inbounds %struct.Reg, %struct.Reg* %22860, i32 0, i32 0
  %RDI.i182 = bitcast %union.anon* %22861 to i64*
  %22862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22863 = getelementptr inbounds %struct.GPR, %struct.GPR* %22862, i32 0, i32 15
  %22864 = getelementptr inbounds %struct.Reg, %struct.Reg* %22863, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %22864 to i64*
  %22865 = load i64, i64* %RBP.i183
  %22866 = sub i64 %22865, 35396
  %22867 = load i64, i64* %PC.i181
  %22868 = add i64 %22867, 7
  store i64 %22868, i64* %PC.i181
  %22869 = inttoptr i64 %22866 to i32*
  %22870 = load i32, i32* %22869
  %22871 = sext i32 %22870 to i64
  store i64 %22871, i64* %RDI.i182, align 8
  store %struct.Memory* %loadMem_4afc15, %struct.Memory** %MEMORY
  %loadMem_4afc1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22873 = getelementptr inbounds %struct.GPR, %struct.GPR* %22872, i32 0, i32 33
  %22874 = getelementptr inbounds %struct.Reg, %struct.Reg* %22873, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %22874 to i64*
  %22875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22876 = getelementptr inbounds %struct.GPR, %struct.GPR* %22875, i32 0, i32 9
  %22877 = getelementptr inbounds %struct.Reg, %struct.Reg* %22876, i32 0, i32 0
  %RSI.i179 = bitcast %union.anon* %22877 to i64*
  %22878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22879 = getelementptr inbounds %struct.GPR, %struct.GPR* %22878, i32 0, i32 11
  %22880 = getelementptr inbounds %struct.Reg, %struct.Reg* %22879, i32 0, i32 0
  %RDI.i180 = bitcast %union.anon* %22880 to i64*
  %22881 = load i64, i64* %RSI.i179
  %22882 = load i64, i64* %RDI.i180
  %22883 = mul i64 %22882, 8
  %22884 = add i64 %22883, %22881
  %22885 = load i64, i64* %PC.i178
  %22886 = add i64 %22885, 4
  store i64 %22886, i64* %PC.i178
  %22887 = inttoptr i64 %22884 to i64*
  %22888 = load i64, i64* %22887
  store i64 %22888, i64* %RSI.i179, align 8
  store %struct.Memory* %loadMem_4afc1c, %struct.Memory** %MEMORY
  %loadMem_4afc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22890 = getelementptr inbounds %struct.GPR, %struct.GPR* %22889, i32 0, i32 33
  %22891 = getelementptr inbounds %struct.Reg, %struct.Reg* %22890, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %22891 to i64*
  %22892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22893 = getelementptr inbounds %struct.GPR, %struct.GPR* %22892, i32 0, i32 11
  %22894 = getelementptr inbounds %struct.Reg, %struct.Reg* %22893, i32 0, i32 0
  %RDI.i176 = bitcast %union.anon* %22894 to i64*
  %22895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22896 = getelementptr inbounds %struct.GPR, %struct.GPR* %22895, i32 0, i32 15
  %22897 = getelementptr inbounds %struct.Reg, %struct.Reg* %22896, i32 0, i32 0
  %RBP.i177 = bitcast %union.anon* %22897 to i64*
  %22898 = load i64, i64* %RBP.i177
  %22899 = sub i64 %22898, 36
  %22900 = load i64, i64* %PC.i175
  %22901 = add i64 %22900, 4
  store i64 %22901, i64* %PC.i175
  %22902 = inttoptr i64 %22899 to i32*
  %22903 = load i32, i32* %22902
  %22904 = sext i32 %22903 to i64
  store i64 %22904, i64* %RDI.i176, align 8
  store %struct.Memory* %loadMem_4afc20, %struct.Memory** %MEMORY
  %loadMem_4afc24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22906 = getelementptr inbounds %struct.GPR, %struct.GPR* %22905, i32 0, i32 33
  %22907 = getelementptr inbounds %struct.Reg, %struct.Reg* %22906, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %22907 to i64*
  %22908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22909 = getelementptr inbounds %struct.GPR, %struct.GPR* %22908, i32 0, i32 9
  %22910 = getelementptr inbounds %struct.Reg, %struct.Reg* %22909, i32 0, i32 0
  %RSI.i174 = bitcast %union.anon* %22910 to i64*
  %22911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22912 = getelementptr inbounds %struct.GPR, %struct.GPR* %22911, i32 0, i32 11
  %22913 = getelementptr inbounds %struct.Reg, %struct.Reg* %22912, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %22913 to i64*
  %22914 = load i64, i64* %RSI.i174
  %22915 = load i64, i64* %RDI.i
  %22916 = mul i64 %22915, 8
  %22917 = add i64 %22916, %22914
  %22918 = load i64, i64* %PC.i173
  %22919 = add i64 %22918, 4
  store i64 %22919, i64* %PC.i173
  %22920 = inttoptr i64 %22917 to i64*
  %22921 = load i64, i64* %22920
  store i64 %22921, i64* %RSI.i174, align 8
  store %struct.Memory* %loadMem_4afc24, %struct.Memory** %MEMORY
  %loadMem_4afc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22923 = getelementptr inbounds %struct.GPR, %struct.GPR* %22922, i32 0, i32 33
  %22924 = getelementptr inbounds %struct.Reg, %struct.Reg* %22923, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %22924 to i64*
  %22925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22926 = getelementptr inbounds %struct.GPR, %struct.GPR* %22925, i32 0, i32 9
  %22927 = getelementptr inbounds %struct.Reg, %struct.Reg* %22926, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %22927 to i64*
  %22928 = load i64, i64* %RSI.i
  %22929 = add i64 %22928, 8
  %22930 = load i64, i64* %PC.i172
  %22931 = add i64 %22930, 7
  store i64 %22931, i64* %PC.i172
  %22932 = inttoptr i64 %22929 to i32*
  store i32 0, i32* %22932
  store %struct.Memory* %loadMem_4afc28, %struct.Memory** %MEMORY
  %loadMem_4afc2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %22933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22934 = getelementptr inbounds %struct.GPR, %struct.GPR* %22933, i32 0, i32 33
  %22935 = getelementptr inbounds %struct.Reg, %struct.Reg* %22934, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %22935 to i64*
  %22936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22937 = getelementptr inbounds %struct.GPR, %struct.GPR* %22936, i32 0, i32 1
  %22938 = getelementptr inbounds %struct.Reg, %struct.Reg* %22937, i32 0, i32 0
  %RAX.i170 = bitcast %union.anon* %22938 to i64*
  %22939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22940 = getelementptr inbounds %struct.GPR, %struct.GPR* %22939, i32 0, i32 15
  %22941 = getelementptr inbounds %struct.Reg, %struct.Reg* %22940, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %22941 to i64*
  %22942 = load i64, i64* %RBP.i171
  %22943 = sub i64 %22942, 36
  %22944 = load i64, i64* %PC.i169
  %22945 = add i64 %22944, 3
  store i64 %22945, i64* %PC.i169
  %22946 = inttoptr i64 %22943 to i32*
  %22947 = load i32, i32* %22946
  %22948 = zext i32 %22947 to i64
  store i64 %22948, i64* %RAX.i170, align 8
  store %struct.Memory* %loadMem_4afc2f, %struct.Memory** %MEMORY
  %loadMem_4afc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22950 = getelementptr inbounds %struct.GPR, %struct.GPR* %22949, i32 0, i32 33
  %22951 = getelementptr inbounds %struct.Reg, %struct.Reg* %22950, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %22951 to i64*
  %22952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22953 = getelementptr inbounds %struct.GPR, %struct.GPR* %22952, i32 0, i32 1
  %22954 = getelementptr inbounds %struct.Reg, %struct.Reg* %22953, i32 0, i32 0
  %RAX.i168 = bitcast %union.anon* %22954 to i64*
  %22955 = load i64, i64* %RAX.i168
  %22956 = load i64, i64* %PC.i167
  %22957 = add i64 %22956, 3
  store i64 %22957, i64* %PC.i167
  %22958 = trunc i64 %22955 to i32
  %22959 = add i32 1, %22958
  %22960 = zext i32 %22959 to i64
  store i64 %22960, i64* %RAX.i168, align 8
  %22961 = icmp ult i32 %22959, %22958
  %22962 = icmp ult i32 %22959, 1
  %22963 = or i1 %22961, %22962
  %22964 = zext i1 %22963 to i8
  %22965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22964, i8* %22965, align 1
  %22966 = and i32 %22959, 255
  %22967 = call i32 @llvm.ctpop.i32(i32 %22966)
  %22968 = trunc i32 %22967 to i8
  %22969 = and i8 %22968, 1
  %22970 = xor i8 %22969, 1
  %22971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22970, i8* %22971, align 1
  %22972 = xor i64 1, %22955
  %22973 = trunc i64 %22972 to i32
  %22974 = xor i32 %22973, %22959
  %22975 = lshr i32 %22974, 4
  %22976 = trunc i32 %22975 to i8
  %22977 = and i8 %22976, 1
  %22978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22977, i8* %22978, align 1
  %22979 = icmp eq i32 %22959, 0
  %22980 = zext i1 %22979 to i8
  %22981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22980, i8* %22981, align 1
  %22982 = lshr i32 %22959, 31
  %22983 = trunc i32 %22982 to i8
  %22984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22983, i8* %22984, align 1
  %22985 = lshr i32 %22958, 31
  %22986 = xor i32 %22982, %22985
  %22987 = add i32 %22986, %22982
  %22988 = icmp eq i32 %22987, 2
  %22989 = zext i1 %22988 to i8
  %22990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22989, i8* %22990, align 1
  store %struct.Memory* %loadMem_4afc32, %struct.Memory** %MEMORY
  %loadMem_4afc35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22992 = getelementptr inbounds %struct.GPR, %struct.GPR* %22991, i32 0, i32 33
  %22993 = getelementptr inbounds %struct.Reg, %struct.Reg* %22992, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %22993 to i64*
  %22994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22995 = getelementptr inbounds %struct.GPR, %struct.GPR* %22994, i32 0, i32 1
  %22996 = getelementptr inbounds %struct.Reg, %struct.Reg* %22995, i32 0, i32 0
  %EAX.i165 = bitcast %union.anon* %22996 to i32*
  %22997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22998 = getelementptr inbounds %struct.GPR, %struct.GPR* %22997, i32 0, i32 15
  %22999 = getelementptr inbounds %struct.Reg, %struct.Reg* %22998, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %22999 to i64*
  %23000 = load i64, i64* %RBP.i166
  %23001 = sub i64 %23000, 36
  %23002 = load i32, i32* %EAX.i165
  %23003 = zext i32 %23002 to i64
  %23004 = load i64, i64* %PC.i164
  %23005 = add i64 %23004, 3
  store i64 %23005, i64* %PC.i164
  %23006 = inttoptr i64 %23001 to i32*
  store i32 %23002, i32* %23006
  store %struct.Memory* %loadMem_4afc35, %struct.Memory** %MEMORY
  %loadMem_4afc38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23008 = getelementptr inbounds %struct.GPR, %struct.GPR* %23007, i32 0, i32 33
  %23009 = getelementptr inbounds %struct.Reg, %struct.Reg* %23008, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %23009 to i64*
  %23010 = load i64, i64* %PC.i163
  %23011 = add i64 %23010, -258
  %23012 = load i64, i64* %PC.i163
  %23013 = add i64 %23012, 5
  store i64 %23013, i64* %PC.i163
  %23014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23011, i64* %23014, align 8
  store %struct.Memory* %loadMem_4afc38, %struct.Memory** %MEMORY
  br label %block_.L_4afb36

block_.L_4afc3d:                                  ; preds = %block_.L_4afb36
  %loadMem_4afc3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %23015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23016 = getelementptr inbounds %struct.GPR, %struct.GPR* %23015, i32 0, i32 33
  %23017 = getelementptr inbounds %struct.Reg, %struct.Reg* %23016, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %23017 to i64*
  %23018 = load i64, i64* %PC.i162
  %23019 = add i64 %23018, 5
  %23020 = load i64, i64* %PC.i162
  %23021 = add i64 %23020, 5
  store i64 %23021, i64* %PC.i162
  %23022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23019, i64* %23022, align 8
  store %struct.Memory* %loadMem_4afc3d, %struct.Memory** %MEMORY
  br label %block_.L_4afc42

block_.L_4afc42:                                  ; preds = %block_.L_4afc3d
  %loadMem_4afc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23024 = getelementptr inbounds %struct.GPR, %struct.GPR* %23023, i32 0, i32 33
  %23025 = getelementptr inbounds %struct.Reg, %struct.Reg* %23024, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %23025 to i64*
  %23026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23027 = getelementptr inbounds %struct.GPR, %struct.GPR* %23026, i32 0, i32 1
  %23028 = getelementptr inbounds %struct.Reg, %struct.Reg* %23027, i32 0, i32 0
  %RAX.i160 = bitcast %union.anon* %23028 to i64*
  %23029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23030 = getelementptr inbounds %struct.GPR, %struct.GPR* %23029, i32 0, i32 15
  %23031 = getelementptr inbounds %struct.Reg, %struct.Reg* %23030, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %23031 to i64*
  %23032 = load i64, i64* %RBP.i161
  %23033 = sub i64 %23032, 35396
  %23034 = load i64, i64* %PC.i159
  %23035 = add i64 %23034, 6
  store i64 %23035, i64* %PC.i159
  %23036 = inttoptr i64 %23033 to i32*
  %23037 = load i32, i32* %23036
  %23038 = zext i32 %23037 to i64
  store i64 %23038, i64* %RAX.i160, align 8
  store %struct.Memory* %loadMem_4afc42, %struct.Memory** %MEMORY
  %loadMem_4afc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23040 = getelementptr inbounds %struct.GPR, %struct.GPR* %23039, i32 0, i32 33
  %23041 = getelementptr inbounds %struct.Reg, %struct.Reg* %23040, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %23041 to i64*
  %23042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23043 = getelementptr inbounds %struct.GPR, %struct.GPR* %23042, i32 0, i32 1
  %23044 = getelementptr inbounds %struct.Reg, %struct.Reg* %23043, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %23044 to i64*
  %23045 = load i64, i64* %RAX.i158
  %23046 = load i64, i64* %PC.i157
  %23047 = add i64 %23046, 3
  store i64 %23047, i64* %PC.i157
  %23048 = trunc i64 %23045 to i32
  %23049 = add i32 1, %23048
  %23050 = zext i32 %23049 to i64
  store i64 %23050, i64* %RAX.i158, align 8
  %23051 = icmp ult i32 %23049, %23048
  %23052 = icmp ult i32 %23049, 1
  %23053 = or i1 %23051, %23052
  %23054 = zext i1 %23053 to i8
  %23055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23054, i8* %23055, align 1
  %23056 = and i32 %23049, 255
  %23057 = call i32 @llvm.ctpop.i32(i32 %23056)
  %23058 = trunc i32 %23057 to i8
  %23059 = and i8 %23058, 1
  %23060 = xor i8 %23059, 1
  %23061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23060, i8* %23061, align 1
  %23062 = xor i64 1, %23045
  %23063 = trunc i64 %23062 to i32
  %23064 = xor i32 %23063, %23049
  %23065 = lshr i32 %23064, 4
  %23066 = trunc i32 %23065 to i8
  %23067 = and i8 %23066, 1
  %23068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23067, i8* %23068, align 1
  %23069 = icmp eq i32 %23049, 0
  %23070 = zext i1 %23069 to i8
  %23071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23070, i8* %23071, align 1
  %23072 = lshr i32 %23049, 31
  %23073 = trunc i32 %23072 to i8
  %23074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23073, i8* %23074, align 1
  %23075 = lshr i32 %23048, 31
  %23076 = xor i32 %23072, %23075
  %23077 = add i32 %23076, %23072
  %23078 = icmp eq i32 %23077, 2
  %23079 = zext i1 %23078 to i8
  %23080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23079, i8* %23080, align 1
  store %struct.Memory* %loadMem_4afc48, %struct.Memory** %MEMORY
  %loadMem_4afc4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23082 = getelementptr inbounds %struct.GPR, %struct.GPR* %23081, i32 0, i32 33
  %23083 = getelementptr inbounds %struct.Reg, %struct.Reg* %23082, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %23083 to i64*
  %23084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23085 = getelementptr inbounds %struct.GPR, %struct.GPR* %23084, i32 0, i32 1
  %23086 = getelementptr inbounds %struct.Reg, %struct.Reg* %23085, i32 0, i32 0
  %EAX.i155 = bitcast %union.anon* %23086 to i32*
  %23087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23088 = getelementptr inbounds %struct.GPR, %struct.GPR* %23087, i32 0, i32 15
  %23089 = getelementptr inbounds %struct.Reg, %struct.Reg* %23088, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %23089 to i64*
  %23090 = load i64, i64* %RBP.i156
  %23091 = sub i64 %23090, 35396
  %23092 = load i32, i32* %EAX.i155
  %23093 = zext i32 %23092 to i64
  %23094 = load i64, i64* %PC.i154
  %23095 = add i64 %23094, 6
  store i64 %23095, i64* %PC.i154
  %23096 = inttoptr i64 %23091 to i32*
  store i32 %23092, i32* %23096
  store %struct.Memory* %loadMem_4afc4b, %struct.Memory** %MEMORY
  %loadMem_4afc51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23098 = getelementptr inbounds %struct.GPR, %struct.GPR* %23097, i32 0, i32 33
  %23099 = getelementptr inbounds %struct.Reg, %struct.Reg* %23098, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %23099 to i64*
  %23100 = load i64, i64* %PC.i153
  %23101 = add i64 %23100, -313
  %23102 = load i64, i64* %PC.i153
  %23103 = add i64 %23102, 5
  store i64 %23103, i64* %PC.i153
  %23104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23101, i64* %23104, align 8
  store %struct.Memory* %loadMem_4afc51, %struct.Memory** %MEMORY
  br label %block_.L_4afb18

block_.L_4afc56:                                  ; preds = %block_.L_4afb18
  %loadMem_4afc56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23106 = getelementptr inbounds %struct.GPR, %struct.GPR* %23105, i32 0, i32 33
  %23107 = getelementptr inbounds %struct.Reg, %struct.Reg* %23106, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %23107 to i64*
  %23108 = load i64, i64* %PC.i152
  %23109 = add i64 %23108, 5
  %23110 = load i64, i64* %PC.i152
  %23111 = add i64 %23110, 5
  store i64 %23111, i64* %PC.i152
  %23112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23109, i64* %23112, align 8
  store %struct.Memory* %loadMem_4afc56, %struct.Memory** %MEMORY
  br label %block_.L_4afc5b

block_.L_4afc5b:                                  ; preds = %block_.L_4afc56, %block_.L_4afb09
  %loadMem_4afc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23114 = getelementptr inbounds %struct.GPR, %struct.GPR* %23113, i32 0, i32 33
  %23115 = getelementptr inbounds %struct.Reg, %struct.Reg* %23114, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %23115 to i64*
  %23116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23117 = getelementptr inbounds %struct.GPR, %struct.GPR* %23116, i32 0, i32 15
  %23118 = getelementptr inbounds %struct.Reg, %struct.Reg* %23117, i32 0, i32 0
  %RBP.i151 = bitcast %union.anon* %23118 to i64*
  %23119 = load i64, i64* %RBP.i151
  %23120 = sub i64 %23119, 4
  %23121 = load i64, i64* %PC.i150
  %23122 = add i64 %23121, 7
  store i64 %23122, i64* %PC.i150
  %23123 = inttoptr i64 %23120 to i32*
  store i32 0, i32* %23123
  store %struct.Memory* %loadMem_4afc5b, %struct.Memory** %MEMORY
  br label %block_.L_4afc62

block_.L_4afc62:                                  ; preds = %block_.L_4afd6f, %block_.L_4afc5b
  %loadMem_4afc62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23125 = getelementptr inbounds %struct.GPR, %struct.GPR* %23124, i32 0, i32 33
  %23126 = getelementptr inbounds %struct.Reg, %struct.Reg* %23125, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %23126 to i64*
  %23127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23128 = getelementptr inbounds %struct.GPR, %struct.GPR* %23127, i32 0, i32 1
  %23129 = getelementptr inbounds %struct.Reg, %struct.Reg* %23128, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %23129 to i64*
  %23130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23131 = getelementptr inbounds %struct.GPR, %struct.GPR* %23130, i32 0, i32 15
  %23132 = getelementptr inbounds %struct.Reg, %struct.Reg* %23131, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %23132 to i64*
  %23133 = load i64, i64* %RBP.i149
  %23134 = sub i64 %23133, 4
  %23135 = load i64, i64* %PC.i147
  %23136 = add i64 %23135, 3
  store i64 %23136, i64* %PC.i147
  %23137 = inttoptr i64 %23134 to i32*
  %23138 = load i32, i32* %23137
  %23139 = zext i32 %23138 to i64
  store i64 %23139, i64* %RAX.i148, align 8
  store %struct.Memory* %loadMem_4afc62, %struct.Memory** %MEMORY
  %loadMem_4afc65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23141 = getelementptr inbounds %struct.GPR, %struct.GPR* %23140, i32 0, i32 33
  %23142 = getelementptr inbounds %struct.Reg, %struct.Reg* %23141, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %23142 to i64*
  %23143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23144 = getelementptr inbounds %struct.GPR, %struct.GPR* %23143, i32 0, i32 1
  %23145 = getelementptr inbounds %struct.Reg, %struct.Reg* %23144, i32 0, i32 0
  %EAX.i146 = bitcast %union.anon* %23145 to i32*
  %23146 = load i32, i32* %EAX.i146
  %23147 = zext i32 %23146 to i64
  %23148 = load i64, i64* %PC.i145
  %23149 = add i64 %23148, 7
  store i64 %23149, i64* %PC.i145
  %23150 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %23151 = sub i32 %23146, %23150
  %23152 = icmp ult i32 %23146, %23150
  %23153 = zext i1 %23152 to i8
  %23154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23153, i8* %23154, align 1
  %23155 = and i32 %23151, 255
  %23156 = call i32 @llvm.ctpop.i32(i32 %23155)
  %23157 = trunc i32 %23156 to i8
  %23158 = and i8 %23157, 1
  %23159 = xor i8 %23158, 1
  %23160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23159, i8* %23160, align 1
  %23161 = xor i32 %23150, %23146
  %23162 = xor i32 %23161, %23151
  %23163 = lshr i32 %23162, 4
  %23164 = trunc i32 %23163 to i8
  %23165 = and i8 %23164, 1
  %23166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23165, i8* %23166, align 1
  %23167 = icmp eq i32 %23151, 0
  %23168 = zext i1 %23167 to i8
  %23169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23168, i8* %23169, align 1
  %23170 = lshr i32 %23151, 31
  %23171 = trunc i32 %23170 to i8
  %23172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23171, i8* %23172, align 1
  %23173 = lshr i32 %23146, 31
  %23174 = lshr i32 %23150, 31
  %23175 = xor i32 %23174, %23173
  %23176 = xor i32 %23170, %23173
  %23177 = add i32 %23176, %23175
  %23178 = icmp eq i32 %23177, 2
  %23179 = zext i1 %23178 to i8
  %23180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23179, i8* %23180, align 1
  store %struct.Memory* %loadMem_4afc65, %struct.Memory** %MEMORY
  %loadMem_4afc6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %23181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23182 = getelementptr inbounds %struct.GPR, %struct.GPR* %23181, i32 0, i32 33
  %23183 = getelementptr inbounds %struct.Reg, %struct.Reg* %23182, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %23183 to i64*
  %23184 = load i64, i64* %PC.i144
  %23185 = add i64 %23184, 273
  %23186 = load i64, i64* %PC.i144
  %23187 = add i64 %23186, 6
  %23188 = load i64, i64* %PC.i144
  %23189 = add i64 %23188, 6
  store i64 %23189, i64* %PC.i144
  %23190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23191 = load i8, i8* %23190, align 1
  %23192 = icmp ne i8 %23191, 0
  %23193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %23194 = load i8, i8* %23193, align 1
  %23195 = icmp ne i8 %23194, 0
  %23196 = xor i1 %23192, %23195
  %23197 = xor i1 %23196, true
  %23198 = zext i1 %23197 to i8
  store i8 %23198, i8* %BRANCH_TAKEN, align 1
  %23199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23200 = select i1 %23196, i64 %23187, i64 %23185
  store i64 %23200, i64* %23199, align 8
  store %struct.Memory* %loadMem_4afc6c, %struct.Memory** %MEMORY
  %loadBr_4afc6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afc6c = icmp eq i8 %loadBr_4afc6c, 1
  br i1 %cmpBr_4afc6c, label %block_.L_4afd7d, label %block_4afc72

block_4afc72:                                     ; preds = %block_.L_4afc62
  %loadMem_4afc72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23202 = getelementptr inbounds %struct.GPR, %struct.GPR* %23201, i32 0, i32 33
  %23203 = getelementptr inbounds %struct.Reg, %struct.Reg* %23202, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %23203 to i64*
  %23204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23205 = getelementptr inbounds %struct.GPR, %struct.GPR* %23204, i32 0, i32 15
  %23206 = getelementptr inbounds %struct.Reg, %struct.Reg* %23205, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %23206 to i64*
  %23207 = load i64, i64* %RBP.i143
  %23208 = sub i64 %23207, 8
  %23209 = load i64, i64* %PC.i142
  %23210 = add i64 %23209, 7
  store i64 %23210, i64* %PC.i142
  %23211 = inttoptr i64 %23208 to i32*
  store i32 0, i32* %23211
  store %struct.Memory* %loadMem_4afc72, %struct.Memory** %MEMORY
  br label %block_.L_4afc79

block_.L_4afc79:                                  ; preds = %block_.L_4afd5c, %block_4afc72
  %loadMem_4afc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23213 = getelementptr inbounds %struct.GPR, %struct.GPR* %23212, i32 0, i32 33
  %23214 = getelementptr inbounds %struct.Reg, %struct.Reg* %23213, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %23214 to i64*
  %23215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23216 = getelementptr inbounds %struct.GPR, %struct.GPR* %23215, i32 0, i32 1
  %23217 = getelementptr inbounds %struct.Reg, %struct.Reg* %23216, i32 0, i32 0
  %RAX.i140 = bitcast %union.anon* %23217 to i64*
  %23218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23219 = getelementptr inbounds %struct.GPR, %struct.GPR* %23218, i32 0, i32 15
  %23220 = getelementptr inbounds %struct.Reg, %struct.Reg* %23219, i32 0, i32 0
  %RBP.i141 = bitcast %union.anon* %23220 to i64*
  %23221 = load i64, i64* %RBP.i141
  %23222 = sub i64 %23221, 8
  %23223 = load i64, i64* %PC.i139
  %23224 = add i64 %23223, 3
  store i64 %23224, i64* %PC.i139
  %23225 = inttoptr i64 %23222 to i32*
  %23226 = load i32, i32* %23225
  %23227 = zext i32 %23226 to i64
  store i64 %23227, i64* %RAX.i140, align 8
  store %struct.Memory* %loadMem_4afc79, %struct.Memory** %MEMORY
  %loadMem_4afc7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %23228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23229 = getelementptr inbounds %struct.GPR, %struct.GPR* %23228, i32 0, i32 33
  %23230 = getelementptr inbounds %struct.Reg, %struct.Reg* %23229, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %23230 to i64*
  %23231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23232 = getelementptr inbounds %struct.GPR, %struct.GPR* %23231, i32 0, i32 1
  %23233 = getelementptr inbounds %struct.Reg, %struct.Reg* %23232, i32 0, i32 0
  %EAX.i138 = bitcast %union.anon* %23233 to i32*
  %23234 = load i32, i32* %EAX.i138
  %23235 = zext i32 %23234 to i64
  %23236 = load i64, i64* %PC.i137
  %23237 = add i64 %23236, 7
  store i64 %23237, i64* %PC.i137
  %23238 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %23239 = sub i32 %23234, %23238
  %23240 = icmp ult i32 %23234, %23238
  %23241 = zext i1 %23240 to i8
  %23242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23241, i8* %23242, align 1
  %23243 = and i32 %23239, 255
  %23244 = call i32 @llvm.ctpop.i32(i32 %23243)
  %23245 = trunc i32 %23244 to i8
  %23246 = and i8 %23245, 1
  %23247 = xor i8 %23246, 1
  %23248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23247, i8* %23248, align 1
  %23249 = xor i32 %23238, %23234
  %23250 = xor i32 %23249, %23239
  %23251 = lshr i32 %23250, 4
  %23252 = trunc i32 %23251 to i8
  %23253 = and i8 %23252, 1
  %23254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23253, i8* %23254, align 1
  %23255 = icmp eq i32 %23239, 0
  %23256 = zext i1 %23255 to i8
  %23257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23256, i8* %23257, align 1
  %23258 = lshr i32 %23239, 31
  %23259 = trunc i32 %23258 to i8
  %23260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23259, i8* %23260, align 1
  %23261 = lshr i32 %23234, 31
  %23262 = lshr i32 %23238, 31
  %23263 = xor i32 %23262, %23261
  %23264 = xor i32 %23258, %23261
  %23265 = add i32 %23264, %23263
  %23266 = icmp eq i32 %23265, 2
  %23267 = zext i1 %23266 to i8
  %23268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23267, i8* %23268, align 1
  store %struct.Memory* %loadMem_4afc7c, %struct.Memory** %MEMORY
  %loadMem_4afc83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23270 = getelementptr inbounds %struct.GPR, %struct.GPR* %23269, i32 0, i32 33
  %23271 = getelementptr inbounds %struct.Reg, %struct.Reg* %23270, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %23271 to i64*
  %23272 = load i64, i64* %PC.i136
  %23273 = add i64 %23272, 231
  %23274 = load i64, i64* %PC.i136
  %23275 = add i64 %23274, 6
  %23276 = load i64, i64* %PC.i136
  %23277 = add i64 %23276, 6
  store i64 %23277, i64* %PC.i136
  %23278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23279 = load i8, i8* %23278, align 1
  %23280 = icmp ne i8 %23279, 0
  %23281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %23282 = load i8, i8* %23281, align 1
  %23283 = icmp ne i8 %23282, 0
  %23284 = xor i1 %23280, %23283
  %23285 = xor i1 %23284, true
  %23286 = zext i1 %23285 to i8
  store i8 %23286, i8* %BRANCH_TAKEN, align 1
  %23287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23288 = select i1 %23284, i64 %23275, i64 %23273
  store i64 %23288, i64* %23287, align 8
  store %struct.Memory* %loadMem_4afc83, %struct.Memory** %MEMORY
  %loadBr_4afc83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afc83 = icmp eq i8 %loadBr_4afc83, 1
  br i1 %cmpBr_4afc83, label %block_.L_4afd6a, label %block_4afc89

block_4afc89:                                     ; preds = %block_.L_4afc79
  %loadMem_4afc89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23290 = getelementptr inbounds %struct.GPR, %struct.GPR* %23289, i32 0, i32 33
  %23291 = getelementptr inbounds %struct.Reg, %struct.Reg* %23290, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %23291 to i64*
  %23292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23293 = getelementptr inbounds %struct.GPR, %struct.GPR* %23292, i32 0, i32 15
  %23294 = getelementptr inbounds %struct.Reg, %struct.Reg* %23293, i32 0, i32 0
  %RBP.i135 = bitcast %union.anon* %23294 to i64*
  %23295 = load i64, i64* %RBP.i135
  %23296 = sub i64 %23295, 40
  %23297 = load i64, i64* %PC.i134
  %23298 = add i64 %23297, 7
  store i64 %23298, i64* %PC.i134
  %23299 = inttoptr i64 %23296 to i32*
  store i32 0, i32* %23299
  store %struct.Memory* %loadMem_4afc89, %struct.Memory** %MEMORY
  br label %block_.L_4afc90

block_.L_4afc90:                                  ; preds = %block_.L_4afcc3, %block_4afc89
  %loadMem_4afc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23301 = getelementptr inbounds %struct.GPR, %struct.GPR* %23300, i32 0, i32 33
  %23302 = getelementptr inbounds %struct.Reg, %struct.Reg* %23301, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %23302 to i64*
  %23303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23304 = getelementptr inbounds %struct.GPR, %struct.GPR* %23303, i32 0, i32 15
  %23305 = getelementptr inbounds %struct.Reg, %struct.Reg* %23304, i32 0, i32 0
  %RBP.i133 = bitcast %union.anon* %23305 to i64*
  %23306 = load i64, i64* %RBP.i133
  %23307 = sub i64 %23306, 40
  %23308 = load i64, i64* %PC.i132
  %23309 = add i64 %23308, 4
  store i64 %23309, i64* %PC.i132
  %23310 = inttoptr i64 %23307 to i32*
  %23311 = load i32, i32* %23310
  %23312 = sub i32 %23311, 3
  %23313 = icmp ult i32 %23311, 3
  %23314 = zext i1 %23313 to i8
  %23315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23314, i8* %23315, align 1
  %23316 = and i32 %23312, 255
  %23317 = call i32 @llvm.ctpop.i32(i32 %23316)
  %23318 = trunc i32 %23317 to i8
  %23319 = and i8 %23318, 1
  %23320 = xor i8 %23319, 1
  %23321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23320, i8* %23321, align 1
  %23322 = xor i32 %23311, 3
  %23323 = xor i32 %23322, %23312
  %23324 = lshr i32 %23323, 4
  %23325 = trunc i32 %23324 to i8
  %23326 = and i8 %23325, 1
  %23327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23326, i8* %23327, align 1
  %23328 = icmp eq i32 %23312, 0
  %23329 = zext i1 %23328 to i8
  %23330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23329, i8* %23330, align 1
  %23331 = lshr i32 %23312, 31
  %23332 = trunc i32 %23331 to i8
  %23333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23332, i8* %23333, align 1
  %23334 = lshr i32 %23311, 31
  %23335 = xor i32 %23331, %23334
  %23336 = add i32 %23335, %23334
  %23337 = icmp eq i32 %23336, 2
  %23338 = zext i1 %23337 to i8
  %23339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23338, i8* %23339, align 1
  store %struct.Memory* %loadMem_4afc90, %struct.Memory** %MEMORY
  %loadMem_4afc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23341 = getelementptr inbounds %struct.GPR, %struct.GPR* %23340, i32 0, i32 33
  %23342 = getelementptr inbounds %struct.Reg, %struct.Reg* %23341, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %23342 to i64*
  %23343 = load i64, i64* %PC.i131
  %23344 = add i64 %23343, 195
  %23345 = load i64, i64* %PC.i131
  %23346 = add i64 %23345, 6
  %23347 = load i64, i64* %PC.i131
  %23348 = add i64 %23347, 6
  store i64 %23348, i64* %PC.i131
  %23349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23350 = load i8, i8* %23349, align 1
  %23351 = icmp ne i8 %23350, 0
  %23352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %23353 = load i8, i8* %23352, align 1
  %23354 = icmp ne i8 %23353, 0
  %23355 = xor i1 %23351, %23354
  %23356 = xor i1 %23355, true
  %23357 = zext i1 %23356 to i8
  store i8 %23357, i8* %BRANCH_TAKEN, align 1
  %23358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23359 = select i1 %23355, i64 %23346, i64 %23344
  store i64 %23359, i64* %23358, align 8
  store %struct.Memory* %loadMem_4afc94, %struct.Memory** %MEMORY
  %loadBr_4afc94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afc94 = icmp eq i8 %loadBr_4afc94, 1
  br i1 %cmpBr_4afc94, label %block_.L_4afd57, label %block_4afc9a

block_4afc9a:                                     ; preds = %block_.L_4afc90
  %loadMem_4afc9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23361 = getelementptr inbounds %struct.GPR, %struct.GPR* %23360, i32 0, i32 33
  %23362 = getelementptr inbounds %struct.Reg, %struct.Reg* %23361, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %23362 to i64*
  %23363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23364 = getelementptr inbounds %struct.GPR, %struct.GPR* %23363, i32 0, i32 15
  %23365 = getelementptr inbounds %struct.Reg, %struct.Reg* %23364, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %23365 to i64*
  %23366 = load i64, i64* %RBP.i130
  %23367 = sub i64 %23366, 40
  %23368 = load i64, i64* %PC.i129
  %23369 = add i64 %23368, 4
  store i64 %23369, i64* %PC.i129
  %23370 = inttoptr i64 %23367 to i32*
  %23371 = load i32, i32* %23370
  %23372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %23372, align 1
  %23373 = and i32 %23371, 255
  %23374 = call i32 @llvm.ctpop.i32(i32 %23373)
  %23375 = trunc i32 %23374 to i8
  %23376 = and i8 %23375, 1
  %23377 = xor i8 %23376, 1
  %23378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23377, i8* %23378, align 1
  %23379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23379, align 1
  %23380 = icmp eq i32 %23371, 0
  %23381 = zext i1 %23380 to i8
  %23382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23381, i8* %23382, align 1
  %23383 = lshr i32 %23371, 31
  %23384 = trunc i32 %23383 to i8
  %23385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23384, i8* %23385, align 1
  %23386 = lshr i32 %23371, 31
  %23387 = xor i32 %23383, %23386
  %23388 = add i32 %23387, %23386
  %23389 = icmp eq i32 %23388, 2
  %23390 = zext i1 %23389 to i8
  %23391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23390, i8* %23391, align 1
  store %struct.Memory* %loadMem_4afc9a, %struct.Memory** %MEMORY
  %loadMem_4afc9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23393 = getelementptr inbounds %struct.GPR, %struct.GPR* %23392, i32 0, i32 33
  %23394 = getelementptr inbounds %struct.Reg, %struct.Reg* %23393, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %23394 to i64*
  %23395 = load i64, i64* %PC.i128
  %23396 = add i64 %23395, 24
  %23397 = load i64, i64* %PC.i128
  %23398 = add i64 %23397, 6
  %23399 = load i64, i64* %PC.i128
  %23400 = add i64 %23399, 6
  store i64 %23400, i64* %PC.i128
  %23401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23402 = load i8, i8* %23401, align 1
  %23403 = icmp eq i8 %23402, 0
  %23404 = zext i1 %23403 to i8
  store i8 %23404, i8* %BRANCH_TAKEN, align 1
  %23405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23406 = select i1 %23403, i64 %23396, i64 %23398
  store i64 %23406, i64* %23405, align 8
  store %struct.Memory* %loadMem_4afc9e, %struct.Memory** %MEMORY
  %loadBr_4afc9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4afc9e = icmp eq i8 %loadBr_4afc9e, 1
  br i1 %cmpBr_4afc9e, label %block_.L_4afcb6, label %block_4afca4

block_4afca4:                                     ; preds = %block_4afc9a
  %loadMem_4afca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23408 = getelementptr inbounds %struct.GPR, %struct.GPR* %23407, i32 0, i32 33
  %23409 = getelementptr inbounds %struct.Reg, %struct.Reg* %23408, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %23409 to i64*
  %23410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23411 = getelementptr inbounds %struct.GPR, %struct.GPR* %23410, i32 0, i32 1
  %23412 = getelementptr inbounds %struct.Reg, %struct.Reg* %23411, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %23412 to i64*
  %23413 = load i64, i64* %PC.i126
  %23414 = add i64 %23413, 7
  store i64 %23414, i64* %PC.i126
  %23415 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %23416 = zext i32 %23415 to i64
  store i64 %23416, i64* %RAX.i127, align 8
  store %struct.Memory* %loadMem_4afca4, %struct.Memory** %MEMORY
  %loadMem_4afcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %23417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23418 = getelementptr inbounds %struct.GPR, %struct.GPR* %23417, i32 0, i32 33
  %23419 = getelementptr inbounds %struct.Reg, %struct.Reg* %23418, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %23419 to i64*
  %23420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23421 = getelementptr inbounds %struct.GPR, %struct.GPR* %23420, i32 0, i32 1
  %23422 = getelementptr inbounds %struct.Reg, %struct.Reg* %23421, i32 0, i32 0
  %EAX.i124 = bitcast %union.anon* %23422 to i32*
  %23423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23424 = getelementptr inbounds %struct.GPR, %struct.GPR* %23423, i32 0, i32 15
  %23425 = getelementptr inbounds %struct.Reg, %struct.Reg* %23424, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %23425 to i64*
  %23426 = load i64, i64* %RBP.i125
  %23427 = sub i64 %23426, 35472
  %23428 = load i32, i32* %EAX.i124
  %23429 = zext i32 %23428 to i64
  %23430 = load i64, i64* %PC.i123
  %23431 = add i64 %23430, 6
  store i64 %23431, i64* %PC.i123
  %23432 = inttoptr i64 %23427 to i32*
  store i32 %23428, i32* %23432
  store %struct.Memory* %loadMem_4afcab, %struct.Memory** %MEMORY
  %loadMem_4afcb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23434 = getelementptr inbounds %struct.GPR, %struct.GPR* %23433, i32 0, i32 33
  %23435 = getelementptr inbounds %struct.Reg, %struct.Reg* %23434, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %23435 to i64*
  %23436 = load i64, i64* %PC.i122
  %23437 = add i64 %23436, 18
  %23438 = load i64, i64* %PC.i122
  %23439 = add i64 %23438, 5
  store i64 %23439, i64* %PC.i122
  %23440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23437, i64* %23440, align 8
  store %struct.Memory* %loadMem_4afcb1, %struct.Memory** %MEMORY
  br label %block_.L_4afcc3

block_.L_4afcb6:                                  ; preds = %block_4afc9a
  %loadMem_4afcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23442 = getelementptr inbounds %struct.GPR, %struct.GPR* %23441, i32 0, i32 33
  %23443 = getelementptr inbounds %struct.Reg, %struct.Reg* %23442, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %23443 to i64*
  %23444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23445 = getelementptr inbounds %struct.GPR, %struct.GPR* %23444, i32 0, i32 1
  %23446 = getelementptr inbounds %struct.Reg, %struct.Reg* %23445, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %23446 to i64*
  %23447 = load i64, i64* %PC.i120
  %23448 = add i64 %23447, 7
  store i64 %23448, i64* %PC.i120
  %23449 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %23450 = zext i32 %23449 to i64
  store i64 %23450, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_4afcb6, %struct.Memory** %MEMORY
  %loadMem_4afcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %23451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23452 = getelementptr inbounds %struct.GPR, %struct.GPR* %23451, i32 0, i32 33
  %23453 = getelementptr inbounds %struct.Reg, %struct.Reg* %23452, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %23453 to i64*
  %23454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23455 = getelementptr inbounds %struct.GPR, %struct.GPR* %23454, i32 0, i32 1
  %23456 = getelementptr inbounds %struct.Reg, %struct.Reg* %23455, i32 0, i32 0
  %EAX.i118 = bitcast %union.anon* %23456 to i32*
  %23457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23458 = getelementptr inbounds %struct.GPR, %struct.GPR* %23457, i32 0, i32 15
  %23459 = getelementptr inbounds %struct.Reg, %struct.Reg* %23458, i32 0, i32 0
  %RBP.i119 = bitcast %union.anon* %23459 to i64*
  %23460 = load i64, i64* %RBP.i119
  %23461 = sub i64 %23460, 35472
  %23462 = load i32, i32* %EAX.i118
  %23463 = zext i32 %23462 to i64
  %23464 = load i64, i64* %PC.i117
  %23465 = add i64 %23464, 6
  store i64 %23465, i64* %PC.i117
  %23466 = inttoptr i64 %23461 to i32*
  store i32 %23462, i32* %23466
  store %struct.Memory* %loadMem_4afcbd, %struct.Memory** %MEMORY
  br label %block_.L_4afcc3

block_.L_4afcc3:                                  ; preds = %block_.L_4afcb6, %block_4afca4
  %loadMem_4afcc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23468 = getelementptr inbounds %struct.GPR, %struct.GPR* %23467, i32 0, i32 33
  %23469 = getelementptr inbounds %struct.Reg, %struct.Reg* %23468, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %23469 to i64*
  %23470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23471 = getelementptr inbounds %struct.GPR, %struct.GPR* %23470, i32 0, i32 1
  %23472 = getelementptr inbounds %struct.Reg, %struct.Reg* %23471, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %23472 to i64*
  %23473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23474 = getelementptr inbounds %struct.GPR, %struct.GPR* %23473, i32 0, i32 15
  %23475 = getelementptr inbounds %struct.Reg, %struct.Reg* %23474, i32 0, i32 0
  %RBP.i116 = bitcast %union.anon* %23475 to i64*
  %23476 = load i64, i64* %RBP.i116
  %23477 = sub i64 %23476, 35472
  %23478 = load i64, i64* %PC.i114
  %23479 = add i64 %23478, 6
  store i64 %23479, i64* %PC.i114
  %23480 = inttoptr i64 %23477 to i32*
  %23481 = load i32, i32* %23480
  %23482 = zext i32 %23481 to i64
  store i64 %23482, i64* %RAX.i115, align 8
  store %struct.Memory* %loadMem_4afcc3, %struct.Memory** %MEMORY
  %loadMem_4afcc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23484 = getelementptr inbounds %struct.GPR, %struct.GPR* %23483, i32 0, i32 33
  %23485 = getelementptr inbounds %struct.Reg, %struct.Reg* %23484, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %23485 to i64*
  %23486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23487 = getelementptr inbounds %struct.GPR, %struct.GPR* %23486, i32 0, i32 1
  %23488 = getelementptr inbounds %struct.Reg, %struct.Reg* %23487, i32 0, i32 0
  %EAX.i112 = bitcast %union.anon* %23488 to i32*
  %23489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23490 = getelementptr inbounds %struct.GPR, %struct.GPR* %23489, i32 0, i32 15
  %23491 = getelementptr inbounds %struct.Reg, %struct.Reg* %23490, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %23491 to i64*
  %23492 = load i64, i64* %RBP.i113
  %23493 = sub i64 %23492, 772
  %23494 = load i32, i32* %EAX.i112
  %23495 = zext i32 %23494 to i64
  %23496 = load i64, i64* %PC.i111
  %23497 = add i64 %23496, 6
  store i64 %23497, i64* %PC.i111
  %23498 = inttoptr i64 %23493 to i32*
  store i32 %23494, i32* %23498
  store %struct.Memory* %loadMem_4afcc9, %struct.Memory** %MEMORY
  %loadMem_4afccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %23499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23500 = getelementptr inbounds %struct.GPR, %struct.GPR* %23499, i32 0, i32 33
  %23501 = getelementptr inbounds %struct.Reg, %struct.Reg* %23500, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %23501 to i64*
  %23502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23503 = getelementptr inbounds %struct.GPR, %struct.GPR* %23502, i32 0, i32 5
  %23504 = getelementptr inbounds %struct.Reg, %struct.Reg* %23503, i32 0, i32 0
  %RCX.i110 = bitcast %union.anon* %23504 to i64*
  %23505 = load i64, i64* %PC.i109
  %23506 = add i64 %23505, 8
  store i64 %23506, i64* %PC.i109
  %23507 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %23507, i64* %RCX.i110, align 8
  store %struct.Memory* %loadMem_4afccf, %struct.Memory** %MEMORY
  %loadMem_4afcd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23509 = getelementptr inbounds %struct.GPR, %struct.GPR* %23508, i32 0, i32 33
  %23510 = getelementptr inbounds %struct.Reg, %struct.Reg* %23509, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %23510 to i64*
  %23511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23512 = getelementptr inbounds %struct.GPR, %struct.GPR* %23511, i32 0, i32 5
  %23513 = getelementptr inbounds %struct.Reg, %struct.Reg* %23512, i32 0, i32 0
  %RCX.i108 = bitcast %union.anon* %23513 to i64*
  %23514 = load i64, i64* %RCX.i108
  %23515 = load i64, i64* %PC.i107
  %23516 = add i64 %23515, 3
  store i64 %23516, i64* %PC.i107
  %23517 = inttoptr i64 %23514 to i64*
  %23518 = load i64, i64* %23517
  store i64 %23518, i64* %RCX.i108, align 8
  store %struct.Memory* %loadMem_4afcd7, %struct.Memory** %MEMORY
  %loadMem_4afcda = load %struct.Memory*, %struct.Memory** %MEMORY
  %23519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23520 = getelementptr inbounds %struct.GPR, %struct.GPR* %23519, i32 0, i32 33
  %23521 = getelementptr inbounds %struct.Reg, %struct.Reg* %23520, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %23521 to i64*
  %23522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23523 = getelementptr inbounds %struct.GPR, %struct.GPR* %23522, i32 0, i32 7
  %23524 = getelementptr inbounds %struct.Reg, %struct.Reg* %23523, i32 0, i32 0
  %RDX.i105 = bitcast %union.anon* %23524 to i64*
  %23525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23526 = getelementptr inbounds %struct.GPR, %struct.GPR* %23525, i32 0, i32 15
  %23527 = getelementptr inbounds %struct.Reg, %struct.Reg* %23526, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %23527 to i64*
  %23528 = load i64, i64* %RBP.i106
  %23529 = sub i64 %23528, 4
  %23530 = load i64, i64* %PC.i104
  %23531 = add i64 %23530, 4
  store i64 %23531, i64* %PC.i104
  %23532 = inttoptr i64 %23529 to i32*
  %23533 = load i32, i32* %23532
  %23534 = sext i32 %23533 to i64
  store i64 %23534, i64* %RDX.i105, align 8
  store %struct.Memory* %loadMem_4afcda, %struct.Memory** %MEMORY
  %loadMem_4afcde = load %struct.Memory*, %struct.Memory** %MEMORY
  %23535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23536 = getelementptr inbounds %struct.GPR, %struct.GPR* %23535, i32 0, i32 33
  %23537 = getelementptr inbounds %struct.Reg, %struct.Reg* %23536, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %23537 to i64*
  %23538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23539 = getelementptr inbounds %struct.GPR, %struct.GPR* %23538, i32 0, i32 5
  %23540 = getelementptr inbounds %struct.Reg, %struct.Reg* %23539, i32 0, i32 0
  %RCX.i102 = bitcast %union.anon* %23540 to i64*
  %23541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23542 = getelementptr inbounds %struct.GPR, %struct.GPR* %23541, i32 0, i32 7
  %23543 = getelementptr inbounds %struct.Reg, %struct.Reg* %23542, i32 0, i32 0
  %RDX.i103 = bitcast %union.anon* %23543 to i64*
  %23544 = load i64, i64* %RCX.i102
  %23545 = load i64, i64* %RDX.i103
  %23546 = mul i64 %23545, 8
  %23547 = add i64 %23546, %23544
  %23548 = load i64, i64* %PC.i101
  %23549 = add i64 %23548, 4
  store i64 %23549, i64* %PC.i101
  %23550 = inttoptr i64 %23547 to i64*
  %23551 = load i64, i64* %23550
  store i64 %23551, i64* %RCX.i102, align 8
  store %struct.Memory* %loadMem_4afcde, %struct.Memory** %MEMORY
  %loadMem_4afce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23553 = getelementptr inbounds %struct.GPR, %struct.GPR* %23552, i32 0, i32 33
  %23554 = getelementptr inbounds %struct.Reg, %struct.Reg* %23553, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %23554 to i64*
  %23555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23556 = getelementptr inbounds %struct.GPR, %struct.GPR* %23555, i32 0, i32 7
  %23557 = getelementptr inbounds %struct.Reg, %struct.Reg* %23556, i32 0, i32 0
  %RDX.i99 = bitcast %union.anon* %23557 to i64*
  %23558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23559 = getelementptr inbounds %struct.GPR, %struct.GPR* %23558, i32 0, i32 15
  %23560 = getelementptr inbounds %struct.Reg, %struct.Reg* %23559, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %23560 to i64*
  %23561 = load i64, i64* %RBP.i100
  %23562 = sub i64 %23561, 40
  %23563 = load i64, i64* %PC.i98
  %23564 = add i64 %23563, 4
  store i64 %23564, i64* %PC.i98
  %23565 = inttoptr i64 %23562 to i32*
  %23566 = load i32, i32* %23565
  %23567 = sext i32 %23566 to i64
  store i64 %23567, i64* %RDX.i99, align 8
  store %struct.Memory* %loadMem_4afce2, %struct.Memory** %MEMORY
  %loadMem_4afce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23569 = getelementptr inbounds %struct.GPR, %struct.GPR* %23568, i32 0, i32 33
  %23570 = getelementptr inbounds %struct.Reg, %struct.Reg* %23569, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %23570 to i64*
  %23571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23572 = getelementptr inbounds %struct.GPR, %struct.GPR* %23571, i32 0, i32 1
  %23573 = getelementptr inbounds %struct.Reg, %struct.Reg* %23572, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %23573 to i64*
  %23574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23575 = getelementptr inbounds %struct.GPR, %struct.GPR* %23574, i32 0, i32 5
  %23576 = getelementptr inbounds %struct.Reg, %struct.Reg* %23575, i32 0, i32 0
  %RCX.i96 = bitcast %union.anon* %23576 to i64*
  %23577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23578 = getelementptr inbounds %struct.GPR, %struct.GPR* %23577, i32 0, i32 7
  %23579 = getelementptr inbounds %struct.Reg, %struct.Reg* %23578, i32 0, i32 0
  %RDX.i97 = bitcast %union.anon* %23579 to i64*
  %23580 = load i64, i64* %RCX.i96
  %23581 = load i64, i64* %RDX.i97
  %23582 = mul i64 %23581, 4
  %23583 = add i64 %23582, %23580
  %23584 = load i64, i64* %PC.i94
  %23585 = add i64 %23584, 3
  store i64 %23585, i64* %PC.i94
  %23586 = inttoptr i64 %23583 to i32*
  %23587 = load i32, i32* %23586
  %23588 = zext i32 %23587 to i64
  store i64 %23588, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_4afce6, %struct.Memory** %MEMORY
  %loadMem_4afce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23590 = getelementptr inbounds %struct.GPR, %struct.GPR* %23589, i32 0, i32 33
  %23591 = getelementptr inbounds %struct.Reg, %struct.Reg* %23590, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %23591 to i64*
  %23592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23593 = getelementptr inbounds %struct.GPR, %struct.GPR* %23592, i32 0, i32 5
  %23594 = getelementptr inbounds %struct.Reg, %struct.Reg* %23593, i32 0, i32 0
  %RCX.i93 = bitcast %union.anon* %23594 to i64*
  %23595 = load i64, i64* %PC.i92
  %23596 = add i64 %23595, 8
  store i64 %23596, i64* %PC.i92
  %23597 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %23597, i64* %RCX.i93, align 8
  store %struct.Memory* %loadMem_4afce9, %struct.Memory** %MEMORY
  %loadMem_4afcf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23599 = getelementptr inbounds %struct.GPR, %struct.GPR* %23598, i32 0, i32 33
  %23600 = getelementptr inbounds %struct.Reg, %struct.Reg* %23599, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %23600 to i64*
  %23601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23602 = getelementptr inbounds %struct.GPR, %struct.GPR* %23601, i32 0, i32 5
  %23603 = getelementptr inbounds %struct.Reg, %struct.Reg* %23602, i32 0, i32 0
  %RCX.i91 = bitcast %union.anon* %23603 to i64*
  %23604 = load i64, i64* %RCX.i91
  %23605 = load i64, i64* %PC.i90
  %23606 = add i64 %23605, 3
  store i64 %23606, i64* %PC.i90
  %23607 = inttoptr i64 %23604 to i64*
  %23608 = load i64, i64* %23607
  store i64 %23608, i64* %RCX.i91, align 8
  store %struct.Memory* %loadMem_4afcf1, %struct.Memory** %MEMORY
  %loadMem_4afcf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23610 = getelementptr inbounds %struct.GPR, %struct.GPR* %23609, i32 0, i32 33
  %23611 = getelementptr inbounds %struct.Reg, %struct.Reg* %23610, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %23611 to i64*
  %23612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23613 = getelementptr inbounds %struct.GPR, %struct.GPR* %23612, i32 0, i32 7
  %23614 = getelementptr inbounds %struct.Reg, %struct.Reg* %23613, i32 0, i32 0
  %RDX.i88 = bitcast %union.anon* %23614 to i64*
  %23615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23616 = getelementptr inbounds %struct.GPR, %struct.GPR* %23615, i32 0, i32 15
  %23617 = getelementptr inbounds %struct.Reg, %struct.Reg* %23616, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %23617 to i64*
  %23618 = load i64, i64* %RBP.i89
  %23619 = sub i64 %23618, 4
  %23620 = load i64, i64* %PC.i87
  %23621 = add i64 %23620, 4
  store i64 %23621, i64* %PC.i87
  %23622 = inttoptr i64 %23619 to i32*
  %23623 = load i32, i32* %23622
  %23624 = sext i32 %23623 to i64
  store i64 %23624, i64* %RDX.i88, align 8
  store %struct.Memory* %loadMem_4afcf4, %struct.Memory** %MEMORY
  %loadMem_4afcf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23626 = getelementptr inbounds %struct.GPR, %struct.GPR* %23625, i32 0, i32 33
  %23627 = getelementptr inbounds %struct.Reg, %struct.Reg* %23626, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %23627 to i64*
  %23628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23629 = getelementptr inbounds %struct.GPR, %struct.GPR* %23628, i32 0, i32 5
  %23630 = getelementptr inbounds %struct.Reg, %struct.Reg* %23629, i32 0, i32 0
  %RCX.i85 = bitcast %union.anon* %23630 to i64*
  %23631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23632 = getelementptr inbounds %struct.GPR, %struct.GPR* %23631, i32 0, i32 7
  %23633 = getelementptr inbounds %struct.Reg, %struct.Reg* %23632, i32 0, i32 0
  %RDX.i86 = bitcast %union.anon* %23633 to i64*
  %23634 = load i64, i64* %RCX.i85
  %23635 = load i64, i64* %RDX.i86
  %23636 = mul i64 %23635, 8
  %23637 = add i64 %23636, %23634
  %23638 = load i64, i64* %PC.i84
  %23639 = add i64 %23638, 4
  store i64 %23639, i64* %PC.i84
  %23640 = inttoptr i64 %23637 to i64*
  %23641 = load i64, i64* %23640
  store i64 %23641, i64* %RCX.i85, align 8
  store %struct.Memory* %loadMem_4afcf8, %struct.Memory** %MEMORY
  %loadMem_4afcfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %23642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23643 = getelementptr inbounds %struct.GPR, %struct.GPR* %23642, i32 0, i32 33
  %23644 = getelementptr inbounds %struct.Reg, %struct.Reg* %23643, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %23644 to i64*
  %23645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23646 = getelementptr inbounds %struct.GPR, %struct.GPR* %23645, i32 0, i32 7
  %23647 = getelementptr inbounds %struct.Reg, %struct.Reg* %23646, i32 0, i32 0
  %RDX.i82 = bitcast %union.anon* %23647 to i64*
  %23648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23649 = getelementptr inbounds %struct.GPR, %struct.GPR* %23648, i32 0, i32 15
  %23650 = getelementptr inbounds %struct.Reg, %struct.Reg* %23649, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %23650 to i64*
  %23651 = load i64, i64* %RBP.i83
  %23652 = sub i64 %23651, 8
  %23653 = load i64, i64* %PC.i81
  %23654 = add i64 %23653, 4
  store i64 %23654, i64* %PC.i81
  %23655 = inttoptr i64 %23652 to i32*
  %23656 = load i32, i32* %23655
  %23657 = sext i32 %23656 to i64
  store i64 %23657, i64* %RDX.i82, align 8
  store %struct.Memory* %loadMem_4afcfc, %struct.Memory** %MEMORY
  %loadMem_4afd00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23659 = getelementptr inbounds %struct.GPR, %struct.GPR* %23658, i32 0, i32 33
  %23660 = getelementptr inbounds %struct.Reg, %struct.Reg* %23659, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %23660 to i64*
  %23661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23662 = getelementptr inbounds %struct.GPR, %struct.GPR* %23661, i32 0, i32 5
  %23663 = getelementptr inbounds %struct.Reg, %struct.Reg* %23662, i32 0, i32 0
  %RCX.i79 = bitcast %union.anon* %23663 to i64*
  %23664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23665 = getelementptr inbounds %struct.GPR, %struct.GPR* %23664, i32 0, i32 7
  %23666 = getelementptr inbounds %struct.Reg, %struct.Reg* %23665, i32 0, i32 0
  %RDX.i80 = bitcast %union.anon* %23666 to i64*
  %23667 = load i64, i64* %RCX.i79
  %23668 = load i64, i64* %RDX.i80
  %23669 = mul i64 %23668, 8
  %23670 = add i64 %23669, %23667
  %23671 = load i64, i64* %PC.i78
  %23672 = add i64 %23671, 4
  store i64 %23672, i64* %PC.i78
  %23673 = inttoptr i64 %23670 to i64*
  %23674 = load i64, i64* %23673
  store i64 %23674, i64* %RCX.i79, align 8
  store %struct.Memory* %loadMem_4afd00, %struct.Memory** %MEMORY
  %loadMem_4afd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23676 = getelementptr inbounds %struct.GPR, %struct.GPR* %23675, i32 0, i32 33
  %23677 = getelementptr inbounds %struct.Reg, %struct.Reg* %23676, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %23677 to i64*
  %23678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23679 = getelementptr inbounds %struct.GPR, %struct.GPR* %23678, i32 0, i32 7
  %23680 = getelementptr inbounds %struct.Reg, %struct.Reg* %23679, i32 0, i32 0
  %RDX.i76 = bitcast %union.anon* %23680 to i64*
  %23681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23682 = getelementptr inbounds %struct.GPR, %struct.GPR* %23681, i32 0, i32 15
  %23683 = getelementptr inbounds %struct.Reg, %struct.Reg* %23682, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %23683 to i64*
  %23684 = load i64, i64* %RBP.i77
  %23685 = sub i64 %23684, 40
  %23686 = load i64, i64* %PC.i75
  %23687 = add i64 %23686, 4
  store i64 %23687, i64* %PC.i75
  %23688 = inttoptr i64 %23685 to i32*
  %23689 = load i32, i32* %23688
  %23690 = sext i32 %23689 to i64
  store i64 %23690, i64* %RDX.i76, align 8
  store %struct.Memory* %loadMem_4afd04, %struct.Memory** %MEMORY
  %loadMem_4afd08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23692 = getelementptr inbounds %struct.GPR, %struct.GPR* %23691, i32 0, i32 33
  %23693 = getelementptr inbounds %struct.Reg, %struct.Reg* %23692, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %23693 to i64*
  %23694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23695 = getelementptr inbounds %struct.GPR, %struct.GPR* %23694, i32 0, i32 1
  %23696 = getelementptr inbounds %struct.Reg, %struct.Reg* %23695, i32 0, i32 0
  %EAX.i72 = bitcast %union.anon* %23696 to i32*
  %23697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23698 = getelementptr inbounds %struct.GPR, %struct.GPR* %23697, i32 0, i32 5
  %23699 = getelementptr inbounds %struct.Reg, %struct.Reg* %23698, i32 0, i32 0
  %RCX.i73 = bitcast %union.anon* %23699 to i64*
  %23700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23701 = getelementptr inbounds %struct.GPR, %struct.GPR* %23700, i32 0, i32 7
  %23702 = getelementptr inbounds %struct.Reg, %struct.Reg* %23701, i32 0, i32 0
  %RDX.i74 = bitcast %union.anon* %23702 to i64*
  %23703 = load i64, i64* %RCX.i73
  %23704 = load i64, i64* %RDX.i74
  %23705 = mul i64 %23704, 4
  %23706 = add i64 %23705, %23703
  %23707 = load i32, i32* %EAX.i72
  %23708 = zext i32 %23707 to i64
  %23709 = load i64, i64* %PC.i71
  %23710 = add i64 %23709, 3
  store i64 %23710, i64* %PC.i71
  %23711 = inttoptr i64 %23706 to i32*
  store i32 %23707, i32* %23711
  store %struct.Memory* %loadMem_4afd08, %struct.Memory** %MEMORY
  %loadMem_4afd0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23713 = getelementptr inbounds %struct.GPR, %struct.GPR* %23712, i32 0, i32 33
  %23714 = getelementptr inbounds %struct.Reg, %struct.Reg* %23713, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %23714 to i64*
  %23715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23716 = getelementptr inbounds %struct.GPR, %struct.GPR* %23715, i32 0, i32 5
  %23717 = getelementptr inbounds %struct.Reg, %struct.Reg* %23716, i32 0, i32 0
  %RCX.i70 = bitcast %union.anon* %23717 to i64*
  %23718 = load i64, i64* %PC.i69
  %23719 = add i64 %23718, 8
  store i64 %23719, i64* %PC.i69
  %23720 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %23720, i64* %RCX.i70, align 8
  store %struct.Memory* %loadMem_4afd0b, %struct.Memory** %MEMORY
  %loadMem_4afd13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23722 = getelementptr inbounds %struct.GPR, %struct.GPR* %23721, i32 0, i32 33
  %23723 = getelementptr inbounds %struct.Reg, %struct.Reg* %23722, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %23723 to i64*
  %23724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23725 = getelementptr inbounds %struct.GPR, %struct.GPR* %23724, i32 0, i32 5
  %23726 = getelementptr inbounds %struct.Reg, %struct.Reg* %23725, i32 0, i32 0
  %RCX.i68 = bitcast %union.anon* %23726 to i64*
  %23727 = load i64, i64* %RCX.i68
  %23728 = add i64 %23727, 8
  %23729 = load i64, i64* %PC.i67
  %23730 = add i64 %23729, 4
  store i64 %23730, i64* %PC.i67
  %23731 = inttoptr i64 %23728 to i64*
  %23732 = load i64, i64* %23731
  store i64 %23732, i64* %RCX.i68, align 8
  store %struct.Memory* %loadMem_4afd13, %struct.Memory** %MEMORY
  %loadMem_4afd17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23734 = getelementptr inbounds %struct.GPR, %struct.GPR* %23733, i32 0, i32 33
  %23735 = getelementptr inbounds %struct.Reg, %struct.Reg* %23734, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %23735 to i64*
  %23736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23737 = getelementptr inbounds %struct.GPR, %struct.GPR* %23736, i32 0, i32 7
  %23738 = getelementptr inbounds %struct.Reg, %struct.Reg* %23737, i32 0, i32 0
  %RDX.i65 = bitcast %union.anon* %23738 to i64*
  %23739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23740 = getelementptr inbounds %struct.GPR, %struct.GPR* %23739, i32 0, i32 15
  %23741 = getelementptr inbounds %struct.Reg, %struct.Reg* %23740, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %23741 to i64*
  %23742 = load i64, i64* %RBP.i66
  %23743 = sub i64 %23742, 8
  %23744 = load i64, i64* %PC.i64
  %23745 = add i64 %23744, 4
  store i64 %23745, i64* %PC.i64
  %23746 = inttoptr i64 %23743 to i32*
  %23747 = load i32, i32* %23746
  %23748 = sext i32 %23747 to i64
  store i64 %23748, i64* %RDX.i65, align 8
  store %struct.Memory* %loadMem_4afd17, %struct.Memory** %MEMORY
  %loadMem_4afd1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23750 = getelementptr inbounds %struct.GPR, %struct.GPR* %23749, i32 0, i32 33
  %23751 = getelementptr inbounds %struct.Reg, %struct.Reg* %23750, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %23751 to i64*
  %23752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23753 = getelementptr inbounds %struct.GPR, %struct.GPR* %23752, i32 0, i32 5
  %23754 = getelementptr inbounds %struct.Reg, %struct.Reg* %23753, i32 0, i32 0
  %RCX.i62 = bitcast %union.anon* %23754 to i64*
  %23755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23756 = getelementptr inbounds %struct.GPR, %struct.GPR* %23755, i32 0, i32 7
  %23757 = getelementptr inbounds %struct.Reg, %struct.Reg* %23756, i32 0, i32 0
  %RDX.i63 = bitcast %union.anon* %23757 to i64*
  %23758 = load i64, i64* %RCX.i62
  %23759 = load i64, i64* %RDX.i63
  %23760 = mul i64 %23759, 8
  %23761 = add i64 %23760, %23758
  %23762 = load i64, i64* %PC.i61
  %23763 = add i64 %23762, 4
  store i64 %23763, i64* %PC.i61
  %23764 = inttoptr i64 %23761 to i64*
  %23765 = load i64, i64* %23764
  store i64 %23765, i64* %RCX.i62, align 8
  store %struct.Memory* %loadMem_4afd1b, %struct.Memory** %MEMORY
  %loadMem_4afd1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %23766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23767 = getelementptr inbounds %struct.GPR, %struct.GPR* %23766, i32 0, i32 33
  %23768 = getelementptr inbounds %struct.Reg, %struct.Reg* %23767, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %23768 to i64*
  %23769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23770 = getelementptr inbounds %struct.GPR, %struct.GPR* %23769, i32 0, i32 7
  %23771 = getelementptr inbounds %struct.Reg, %struct.Reg* %23770, i32 0, i32 0
  %RDX.i59 = bitcast %union.anon* %23771 to i64*
  %23772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23773 = getelementptr inbounds %struct.GPR, %struct.GPR* %23772, i32 0, i32 15
  %23774 = getelementptr inbounds %struct.Reg, %struct.Reg* %23773, i32 0, i32 0
  %RBP.i60 = bitcast %union.anon* %23774 to i64*
  %23775 = load i64, i64* %RBP.i60
  %23776 = sub i64 %23775, 40
  %23777 = load i64, i64* %PC.i58
  %23778 = add i64 %23777, 4
  store i64 %23778, i64* %PC.i58
  %23779 = inttoptr i64 %23776 to i32*
  %23780 = load i32, i32* %23779
  %23781 = sext i32 %23780 to i64
  store i64 %23781, i64* %RDX.i59, align 8
  store %struct.Memory* %loadMem_4afd1f, %struct.Memory** %MEMORY
  %loadMem_4afd23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23783 = getelementptr inbounds %struct.GPR, %struct.GPR* %23782, i32 0, i32 33
  %23784 = getelementptr inbounds %struct.Reg, %struct.Reg* %23783, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %23784 to i64*
  %23785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23786 = getelementptr inbounds %struct.GPR, %struct.GPR* %23785, i32 0, i32 1
  %23787 = getelementptr inbounds %struct.Reg, %struct.Reg* %23786, i32 0, i32 0
  %RAX.i55 = bitcast %union.anon* %23787 to i64*
  %23788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23789 = getelementptr inbounds %struct.GPR, %struct.GPR* %23788, i32 0, i32 5
  %23790 = getelementptr inbounds %struct.Reg, %struct.Reg* %23789, i32 0, i32 0
  %RCX.i56 = bitcast %union.anon* %23790 to i64*
  %23791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23792 = getelementptr inbounds %struct.GPR, %struct.GPR* %23791, i32 0, i32 7
  %23793 = getelementptr inbounds %struct.Reg, %struct.Reg* %23792, i32 0, i32 0
  %RDX.i57 = bitcast %union.anon* %23793 to i64*
  %23794 = load i64, i64* %RCX.i56
  %23795 = load i64, i64* %RDX.i57
  %23796 = mul i64 %23795, 4
  %23797 = add i64 %23796, %23794
  %23798 = load i64, i64* %PC.i54
  %23799 = add i64 %23798, 3
  store i64 %23799, i64* %PC.i54
  %23800 = inttoptr i64 %23797 to i32*
  %23801 = load i32, i32* %23800
  %23802 = zext i32 %23801 to i64
  store i64 %23802, i64* %RAX.i55, align 8
  store %struct.Memory* %loadMem_4afd23, %struct.Memory** %MEMORY
  %loadMem_4afd26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23804 = getelementptr inbounds %struct.GPR, %struct.GPR* %23803, i32 0, i32 33
  %23805 = getelementptr inbounds %struct.Reg, %struct.Reg* %23804, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %23805 to i64*
  %23806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23807 = getelementptr inbounds %struct.GPR, %struct.GPR* %23806, i32 0, i32 5
  %23808 = getelementptr inbounds %struct.Reg, %struct.Reg* %23807, i32 0, i32 0
  %RCX.i53 = bitcast %union.anon* %23808 to i64*
  %23809 = load i64, i64* %PC.i52
  %23810 = add i64 %23809, 8
  store i64 %23810, i64* %PC.i52
  %23811 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %23811, i64* %RCX.i53, align 8
  store %struct.Memory* %loadMem_4afd26, %struct.Memory** %MEMORY
  %loadMem_4afd2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23813 = getelementptr inbounds %struct.GPR, %struct.GPR* %23812, i32 0, i32 33
  %23814 = getelementptr inbounds %struct.Reg, %struct.Reg* %23813, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %23814 to i64*
  %23815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23816 = getelementptr inbounds %struct.GPR, %struct.GPR* %23815, i32 0, i32 5
  %23817 = getelementptr inbounds %struct.Reg, %struct.Reg* %23816, i32 0, i32 0
  %RCX.i51 = bitcast %union.anon* %23817 to i64*
  %23818 = load i64, i64* %RCX.i51
  %23819 = add i64 %23818, 8
  %23820 = load i64, i64* %PC.i50
  %23821 = add i64 %23820, 4
  store i64 %23821, i64* %PC.i50
  %23822 = inttoptr i64 %23819 to i64*
  %23823 = load i64, i64* %23822
  store i64 %23823, i64* %RCX.i51, align 8
  store %struct.Memory* %loadMem_4afd2e, %struct.Memory** %MEMORY
  %loadMem_4afd32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23825 = getelementptr inbounds %struct.GPR, %struct.GPR* %23824, i32 0, i32 33
  %23826 = getelementptr inbounds %struct.Reg, %struct.Reg* %23825, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %23826 to i64*
  %23827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23828 = getelementptr inbounds %struct.GPR, %struct.GPR* %23827, i32 0, i32 7
  %23829 = getelementptr inbounds %struct.Reg, %struct.Reg* %23828, i32 0, i32 0
  %RDX.i48 = bitcast %union.anon* %23829 to i64*
  %23830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23831 = getelementptr inbounds %struct.GPR, %struct.GPR* %23830, i32 0, i32 15
  %23832 = getelementptr inbounds %struct.Reg, %struct.Reg* %23831, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %23832 to i64*
  %23833 = load i64, i64* %RBP.i49
  %23834 = sub i64 %23833, 4
  %23835 = load i64, i64* %PC.i47
  %23836 = add i64 %23835, 4
  store i64 %23836, i64* %PC.i47
  %23837 = inttoptr i64 %23834 to i32*
  %23838 = load i32, i32* %23837
  %23839 = sext i32 %23838 to i64
  store i64 %23839, i64* %RDX.i48, align 8
  store %struct.Memory* %loadMem_4afd32, %struct.Memory** %MEMORY
  %loadMem_4afd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23841 = getelementptr inbounds %struct.GPR, %struct.GPR* %23840, i32 0, i32 33
  %23842 = getelementptr inbounds %struct.Reg, %struct.Reg* %23841, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %23842 to i64*
  %23843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23844 = getelementptr inbounds %struct.GPR, %struct.GPR* %23843, i32 0, i32 5
  %23845 = getelementptr inbounds %struct.Reg, %struct.Reg* %23844, i32 0, i32 0
  %RCX.i45 = bitcast %union.anon* %23845 to i64*
  %23846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23847 = getelementptr inbounds %struct.GPR, %struct.GPR* %23846, i32 0, i32 7
  %23848 = getelementptr inbounds %struct.Reg, %struct.Reg* %23847, i32 0, i32 0
  %RDX.i46 = bitcast %union.anon* %23848 to i64*
  %23849 = load i64, i64* %RCX.i45
  %23850 = load i64, i64* %RDX.i46
  %23851 = mul i64 %23850, 8
  %23852 = add i64 %23851, %23849
  %23853 = load i64, i64* %PC.i44
  %23854 = add i64 %23853, 4
  store i64 %23854, i64* %PC.i44
  %23855 = inttoptr i64 %23852 to i64*
  %23856 = load i64, i64* %23855
  store i64 %23856, i64* %RCX.i45, align 8
  store %struct.Memory* %loadMem_4afd36, %struct.Memory** %MEMORY
  %loadMem_4afd3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23858 = getelementptr inbounds %struct.GPR, %struct.GPR* %23857, i32 0, i32 33
  %23859 = getelementptr inbounds %struct.Reg, %struct.Reg* %23858, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %23859 to i64*
  %23860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23861 = getelementptr inbounds %struct.GPR, %struct.GPR* %23860, i32 0, i32 7
  %23862 = getelementptr inbounds %struct.Reg, %struct.Reg* %23861, i32 0, i32 0
  %RDX.i42 = bitcast %union.anon* %23862 to i64*
  %23863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23864 = getelementptr inbounds %struct.GPR, %struct.GPR* %23863, i32 0, i32 15
  %23865 = getelementptr inbounds %struct.Reg, %struct.Reg* %23864, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %23865 to i64*
  %23866 = load i64, i64* %RBP.i43
  %23867 = sub i64 %23866, 8
  %23868 = load i64, i64* %PC.i41
  %23869 = add i64 %23868, 4
  store i64 %23869, i64* %PC.i41
  %23870 = inttoptr i64 %23867 to i32*
  %23871 = load i32, i32* %23870
  %23872 = sext i32 %23871 to i64
  store i64 %23872, i64* %RDX.i42, align 8
  store %struct.Memory* %loadMem_4afd3a, %struct.Memory** %MEMORY
  %loadMem_4afd3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23874 = getelementptr inbounds %struct.GPR, %struct.GPR* %23873, i32 0, i32 33
  %23875 = getelementptr inbounds %struct.Reg, %struct.Reg* %23874, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %23875 to i64*
  %23876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23877 = getelementptr inbounds %struct.GPR, %struct.GPR* %23876, i32 0, i32 5
  %23878 = getelementptr inbounds %struct.Reg, %struct.Reg* %23877, i32 0, i32 0
  %RCX.i39 = bitcast %union.anon* %23878 to i64*
  %23879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23880 = getelementptr inbounds %struct.GPR, %struct.GPR* %23879, i32 0, i32 7
  %23881 = getelementptr inbounds %struct.Reg, %struct.Reg* %23880, i32 0, i32 0
  %RDX.i40 = bitcast %union.anon* %23881 to i64*
  %23882 = load i64, i64* %RCX.i39
  %23883 = load i64, i64* %RDX.i40
  %23884 = mul i64 %23883, 8
  %23885 = add i64 %23884, %23882
  %23886 = load i64, i64* %PC.i38
  %23887 = add i64 %23886, 4
  store i64 %23887, i64* %PC.i38
  %23888 = inttoptr i64 %23885 to i64*
  %23889 = load i64, i64* %23888
  store i64 %23889, i64* %RCX.i39, align 8
  store %struct.Memory* %loadMem_4afd3e, %struct.Memory** %MEMORY
  %loadMem_4afd42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23891 = getelementptr inbounds %struct.GPR, %struct.GPR* %23890, i32 0, i32 33
  %23892 = getelementptr inbounds %struct.Reg, %struct.Reg* %23891, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %23892 to i64*
  %23893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23894 = getelementptr inbounds %struct.GPR, %struct.GPR* %23893, i32 0, i32 7
  %23895 = getelementptr inbounds %struct.Reg, %struct.Reg* %23894, i32 0, i32 0
  %RDX.i36 = bitcast %union.anon* %23895 to i64*
  %23896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23897 = getelementptr inbounds %struct.GPR, %struct.GPR* %23896, i32 0, i32 15
  %23898 = getelementptr inbounds %struct.Reg, %struct.Reg* %23897, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %23898 to i64*
  %23899 = load i64, i64* %RBP.i37
  %23900 = sub i64 %23899, 40
  %23901 = load i64, i64* %PC.i35
  %23902 = add i64 %23901, 4
  store i64 %23902, i64* %PC.i35
  %23903 = inttoptr i64 %23900 to i32*
  %23904 = load i32, i32* %23903
  %23905 = sext i32 %23904 to i64
  store i64 %23905, i64* %RDX.i36, align 8
  store %struct.Memory* %loadMem_4afd42, %struct.Memory** %MEMORY
  %loadMem_4afd46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23907 = getelementptr inbounds %struct.GPR, %struct.GPR* %23906, i32 0, i32 33
  %23908 = getelementptr inbounds %struct.Reg, %struct.Reg* %23907, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %23908 to i64*
  %23909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23910 = getelementptr inbounds %struct.GPR, %struct.GPR* %23909, i32 0, i32 1
  %23911 = getelementptr inbounds %struct.Reg, %struct.Reg* %23910, i32 0, i32 0
  %EAX.i34 = bitcast %union.anon* %23911 to i32*
  %23912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23913 = getelementptr inbounds %struct.GPR, %struct.GPR* %23912, i32 0, i32 5
  %23914 = getelementptr inbounds %struct.Reg, %struct.Reg* %23913, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %23914 to i64*
  %23915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23916 = getelementptr inbounds %struct.GPR, %struct.GPR* %23915, i32 0, i32 7
  %23917 = getelementptr inbounds %struct.Reg, %struct.Reg* %23916, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %23917 to i64*
  %23918 = load i64, i64* %RCX.i
  %23919 = load i64, i64* %RDX.i
  %23920 = mul i64 %23919, 4
  %23921 = add i64 %23920, %23918
  %23922 = load i32, i32* %EAX.i34
  %23923 = zext i32 %23922 to i64
  %23924 = load i64, i64* %PC.i33
  %23925 = add i64 %23924, 3
  store i64 %23925, i64* %PC.i33
  %23926 = inttoptr i64 %23921 to i32*
  store i32 %23922, i32* %23926
  store %struct.Memory* %loadMem_4afd46, %struct.Memory** %MEMORY
  %loadMem_4afd49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23928 = getelementptr inbounds %struct.GPR, %struct.GPR* %23927, i32 0, i32 33
  %23929 = getelementptr inbounds %struct.Reg, %struct.Reg* %23928, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %23929 to i64*
  %23930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23931 = getelementptr inbounds %struct.GPR, %struct.GPR* %23930, i32 0, i32 1
  %23932 = getelementptr inbounds %struct.Reg, %struct.Reg* %23931, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %23932 to i64*
  %23933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23934 = getelementptr inbounds %struct.GPR, %struct.GPR* %23933, i32 0, i32 15
  %23935 = getelementptr inbounds %struct.Reg, %struct.Reg* %23934, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %23935 to i64*
  %23936 = load i64, i64* %RBP.i32
  %23937 = sub i64 %23936, 40
  %23938 = load i64, i64* %PC.i30
  %23939 = add i64 %23938, 3
  store i64 %23939, i64* %PC.i30
  %23940 = inttoptr i64 %23937 to i32*
  %23941 = load i32, i32* %23940
  %23942 = zext i32 %23941 to i64
  store i64 %23942, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_4afd49, %struct.Memory** %MEMORY
  %loadMem_4afd4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %23943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23944 = getelementptr inbounds %struct.GPR, %struct.GPR* %23943, i32 0, i32 33
  %23945 = getelementptr inbounds %struct.Reg, %struct.Reg* %23944, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %23945 to i64*
  %23946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23947 = getelementptr inbounds %struct.GPR, %struct.GPR* %23946, i32 0, i32 1
  %23948 = getelementptr inbounds %struct.Reg, %struct.Reg* %23947, i32 0, i32 0
  %RAX.i29 = bitcast %union.anon* %23948 to i64*
  %23949 = load i64, i64* %RAX.i29
  %23950 = load i64, i64* %PC.i28
  %23951 = add i64 %23950, 3
  store i64 %23951, i64* %PC.i28
  %23952 = trunc i64 %23949 to i32
  %23953 = add i32 1, %23952
  %23954 = zext i32 %23953 to i64
  store i64 %23954, i64* %RAX.i29, align 8
  %23955 = icmp ult i32 %23953, %23952
  %23956 = icmp ult i32 %23953, 1
  %23957 = or i1 %23955, %23956
  %23958 = zext i1 %23957 to i8
  %23959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23958, i8* %23959, align 1
  %23960 = and i32 %23953, 255
  %23961 = call i32 @llvm.ctpop.i32(i32 %23960)
  %23962 = trunc i32 %23961 to i8
  %23963 = and i8 %23962, 1
  %23964 = xor i8 %23963, 1
  %23965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23964, i8* %23965, align 1
  %23966 = xor i64 1, %23949
  %23967 = trunc i64 %23966 to i32
  %23968 = xor i32 %23967, %23953
  %23969 = lshr i32 %23968, 4
  %23970 = trunc i32 %23969 to i8
  %23971 = and i8 %23970, 1
  %23972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23971, i8* %23972, align 1
  %23973 = icmp eq i32 %23953, 0
  %23974 = zext i1 %23973 to i8
  %23975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23974, i8* %23975, align 1
  %23976 = lshr i32 %23953, 31
  %23977 = trunc i32 %23976 to i8
  %23978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23977, i8* %23978, align 1
  %23979 = lshr i32 %23952, 31
  %23980 = xor i32 %23976, %23979
  %23981 = add i32 %23980, %23976
  %23982 = icmp eq i32 %23981, 2
  %23983 = zext i1 %23982 to i8
  %23984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23983, i8* %23984, align 1
  store %struct.Memory* %loadMem_4afd4c, %struct.Memory** %MEMORY
  %loadMem_4afd4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %23985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23986 = getelementptr inbounds %struct.GPR, %struct.GPR* %23985, i32 0, i32 33
  %23987 = getelementptr inbounds %struct.Reg, %struct.Reg* %23986, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %23987 to i64*
  %23988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23989 = getelementptr inbounds %struct.GPR, %struct.GPR* %23988, i32 0, i32 1
  %23990 = getelementptr inbounds %struct.Reg, %struct.Reg* %23989, i32 0, i32 0
  %EAX.i26 = bitcast %union.anon* %23990 to i32*
  %23991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23992 = getelementptr inbounds %struct.GPR, %struct.GPR* %23991, i32 0, i32 15
  %23993 = getelementptr inbounds %struct.Reg, %struct.Reg* %23992, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %23993 to i64*
  %23994 = load i64, i64* %RBP.i27
  %23995 = sub i64 %23994, 40
  %23996 = load i32, i32* %EAX.i26
  %23997 = zext i32 %23996 to i64
  %23998 = load i64, i64* %PC.i25
  %23999 = add i64 %23998, 3
  store i64 %23999, i64* %PC.i25
  %24000 = inttoptr i64 %23995 to i32*
  store i32 %23996, i32* %24000
  store %struct.Memory* %loadMem_4afd4f, %struct.Memory** %MEMORY
  %loadMem_4afd52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24002 = getelementptr inbounds %struct.GPR, %struct.GPR* %24001, i32 0, i32 33
  %24003 = getelementptr inbounds %struct.Reg, %struct.Reg* %24002, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %24003 to i64*
  %24004 = load i64, i64* %PC.i24
  %24005 = add i64 %24004, -194
  %24006 = load i64, i64* %PC.i24
  %24007 = add i64 %24006, 5
  store i64 %24007, i64* %PC.i24
  %24008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24005, i64* %24008, align 8
  store %struct.Memory* %loadMem_4afd52, %struct.Memory** %MEMORY
  br label %block_.L_4afc90

block_.L_4afd57:                                  ; preds = %block_.L_4afc90
  %loadMem_4afd57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24010 = getelementptr inbounds %struct.GPR, %struct.GPR* %24009, i32 0, i32 33
  %24011 = getelementptr inbounds %struct.Reg, %struct.Reg* %24010, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %24011 to i64*
  %24012 = load i64, i64* %PC.i23
  %24013 = add i64 %24012, 5
  %24014 = load i64, i64* %PC.i23
  %24015 = add i64 %24014, 5
  store i64 %24015, i64* %PC.i23
  %24016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24013, i64* %24016, align 8
  store %struct.Memory* %loadMem_4afd57, %struct.Memory** %MEMORY
  br label %block_.L_4afd5c

block_.L_4afd5c:                                  ; preds = %block_.L_4afd57
  %loadMem_4afd5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24018 = getelementptr inbounds %struct.GPR, %struct.GPR* %24017, i32 0, i32 33
  %24019 = getelementptr inbounds %struct.Reg, %struct.Reg* %24018, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %24019 to i64*
  %24020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24021 = getelementptr inbounds %struct.GPR, %struct.GPR* %24020, i32 0, i32 1
  %24022 = getelementptr inbounds %struct.Reg, %struct.Reg* %24021, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %24022 to i64*
  %24023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24024 = getelementptr inbounds %struct.GPR, %struct.GPR* %24023, i32 0, i32 15
  %24025 = getelementptr inbounds %struct.Reg, %struct.Reg* %24024, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %24025 to i64*
  %24026 = load i64, i64* %RBP.i22
  %24027 = sub i64 %24026, 8
  %24028 = load i64, i64* %PC.i20
  %24029 = add i64 %24028, 3
  store i64 %24029, i64* %PC.i20
  %24030 = inttoptr i64 %24027 to i32*
  %24031 = load i32, i32* %24030
  %24032 = zext i32 %24031 to i64
  store i64 %24032, i64* %RAX.i21, align 8
  store %struct.Memory* %loadMem_4afd5c, %struct.Memory** %MEMORY
  %loadMem_4afd5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24034 = getelementptr inbounds %struct.GPR, %struct.GPR* %24033, i32 0, i32 33
  %24035 = getelementptr inbounds %struct.Reg, %struct.Reg* %24034, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %24035 to i64*
  %24036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24037 = getelementptr inbounds %struct.GPR, %struct.GPR* %24036, i32 0, i32 1
  %24038 = getelementptr inbounds %struct.Reg, %struct.Reg* %24037, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %24038 to i64*
  %24039 = load i64, i64* %RAX.i19
  %24040 = load i64, i64* %PC.i18
  %24041 = add i64 %24040, 3
  store i64 %24041, i64* %PC.i18
  %24042 = trunc i64 %24039 to i32
  %24043 = add i32 1, %24042
  %24044 = zext i32 %24043 to i64
  store i64 %24044, i64* %RAX.i19, align 8
  %24045 = icmp ult i32 %24043, %24042
  %24046 = icmp ult i32 %24043, 1
  %24047 = or i1 %24045, %24046
  %24048 = zext i1 %24047 to i8
  %24049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24048, i8* %24049, align 1
  %24050 = and i32 %24043, 255
  %24051 = call i32 @llvm.ctpop.i32(i32 %24050)
  %24052 = trunc i32 %24051 to i8
  %24053 = and i8 %24052, 1
  %24054 = xor i8 %24053, 1
  %24055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24054, i8* %24055, align 1
  %24056 = xor i64 1, %24039
  %24057 = trunc i64 %24056 to i32
  %24058 = xor i32 %24057, %24043
  %24059 = lshr i32 %24058, 4
  %24060 = trunc i32 %24059 to i8
  %24061 = and i8 %24060, 1
  %24062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24061, i8* %24062, align 1
  %24063 = icmp eq i32 %24043, 0
  %24064 = zext i1 %24063 to i8
  %24065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24064, i8* %24065, align 1
  %24066 = lshr i32 %24043, 31
  %24067 = trunc i32 %24066 to i8
  %24068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24067, i8* %24068, align 1
  %24069 = lshr i32 %24042, 31
  %24070 = xor i32 %24066, %24069
  %24071 = add i32 %24070, %24066
  %24072 = icmp eq i32 %24071, 2
  %24073 = zext i1 %24072 to i8
  %24074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24073, i8* %24074, align 1
  store %struct.Memory* %loadMem_4afd5f, %struct.Memory** %MEMORY
  %loadMem_4afd62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24076 = getelementptr inbounds %struct.GPR, %struct.GPR* %24075, i32 0, i32 33
  %24077 = getelementptr inbounds %struct.Reg, %struct.Reg* %24076, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %24077 to i64*
  %24078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24079 = getelementptr inbounds %struct.GPR, %struct.GPR* %24078, i32 0, i32 1
  %24080 = getelementptr inbounds %struct.Reg, %struct.Reg* %24079, i32 0, i32 0
  %EAX.i16 = bitcast %union.anon* %24080 to i32*
  %24081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24082 = getelementptr inbounds %struct.GPR, %struct.GPR* %24081, i32 0, i32 15
  %24083 = getelementptr inbounds %struct.Reg, %struct.Reg* %24082, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %24083 to i64*
  %24084 = load i64, i64* %RBP.i17
  %24085 = sub i64 %24084, 8
  %24086 = load i32, i32* %EAX.i16
  %24087 = zext i32 %24086 to i64
  %24088 = load i64, i64* %PC.i15
  %24089 = add i64 %24088, 3
  store i64 %24089, i64* %PC.i15
  %24090 = inttoptr i64 %24085 to i32*
  store i32 %24086, i32* %24090
  store %struct.Memory* %loadMem_4afd62, %struct.Memory** %MEMORY
  %loadMem_4afd65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24092 = getelementptr inbounds %struct.GPR, %struct.GPR* %24091, i32 0, i32 33
  %24093 = getelementptr inbounds %struct.Reg, %struct.Reg* %24092, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %24093 to i64*
  %24094 = load i64, i64* %PC.i14
  %24095 = add i64 %24094, -236
  %24096 = load i64, i64* %PC.i14
  %24097 = add i64 %24096, 5
  store i64 %24097, i64* %PC.i14
  %24098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24095, i64* %24098, align 8
  store %struct.Memory* %loadMem_4afd65, %struct.Memory** %MEMORY
  br label %block_.L_4afc79

block_.L_4afd6a:                                  ; preds = %block_.L_4afc79
  %loadMem_4afd6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24100 = getelementptr inbounds %struct.GPR, %struct.GPR* %24099, i32 0, i32 33
  %24101 = getelementptr inbounds %struct.Reg, %struct.Reg* %24100, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %24101 to i64*
  %24102 = load i64, i64* %PC.i13
  %24103 = add i64 %24102, 5
  %24104 = load i64, i64* %PC.i13
  %24105 = add i64 %24104, 5
  store i64 %24105, i64* %PC.i13
  %24106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24103, i64* %24106, align 8
  store %struct.Memory* %loadMem_4afd6a, %struct.Memory** %MEMORY
  br label %block_.L_4afd6f

block_.L_4afd6f:                                  ; preds = %block_.L_4afd6a
  %loadMem_4afd6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24108 = getelementptr inbounds %struct.GPR, %struct.GPR* %24107, i32 0, i32 33
  %24109 = getelementptr inbounds %struct.Reg, %struct.Reg* %24108, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %24109 to i64*
  %24110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24111 = getelementptr inbounds %struct.GPR, %struct.GPR* %24110, i32 0, i32 1
  %24112 = getelementptr inbounds %struct.Reg, %struct.Reg* %24111, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %24112 to i64*
  %24113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24114 = getelementptr inbounds %struct.GPR, %struct.GPR* %24113, i32 0, i32 15
  %24115 = getelementptr inbounds %struct.Reg, %struct.Reg* %24114, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %24115 to i64*
  %24116 = load i64, i64* %RBP.i12
  %24117 = sub i64 %24116, 4
  %24118 = load i64, i64* %PC.i10
  %24119 = add i64 %24118, 3
  store i64 %24119, i64* %PC.i10
  %24120 = inttoptr i64 %24117 to i32*
  %24121 = load i32, i32* %24120
  %24122 = zext i32 %24121 to i64
  store i64 %24122, i64* %RAX.i11, align 8
  store %struct.Memory* %loadMem_4afd6f, %struct.Memory** %MEMORY
  %loadMem_4afd72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24124 = getelementptr inbounds %struct.GPR, %struct.GPR* %24123, i32 0, i32 33
  %24125 = getelementptr inbounds %struct.Reg, %struct.Reg* %24124, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %24125 to i64*
  %24126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24127 = getelementptr inbounds %struct.GPR, %struct.GPR* %24126, i32 0, i32 1
  %24128 = getelementptr inbounds %struct.Reg, %struct.Reg* %24127, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %24128 to i64*
  %24129 = load i64, i64* %RAX.i
  %24130 = load i64, i64* %PC.i9
  %24131 = add i64 %24130, 3
  store i64 %24131, i64* %PC.i9
  %24132 = trunc i64 %24129 to i32
  %24133 = add i32 1, %24132
  %24134 = zext i32 %24133 to i64
  store i64 %24134, i64* %RAX.i, align 8
  %24135 = icmp ult i32 %24133, %24132
  %24136 = icmp ult i32 %24133, 1
  %24137 = or i1 %24135, %24136
  %24138 = zext i1 %24137 to i8
  %24139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24138, i8* %24139, align 1
  %24140 = and i32 %24133, 255
  %24141 = call i32 @llvm.ctpop.i32(i32 %24140)
  %24142 = trunc i32 %24141 to i8
  %24143 = and i8 %24142, 1
  %24144 = xor i8 %24143, 1
  %24145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24144, i8* %24145, align 1
  %24146 = xor i64 1, %24129
  %24147 = trunc i64 %24146 to i32
  %24148 = xor i32 %24147, %24133
  %24149 = lshr i32 %24148, 4
  %24150 = trunc i32 %24149 to i8
  %24151 = and i8 %24150, 1
  %24152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24151, i8* %24152, align 1
  %24153 = icmp eq i32 %24133, 0
  %24154 = zext i1 %24153 to i8
  %24155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24154, i8* %24155, align 1
  %24156 = lshr i32 %24133, 31
  %24157 = trunc i32 %24156 to i8
  %24158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24157, i8* %24158, align 1
  %24159 = lshr i32 %24132, 31
  %24160 = xor i32 %24156, %24159
  %24161 = add i32 %24160, %24156
  %24162 = icmp eq i32 %24161, 2
  %24163 = zext i1 %24162 to i8
  %24164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24163, i8* %24164, align 1
  store %struct.Memory* %loadMem_4afd72, %struct.Memory** %MEMORY
  %loadMem_4afd75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24166 = getelementptr inbounds %struct.GPR, %struct.GPR* %24165, i32 0, i32 33
  %24167 = getelementptr inbounds %struct.Reg, %struct.Reg* %24166, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %24167 to i64*
  %24168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24169 = getelementptr inbounds %struct.GPR, %struct.GPR* %24168, i32 0, i32 1
  %24170 = getelementptr inbounds %struct.Reg, %struct.Reg* %24169, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %24170 to i32*
  %24171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24172 = getelementptr inbounds %struct.GPR, %struct.GPR* %24171, i32 0, i32 15
  %24173 = getelementptr inbounds %struct.Reg, %struct.Reg* %24172, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %24173 to i64*
  %24174 = load i64, i64* %RBP.i8
  %24175 = sub i64 %24174, 4
  %24176 = load i32, i32* %EAX.i
  %24177 = zext i32 %24176 to i64
  %24178 = load i64, i64* %PC.i7
  %24179 = add i64 %24178, 3
  store i64 %24179, i64* %PC.i7
  %24180 = inttoptr i64 %24175 to i32*
  store i32 %24176, i32* %24180
  store %struct.Memory* %loadMem_4afd75, %struct.Memory** %MEMORY
  %loadMem_4afd78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24182 = getelementptr inbounds %struct.GPR, %struct.GPR* %24181, i32 0, i32 33
  %24183 = getelementptr inbounds %struct.Reg, %struct.Reg* %24182, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %24183 to i64*
  %24184 = load i64, i64* %PC.i6
  %24185 = add i64 %24184, -278
  %24186 = load i64, i64* %PC.i6
  %24187 = add i64 %24186, 5
  store i64 %24187, i64* %PC.i6
  %24188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24185, i64* %24188, align 8
  store %struct.Memory* %loadMem_4afd78, %struct.Memory** %MEMORY
  br label %block_.L_4afc62

block_.L_4afd7d:                                  ; preds = %block_.L_4afc62
  %loadMem_4afd7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24190 = getelementptr inbounds %struct.GPR, %struct.GPR* %24189, i32 0, i32 33
  %24191 = getelementptr inbounds %struct.Reg, %struct.Reg* %24190, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %24191 to i64*
  %24192 = load i64, i64* %PC.i5
  %24193 = add i64 %24192, 5
  %24194 = load i64, i64* %PC.i5
  %24195 = add i64 %24194, 5
  store i64 %24195, i64* %PC.i5
  %24196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24193, i64* %24196, align 8
  store %struct.Memory* %loadMem_4afd7d, %struct.Memory** %MEMORY
  br label %block_.L_4afd82

block_.L_4afd82:                                  ; preds = %block_.L_4afd7d, %block_.L_4af386
  %loadMem_4afd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24198 = getelementptr inbounds %struct.GPR, %struct.GPR* %24197, i32 0, i32 33
  %24199 = getelementptr inbounds %struct.Reg, %struct.Reg* %24198, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %24199 to i64*
  %24200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24201 = getelementptr inbounds %struct.GPR, %struct.GPR* %24200, i32 0, i32 13
  %24202 = getelementptr inbounds %struct.Reg, %struct.Reg* %24201, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %24202 to i64*
  %24203 = load i64, i64* %RSP.i
  %24204 = load i64, i64* %PC.i4
  %24205 = add i64 %24204, 7
  store i64 %24205, i64* %PC.i4
  %24206 = add i64 35472, %24203
  store i64 %24206, i64* %RSP.i, align 8
  %24207 = icmp ult i64 %24206, %24203
  %24208 = icmp ult i64 %24206, 35472
  %24209 = or i1 %24207, %24208
  %24210 = zext i1 %24209 to i8
  %24211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24210, i8* %24211, align 1
  %24212 = trunc i64 %24206 to i32
  %24213 = and i32 %24212, 255
  %24214 = call i32 @llvm.ctpop.i32(i32 %24213)
  %24215 = trunc i32 %24214 to i8
  %24216 = and i8 %24215, 1
  %24217 = xor i8 %24216, 1
  %24218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24217, i8* %24218, align 1
  %24219 = xor i64 35472, %24203
  %24220 = xor i64 %24219, %24206
  %24221 = lshr i64 %24220, 4
  %24222 = trunc i64 %24221 to i8
  %24223 = and i8 %24222, 1
  %24224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24223, i8* %24224, align 1
  %24225 = icmp eq i64 %24206, 0
  %24226 = zext i1 %24225 to i8
  %24227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24226, i8* %24227, align 1
  %24228 = lshr i64 %24206, 63
  %24229 = trunc i64 %24228 to i8
  %24230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24229, i8* %24230, align 1
  %24231 = lshr i64 %24203, 63
  %24232 = xor i64 %24228, %24231
  %24233 = add i64 %24232, %24228
  %24234 = icmp eq i64 %24233, 2
  %24235 = zext i1 %24234 to i8
  %24236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24235, i8* %24236, align 1
  store %struct.Memory* %loadMem_4afd82, %struct.Memory** %MEMORY
  %loadMem_4afd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24238 = getelementptr inbounds %struct.GPR, %struct.GPR* %24237, i32 0, i32 33
  %24239 = getelementptr inbounds %struct.Reg, %struct.Reg* %24238, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %24239 to i64*
  %24240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24241 = getelementptr inbounds %struct.GPR, %struct.GPR* %24240, i32 0, i32 15
  %24242 = getelementptr inbounds %struct.Reg, %struct.Reg* %24241, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %24242 to i64*
  %24243 = load i64, i64* %PC.i2
  %24244 = add i64 %24243, 1
  store i64 %24244, i64* %PC.i2
  %24245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %24246 = load i64, i64* %24245, align 8
  %24247 = add i64 %24246, 8
  %24248 = inttoptr i64 %24246 to i64*
  %24249 = load i64, i64* %24248
  store i64 %24249, i64* %RBP.i3, align 8
  store i64 %24247, i64* %24245, align 8
  store %struct.Memory* %loadMem_4afd89, %struct.Memory** %MEMORY
  %loadMem_4afd8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24251 = getelementptr inbounds %struct.GPR, %struct.GPR* %24250, i32 0, i32 33
  %24252 = getelementptr inbounds %struct.Reg, %struct.Reg* %24251, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %24252 to i64*
  %24253 = load i64, i64* %PC.i1
  %24254 = add i64 %24253, 1
  store i64 %24254, i64* %PC.i1
  %24255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %24257 = load i64, i64* %24256, align 8
  %24258 = inttoptr i64 %24257 to i64*
  %24259 = load i64, i64* %24258
  store i64 %24259, i64* %24255, align 8
  %24260 = add i64 %24257, 8
  store i64 %24260, i64* %24256, align 8
  store %struct.Memory* %loadMem_4afd8a, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4afd8a
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x8a90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 35472
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 35472
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 35472, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 32
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ae821(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35416
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a58__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RSI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8a5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35420
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae82e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x328__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 808
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0xc4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ae86a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x70f6d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 5, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x7242a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 5, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae880(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6__0x70f6d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 6, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6__0x7242a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 6, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x7107a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x710790(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x324__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x320__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x31c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 796
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x328__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 808
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 2, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 2
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 2, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aea07(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7247b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = mul i64 %14, 4
  %16 = add i64 %15, 7489456
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %12, %20
  %22 = icmp ult i32 %12, %20
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, %12
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %12, 31
  %44 = lshr i32 %20, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae9f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ae9e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x760__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xba0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x324__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -804
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdx__rdi_8____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rdx__rdi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rdx__rdi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x324__rbp__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -804
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae91f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae9e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae904(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae9f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ae8e9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7247b0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aeef3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7247b4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aeee0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b28___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffff80___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, -128
  %14 = icmp ult i32 %9, -128
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 -128, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 1, %36
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aea74(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffff80___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967168, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35424
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeaeb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7f___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 127
  %14 = icmp ult i32 %9, 127
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 127, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4aeab3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7f___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 127, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35428
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeadf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8a64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35428
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35408
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffff80___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, -128
  %14 = icmp ult i32 %9, -128
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 -128, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 1, %36
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aeb2e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35432
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeb95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7f___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 127
  %14 = icmp ult i32 %9, 127
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 127, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4aeb65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeb89(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8a6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35436
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a6c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aeecd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8a50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4aec84(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x8a40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x4af0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 19184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeeba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a50__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a70__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4000___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 16384, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 16384
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 16384, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_MINUS0x8a50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x8a54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 35412
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RAX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xfffffc00___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = sub i32 %9, -1024
  %14 = icmp ult i32 %9, -1024
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 -1024, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 1, %36
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aece1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xfffffc00___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294966272, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aed2e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3ff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1023
  %14 = icmp ult i32 %9, 1023
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1023, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4aed0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3ff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1023, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aed22(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a74__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffc0____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %19, -64
  %21 = icmp ult i32 %19, -64
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, -64
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = xor i32 %42, 1
  %44 = xor i32 %39, %42
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4aedd3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x4af0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 19184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x80____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %19, 128
  %21 = icmp ult i32 %19, 128
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, 128
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = xor i32 %39, %42
  %44 = add i32 %43, %42
  %45 = icmp eq i32 %44, 2
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %46, i8* %47, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4aee0b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x324__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -804
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x40___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 64, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rsi__rdi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RDX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rcx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeebf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeba8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeed2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aea25(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aeee5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aea0e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0xc4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4af38b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af046(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af033(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af020(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4aef63(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aef70(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aef3d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af025(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aef26(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af038(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aef0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8a44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35396
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af17c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af163(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x324__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x320__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x31c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af06e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af168(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af050(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af386(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af373(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x34__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af25d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1920__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6432
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  store i16 %22, i16* %DX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1928__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6440
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af1b1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x8___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 8, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 8
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 8, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af360(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af34d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1930__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6448
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1938__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6456
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af287(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af352(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af264(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af365(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af19a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af378(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af183(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afd82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x3c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 60
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af407(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x34__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af3f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x277050__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x277050__rip__type* @G_0x277050__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__edx___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x20__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af3ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af3f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af392(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af9d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af9b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x300__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x78___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 120, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0____rax__rcx_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %RCX
  %16 = mul i64 %15, 8
  %17 = add i64 %16, %14
  %18 = bitcast %union.vec128_t* %XMM0 to i8*
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = bitcast i8* %18 to double*
  %22 = load double, double* %21, align 1
  %23 = inttoptr i64 %17 to double*
  store double %22, double* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rax_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 8
  %11 = add i64 %10, 7482144
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x310__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x318__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 792
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af51e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x310__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd___rax__rcx_8____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = bitcast i8* %15 to double*
  %23 = load double, double* %22, align 1
  %24 = getelementptr inbounds i8, i8* %15, i64 8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 1
  %27 = inttoptr i64 %19 to double*
  %28 = load double, double* %27
  %29 = fadd double %23, %28
  %30 = bitcast i8* %14 to double*
  store double %29, double* %30, align 1
  %31 = getelementptr inbounds i8, i8* %14, i64 8
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af4b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd___rax__rcx_8____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to double*
  %22 = load double, double* %21
  %23 = bitcast i8* %14 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %14, i64 8
  %25 = bitcast i8* %24 to double*
  store double 0.000000e+00, double* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jne_.L_4af554(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_4af554(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af59a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x232c__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x232c__rip__type* @G_0x232c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x324__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_MINUS0x20__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fmul double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd___rax__rcx_8____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = bitcast i8* %15 to double*
  %23 = load double, double* %22, align 1
  %24 = getelementptr inbounds i8, i8* %15, i64 8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 1
  %27 = inttoptr i64 %19 to double*
  %28 = load double, double* %27
  %29 = fdiv double %23, %28
  %30 = bitcast i8* %14 to double*
  store double %29, double* %30, align 1
  %31 = getelementptr inbounds i8, i8* %14, i64 8
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35400
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af5a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35400
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffc0__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -64
  %16 = icmp ult i32 %14, -64
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -64
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4af5c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7f__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 127
  %16 = icmp ult i32 %14, 127
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 127
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4af5cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xba0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x760__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8a4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x320__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x4__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x31c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af7ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x310__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x8a48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 35400
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7107a0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RDX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8a4c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 35404
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af731(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af7c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11bec__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72684
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4af78a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8a84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35460
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af7bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8a84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35460
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a84__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x318__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af6cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af9a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af993(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4af88e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af955(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4af8ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8a8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35468
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af949(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8a8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35468
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a8c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1938__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6456
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af818(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af998(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af7f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af9ab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af42f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af9be(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af411(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0xc4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4afb0e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afb09(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afaf0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afadd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afa2d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afae2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afa0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afaf5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4af9f1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afc5b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afc56(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afc3d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afb36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afc42(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afb18(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afd7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afd6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4afd57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4afcb6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35472
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afcc3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a90__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afc90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afd5c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afc79(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afd6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4afc62(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x8a90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 35472, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 35472
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 35472, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
