; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45ca00.SetMotionVectorPredictor(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cc330_type = type <{ [8 x i8] }>
@G_0x6cc330= global %G_0x6cc330_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cea08_type = type <{ [8 x i8] }>
@G_0x6cea08= global %G_0x6cea08_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
@G_0x70fcf0= global %G_0x70fcf0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x722cb8_type = type <{ [8 x i8] }>
@G_0x722cb8= global %G_0x722cb8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @Get_Direct_Motion_Vectors(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .Get_Direct_Motion_Vectors:	 RIP: 472d80	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 472d80	 Bytes: 1
  %loadMem_472d80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472d80 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472d80)
  store %struct.Memory* %call_472d80, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 472d81	 Bytes: 3
  %loadMem_472d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472d81 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472d81)
  store %struct.Memory* %call_472d81, %struct.Memory** %MEMORY

  ; Code: subq $0x210, %rsp	 RIP: 472d84	 Bytes: 7
  %loadMem_472d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472d84 = call %struct.Memory* @routine_subq__0x210___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472d84)
  store %struct.Memory* %call_472d84, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 472d8b	 Bytes: 8
  %loadMem_472d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472d8b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472d8b)
  store %struct.Memory* %call_472d8b, %struct.Memory** %MEMORY

  ; Code: movq 0x118f8(%rax), %rax	 RIP: 472d93	 Bytes: 7
  %loadMem_472d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472d93 = call %struct.Memory* @routine_movq_0x118f8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472d93)
  store %struct.Memory* %call_472d93, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x20(%rbp)	 RIP: 472d9a	 Bytes: 4
  %loadMem_472d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472d9a = call %struct.Memory* @routine_movq__rax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472d9a)
  store %struct.Memory* %call_472d9a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 472d9e	 Bytes: 8
  %loadMem_472d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472d9e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472d9e)
  store %struct.Memory* %call_472d9e, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 472da6	 Bytes: 7
  %loadMem_472da6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472da6 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472da6)
  store %struct.Memory* %call_472da6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 472dad	 Bytes: 8
  %loadMem_472dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dad = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dad)
  store %struct.Memory* %call_472dad, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rcx), %rcx	 RIP: 472db5	 Bytes: 4
  %loadMem_472db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472db5 = call %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472db5)
  store %struct.Memory* %call_472db5, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 472db9	 Bytes: 7
  %loadMem_472db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472db9 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472db9)
  store %struct.Memory* %call_472db9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 472dc0	 Bytes: 3
  %loadMem_472dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dc0 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dc0)
  store %struct.Memory* %call_472dc0, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x50(%rbp)	 RIP: 472dc3	 Bytes: 4
  %loadMem_472dc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dc3 = call %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dc3)
  store %struct.Memory* %call_472dc3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 472dc7	 Bytes: 8
  %loadMem_472dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dc7 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dc7)
  store %struct.Memory* %call_472dc7, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11ad0(%rax)	 RIP: 472dcf	 Bytes: 7
  %loadMem_472dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dcf = call %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dcf)
  store %struct.Memory* %call_472dcf, %struct.Memory** %MEMORY

  ; Code: je .L_472eb9	 RIP: 472dd6	 Bytes: 6
  %loadMem_472dd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dd6 = call %struct.Memory* @routine_je_.L_472eb9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dd6, i8* %BRANCH_TAKEN, i64 227, i64 6, i64 6)
  store %struct.Memory* %call_472dd6, %struct.Memory** %MEMORY

  %loadBr_472dd6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_472dd6 = icmp eq i8 %loadBr_472dd6, 1
  br i1 %cmpBr_472dd6, label %block_.L_472eb9, label %block_472ddc

block_472ddc:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 472ddc	 Bytes: 4
  %loadMem_472ddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ddc = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ddc)
  store %struct.Memory* %call_472ddc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 472de0	 Bytes: 7
  %loadMem_472de0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472de0 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472de0)
  store %struct.Memory* %call_472de0, %struct.Memory** %MEMORY

  ; Code: je .L_472eb9	 RIP: 472de7	 Bytes: 6
  %loadMem_472de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472de7 = call %struct.Memory* @routine_je_.L_472eb9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472de7, i8* %BRANCH_TAKEN, i64 210, i64 6, i64 6)
  store %struct.Memory* %call_472de7, %struct.Memory** %MEMORY

  %loadBr_472de7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_472de7 = icmp eq i8 %loadBr_472de7, 1
  br i1 %cmpBr_472de7, label %block_.L_472eb9, label %block_472ded

block_472ded:
  ; Code: movl $0x2, %eax	 RIP: 472ded	 Bytes: 5
  %loadMem_472ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ded = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ded)
  store %struct.Memory* %call_472ded, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 472df2	 Bytes: 8
  %loadMem_472df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472df2 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472df2)
  store %struct.Memory* %call_472df2, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rcx), %edx	 RIP: 472dfa	 Bytes: 3
  %loadMem_472dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dfa = call %struct.Memory* @routine_movl_0xc__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dfa)
  store %struct.Memory* %call_472dfa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe8(%rbp)	 RIP: 472dfd	 Bytes: 6
  %loadMem_472dfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472dfd = call %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472dfd)
  store %struct.Memory* %call_472dfd, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 472e03	 Bytes: 2
  %loadMem_472e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e03 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e03)
  store %struct.Memory* %call_472e03, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 472e05	 Bytes: 1
  %loadMem_472e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e05 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e05)
  store %struct.Memory* %call_472e05, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 472e06	 Bytes: 6
  %loadMem_472e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e06 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e06)
  store %struct.Memory* %call_472e06, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 472e0c	 Bytes: 2
  %loadMem_472e0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e0c = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e0c)
  store %struct.Memory* %call_472e0c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 472e0e	 Bytes: 3
  %loadMem_472e0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e0e = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e0e)
  store %struct.Memory* %call_472e0e, %struct.Memory** %MEMORY

  ; Code: je .L_472e68	 RIP: 472e11	 Bytes: 6
  %loadMem_472e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e11 = call %struct.Memory* @routine_je_.L_472e68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e11, i8* %BRANCH_TAKEN, i64 87, i64 6, i64 6)
  store %struct.Memory* %call_472e11, %struct.Memory** %MEMORY

  %loadBr_472e11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_472e11 = icmp eq i8 %loadBr_472e11, 1
  br i1 %cmpBr_472e11, label %block_.L_472e68, label %block_472e17

block_472e17:
  ; Code: movq 0x6cc330, %rax	 RIP: 472e17	 Bytes: 8
  %loadMem_472e17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e17 = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e17)
  store %struct.Memory* %call_472e17, %struct.Memory** %MEMORY

  ; Code: movq 0x12f8(%rax), %rax	 RIP: 472e1f	 Bytes: 7
  %loadMem_472e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e1f = call %struct.Memory* @routine_movq_0x12f8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e1f)
  store %struct.Memory* %call_472e1f, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x30(%rbp)	 RIP: 472e26	 Bytes: 4
  %loadMem_472e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e26 = call %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e26)
  store %struct.Memory* %call_472e26, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472e2a	 Bytes: 8
  %loadMem_472e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e2a = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e2a)
  store %struct.Memory* %call_472e2a, %struct.Memory** %MEMORY

  ; Code: movq 0x12f0(%rax), %rax	 RIP: 472e32	 Bytes: 7
  %loadMem_472e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e32 = call %struct.Memory* @routine_movq_0x12f0__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e32)
  store %struct.Memory* %call_472e32, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x38(%rbp)	 RIP: 472e39	 Bytes: 4
  %loadMem_472e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e39 = call %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e39)
  store %struct.Memory* %call_472e39, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472e3d	 Bytes: 8
  %loadMem_472e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e3d = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e3d)
  store %struct.Memory* %call_472e3d, %struct.Memory** %MEMORY

  ; Code: movq 0x12e0(%rax), %rax	 RIP: 472e45	 Bytes: 7
  %loadMem_472e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e45 = call %struct.Memory* @routine_movq_0x12e0__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e45)
  store %struct.Memory* %call_472e45, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x40(%rbp)	 RIP: 472e4c	 Bytes: 4
  %loadMem_472e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e4c = call %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e4c)
  store %struct.Memory* %call_472e4c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472e50	 Bytes: 8
  %loadMem_472e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e50 = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e50)
  store %struct.Memory* %call_472e50, %struct.Memory** %MEMORY

  ; Code: movq 0x12e8(%rax), %rax	 RIP: 472e58	 Bytes: 7
  %loadMem_472e58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e58 = call %struct.Memory* @routine_movq_0x12e8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e58)
  store %struct.Memory* %call_472e58, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x48(%rbp)	 RIP: 472e5f	 Bytes: 4
  %loadMem_472e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e5f = call %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e5f)
  store %struct.Memory* %call_472e5f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_472eb4	 RIP: 472e63	 Bytes: 5
  %loadMem_472e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e63 = call %struct.Memory* @routine_jmpq_.L_472eb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e63, i64 81, i64 5)
  store %struct.Memory* %call_472e63, %struct.Memory** %MEMORY

  br label %block_.L_472eb4

  ; Code: .L_472e68:	 RIP: 472e68	 Bytes: 0
block_.L_472e68:

  ; Code: movq 0x6cc330, %rax	 RIP: 472e68	 Bytes: 8
  %loadMem_472e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e68 = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e68)
  store %struct.Memory* %call_472e68, %struct.Memory** %MEMORY

  ; Code: movq 0xca8(%rax), %rax	 RIP: 472e70	 Bytes: 7
  %loadMem_472e70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e70 = call %struct.Memory* @routine_movq_0xca8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e70)
  store %struct.Memory* %call_472e70, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x30(%rbp)	 RIP: 472e77	 Bytes: 4
  %loadMem_472e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e77 = call %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e77)
  store %struct.Memory* %call_472e77, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472e7b	 Bytes: 8
  %loadMem_472e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e7b = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e7b)
  store %struct.Memory* %call_472e7b, %struct.Memory** %MEMORY

  ; Code: movq 0xca0(%rax), %rax	 RIP: 472e83	 Bytes: 7
  %loadMem_472e83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e83 = call %struct.Memory* @routine_movq_0xca0__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e83)
  store %struct.Memory* %call_472e83, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x38(%rbp)	 RIP: 472e8a	 Bytes: 4
  %loadMem_472e8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e8a = call %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e8a)
  store %struct.Memory* %call_472e8a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472e8e	 Bytes: 8
  %loadMem_472e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e8e = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e8e)
  store %struct.Memory* %call_472e8e, %struct.Memory** %MEMORY

  ; Code: movq 0xc90(%rax), %rax	 RIP: 472e96	 Bytes: 7
  %loadMem_472e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e96 = call %struct.Memory* @routine_movq_0xc90__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e96)
  store %struct.Memory* %call_472e96, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x40(%rbp)	 RIP: 472e9d	 Bytes: 4
  %loadMem_472e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472e9d = call %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472e9d)
  store %struct.Memory* %call_472e9d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472ea1	 Bytes: 8
  %loadMem_472ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ea1 = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ea1)
  store %struct.Memory* %call_472ea1, %struct.Memory** %MEMORY

  ; Code: movq 0xc98(%rax), %rax	 RIP: 472ea9	 Bytes: 7
  %loadMem_472ea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ea9 = call %struct.Memory* @routine_movq_0xc98__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ea9)
  store %struct.Memory* %call_472ea9, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x48(%rbp)	 RIP: 472eb0	 Bytes: 4
  %loadMem_472eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472eb0 = call %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472eb0)
  store %struct.Memory* %call_472eb0, %struct.Memory** %MEMORY

  ; Code: .L_472eb4:	 RIP: 472eb4	 Bytes: 0
  br label %block_.L_472eb4
block_.L_472eb4:

  ; Code: jmpq .L_472f05	 RIP: 472eb4	 Bytes: 5
  %loadMem_472eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472eb4 = call %struct.Memory* @routine_jmpq_.L_472f05(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472eb4, i64 81, i64 5)
  store %struct.Memory* %call_472eb4, %struct.Memory** %MEMORY

  br label %block_.L_472f05

  ; Code: .L_472eb9:	 RIP: 472eb9	 Bytes: 0
block_.L_472eb9:

  ; Code: movq 0x6cc330, %rax	 RIP: 472eb9	 Bytes: 8
  %loadMem_472eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472eb9 = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472eb9)
  store %struct.Memory* %call_472eb9, %struct.Memory** %MEMORY

  ; Code: movq 0x658(%rax), %rax	 RIP: 472ec1	 Bytes: 7
  %loadMem_472ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ec1 = call %struct.Memory* @routine_movq_0x658__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ec1)
  store %struct.Memory* %call_472ec1, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x30(%rbp)	 RIP: 472ec8	 Bytes: 4
  %loadMem_472ec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ec8 = call %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ec8)
  store %struct.Memory* %call_472ec8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472ecc	 Bytes: 8
  %loadMem_472ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ecc = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ecc)
  store %struct.Memory* %call_472ecc, %struct.Memory** %MEMORY

  ; Code: movq 0x650(%rax), %rax	 RIP: 472ed4	 Bytes: 7
  %loadMem_472ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ed4 = call %struct.Memory* @routine_movq_0x650__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ed4)
  store %struct.Memory* %call_472ed4, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x38(%rbp)	 RIP: 472edb	 Bytes: 4
  %loadMem_472edb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472edb = call %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472edb)
  store %struct.Memory* %call_472edb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472edf	 Bytes: 8
  %loadMem_472edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472edf = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472edf)
  store %struct.Memory* %call_472edf, %struct.Memory** %MEMORY

  ; Code: movq 0x640(%rax), %rax	 RIP: 472ee7	 Bytes: 7
  %loadMem_472ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ee7 = call %struct.Memory* @routine_movq_0x640__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ee7)
  store %struct.Memory* %call_472ee7, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x40(%rbp)	 RIP: 472eee	 Bytes: 4
  %loadMem_472eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472eee = call %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472eee)
  store %struct.Memory* %call_472eee, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc330, %rax	 RIP: 472ef2	 Bytes: 8
  %loadMem_472ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ef2 = call %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ef2)
  store %struct.Memory* %call_472ef2, %struct.Memory** %MEMORY

  ; Code: movq 0x648(%rax), %rax	 RIP: 472efa	 Bytes: 7
  %loadMem_472efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472efa = call %struct.Memory* @routine_movq_0x648__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472efa)
  store %struct.Memory* %call_472efa, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x48(%rbp)	 RIP: 472f01	 Bytes: 4
  %loadMem_472f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f01 = call %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f01)
  store %struct.Memory* %call_472f01, %struct.Memory** %MEMORY

  ; Code: .L_472f05:	 RIP: 472f05	 Bytes: 0
  br label %block_.L_472f05
block_.L_472f05:

  ; Code: movq 0x6cb900, %rax	 RIP: 472f05	 Bytes: 8
  %loadMem_472f05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f05 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f05)
  store %struct.Memory* %call_472f05, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x1193c(%rax)	 RIP: 472f0d	 Bytes: 7
  %loadMem_472f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f0d = call %struct.Memory* @routine_cmpl__0x0__0x1193c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f0d)
  store %struct.Memory* %call_472f0d, %struct.Memory** %MEMORY

  ; Code: je .L_474a80	 RIP: 472f14	 Bytes: 6
  %loadMem_472f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f14 = call %struct.Memory* @routine_je_.L_474a80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f14, i8* %BRANCH_TAKEN, i64 7020, i64 6, i64 6)
  store %struct.Memory* %call_472f14, %struct.Memory** %MEMORY

  %loadBr_472f14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_472f14 = icmp eq i8 %loadBr_472f14, 1
  br i1 %cmpBr_472f14, label %block_.L_474a80, label %block_472f1a

block_472f1a:
  ; Code: xorl %eax, %eax	 RIP: 472f1a	 Bytes: 2
  %loadMem_472f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f1a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f1a)
  store %struct.Memory* %call_472f1a, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %ecx	 RIP: 472f1c	 Bytes: 5
  %loadMem_472f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f1c = call %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f1c)
  store %struct.Memory* %call_472f1c, %struct.Memory** %MEMORY

  ; Code: leaq -0x88(%rbp), %r9	 RIP: 472f21	 Bytes: 7
  %loadMem_472f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f21 = call %struct.Memory* @routine_leaq_MINUS0x88__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f21)
  store %struct.Memory* %call_472f21, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %edx	 RIP: 472f28	 Bytes: 5
  %loadMem_472f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f28 = call %struct.Memory* @routine_movl__0x4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f28)
  store %struct.Memory* %call_472f28, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 472f2d	 Bytes: 2
  %loadMem_472f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f2d = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f2d)
  store %struct.Memory* %call_472f2d, %struct.Memory** %MEMORY

  ; Code: leaq -0x6c(%rbp), %rdi	 RIP: 472f2f	 Bytes: 4
  %loadMem_472f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f2f = call %struct.Memory* @routine_leaq_MINUS0x6c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f2f)
  store %struct.Memory* %call_472f2f, %struct.Memory** %MEMORY

  ; Code: leaq -0x68(%rbp), %r8	 RIP: 472f33	 Bytes: 4
  %loadMem_472f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f33 = call %struct.Memory* @routine_leaq_MINUS0x68__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f33)
  store %struct.Memory* %call_472f33, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0xf0(%rbp)	 RIP: 472f37	 Bytes: 7
  %loadMem_472f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f37 = call %struct.Memory* @routine_movq__rdi__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f37)
  store %struct.Memory* %call_472f37, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rdi	 RIP: 472f3e	 Bytes: 3
  %loadMem_472f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f3e = call %struct.Memory* @routine_movq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f3e)
  store %struct.Memory* %call_472f3e, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0xf8(%rbp)	 RIP: 472f41	 Bytes: 7
  %loadMem_472f41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f41 = call %struct.Memory* @routine_movq__rsi__MINUS0xf8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f41)
  store %struct.Memory* %call_472f41, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 472f48	 Bytes: 2
  %loadMem_472f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f48 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f48)
  store %struct.Memory* %call_472f48, %struct.Memory** %MEMORY

  ; Code: movq -0xf8(%rbp), %rdx	 RIP: 472f4a	 Bytes: 7
  %loadMem_472f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f4a = call %struct.Memory* @routine_movq_MINUS0xf8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f4a)
  store %struct.Memory* %call_472f4a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xfc(%rbp)	 RIP: 472f51	 Bytes: 6
  %loadMem_472f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f51 = call %struct.Memory* @routine_movl__eax__MINUS0xfc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f51)
  store %struct.Memory* %call_472f51, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x100(%rbp)	 RIP: 472f57	 Bytes: 6
  %loadMem_472f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f57 = call %struct.Memory* @routine_movl__ecx__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f57)
  store %struct.Memory* %call_472f57, %struct.Memory** %MEMORY

  ; Code: movq %r9, -0x108(%rbp)	 RIP: 472f5d	 Bytes: 7
  %loadMem_472f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f5d = call %struct.Memory* @routine_movq__r9__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f5d)
  store %struct.Memory* %call_472f5d, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 472f64	 Bytes: 5
  %loadMem1_472f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_472f64 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_472f64, i64 -466676, i64 5, i64 5)
  store %struct.Memory* %call1_472f64, %struct.Memory** %MEMORY

  %loadMem2_472f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_472f64 = load i64, i64* %3
  %call2_472f64 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_472f64, %struct.Memory* %loadMem2_472f64)
  store %struct.Memory* %call2_472f64, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdx	 RIP: 472f69	 Bytes: 7
  %loadMem_472f69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f69 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f69)
  store %struct.Memory* %call_472f69, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 472f70	 Bytes: 3
  %loadMem_472f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f70 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f70)
  store %struct.Memory* %call_472f70, %struct.Memory** %MEMORY

  ; Code: movl -0xfc(%rbp), %esi	 RIP: 472f73	 Bytes: 6
  %loadMem_472f73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f73 = call %struct.Memory* @routine_movl_MINUS0xfc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f73)
  store %struct.Memory* %call_472f73, %struct.Memory** %MEMORY

  ; Code: movq -0xf8(%rbp), %rdx	 RIP: 472f79	 Bytes: 7
  %loadMem_472f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f79 = call %struct.Memory* @routine_movq_MINUS0xf8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f79)
  store %struct.Memory* %call_472f79, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 472f80	 Bytes: 5
  %loadMem1_472f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_472f80 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_472f80, i64 -466704, i64 5, i64 5)
  store %struct.Memory* %call1_472f80, %struct.Memory** %MEMORY

  %loadMem2_472f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_472f80 = load i64, i64* %3
  %call2_472f80 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_472f80, %struct.Memory* %loadMem2_472f80)
  store %struct.Memory* %call2_472f80, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 472f85	 Bytes: 8
  %loadMem_472f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f85 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f85)
  store %struct.Memory* %call_472f85, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rdx), %edi	 RIP: 472f8d	 Bytes: 3
  %loadMem_472f8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f8d = call %struct.Memory* @routine_movl_0xc__rdx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f8d)
  store %struct.Memory* %call_472f8d, %struct.Memory** %MEMORY

  ; Code: movl -0xfc(%rbp), %esi	 RIP: 472f90	 Bytes: 6
  %loadMem_472f90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f90 = call %struct.Memory* @routine_movl_MINUS0xfc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f90)
  store %struct.Memory* %call_472f90, %struct.Memory** %MEMORY

  ; Code: movl -0xfc(%rbp), %edx	 RIP: 472f96	 Bytes: 6
  %loadMem_472f96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f96 = call %struct.Memory* @routine_movl_MINUS0xfc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f96)
  store %struct.Memory* %call_472f96, %struct.Memory** %MEMORY

  ; Code: movl -0x100(%rbp), %ecx	 RIP: 472f9c	 Bytes: 6
  %loadMem_472f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472f9c = call %struct.Memory* @routine_movl_MINUS0x100__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472f9c)
  store %struct.Memory* %call_472f9c, %struct.Memory** %MEMORY

  ; Code: movl -0xfc(%rbp), %r8d	 RIP: 472fa2	 Bytes: 7
  %loadMem_472fa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fa2 = call %struct.Memory* @routine_movl_MINUS0xfc__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fa2)
  store %struct.Memory* %call_472fa2, %struct.Memory** %MEMORY

  ; Code: movq -0x108(%rbp), %r9	 RIP: 472fa9	 Bytes: 7
  %loadMem_472fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fa9 = call %struct.Memory* @routine_movq_MINUS0x108__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fa9)
  store %struct.Memory* %call_472fa9, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 472fb0	 Bytes: 5
  %loadMem1_472fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_472fb0 = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_472fb0, i64 -163200, i64 5, i64 5)
  store %struct.Memory* %call1_472fb0, %struct.Memory** %MEMORY

  %loadMem2_472fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_472fb0 = load i64, i64* %3
  %call2_472fb0 = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_472fb0, %struct.Memory* %loadMem2_472fb0)
  store %struct.Memory* %call2_472fb0, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 472fb5	 Bytes: 2
  %loadMem_472fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fb5 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fb5)
  store %struct.Memory* %call_472fb5, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %r8d	 RIP: 472fb7	 Bytes: 6
  %loadMem_472fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fb7 = call %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fb7)
  store %struct.Memory* %call_472fb7, %struct.Memory** %MEMORY

  ; Code: leaq -0xa0(%rbp), %r9	 RIP: 472fbd	 Bytes: 7
  %loadMem_472fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fbd = call %struct.Memory* @routine_leaq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fbd)
  store %struct.Memory* %call_472fbd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r10	 RIP: 472fc4	 Bytes: 8
  %loadMem_472fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fc4 = call %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fc4)
  store %struct.Memory* %call_472fc4, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%r10), %edi	 RIP: 472fcc	 Bytes: 4
  %loadMem_472fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fcc = call %struct.Memory* @routine_movl_0xc__r10____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fcc)
  store %struct.Memory* %call_472fcc, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 472fd0	 Bytes: 2
  %loadMem_472fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fd0 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fd0)
  store %struct.Memory* %call_472fd0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 472fd2	 Bytes: 2
  %loadMem_472fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fd2 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fd2)
  store %struct.Memory* %call_472fd2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 472fd4	 Bytes: 2
  %loadMem_472fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fd4 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fd4)
  store %struct.Memory* %call_472fd4, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 472fd6	 Bytes: 5
  %loadMem1_472fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_472fd6 = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_472fd6, i64 -163238, i64 5, i64 5)
  store %struct.Memory* %call1_472fd6, %struct.Memory** %MEMORY

  %loadMem2_472fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_472fd6 = load i64, i64* %3
  %call2_472fd6 = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_472fd6, %struct.Memory* %loadMem2_472fd6)
  store %struct.Memory* %call2_472fd6, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 472fdb	 Bytes: 2
  %loadMem_472fdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fdb = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fdb)
  store %struct.Memory* %call_472fdb, %struct.Memory** %MEMORY

  ; Code: movl $0x10, %ecx	 RIP: 472fdd	 Bytes: 5
  %loadMem_472fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fdd = call %struct.Memory* @routine_movl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fdd)
  store %struct.Memory* %call_472fdd, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %r8d	 RIP: 472fe2	 Bytes: 6
  %loadMem_472fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fe2 = call %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fe2)
  store %struct.Memory* %call_472fe2, %struct.Memory** %MEMORY

  ; Code: leaq -0xd0(%rbp), %r9	 RIP: 472fe8	 Bytes: 7
  %loadMem_472fe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fe8 = call %struct.Memory* @routine_leaq_MINUS0xd0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fe8)
  store %struct.Memory* %call_472fe8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r10	 RIP: 472fef	 Bytes: 8
  %loadMem_472fef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472fef = call %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472fef)
  store %struct.Memory* %call_472fef, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%r10), %edi	 RIP: 472ff7	 Bytes: 4
  %loadMem_472ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ff7 = call %struct.Memory* @routine_movl_0xc__r10____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ff7)
  store %struct.Memory* %call_472ff7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 472ffb	 Bytes: 2
  %loadMem_472ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ffb = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ffb)
  store %struct.Memory* %call_472ffb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 472ffd	 Bytes: 2
  %loadMem_472ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_472ffd = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_472ffd)
  store %struct.Memory* %call_472ffd, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 472fff	 Bytes: 5
  %loadMem1_472fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_472fff = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_472fff, i64 -163279, i64 5, i64 5)
  store %struct.Memory* %call1_472fff, %struct.Memory** %MEMORY

  %loadMem2_472fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_472fff = load i64, i64* %3
  %call2_472fff = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_472fff, %struct.Memory* %loadMem2_472fff)
  store %struct.Memory* %call2_472fff, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 473004	 Bytes: 2
  %loadMem_473004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473004 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473004)
  store %struct.Memory* %call_473004, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %ecx	 RIP: 473006	 Bytes: 5
  %loadMem_473006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473006 = call %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473006)
  store %struct.Memory* %call_473006, %struct.Memory** %MEMORY

  ; Code: leaq -0xb8(%rbp), %r9	 RIP: 47300b	 Bytes: 7
  %loadMem_47300b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47300b = call %struct.Memory* @routine_leaq_MINUS0xb8__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47300b)
  store %struct.Memory* %call_47300b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r10	 RIP: 473012	 Bytes: 8
  %loadMem_473012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473012 = call %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473012)
  store %struct.Memory* %call_473012, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%r10), %edi	 RIP: 47301a	 Bytes: 4
  %loadMem_47301a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47301a = call %struct.Memory* @routine_movl_0xc__r10____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47301a)
  store %struct.Memory* %call_47301a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 47301e	 Bytes: 2
  %loadMem_47301e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47301e = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47301e)
  store %struct.Memory* %call_47301e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 473020	 Bytes: 2
  %loadMem_473020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473020 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473020)
  store %struct.Memory* %call_473020, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x10c(%rbp)	 RIP: 473022	 Bytes: 6
  %loadMem_473022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473022 = call %struct.Memory* @routine_movl__ecx__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473022)
  store %struct.Memory* %call_473022, %struct.Memory** %MEMORY

  ; Code: movl -0x10c(%rbp), %r8d	 RIP: 473028	 Bytes: 7
  %loadMem_473028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473028 = call %struct.Memory* @routine_movl_MINUS0x10c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473028)
  store %struct.Memory* %call_473028, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 47302f	 Bytes: 5
  %loadMem1_47302f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47302f = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47302f, i64 -163327, i64 5, i64 5)
  store %struct.Memory* %call1_47302f, %struct.Memory** %MEMORY

  %loadMem2_47302f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47302f = load i64, i64* %3
  %call2_47302f = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_47302f, %struct.Memory* %loadMem2_47302f)
  store %struct.Memory* %call2_47302f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r9	 RIP: 473034	 Bytes: 8
  %loadMem_473034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473034 = call %struct.Memory* @routine_movq_0x6cb900___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473034)
  store %struct.Memory* %call_473034, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11ad0(%r9)	 RIP: 47303c	 Bytes: 8
  %loadMem_47303c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47303c = call %struct.Memory* @routine_cmpl__0x0__0x11ad0__r9_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47303c)
  store %struct.Memory* %call_47303c, %struct.Memory** %MEMORY

  ; Code: jne .L_473323	 RIP: 473044	 Bytes: 6
  %loadMem_473044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473044 = call %struct.Memory* @routine_jne_.L_473323(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473044, i8* %BRANCH_TAKEN, i64 735, i64 6, i64 6)
  store %struct.Memory* %call_473044, %struct.Memory** %MEMORY

  %loadBr_473044 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473044 = icmp eq i8 %loadBr_473044, 1
  br i1 %cmpBr_473044, label %block_.L_473323, label %block_47304a

block_47304a:
  ; Code: cmpl $0x0, -0x88(%rbp)	 RIP: 47304a	 Bytes: 7
  %loadMem_47304a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47304a = call %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47304a)
  store %struct.Memory* %call_47304a, %struct.Memory** %MEMORY

  ; Code: je .L_473084	 RIP: 473051	 Bytes: 6
  %loadMem_473051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473051 = call %struct.Memory* @routine_je_.L_473084(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473051, i8* %BRANCH_TAKEN, i64 51, i64 6, i64 6)
  store %struct.Memory* %call_473051, %struct.Memory** %MEMORY

  %loadBr_473051 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473051 = icmp eq i8 %loadBr_473051, 1
  br i1 %cmpBr_473051, label %block_.L_473084, label %block_473057

block_473057:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473057	 Bytes: 8
  %loadMem_473057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473057 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473057)
  store %struct.Memory* %call_473057, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47305f	 Bytes: 7
  %loadMem_47305f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47305f = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47305f)
  store %struct.Memory* %call_47305f, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473066	 Bytes: 3
  %loadMem_473066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473066 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473066)
  store %struct.Memory* %call_473066, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473069	 Bytes: 4
  %loadMem_473069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473069 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473069)
  store %struct.Memory* %call_473069, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47306d	 Bytes: 4
  %loadMem_47306d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47306d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47306d)
  store %struct.Memory* %call_47306d, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473071	 Bytes: 4
  %loadMem_473071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473071 = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473071)
  store %struct.Memory* %call_473071, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473075	 Bytes: 4
  %loadMem_473075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473075 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473075)
  store %struct.Memory* %call_473075, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x110(%rbp)	 RIP: 473079	 Bytes: 6
  %loadMem_473079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473079 = call %struct.Memory* @routine_movl__edx__MINUS0x110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473079)
  store %struct.Memory* %call_473079, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473094	 RIP: 47307f	 Bytes: 5
  %loadMem_47307f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47307f = call %struct.Memory* @routine_jmpq_.L_473094(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47307f, i64 21, i64 5)
  store %struct.Memory* %call_47307f, %struct.Memory** %MEMORY

  br label %block_.L_473094

  ; Code: .L_473084:	 RIP: 473084	 Bytes: 0
block_.L_473084:

  ; Code: movl $0xffffffff, %eax	 RIP: 473084	 Bytes: 5
  %loadMem_473084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473084 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473084)
  store %struct.Memory* %call_473084, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x110(%rbp)	 RIP: 473089	 Bytes: 6
  %loadMem_473089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473089 = call %struct.Memory* @routine_movl__eax__MINUS0x110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473089)
  store %struct.Memory* %call_473089, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473094	 RIP: 47308f	 Bytes: 5
  %loadMem_47308f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47308f = call %struct.Memory* @routine_jmpq_.L_473094(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47308f, i64 5, i64 5)
  store %struct.Memory* %call_47308f, %struct.Memory** %MEMORY

  br label %block_.L_473094

  ; Code: .L_473094:	 RIP: 473094	 Bytes: 0
block_.L_473094:

  ; Code: movl -0x110(%rbp), %eax	 RIP: 473094	 Bytes: 6
  %loadMem_473094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473094 = call %struct.Memory* @routine_movl_MINUS0x110__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473094)
  store %struct.Memory* %call_473094, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 47309a	 Bytes: 3
  %loadMem_47309a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47309a = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47309a)
  store %struct.Memory* %call_47309a, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x52(%rbp)	 RIP: 47309d	 Bytes: 4
  %loadMem_47309d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47309d = call %struct.Memory* @routine_movw__cx__MINUS0x52__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47309d)
  store %struct.Memory* %call_47309d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xa0(%rbp)	 RIP: 4730a1	 Bytes: 7
  %loadMem_4730a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730a1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730a1)
  store %struct.Memory* %call_4730a1, %struct.Memory** %MEMORY

  ; Code: je .L_4730e1	 RIP: 4730a8	 Bytes: 6
  %loadMem_4730a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730a8 = call %struct.Memory* @routine_je_.L_4730e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730a8, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_4730a8, %struct.Memory** %MEMORY

  %loadBr_4730a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4730a8 = icmp eq i8 %loadBr_4730a8, 1
  br i1 %cmpBr_4730a8, label %block_.L_4730e1, label %block_4730ae

block_4730ae:
  ; Code: movq 0x70fcf0, %rax	 RIP: 4730ae	 Bytes: 8
  %loadMem_4730ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730ae = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730ae)
  store %struct.Memory* %call_4730ae, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4730b6	 Bytes: 7
  %loadMem_4730b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730b6 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730b6)
  store %struct.Memory* %call_4730b6, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4730bd	 Bytes: 3
  %loadMem_4730bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730bd = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730bd)
  store %struct.Memory* %call_4730bd, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 4730c0	 Bytes: 7
  %loadMem_4730c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730c0 = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730c0)
  store %struct.Memory* %call_4730c0, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4730c7	 Bytes: 4
  %loadMem_4730c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730c7 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730c7)
  store %struct.Memory* %call_4730c7, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 4730cb	 Bytes: 7
  %loadMem_4730cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730cb = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730cb)
  store %struct.Memory* %call_4730cb, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4730d2	 Bytes: 4
  %loadMem_4730d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730d2 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730d2)
  store %struct.Memory* %call_4730d2, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x114(%rbp)	 RIP: 4730d6	 Bytes: 6
  %loadMem_4730d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730d6 = call %struct.Memory* @routine_movl__edx__MINUS0x114__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730d6)
  store %struct.Memory* %call_4730d6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4730f1	 RIP: 4730dc	 Bytes: 5
  %loadMem_4730dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730dc = call %struct.Memory* @routine_jmpq_.L_4730f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730dc, i64 21, i64 5)
  store %struct.Memory* %call_4730dc, %struct.Memory** %MEMORY

  br label %block_.L_4730f1

  ; Code: .L_4730e1:	 RIP: 4730e1	 Bytes: 0
block_.L_4730e1:

  ; Code: movl $0xffffffff, %eax	 RIP: 4730e1	 Bytes: 5
  %loadMem_4730e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730e1 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730e1)
  store %struct.Memory* %call_4730e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x114(%rbp)	 RIP: 4730e6	 Bytes: 6
  %loadMem_4730e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730e6 = call %struct.Memory* @routine_movl__eax__MINUS0x114__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730e6)
  store %struct.Memory* %call_4730e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4730f1	 RIP: 4730ec	 Bytes: 5
  %loadMem_4730ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730ec = call %struct.Memory* @routine_jmpq_.L_4730f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730ec, i64 5, i64 5)
  store %struct.Memory* %call_4730ec, %struct.Memory** %MEMORY

  br label %block_.L_4730f1

  ; Code: .L_4730f1:	 RIP: 4730f1	 Bytes: 0
block_.L_4730f1:

  ; Code: movl -0x114(%rbp), %eax	 RIP: 4730f1	 Bytes: 6
  %loadMem_4730f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730f1 = call %struct.Memory* @routine_movl_MINUS0x114__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730f1)
  store %struct.Memory* %call_4730f1, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4730f7	 Bytes: 3
  %loadMem_4730f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730f7 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730f7)
  store %struct.Memory* %call_4730f7, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x54(%rbp)	 RIP: 4730fa	 Bytes: 4
  %loadMem_4730fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730fa = call %struct.Memory* @routine_movw__cx__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730fa)
  store %struct.Memory* %call_4730fa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xb8(%rbp)	 RIP: 4730fe	 Bytes: 7
  %loadMem_4730fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4730fe = call %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4730fe)
  store %struct.Memory* %call_4730fe, %struct.Memory** %MEMORY

  ; Code: je .L_47313e	 RIP: 473105	 Bytes: 6
  %loadMem_473105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473105 = call %struct.Memory* @routine_je_.L_47313e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473105, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_473105, %struct.Memory** %MEMORY

  %loadBr_473105 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473105 = icmp eq i8 %loadBr_473105, 1
  br i1 %cmpBr_473105, label %block_.L_47313e, label %block_47310b

block_47310b:
  ; Code: movq 0x70fcf0, %rax	 RIP: 47310b	 Bytes: 8
  %loadMem_47310b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47310b = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47310b)
  store %struct.Memory* %call_47310b, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473113	 Bytes: 7
  %loadMem_473113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473113 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473113)
  store %struct.Memory* %call_473113, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47311a	 Bytes: 3
  %loadMem_47311a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47311a = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47311a)
  store %struct.Memory* %call_47311a, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 47311d	 Bytes: 7
  %loadMem_47311d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47311d = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47311d)
  store %struct.Memory* %call_47311d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473124	 Bytes: 4
  %loadMem_473124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473124 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473124)
  store %struct.Memory* %call_473124, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473128	 Bytes: 7
  %loadMem_473128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473128 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473128)
  store %struct.Memory* %call_473128, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47312f	 Bytes: 4
  %loadMem_47312f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47312f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47312f)
  store %struct.Memory* %call_47312f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x118(%rbp)	 RIP: 473133	 Bytes: 6
  %loadMem_473133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473133 = call %struct.Memory* @routine_movl__edx__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473133)
  store %struct.Memory* %call_473133, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47314e	 RIP: 473139	 Bytes: 5
  %loadMem_473139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473139 = call %struct.Memory* @routine_jmpq_.L_47314e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473139, i64 21, i64 5)
  store %struct.Memory* %call_473139, %struct.Memory** %MEMORY

  br label %block_.L_47314e

  ; Code: .L_47313e:	 RIP: 47313e	 Bytes: 0
block_.L_47313e:

  ; Code: movl $0xffffffff, %eax	 RIP: 47313e	 Bytes: 5
  %loadMem_47313e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47313e = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47313e)
  store %struct.Memory* %call_47313e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x118(%rbp)	 RIP: 473143	 Bytes: 6
  %loadMem_473143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473143 = call %struct.Memory* @routine_movl__eax__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473143)
  store %struct.Memory* %call_473143, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47314e	 RIP: 473149	 Bytes: 5
  %loadMem_473149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473149 = call %struct.Memory* @routine_jmpq_.L_47314e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473149, i64 5, i64 5)
  store %struct.Memory* %call_473149, %struct.Memory** %MEMORY

  br label %block_.L_47314e

  ; Code: .L_47314e:	 RIP: 47314e	 Bytes: 0
block_.L_47314e:

  ; Code: movl -0x118(%rbp), %eax	 RIP: 47314e	 Bytes: 6
  %loadMem_47314e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47314e = call %struct.Memory* @routine_movl_MINUS0x118__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47314e)
  store %struct.Memory* %call_47314e, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473154	 Bytes: 3
  %loadMem_473154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473154 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473154)
  store %struct.Memory* %call_473154, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x56(%rbp)	 RIP: 473157	 Bytes: 4
  %loadMem_473157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473157 = call %struct.Memory* @routine_movw__cx__MINUS0x56__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473157)
  store %struct.Memory* %call_473157, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xd0(%rbp)	 RIP: 47315b	 Bytes: 7
  %loadMem_47315b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47315b = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47315b)
  store %struct.Memory* %call_47315b, %struct.Memory** %MEMORY

  ; Code: je .L_47319b	 RIP: 473162	 Bytes: 6
  %loadMem_473162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473162 = call %struct.Memory* @routine_je_.L_47319b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473162, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_473162, %struct.Memory** %MEMORY

  %loadBr_473162 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473162 = icmp eq i8 %loadBr_473162, 1
  br i1 %cmpBr_473162, label %block_.L_47319b, label %block_473168

block_473168:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473168	 Bytes: 8
  %loadMem_473168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473168 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473168)
  store %struct.Memory* %call_473168, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473170	 Bytes: 7
  %loadMem_473170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473170 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473170)
  store %struct.Memory* %call_473170, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473177	 Bytes: 3
  %loadMem_473177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473177 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473177)
  store %struct.Memory* %call_473177, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 47317a	 Bytes: 7
  %loadMem_47317a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47317a = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47317a)
  store %struct.Memory* %call_47317a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473181	 Bytes: 4
  %loadMem_473181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473181 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473181)
  store %struct.Memory* %call_473181, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473185	 Bytes: 7
  %loadMem_473185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473185 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473185)
  store %struct.Memory* %call_473185, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47318c	 Bytes: 4
  %loadMem_47318c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47318c = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47318c)
  store %struct.Memory* %call_47318c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x11c(%rbp)	 RIP: 473190	 Bytes: 6
  %loadMem_473190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473190 = call %struct.Memory* @routine_movl__edx__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473190)
  store %struct.Memory* %call_473190, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4731a5	 RIP: 473196	 Bytes: 5
  %loadMem_473196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473196 = call %struct.Memory* @routine_jmpq_.L_4731a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473196, i64 15, i64 5)
  store %struct.Memory* %call_473196, %struct.Memory** %MEMORY

  br label %block_.L_4731a5

  ; Code: .L_47319b:	 RIP: 47319b	 Bytes: 0
block_.L_47319b:

  ; Code: movswl -0x56(%rbp), %eax	 RIP: 47319b	 Bytes: 4
  %loadMem_47319b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47319b = call %struct.Memory* @routine_movswl_MINUS0x56__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47319b)
  store %struct.Memory* %call_47319b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x11c(%rbp)	 RIP: 47319f	 Bytes: 6
  %loadMem_47319f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47319f = call %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47319f)
  store %struct.Memory* %call_47319f, %struct.Memory** %MEMORY

  ; Code: .L_4731a5:	 RIP: 4731a5	 Bytes: 0
  br label %block_.L_4731a5
block_.L_4731a5:

  ; Code: movl -0x11c(%rbp), %eax	 RIP: 4731a5	 Bytes: 6
  %loadMem_4731a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731a5 = call %struct.Memory* @routine_movl_MINUS0x11c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731a5)
  store %struct.Memory* %call_4731a5, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4731ab	 Bytes: 3
  %loadMem_4731ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731ab = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731ab)
  store %struct.Memory* %call_4731ab, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x58(%rbp)	 RIP: 4731ae	 Bytes: 4
  %loadMem_4731ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731ae = call %struct.Memory* @routine_movw__cx__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731ae)
  store %struct.Memory* %call_4731ae, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x88(%rbp)	 RIP: 4731b2	 Bytes: 7
  %loadMem_4731b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731b2 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731b2)
  store %struct.Memory* %call_4731b2, %struct.Memory** %MEMORY

  ; Code: je .L_4731ed	 RIP: 4731b9	 Bytes: 6
  %loadMem_4731b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731b9 = call %struct.Memory* @routine_je_.L_4731ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731b9, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_4731b9, %struct.Memory** %MEMORY

  %loadBr_4731b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4731b9 = icmp eq i8 %loadBr_4731b9, 1
  br i1 %cmpBr_4731b9, label %block_.L_4731ed, label %block_4731bf

block_4731bf:
  ; Code: movq 0x70fcf0, %rax	 RIP: 4731bf	 Bytes: 8
  %loadMem_4731bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731bf = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731bf)
  store %struct.Memory* %call_4731bf, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4731c7	 Bytes: 7
  %loadMem_4731c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731c7 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731c7)
  store %struct.Memory* %call_4731c7, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4731ce	 Bytes: 4
  %loadMem_4731ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731ce = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731ce)
  store %struct.Memory* %call_4731ce, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 4731d2	 Bytes: 4
  %loadMem_4731d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731d2 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731d2)
  store %struct.Memory* %call_4731d2, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4731d6	 Bytes: 4
  %loadMem_4731d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731d6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731d6)
  store %struct.Memory* %call_4731d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 4731da	 Bytes: 4
  %loadMem_4731da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731da = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731da)
  store %struct.Memory* %call_4731da, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4731de	 Bytes: 4
  %loadMem_4731de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731de = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731de)
  store %struct.Memory* %call_4731de, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x120(%rbp)	 RIP: 4731e2	 Bytes: 6
  %loadMem_4731e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731e2 = call %struct.Memory* @routine_movl__edx__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731e2)
  store %struct.Memory* %call_4731e2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4731fd	 RIP: 4731e8	 Bytes: 5
  %loadMem_4731e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731e8 = call %struct.Memory* @routine_jmpq_.L_4731fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731e8, i64 21, i64 5)
  store %struct.Memory* %call_4731e8, %struct.Memory** %MEMORY

  br label %block_.L_4731fd

  ; Code: .L_4731ed:	 RIP: 4731ed	 Bytes: 0
block_.L_4731ed:

  ; Code: movl $0xffffffff, %eax	 RIP: 4731ed	 Bytes: 5
  %loadMem_4731ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731ed = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731ed)
  store %struct.Memory* %call_4731ed, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x120(%rbp)	 RIP: 4731f2	 Bytes: 6
  %loadMem_4731f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731f2 = call %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731f2)
  store %struct.Memory* %call_4731f2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4731fd	 RIP: 4731f8	 Bytes: 5
  %loadMem_4731f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731f8 = call %struct.Memory* @routine_jmpq_.L_4731fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731f8, i64 5, i64 5)
  store %struct.Memory* %call_4731f8, %struct.Memory** %MEMORY

  br label %block_.L_4731fd

  ; Code: .L_4731fd:	 RIP: 4731fd	 Bytes: 0
block_.L_4731fd:

  ; Code: movl -0x120(%rbp), %eax	 RIP: 4731fd	 Bytes: 6
  %loadMem_4731fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4731fd = call %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4731fd)
  store %struct.Memory* %call_4731fd, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473203	 Bytes: 3
  %loadMem_473203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473203 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473203)
  store %struct.Memory* %call_473203, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5a(%rbp)	 RIP: 473206	 Bytes: 4
  %loadMem_473206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473206 = call %struct.Memory* @routine_movw__cx__MINUS0x5a__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473206)
  store %struct.Memory* %call_473206, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xa0(%rbp)	 RIP: 47320a	 Bytes: 7
  %loadMem_47320a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47320a = call %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47320a)
  store %struct.Memory* %call_47320a, %struct.Memory** %MEMORY

  ; Code: je .L_47324b	 RIP: 473211	 Bytes: 6
  %loadMem_473211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473211 = call %struct.Memory* @routine_je_.L_47324b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473211, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_473211, %struct.Memory** %MEMORY

  %loadBr_473211 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473211 = icmp eq i8 %loadBr_473211, 1
  br i1 %cmpBr_473211, label %block_.L_47324b, label %block_473217

block_473217:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473217	 Bytes: 8
  %loadMem_473217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473217 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473217)
  store %struct.Memory* %call_473217, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47321f	 Bytes: 7
  %loadMem_47321f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47321f = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47321f)
  store %struct.Memory* %call_47321f, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473226	 Bytes: 4
  %loadMem_473226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473226 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473226)
  store %struct.Memory* %call_473226, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 47322a	 Bytes: 7
  %loadMem_47322a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47322a = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47322a)
  store %struct.Memory* %call_47322a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473231	 Bytes: 4
  %loadMem_473231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473231 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473231)
  store %struct.Memory* %call_473231, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 473235	 Bytes: 7
  %loadMem_473235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473235 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473235)
  store %struct.Memory* %call_473235, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47323c	 Bytes: 4
  %loadMem_47323c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47323c = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47323c)
  store %struct.Memory* %call_47323c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x124(%rbp)	 RIP: 473240	 Bytes: 6
  %loadMem_473240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473240 = call %struct.Memory* @routine_movl__edx__MINUS0x124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473240)
  store %struct.Memory* %call_473240, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47325b	 RIP: 473246	 Bytes: 5
  %loadMem_473246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473246 = call %struct.Memory* @routine_jmpq_.L_47325b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473246, i64 21, i64 5)
  store %struct.Memory* %call_473246, %struct.Memory** %MEMORY

  br label %block_.L_47325b

  ; Code: .L_47324b:	 RIP: 47324b	 Bytes: 0
block_.L_47324b:

  ; Code: movl $0xffffffff, %eax	 RIP: 47324b	 Bytes: 5
  %loadMem_47324b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47324b = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47324b)
  store %struct.Memory* %call_47324b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x124(%rbp)	 RIP: 473250	 Bytes: 6
  %loadMem_473250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473250 = call %struct.Memory* @routine_movl__eax__MINUS0x124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473250)
  store %struct.Memory* %call_473250, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47325b	 RIP: 473256	 Bytes: 5
  %loadMem_473256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473256 = call %struct.Memory* @routine_jmpq_.L_47325b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473256, i64 5, i64 5)
  store %struct.Memory* %call_473256, %struct.Memory** %MEMORY

  br label %block_.L_47325b

  ; Code: .L_47325b:	 RIP: 47325b	 Bytes: 0
block_.L_47325b:

  ; Code: movl -0x124(%rbp), %eax	 RIP: 47325b	 Bytes: 6
  %loadMem_47325b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47325b = call %struct.Memory* @routine_movl_MINUS0x124__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47325b)
  store %struct.Memory* %call_47325b, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473261	 Bytes: 3
  %loadMem_473261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473261 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473261)
  store %struct.Memory* %call_473261, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5c(%rbp)	 RIP: 473264	 Bytes: 4
  %loadMem_473264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473264 = call %struct.Memory* @routine_movw__cx__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473264)
  store %struct.Memory* %call_473264, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xb8(%rbp)	 RIP: 473268	 Bytes: 7
  %loadMem_473268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473268 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473268)
  store %struct.Memory* %call_473268, %struct.Memory** %MEMORY

  ; Code: je .L_4732a9	 RIP: 47326f	 Bytes: 6
  %loadMem_47326f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47326f = call %struct.Memory* @routine_je_.L_4732a9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47326f, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_47326f, %struct.Memory** %MEMORY

  %loadBr_47326f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47326f = icmp eq i8 %loadBr_47326f, 1
  br i1 %cmpBr_47326f, label %block_.L_4732a9, label %block_473275

block_473275:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473275	 Bytes: 8
  %loadMem_473275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473275 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473275)
  store %struct.Memory* %call_473275, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47327d	 Bytes: 7
  %loadMem_47327d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47327d = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47327d)
  store %struct.Memory* %call_47327d, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473284	 Bytes: 4
  %loadMem_473284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473284 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473284)
  store %struct.Memory* %call_473284, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 473288	 Bytes: 7
  %loadMem_473288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473288 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473288)
  store %struct.Memory* %call_473288, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47328f	 Bytes: 4
  %loadMem_47328f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47328f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47328f)
  store %struct.Memory* %call_47328f, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473293	 Bytes: 7
  %loadMem_473293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473293 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473293)
  store %struct.Memory* %call_473293, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47329a	 Bytes: 4
  %loadMem_47329a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47329a = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47329a)
  store %struct.Memory* %call_47329a, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x128(%rbp)	 RIP: 47329e	 Bytes: 6
  %loadMem_47329e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47329e = call %struct.Memory* @routine_movl__edx__MINUS0x128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47329e)
  store %struct.Memory* %call_47329e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4732b9	 RIP: 4732a4	 Bytes: 5
  %loadMem_4732a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732a4 = call %struct.Memory* @routine_jmpq_.L_4732b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732a4, i64 21, i64 5)
  store %struct.Memory* %call_4732a4, %struct.Memory** %MEMORY

  br label %block_.L_4732b9

  ; Code: .L_4732a9:	 RIP: 4732a9	 Bytes: 0
block_.L_4732a9:

  ; Code: movl $0xffffffff, %eax	 RIP: 4732a9	 Bytes: 5
  %loadMem_4732a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732a9 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732a9)
  store %struct.Memory* %call_4732a9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x128(%rbp)	 RIP: 4732ae	 Bytes: 6
  %loadMem_4732ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732ae = call %struct.Memory* @routine_movl__eax__MINUS0x128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732ae)
  store %struct.Memory* %call_4732ae, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4732b9	 RIP: 4732b4	 Bytes: 5
  %loadMem_4732b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732b4 = call %struct.Memory* @routine_jmpq_.L_4732b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732b4, i64 5, i64 5)
  store %struct.Memory* %call_4732b4, %struct.Memory** %MEMORY

  br label %block_.L_4732b9

  ; Code: .L_4732b9:	 RIP: 4732b9	 Bytes: 0
block_.L_4732b9:

  ; Code: movl -0x128(%rbp), %eax	 RIP: 4732b9	 Bytes: 6
  %loadMem_4732b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732b9 = call %struct.Memory* @routine_movl_MINUS0x128__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732b9)
  store %struct.Memory* %call_4732b9, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4732bf	 Bytes: 3
  %loadMem_4732bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732bf = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732bf)
  store %struct.Memory* %call_4732bf, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5e(%rbp)	 RIP: 4732c2	 Bytes: 4
  %loadMem_4732c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732c2 = call %struct.Memory* @routine_movw__cx__MINUS0x5e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732c2)
  store %struct.Memory* %call_4732c2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xd0(%rbp)	 RIP: 4732c6	 Bytes: 7
  %loadMem_4732c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732c6 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732c6)
  store %struct.Memory* %call_4732c6, %struct.Memory** %MEMORY

  ; Code: je .L_473307	 RIP: 4732cd	 Bytes: 6
  %loadMem_4732cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732cd = call %struct.Memory* @routine_je_.L_473307(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732cd, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_4732cd, %struct.Memory** %MEMORY

  %loadBr_4732cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4732cd = icmp eq i8 %loadBr_4732cd, 1
  br i1 %cmpBr_4732cd, label %block_.L_473307, label %block_4732d3

block_4732d3:
  ; Code: movq 0x70fcf0, %rax	 RIP: 4732d3	 Bytes: 8
  %loadMem_4732d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732d3 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732d3)
  store %struct.Memory* %call_4732d3, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4732db	 Bytes: 7
  %loadMem_4732db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732db = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732db)
  store %struct.Memory* %call_4732db, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4732e2	 Bytes: 4
  %loadMem_4732e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732e2 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732e2)
  store %struct.Memory* %call_4732e2, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 4732e6	 Bytes: 7
  %loadMem_4732e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732e6 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732e6)
  store %struct.Memory* %call_4732e6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4732ed	 Bytes: 4
  %loadMem_4732ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732ed = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732ed)
  store %struct.Memory* %call_4732ed, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 4732f1	 Bytes: 7
  %loadMem_4732f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732f1 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732f1)
  store %struct.Memory* %call_4732f1, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4732f8	 Bytes: 4
  %loadMem_4732f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732f8 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732f8)
  store %struct.Memory* %call_4732f8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x12c(%rbp)	 RIP: 4732fc	 Bytes: 6
  %loadMem_4732fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4732fc = call %struct.Memory* @routine_movl__edx__MINUS0x12c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4732fc)
  store %struct.Memory* %call_4732fc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473311	 RIP: 473302	 Bytes: 5
  %loadMem_473302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473302 = call %struct.Memory* @routine_jmpq_.L_473311(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473302, i64 15, i64 5)
  store %struct.Memory* %call_473302, %struct.Memory** %MEMORY

  br label %block_.L_473311

  ; Code: .L_473307:	 RIP: 473307	 Bytes: 0
block_.L_473307:

  ; Code: movswl -0x5e(%rbp), %eax	 RIP: 473307	 Bytes: 4
  %loadMem_473307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473307 = call %struct.Memory* @routine_movswl_MINUS0x5e__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473307)
  store %struct.Memory* %call_473307, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x12c(%rbp)	 RIP: 47330b	 Bytes: 6
  %loadMem_47330b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47330b = call %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47330b)
  store %struct.Memory* %call_47330b, %struct.Memory** %MEMORY

  ; Code: .L_473311:	 RIP: 473311	 Bytes: 0
  br label %block_.L_473311
block_.L_473311:

  ; Code: movl -0x12c(%rbp), %eax	 RIP: 473311	 Bytes: 6
  %loadMem_473311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473311 = call %struct.Memory* @routine_movl_MINUS0x12c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473311)
  store %struct.Memory* %call_473311, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473317	 Bytes: 3
  %loadMem_473317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473317 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473317)
  store %struct.Memory* %call_473317, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x60(%rbp)	 RIP: 47331a	 Bytes: 4
  %loadMem_47331a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47331a = call %struct.Memory* @routine_movw__cx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47331a)
  store %struct.Memory* %call_47331a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4742c6	 RIP: 47331e	 Bytes: 5
  %loadMem_47331e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47331e = call %struct.Memory* @routine_jmpq_.L_4742c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47331e, i64 4008, i64 5)
  store %struct.Memory* %call_47331e, %struct.Memory** %MEMORY

  br label %block_.L_4742c6

  ; Code: .L_473323:	 RIP: 473323	 Bytes: 0
block_.L_473323:

  ; Code: movq -0x50(%rbp), %rax	 RIP: 473323	 Bytes: 4
  %loadMem_473323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473323 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473323)
  store %struct.Memory* %call_473323, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473327	 Bytes: 7
  %loadMem_473327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473327 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473327)
  store %struct.Memory* %call_473327, %struct.Memory** %MEMORY

  ; Code: je .L_473afd	 RIP: 47332e	 Bytes: 6
  %loadMem_47332e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47332e = call %struct.Memory* @routine_je_.L_473afd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47332e, i8* %BRANCH_TAKEN, i64 1999, i64 6, i64 6)
  store %struct.Memory* %call_47332e, %struct.Memory** %MEMORY

  %loadBr_47332e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47332e = icmp eq i8 %loadBr_47332e, 1
  br i1 %cmpBr_47332e, label %block_.L_473afd, label %block_473334

block_473334:
  ; Code: cmpl $0x0, -0x88(%rbp)	 RIP: 473334	 Bytes: 7
  %loadMem_473334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473334 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473334)
  store %struct.Memory* %call_473334, %struct.Memory** %MEMORY

  ; Code: je .L_473402	 RIP: 47333b	 Bytes: 6
  %loadMem_47333b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47333b = call %struct.Memory* @routine_je_.L_473402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47333b, i8* %BRANCH_TAKEN, i64 199, i64 6, i64 6)
  store %struct.Memory* %call_47333b, %struct.Memory** %MEMORY

  %loadBr_47333b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47333b = icmp eq i8 %loadBr_47333b, 1
  br i1 %cmpBr_47333b, label %block_.L_473402, label %block_473341

block_473341:
  ; Code: movq 0x6cb900, %rax	 RIP: 473341	 Bytes: 8
  %loadMem_473341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473341 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473341)
  store %struct.Memory* %call_473341, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473349	 Bytes: 7
  %loadMem_473349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473349 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473349)
  store %struct.Memory* %call_473349, %struct.Memory** %MEMORY

  ; Code: movslq -0x84(%rbp), %rcx	 RIP: 473350	 Bytes: 7
  %loadMem_473350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473350 = call %struct.Memory* @routine_movslq_MINUS0x84__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473350)
  store %struct.Memory* %call_473350, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473357	 Bytes: 7
  %loadMem_473357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473357 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473357)
  store %struct.Memory* %call_473357, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 47335e	 Bytes: 3
  %loadMem_47335e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47335e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47335e)
  store %struct.Memory* %call_47335e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473361	 Bytes: 7
  %loadMem_473361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473361 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473361)
  store %struct.Memory* %call_473361, %struct.Memory** %MEMORY

  ; Code: jne .L_473399	 RIP: 473368	 Bytes: 6
  %loadMem_473368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473368 = call %struct.Memory* @routine_jne_.L_473399(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473368, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_473368, %struct.Memory** %MEMORY

  %loadBr_473368 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473368 = icmp eq i8 %loadBr_473368, 1
  br i1 %cmpBr_473368, label %block_.L_473399, label %block_47336e

block_47336e:
  ; Code: movq 0x70fcf0, %rax	 RIP: 47336e	 Bytes: 8
  %loadMem_47336e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47336e = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47336e)
  store %struct.Memory* %call_47336e, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473376	 Bytes: 7
  %loadMem_473376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473376 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473376)
  store %struct.Memory* %call_473376, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47337d	 Bytes: 3
  %loadMem_47337d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47337d = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47337d)
  store %struct.Memory* %call_47337d, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473380	 Bytes: 4
  %loadMem_473380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473380 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473380)
  store %struct.Memory* %call_473380, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473384	 Bytes: 4
  %loadMem_473384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473384 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473384)
  store %struct.Memory* %call_473384, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473388	 Bytes: 4
  %loadMem_473388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473388 = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473388)
  store %struct.Memory* %call_473388, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47338c	 Bytes: 4
  %loadMem_47338c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47338c = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47338c)
  store %struct.Memory* %call_47338c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473390	 Bytes: 3
  %loadMem_473390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473390 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473390)
  store %struct.Memory* %call_473390, %struct.Memory** %MEMORY

  ; Code: jge .L_4733c6	 RIP: 473393	 Bytes: 6
  %loadMem_473393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473393 = call %struct.Memory* @routine_jge_.L_4733c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473393, i8* %BRANCH_TAKEN, i64 51, i64 6, i64 6)
  store %struct.Memory* %call_473393, %struct.Memory** %MEMORY

  %loadBr_473393 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473393 = icmp eq i8 %loadBr_473393, 1
  br i1 %cmpBr_473393, label %block_.L_4733c6, label %block_.L_473399

  ; Code: .L_473399:	 RIP: 473399	 Bytes: 0
block_.L_473399:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473399	 Bytes: 8
  %loadMem_473399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473399 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473399)
  store %struct.Memory* %call_473399, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4733a1	 Bytes: 7
  %loadMem_4733a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733a1 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733a1)
  store %struct.Memory* %call_4733a1, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4733a8	 Bytes: 3
  %loadMem_4733a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733a8 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733a8)
  store %struct.Memory* %call_4733a8, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 4733ab	 Bytes: 4
  %loadMem_4733ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733ab = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733ab)
  store %struct.Memory* %call_4733ab, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4733af	 Bytes: 4
  %loadMem_4733af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733af = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733af)
  store %struct.Memory* %call_4733af, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 4733b3	 Bytes: 4
  %loadMem_4733b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733b3 = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733b3)
  store %struct.Memory* %call_4733b3, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4733b7	 Bytes: 4
  %loadMem_4733b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733b7 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733b7)
  store %struct.Memory* %call_4733b7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x130(%rbp)	 RIP: 4733bb	 Bytes: 6
  %loadMem_4733bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733bb = call %struct.Memory* @routine_movl__edx__MINUS0x130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733bb)
  store %struct.Memory* %call_4733bb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4733f1	 RIP: 4733c1	 Bytes: 5
  %loadMem_4733c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733c1 = call %struct.Memory* @routine_jmpq_.L_4733f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733c1, i64 48, i64 5)
  store %struct.Memory* %call_4733c1, %struct.Memory** %MEMORY

  br label %block_.L_4733f1

  ; Code: .L_4733c6:	 RIP: 4733c6	 Bytes: 0
block_.L_4733c6:

  ; Code: movq 0x70fcf0, %rax	 RIP: 4733c6	 Bytes: 8
  %loadMem_4733c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733c6 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733c6)
  store %struct.Memory* %call_4733c6, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4733ce	 Bytes: 7
  %loadMem_4733ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733ce = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733ce)
  store %struct.Memory* %call_4733ce, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4733d5	 Bytes: 3
  %loadMem_4733d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733d5 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733d5)
  store %struct.Memory* %call_4733d5, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 4733d8	 Bytes: 4
  %loadMem_4733d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733d8 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733d8)
  store %struct.Memory* %call_4733d8, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4733dc	 Bytes: 4
  %loadMem_4733dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733dc = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733dc)
  store %struct.Memory* %call_4733dc, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 4733e0	 Bytes: 4
  %loadMem_4733e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733e0 = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733e0)
  store %struct.Memory* %call_4733e0, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4733e4	 Bytes: 4
  %loadMem_4733e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733e4 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733e4)
  store %struct.Memory* %call_4733e4, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4733e8	 Bytes: 3
  %loadMem_4733e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733e8 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733e8)
  store %struct.Memory* %call_4733e8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x130(%rbp)	 RIP: 4733eb	 Bytes: 6
  %loadMem_4733eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733eb = call %struct.Memory* @routine_movl__edx__MINUS0x130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733eb)
  store %struct.Memory* %call_4733eb, %struct.Memory** %MEMORY

  ; Code: .L_4733f1:	 RIP: 4733f1	 Bytes: 0
  br label %block_.L_4733f1
block_.L_4733f1:

  ; Code: movl -0x130(%rbp), %eax	 RIP: 4733f1	 Bytes: 6
  %loadMem_4733f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733f1 = call %struct.Memory* @routine_movl_MINUS0x130__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733f1)
  store %struct.Memory* %call_4733f1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x134(%rbp)	 RIP: 4733f7	 Bytes: 6
  %loadMem_4733f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733f7 = call %struct.Memory* @routine_movl__eax__MINUS0x134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733f7)
  store %struct.Memory* %call_4733f7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473412	 RIP: 4733fd	 Bytes: 5
  %loadMem_4733fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4733fd = call %struct.Memory* @routine_jmpq_.L_473412(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4733fd, i64 21, i64 5)
  store %struct.Memory* %call_4733fd, %struct.Memory** %MEMORY

  br label %block_.L_473412

  ; Code: .L_473402:	 RIP: 473402	 Bytes: 0
block_.L_473402:

  ; Code: movl $0xffffffff, %eax	 RIP: 473402	 Bytes: 5
  %loadMem_473402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473402 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473402)
  store %struct.Memory* %call_473402, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x134(%rbp)	 RIP: 473407	 Bytes: 6
  %loadMem_473407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473407 = call %struct.Memory* @routine_movl__eax__MINUS0x134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473407)
  store %struct.Memory* %call_473407, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473412	 RIP: 47340d	 Bytes: 5
  %loadMem_47340d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47340d = call %struct.Memory* @routine_jmpq_.L_473412(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47340d, i64 5, i64 5)
  store %struct.Memory* %call_47340d, %struct.Memory** %MEMORY

  br label %block_.L_473412

  ; Code: .L_473412:	 RIP: 473412	 Bytes: 0
block_.L_473412:

  ; Code: movl -0x134(%rbp), %eax	 RIP: 473412	 Bytes: 6
  %loadMem_473412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473412 = call %struct.Memory* @routine_movl_MINUS0x134__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473412)
  store %struct.Memory* %call_473412, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473418	 Bytes: 3
  %loadMem_473418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473418 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473418)
  store %struct.Memory* %call_473418, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x52(%rbp)	 RIP: 47341b	 Bytes: 4
  %loadMem_47341b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47341b = call %struct.Memory* @routine_movw__cx__MINUS0x52__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47341b)
  store %struct.Memory* %call_47341b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xa0(%rbp)	 RIP: 47341f	 Bytes: 7
  %loadMem_47341f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47341f = call %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47341f)
  store %struct.Memory* %call_47341f, %struct.Memory** %MEMORY

  ; Code: je .L_4734ff	 RIP: 473426	 Bytes: 6
  %loadMem_473426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473426 = call %struct.Memory* @routine_je_.L_4734ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473426, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_473426, %struct.Memory** %MEMORY

  %loadBr_473426 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473426 = icmp eq i8 %loadBr_473426, 1
  br i1 %cmpBr_473426, label %block_.L_4734ff, label %block_47342c

block_47342c:
  ; Code: movq 0x6cb900, %rax	 RIP: 47342c	 Bytes: 8
  %loadMem_47342c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47342c = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47342c)
  store %struct.Memory* %call_47342c, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473434	 Bytes: 7
  %loadMem_473434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473434 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473434)
  store %struct.Memory* %call_473434, %struct.Memory** %MEMORY

  ; Code: movslq -0x9c(%rbp), %rcx	 RIP: 47343b	 Bytes: 7
  %loadMem_47343b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47343b = call %struct.Memory* @routine_movslq_MINUS0x9c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47343b)
  store %struct.Memory* %call_47343b, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473442	 Bytes: 7
  %loadMem_473442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473442 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473442)
  store %struct.Memory* %call_473442, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473449	 Bytes: 3
  %loadMem_473449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473449 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473449)
  store %struct.Memory* %call_473449, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 47344c	 Bytes: 7
  %loadMem_47344c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47344c = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47344c)
  store %struct.Memory* %call_47344c, %struct.Memory** %MEMORY

  ; Code: jne .L_47348a	 RIP: 473453	 Bytes: 6
  %loadMem_473453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473453 = call %struct.Memory* @routine_jne_.L_47348a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473453, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_473453, %struct.Memory** %MEMORY

  %loadBr_473453 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473453 = icmp eq i8 %loadBr_473453, 1
  br i1 %cmpBr_473453, label %block_.L_47348a, label %block_473459

block_473459:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473459	 Bytes: 8
  %loadMem_473459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473459 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473459)
  store %struct.Memory* %call_473459, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473461	 Bytes: 7
  %loadMem_473461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473461 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473461)
  store %struct.Memory* %call_473461, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473468	 Bytes: 3
  %loadMem_473468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473468 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473468)
  store %struct.Memory* %call_473468, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 47346b	 Bytes: 7
  %loadMem_47346b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47346b = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47346b)
  store %struct.Memory* %call_47346b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473472	 Bytes: 4
  %loadMem_473472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473472 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473472)
  store %struct.Memory* %call_473472, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 473476	 Bytes: 7
  %loadMem_473476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473476 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473476)
  store %struct.Memory* %call_473476, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47347d	 Bytes: 4
  %loadMem_47347d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47347d = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47347d)
  store %struct.Memory* %call_47347d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473481	 Bytes: 3
  %loadMem_473481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473481 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473481)
  store %struct.Memory* %call_473481, %struct.Memory** %MEMORY

  ; Code: jge .L_4734bd	 RIP: 473484	 Bytes: 6
  %loadMem_473484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473484 = call %struct.Memory* @routine_jge_.L_4734bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473484, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_473484, %struct.Memory** %MEMORY

  %loadBr_473484 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473484 = icmp eq i8 %loadBr_473484, 1
  br i1 %cmpBr_473484, label %block_.L_4734bd, label %block_.L_47348a

  ; Code: .L_47348a:	 RIP: 47348a	 Bytes: 0
block_.L_47348a:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47348a	 Bytes: 8
  %loadMem_47348a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47348a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47348a)
  store %struct.Memory* %call_47348a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473492	 Bytes: 7
  %loadMem_473492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473492 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473492)
  store %struct.Memory* %call_473492, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473499	 Bytes: 3
  %loadMem_473499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473499 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473499)
  store %struct.Memory* %call_473499, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 47349c	 Bytes: 7
  %loadMem_47349c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47349c = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47349c)
  store %struct.Memory* %call_47349c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4734a3	 Bytes: 4
  %loadMem_4734a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734a3 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734a3)
  store %struct.Memory* %call_4734a3, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 4734a7	 Bytes: 7
  %loadMem_4734a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734a7 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734a7)
  store %struct.Memory* %call_4734a7, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4734ae	 Bytes: 4
  %loadMem_4734ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734ae = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734ae)
  store %struct.Memory* %call_4734ae, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x138(%rbp)	 RIP: 4734b2	 Bytes: 6
  %loadMem_4734b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734b2 = call %struct.Memory* @routine_movl__edx__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734b2)
  store %struct.Memory* %call_4734b2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4734ee	 RIP: 4734b8	 Bytes: 5
  %loadMem_4734b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734b8 = call %struct.Memory* @routine_jmpq_.L_4734ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734b8, i64 54, i64 5)
  store %struct.Memory* %call_4734b8, %struct.Memory** %MEMORY

  br label %block_.L_4734ee

  ; Code: .L_4734bd:	 RIP: 4734bd	 Bytes: 0
block_.L_4734bd:

  ; Code: movq 0x70fcf0, %rax	 RIP: 4734bd	 Bytes: 8
  %loadMem_4734bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734bd = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734bd)
  store %struct.Memory* %call_4734bd, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4734c5	 Bytes: 7
  %loadMem_4734c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734c5 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734c5)
  store %struct.Memory* %call_4734c5, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4734cc	 Bytes: 3
  %loadMem_4734cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734cc = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734cc)
  store %struct.Memory* %call_4734cc, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 4734cf	 Bytes: 7
  %loadMem_4734cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734cf = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734cf)
  store %struct.Memory* %call_4734cf, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4734d6	 Bytes: 4
  %loadMem_4734d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734d6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734d6)
  store %struct.Memory* %call_4734d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 4734da	 Bytes: 7
  %loadMem_4734da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734da = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734da)
  store %struct.Memory* %call_4734da, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4734e1	 Bytes: 4
  %loadMem_4734e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734e1 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734e1)
  store %struct.Memory* %call_4734e1, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4734e5	 Bytes: 3
  %loadMem_4734e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734e5 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734e5)
  store %struct.Memory* %call_4734e5, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x138(%rbp)	 RIP: 4734e8	 Bytes: 6
  %loadMem_4734e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734e8 = call %struct.Memory* @routine_movl__edx__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734e8)
  store %struct.Memory* %call_4734e8, %struct.Memory** %MEMORY

  ; Code: .L_4734ee:	 RIP: 4734ee	 Bytes: 0
  br label %block_.L_4734ee
block_.L_4734ee:

  ; Code: movl -0x138(%rbp), %eax	 RIP: 4734ee	 Bytes: 6
  %loadMem_4734ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734ee = call %struct.Memory* @routine_movl_MINUS0x138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734ee)
  store %struct.Memory* %call_4734ee, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 4734f4	 Bytes: 6
  %loadMem_4734f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734f4 = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734f4)
  store %struct.Memory* %call_4734f4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47350f	 RIP: 4734fa	 Bytes: 5
  %loadMem_4734fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734fa = call %struct.Memory* @routine_jmpq_.L_47350f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734fa, i64 21, i64 5)
  store %struct.Memory* %call_4734fa, %struct.Memory** %MEMORY

  br label %block_.L_47350f

  ; Code: .L_4734ff:	 RIP: 4734ff	 Bytes: 0
block_.L_4734ff:

  ; Code: movl $0xffffffff, %eax	 RIP: 4734ff	 Bytes: 5
  %loadMem_4734ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4734ff = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4734ff)
  store %struct.Memory* %call_4734ff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 473504	 Bytes: 6
  %loadMem_473504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473504 = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473504)
  store %struct.Memory* %call_473504, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47350f	 RIP: 47350a	 Bytes: 5
  %loadMem_47350a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47350a = call %struct.Memory* @routine_jmpq_.L_47350f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47350a, i64 5, i64 5)
  store %struct.Memory* %call_47350a, %struct.Memory** %MEMORY

  br label %block_.L_47350f

  ; Code: .L_47350f:	 RIP: 47350f	 Bytes: 0
block_.L_47350f:

  ; Code: movl -0x13c(%rbp), %eax	 RIP: 47350f	 Bytes: 6
  %loadMem_47350f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47350f = call %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47350f)
  store %struct.Memory* %call_47350f, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473515	 Bytes: 3
  %loadMem_473515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473515 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473515)
  store %struct.Memory* %call_473515, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x54(%rbp)	 RIP: 473518	 Bytes: 4
  %loadMem_473518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473518 = call %struct.Memory* @routine_movw__cx__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473518)
  store %struct.Memory* %call_473518, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xb8(%rbp)	 RIP: 47351c	 Bytes: 7
  %loadMem_47351c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47351c = call %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47351c)
  store %struct.Memory* %call_47351c, %struct.Memory** %MEMORY

  ; Code: je .L_4735fc	 RIP: 473523	 Bytes: 6
  %loadMem_473523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473523 = call %struct.Memory* @routine_je_.L_4735fc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473523, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_473523, %struct.Memory** %MEMORY

  %loadBr_473523 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473523 = icmp eq i8 %loadBr_473523, 1
  br i1 %cmpBr_473523, label %block_.L_4735fc, label %block_473529

block_473529:
  ; Code: movq 0x6cb900, %rax	 RIP: 473529	 Bytes: 8
  %loadMem_473529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473529 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473529)
  store %struct.Memory* %call_473529, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473531	 Bytes: 7
  %loadMem_473531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473531 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473531)
  store %struct.Memory* %call_473531, %struct.Memory** %MEMORY

  ; Code: movslq -0xb4(%rbp), %rcx	 RIP: 473538	 Bytes: 7
  %loadMem_473538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473538 = call %struct.Memory* @routine_movslq_MINUS0xb4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473538)
  store %struct.Memory* %call_473538, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 47353f	 Bytes: 7
  %loadMem_47353f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47353f = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47353f)
  store %struct.Memory* %call_47353f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473546	 Bytes: 3
  %loadMem_473546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473546 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473546)
  store %struct.Memory* %call_473546, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473549	 Bytes: 7
  %loadMem_473549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473549 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473549)
  store %struct.Memory* %call_473549, %struct.Memory** %MEMORY

  ; Code: jne .L_473587	 RIP: 473550	 Bytes: 6
  %loadMem_473550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473550 = call %struct.Memory* @routine_jne_.L_473587(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473550, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_473550, %struct.Memory** %MEMORY

  %loadBr_473550 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473550 = icmp eq i8 %loadBr_473550, 1
  br i1 %cmpBr_473550, label %block_.L_473587, label %block_473556

block_473556:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473556	 Bytes: 8
  %loadMem_473556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473556 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473556)
  store %struct.Memory* %call_473556, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47355e	 Bytes: 7
  %loadMem_47355e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47355e = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47355e)
  store %struct.Memory* %call_47355e, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473565	 Bytes: 3
  %loadMem_473565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473565 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473565)
  store %struct.Memory* %call_473565, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 473568	 Bytes: 7
  %loadMem_473568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473568 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473568)
  store %struct.Memory* %call_473568, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47356f	 Bytes: 4
  %loadMem_47356f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47356f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47356f)
  store %struct.Memory* %call_47356f, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473573	 Bytes: 7
  %loadMem_473573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473573 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473573)
  store %struct.Memory* %call_473573, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47357a	 Bytes: 4
  %loadMem_47357a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47357a = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47357a)
  store %struct.Memory* %call_47357a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 47357e	 Bytes: 3
  %loadMem_47357e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47357e = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47357e)
  store %struct.Memory* %call_47357e, %struct.Memory** %MEMORY

  ; Code: jge .L_4735ba	 RIP: 473581	 Bytes: 6
  %loadMem_473581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473581 = call %struct.Memory* @routine_jge_.L_4735ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473581, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_473581, %struct.Memory** %MEMORY

  %loadBr_473581 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473581 = icmp eq i8 %loadBr_473581, 1
  br i1 %cmpBr_473581, label %block_.L_4735ba, label %block_.L_473587

  ; Code: .L_473587:	 RIP: 473587	 Bytes: 0
block_.L_473587:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473587	 Bytes: 8
  %loadMem_473587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473587 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473587)
  store %struct.Memory* %call_473587, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47358f	 Bytes: 7
  %loadMem_47358f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47358f = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47358f)
  store %struct.Memory* %call_47358f, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473596	 Bytes: 3
  %loadMem_473596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473596 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473596)
  store %struct.Memory* %call_473596, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 473599	 Bytes: 7
  %loadMem_473599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473599 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473599)
  store %struct.Memory* %call_473599, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4735a0	 Bytes: 4
  %loadMem_4735a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735a0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735a0)
  store %struct.Memory* %call_4735a0, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 4735a4	 Bytes: 7
  %loadMem_4735a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735a4 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735a4)
  store %struct.Memory* %call_4735a4, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4735ab	 Bytes: 4
  %loadMem_4735ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735ab = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735ab)
  store %struct.Memory* %call_4735ab, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x140(%rbp)	 RIP: 4735af	 Bytes: 6
  %loadMem_4735af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735af = call %struct.Memory* @routine_movl__edx__MINUS0x140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735af)
  store %struct.Memory* %call_4735af, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4735eb	 RIP: 4735b5	 Bytes: 5
  %loadMem_4735b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735b5 = call %struct.Memory* @routine_jmpq_.L_4735eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735b5, i64 54, i64 5)
  store %struct.Memory* %call_4735b5, %struct.Memory** %MEMORY

  br label %block_.L_4735eb

  ; Code: .L_4735ba:	 RIP: 4735ba	 Bytes: 0
block_.L_4735ba:

  ; Code: movq 0x70fcf0, %rax	 RIP: 4735ba	 Bytes: 8
  %loadMem_4735ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735ba = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735ba)
  store %struct.Memory* %call_4735ba, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4735c2	 Bytes: 7
  %loadMem_4735c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735c2 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735c2)
  store %struct.Memory* %call_4735c2, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4735c9	 Bytes: 3
  %loadMem_4735c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735c9 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735c9)
  store %struct.Memory* %call_4735c9, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 4735cc	 Bytes: 7
  %loadMem_4735cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735cc = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735cc)
  store %struct.Memory* %call_4735cc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4735d3	 Bytes: 4
  %loadMem_4735d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735d3 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735d3)
  store %struct.Memory* %call_4735d3, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 4735d7	 Bytes: 7
  %loadMem_4735d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735d7 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735d7)
  store %struct.Memory* %call_4735d7, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4735de	 Bytes: 4
  %loadMem_4735de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735de = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735de)
  store %struct.Memory* %call_4735de, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4735e2	 Bytes: 3
  %loadMem_4735e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735e2 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735e2)
  store %struct.Memory* %call_4735e2, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x140(%rbp)	 RIP: 4735e5	 Bytes: 6
  %loadMem_4735e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735e5 = call %struct.Memory* @routine_movl__edx__MINUS0x140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735e5)
  store %struct.Memory* %call_4735e5, %struct.Memory** %MEMORY

  ; Code: .L_4735eb:	 RIP: 4735eb	 Bytes: 0
  br label %block_.L_4735eb
block_.L_4735eb:

  ; Code: movl -0x140(%rbp), %eax	 RIP: 4735eb	 Bytes: 6
  %loadMem_4735eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735eb = call %struct.Memory* @routine_movl_MINUS0x140__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735eb)
  store %struct.Memory* %call_4735eb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x144(%rbp)	 RIP: 4735f1	 Bytes: 6
  %loadMem_4735f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735f1 = call %struct.Memory* @routine_movl__eax__MINUS0x144__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735f1)
  store %struct.Memory* %call_4735f1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47360c	 RIP: 4735f7	 Bytes: 5
  %loadMem_4735f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735f7 = call %struct.Memory* @routine_jmpq_.L_47360c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735f7, i64 21, i64 5)
  store %struct.Memory* %call_4735f7, %struct.Memory** %MEMORY

  br label %block_.L_47360c

  ; Code: .L_4735fc:	 RIP: 4735fc	 Bytes: 0
block_.L_4735fc:

  ; Code: movl $0xffffffff, %eax	 RIP: 4735fc	 Bytes: 5
  %loadMem_4735fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4735fc = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4735fc)
  store %struct.Memory* %call_4735fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x144(%rbp)	 RIP: 473601	 Bytes: 6
  %loadMem_473601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473601 = call %struct.Memory* @routine_movl__eax__MINUS0x144__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473601)
  store %struct.Memory* %call_473601, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47360c	 RIP: 473607	 Bytes: 5
  %loadMem_473607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473607 = call %struct.Memory* @routine_jmpq_.L_47360c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473607, i64 5, i64 5)
  store %struct.Memory* %call_473607, %struct.Memory** %MEMORY

  br label %block_.L_47360c

  ; Code: .L_47360c:	 RIP: 47360c	 Bytes: 0
block_.L_47360c:

  ; Code: movl -0x144(%rbp), %eax	 RIP: 47360c	 Bytes: 6
  %loadMem_47360c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47360c = call %struct.Memory* @routine_movl_MINUS0x144__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47360c)
  store %struct.Memory* %call_47360c, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473612	 Bytes: 3
  %loadMem_473612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473612 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473612)
  store %struct.Memory* %call_473612, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x56(%rbp)	 RIP: 473615	 Bytes: 4
  %loadMem_473615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473615 = call %struct.Memory* @routine_movw__cx__MINUS0x56__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473615)
  store %struct.Memory* %call_473615, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xd0(%rbp)	 RIP: 473619	 Bytes: 7
  %loadMem_473619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473619 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473619)
  store %struct.Memory* %call_473619, %struct.Memory** %MEMORY

  ; Code: je .L_4736f9	 RIP: 473620	 Bytes: 6
  %loadMem_473620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473620 = call %struct.Memory* @routine_je_.L_4736f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473620, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_473620, %struct.Memory** %MEMORY

  %loadBr_473620 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473620 = icmp eq i8 %loadBr_473620, 1
  br i1 %cmpBr_473620, label %block_.L_4736f9, label %block_473626

block_473626:
  ; Code: movq 0x6cb900, %rax	 RIP: 473626	 Bytes: 8
  %loadMem_473626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473626 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473626)
  store %struct.Memory* %call_473626, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 47362e	 Bytes: 7
  %loadMem_47362e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47362e = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47362e)
  store %struct.Memory* %call_47362e, %struct.Memory** %MEMORY

  ; Code: movslq -0xcc(%rbp), %rcx	 RIP: 473635	 Bytes: 7
  %loadMem_473635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473635 = call %struct.Memory* @routine_movslq_MINUS0xcc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473635)
  store %struct.Memory* %call_473635, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 47363c	 Bytes: 7
  %loadMem_47363c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47363c = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47363c)
  store %struct.Memory* %call_47363c, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473643	 Bytes: 3
  %loadMem_473643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473643 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473643)
  store %struct.Memory* %call_473643, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473646	 Bytes: 7
  %loadMem_473646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473646 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473646)
  store %struct.Memory* %call_473646, %struct.Memory** %MEMORY

  ; Code: jne .L_473684	 RIP: 47364d	 Bytes: 6
  %loadMem_47364d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47364d = call %struct.Memory* @routine_jne_.L_473684(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47364d, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_47364d, %struct.Memory** %MEMORY

  %loadBr_47364d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47364d = icmp eq i8 %loadBr_47364d, 1
  br i1 %cmpBr_47364d, label %block_.L_473684, label %block_473653

block_473653:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473653	 Bytes: 8
  %loadMem_473653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473653 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473653)
  store %struct.Memory* %call_473653, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47365b	 Bytes: 7
  %loadMem_47365b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47365b = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47365b)
  store %struct.Memory* %call_47365b, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473662	 Bytes: 3
  %loadMem_473662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473662 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473662)
  store %struct.Memory* %call_473662, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473665	 Bytes: 7
  %loadMem_473665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473665 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473665)
  store %struct.Memory* %call_473665, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47366c	 Bytes: 4
  %loadMem_47366c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47366c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47366c)
  store %struct.Memory* %call_47366c, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473670	 Bytes: 7
  %loadMem_473670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473670 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473670)
  store %struct.Memory* %call_473670, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473677	 Bytes: 4
  %loadMem_473677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473677 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473677)
  store %struct.Memory* %call_473677, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 47367b	 Bytes: 3
  %loadMem_47367b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47367b = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47367b)
  store %struct.Memory* %call_47367b, %struct.Memory** %MEMORY

  ; Code: jge .L_4736b7	 RIP: 47367e	 Bytes: 6
  %loadMem_47367e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47367e = call %struct.Memory* @routine_jge_.L_4736b7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47367e, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_47367e, %struct.Memory** %MEMORY

  %loadBr_47367e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47367e = icmp eq i8 %loadBr_47367e, 1
  br i1 %cmpBr_47367e, label %block_.L_4736b7, label %block_.L_473684

  ; Code: .L_473684:	 RIP: 473684	 Bytes: 0
block_.L_473684:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473684	 Bytes: 8
  %loadMem_473684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473684 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473684)
  store %struct.Memory* %call_473684, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47368c	 Bytes: 7
  %loadMem_47368c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47368c = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47368c)
  store %struct.Memory* %call_47368c, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473693	 Bytes: 3
  %loadMem_473693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473693 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473693)
  store %struct.Memory* %call_473693, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473696	 Bytes: 7
  %loadMem_473696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473696 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473696)
  store %struct.Memory* %call_473696, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47369d	 Bytes: 4
  %loadMem_47369d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47369d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47369d)
  store %struct.Memory* %call_47369d, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 4736a1	 Bytes: 7
  %loadMem_4736a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736a1 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736a1)
  store %struct.Memory* %call_4736a1, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4736a8	 Bytes: 4
  %loadMem_4736a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736a8 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736a8)
  store %struct.Memory* %call_4736a8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x148(%rbp)	 RIP: 4736ac	 Bytes: 6
  %loadMem_4736ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736ac = call %struct.Memory* @routine_movl__edx__MINUS0x148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736ac)
  store %struct.Memory* %call_4736ac, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4736e8	 RIP: 4736b2	 Bytes: 5
  %loadMem_4736b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736b2 = call %struct.Memory* @routine_jmpq_.L_4736e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736b2, i64 54, i64 5)
  store %struct.Memory* %call_4736b2, %struct.Memory** %MEMORY

  br label %block_.L_4736e8

  ; Code: .L_4736b7:	 RIP: 4736b7	 Bytes: 0
block_.L_4736b7:

  ; Code: movq 0x70fcf0, %rax	 RIP: 4736b7	 Bytes: 8
  %loadMem_4736b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736b7 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736b7)
  store %struct.Memory* %call_4736b7, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4736bf	 Bytes: 7
  %loadMem_4736bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736bf = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736bf)
  store %struct.Memory* %call_4736bf, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4736c6	 Bytes: 3
  %loadMem_4736c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736c6 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736c6)
  store %struct.Memory* %call_4736c6, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 4736c9	 Bytes: 7
  %loadMem_4736c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736c9 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736c9)
  store %struct.Memory* %call_4736c9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4736d0	 Bytes: 4
  %loadMem_4736d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736d0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736d0)
  store %struct.Memory* %call_4736d0, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 4736d4	 Bytes: 7
  %loadMem_4736d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736d4 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736d4)
  store %struct.Memory* %call_4736d4, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4736db	 Bytes: 4
  %loadMem_4736db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736db = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736db)
  store %struct.Memory* %call_4736db, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4736df	 Bytes: 3
  %loadMem_4736df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736df = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736df)
  store %struct.Memory* %call_4736df, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x148(%rbp)	 RIP: 4736e2	 Bytes: 6
  %loadMem_4736e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736e2 = call %struct.Memory* @routine_movl__edx__MINUS0x148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736e2)
  store %struct.Memory* %call_4736e2, %struct.Memory** %MEMORY

  ; Code: .L_4736e8:	 RIP: 4736e8	 Bytes: 0
  br label %block_.L_4736e8
block_.L_4736e8:

  ; Code: movl -0x148(%rbp), %eax	 RIP: 4736e8	 Bytes: 6
  %loadMem_4736e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736e8 = call %struct.Memory* @routine_movl_MINUS0x148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736e8)
  store %struct.Memory* %call_4736e8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14c(%rbp)	 RIP: 4736ee	 Bytes: 6
  %loadMem_4736ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736ee = call %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736ee)
  store %struct.Memory* %call_4736ee, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473703	 RIP: 4736f4	 Bytes: 5
  %loadMem_4736f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736f4 = call %struct.Memory* @routine_jmpq_.L_473703(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736f4, i64 15, i64 5)
  store %struct.Memory* %call_4736f4, %struct.Memory** %MEMORY

  br label %block_.L_473703

  ; Code: .L_4736f9:	 RIP: 4736f9	 Bytes: 0
block_.L_4736f9:

  ; Code: movswl -0x56(%rbp), %eax	 RIP: 4736f9	 Bytes: 4
  %loadMem_4736f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736f9 = call %struct.Memory* @routine_movswl_MINUS0x56__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736f9)
  store %struct.Memory* %call_4736f9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14c(%rbp)	 RIP: 4736fd	 Bytes: 6
  %loadMem_4736fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4736fd = call %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4736fd)
  store %struct.Memory* %call_4736fd, %struct.Memory** %MEMORY

  ; Code: .L_473703:	 RIP: 473703	 Bytes: 0
  br label %block_.L_473703
block_.L_473703:

  ; Code: movl -0x14c(%rbp), %eax	 RIP: 473703	 Bytes: 6
  %loadMem_473703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473703 = call %struct.Memory* @routine_movl_MINUS0x14c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473703)
  store %struct.Memory* %call_473703, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473709	 Bytes: 3
  %loadMem_473709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473709 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473709)
  store %struct.Memory* %call_473709, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x58(%rbp)	 RIP: 47370c	 Bytes: 4
  %loadMem_47370c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47370c = call %struct.Memory* @routine_movw__cx__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47370c)
  store %struct.Memory* %call_47370c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x88(%rbp)	 RIP: 473710	 Bytes: 7
  %loadMem_473710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473710 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473710)
  store %struct.Memory* %call_473710, %struct.Memory** %MEMORY

  ; Code: je .L_4737e1	 RIP: 473717	 Bytes: 6
  %loadMem_473717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473717 = call %struct.Memory* @routine_je_.L_4737e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473717, i8* %BRANCH_TAKEN, i64 202, i64 6, i64 6)
  store %struct.Memory* %call_473717, %struct.Memory** %MEMORY

  %loadBr_473717 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473717 = icmp eq i8 %loadBr_473717, 1
  br i1 %cmpBr_473717, label %block_.L_4737e1, label %block_47371d

block_47371d:
  ; Code: movq 0x6cb900, %rax	 RIP: 47371d	 Bytes: 8
  %loadMem_47371d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47371d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47371d)
  store %struct.Memory* %call_47371d, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473725	 Bytes: 7
  %loadMem_473725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473725 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473725)
  store %struct.Memory* %call_473725, %struct.Memory** %MEMORY

  ; Code: movslq -0x84(%rbp), %rcx	 RIP: 47372c	 Bytes: 7
  %loadMem_47372c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47372c = call %struct.Memory* @routine_movslq_MINUS0x84__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47372c)
  store %struct.Memory* %call_47372c, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473733	 Bytes: 7
  %loadMem_473733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473733 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473733)
  store %struct.Memory* %call_473733, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 47373a	 Bytes: 3
  %loadMem_47373a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47373a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47373a)
  store %struct.Memory* %call_47373a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 47373d	 Bytes: 7
  %loadMem_47373d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47373d = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47373d)
  store %struct.Memory* %call_47373d, %struct.Memory** %MEMORY

  ; Code: jne .L_473776	 RIP: 473744	 Bytes: 6
  %loadMem_473744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473744 = call %struct.Memory* @routine_jne_.L_473776(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473744, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_473744, %struct.Memory** %MEMORY

  %loadBr_473744 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473744 = icmp eq i8 %loadBr_473744, 1
  br i1 %cmpBr_473744, label %block_.L_473776, label %block_47374a

block_47374a:
  ; Code: movq 0x70fcf0, %rax	 RIP: 47374a	 Bytes: 8
  %loadMem_47374a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47374a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47374a)
  store %struct.Memory* %call_47374a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473752	 Bytes: 7
  %loadMem_473752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473752 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473752)
  store %struct.Memory* %call_473752, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473759	 Bytes: 4
  %loadMem_473759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473759 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473759)
  store %struct.Memory* %call_473759, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 47375d	 Bytes: 4
  %loadMem_47375d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47375d = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47375d)
  store %struct.Memory* %call_47375d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473761	 Bytes: 4
  %loadMem_473761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473761 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473761)
  store %struct.Memory* %call_473761, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473765	 Bytes: 4
  %loadMem_473765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473765 = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473765)
  store %struct.Memory* %call_473765, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473769	 Bytes: 4
  %loadMem_473769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473769 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473769)
  store %struct.Memory* %call_473769, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 47376d	 Bytes: 3
  %loadMem_47376d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47376d = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47376d)
  store %struct.Memory* %call_47376d, %struct.Memory** %MEMORY

  ; Code: jge .L_4737a4	 RIP: 473770	 Bytes: 6
  %loadMem_473770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473770 = call %struct.Memory* @routine_jge_.L_4737a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473770, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_473770, %struct.Memory** %MEMORY

  %loadBr_473770 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473770 = icmp eq i8 %loadBr_473770, 1
  br i1 %cmpBr_473770, label %block_.L_4737a4, label %block_.L_473776

  ; Code: .L_473776:	 RIP: 473776	 Bytes: 0
block_.L_473776:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473776	 Bytes: 8
  %loadMem_473776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473776 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473776)
  store %struct.Memory* %call_473776, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47377e	 Bytes: 7
  %loadMem_47377e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47377e = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47377e)
  store %struct.Memory* %call_47377e, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473785	 Bytes: 4
  %loadMem_473785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473785 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473785)
  store %struct.Memory* %call_473785, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473789	 Bytes: 4
  %loadMem_473789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473789 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473789)
  store %struct.Memory* %call_473789, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47378d	 Bytes: 4
  %loadMem_47378d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47378d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47378d)
  store %struct.Memory* %call_47378d, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473791	 Bytes: 4
  %loadMem_473791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473791 = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473791)
  store %struct.Memory* %call_473791, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473795	 Bytes: 4
  %loadMem_473795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473795 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473795)
  store %struct.Memory* %call_473795, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x150(%rbp)	 RIP: 473799	 Bytes: 6
  %loadMem_473799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473799 = call %struct.Memory* @routine_movl__edx__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473799)
  store %struct.Memory* %call_473799, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4737d0	 RIP: 47379f	 Bytes: 5
  %loadMem_47379f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47379f = call %struct.Memory* @routine_jmpq_.L_4737d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47379f, i64 49, i64 5)
  store %struct.Memory* %call_47379f, %struct.Memory** %MEMORY

  br label %block_.L_4737d0

  ; Code: .L_4737a4:	 RIP: 4737a4	 Bytes: 0
block_.L_4737a4:

  ; Code: movq 0x70fcf0, %rax	 RIP: 4737a4	 Bytes: 8
  %loadMem_4737a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737a4 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737a4)
  store %struct.Memory* %call_4737a4, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4737ac	 Bytes: 7
  %loadMem_4737ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737ac = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737ac)
  store %struct.Memory* %call_4737ac, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4737b3	 Bytes: 4
  %loadMem_4737b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737b3 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737b3)
  store %struct.Memory* %call_4737b3, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 4737b7	 Bytes: 4
  %loadMem_4737b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737b7 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737b7)
  store %struct.Memory* %call_4737b7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4737bb	 Bytes: 4
  %loadMem_4737bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737bb = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737bb)
  store %struct.Memory* %call_4737bb, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 4737bf	 Bytes: 4
  %loadMem_4737bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737bf = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737bf)
  store %struct.Memory* %call_4737bf, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4737c3	 Bytes: 4
  %loadMem_4737c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737c3 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737c3)
  store %struct.Memory* %call_4737c3, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4737c7	 Bytes: 3
  %loadMem_4737c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737c7 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737c7)
  store %struct.Memory* %call_4737c7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x150(%rbp)	 RIP: 4737ca	 Bytes: 6
  %loadMem_4737ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737ca = call %struct.Memory* @routine_movl__edx__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737ca)
  store %struct.Memory* %call_4737ca, %struct.Memory** %MEMORY

  ; Code: .L_4737d0:	 RIP: 4737d0	 Bytes: 0
  br label %block_.L_4737d0
block_.L_4737d0:

  ; Code: movl -0x150(%rbp), %eax	 RIP: 4737d0	 Bytes: 6
  %loadMem_4737d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737d0 = call %struct.Memory* @routine_movl_MINUS0x150__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737d0)
  store %struct.Memory* %call_4737d0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x154(%rbp)	 RIP: 4737d6	 Bytes: 6
  %loadMem_4737d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737d6 = call %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737d6)
  store %struct.Memory* %call_4737d6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4737f1	 RIP: 4737dc	 Bytes: 5
  %loadMem_4737dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737dc = call %struct.Memory* @routine_jmpq_.L_4737f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737dc, i64 21, i64 5)
  store %struct.Memory* %call_4737dc, %struct.Memory** %MEMORY

  br label %block_.L_4737f1

  ; Code: .L_4737e1:	 RIP: 4737e1	 Bytes: 0
block_.L_4737e1:

  ; Code: movl $0xffffffff, %eax	 RIP: 4737e1	 Bytes: 5
  %loadMem_4737e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737e1 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737e1)
  store %struct.Memory* %call_4737e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x154(%rbp)	 RIP: 4737e6	 Bytes: 6
  %loadMem_4737e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737e6 = call %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737e6)
  store %struct.Memory* %call_4737e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4737f1	 RIP: 4737ec	 Bytes: 5
  %loadMem_4737ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737ec = call %struct.Memory* @routine_jmpq_.L_4737f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737ec, i64 5, i64 5)
  store %struct.Memory* %call_4737ec, %struct.Memory** %MEMORY

  br label %block_.L_4737f1

  ; Code: .L_4737f1:	 RIP: 4737f1	 Bytes: 0
block_.L_4737f1:

  ; Code: movl -0x154(%rbp), %eax	 RIP: 4737f1	 Bytes: 6
  %loadMem_4737f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737f1 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737f1)
  store %struct.Memory* %call_4737f1, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4737f7	 Bytes: 3
  %loadMem_4737f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737f7 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737f7)
  store %struct.Memory* %call_4737f7, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5a(%rbp)	 RIP: 4737fa	 Bytes: 4
  %loadMem_4737fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737fa = call %struct.Memory* @routine_movw__cx__MINUS0x5a__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737fa)
  store %struct.Memory* %call_4737fa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xa0(%rbp)	 RIP: 4737fe	 Bytes: 7
  %loadMem_4737fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4737fe = call %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4737fe)
  store %struct.Memory* %call_4737fe, %struct.Memory** %MEMORY

  ; Code: je .L_4738e1	 RIP: 473805	 Bytes: 6
  %loadMem_473805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473805 = call %struct.Memory* @routine_je_.L_4738e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473805, i8* %BRANCH_TAKEN, i64 220, i64 6, i64 6)
  store %struct.Memory* %call_473805, %struct.Memory** %MEMORY

  %loadBr_473805 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473805 = icmp eq i8 %loadBr_473805, 1
  br i1 %cmpBr_473805, label %block_.L_4738e1, label %block_47380b

block_47380b:
  ; Code: movq 0x6cb900, %rax	 RIP: 47380b	 Bytes: 8
  %loadMem_47380b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47380b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47380b)
  store %struct.Memory* %call_47380b, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473813	 Bytes: 7
  %loadMem_473813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473813 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473813)
  store %struct.Memory* %call_473813, %struct.Memory** %MEMORY

  ; Code: movslq -0x9c(%rbp), %rcx	 RIP: 47381a	 Bytes: 7
  %loadMem_47381a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47381a = call %struct.Memory* @routine_movslq_MINUS0x9c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47381a)
  store %struct.Memory* %call_47381a, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473821	 Bytes: 7
  %loadMem_473821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473821 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473821)
  store %struct.Memory* %call_473821, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473828	 Bytes: 3
  %loadMem_473828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473828 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473828)
  store %struct.Memory* %call_473828, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 47382b	 Bytes: 7
  %loadMem_47382b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47382b = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47382b)
  store %struct.Memory* %call_47382b, %struct.Memory** %MEMORY

  ; Code: jne .L_47386a	 RIP: 473832	 Bytes: 6
  %loadMem_473832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473832 = call %struct.Memory* @routine_jne_.L_47386a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473832, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_473832, %struct.Memory** %MEMORY

  %loadBr_473832 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473832 = icmp eq i8 %loadBr_473832, 1
  br i1 %cmpBr_473832, label %block_.L_47386a, label %block_473838

block_473838:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473838	 Bytes: 8
  %loadMem_473838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473838 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473838)
  store %struct.Memory* %call_473838, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473840	 Bytes: 7
  %loadMem_473840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473840 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473840)
  store %struct.Memory* %call_473840, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473847	 Bytes: 4
  %loadMem_473847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473847 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473847)
  store %struct.Memory* %call_473847, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 47384b	 Bytes: 7
  %loadMem_47384b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47384b = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47384b)
  store %struct.Memory* %call_47384b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473852	 Bytes: 4
  %loadMem_473852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473852 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473852)
  store %struct.Memory* %call_473852, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 473856	 Bytes: 7
  %loadMem_473856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473856 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473856)
  store %struct.Memory* %call_473856, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47385d	 Bytes: 4
  %loadMem_47385d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47385d = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47385d)
  store %struct.Memory* %call_47385d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473861	 Bytes: 3
  %loadMem_473861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473861 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473861)
  store %struct.Memory* %call_473861, %struct.Memory** %MEMORY

  ; Code: jge .L_47389e	 RIP: 473864	 Bytes: 6
  %loadMem_473864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473864 = call %struct.Memory* @routine_jge_.L_47389e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473864, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_473864, %struct.Memory** %MEMORY

  %loadBr_473864 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473864 = icmp eq i8 %loadBr_473864, 1
  br i1 %cmpBr_473864, label %block_.L_47389e, label %block_.L_47386a

  ; Code: .L_47386a:	 RIP: 47386a	 Bytes: 0
block_.L_47386a:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47386a	 Bytes: 8
  %loadMem_47386a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47386a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47386a)
  store %struct.Memory* %call_47386a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473872	 Bytes: 7
  %loadMem_473872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473872 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473872)
  store %struct.Memory* %call_473872, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473879	 Bytes: 4
  %loadMem_473879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473879 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473879)
  store %struct.Memory* %call_473879, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 47387d	 Bytes: 7
  %loadMem_47387d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47387d = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47387d)
  store %struct.Memory* %call_47387d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473884	 Bytes: 4
  %loadMem_473884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473884 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473884)
  store %struct.Memory* %call_473884, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 473888	 Bytes: 7
  %loadMem_473888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473888 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473888)
  store %struct.Memory* %call_473888, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47388f	 Bytes: 4
  %loadMem_47388f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47388f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47388f)
  store %struct.Memory* %call_47388f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x158(%rbp)	 RIP: 473893	 Bytes: 6
  %loadMem_473893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473893 = call %struct.Memory* @routine_movl__edx__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473893)
  store %struct.Memory* %call_473893, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4738d0	 RIP: 473899	 Bytes: 5
  %loadMem_473899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473899 = call %struct.Memory* @routine_jmpq_.L_4738d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473899, i64 55, i64 5)
  store %struct.Memory* %call_473899, %struct.Memory** %MEMORY

  br label %block_.L_4738d0

  ; Code: .L_47389e:	 RIP: 47389e	 Bytes: 0
block_.L_47389e:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47389e	 Bytes: 8
  %loadMem_47389e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47389e = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47389e)
  store %struct.Memory* %call_47389e, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4738a6	 Bytes: 7
  %loadMem_4738a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738a6 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738a6)
  store %struct.Memory* %call_4738a6, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4738ad	 Bytes: 4
  %loadMem_4738ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738ad = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738ad)
  store %struct.Memory* %call_4738ad, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 4738b1	 Bytes: 7
  %loadMem_4738b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738b1 = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738b1)
  store %struct.Memory* %call_4738b1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4738b8	 Bytes: 4
  %loadMem_4738b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738b8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738b8)
  store %struct.Memory* %call_4738b8, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 4738bc	 Bytes: 7
  %loadMem_4738bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738bc = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738bc)
  store %struct.Memory* %call_4738bc, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4738c3	 Bytes: 4
  %loadMem_4738c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738c3 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738c3)
  store %struct.Memory* %call_4738c3, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4738c7	 Bytes: 3
  %loadMem_4738c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738c7 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738c7)
  store %struct.Memory* %call_4738c7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x158(%rbp)	 RIP: 4738ca	 Bytes: 6
  %loadMem_4738ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738ca = call %struct.Memory* @routine_movl__edx__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738ca)
  store %struct.Memory* %call_4738ca, %struct.Memory** %MEMORY

  ; Code: .L_4738d0:	 RIP: 4738d0	 Bytes: 0
  br label %block_.L_4738d0
block_.L_4738d0:

  ; Code: movl -0x158(%rbp), %eax	 RIP: 4738d0	 Bytes: 6
  %loadMem_4738d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738d0 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738d0)
  store %struct.Memory* %call_4738d0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x15c(%rbp)	 RIP: 4738d6	 Bytes: 6
  %loadMem_4738d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738d6 = call %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738d6)
  store %struct.Memory* %call_4738d6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4738f1	 RIP: 4738dc	 Bytes: 5
  %loadMem_4738dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738dc = call %struct.Memory* @routine_jmpq_.L_4738f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738dc, i64 21, i64 5)
  store %struct.Memory* %call_4738dc, %struct.Memory** %MEMORY

  br label %block_.L_4738f1

  ; Code: .L_4738e1:	 RIP: 4738e1	 Bytes: 0
block_.L_4738e1:

  ; Code: movl $0xffffffff, %eax	 RIP: 4738e1	 Bytes: 5
  %loadMem_4738e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738e1 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738e1)
  store %struct.Memory* %call_4738e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x15c(%rbp)	 RIP: 4738e6	 Bytes: 6
  %loadMem_4738e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738e6 = call %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738e6)
  store %struct.Memory* %call_4738e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4738f1	 RIP: 4738ec	 Bytes: 5
  %loadMem_4738ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738ec = call %struct.Memory* @routine_jmpq_.L_4738f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738ec, i64 5, i64 5)
  store %struct.Memory* %call_4738ec, %struct.Memory** %MEMORY

  br label %block_.L_4738f1

  ; Code: .L_4738f1:	 RIP: 4738f1	 Bytes: 0
block_.L_4738f1:

  ; Code: movl -0x15c(%rbp), %eax	 RIP: 4738f1	 Bytes: 6
  %loadMem_4738f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738f1 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738f1)
  store %struct.Memory* %call_4738f1, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4738f7	 Bytes: 3
  %loadMem_4738f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738f7 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738f7)
  store %struct.Memory* %call_4738f7, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5c(%rbp)	 RIP: 4738fa	 Bytes: 4
  %loadMem_4738fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738fa = call %struct.Memory* @routine_movw__cx__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738fa)
  store %struct.Memory* %call_4738fa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xb8(%rbp)	 RIP: 4738fe	 Bytes: 7
  %loadMem_4738fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4738fe = call %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4738fe)
  store %struct.Memory* %call_4738fe, %struct.Memory** %MEMORY

  ; Code: je .L_4739e1	 RIP: 473905	 Bytes: 6
  %loadMem_473905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473905 = call %struct.Memory* @routine_je_.L_4739e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473905, i8* %BRANCH_TAKEN, i64 220, i64 6, i64 6)
  store %struct.Memory* %call_473905, %struct.Memory** %MEMORY

  %loadBr_473905 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473905 = icmp eq i8 %loadBr_473905, 1
  br i1 %cmpBr_473905, label %block_.L_4739e1, label %block_47390b

block_47390b:
  ; Code: movq 0x6cb900, %rax	 RIP: 47390b	 Bytes: 8
  %loadMem_47390b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47390b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47390b)
  store %struct.Memory* %call_47390b, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473913	 Bytes: 7
  %loadMem_473913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473913 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473913)
  store %struct.Memory* %call_473913, %struct.Memory** %MEMORY

  ; Code: movslq -0xb4(%rbp), %rcx	 RIP: 47391a	 Bytes: 7
  %loadMem_47391a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47391a = call %struct.Memory* @routine_movslq_MINUS0xb4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47391a)
  store %struct.Memory* %call_47391a, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473921	 Bytes: 7
  %loadMem_473921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473921 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473921)
  store %struct.Memory* %call_473921, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473928	 Bytes: 3
  %loadMem_473928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473928 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473928)
  store %struct.Memory* %call_473928, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 47392b	 Bytes: 7
  %loadMem_47392b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47392b = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47392b)
  store %struct.Memory* %call_47392b, %struct.Memory** %MEMORY

  ; Code: jne .L_47396a	 RIP: 473932	 Bytes: 6
  %loadMem_473932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473932 = call %struct.Memory* @routine_jne_.L_47396a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473932, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_473932, %struct.Memory** %MEMORY

  %loadBr_473932 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473932 = icmp eq i8 %loadBr_473932, 1
  br i1 %cmpBr_473932, label %block_.L_47396a, label %block_473938

block_473938:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473938	 Bytes: 8
  %loadMem_473938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473938 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473938)
  store %struct.Memory* %call_473938, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473940	 Bytes: 7
  %loadMem_473940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473940 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473940)
  store %struct.Memory* %call_473940, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473947	 Bytes: 4
  %loadMem_473947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473947 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473947)
  store %struct.Memory* %call_473947, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 47394b	 Bytes: 7
  %loadMem_47394b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47394b = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47394b)
  store %struct.Memory* %call_47394b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473952	 Bytes: 4
  %loadMem_473952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473952 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473952)
  store %struct.Memory* %call_473952, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473956	 Bytes: 7
  %loadMem_473956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473956 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473956)
  store %struct.Memory* %call_473956, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47395d	 Bytes: 4
  %loadMem_47395d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47395d = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47395d)
  store %struct.Memory* %call_47395d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473961	 Bytes: 3
  %loadMem_473961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473961 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473961)
  store %struct.Memory* %call_473961, %struct.Memory** %MEMORY

  ; Code: jge .L_47399e	 RIP: 473964	 Bytes: 6
  %loadMem_473964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473964 = call %struct.Memory* @routine_jge_.L_47399e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473964, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_473964, %struct.Memory** %MEMORY

  %loadBr_473964 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473964 = icmp eq i8 %loadBr_473964, 1
  br i1 %cmpBr_473964, label %block_.L_47399e, label %block_.L_47396a

  ; Code: .L_47396a:	 RIP: 47396a	 Bytes: 0
block_.L_47396a:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47396a	 Bytes: 8
  %loadMem_47396a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47396a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47396a)
  store %struct.Memory* %call_47396a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473972	 Bytes: 7
  %loadMem_473972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473972 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473972)
  store %struct.Memory* %call_473972, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473979	 Bytes: 4
  %loadMem_473979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473979 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473979)
  store %struct.Memory* %call_473979, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 47397d	 Bytes: 7
  %loadMem_47397d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47397d = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47397d)
  store %struct.Memory* %call_47397d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473984	 Bytes: 4
  %loadMem_473984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473984 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473984)
  store %struct.Memory* %call_473984, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473988	 Bytes: 7
  %loadMem_473988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473988 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473988)
  store %struct.Memory* %call_473988, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47398f	 Bytes: 4
  %loadMem_47398f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47398f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47398f)
  store %struct.Memory* %call_47398f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x160(%rbp)	 RIP: 473993	 Bytes: 6
  %loadMem_473993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473993 = call %struct.Memory* @routine_movl__edx__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473993)
  store %struct.Memory* %call_473993, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4739d0	 RIP: 473999	 Bytes: 5
  %loadMem_473999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473999 = call %struct.Memory* @routine_jmpq_.L_4739d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473999, i64 55, i64 5)
  store %struct.Memory* %call_473999, %struct.Memory** %MEMORY

  br label %block_.L_4739d0

  ; Code: .L_47399e:	 RIP: 47399e	 Bytes: 0
block_.L_47399e:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47399e	 Bytes: 8
  %loadMem_47399e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47399e = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47399e)
  store %struct.Memory* %call_47399e, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 4739a6	 Bytes: 7
  %loadMem_4739a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739a6 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739a6)
  store %struct.Memory* %call_4739a6, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4739ad	 Bytes: 4
  %loadMem_4739ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739ad = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739ad)
  store %struct.Memory* %call_4739ad, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 4739b1	 Bytes: 7
  %loadMem_4739b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739b1 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739b1)
  store %struct.Memory* %call_4739b1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4739b8	 Bytes: 4
  %loadMem_4739b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739b8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739b8)
  store %struct.Memory* %call_4739b8, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 4739bc	 Bytes: 7
  %loadMem_4739bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739bc = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739bc)
  store %struct.Memory* %call_4739bc, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4739c3	 Bytes: 4
  %loadMem_4739c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739c3 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739c3)
  store %struct.Memory* %call_4739c3, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4739c7	 Bytes: 3
  %loadMem_4739c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739c7 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739c7)
  store %struct.Memory* %call_4739c7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x160(%rbp)	 RIP: 4739ca	 Bytes: 6
  %loadMem_4739ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739ca = call %struct.Memory* @routine_movl__edx__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739ca)
  store %struct.Memory* %call_4739ca, %struct.Memory** %MEMORY

  ; Code: .L_4739d0:	 RIP: 4739d0	 Bytes: 0
  br label %block_.L_4739d0
block_.L_4739d0:

  ; Code: movl -0x160(%rbp), %eax	 RIP: 4739d0	 Bytes: 6
  %loadMem_4739d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739d0 = call %struct.Memory* @routine_movl_MINUS0x160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739d0)
  store %struct.Memory* %call_4739d0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x164(%rbp)	 RIP: 4739d6	 Bytes: 6
  %loadMem_4739d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739d6 = call %struct.Memory* @routine_movl__eax__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739d6)
  store %struct.Memory* %call_4739d6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4739f1	 RIP: 4739dc	 Bytes: 5
  %loadMem_4739dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739dc = call %struct.Memory* @routine_jmpq_.L_4739f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739dc, i64 21, i64 5)
  store %struct.Memory* %call_4739dc, %struct.Memory** %MEMORY

  br label %block_.L_4739f1

  ; Code: .L_4739e1:	 RIP: 4739e1	 Bytes: 0
block_.L_4739e1:

  ; Code: movl $0xffffffff, %eax	 RIP: 4739e1	 Bytes: 5
  %loadMem_4739e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739e1 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739e1)
  store %struct.Memory* %call_4739e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x164(%rbp)	 RIP: 4739e6	 Bytes: 6
  %loadMem_4739e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739e6 = call %struct.Memory* @routine_movl__eax__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739e6)
  store %struct.Memory* %call_4739e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4739f1	 RIP: 4739ec	 Bytes: 5
  %loadMem_4739ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739ec = call %struct.Memory* @routine_jmpq_.L_4739f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739ec, i64 5, i64 5)
  store %struct.Memory* %call_4739ec, %struct.Memory** %MEMORY

  br label %block_.L_4739f1

  ; Code: .L_4739f1:	 RIP: 4739f1	 Bytes: 0
block_.L_4739f1:

  ; Code: movl -0x164(%rbp), %eax	 RIP: 4739f1	 Bytes: 6
  %loadMem_4739f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739f1 = call %struct.Memory* @routine_movl_MINUS0x164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739f1)
  store %struct.Memory* %call_4739f1, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4739f7	 Bytes: 3
  %loadMem_4739f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739f7 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739f7)
  store %struct.Memory* %call_4739f7, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5e(%rbp)	 RIP: 4739fa	 Bytes: 4
  %loadMem_4739fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739fa = call %struct.Memory* @routine_movw__cx__MINUS0x5e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739fa)
  store %struct.Memory* %call_4739fa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xd0(%rbp)	 RIP: 4739fe	 Bytes: 7
  %loadMem_4739fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4739fe = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4739fe)
  store %struct.Memory* %call_4739fe, %struct.Memory** %MEMORY

  ; Code: je .L_473ae1	 RIP: 473a05	 Bytes: 6
  %loadMem_473a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a05 = call %struct.Memory* @routine_je_.L_473ae1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a05, i8* %BRANCH_TAKEN, i64 220, i64 6, i64 6)
  store %struct.Memory* %call_473a05, %struct.Memory** %MEMORY

  %loadBr_473a05 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473a05 = icmp eq i8 %loadBr_473a05, 1
  br i1 %cmpBr_473a05, label %block_.L_473ae1, label %block_473a0b

block_473a0b:
  ; Code: movq 0x6cb900, %rax	 RIP: 473a0b	 Bytes: 8
  %loadMem_473a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a0b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a0b)
  store %struct.Memory* %call_473a0b, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473a13	 Bytes: 7
  %loadMem_473a13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a13 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a13)
  store %struct.Memory* %call_473a13, %struct.Memory** %MEMORY

  ; Code: movslq -0xcc(%rbp), %rcx	 RIP: 473a1a	 Bytes: 7
  %loadMem_473a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a1a = call %struct.Memory* @routine_movslq_MINUS0xcc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a1a)
  store %struct.Memory* %call_473a1a, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473a21	 Bytes: 7
  %loadMem_473a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a21 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a21)
  store %struct.Memory* %call_473a21, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473a28	 Bytes: 3
  %loadMem_473a28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a28 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a28)
  store %struct.Memory* %call_473a28, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473a2b	 Bytes: 7
  %loadMem_473a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a2b = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a2b)
  store %struct.Memory* %call_473a2b, %struct.Memory** %MEMORY

  ; Code: jne .L_473a6a	 RIP: 473a32	 Bytes: 6
  %loadMem_473a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a32 = call %struct.Memory* @routine_jne_.L_473a6a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a32, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_473a32, %struct.Memory** %MEMORY

  %loadBr_473a32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473a32 = icmp eq i8 %loadBr_473a32, 1
  br i1 %cmpBr_473a32, label %block_.L_473a6a, label %block_473a38

block_473a38:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473a38	 Bytes: 8
  %loadMem_473a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a38 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a38)
  store %struct.Memory* %call_473a38, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473a40	 Bytes: 7
  %loadMem_473a40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a40 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a40)
  store %struct.Memory* %call_473a40, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473a47	 Bytes: 4
  %loadMem_473a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a47 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a47)
  store %struct.Memory* %call_473a47, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473a4b	 Bytes: 7
  %loadMem_473a4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a4b = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a4b)
  store %struct.Memory* %call_473a4b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473a52	 Bytes: 4
  %loadMem_473a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a52 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a52)
  store %struct.Memory* %call_473a52, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473a56	 Bytes: 7
  %loadMem_473a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a56 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a56)
  store %struct.Memory* %call_473a56, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473a5d	 Bytes: 4
  %loadMem_473a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a5d = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a5d)
  store %struct.Memory* %call_473a5d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473a61	 Bytes: 3
  %loadMem_473a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a61 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a61)
  store %struct.Memory* %call_473a61, %struct.Memory** %MEMORY

  ; Code: jge .L_473a9e	 RIP: 473a64	 Bytes: 6
  %loadMem_473a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a64 = call %struct.Memory* @routine_jge_.L_473a9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a64, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_473a64, %struct.Memory** %MEMORY

  %loadBr_473a64 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473a64 = icmp eq i8 %loadBr_473a64, 1
  br i1 %cmpBr_473a64, label %block_.L_473a9e, label %block_.L_473a6a

  ; Code: .L_473a6a:	 RIP: 473a6a	 Bytes: 0
block_.L_473a6a:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473a6a	 Bytes: 8
  %loadMem_473a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a6a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a6a)
  store %struct.Memory* %call_473a6a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473a72	 Bytes: 7
  %loadMem_473a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a72 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a72)
  store %struct.Memory* %call_473a72, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473a79	 Bytes: 4
  %loadMem_473a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a79 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a79)
  store %struct.Memory* %call_473a79, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473a7d	 Bytes: 7
  %loadMem_473a7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a7d = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a7d)
  store %struct.Memory* %call_473a7d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473a84	 Bytes: 4
  %loadMem_473a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a84 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a84)
  store %struct.Memory* %call_473a84, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473a88	 Bytes: 7
  %loadMem_473a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a88 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a88)
  store %struct.Memory* %call_473a88, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473a8f	 Bytes: 4
  %loadMem_473a8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a8f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a8f)
  store %struct.Memory* %call_473a8f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x168(%rbp)	 RIP: 473a93	 Bytes: 6
  %loadMem_473a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a93 = call %struct.Memory* @routine_movl__edx__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a93)
  store %struct.Memory* %call_473a93, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473ad0	 RIP: 473a99	 Bytes: 5
  %loadMem_473a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a99 = call %struct.Memory* @routine_jmpq_.L_473ad0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a99, i64 55, i64 5)
  store %struct.Memory* %call_473a99, %struct.Memory** %MEMORY

  br label %block_.L_473ad0

  ; Code: .L_473a9e:	 RIP: 473a9e	 Bytes: 0
block_.L_473a9e:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473a9e	 Bytes: 8
  %loadMem_473a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473a9e = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473a9e)
  store %struct.Memory* %call_473a9e, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473aa6	 Bytes: 7
  %loadMem_473aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473aa6 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473aa6)
  store %struct.Memory* %call_473aa6, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473aad	 Bytes: 4
  %loadMem_473aad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473aad = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473aad)
  store %struct.Memory* %call_473aad, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473ab1	 Bytes: 7
  %loadMem_473ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ab1 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ab1)
  store %struct.Memory* %call_473ab1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473ab8	 Bytes: 4
  %loadMem_473ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ab8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ab8)
  store %struct.Memory* %call_473ab8, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473abc	 Bytes: 7
  %loadMem_473abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473abc = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473abc)
  store %struct.Memory* %call_473abc, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473ac3	 Bytes: 4
  %loadMem_473ac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ac3 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ac3)
  store %struct.Memory* %call_473ac3, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 473ac7	 Bytes: 3
  %loadMem_473ac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ac7 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ac7)
  store %struct.Memory* %call_473ac7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x168(%rbp)	 RIP: 473aca	 Bytes: 6
  %loadMem_473aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473aca = call %struct.Memory* @routine_movl__edx__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473aca)
  store %struct.Memory* %call_473aca, %struct.Memory** %MEMORY

  ; Code: .L_473ad0:	 RIP: 473ad0	 Bytes: 0
  br label %block_.L_473ad0
block_.L_473ad0:

  ; Code: movl -0x168(%rbp), %eax	 RIP: 473ad0	 Bytes: 6
  %loadMem_473ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ad0 = call %struct.Memory* @routine_movl_MINUS0x168__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ad0)
  store %struct.Memory* %call_473ad0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x16c(%rbp)	 RIP: 473ad6	 Bytes: 6
  %loadMem_473ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ad6 = call %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ad6)
  store %struct.Memory* %call_473ad6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473aeb	 RIP: 473adc	 Bytes: 5
  %loadMem_473adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473adc = call %struct.Memory* @routine_jmpq_.L_473aeb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473adc, i64 15, i64 5)
  store %struct.Memory* %call_473adc, %struct.Memory** %MEMORY

  br label %block_.L_473aeb

  ; Code: .L_473ae1:	 RIP: 473ae1	 Bytes: 0
block_.L_473ae1:

  ; Code: movswl -0x5e(%rbp), %eax	 RIP: 473ae1	 Bytes: 4
  %loadMem_473ae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ae1 = call %struct.Memory* @routine_movswl_MINUS0x5e__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ae1)
  store %struct.Memory* %call_473ae1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x16c(%rbp)	 RIP: 473ae5	 Bytes: 6
  %loadMem_473ae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ae5 = call %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ae5)
  store %struct.Memory* %call_473ae5, %struct.Memory** %MEMORY

  ; Code: .L_473aeb:	 RIP: 473aeb	 Bytes: 0
  br label %block_.L_473aeb
block_.L_473aeb:

  ; Code: movl -0x16c(%rbp), %eax	 RIP: 473aeb	 Bytes: 6
  %loadMem_473aeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473aeb = call %struct.Memory* @routine_movl_MINUS0x16c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473aeb)
  store %struct.Memory* %call_473aeb, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473af1	 Bytes: 3
  %loadMem_473af1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473af1 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473af1)
  store %struct.Memory* %call_473af1, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x60(%rbp)	 RIP: 473af4	 Bytes: 4
  %loadMem_473af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473af4 = call %struct.Memory* @routine_movw__cx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473af4)
  store %struct.Memory* %call_473af4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4742c1	 RIP: 473af8	 Bytes: 5
  %loadMem_473af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473af8 = call %struct.Memory* @routine_jmpq_.L_4742c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473af8, i64 1993, i64 5)
  store %struct.Memory* %call_473af8, %struct.Memory** %MEMORY

  br label %block_.L_4742c1

  ; Code: .L_473afd:	 RIP: 473afd	 Bytes: 0
block_.L_473afd:

  ; Code: cmpl $0x0, -0x88(%rbp)	 RIP: 473afd	 Bytes: 7
  %loadMem_473afd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473afd = call %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473afd)
  store %struct.Memory* %call_473afd, %struct.Memory** %MEMORY

  ; Code: je .L_473bcb	 RIP: 473b04	 Bytes: 6
  %loadMem_473b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b04 = call %struct.Memory* @routine_je_.L_473bcb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b04, i8* %BRANCH_TAKEN, i64 199, i64 6, i64 6)
  store %struct.Memory* %call_473b04, %struct.Memory** %MEMORY

  %loadBr_473b04 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473b04 = icmp eq i8 %loadBr_473b04, 1
  br i1 %cmpBr_473b04, label %block_.L_473bcb, label %block_473b0a

block_473b0a:
  ; Code: movq 0x6cb900, %rax	 RIP: 473b0a	 Bytes: 8
  %loadMem_473b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b0a = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b0a)
  store %struct.Memory* %call_473b0a, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473b12	 Bytes: 7
  %loadMem_473b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b12 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b12)
  store %struct.Memory* %call_473b12, %struct.Memory** %MEMORY

  ; Code: movslq -0x84(%rbp), %rcx	 RIP: 473b19	 Bytes: 7
  %loadMem_473b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b19 = call %struct.Memory* @routine_movslq_MINUS0x84__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b19)
  store %struct.Memory* %call_473b19, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473b20	 Bytes: 7
  %loadMem_473b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b20 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b20)
  store %struct.Memory* %call_473b20, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473b27	 Bytes: 3
  %loadMem_473b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b27 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b27)
  store %struct.Memory* %call_473b27, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473b2a	 Bytes: 7
  %loadMem_473b2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b2a = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b2a)
  store %struct.Memory* %call_473b2a, %struct.Memory** %MEMORY

  ; Code: jne .L_473b62	 RIP: 473b31	 Bytes: 6
  %loadMem_473b31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b31 = call %struct.Memory* @routine_jne_.L_473b62(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b31, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_473b31, %struct.Memory** %MEMORY

  %loadBr_473b31 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473b31 = icmp eq i8 %loadBr_473b31, 1
  br i1 %cmpBr_473b31, label %block_.L_473b62, label %block_473b37

block_473b37:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473b37	 Bytes: 8
  %loadMem_473b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b37 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b37)
  store %struct.Memory* %call_473b37, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473b3f	 Bytes: 7
  %loadMem_473b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b3f = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b3f)
  store %struct.Memory* %call_473b3f, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473b46	 Bytes: 3
  %loadMem_473b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b46 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b46)
  store %struct.Memory* %call_473b46, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473b49	 Bytes: 4
  %loadMem_473b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b49 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b49)
  store %struct.Memory* %call_473b49, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473b4d	 Bytes: 4
  %loadMem_473b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b4d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b4d)
  store %struct.Memory* %call_473b4d, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473b51	 Bytes: 4
  %loadMem_473b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b51 = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b51)
  store %struct.Memory* %call_473b51, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473b55	 Bytes: 4
  %loadMem_473b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b55 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b55)
  store %struct.Memory* %call_473b55, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473b59	 Bytes: 3
  %loadMem_473b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b59 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b59)
  store %struct.Memory* %call_473b59, %struct.Memory** %MEMORY

  ; Code: jge .L_473b92	 RIP: 473b5c	 Bytes: 6
  %loadMem_473b5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b5c = call %struct.Memory* @routine_jge_.L_473b92(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b5c, i8* %BRANCH_TAKEN, i64 54, i64 6, i64 6)
  store %struct.Memory* %call_473b5c, %struct.Memory** %MEMORY

  %loadBr_473b5c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473b5c = icmp eq i8 %loadBr_473b5c, 1
  br i1 %cmpBr_473b5c, label %block_.L_473b92, label %block_.L_473b62

  ; Code: .L_473b62:	 RIP: 473b62	 Bytes: 0
block_.L_473b62:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473b62	 Bytes: 8
  %loadMem_473b62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b62 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b62)
  store %struct.Memory* %call_473b62, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473b6a	 Bytes: 7
  %loadMem_473b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b6a = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b6a)
  store %struct.Memory* %call_473b6a, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473b71	 Bytes: 3
  %loadMem_473b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b71 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b71)
  store %struct.Memory* %call_473b71, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473b74	 Bytes: 4
  %loadMem_473b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b74 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b74)
  store %struct.Memory* %call_473b74, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473b78	 Bytes: 4
  %loadMem_473b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b78 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b78)
  store %struct.Memory* %call_473b78, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473b7c	 Bytes: 4
  %loadMem_473b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b7c = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b7c)
  store %struct.Memory* %call_473b7c, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473b80	 Bytes: 4
  %loadMem_473b80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b80 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b80)
  store %struct.Memory* %call_473b80, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 473b84	 Bytes: 3
  %loadMem_473b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b84 = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b84)
  store %struct.Memory* %call_473b84, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x170(%rbp)	 RIP: 473b87	 Bytes: 6
  %loadMem_473b87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b87 = call %struct.Memory* @routine_movl__edx__MINUS0x170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b87)
  store %struct.Memory* %call_473b87, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473bba	 RIP: 473b8d	 Bytes: 5
  %loadMem_473b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b8d = call %struct.Memory* @routine_jmpq_.L_473bba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b8d, i64 45, i64 5)
  store %struct.Memory* %call_473b8d, %struct.Memory** %MEMORY

  br label %block_.L_473bba

  ; Code: .L_473b92:	 RIP: 473b92	 Bytes: 0
block_.L_473b92:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473b92	 Bytes: 8
  %loadMem_473b92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b92 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b92)
  store %struct.Memory* %call_473b92, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473b9a	 Bytes: 7
  %loadMem_473b9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473b9a = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473b9a)
  store %struct.Memory* %call_473b9a, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473ba1	 Bytes: 3
  %loadMem_473ba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ba1 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ba1)
  store %struct.Memory* %call_473ba1, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473ba4	 Bytes: 4
  %loadMem_473ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ba4 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ba4)
  store %struct.Memory* %call_473ba4, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473ba8	 Bytes: 4
  %loadMem_473ba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ba8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ba8)
  store %struct.Memory* %call_473ba8, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473bac	 Bytes: 4
  %loadMem_473bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bac = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bac)
  store %struct.Memory* %call_473bac, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473bb0	 Bytes: 4
  %loadMem_473bb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bb0 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bb0)
  store %struct.Memory* %call_473bb0, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x170(%rbp)	 RIP: 473bb4	 Bytes: 6
  %loadMem_473bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bb4 = call %struct.Memory* @routine_movl__edx__MINUS0x170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bb4)
  store %struct.Memory* %call_473bb4, %struct.Memory** %MEMORY

  ; Code: .L_473bba:	 RIP: 473bba	 Bytes: 0
  br label %block_.L_473bba
block_.L_473bba:

  ; Code: movl -0x170(%rbp), %eax	 RIP: 473bba	 Bytes: 6
  %loadMem_473bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bba = call %struct.Memory* @routine_movl_MINUS0x170__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bba)
  store %struct.Memory* %call_473bba, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x174(%rbp)	 RIP: 473bc0	 Bytes: 6
  %loadMem_473bc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bc0 = call %struct.Memory* @routine_movl__eax__MINUS0x174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bc0)
  store %struct.Memory* %call_473bc0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473bdb	 RIP: 473bc6	 Bytes: 5
  %loadMem_473bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bc6 = call %struct.Memory* @routine_jmpq_.L_473bdb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bc6, i64 21, i64 5)
  store %struct.Memory* %call_473bc6, %struct.Memory** %MEMORY

  br label %block_.L_473bdb

  ; Code: .L_473bcb:	 RIP: 473bcb	 Bytes: 0
block_.L_473bcb:

  ; Code: movl $0xffffffff, %eax	 RIP: 473bcb	 Bytes: 5
  %loadMem_473bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bcb = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bcb)
  store %struct.Memory* %call_473bcb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x174(%rbp)	 RIP: 473bd0	 Bytes: 6
  %loadMem_473bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bd0 = call %struct.Memory* @routine_movl__eax__MINUS0x174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bd0)
  store %struct.Memory* %call_473bd0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473bdb	 RIP: 473bd6	 Bytes: 5
  %loadMem_473bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bd6 = call %struct.Memory* @routine_jmpq_.L_473bdb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bd6, i64 5, i64 5)
  store %struct.Memory* %call_473bd6, %struct.Memory** %MEMORY

  br label %block_.L_473bdb

  ; Code: .L_473bdb:	 RIP: 473bdb	 Bytes: 0
block_.L_473bdb:

  ; Code: movl -0x174(%rbp), %eax	 RIP: 473bdb	 Bytes: 6
  %loadMem_473bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bdb = call %struct.Memory* @routine_movl_MINUS0x174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bdb)
  store %struct.Memory* %call_473bdb, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473be1	 Bytes: 3
  %loadMem_473be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473be1 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473be1)
  store %struct.Memory* %call_473be1, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x52(%rbp)	 RIP: 473be4	 Bytes: 4
  %loadMem_473be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473be4 = call %struct.Memory* @routine_movw__cx__MINUS0x52__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473be4)
  store %struct.Memory* %call_473be4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xa0(%rbp)	 RIP: 473be8	 Bytes: 7
  %loadMem_473be8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473be8 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473be8)
  store %struct.Memory* %call_473be8, %struct.Memory** %MEMORY

  ; Code: je .L_473cc8	 RIP: 473bef	 Bytes: 6
  %loadMem_473bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bef = call %struct.Memory* @routine_je_.L_473cc8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bef, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_473bef, %struct.Memory** %MEMORY

  %loadBr_473bef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473bef = icmp eq i8 %loadBr_473bef, 1
  br i1 %cmpBr_473bef, label %block_.L_473cc8, label %block_473bf5

block_473bf5:
  ; Code: movq 0x6cb900, %rax	 RIP: 473bf5	 Bytes: 8
  %loadMem_473bf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bf5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bf5)
  store %struct.Memory* %call_473bf5, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473bfd	 Bytes: 7
  %loadMem_473bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473bfd = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473bfd)
  store %struct.Memory* %call_473bfd, %struct.Memory** %MEMORY

  ; Code: movslq -0x9c(%rbp), %rcx	 RIP: 473c04	 Bytes: 7
  %loadMem_473c04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c04 = call %struct.Memory* @routine_movslq_MINUS0x9c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c04)
  store %struct.Memory* %call_473c04, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473c0b	 Bytes: 7
  %loadMem_473c0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c0b = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c0b)
  store %struct.Memory* %call_473c0b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473c12	 Bytes: 3
  %loadMem_473c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c12 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c12)
  store %struct.Memory* %call_473c12, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473c15	 Bytes: 7
  %loadMem_473c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c15 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c15)
  store %struct.Memory* %call_473c15, %struct.Memory** %MEMORY

  ; Code: jne .L_473c53	 RIP: 473c1c	 Bytes: 6
  %loadMem_473c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c1c = call %struct.Memory* @routine_jne_.L_473c53(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c1c, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_473c1c, %struct.Memory** %MEMORY

  %loadBr_473c1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473c1c = icmp eq i8 %loadBr_473c1c, 1
  br i1 %cmpBr_473c1c, label %block_.L_473c53, label %block_473c22

block_473c22:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473c22	 Bytes: 8
  %loadMem_473c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c22 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c22)
  store %struct.Memory* %call_473c22, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473c2a	 Bytes: 7
  %loadMem_473c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c2a = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c2a)
  store %struct.Memory* %call_473c2a, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473c31	 Bytes: 3
  %loadMem_473c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c31 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c31)
  store %struct.Memory* %call_473c31, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 473c34	 Bytes: 7
  %loadMem_473c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c34 = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c34)
  store %struct.Memory* %call_473c34, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473c3b	 Bytes: 4
  %loadMem_473c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c3b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c3b)
  store %struct.Memory* %call_473c3b, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 473c3f	 Bytes: 7
  %loadMem_473c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c3f = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c3f)
  store %struct.Memory* %call_473c3f, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473c46	 Bytes: 4
  %loadMem_473c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c46 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c46)
  store %struct.Memory* %call_473c46, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473c4a	 Bytes: 3
  %loadMem_473c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c4a = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c4a)
  store %struct.Memory* %call_473c4a, %struct.Memory** %MEMORY

  ; Code: jge .L_473c89	 RIP: 473c4d	 Bytes: 6
  %loadMem_473c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c4d = call %struct.Memory* @routine_jge_.L_473c89(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c4d, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_473c4d, %struct.Memory** %MEMORY

  %loadBr_473c4d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473c4d = icmp eq i8 %loadBr_473c4d, 1
  br i1 %cmpBr_473c4d, label %block_.L_473c89, label %block_.L_473c53

  ; Code: .L_473c53:	 RIP: 473c53	 Bytes: 0
block_.L_473c53:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473c53	 Bytes: 8
  %loadMem_473c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c53 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c53)
  store %struct.Memory* %call_473c53, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473c5b	 Bytes: 7
  %loadMem_473c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c5b = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c5b)
  store %struct.Memory* %call_473c5b, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473c62	 Bytes: 3
  %loadMem_473c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c62 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c62)
  store %struct.Memory* %call_473c62, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 473c65	 Bytes: 7
  %loadMem_473c65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c65 = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c65)
  store %struct.Memory* %call_473c65, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473c6c	 Bytes: 4
  %loadMem_473c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c6c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c6c)
  store %struct.Memory* %call_473c6c, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 473c70	 Bytes: 7
  %loadMem_473c70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c70 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c70)
  store %struct.Memory* %call_473c70, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473c77	 Bytes: 4
  %loadMem_473c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c77 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c77)
  store %struct.Memory* %call_473c77, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 473c7b	 Bytes: 3
  %loadMem_473c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c7b = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c7b)
  store %struct.Memory* %call_473c7b, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x178(%rbp)	 RIP: 473c7e	 Bytes: 6
  %loadMem_473c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c7e = call %struct.Memory* @routine_movl__edx__MINUS0x178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c7e)
  store %struct.Memory* %call_473c7e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473cb7	 RIP: 473c84	 Bytes: 5
  %loadMem_473c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c84 = call %struct.Memory* @routine_jmpq_.L_473cb7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c84, i64 51, i64 5)
  store %struct.Memory* %call_473c84, %struct.Memory** %MEMORY

  br label %block_.L_473cb7

  ; Code: .L_473c89:	 RIP: 473c89	 Bytes: 0
block_.L_473c89:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473c89	 Bytes: 8
  %loadMem_473c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c89 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c89)
  store %struct.Memory* %call_473c89, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473c91	 Bytes: 7
  %loadMem_473c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c91 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c91)
  store %struct.Memory* %call_473c91, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473c98	 Bytes: 3
  %loadMem_473c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c98 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c98)
  store %struct.Memory* %call_473c98, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 473c9b	 Bytes: 7
  %loadMem_473c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473c9b = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473c9b)
  store %struct.Memory* %call_473c9b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473ca2	 Bytes: 4
  %loadMem_473ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ca2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ca2)
  store %struct.Memory* %call_473ca2, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 473ca6	 Bytes: 7
  %loadMem_473ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ca6 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ca6)
  store %struct.Memory* %call_473ca6, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473cad	 Bytes: 4
  %loadMem_473cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cad = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cad)
  store %struct.Memory* %call_473cad, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x178(%rbp)	 RIP: 473cb1	 Bytes: 6
  %loadMem_473cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cb1 = call %struct.Memory* @routine_movl__edx__MINUS0x178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cb1)
  store %struct.Memory* %call_473cb1, %struct.Memory** %MEMORY

  ; Code: .L_473cb7:	 RIP: 473cb7	 Bytes: 0
  br label %block_.L_473cb7
block_.L_473cb7:

  ; Code: movl -0x178(%rbp), %eax	 RIP: 473cb7	 Bytes: 6
  %loadMem_473cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cb7 = call %struct.Memory* @routine_movl_MINUS0x178__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cb7)
  store %struct.Memory* %call_473cb7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x17c(%rbp)	 RIP: 473cbd	 Bytes: 6
  %loadMem_473cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cbd = call %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cbd)
  store %struct.Memory* %call_473cbd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473cd8	 RIP: 473cc3	 Bytes: 5
  %loadMem_473cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cc3 = call %struct.Memory* @routine_jmpq_.L_473cd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cc3, i64 21, i64 5)
  store %struct.Memory* %call_473cc3, %struct.Memory** %MEMORY

  br label %block_.L_473cd8

  ; Code: .L_473cc8:	 RIP: 473cc8	 Bytes: 0
block_.L_473cc8:

  ; Code: movl $0xffffffff, %eax	 RIP: 473cc8	 Bytes: 5
  %loadMem_473cc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cc8 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cc8)
  store %struct.Memory* %call_473cc8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x17c(%rbp)	 RIP: 473ccd	 Bytes: 6
  %loadMem_473ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ccd = call %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ccd)
  store %struct.Memory* %call_473ccd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473cd8	 RIP: 473cd3	 Bytes: 5
  %loadMem_473cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cd3 = call %struct.Memory* @routine_jmpq_.L_473cd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cd3, i64 5, i64 5)
  store %struct.Memory* %call_473cd3, %struct.Memory** %MEMORY

  br label %block_.L_473cd8

  ; Code: .L_473cd8:	 RIP: 473cd8	 Bytes: 0
block_.L_473cd8:

  ; Code: movl -0x17c(%rbp), %eax	 RIP: 473cd8	 Bytes: 6
  %loadMem_473cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cd8 = call %struct.Memory* @routine_movl_MINUS0x17c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cd8)
  store %struct.Memory* %call_473cd8, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473cde	 Bytes: 3
  %loadMem_473cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cde = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cde)
  store %struct.Memory* %call_473cde, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x54(%rbp)	 RIP: 473ce1	 Bytes: 4
  %loadMem_473ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ce1 = call %struct.Memory* @routine_movw__cx__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ce1)
  store %struct.Memory* %call_473ce1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xb8(%rbp)	 RIP: 473ce5	 Bytes: 7
  %loadMem_473ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ce5 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ce5)
  store %struct.Memory* %call_473ce5, %struct.Memory** %MEMORY

  ; Code: je .L_473dc5	 RIP: 473cec	 Bytes: 6
  %loadMem_473cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cec = call %struct.Memory* @routine_je_.L_473dc5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cec, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_473cec, %struct.Memory** %MEMORY

  %loadBr_473cec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473cec = icmp eq i8 %loadBr_473cec, 1
  br i1 %cmpBr_473cec, label %block_.L_473dc5, label %block_473cf2

block_473cf2:
  ; Code: movq 0x6cb900, %rax	 RIP: 473cf2	 Bytes: 8
  %loadMem_473cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cf2 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cf2)
  store %struct.Memory* %call_473cf2, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473cfa	 Bytes: 7
  %loadMem_473cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473cfa = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473cfa)
  store %struct.Memory* %call_473cfa, %struct.Memory** %MEMORY

  ; Code: movslq -0xb4(%rbp), %rcx	 RIP: 473d01	 Bytes: 7
  %loadMem_473d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d01 = call %struct.Memory* @routine_movslq_MINUS0xb4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d01)
  store %struct.Memory* %call_473d01, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473d08	 Bytes: 7
  %loadMem_473d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d08 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d08)
  store %struct.Memory* %call_473d08, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473d0f	 Bytes: 3
  %loadMem_473d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d0f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d0f)
  store %struct.Memory* %call_473d0f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473d12	 Bytes: 7
  %loadMem_473d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d12 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d12)
  store %struct.Memory* %call_473d12, %struct.Memory** %MEMORY

  ; Code: jne .L_473d50	 RIP: 473d19	 Bytes: 6
  %loadMem_473d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d19 = call %struct.Memory* @routine_jne_.L_473d50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d19, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_473d19, %struct.Memory** %MEMORY

  %loadBr_473d19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473d19 = icmp eq i8 %loadBr_473d19, 1
  br i1 %cmpBr_473d19, label %block_.L_473d50, label %block_473d1f

block_473d1f:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473d1f	 Bytes: 8
  %loadMem_473d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d1f = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d1f)
  store %struct.Memory* %call_473d1f, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473d27	 Bytes: 7
  %loadMem_473d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d27 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d27)
  store %struct.Memory* %call_473d27, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473d2e	 Bytes: 3
  %loadMem_473d2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d2e = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d2e)
  store %struct.Memory* %call_473d2e, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 473d31	 Bytes: 7
  %loadMem_473d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d31 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d31)
  store %struct.Memory* %call_473d31, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473d38	 Bytes: 4
  %loadMem_473d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d38 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d38)
  store %struct.Memory* %call_473d38, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473d3c	 Bytes: 7
  %loadMem_473d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d3c = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d3c)
  store %struct.Memory* %call_473d3c, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473d43	 Bytes: 4
  %loadMem_473d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d43 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d43)
  store %struct.Memory* %call_473d43, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473d47	 Bytes: 3
  %loadMem_473d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d47 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d47)
  store %struct.Memory* %call_473d47, %struct.Memory** %MEMORY

  ; Code: jge .L_473d86	 RIP: 473d4a	 Bytes: 6
  %loadMem_473d4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d4a = call %struct.Memory* @routine_jge_.L_473d86(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d4a, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_473d4a, %struct.Memory** %MEMORY

  %loadBr_473d4a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473d4a = icmp eq i8 %loadBr_473d4a, 1
  br i1 %cmpBr_473d4a, label %block_.L_473d86, label %block_.L_473d50

  ; Code: .L_473d50:	 RIP: 473d50	 Bytes: 0
block_.L_473d50:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473d50	 Bytes: 8
  %loadMem_473d50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d50 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d50)
  store %struct.Memory* %call_473d50, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473d58	 Bytes: 7
  %loadMem_473d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d58 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d58)
  store %struct.Memory* %call_473d58, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473d5f	 Bytes: 3
  %loadMem_473d5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d5f = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d5f)
  store %struct.Memory* %call_473d5f, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 473d62	 Bytes: 7
  %loadMem_473d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d62 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d62)
  store %struct.Memory* %call_473d62, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473d69	 Bytes: 4
  %loadMem_473d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d69 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d69)
  store %struct.Memory* %call_473d69, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473d6d	 Bytes: 7
  %loadMem_473d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d6d = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d6d)
  store %struct.Memory* %call_473d6d, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473d74	 Bytes: 4
  %loadMem_473d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d74 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d74)
  store %struct.Memory* %call_473d74, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 473d78	 Bytes: 3
  %loadMem_473d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d78 = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d78)
  store %struct.Memory* %call_473d78, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x180(%rbp)	 RIP: 473d7b	 Bytes: 6
  %loadMem_473d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d7b = call %struct.Memory* @routine_movl__edx__MINUS0x180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d7b)
  store %struct.Memory* %call_473d7b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473db4	 RIP: 473d81	 Bytes: 5
  %loadMem_473d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d81 = call %struct.Memory* @routine_jmpq_.L_473db4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d81, i64 51, i64 5)
  store %struct.Memory* %call_473d81, %struct.Memory** %MEMORY

  br label %block_.L_473db4

  ; Code: .L_473d86:	 RIP: 473d86	 Bytes: 0
block_.L_473d86:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473d86	 Bytes: 8
  %loadMem_473d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d86 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d86)
  store %struct.Memory* %call_473d86, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473d8e	 Bytes: 7
  %loadMem_473d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d8e = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d8e)
  store %struct.Memory* %call_473d8e, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473d95	 Bytes: 3
  %loadMem_473d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d95 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d95)
  store %struct.Memory* %call_473d95, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 473d98	 Bytes: 7
  %loadMem_473d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d98 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d98)
  store %struct.Memory* %call_473d98, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473d9f	 Bytes: 4
  %loadMem_473d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473d9f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473d9f)
  store %struct.Memory* %call_473d9f, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 473da3	 Bytes: 7
  %loadMem_473da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473da3 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473da3)
  store %struct.Memory* %call_473da3, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473daa	 Bytes: 4
  %loadMem_473daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473daa = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473daa)
  store %struct.Memory* %call_473daa, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x180(%rbp)	 RIP: 473dae	 Bytes: 6
  %loadMem_473dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dae = call %struct.Memory* @routine_movl__edx__MINUS0x180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dae)
  store %struct.Memory* %call_473dae, %struct.Memory** %MEMORY

  ; Code: .L_473db4:	 RIP: 473db4	 Bytes: 0
  br label %block_.L_473db4
block_.L_473db4:

  ; Code: movl -0x180(%rbp), %eax	 RIP: 473db4	 Bytes: 6
  %loadMem_473db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473db4 = call %struct.Memory* @routine_movl_MINUS0x180__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473db4)
  store %struct.Memory* %call_473db4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x184(%rbp)	 RIP: 473dba	 Bytes: 6
  %loadMem_473dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dba = call %struct.Memory* @routine_movl__eax__MINUS0x184__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dba)
  store %struct.Memory* %call_473dba, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473dd5	 RIP: 473dc0	 Bytes: 5
  %loadMem_473dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dc0 = call %struct.Memory* @routine_jmpq_.L_473dd5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dc0, i64 21, i64 5)
  store %struct.Memory* %call_473dc0, %struct.Memory** %MEMORY

  br label %block_.L_473dd5

  ; Code: .L_473dc5:	 RIP: 473dc5	 Bytes: 0
block_.L_473dc5:

  ; Code: movl $0xffffffff, %eax	 RIP: 473dc5	 Bytes: 5
  %loadMem_473dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dc5 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dc5)
  store %struct.Memory* %call_473dc5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x184(%rbp)	 RIP: 473dca	 Bytes: 6
  %loadMem_473dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dca = call %struct.Memory* @routine_movl__eax__MINUS0x184__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dca)
  store %struct.Memory* %call_473dca, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473dd5	 RIP: 473dd0	 Bytes: 5
  %loadMem_473dd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dd0 = call %struct.Memory* @routine_jmpq_.L_473dd5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dd0, i64 5, i64 5)
  store %struct.Memory* %call_473dd0, %struct.Memory** %MEMORY

  br label %block_.L_473dd5

  ; Code: .L_473dd5:	 RIP: 473dd5	 Bytes: 0
block_.L_473dd5:

  ; Code: movl -0x184(%rbp), %eax	 RIP: 473dd5	 Bytes: 6
  %loadMem_473dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dd5 = call %struct.Memory* @routine_movl_MINUS0x184__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dd5)
  store %struct.Memory* %call_473dd5, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473ddb	 Bytes: 3
  %loadMem_473ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ddb = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ddb)
  store %struct.Memory* %call_473ddb, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x56(%rbp)	 RIP: 473dde	 Bytes: 4
  %loadMem_473dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dde = call %struct.Memory* @routine_movw__cx__MINUS0x56__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dde)
  store %struct.Memory* %call_473dde, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xd0(%rbp)	 RIP: 473de2	 Bytes: 7
  %loadMem_473de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473de2 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473de2)
  store %struct.Memory* %call_473de2, %struct.Memory** %MEMORY

  ; Code: je .L_473ec2	 RIP: 473de9	 Bytes: 6
  %loadMem_473de9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473de9 = call %struct.Memory* @routine_je_.L_473ec2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473de9, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_473de9, %struct.Memory** %MEMORY

  %loadBr_473de9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473de9 = icmp eq i8 %loadBr_473de9, 1
  br i1 %cmpBr_473de9, label %block_.L_473ec2, label %block_473def

block_473def:
  ; Code: movq 0x6cb900, %rax	 RIP: 473def	 Bytes: 8
  %loadMem_473def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473def = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473def)
  store %struct.Memory* %call_473def, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473df7	 Bytes: 7
  %loadMem_473df7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473df7 = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473df7)
  store %struct.Memory* %call_473df7, %struct.Memory** %MEMORY

  ; Code: movslq -0xcc(%rbp), %rcx	 RIP: 473dfe	 Bytes: 7
  %loadMem_473dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473dfe = call %struct.Memory* @routine_movslq_MINUS0xcc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473dfe)
  store %struct.Memory* %call_473dfe, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473e05	 Bytes: 7
  %loadMem_473e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e05 = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e05)
  store %struct.Memory* %call_473e05, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473e0c	 Bytes: 3
  %loadMem_473e0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e0c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e0c)
  store %struct.Memory* %call_473e0c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473e0f	 Bytes: 7
  %loadMem_473e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e0f = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e0f)
  store %struct.Memory* %call_473e0f, %struct.Memory** %MEMORY

  ; Code: jne .L_473e4d	 RIP: 473e16	 Bytes: 6
  %loadMem_473e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e16 = call %struct.Memory* @routine_jne_.L_473e4d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e16, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_473e16, %struct.Memory** %MEMORY

  %loadBr_473e16 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473e16 = icmp eq i8 %loadBr_473e16, 1
  br i1 %cmpBr_473e16, label %block_.L_473e4d, label %block_473e1c

block_473e1c:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473e1c	 Bytes: 8
  %loadMem_473e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e1c = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e1c)
  store %struct.Memory* %call_473e1c, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473e24	 Bytes: 7
  %loadMem_473e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e24 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e24)
  store %struct.Memory* %call_473e24, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473e2b	 Bytes: 3
  %loadMem_473e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e2b = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e2b)
  store %struct.Memory* %call_473e2b, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473e2e	 Bytes: 7
  %loadMem_473e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e2e = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e2e)
  store %struct.Memory* %call_473e2e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473e35	 Bytes: 4
  %loadMem_473e35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e35 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e35)
  store %struct.Memory* %call_473e35, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473e39	 Bytes: 7
  %loadMem_473e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e39 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e39)
  store %struct.Memory* %call_473e39, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473e40	 Bytes: 4
  %loadMem_473e40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e40 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e40)
  store %struct.Memory* %call_473e40, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473e44	 Bytes: 3
  %loadMem_473e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e44 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e44)
  store %struct.Memory* %call_473e44, %struct.Memory** %MEMORY

  ; Code: jge .L_473e83	 RIP: 473e47	 Bytes: 6
  %loadMem_473e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e47 = call %struct.Memory* @routine_jge_.L_473e83(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e47, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_473e47, %struct.Memory** %MEMORY

  %loadBr_473e47 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473e47 = icmp eq i8 %loadBr_473e47, 1
  br i1 %cmpBr_473e47, label %block_.L_473e83, label %block_.L_473e4d

  ; Code: .L_473e4d:	 RIP: 473e4d	 Bytes: 0
block_.L_473e4d:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473e4d	 Bytes: 8
  %loadMem_473e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e4d = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e4d)
  store %struct.Memory* %call_473e4d, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473e55	 Bytes: 7
  %loadMem_473e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e55 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e55)
  store %struct.Memory* %call_473e55, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473e5c	 Bytes: 3
  %loadMem_473e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e5c = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e5c)
  store %struct.Memory* %call_473e5c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473e5f	 Bytes: 7
  %loadMem_473e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e5f = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e5f)
  store %struct.Memory* %call_473e5f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473e66	 Bytes: 4
  %loadMem_473e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e66 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e66)
  store %struct.Memory* %call_473e66, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473e6a	 Bytes: 7
  %loadMem_473e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e6a = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e6a)
  store %struct.Memory* %call_473e6a, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473e71	 Bytes: 4
  %loadMem_473e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e71 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e71)
  store %struct.Memory* %call_473e71, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 473e75	 Bytes: 3
  %loadMem_473e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e75 = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e75)
  store %struct.Memory* %call_473e75, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x188(%rbp)	 RIP: 473e78	 Bytes: 6
  %loadMem_473e78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e78 = call %struct.Memory* @routine_movl__edx__MINUS0x188__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e78)
  store %struct.Memory* %call_473e78, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473eb1	 RIP: 473e7e	 Bytes: 5
  %loadMem_473e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e7e = call %struct.Memory* @routine_jmpq_.L_473eb1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e7e, i64 51, i64 5)
  store %struct.Memory* %call_473e7e, %struct.Memory** %MEMORY

  br label %block_.L_473eb1

  ; Code: .L_473e83:	 RIP: 473e83	 Bytes: 0
block_.L_473e83:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473e83	 Bytes: 8
  %loadMem_473e83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e83 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e83)
  store %struct.Memory* %call_473e83, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473e8b	 Bytes: 7
  %loadMem_473e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e8b = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e8b)
  store %struct.Memory* %call_473e8b, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 473e92	 Bytes: 3
  %loadMem_473e92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e92 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e92)
  store %struct.Memory* %call_473e92, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 473e95	 Bytes: 7
  %loadMem_473e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e95 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e95)
  store %struct.Memory* %call_473e95, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473e9c	 Bytes: 4
  %loadMem_473e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473e9c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473e9c)
  store %struct.Memory* %call_473e9c, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 473ea0	 Bytes: 7
  %loadMem_473ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ea0 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ea0)
  store %struct.Memory* %call_473ea0, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473ea7	 Bytes: 4
  %loadMem_473ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ea7 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ea7)
  store %struct.Memory* %call_473ea7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x188(%rbp)	 RIP: 473eab	 Bytes: 6
  %loadMem_473eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473eab = call %struct.Memory* @routine_movl__edx__MINUS0x188__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473eab)
  store %struct.Memory* %call_473eab, %struct.Memory** %MEMORY

  ; Code: .L_473eb1:	 RIP: 473eb1	 Bytes: 0
  br label %block_.L_473eb1
block_.L_473eb1:

  ; Code: movl -0x188(%rbp), %eax	 RIP: 473eb1	 Bytes: 6
  %loadMem_473eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473eb1 = call %struct.Memory* @routine_movl_MINUS0x188__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473eb1)
  store %struct.Memory* %call_473eb1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18c(%rbp)	 RIP: 473eb7	 Bytes: 6
  %loadMem_473eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473eb7 = call %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473eb7)
  store %struct.Memory* %call_473eb7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473ecc	 RIP: 473ebd	 Bytes: 5
  %loadMem_473ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ebd = call %struct.Memory* @routine_jmpq_.L_473ecc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ebd, i64 15, i64 5)
  store %struct.Memory* %call_473ebd, %struct.Memory** %MEMORY

  br label %block_.L_473ecc

  ; Code: .L_473ec2:	 RIP: 473ec2	 Bytes: 0
block_.L_473ec2:

  ; Code: movswl -0x56(%rbp), %eax	 RIP: 473ec2	 Bytes: 4
  %loadMem_473ec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ec2 = call %struct.Memory* @routine_movswl_MINUS0x56__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ec2)
  store %struct.Memory* %call_473ec2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18c(%rbp)	 RIP: 473ec6	 Bytes: 6
  %loadMem_473ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ec6 = call %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ec6)
  store %struct.Memory* %call_473ec6, %struct.Memory** %MEMORY

  ; Code: .L_473ecc:	 RIP: 473ecc	 Bytes: 0
  br label %block_.L_473ecc
block_.L_473ecc:

  ; Code: movl -0x18c(%rbp), %eax	 RIP: 473ecc	 Bytes: 6
  %loadMem_473ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ecc = call %struct.Memory* @routine_movl_MINUS0x18c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ecc)
  store %struct.Memory* %call_473ecc, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473ed2	 Bytes: 3
  %loadMem_473ed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ed2 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ed2)
  store %struct.Memory* %call_473ed2, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x58(%rbp)	 RIP: 473ed5	 Bytes: 4
  %loadMem_473ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ed5 = call %struct.Memory* @routine_movw__cx__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ed5)
  store %struct.Memory* %call_473ed5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x88(%rbp)	 RIP: 473ed9	 Bytes: 7
  %loadMem_473ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ed9 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ed9)
  store %struct.Memory* %call_473ed9, %struct.Memory** %MEMORY

  ; Code: je .L_473faa	 RIP: 473ee0	 Bytes: 6
  %loadMem_473ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ee0 = call %struct.Memory* @routine_je_.L_473faa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ee0, i8* %BRANCH_TAKEN, i64 202, i64 6, i64 6)
  store %struct.Memory* %call_473ee0, %struct.Memory** %MEMORY

  %loadBr_473ee0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473ee0 = icmp eq i8 %loadBr_473ee0, 1
  br i1 %cmpBr_473ee0, label %block_.L_473faa, label %block_473ee6

block_473ee6:
  ; Code: movq 0x6cb900, %rax	 RIP: 473ee6	 Bytes: 8
  %loadMem_473ee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ee6 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ee6)
  store %struct.Memory* %call_473ee6, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473eee	 Bytes: 7
  %loadMem_473eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473eee = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473eee)
  store %struct.Memory* %call_473eee, %struct.Memory** %MEMORY

  ; Code: movslq -0x84(%rbp), %rcx	 RIP: 473ef5	 Bytes: 7
  %loadMem_473ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ef5 = call %struct.Memory* @routine_movslq_MINUS0x84__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ef5)
  store %struct.Memory* %call_473ef5, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473efc	 Bytes: 7
  %loadMem_473efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473efc = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473efc)
  store %struct.Memory* %call_473efc, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473f03	 Bytes: 3
  %loadMem_473f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f03 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f03)
  store %struct.Memory* %call_473f03, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473f06	 Bytes: 7
  %loadMem_473f06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f06 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f06)
  store %struct.Memory* %call_473f06, %struct.Memory** %MEMORY

  ; Code: jne .L_473f3f	 RIP: 473f0d	 Bytes: 6
  %loadMem_473f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f0d = call %struct.Memory* @routine_jne_.L_473f3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f0d, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_473f0d, %struct.Memory** %MEMORY

  %loadBr_473f0d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473f0d = icmp eq i8 %loadBr_473f0d, 1
  br i1 %cmpBr_473f0d, label %block_.L_473f3f, label %block_473f13

block_473f13:
  ; Code: movq 0x70fcf0, %rax	 RIP: 473f13	 Bytes: 8
  %loadMem_473f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f13 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f13)
  store %struct.Memory* %call_473f13, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473f1b	 Bytes: 7
  %loadMem_473f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f1b = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f1b)
  store %struct.Memory* %call_473f1b, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473f22	 Bytes: 4
  %loadMem_473f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f22 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f22)
  store %struct.Memory* %call_473f22, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473f26	 Bytes: 4
  %loadMem_473f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f26 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f26)
  store %struct.Memory* %call_473f26, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473f2a	 Bytes: 4
  %loadMem_473f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f2a = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f2a)
  store %struct.Memory* %call_473f2a, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473f2e	 Bytes: 4
  %loadMem_473f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f2e = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f2e)
  store %struct.Memory* %call_473f2e, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473f32	 Bytes: 4
  %loadMem_473f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f32 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f32)
  store %struct.Memory* %call_473f32, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 473f36	 Bytes: 3
  %loadMem_473f36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f36 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f36)
  store %struct.Memory* %call_473f36, %struct.Memory** %MEMORY

  ; Code: jge .L_473f70	 RIP: 473f39	 Bytes: 6
  %loadMem_473f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f39 = call %struct.Memory* @routine_jge_.L_473f70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f39, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_473f39, %struct.Memory** %MEMORY

  %loadBr_473f39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473f39 = icmp eq i8 %loadBr_473f39, 1
  br i1 %cmpBr_473f39, label %block_.L_473f70, label %block_.L_473f3f

  ; Code: .L_473f3f:	 RIP: 473f3f	 Bytes: 0
block_.L_473f3f:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473f3f	 Bytes: 8
  %loadMem_473f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f3f = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f3f)
  store %struct.Memory* %call_473f3f, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473f47	 Bytes: 7
  %loadMem_473f47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f47 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f47)
  store %struct.Memory* %call_473f47, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473f4e	 Bytes: 4
  %loadMem_473f4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f4e = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f4e)
  store %struct.Memory* %call_473f4e, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473f52	 Bytes: 4
  %loadMem_473f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f52 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f52)
  store %struct.Memory* %call_473f52, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473f56	 Bytes: 4
  %loadMem_473f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f56 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f56)
  store %struct.Memory* %call_473f56, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473f5a	 Bytes: 4
  %loadMem_473f5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f5a = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f5a)
  store %struct.Memory* %call_473f5a, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473f5e	 Bytes: 4
  %loadMem_473f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f5e = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f5e)
  store %struct.Memory* %call_473f5e, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 473f62	 Bytes: 3
  %loadMem_473f62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f62 = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f62)
  store %struct.Memory* %call_473f62, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x190(%rbp)	 RIP: 473f65	 Bytes: 6
  %loadMem_473f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f65 = call %struct.Memory* @routine_movl__edx__MINUS0x190__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f65)
  store %struct.Memory* %call_473f65, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473f99	 RIP: 473f6b	 Bytes: 5
  %loadMem_473f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f6b = call %struct.Memory* @routine_jmpq_.L_473f99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f6b, i64 46, i64 5)
  store %struct.Memory* %call_473f6b, %struct.Memory** %MEMORY

  br label %block_.L_473f99

  ; Code: .L_473f70:	 RIP: 473f70	 Bytes: 0
block_.L_473f70:

  ; Code: movq 0x70fcf0, %rax	 RIP: 473f70	 Bytes: 8
  %loadMem_473f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f70 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f70)
  store %struct.Memory* %call_473f70, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 473f78	 Bytes: 7
  %loadMem_473f78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f78 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f78)
  store %struct.Memory* %call_473f78, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 473f7f	 Bytes: 4
  %loadMem_473f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f7f = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f7f)
  store %struct.Memory* %call_473f7f, %struct.Memory** %MEMORY

  ; Code: movslq -0x78(%rbp), %rcx	 RIP: 473f83	 Bytes: 4
  %loadMem_473f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f83 = call %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f83)
  store %struct.Memory* %call_473f83, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 473f87	 Bytes: 4
  %loadMem_473f87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f87 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f87)
  store %struct.Memory* %call_473f87, %struct.Memory** %MEMORY

  ; Code: movslq -0x74(%rbp), %rcx	 RIP: 473f8b	 Bytes: 4
  %loadMem_473f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f8b = call %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f8b)
  store %struct.Memory* %call_473f8b, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 473f8f	 Bytes: 4
  %loadMem_473f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f8f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f8f)
  store %struct.Memory* %call_473f8f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x190(%rbp)	 RIP: 473f93	 Bytes: 6
  %loadMem_473f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f93 = call %struct.Memory* @routine_movl__edx__MINUS0x190__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f93)
  store %struct.Memory* %call_473f93, %struct.Memory** %MEMORY

  ; Code: .L_473f99:	 RIP: 473f99	 Bytes: 0
  br label %block_.L_473f99
block_.L_473f99:

  ; Code: movl -0x190(%rbp), %eax	 RIP: 473f99	 Bytes: 6
  %loadMem_473f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f99 = call %struct.Memory* @routine_movl_MINUS0x190__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f99)
  store %struct.Memory* %call_473f99, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x194(%rbp)	 RIP: 473f9f	 Bytes: 6
  %loadMem_473f9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473f9f = call %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473f9f)
  store %struct.Memory* %call_473f9f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473fba	 RIP: 473fa5	 Bytes: 5
  %loadMem_473fa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fa5 = call %struct.Memory* @routine_jmpq_.L_473fba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fa5, i64 21, i64 5)
  store %struct.Memory* %call_473fa5, %struct.Memory** %MEMORY

  br label %block_.L_473fba

  ; Code: .L_473faa:	 RIP: 473faa	 Bytes: 0
block_.L_473faa:

  ; Code: movl $0xffffffff, %eax	 RIP: 473faa	 Bytes: 5
  %loadMem_473faa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473faa = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473faa)
  store %struct.Memory* %call_473faa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x194(%rbp)	 RIP: 473faf	 Bytes: 6
  %loadMem_473faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473faf = call %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473faf)
  store %struct.Memory* %call_473faf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_473fba	 RIP: 473fb5	 Bytes: 5
  %loadMem_473fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fb5 = call %struct.Memory* @routine_jmpq_.L_473fba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fb5, i64 5, i64 5)
  store %struct.Memory* %call_473fb5, %struct.Memory** %MEMORY

  br label %block_.L_473fba

  ; Code: .L_473fba:	 RIP: 473fba	 Bytes: 0
block_.L_473fba:

  ; Code: movl -0x194(%rbp), %eax	 RIP: 473fba	 Bytes: 6
  %loadMem_473fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fba = call %struct.Memory* @routine_movl_MINUS0x194__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fba)
  store %struct.Memory* %call_473fba, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 473fc0	 Bytes: 3
  %loadMem_473fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fc0 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fc0)
  store %struct.Memory* %call_473fc0, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5a(%rbp)	 RIP: 473fc3	 Bytes: 4
  %loadMem_473fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fc3 = call %struct.Memory* @routine_movw__cx__MINUS0x5a__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fc3)
  store %struct.Memory* %call_473fc3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xa0(%rbp)	 RIP: 473fc7	 Bytes: 7
  %loadMem_473fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fc7 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fc7)
  store %struct.Memory* %call_473fc7, %struct.Memory** %MEMORY

  ; Code: je .L_4740aa	 RIP: 473fce	 Bytes: 6
  %loadMem_473fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fce = call %struct.Memory* @routine_je_.L_4740aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fce, i8* %BRANCH_TAKEN, i64 220, i64 6, i64 6)
  store %struct.Memory* %call_473fce, %struct.Memory** %MEMORY

  %loadBr_473fce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473fce = icmp eq i8 %loadBr_473fce, 1
  br i1 %cmpBr_473fce, label %block_.L_4740aa, label %block_473fd4

block_473fd4:
  ; Code: movq 0x6cb900, %rax	 RIP: 473fd4	 Bytes: 8
  %loadMem_473fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fd4 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fd4)
  store %struct.Memory* %call_473fd4, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 473fdc	 Bytes: 7
  %loadMem_473fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fdc = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fdc)
  store %struct.Memory* %call_473fdc, %struct.Memory** %MEMORY

  ; Code: movslq -0x9c(%rbp), %rcx	 RIP: 473fe3	 Bytes: 7
  %loadMem_473fe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fe3 = call %struct.Memory* @routine_movslq_MINUS0x9c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fe3)
  store %struct.Memory* %call_473fe3, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 473fea	 Bytes: 7
  %loadMem_473fea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473fea = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473fea)
  store %struct.Memory* %call_473fea, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 473ff1	 Bytes: 3
  %loadMem_473ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ff1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ff1)
  store %struct.Memory* %call_473ff1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 473ff4	 Bytes: 7
  %loadMem_473ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ff4 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ff4)
  store %struct.Memory* %call_473ff4, %struct.Memory** %MEMORY

  ; Code: jne .L_474033	 RIP: 473ffb	 Bytes: 6
  %loadMem_473ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_473ffb = call %struct.Memory* @routine_jne_.L_474033(%struct.State* %0, i64  0, %struct.Memory* %loadMem_473ffb, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_473ffb, %struct.Memory** %MEMORY

  %loadBr_473ffb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_473ffb = icmp eq i8 %loadBr_473ffb, 1
  br i1 %cmpBr_473ffb, label %block_.L_474033, label %block_474001

block_474001:
  ; Code: movq 0x70fcf0, %rax	 RIP: 474001	 Bytes: 8
  %loadMem_474001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474001 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474001)
  store %struct.Memory* %call_474001, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 474009	 Bytes: 7
  %loadMem_474009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474009 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474009)
  store %struct.Memory* %call_474009, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474010	 Bytes: 4
  %loadMem_474010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474010 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474010)
  store %struct.Memory* %call_474010, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 474014	 Bytes: 7
  %loadMem_474014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474014 = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474014)
  store %struct.Memory* %call_474014, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47401b	 Bytes: 4
  %loadMem_47401b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47401b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47401b)
  store %struct.Memory* %call_47401b, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 47401f	 Bytes: 7
  %loadMem_47401f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47401f = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47401f)
  store %struct.Memory* %call_47401f, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 474026	 Bytes: 4
  %loadMem_474026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474026 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474026)
  store %struct.Memory* %call_474026, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 47402a	 Bytes: 3
  %loadMem_47402a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47402a = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47402a)
  store %struct.Memory* %call_47402a, %struct.Memory** %MEMORY

  ; Code: jge .L_47406a	 RIP: 47402d	 Bytes: 6
  %loadMem_47402d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47402d = call %struct.Memory* @routine_jge_.L_47406a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47402d, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_47402d, %struct.Memory** %MEMORY

  %loadBr_47402d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47402d = icmp eq i8 %loadBr_47402d, 1
  br i1 %cmpBr_47402d, label %block_.L_47406a, label %block_.L_474033

  ; Code: .L_474033:	 RIP: 474033	 Bytes: 0
block_.L_474033:

  ; Code: movq 0x70fcf0, %rax	 RIP: 474033	 Bytes: 8
  %loadMem_474033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474033 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474033)
  store %struct.Memory* %call_474033, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47403b	 Bytes: 7
  %loadMem_47403b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47403b = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47403b)
  store %struct.Memory* %call_47403b, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474042	 Bytes: 4
  %loadMem_474042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474042 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474042)
  store %struct.Memory* %call_474042, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 474046	 Bytes: 7
  %loadMem_474046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474046 = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474046)
  store %struct.Memory* %call_474046, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47404d	 Bytes: 4
  %loadMem_47404d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47404d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47404d)
  store %struct.Memory* %call_47404d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 474051	 Bytes: 7
  %loadMem_474051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474051 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474051)
  store %struct.Memory* %call_474051, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 474058	 Bytes: 4
  %loadMem_474058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474058 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474058)
  store %struct.Memory* %call_474058, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 47405c	 Bytes: 3
  %loadMem_47405c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47405c = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47405c)
  store %struct.Memory* %call_47405c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x198(%rbp)	 RIP: 47405f	 Bytes: 6
  %loadMem_47405f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47405f = call %struct.Memory* @routine_movl__edx__MINUS0x198__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47405f)
  store %struct.Memory* %call_47405f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474099	 RIP: 474065	 Bytes: 5
  %loadMem_474065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474065 = call %struct.Memory* @routine_jmpq_.L_474099(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474065, i64 52, i64 5)
  store %struct.Memory* %call_474065, %struct.Memory** %MEMORY

  br label %block_.L_474099

  ; Code: .L_47406a:	 RIP: 47406a	 Bytes: 0
block_.L_47406a:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47406a	 Bytes: 8
  %loadMem_47406a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47406a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47406a)
  store %struct.Memory* %call_47406a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 474072	 Bytes: 7
  %loadMem_474072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474072 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474072)
  store %struct.Memory* %call_474072, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474079	 Bytes: 4
  %loadMem_474079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474079 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474079)
  store %struct.Memory* %call_474079, %struct.Memory** %MEMORY

  ; Code: movslq -0x90(%rbp), %rcx	 RIP: 47407d	 Bytes: 7
  %loadMem_47407d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47407d = call %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47407d)
  store %struct.Memory* %call_47407d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474084	 Bytes: 4
  %loadMem_474084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474084 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474084)
  store %struct.Memory* %call_474084, %struct.Memory** %MEMORY

  ; Code: movslq -0x8c(%rbp), %rcx	 RIP: 474088	 Bytes: 7
  %loadMem_474088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474088 = call %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474088)
  store %struct.Memory* %call_474088, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47408f	 Bytes: 4
  %loadMem_47408f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47408f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47408f)
  store %struct.Memory* %call_47408f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x198(%rbp)	 RIP: 474093	 Bytes: 6
  %loadMem_474093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474093 = call %struct.Memory* @routine_movl__edx__MINUS0x198__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474093)
  store %struct.Memory* %call_474093, %struct.Memory** %MEMORY

  ; Code: .L_474099:	 RIP: 474099	 Bytes: 0
  br label %block_.L_474099
block_.L_474099:

  ; Code: movl -0x198(%rbp), %eax	 RIP: 474099	 Bytes: 6
  %loadMem_474099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474099 = call %struct.Memory* @routine_movl_MINUS0x198__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474099)
  store %struct.Memory* %call_474099, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x19c(%rbp)	 RIP: 47409f	 Bytes: 6
  %loadMem_47409f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47409f = call %struct.Memory* @routine_movl__eax__MINUS0x19c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47409f)
  store %struct.Memory* %call_47409f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4740ba	 RIP: 4740a5	 Bytes: 5
  %loadMem_4740a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740a5 = call %struct.Memory* @routine_jmpq_.L_4740ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740a5, i64 21, i64 5)
  store %struct.Memory* %call_4740a5, %struct.Memory** %MEMORY

  br label %block_.L_4740ba

  ; Code: .L_4740aa:	 RIP: 4740aa	 Bytes: 0
block_.L_4740aa:

  ; Code: movl $0xffffffff, %eax	 RIP: 4740aa	 Bytes: 5
  %loadMem_4740aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740aa = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740aa)
  store %struct.Memory* %call_4740aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x19c(%rbp)	 RIP: 4740af	 Bytes: 6
  %loadMem_4740af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740af = call %struct.Memory* @routine_movl__eax__MINUS0x19c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740af)
  store %struct.Memory* %call_4740af, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4740ba	 RIP: 4740b5	 Bytes: 5
  %loadMem_4740b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740b5 = call %struct.Memory* @routine_jmpq_.L_4740ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740b5, i64 5, i64 5)
  store %struct.Memory* %call_4740b5, %struct.Memory** %MEMORY

  br label %block_.L_4740ba

  ; Code: .L_4740ba:	 RIP: 4740ba	 Bytes: 0
block_.L_4740ba:

  ; Code: movl -0x19c(%rbp), %eax	 RIP: 4740ba	 Bytes: 6
  %loadMem_4740ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740ba = call %struct.Memory* @routine_movl_MINUS0x19c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740ba)
  store %struct.Memory* %call_4740ba, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4740c0	 Bytes: 3
  %loadMem_4740c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740c0 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740c0)
  store %struct.Memory* %call_4740c0, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5c(%rbp)	 RIP: 4740c3	 Bytes: 4
  %loadMem_4740c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740c3 = call %struct.Memory* @routine_movw__cx__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740c3)
  store %struct.Memory* %call_4740c3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xb8(%rbp)	 RIP: 4740c7	 Bytes: 7
  %loadMem_4740c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740c7 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740c7)
  store %struct.Memory* %call_4740c7, %struct.Memory** %MEMORY

  ; Code: je .L_4741aa	 RIP: 4740ce	 Bytes: 6
  %loadMem_4740ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740ce = call %struct.Memory* @routine_je_.L_4741aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740ce, i8* %BRANCH_TAKEN, i64 220, i64 6, i64 6)
  store %struct.Memory* %call_4740ce, %struct.Memory** %MEMORY

  %loadBr_4740ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4740ce = icmp eq i8 %loadBr_4740ce, 1
  br i1 %cmpBr_4740ce, label %block_.L_4741aa, label %block_4740d4

block_4740d4:
  ; Code: movq 0x6cb900, %rax	 RIP: 4740d4	 Bytes: 8
  %loadMem_4740d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740d4 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740d4)
  store %struct.Memory* %call_4740d4, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 4740dc	 Bytes: 7
  %loadMem_4740dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740dc = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740dc)
  store %struct.Memory* %call_4740dc, %struct.Memory** %MEMORY

  ; Code: movslq -0xb4(%rbp), %rcx	 RIP: 4740e3	 Bytes: 7
  %loadMem_4740e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740e3 = call %struct.Memory* @routine_movslq_MINUS0xb4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740e3)
  store %struct.Memory* %call_4740e3, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 4740ea	 Bytes: 7
  %loadMem_4740ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740ea = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740ea)
  store %struct.Memory* %call_4740ea, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4740f1	 Bytes: 3
  %loadMem_4740f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740f1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740f1)
  store %struct.Memory* %call_4740f1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 4740f4	 Bytes: 7
  %loadMem_4740f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740f4 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740f4)
  store %struct.Memory* %call_4740f4, %struct.Memory** %MEMORY

  ; Code: jne .L_474133	 RIP: 4740fb	 Bytes: 6
  %loadMem_4740fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4740fb = call %struct.Memory* @routine_jne_.L_474133(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4740fb, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_4740fb, %struct.Memory** %MEMORY

  %loadBr_4740fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4740fb = icmp eq i8 %loadBr_4740fb, 1
  br i1 %cmpBr_4740fb, label %block_.L_474133, label %block_474101

block_474101:
  ; Code: movq 0x70fcf0, %rax	 RIP: 474101	 Bytes: 8
  %loadMem_474101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474101 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474101)
  store %struct.Memory* %call_474101, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 474109	 Bytes: 7
  %loadMem_474109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474109 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474109)
  store %struct.Memory* %call_474109, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474110	 Bytes: 4
  %loadMem_474110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474110 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474110)
  store %struct.Memory* %call_474110, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 474114	 Bytes: 7
  %loadMem_474114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474114 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474114)
  store %struct.Memory* %call_474114, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47411b	 Bytes: 4
  %loadMem_47411b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47411b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47411b)
  store %struct.Memory* %call_47411b, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 47411f	 Bytes: 7
  %loadMem_47411f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47411f = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47411f)
  store %struct.Memory* %call_47411f, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 474126	 Bytes: 4
  %loadMem_474126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474126 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474126)
  store %struct.Memory* %call_474126, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 47412a	 Bytes: 3
  %loadMem_47412a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47412a = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47412a)
  store %struct.Memory* %call_47412a, %struct.Memory** %MEMORY

  ; Code: jge .L_47416a	 RIP: 47412d	 Bytes: 6
  %loadMem_47412d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47412d = call %struct.Memory* @routine_jge_.L_47416a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47412d, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_47412d, %struct.Memory** %MEMORY

  %loadBr_47412d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47412d = icmp eq i8 %loadBr_47412d, 1
  br i1 %cmpBr_47412d, label %block_.L_47416a, label %block_.L_474133

  ; Code: .L_474133:	 RIP: 474133	 Bytes: 0
block_.L_474133:

  ; Code: movq 0x70fcf0, %rax	 RIP: 474133	 Bytes: 8
  %loadMem_474133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474133 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474133)
  store %struct.Memory* %call_474133, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47413b	 Bytes: 7
  %loadMem_47413b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47413b = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47413b)
  store %struct.Memory* %call_47413b, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474142	 Bytes: 4
  %loadMem_474142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474142 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474142)
  store %struct.Memory* %call_474142, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 474146	 Bytes: 7
  %loadMem_474146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474146 = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474146)
  store %struct.Memory* %call_474146, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47414d	 Bytes: 4
  %loadMem_47414d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47414d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47414d)
  store %struct.Memory* %call_47414d, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 474151	 Bytes: 7
  %loadMem_474151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474151 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474151)
  store %struct.Memory* %call_474151, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 474158	 Bytes: 4
  %loadMem_474158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474158 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474158)
  store %struct.Memory* %call_474158, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 47415c	 Bytes: 3
  %loadMem_47415c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47415c = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47415c)
  store %struct.Memory* %call_47415c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1a0(%rbp)	 RIP: 47415f	 Bytes: 6
  %loadMem_47415f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47415f = call %struct.Memory* @routine_movl__edx__MINUS0x1a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47415f)
  store %struct.Memory* %call_47415f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474199	 RIP: 474165	 Bytes: 5
  %loadMem_474165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474165 = call %struct.Memory* @routine_jmpq_.L_474199(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474165, i64 52, i64 5)
  store %struct.Memory* %call_474165, %struct.Memory** %MEMORY

  br label %block_.L_474199

  ; Code: .L_47416a:	 RIP: 47416a	 Bytes: 0
block_.L_47416a:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47416a	 Bytes: 8
  %loadMem_47416a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47416a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47416a)
  store %struct.Memory* %call_47416a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 474172	 Bytes: 7
  %loadMem_474172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474172 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474172)
  store %struct.Memory* %call_474172, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474179	 Bytes: 4
  %loadMem_474179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474179 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474179)
  store %struct.Memory* %call_474179, %struct.Memory** %MEMORY

  ; Code: movslq -0xa8(%rbp), %rcx	 RIP: 47417d	 Bytes: 7
  %loadMem_47417d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47417d = call %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47417d)
  store %struct.Memory* %call_47417d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474184	 Bytes: 4
  %loadMem_474184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474184 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474184)
  store %struct.Memory* %call_474184, %struct.Memory** %MEMORY

  ; Code: movslq -0xa4(%rbp), %rcx	 RIP: 474188	 Bytes: 7
  %loadMem_474188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474188 = call %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474188)
  store %struct.Memory* %call_474188, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47418f	 Bytes: 4
  %loadMem_47418f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47418f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47418f)
  store %struct.Memory* %call_47418f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1a0(%rbp)	 RIP: 474193	 Bytes: 6
  %loadMem_474193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474193 = call %struct.Memory* @routine_movl__edx__MINUS0x1a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474193)
  store %struct.Memory* %call_474193, %struct.Memory** %MEMORY

  ; Code: .L_474199:	 RIP: 474199	 Bytes: 0
  br label %block_.L_474199
block_.L_474199:

  ; Code: movl -0x1a0(%rbp), %eax	 RIP: 474199	 Bytes: 6
  %loadMem_474199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474199 = call %struct.Memory* @routine_movl_MINUS0x1a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474199)
  store %struct.Memory* %call_474199, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1a4(%rbp)	 RIP: 47419f	 Bytes: 6
  %loadMem_47419f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47419f = call %struct.Memory* @routine_movl__eax__MINUS0x1a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47419f)
  store %struct.Memory* %call_47419f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4741ba	 RIP: 4741a5	 Bytes: 5
  %loadMem_4741a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741a5 = call %struct.Memory* @routine_jmpq_.L_4741ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741a5, i64 21, i64 5)
  store %struct.Memory* %call_4741a5, %struct.Memory** %MEMORY

  br label %block_.L_4741ba

  ; Code: .L_4741aa:	 RIP: 4741aa	 Bytes: 0
block_.L_4741aa:

  ; Code: movl $0xffffffff, %eax	 RIP: 4741aa	 Bytes: 5
  %loadMem_4741aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741aa = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741aa)
  store %struct.Memory* %call_4741aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1a4(%rbp)	 RIP: 4741af	 Bytes: 6
  %loadMem_4741af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741af = call %struct.Memory* @routine_movl__eax__MINUS0x1a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741af)
  store %struct.Memory* %call_4741af, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4741ba	 RIP: 4741b5	 Bytes: 5
  %loadMem_4741b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741b5 = call %struct.Memory* @routine_jmpq_.L_4741ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741b5, i64 5, i64 5)
  store %struct.Memory* %call_4741b5, %struct.Memory** %MEMORY

  br label %block_.L_4741ba

  ; Code: .L_4741ba:	 RIP: 4741ba	 Bytes: 0
block_.L_4741ba:

  ; Code: movl -0x1a4(%rbp), %eax	 RIP: 4741ba	 Bytes: 6
  %loadMem_4741ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741ba = call %struct.Memory* @routine_movl_MINUS0x1a4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741ba)
  store %struct.Memory* %call_4741ba, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4741c0	 Bytes: 3
  %loadMem_4741c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741c0 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741c0)
  store %struct.Memory* %call_4741c0, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x5e(%rbp)	 RIP: 4741c3	 Bytes: 4
  %loadMem_4741c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741c3 = call %struct.Memory* @routine_movw__cx__MINUS0x5e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741c3)
  store %struct.Memory* %call_4741c3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xd0(%rbp)	 RIP: 4741c7	 Bytes: 7
  %loadMem_4741c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741c7 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741c7)
  store %struct.Memory* %call_4741c7, %struct.Memory** %MEMORY

  ; Code: je .L_4742aa	 RIP: 4741ce	 Bytes: 6
  %loadMem_4741ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741ce = call %struct.Memory* @routine_je_.L_4742aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741ce, i8* %BRANCH_TAKEN, i64 220, i64 6, i64 6)
  store %struct.Memory* %call_4741ce, %struct.Memory** %MEMORY

  %loadBr_4741ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4741ce = icmp eq i8 %loadBr_4741ce, 1
  br i1 %cmpBr_4741ce, label %block_.L_4742aa, label %block_4741d4

block_4741d4:
  ; Code: movq 0x6cb900, %rax	 RIP: 4741d4	 Bytes: 8
  %loadMem_4741d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741d4 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741d4)
  store %struct.Memory* %call_4741d4, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rax), %rax	 RIP: 4741dc	 Bytes: 7
  %loadMem_4741dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741dc = call %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741dc)
  store %struct.Memory* %call_4741dc, %struct.Memory** %MEMORY

  ; Code: movslq -0xcc(%rbp), %rcx	 RIP: 4741e3	 Bytes: 7
  %loadMem_4741e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741e3 = call %struct.Memory* @routine_movslq_MINUS0xcc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741e3)
  store %struct.Memory* %call_4741e3, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rcx, %rcx	 RIP: 4741ea	 Bytes: 7
  %loadMem_4741ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741ea = call %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741ea)
  store %struct.Memory* %call_4741ea, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4741f1	 Bytes: 3
  %loadMem_4741f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741f1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741f1)
  store %struct.Memory* %call_4741f1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 4741f4	 Bytes: 7
  %loadMem_4741f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741f4 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741f4)
  store %struct.Memory* %call_4741f4, %struct.Memory** %MEMORY

  ; Code: jne .L_474233	 RIP: 4741fb	 Bytes: 6
  %loadMem_4741fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4741fb = call %struct.Memory* @routine_jne_.L_474233(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4741fb, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_4741fb, %struct.Memory** %MEMORY

  %loadBr_4741fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4741fb = icmp eq i8 %loadBr_4741fb, 1
  br i1 %cmpBr_4741fb, label %block_.L_474233, label %block_474201

block_474201:
  ; Code: movq 0x70fcf0, %rax	 RIP: 474201	 Bytes: 8
  %loadMem_474201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474201 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474201)
  store %struct.Memory* %call_474201, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 474209	 Bytes: 7
  %loadMem_474209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474209 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474209)
  store %struct.Memory* %call_474209, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474210	 Bytes: 4
  %loadMem_474210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474210 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474210)
  store %struct.Memory* %call_474210, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 474214	 Bytes: 7
  %loadMem_474214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474214 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474214)
  store %struct.Memory* %call_474214, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47421b	 Bytes: 4
  %loadMem_47421b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47421b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47421b)
  store %struct.Memory* %call_47421b, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 47421f	 Bytes: 7
  %loadMem_47421f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47421f = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47421f)
  store %struct.Memory* %call_47421f, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 474226	 Bytes: 4
  %loadMem_474226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474226 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474226)
  store %struct.Memory* %call_474226, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 47422a	 Bytes: 3
  %loadMem_47422a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47422a = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47422a)
  store %struct.Memory* %call_47422a, %struct.Memory** %MEMORY

  ; Code: jge .L_47426a	 RIP: 47422d	 Bytes: 6
  %loadMem_47422d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47422d = call %struct.Memory* @routine_jge_.L_47426a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47422d, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_47422d, %struct.Memory** %MEMORY

  %loadBr_47422d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47422d = icmp eq i8 %loadBr_47422d, 1
  br i1 %cmpBr_47422d, label %block_.L_47426a, label %block_.L_474233

  ; Code: .L_474233:	 RIP: 474233	 Bytes: 0
block_.L_474233:

  ; Code: movq 0x70fcf0, %rax	 RIP: 474233	 Bytes: 8
  %loadMem_474233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474233 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474233)
  store %struct.Memory* %call_474233, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 47423b	 Bytes: 7
  %loadMem_47423b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47423b = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47423b)
  store %struct.Memory* %call_47423b, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474242	 Bytes: 4
  %loadMem_474242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474242 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474242)
  store %struct.Memory* %call_474242, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 474246	 Bytes: 7
  %loadMem_474246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474246 = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474246)
  store %struct.Memory* %call_474246, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47424d	 Bytes: 4
  %loadMem_47424d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47424d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47424d)
  store %struct.Memory* %call_47424d, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 474251	 Bytes: 7
  %loadMem_474251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474251 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474251)
  store %struct.Memory* %call_474251, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 474258	 Bytes: 4
  %loadMem_474258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474258 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474258)
  store %struct.Memory* %call_474258, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %edx	 RIP: 47425c	 Bytes: 3
  %loadMem_47425c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47425c = call %struct.Memory* @routine_sarl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47425c)
  store %struct.Memory* %call_47425c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1a8(%rbp)	 RIP: 47425f	 Bytes: 6
  %loadMem_47425f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47425f = call %struct.Memory* @routine_movl__edx__MINUS0x1a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47425f)
  store %struct.Memory* %call_47425f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474299	 RIP: 474265	 Bytes: 5
  %loadMem_474265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474265 = call %struct.Memory* @routine_jmpq_.L_474299(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474265, i64 52, i64 5)
  store %struct.Memory* %call_474265, %struct.Memory** %MEMORY

  br label %block_.L_474299

  ; Code: .L_47426a:	 RIP: 47426a	 Bytes: 0
block_.L_47426a:

  ; Code: movq 0x70fcf0, %rax	 RIP: 47426a	 Bytes: 8
  %loadMem_47426a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47426a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47426a)
  store %struct.Memory* %call_47426a, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rax	 RIP: 474272	 Bytes: 7
  %loadMem_474272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474272 = call %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474272)
  store %struct.Memory* %call_474272, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474279	 Bytes: 4
  %loadMem_474279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474279 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474279)
  store %struct.Memory* %call_474279, %struct.Memory** %MEMORY

  ; Code: movslq -0xc0(%rbp), %rcx	 RIP: 47427d	 Bytes: 7
  %loadMem_47427d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47427d = call %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47427d)
  store %struct.Memory* %call_47427d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474284	 Bytes: 4
  %loadMem_474284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474284 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474284)
  store %struct.Memory* %call_474284, %struct.Memory** %MEMORY

  ; Code: movslq -0xbc(%rbp), %rcx	 RIP: 474288	 Bytes: 7
  %loadMem_474288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474288 = call %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474288)
  store %struct.Memory* %call_474288, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 47428f	 Bytes: 4
  %loadMem_47428f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47428f = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47428f)
  store %struct.Memory* %call_47428f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1a8(%rbp)	 RIP: 474293	 Bytes: 6
  %loadMem_474293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474293 = call %struct.Memory* @routine_movl__edx__MINUS0x1a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474293)
  store %struct.Memory* %call_474293, %struct.Memory** %MEMORY

  ; Code: .L_474299:	 RIP: 474299	 Bytes: 0
  br label %block_.L_474299
block_.L_474299:

  ; Code: movl -0x1a8(%rbp), %eax	 RIP: 474299	 Bytes: 6
  %loadMem_474299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474299 = call %struct.Memory* @routine_movl_MINUS0x1a8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474299)
  store %struct.Memory* %call_474299, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1ac(%rbp)	 RIP: 47429f	 Bytes: 6
  %loadMem_47429f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47429f = call %struct.Memory* @routine_movl__eax__MINUS0x1ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47429f)
  store %struct.Memory* %call_47429f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4742b4	 RIP: 4742a5	 Bytes: 5
  %loadMem_4742a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742a5 = call %struct.Memory* @routine_jmpq_.L_4742b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742a5, i64 15, i64 5)
  store %struct.Memory* %call_4742a5, %struct.Memory** %MEMORY

  br label %block_.L_4742b4

  ; Code: .L_4742aa:	 RIP: 4742aa	 Bytes: 0
block_.L_4742aa:

  ; Code: movswl -0x5e(%rbp), %eax	 RIP: 4742aa	 Bytes: 4
  %loadMem_4742aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742aa = call %struct.Memory* @routine_movswl_MINUS0x5e__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742aa)
  store %struct.Memory* %call_4742aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1ac(%rbp)	 RIP: 4742ae	 Bytes: 6
  %loadMem_4742ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742ae = call %struct.Memory* @routine_movl__eax__MINUS0x1ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742ae)
  store %struct.Memory* %call_4742ae, %struct.Memory** %MEMORY

  ; Code: .L_4742b4:	 RIP: 4742b4	 Bytes: 0
  br label %block_.L_4742b4
block_.L_4742b4:

  ; Code: movl -0x1ac(%rbp), %eax	 RIP: 4742b4	 Bytes: 6
  %loadMem_4742b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742b4 = call %struct.Memory* @routine_movl_MINUS0x1ac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742b4)
  store %struct.Memory* %call_4742b4, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4742ba	 Bytes: 3
  %loadMem_4742ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742ba = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742ba)
  store %struct.Memory* %call_4742ba, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x60(%rbp)	 RIP: 4742bd	 Bytes: 4
  %loadMem_4742bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742bd = call %struct.Memory* @routine_movw__cx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742bd)
  store %struct.Memory* %call_4742bd, %struct.Memory** %MEMORY

  ; Code: .L_4742c1:	 RIP: 4742c1	 Bytes: 0
  br label %block_.L_4742c1
block_.L_4742c1:

  ; Code: jmpq .L_4742c6	 RIP: 4742c1	 Bytes: 5
  %loadMem_4742c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742c1 = call %struct.Memory* @routine_jmpq_.L_4742c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742c1, i64 5, i64 5)
  store %struct.Memory* %call_4742c1, %struct.Memory** %MEMORY

  br label %block_.L_4742c6

  ; Code: .L_4742c6:	 RIP: 4742c6	 Bytes: 0
block_.L_4742c6:

  ; Code: movswl -0x52(%rbp), %eax	 RIP: 4742c6	 Bytes: 4
  %loadMem_4742c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742c6 = call %struct.Memory* @routine_movswl_MINUS0x52__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742c6)
  store %struct.Memory* %call_4742c6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4742ca	 Bytes: 3
  %loadMem_4742ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742ca = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742ca)
  store %struct.Memory* %call_4742ca, %struct.Memory** %MEMORY

  ; Code: jl .L_47431a	 RIP: 4742cd	 Bytes: 6
  %loadMem_4742cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742cd = call %struct.Memory* @routine_jl_.L_47431a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742cd, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_4742cd, %struct.Memory** %MEMORY

  %loadBr_4742cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4742cd = icmp eq i8 %loadBr_4742cd, 1
  br i1 %cmpBr_4742cd, label %block_.L_47431a, label %block_4742d3

block_4742d3:
  ; Code: movswl -0x54(%rbp), %eax	 RIP: 4742d3	 Bytes: 4
  %loadMem_4742d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742d3 = call %struct.Memory* @routine_movswl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742d3)
  store %struct.Memory* %call_4742d3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4742d7	 Bytes: 3
  %loadMem_4742d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742d7 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742d7)
  store %struct.Memory* %call_4742d7, %struct.Memory** %MEMORY

  ; Code: jl .L_47431a	 RIP: 4742da	 Bytes: 6
  %loadMem_4742da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742da = call %struct.Memory* @routine_jl_.L_47431a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742da, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_4742da, %struct.Memory** %MEMORY

  %loadBr_4742da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4742da = icmp eq i8 %loadBr_4742da, 1
  br i1 %cmpBr_4742da, label %block_.L_47431a, label %block_4742e0

block_4742e0:
  ; Code: movswl -0x52(%rbp), %eax	 RIP: 4742e0	 Bytes: 4
  %loadMem_4742e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742e0 = call %struct.Memory* @routine_movswl_MINUS0x52__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742e0)
  store %struct.Memory* %call_4742e0, %struct.Memory** %MEMORY

  ; Code: movswl -0x54(%rbp), %ecx	 RIP: 4742e4	 Bytes: 4
  %loadMem_4742e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742e4 = call %struct.Memory* @routine_movswl_MINUS0x54__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742e4)
  store %struct.Memory* %call_4742e4, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4742e8	 Bytes: 2
  %loadMem_4742e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742e8 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742e8)
  store %struct.Memory* %call_4742e8, %struct.Memory** %MEMORY

  ; Code: jge .L_4742ff	 RIP: 4742ea	 Bytes: 6
  %loadMem_4742ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742ea = call %struct.Memory* @routine_jge_.L_4742ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742ea, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4742ea, %struct.Memory** %MEMORY

  %loadBr_4742ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4742ea = icmp eq i8 %loadBr_4742ea, 1
  br i1 %cmpBr_4742ea, label %block_.L_4742ff, label %block_4742f0

block_4742f0:
  ; Code: movswl -0x52(%rbp), %eax	 RIP: 4742f0	 Bytes: 4
  %loadMem_4742f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742f0 = call %struct.Memory* @routine_movswl_MINUS0x52__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742f0)
  store %struct.Memory* %call_4742f0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b0(%rbp)	 RIP: 4742f4	 Bytes: 6
  %loadMem_4742f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742f4 = call %struct.Memory* @routine_movl__eax__MINUS0x1b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742f4)
  store %struct.Memory* %call_4742f4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474309	 RIP: 4742fa	 Bytes: 5
  %loadMem_4742fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742fa = call %struct.Memory* @routine_jmpq_.L_474309(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742fa, i64 15, i64 5)
  store %struct.Memory* %call_4742fa, %struct.Memory** %MEMORY

  br label %block_.L_474309

  ; Code: .L_4742ff:	 RIP: 4742ff	 Bytes: 0
block_.L_4742ff:

  ; Code: movswl -0x54(%rbp), %eax	 RIP: 4742ff	 Bytes: 4
  %loadMem_4742ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4742ff = call %struct.Memory* @routine_movswl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4742ff)
  store %struct.Memory* %call_4742ff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b0(%rbp)	 RIP: 474303	 Bytes: 6
  %loadMem_474303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474303 = call %struct.Memory* @routine_movl__eax__MINUS0x1b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474303)
  store %struct.Memory* %call_474303, %struct.Memory** %MEMORY

  ; Code: .L_474309:	 RIP: 474309	 Bytes: 0
  br label %block_.L_474309
block_.L_474309:

  ; Code: movl -0x1b0(%rbp), %eax	 RIP: 474309	 Bytes: 6
  %loadMem_474309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474309 = call %struct.Memory* @routine_movl_MINUS0x1b0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474309)
  store %struct.Memory* %call_474309, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b4(%rbp)	 RIP: 47430f	 Bytes: 6
  %loadMem_47430f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47430f = call %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47430f)
  store %struct.Memory* %call_47430f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47434f	 RIP: 474315	 Bytes: 5
  %loadMem_474315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474315 = call %struct.Memory* @routine_jmpq_.L_47434f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474315, i64 58, i64 5)
  store %struct.Memory* %call_474315, %struct.Memory** %MEMORY

  br label %block_.L_47434f

  ; Code: .L_47431a:	 RIP: 47431a	 Bytes: 0
block_.L_47431a:

  ; Code: movswl -0x52(%rbp), %eax	 RIP: 47431a	 Bytes: 4
  %loadMem_47431a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47431a = call %struct.Memory* @routine_movswl_MINUS0x52__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47431a)
  store %struct.Memory* %call_47431a, %struct.Memory** %MEMORY

  ; Code: movswl -0x54(%rbp), %ecx	 RIP: 47431e	 Bytes: 4
  %loadMem_47431e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47431e = call %struct.Memory* @routine_movswl_MINUS0x54__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47431e)
  store %struct.Memory* %call_47431e, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 474322	 Bytes: 2
  %loadMem_474322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474322 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474322)
  store %struct.Memory* %call_474322, %struct.Memory** %MEMORY

  ; Code: jle .L_474339	 RIP: 474324	 Bytes: 6
  %loadMem_474324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474324 = call %struct.Memory* @routine_jle_.L_474339(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474324, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_474324, %struct.Memory** %MEMORY

  %loadBr_474324 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474324 = icmp eq i8 %loadBr_474324, 1
  br i1 %cmpBr_474324, label %block_.L_474339, label %block_47432a

block_47432a:
  ; Code: movswl -0x52(%rbp), %eax	 RIP: 47432a	 Bytes: 4
  %loadMem_47432a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47432a = call %struct.Memory* @routine_movswl_MINUS0x52__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47432a)
  store %struct.Memory* %call_47432a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b8(%rbp)	 RIP: 47432e	 Bytes: 6
  %loadMem_47432e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47432e = call %struct.Memory* @routine_movl__eax__MINUS0x1b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47432e)
  store %struct.Memory* %call_47432e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474343	 RIP: 474334	 Bytes: 5
  %loadMem_474334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474334 = call %struct.Memory* @routine_jmpq_.L_474343(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474334, i64 15, i64 5)
  store %struct.Memory* %call_474334, %struct.Memory** %MEMORY

  br label %block_.L_474343

  ; Code: .L_474339:	 RIP: 474339	 Bytes: 0
block_.L_474339:

  ; Code: movswl -0x54(%rbp), %eax	 RIP: 474339	 Bytes: 4
  %loadMem_474339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474339 = call %struct.Memory* @routine_movswl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474339)
  store %struct.Memory* %call_474339, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b8(%rbp)	 RIP: 47433d	 Bytes: 6
  %loadMem_47433d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47433d = call %struct.Memory* @routine_movl__eax__MINUS0x1b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47433d)
  store %struct.Memory* %call_47433d, %struct.Memory** %MEMORY

  ; Code: .L_474343:	 RIP: 474343	 Bytes: 0
  br label %block_.L_474343
block_.L_474343:

  ; Code: movl -0x1b8(%rbp), %eax	 RIP: 474343	 Bytes: 6
  %loadMem_474343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474343 = call %struct.Memory* @routine_movl_MINUS0x1b8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474343)
  store %struct.Memory* %call_474343, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b4(%rbp)	 RIP: 474349	 Bytes: 6
  %loadMem_474349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474349 = call %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474349)
  store %struct.Memory* %call_474349, %struct.Memory** %MEMORY

  ; Code: .L_47434f:	 RIP: 47434f	 Bytes: 0
  br label %block_.L_47434f
block_.L_47434f:

  ; Code: movl -0x1b4(%rbp), %eax	 RIP: 47434f	 Bytes: 6
  %loadMem_47434f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47434f = call %struct.Memory* @routine_movl_MINUS0x1b4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47434f)
  store %struct.Memory* %call_47434f, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 474355	 Bytes: 3
  %loadMem_474355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474355 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474355)
  store %struct.Memory* %call_474355, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x62(%rbp)	 RIP: 474358	 Bytes: 4
  %loadMem_474358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474358 = call %struct.Memory* @routine_movw__cx__MINUS0x62__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474358)
  store %struct.Memory* %call_474358, %struct.Memory** %MEMORY

  ; Code: movswl -0x62(%rbp), %eax	 RIP: 47435c	 Bytes: 4
  %loadMem_47435c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47435c = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47435c)
  store %struct.Memory* %call_47435c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 474360	 Bytes: 3
  %loadMem_474360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474360 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474360)
  store %struct.Memory* %call_474360, %struct.Memory** %MEMORY

  ; Code: jl .L_4743b0	 RIP: 474363	 Bytes: 6
  %loadMem_474363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474363 = call %struct.Memory* @routine_jl_.L_4743b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474363, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_474363, %struct.Memory** %MEMORY

  %loadBr_474363 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474363 = icmp eq i8 %loadBr_474363, 1
  br i1 %cmpBr_474363, label %block_.L_4743b0, label %block_474369

block_474369:
  ; Code: movswl -0x58(%rbp), %eax	 RIP: 474369	 Bytes: 4
  %loadMem_474369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474369 = call %struct.Memory* @routine_movswl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474369)
  store %struct.Memory* %call_474369, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 47436d	 Bytes: 3
  %loadMem_47436d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47436d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47436d)
  store %struct.Memory* %call_47436d, %struct.Memory** %MEMORY

  ; Code: jl .L_4743b0	 RIP: 474370	 Bytes: 6
  %loadMem_474370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474370 = call %struct.Memory* @routine_jl_.L_4743b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474370, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_474370, %struct.Memory** %MEMORY

  %loadBr_474370 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474370 = icmp eq i8 %loadBr_474370, 1
  br i1 %cmpBr_474370, label %block_.L_4743b0, label %block_474376

block_474376:
  ; Code: movswl -0x62(%rbp), %eax	 RIP: 474376	 Bytes: 4
  %loadMem_474376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474376 = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474376)
  store %struct.Memory* %call_474376, %struct.Memory** %MEMORY

  ; Code: movswl -0x58(%rbp), %ecx	 RIP: 47437a	 Bytes: 4
  %loadMem_47437a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47437a = call %struct.Memory* @routine_movswl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47437a)
  store %struct.Memory* %call_47437a, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 47437e	 Bytes: 2
  %loadMem_47437e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47437e = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47437e)
  store %struct.Memory* %call_47437e, %struct.Memory** %MEMORY

  ; Code: jge .L_474395	 RIP: 474380	 Bytes: 6
  %loadMem_474380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474380 = call %struct.Memory* @routine_jge_.L_474395(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474380, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_474380, %struct.Memory** %MEMORY

  %loadBr_474380 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474380 = icmp eq i8 %loadBr_474380, 1
  br i1 %cmpBr_474380, label %block_.L_474395, label %block_474386

block_474386:
  ; Code: movswl -0x62(%rbp), %eax	 RIP: 474386	 Bytes: 4
  %loadMem_474386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474386 = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474386)
  store %struct.Memory* %call_474386, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1bc(%rbp)	 RIP: 47438a	 Bytes: 6
  %loadMem_47438a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47438a = call %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47438a)
  store %struct.Memory* %call_47438a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47439f	 RIP: 474390	 Bytes: 5
  %loadMem_474390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474390 = call %struct.Memory* @routine_jmpq_.L_47439f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474390, i64 15, i64 5)
  store %struct.Memory* %call_474390, %struct.Memory** %MEMORY

  br label %block_.L_47439f

  ; Code: .L_474395:	 RIP: 474395	 Bytes: 0
block_.L_474395:

  ; Code: movswl -0x58(%rbp), %eax	 RIP: 474395	 Bytes: 4
  %loadMem_474395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474395 = call %struct.Memory* @routine_movswl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474395)
  store %struct.Memory* %call_474395, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1bc(%rbp)	 RIP: 474399	 Bytes: 6
  %loadMem_474399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474399 = call %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474399)
  store %struct.Memory* %call_474399, %struct.Memory** %MEMORY

  ; Code: .L_47439f:	 RIP: 47439f	 Bytes: 0
  br label %block_.L_47439f
block_.L_47439f:

  ; Code: movl -0x1bc(%rbp), %eax	 RIP: 47439f	 Bytes: 6
  %loadMem_47439f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47439f = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47439f)
  store %struct.Memory* %call_47439f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c0(%rbp)	 RIP: 4743a5	 Bytes: 6
  %loadMem_4743a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743a5 = call %struct.Memory* @routine_movl__eax__MINUS0x1c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743a5)
  store %struct.Memory* %call_4743a5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4743e5	 RIP: 4743ab	 Bytes: 5
  %loadMem_4743ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743ab = call %struct.Memory* @routine_jmpq_.L_4743e5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743ab, i64 58, i64 5)
  store %struct.Memory* %call_4743ab, %struct.Memory** %MEMORY

  br label %block_.L_4743e5

  ; Code: .L_4743b0:	 RIP: 4743b0	 Bytes: 0
block_.L_4743b0:

  ; Code: movswl -0x62(%rbp), %eax	 RIP: 4743b0	 Bytes: 4
  %loadMem_4743b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743b0 = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743b0)
  store %struct.Memory* %call_4743b0, %struct.Memory** %MEMORY

  ; Code: movswl -0x58(%rbp), %ecx	 RIP: 4743b4	 Bytes: 4
  %loadMem_4743b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743b4 = call %struct.Memory* @routine_movswl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743b4)
  store %struct.Memory* %call_4743b4, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4743b8	 Bytes: 2
  %loadMem_4743b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743b8 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743b8)
  store %struct.Memory* %call_4743b8, %struct.Memory** %MEMORY

  ; Code: jle .L_4743cf	 RIP: 4743ba	 Bytes: 6
  %loadMem_4743ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743ba = call %struct.Memory* @routine_jle_.L_4743cf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743ba, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4743ba, %struct.Memory** %MEMORY

  %loadBr_4743ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4743ba = icmp eq i8 %loadBr_4743ba, 1
  br i1 %cmpBr_4743ba, label %block_.L_4743cf, label %block_4743c0

block_4743c0:
  ; Code: movswl -0x62(%rbp), %eax	 RIP: 4743c0	 Bytes: 4
  %loadMem_4743c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743c0 = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743c0)
  store %struct.Memory* %call_4743c0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c4(%rbp)	 RIP: 4743c4	 Bytes: 6
  %loadMem_4743c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743c4 = call %struct.Memory* @routine_movl__eax__MINUS0x1c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743c4)
  store %struct.Memory* %call_4743c4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4743d9	 RIP: 4743ca	 Bytes: 5
  %loadMem_4743ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743ca = call %struct.Memory* @routine_jmpq_.L_4743d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743ca, i64 15, i64 5)
  store %struct.Memory* %call_4743ca, %struct.Memory** %MEMORY

  br label %block_.L_4743d9

  ; Code: .L_4743cf:	 RIP: 4743cf	 Bytes: 0
block_.L_4743cf:

  ; Code: movswl -0x58(%rbp), %eax	 RIP: 4743cf	 Bytes: 4
  %loadMem_4743cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743cf = call %struct.Memory* @routine_movswl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743cf)
  store %struct.Memory* %call_4743cf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c4(%rbp)	 RIP: 4743d3	 Bytes: 6
  %loadMem_4743d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743d3 = call %struct.Memory* @routine_movl__eax__MINUS0x1c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743d3)
  store %struct.Memory* %call_4743d3, %struct.Memory** %MEMORY

  ; Code: .L_4743d9:	 RIP: 4743d9	 Bytes: 0
  br label %block_.L_4743d9
block_.L_4743d9:

  ; Code: movl -0x1c4(%rbp), %eax	 RIP: 4743d9	 Bytes: 6
  %loadMem_4743d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743d9 = call %struct.Memory* @routine_movl_MINUS0x1c4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743d9)
  store %struct.Memory* %call_4743d9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c0(%rbp)	 RIP: 4743df	 Bytes: 6
  %loadMem_4743df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743df = call %struct.Memory* @routine_movl__eax__MINUS0x1c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743df)
  store %struct.Memory* %call_4743df, %struct.Memory** %MEMORY

  ; Code: .L_4743e5:	 RIP: 4743e5	 Bytes: 0
  br label %block_.L_4743e5
block_.L_4743e5:

  ; Code: movl -0x1c0(%rbp), %eax	 RIP: 4743e5	 Bytes: 6
  %loadMem_4743e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743e5 = call %struct.Memory* @routine_movl_MINUS0x1c0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743e5)
  store %struct.Memory* %call_4743e5, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4743eb	 Bytes: 3
  %loadMem_4743eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743eb = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743eb)
  store %struct.Memory* %call_4743eb, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x62(%rbp)	 RIP: 4743ee	 Bytes: 4
  %loadMem_4743ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743ee = call %struct.Memory* @routine_movw__cx__MINUS0x62__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743ee)
  store %struct.Memory* %call_4743ee, %struct.Memory** %MEMORY

  ; Code: movswl -0x5a(%rbp), %eax	 RIP: 4743f2	 Bytes: 4
  %loadMem_4743f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743f2 = call %struct.Memory* @routine_movswl_MINUS0x5a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743f2)
  store %struct.Memory* %call_4743f2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4743f6	 Bytes: 3
  %loadMem_4743f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743f6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743f6)
  store %struct.Memory* %call_4743f6, %struct.Memory** %MEMORY

  ; Code: jl .L_474446	 RIP: 4743f9	 Bytes: 6
  %loadMem_4743f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743f9 = call %struct.Memory* @routine_jl_.L_474446(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743f9, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_4743f9, %struct.Memory** %MEMORY

  %loadBr_4743f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4743f9 = icmp eq i8 %loadBr_4743f9, 1
  br i1 %cmpBr_4743f9, label %block_.L_474446, label %block_4743ff

block_4743ff:
  ; Code: movswl -0x5c(%rbp), %eax	 RIP: 4743ff	 Bytes: 4
  %loadMem_4743ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4743ff = call %struct.Memory* @routine_movswl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4743ff)
  store %struct.Memory* %call_4743ff, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 474403	 Bytes: 3
  %loadMem_474403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474403 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474403)
  store %struct.Memory* %call_474403, %struct.Memory** %MEMORY

  ; Code: jl .L_474446	 RIP: 474406	 Bytes: 6
  %loadMem_474406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474406 = call %struct.Memory* @routine_jl_.L_474446(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474406, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_474406, %struct.Memory** %MEMORY

  %loadBr_474406 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474406 = icmp eq i8 %loadBr_474406, 1
  br i1 %cmpBr_474406, label %block_.L_474446, label %block_47440c

block_47440c:
  ; Code: movswl -0x5a(%rbp), %eax	 RIP: 47440c	 Bytes: 4
  %loadMem_47440c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47440c = call %struct.Memory* @routine_movswl_MINUS0x5a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47440c)
  store %struct.Memory* %call_47440c, %struct.Memory** %MEMORY

  ; Code: movswl -0x5c(%rbp), %ecx	 RIP: 474410	 Bytes: 4
  %loadMem_474410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474410 = call %struct.Memory* @routine_movswl_MINUS0x5c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474410)
  store %struct.Memory* %call_474410, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 474414	 Bytes: 2
  %loadMem_474414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474414 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474414)
  store %struct.Memory* %call_474414, %struct.Memory** %MEMORY

  ; Code: jge .L_47442b	 RIP: 474416	 Bytes: 6
  %loadMem_474416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474416 = call %struct.Memory* @routine_jge_.L_47442b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474416, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_474416, %struct.Memory** %MEMORY

  %loadBr_474416 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474416 = icmp eq i8 %loadBr_474416, 1
  br i1 %cmpBr_474416, label %block_.L_47442b, label %block_47441c

block_47441c:
  ; Code: movswl -0x5a(%rbp), %eax	 RIP: 47441c	 Bytes: 4
  %loadMem_47441c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47441c = call %struct.Memory* @routine_movswl_MINUS0x5a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47441c)
  store %struct.Memory* %call_47441c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c8(%rbp)	 RIP: 474420	 Bytes: 6
  %loadMem_474420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474420 = call %struct.Memory* @routine_movl__eax__MINUS0x1c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474420)
  store %struct.Memory* %call_474420, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474435	 RIP: 474426	 Bytes: 5
  %loadMem_474426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474426 = call %struct.Memory* @routine_jmpq_.L_474435(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474426, i64 15, i64 5)
  store %struct.Memory* %call_474426, %struct.Memory** %MEMORY

  br label %block_.L_474435

  ; Code: .L_47442b:	 RIP: 47442b	 Bytes: 0
block_.L_47442b:

  ; Code: movswl -0x5c(%rbp), %eax	 RIP: 47442b	 Bytes: 4
  %loadMem_47442b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47442b = call %struct.Memory* @routine_movswl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47442b)
  store %struct.Memory* %call_47442b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c8(%rbp)	 RIP: 47442f	 Bytes: 6
  %loadMem_47442f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47442f = call %struct.Memory* @routine_movl__eax__MINUS0x1c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47442f)
  store %struct.Memory* %call_47442f, %struct.Memory** %MEMORY

  ; Code: .L_474435:	 RIP: 474435	 Bytes: 0
  br label %block_.L_474435
block_.L_474435:

  ; Code: movl -0x1c8(%rbp), %eax	 RIP: 474435	 Bytes: 6
  %loadMem_474435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474435 = call %struct.Memory* @routine_movl_MINUS0x1c8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474435)
  store %struct.Memory* %call_474435, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1cc(%rbp)	 RIP: 47443b	 Bytes: 6
  %loadMem_47443b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47443b = call %struct.Memory* @routine_movl__eax__MINUS0x1cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47443b)
  store %struct.Memory* %call_47443b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47447b	 RIP: 474441	 Bytes: 5
  %loadMem_474441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474441 = call %struct.Memory* @routine_jmpq_.L_47447b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474441, i64 58, i64 5)
  store %struct.Memory* %call_474441, %struct.Memory** %MEMORY

  br label %block_.L_47447b

  ; Code: .L_474446:	 RIP: 474446	 Bytes: 0
block_.L_474446:

  ; Code: movswl -0x5a(%rbp), %eax	 RIP: 474446	 Bytes: 4
  %loadMem_474446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474446 = call %struct.Memory* @routine_movswl_MINUS0x5a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474446)
  store %struct.Memory* %call_474446, %struct.Memory** %MEMORY

  ; Code: movswl -0x5c(%rbp), %ecx	 RIP: 47444a	 Bytes: 4
  %loadMem_47444a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47444a = call %struct.Memory* @routine_movswl_MINUS0x5c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47444a)
  store %struct.Memory* %call_47444a, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 47444e	 Bytes: 2
  %loadMem_47444e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47444e = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47444e)
  store %struct.Memory* %call_47444e, %struct.Memory** %MEMORY

  ; Code: jle .L_474465	 RIP: 474450	 Bytes: 6
  %loadMem_474450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474450 = call %struct.Memory* @routine_jle_.L_474465(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474450, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_474450, %struct.Memory** %MEMORY

  %loadBr_474450 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474450 = icmp eq i8 %loadBr_474450, 1
  br i1 %cmpBr_474450, label %block_.L_474465, label %block_474456

block_474456:
  ; Code: movswl -0x5a(%rbp), %eax	 RIP: 474456	 Bytes: 4
  %loadMem_474456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474456 = call %struct.Memory* @routine_movswl_MINUS0x5a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474456)
  store %struct.Memory* %call_474456, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d0(%rbp)	 RIP: 47445a	 Bytes: 6
  %loadMem_47445a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47445a = call %struct.Memory* @routine_movl__eax__MINUS0x1d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47445a)
  store %struct.Memory* %call_47445a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47446f	 RIP: 474460	 Bytes: 5
  %loadMem_474460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474460 = call %struct.Memory* @routine_jmpq_.L_47446f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474460, i64 15, i64 5)
  store %struct.Memory* %call_474460, %struct.Memory** %MEMORY

  br label %block_.L_47446f

  ; Code: .L_474465:	 RIP: 474465	 Bytes: 0
block_.L_474465:

  ; Code: movswl -0x5c(%rbp), %eax	 RIP: 474465	 Bytes: 4
  %loadMem_474465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474465 = call %struct.Memory* @routine_movswl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474465)
  store %struct.Memory* %call_474465, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d0(%rbp)	 RIP: 474469	 Bytes: 6
  %loadMem_474469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474469 = call %struct.Memory* @routine_movl__eax__MINUS0x1d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474469)
  store %struct.Memory* %call_474469, %struct.Memory** %MEMORY

  ; Code: .L_47446f:	 RIP: 47446f	 Bytes: 0
  br label %block_.L_47446f
block_.L_47446f:

  ; Code: movl -0x1d0(%rbp), %eax	 RIP: 47446f	 Bytes: 6
  %loadMem_47446f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47446f = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47446f)
  store %struct.Memory* %call_47446f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1cc(%rbp)	 RIP: 474475	 Bytes: 6
  %loadMem_474475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474475 = call %struct.Memory* @routine_movl__eax__MINUS0x1cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474475)
  store %struct.Memory* %call_474475, %struct.Memory** %MEMORY

  ; Code: .L_47447b:	 RIP: 47447b	 Bytes: 0
  br label %block_.L_47447b
block_.L_47447b:

  ; Code: movl -0x1cc(%rbp), %eax	 RIP: 47447b	 Bytes: 6
  %loadMem_47447b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47447b = call %struct.Memory* @routine_movl_MINUS0x1cc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47447b)
  store %struct.Memory* %call_47447b, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 474481	 Bytes: 3
  %loadMem_474481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474481 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474481)
  store %struct.Memory* %call_474481, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x64(%rbp)	 RIP: 474484	 Bytes: 4
  %loadMem_474484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474484 = call %struct.Memory* @routine_movw__cx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474484)
  store %struct.Memory* %call_474484, %struct.Memory** %MEMORY

  ; Code: movswl -0x64(%rbp), %eax	 RIP: 474488	 Bytes: 4
  %loadMem_474488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474488 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474488)
  store %struct.Memory* %call_474488, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 47448c	 Bytes: 3
  %loadMem_47448c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47448c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47448c)
  store %struct.Memory* %call_47448c, %struct.Memory** %MEMORY

  ; Code: jl .L_4744dc	 RIP: 47448f	 Bytes: 6
  %loadMem_47448f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47448f = call %struct.Memory* @routine_jl_.L_4744dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47448f, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_47448f, %struct.Memory** %MEMORY

  %loadBr_47448f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47448f = icmp eq i8 %loadBr_47448f, 1
  br i1 %cmpBr_47448f, label %block_.L_4744dc, label %block_474495

block_474495:
  ; Code: movswl -0x60(%rbp), %eax	 RIP: 474495	 Bytes: 4
  %loadMem_474495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474495 = call %struct.Memory* @routine_movswl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474495)
  store %struct.Memory* %call_474495, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 474499	 Bytes: 3
  %loadMem_474499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474499 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474499)
  store %struct.Memory* %call_474499, %struct.Memory** %MEMORY

  ; Code: jl .L_4744dc	 RIP: 47449c	 Bytes: 6
  %loadMem_47449c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47449c = call %struct.Memory* @routine_jl_.L_4744dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47449c, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_47449c, %struct.Memory** %MEMORY

  %loadBr_47449c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47449c = icmp eq i8 %loadBr_47449c, 1
  br i1 %cmpBr_47449c, label %block_.L_4744dc, label %block_4744a2

block_4744a2:
  ; Code: movswl -0x64(%rbp), %eax	 RIP: 4744a2	 Bytes: 4
  %loadMem_4744a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744a2 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744a2)
  store %struct.Memory* %call_4744a2, %struct.Memory** %MEMORY

  ; Code: movswl -0x60(%rbp), %ecx	 RIP: 4744a6	 Bytes: 4
  %loadMem_4744a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744a6 = call %struct.Memory* @routine_movswl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744a6)
  store %struct.Memory* %call_4744a6, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4744aa	 Bytes: 2
  %loadMem_4744aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744aa = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744aa)
  store %struct.Memory* %call_4744aa, %struct.Memory** %MEMORY

  ; Code: jge .L_4744c1	 RIP: 4744ac	 Bytes: 6
  %loadMem_4744ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744ac = call %struct.Memory* @routine_jge_.L_4744c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744ac, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4744ac, %struct.Memory** %MEMORY

  %loadBr_4744ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4744ac = icmp eq i8 %loadBr_4744ac, 1
  br i1 %cmpBr_4744ac, label %block_.L_4744c1, label %block_4744b2

block_4744b2:
  ; Code: movswl -0x64(%rbp), %eax	 RIP: 4744b2	 Bytes: 4
  %loadMem_4744b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744b2 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744b2)
  store %struct.Memory* %call_4744b2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d4(%rbp)	 RIP: 4744b6	 Bytes: 6
  %loadMem_4744b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744b6 = call %struct.Memory* @routine_movl__eax__MINUS0x1d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744b6)
  store %struct.Memory* %call_4744b6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4744cb	 RIP: 4744bc	 Bytes: 5
  %loadMem_4744bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744bc = call %struct.Memory* @routine_jmpq_.L_4744cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744bc, i64 15, i64 5)
  store %struct.Memory* %call_4744bc, %struct.Memory** %MEMORY

  br label %block_.L_4744cb

  ; Code: .L_4744c1:	 RIP: 4744c1	 Bytes: 0
block_.L_4744c1:

  ; Code: movswl -0x60(%rbp), %eax	 RIP: 4744c1	 Bytes: 4
  %loadMem_4744c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744c1 = call %struct.Memory* @routine_movswl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744c1)
  store %struct.Memory* %call_4744c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d4(%rbp)	 RIP: 4744c5	 Bytes: 6
  %loadMem_4744c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744c5 = call %struct.Memory* @routine_movl__eax__MINUS0x1d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744c5)
  store %struct.Memory* %call_4744c5, %struct.Memory** %MEMORY

  ; Code: .L_4744cb:	 RIP: 4744cb	 Bytes: 0
  br label %block_.L_4744cb
block_.L_4744cb:

  ; Code: movl -0x1d4(%rbp), %eax	 RIP: 4744cb	 Bytes: 6
  %loadMem_4744cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744cb = call %struct.Memory* @routine_movl_MINUS0x1d4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744cb)
  store %struct.Memory* %call_4744cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d8(%rbp)	 RIP: 4744d1	 Bytes: 6
  %loadMem_4744d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744d1 = call %struct.Memory* @routine_movl__eax__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744d1)
  store %struct.Memory* %call_4744d1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474511	 RIP: 4744d7	 Bytes: 5
  %loadMem_4744d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744d7 = call %struct.Memory* @routine_jmpq_.L_474511(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744d7, i64 58, i64 5)
  store %struct.Memory* %call_4744d7, %struct.Memory** %MEMORY

  br label %block_.L_474511

  ; Code: .L_4744dc:	 RIP: 4744dc	 Bytes: 0
block_.L_4744dc:

  ; Code: movswl -0x64(%rbp), %eax	 RIP: 4744dc	 Bytes: 4
  %loadMem_4744dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744dc = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744dc)
  store %struct.Memory* %call_4744dc, %struct.Memory** %MEMORY

  ; Code: movswl -0x60(%rbp), %ecx	 RIP: 4744e0	 Bytes: 4
  %loadMem_4744e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744e0 = call %struct.Memory* @routine_movswl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744e0)
  store %struct.Memory* %call_4744e0, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4744e4	 Bytes: 2
  %loadMem_4744e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744e4 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744e4)
  store %struct.Memory* %call_4744e4, %struct.Memory** %MEMORY

  ; Code: jle .L_4744fb	 RIP: 4744e6	 Bytes: 6
  %loadMem_4744e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744e6 = call %struct.Memory* @routine_jle_.L_4744fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744e6, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4744e6, %struct.Memory** %MEMORY

  %loadBr_4744e6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4744e6 = icmp eq i8 %loadBr_4744e6, 1
  br i1 %cmpBr_4744e6, label %block_.L_4744fb, label %block_4744ec

block_4744ec:
  ; Code: movswl -0x64(%rbp), %eax	 RIP: 4744ec	 Bytes: 4
  %loadMem_4744ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744ec = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744ec)
  store %struct.Memory* %call_4744ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1dc(%rbp)	 RIP: 4744f0	 Bytes: 6
  %loadMem_4744f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744f0 = call %struct.Memory* @routine_movl__eax__MINUS0x1dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744f0)
  store %struct.Memory* %call_4744f0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474505	 RIP: 4744f6	 Bytes: 5
  %loadMem_4744f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744f6 = call %struct.Memory* @routine_jmpq_.L_474505(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744f6, i64 15, i64 5)
  store %struct.Memory* %call_4744f6, %struct.Memory** %MEMORY

  br label %block_.L_474505

  ; Code: .L_4744fb:	 RIP: 4744fb	 Bytes: 0
block_.L_4744fb:

  ; Code: movswl -0x60(%rbp), %eax	 RIP: 4744fb	 Bytes: 4
  %loadMem_4744fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744fb = call %struct.Memory* @routine_movswl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744fb)
  store %struct.Memory* %call_4744fb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1dc(%rbp)	 RIP: 4744ff	 Bytes: 6
  %loadMem_4744ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4744ff = call %struct.Memory* @routine_movl__eax__MINUS0x1dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4744ff)
  store %struct.Memory* %call_4744ff, %struct.Memory** %MEMORY

  ; Code: .L_474505:	 RIP: 474505	 Bytes: 0
  br label %block_.L_474505
block_.L_474505:

  ; Code: movl -0x1dc(%rbp), %eax	 RIP: 474505	 Bytes: 6
  %loadMem_474505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474505 = call %struct.Memory* @routine_movl_MINUS0x1dc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474505)
  store %struct.Memory* %call_474505, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d8(%rbp)	 RIP: 47450b	 Bytes: 6
  %loadMem_47450b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47450b = call %struct.Memory* @routine_movl__eax__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47450b)
  store %struct.Memory* %call_47450b, %struct.Memory** %MEMORY

  ; Code: .L_474511:	 RIP: 474511	 Bytes: 0
  br label %block_.L_474511
block_.L_474511:

  ; Code: movl -0x1d8(%rbp), %eax	 RIP: 474511	 Bytes: 6
  %loadMem_474511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474511 = call %struct.Memory* @routine_movl_MINUS0x1d8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474511)
  store %struct.Memory* %call_474511, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 474517	 Bytes: 3
  %loadMem_474517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474517 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474517)
  store %struct.Memory* %call_474517, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x64(%rbp)	 RIP: 47451a	 Bytes: 4
  %loadMem_47451a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47451a = call %struct.Memory* @routine_movw__cx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47451a)
  store %struct.Memory* %call_47451a, %struct.Memory** %MEMORY

  ; Code: movswl -0x62(%rbp), %eax	 RIP: 47451e	 Bytes: 4
  %loadMem_47451e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47451e = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47451e)
  store %struct.Memory* %call_47451e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 474522	 Bytes: 3
  %loadMem_474522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474522 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474522)
  store %struct.Memory* %call_474522, %struct.Memory** %MEMORY

  ; Code: jl .L_474584	 RIP: 474525	 Bytes: 6
  %loadMem_474525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474525 = call %struct.Memory* @routine_jl_.L_474584(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474525, i8* %BRANCH_TAKEN, i64 95, i64 6, i64 6)
  store %struct.Memory* %call_474525, %struct.Memory** %MEMORY

  %loadBr_474525 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474525 = icmp eq i8 %loadBr_474525, 1
  br i1 %cmpBr_474525, label %block_.L_474584, label %block_47452b

block_47452b:
  ; Code: xorl %eax, %eax	 RIP: 47452b	 Bytes: 2
  %loadMem_47452b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47452b = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47452b)
  store %struct.Memory* %call_47452b, %struct.Memory** %MEMORY

  ; Code: movl $0x10, %ecx	 RIP: 47452d	 Bytes: 5
  %loadMem_47452d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47452d = call %struct.Memory* @routine_movl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47452d)
  store %struct.Memory* %call_47452d, %struct.Memory** %MEMORY

  ; Code: leaq -0x68(%rbp), %rdi	 RIP: 474532	 Bytes: 4
  %loadMem_474532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474532 = call %struct.Memory* @routine_leaq_MINUS0x68__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474532)
  store %struct.Memory* %call_474532, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rdx	 RIP: 474536	 Bytes: 8
  %loadMem_474536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474536 = call %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474536)
  store %struct.Memory* %call_474536, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rdx), %rsi	 RIP: 47453e	 Bytes: 7
  %loadMem_47453e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47453e = call %struct.Memory* @routine_movq_0x1950__rdx____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47453e)
  store %struct.Memory* %call_47453e, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rdx	 RIP: 474545	 Bytes: 8
  %loadMem_474545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474545 = call %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474545)
  store %struct.Memory* %call_474545, %struct.Memory** %MEMORY

  ; Code: movq 0x1968(%rdx), %rdx	 RIP: 47454d	 Bytes: 7
  %loadMem_47454d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47454d = call %struct.Memory* @routine_movq_0x1968__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47454d)
  store %struct.Memory* %call_47454d, %struct.Memory** %MEMORY

  ; Code: movswl -0x62(%rbp), %r8d	 RIP: 474554	 Bytes: 5
  %loadMem_474554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474554 = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474554)
  store %struct.Memory* %call_474554, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1e0(%rbp)	 RIP: 474559	 Bytes: 6
  %loadMem_474559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474559 = call %struct.Memory* @routine_movl__ecx__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474559)
  store %struct.Memory* %call_474559, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 47455f	 Bytes: 3
  %loadMem_47455f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47455f = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47455f)
  store %struct.Memory* %call_47455f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 474562	 Bytes: 3
  %loadMem_474562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474562 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474562)
  store %struct.Memory* %call_474562, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r9d	 RIP: 474565	 Bytes: 3
  %loadMem_474565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474565 = call %struct.Memory* @routine_movl__eax___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474565)
  store %struct.Memory* %call_474565, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 474568	 Bytes: 7
  %loadMem_474568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474568 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474568)
  store %struct.Memory* %call_474568, %struct.Memory** %MEMORY

  ; Code: movl $0x10, 0x8(%rsp)	 RIP: 47456f	 Bytes: 8
  %loadMem_47456f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47456f = call %struct.Memory* @routine_movl__0x10__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47456f)
  store %struct.Memory* %call_47456f, %struct.Memory** %MEMORY

  ; Code: movl $0x10, 0x10(%rsp)	 RIP: 474577	 Bytes: 8
  %loadMem_474577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474577 = call %struct.Memory* @routine_movl__0x10__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474577)
  store %struct.Memory* %call_474577, %struct.Memory** %MEMORY

  ; Code: callq .SetMotionVectorPredictor	 RIP: 47457f	 Bytes: 5
  %loadMem1_47457f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47457f = call %struct.Memory* @routine_callq_.SetMotionVectorPredictor(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47457f, i64 -97151, i64 5, i64 5)
  store %struct.Memory* %call1_47457f, %struct.Memory** %MEMORY

  %loadMem2_47457f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47457f = load i64, i64* %3
  %call2_47457f = call %struct.Memory* @sub_45ca00.SetMotionVectorPredictor(%struct.State* %0, i64  %loadPC_47457f, %struct.Memory* %loadMem2_47457f)
  store %struct.Memory* %call2_47457f, %struct.Memory** %MEMORY

  ; Code: .L_474584:	 RIP: 474584	 Bytes: 0
  br label %block_.L_474584
block_.L_474584:

  ; Code: movswl -0x64(%rbp), %eax	 RIP: 474584	 Bytes: 4
  %loadMem_474584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474584 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474584)
  store %struct.Memory* %call_474584, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 474588	 Bytes: 3
  %loadMem_474588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474588 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474588)
  store %struct.Memory* %call_474588, %struct.Memory** %MEMORY

  ; Code: jl .L_4745e7	 RIP: 47458b	 Bytes: 6
  %loadMem_47458b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47458b = call %struct.Memory* @routine_jl_.L_4745e7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47458b, i8* %BRANCH_TAKEN, i64 92, i64 6, i64 6)
  store %struct.Memory* %call_47458b, %struct.Memory** %MEMORY

  %loadBr_47458b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47458b = icmp eq i8 %loadBr_47458b, 1
  br i1 %cmpBr_47458b, label %block_.L_4745e7, label %block_474591

block_474591:
  ; Code: movl $0x1, %r8d	 RIP: 474591	 Bytes: 6
  %loadMem_474591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474591 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474591)
  store %struct.Memory* %call_474591, %struct.Memory** %MEMORY

  ; Code: xorl %r9d, %r9d	 RIP: 474597	 Bytes: 3
  %loadMem_474597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474597 = call %struct.Memory* @routine_xorl__r9d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474597)
  store %struct.Memory* %call_474597, %struct.Memory** %MEMORY

  ; Code: movl $0x10, %eax	 RIP: 47459a	 Bytes: 5
  %loadMem_47459a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47459a = call %struct.Memory* @routine_movl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47459a)
  store %struct.Memory* %call_47459a, %struct.Memory** %MEMORY

  ; Code: leaq -0x6c(%rbp), %rdi	 RIP: 47459f	 Bytes: 4
  %loadMem_47459f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47459f = call %struct.Memory* @routine_leaq_MINUS0x6c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47459f)
  store %struct.Memory* %call_47459f, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 4745a3	 Bytes: 8
  %loadMem_4745a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745a3 = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745a3)
  store %struct.Memory* %call_4745a3, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rcx), %rsi	 RIP: 4745ab	 Bytes: 7
  %loadMem_4745ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745ab = call %struct.Memory* @routine_movq_0x1950__rcx____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745ab)
  store %struct.Memory* %call_4745ab, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 4745b2	 Bytes: 8
  %loadMem_4745b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745b2 = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745b2)
  store %struct.Memory* %call_4745b2, %struct.Memory** %MEMORY

  ; Code: movq 0x1968(%rcx), %rdx	 RIP: 4745ba	 Bytes: 7
  %loadMem_4745ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745ba = call %struct.Memory* @routine_movq_0x1968__rcx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745ba)
  store %struct.Memory* %call_4745ba, %struct.Memory** %MEMORY

  ; Code: movswl -0x64(%rbp), %ecx	 RIP: 4745c1	 Bytes: 4
  %loadMem_4745c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745c1 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745c1)
  store %struct.Memory* %call_4745c1, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 4745c5	 Bytes: 7
  %loadMem_4745c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745c5 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745c5)
  store %struct.Memory* %call_4745c5, %struct.Memory** %MEMORY

  ; Code: movl $0x10, 0x8(%rsp)	 RIP: 4745cc	 Bytes: 8
  %loadMem_4745cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745cc = call %struct.Memory* @routine_movl__0x10__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745cc)
  store %struct.Memory* %call_4745cc, %struct.Memory** %MEMORY

  ; Code: movl $0x10, 0x10(%rsp)	 RIP: 4745d4	 Bytes: 8
  %loadMem_4745d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745d4 = call %struct.Memory* @routine_movl__0x10__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745d4)
  store %struct.Memory* %call_4745d4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e4(%rbp)	 RIP: 4745dc	 Bytes: 6
  %loadMem_4745dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745dc = call %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745dc)
  store %struct.Memory* %call_4745dc, %struct.Memory** %MEMORY

  ; Code: callq .SetMotionVectorPredictor	 RIP: 4745e2	 Bytes: 5
  %loadMem1_4745e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4745e2 = call %struct.Memory* @routine_callq_.SetMotionVectorPredictor(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4745e2, i64 -97250, i64 5, i64 5)
  store %struct.Memory* %call1_4745e2, %struct.Memory** %MEMORY

  %loadMem2_4745e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4745e2 = load i64, i64* %3
  %call2_4745e2 = call %struct.Memory* @sub_45ca00.SetMotionVectorPredictor(%struct.State* %0, i64  %loadPC_4745e2, %struct.Memory* %loadMem2_4745e2)
  store %struct.Memory* %call2_4745e2, %struct.Memory** %MEMORY

  ; Code: .L_4745e7:	 RIP: 4745e7	 Bytes: 0
  br label %block_.L_4745e7
block_.L_4745e7:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 4745e7	 Bytes: 7
  %loadMem_4745e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745e7 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745e7)
  store %struct.Memory* %call_4745e7, %struct.Memory** %MEMORY

  ; Code: .L_4745ee:	 RIP: 4745ee	 Bytes: 0
  br label %block_.L_4745ee
block_.L_4745ee:

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 4745ee	 Bytes: 4
  %loadMem_4745ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745ee = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745ee)
  store %struct.Memory* %call_4745ee, %struct.Memory** %MEMORY

  ; Code: jge .L_474a7b	 RIP: 4745f2	 Bytes: 6
  %loadMem_4745f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745f2 = call %struct.Memory* @routine_jge_.L_474a7b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745f2, i8* %BRANCH_TAKEN, i64 1161, i64 6, i64 6)
  store %struct.Memory* %call_4745f2, %struct.Memory** %MEMORY

  %loadBr_4745f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4745f2 = icmp eq i8 %loadBr_4745f2, 1
  br i1 %cmpBr_4745f2, label %block_.L_474a7b, label %block_4745f8

block_4745f8:
  ; Code: movq 0x6cb900, %rax	 RIP: 4745f8	 Bytes: 8
  %loadMem_4745f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4745f8 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4745f8)
  store %struct.Memory* %call_4745f8, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rax), %ecx	 RIP: 474600	 Bytes: 6
  %loadMem_474600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474600 = call %struct.Memory* @routine_movl_0x9c__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474600)
  store %struct.Memory* %call_474600, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 474606	 Bytes: 3
  %loadMem_474606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474606 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474606)
  store %struct.Memory* %call_474606, %struct.Memory** %MEMORY

  ; Code: addl -0x8(%rbp), %ecx	 RIP: 474609	 Bytes: 3
  %loadMem_474609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474609 = call %struct.Memory* @routine_addl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474609)
  store %struct.Memory* %call_474609, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x10(%rbp)	 RIP: 47460c	 Bytes: 3
  %loadMem_47460c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47460c = call %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47460c)
  store %struct.Memory* %call_47460c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47460f	 Bytes: 8
  %loadMem_47460f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47460f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47460f)
  store %struct.Memory* %call_47460f, %struct.Memory** %MEMORY

  ; Code: movl 0xac(%rax), %ecx	 RIP: 474617	 Bytes: 6
  %loadMem_474617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474617 = call %struct.Memory* @routine_movl_0xac__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474617)
  store %struct.Memory* %call_474617, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 47461d	 Bytes: 3
  %loadMem_47461d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47461d = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47461d)
  store %struct.Memory* %call_47461d, %struct.Memory** %MEMORY

  ; Code: addl -0x8(%rbp), %ecx	 RIP: 474620	 Bytes: 3
  %loadMem_474620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474620 = call %struct.Memory* @routine_addl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474620)
  store %struct.Memory* %call_474620, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 474623	 Bytes: 3
  %loadMem_474623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474623 = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474623)
  store %struct.Memory* %call_474623, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4(%rbp)	 RIP: 474626	 Bytes: 7
  %loadMem_474626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474626 = call %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474626)
  store %struct.Memory* %call_474626, %struct.Memory** %MEMORY

  ; Code: .L_47462d:	 RIP: 47462d	 Bytes: 0
  br label %block_.L_47462d
block_.L_47462d:

  ; Code: cmpl $0x4, -0x4(%rbp)	 RIP: 47462d	 Bytes: 4
  %loadMem_47462d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47462d = call %struct.Memory* @routine_cmpl__0x4__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47462d)
  store %struct.Memory* %call_47462d, %struct.Memory** %MEMORY

  ; Code: jge .L_474a68	 RIP: 474631	 Bytes: 6
  %loadMem_474631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474631 = call %struct.Memory* @routine_jge_.L_474a68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474631, i8* %BRANCH_TAKEN, i64 1079, i64 6, i64 6)
  store %struct.Memory* %call_474631, %struct.Memory** %MEMORY

  %loadBr_474631 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474631 = icmp eq i8 %loadBr_474631, 1
  br i1 %cmpBr_474631, label %block_.L_474a68, label %block_474637

block_474637:
  ; Code: movq 0x6cb900, %rax	 RIP: 474637	 Bytes: 8
  %loadMem_474637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474637 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474637)
  store %struct.Memory* %call_474637, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rax), %ecx	 RIP: 47463f	 Bytes: 6
  %loadMem_47463f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47463f = call %struct.Memory* @routine_movl_0x98__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47463f)
  store %struct.Memory* %call_47463f, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 474645	 Bytes: 3
  %loadMem_474645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474645 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474645)
  store %struct.Memory* %call_474645, %struct.Memory** %MEMORY

  ; Code: addl -0x4(%rbp), %ecx	 RIP: 474648	 Bytes: 3
  %loadMem_474648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474648 = call %struct.Memory* @routine_addl_MINUS0x4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474648)
  store %struct.Memory* %call_474648, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc(%rbp)	 RIP: 47464b	 Bytes: 3
  %loadMem_47464b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47464b = call %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47464b)
  store %struct.Memory* %call_47464b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47464e	 Bytes: 8
  %loadMem_47464e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47464e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47464e)
  store %struct.Memory* %call_47464e, %struct.Memory** %MEMORY

  ; Code: movl 0xa8(%rax), %ecx	 RIP: 474656	 Bytes: 6
  %loadMem_474656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474656 = call %struct.Memory* @routine_movl_0xa8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474656)
  store %struct.Memory* %call_474656, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 47465c	 Bytes: 3
  %loadMem_47465c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47465c = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47465c)
  store %struct.Memory* %call_47465c, %struct.Memory** %MEMORY

  ; Code: addl -0x4(%rbp), %ecx	 RIP: 47465f	 Bytes: 3
  %loadMem_47465f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47465f = call %struct.Memory* @routine_addl_MINUS0x4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47465f)
  store %struct.Memory* %call_47465f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x14(%rbp)	 RIP: 474662	 Bytes: 3
  %loadMem_474662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474662 = call %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474662)
  store %struct.Memory* %call_474662, %struct.Memory** %MEMORY

  ; Code: movswl -0x62(%rbp), %ecx	 RIP: 474665	 Bytes: 4
  %loadMem_474665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474665 = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474665)
  store %struct.Memory* %call_474665, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 474669	 Bytes: 3
  %loadMem_474669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474669 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474669)
  store %struct.Memory* %call_474669, %struct.Memory** %MEMORY

  ; Code: jl .L_474777	 RIP: 47466c	 Bytes: 6
  %loadMem_47466c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47466c = call %struct.Memory* @routine_jl_.L_474777(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47466c, i8* %BRANCH_TAKEN, i64 267, i64 6, i64 6)
  store %struct.Memory* %call_47466c, %struct.Memory** %MEMORY

  %loadBr_47466c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47466c = icmp eq i8 %loadBr_47466c, 1
  br i1 %cmpBr_47466c, label %block_.L_474777, label %block_474672

block_474672:
  ; Code: cmpw $0x0, -0x62(%rbp)	 RIP: 474672	 Bytes: 5
  %loadMem_474672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474672 = call %struct.Memory* @routine_cmpw__0x0__MINUS0x62__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474672)
  store %struct.Memory* %call_474672, %struct.Memory** %MEMORY

  ; Code: jne .L_4746fe	 RIP: 474677	 Bytes: 6
  %loadMem_474677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474677 = call %struct.Memory* @routine_jne_.L_4746fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474677, i8* %BRANCH_TAKEN, i64 135, i64 6, i64 6)
  store %struct.Memory* %call_474677, %struct.Memory** %MEMORY

  %loadBr_474677 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474677 = icmp eq i8 %loadBr_474677, 1
  br i1 %cmpBr_474677, label %block_.L_4746fe, label %block_47467d

block_47467d:
  ; Code: movq -0x30(%rbp), %rax	 RIP: 47467d	 Bytes: 4
  %loadMem_47467d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47467d = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47467d)
  store %struct.Memory* %call_47467d, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 474681	 Bytes: 4
  %loadMem_474681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474681 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474681)
  store %struct.Memory* %call_474681, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474685	 Bytes: 4
  %loadMem_474685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474685 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474685)
  store %struct.Memory* %call_474685, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 474689	 Bytes: 4
  %loadMem_474689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474689 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474689)
  store %struct.Memory* %call_474689, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, (%rax,%rcx,1)	 RIP: 47468d	 Bytes: 4
  %loadMem_47468d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47468d = call %struct.Memory* @routine_cmpb__0x0____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47468d)
  store %struct.Memory* %call_47468d, %struct.Memory** %MEMORY

  ; Code: jne .L_4746fe	 RIP: 474691	 Bytes: 6
  %loadMem_474691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474691 = call %struct.Memory* @routine_jne_.L_4746fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474691, i8* %BRANCH_TAKEN, i64 109, i64 6, i64 6)
  store %struct.Memory* %call_474691, %struct.Memory** %MEMORY

  %loadBr_474691 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474691 = icmp eq i8 %loadBr_474691, 1
  br i1 %cmpBr_474691, label %block_.L_4746fe, label %block_474697

block_474697:
  ; Code: movq -0x20(%rbp), %rax	 RIP: 474697	 Bytes: 4
  %loadMem_474697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474697 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474697)
  store %struct.Memory* %call_474697, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 47469b	 Bytes: 4
  %loadMem_47469b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47469b = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47469b)
  store %struct.Memory* %call_47469b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47469f	 Bytes: 4
  %loadMem_47469f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47469f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47469f)
  store %struct.Memory* %call_47469f, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 4746a3	 Bytes: 4
  %loadMem_4746a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746a3 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746a3)
  store %struct.Memory* %call_4746a3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4746a7	 Bytes: 4
  %loadMem_4746a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746a7 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746a7)
  store %struct.Memory* %call_4746a7, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4746ab	 Bytes: 3
  %loadMem_4746ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746ab = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746ab)
  store %struct.Memory* %call_4746ab, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4746ae	 Bytes: 3
  %loadMem_4746ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746ae = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746ae)
  store %struct.Memory* %call_4746ae, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4746b1	 Bytes: 3
  %loadMem_4746b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746b1 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746b1)
  store %struct.Memory* %call_4746b1, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax)	 RIP: 4746b4	 Bytes: 5
  %loadMem_4746b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746b4 = call %struct.Memory* @routine_movw__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746b4)
  store %struct.Memory* %call_4746b4, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 4746b9	 Bytes: 4
  %loadMem_4746b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746b9 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746b9)
  store %struct.Memory* %call_4746b9, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 4746bd	 Bytes: 4
  %loadMem_4746bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746bd = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746bd)
  store %struct.Memory* %call_4746bd, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4746c1	 Bytes: 4
  %loadMem_4746c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746c1 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746c1)
  store %struct.Memory* %call_4746c1, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 4746c5	 Bytes: 4
  %loadMem_4746c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746c5 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746c5)
  store %struct.Memory* %call_4746c5, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4746c9	 Bytes: 4
  %loadMem_4746c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746c9 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746c9)
  store %struct.Memory* %call_4746c9, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4746cd	 Bytes: 3
  %loadMem_4746cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746cd = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746cd)
  store %struct.Memory* %call_4746cd, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4746d0	 Bytes: 3
  %loadMem_4746d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746d0 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746d0)
  store %struct.Memory* %call_4746d0, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4746d3	 Bytes: 3
  %loadMem_4746d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746d3 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746d3)
  store %struct.Memory* %call_4746d3, %struct.Memory** %MEMORY

  ; Code: movw $0x0, 0x2(%rax)	 RIP: 4746d6	 Bytes: 6
  %loadMem_4746d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746d6 = call %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746d6)
  store %struct.Memory* %call_4746d6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rax	 RIP: 4746dc	 Bytes: 8
  %loadMem_4746dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746dc = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746dc)
  store %struct.Memory* %call_4746dc, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4746e4	 Bytes: 3
  %loadMem_4746e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746e4 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746e4)
  store %struct.Memory* %call_4746e4, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4746e7	 Bytes: 4
  %loadMem_4746e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746e7 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746e7)
  store %struct.Memory* %call_4746e7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4746eb	 Bytes: 4
  %loadMem_4746eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746eb = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746eb)
  store %struct.Memory* %call_4746eb, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4746ef	 Bytes: 4
  %loadMem_4746ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746ef = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746ef)
  store %struct.Memory* %call_4746ef, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax,%rcx,2)	 RIP: 4746f3	 Bytes: 6
  %loadMem_4746f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746f3 = call %struct.Memory* @routine_movw__0x0____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746f3)
  store %struct.Memory* %call_4746f3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474772	 RIP: 4746f9	 Bytes: 5
  %loadMem_4746f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746f9 = call %struct.Memory* @routine_jmpq_.L_474772(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746f9, i64 121, i64 5)
  store %struct.Memory* %call_4746f9, %struct.Memory** %MEMORY

  br label %block_.L_474772

  ; Code: .L_4746fe:	 RIP: 4746fe	 Bytes: 0
block_.L_4746fe:

  ; Code: movw -0x68(%rbp), %ax	 RIP: 4746fe	 Bytes: 4
  %loadMem_4746fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4746fe = call %struct.Memory* @routine_movw_MINUS0x68__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4746fe)
  store %struct.Memory* %call_4746fe, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 474702	 Bytes: 4
  %loadMem_474702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474702 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474702)
  store %struct.Memory* %call_474702, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 474706	 Bytes: 4
  %loadMem_474706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474706 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474706)
  store %struct.Memory* %call_474706, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47470a	 Bytes: 4
  %loadMem_47470a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47470a = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47470a)
  store %struct.Memory* %call_47470a, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 47470e	 Bytes: 4
  %loadMem_47470e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47470e = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47470e)
  store %struct.Memory* %call_47470e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474712	 Bytes: 4
  %loadMem_474712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474712 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474712)
  store %struct.Memory* %call_474712, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474716	 Bytes: 3
  %loadMem_474716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474716 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474716)
  store %struct.Memory* %call_474716, %struct.Memory** %MEMORY

  ; Code: movswq -0x62(%rbp), %rdx	 RIP: 474719	 Bytes: 5
  %loadMem_474719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474719 = call %struct.Memory* @routine_movswq_MINUS0x62__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474719)
  store %struct.Memory* %call_474719, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47471e	 Bytes: 4
  %loadMem_47471e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47471e = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47471e)
  store %struct.Memory* %call_47471e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474722	 Bytes: 3
  %loadMem_474722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474722 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474722)
  store %struct.Memory* %call_474722, %struct.Memory** %MEMORY

  ; Code: movw %ax, (%rcx)	 RIP: 474725	 Bytes: 3
  %loadMem_474725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474725 = call %struct.Memory* @routine_movw__ax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474725)
  store %struct.Memory* %call_474725, %struct.Memory** %MEMORY

  ; Code: movw -0x66(%rbp), %ax	 RIP: 474728	 Bytes: 4
  %loadMem_474728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474728 = call %struct.Memory* @routine_movw_MINUS0x66__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474728)
  store %struct.Memory* %call_474728, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 47472c	 Bytes: 4
  %loadMem_47472c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47472c = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47472c)
  store %struct.Memory* %call_47472c, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 474730	 Bytes: 4
  %loadMem_474730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474730 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474730)
  store %struct.Memory* %call_474730, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474734	 Bytes: 4
  %loadMem_474734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474734 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474734)
  store %struct.Memory* %call_474734, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 474738	 Bytes: 4
  %loadMem_474738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474738 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474738)
  store %struct.Memory* %call_474738, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47473c	 Bytes: 4
  %loadMem_47473c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47473c = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47473c)
  store %struct.Memory* %call_47473c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474740	 Bytes: 3
  %loadMem_474740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474740 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474740)
  store %struct.Memory* %call_474740, %struct.Memory** %MEMORY

  ; Code: movswq -0x62(%rbp), %rdx	 RIP: 474743	 Bytes: 5
  %loadMem_474743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474743 = call %struct.Memory* @routine_movswq_MINUS0x62__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474743)
  store %struct.Memory* %call_474743, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474748	 Bytes: 4
  %loadMem_474748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474748 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474748)
  store %struct.Memory* %call_474748, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 47474c	 Bytes: 3
  %loadMem_47474c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47474c = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47474c)
  store %struct.Memory* %call_47474c, %struct.Memory** %MEMORY

  ; Code: movw %ax, 0x2(%rcx)	 RIP: 47474f	 Bytes: 4
  %loadMem_47474f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47474f = call %struct.Memory* @routine_movw__ax__0x2__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47474f)
  store %struct.Memory* %call_47474f, %struct.Memory** %MEMORY

  ; Code: movw -0x62(%rbp), %ax	 RIP: 474753	 Bytes: 4
  %loadMem_474753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474753 = call %struct.Memory* @routine_movw_MINUS0x62__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474753)
  store %struct.Memory* %call_474753, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rcx	 RIP: 474757	 Bytes: 8
  %loadMem_474757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474757 = call %struct.Memory* @routine_movq_0x6cea08___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474757)
  store %struct.Memory* %call_474757, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 47475f	 Bytes: 3
  %loadMem_47475f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47475f = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47475f)
  store %struct.Memory* %call_47475f, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 474762	 Bytes: 4
  %loadMem_474762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474762 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474762)
  store %struct.Memory* %call_474762, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474766	 Bytes: 4
  %loadMem_474766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474766 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474766)
  store %struct.Memory* %call_474766, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 47476a	 Bytes: 4
  %loadMem_47476a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47476a = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47476a)
  store %struct.Memory* %call_47476a, %struct.Memory** %MEMORY

  ; Code: movw %ax, (%rcx,%rdx,2)	 RIP: 47476e	 Bytes: 4
  %loadMem_47476e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47476e = call %struct.Memory* @routine_movw__ax____rcx__rdx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47476e)
  store %struct.Memory* %call_47476e, %struct.Memory** %MEMORY

  ; Code: .L_474772:	 RIP: 474772	 Bytes: 0
  br label %block_.L_474772
block_.L_474772:

  ; Code: jmpq .L_4747d9	 RIP: 474772	 Bytes: 5
  %loadMem_474772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474772 = call %struct.Memory* @routine_jmpq_.L_4747d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474772, i64 103, i64 5)
  store %struct.Memory* %call_474772, %struct.Memory** %MEMORY

  br label %block_.L_4747d9

  ; Code: .L_474777:	 RIP: 474777	 Bytes: 0
block_.L_474777:

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474777	 Bytes: 4
  %loadMem_474777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474777 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474777)
  store %struct.Memory* %call_474777, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 47477b	 Bytes: 4
  %loadMem_47477b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47477b = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47477b)
  store %struct.Memory* %call_47477b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47477f	 Bytes: 4
  %loadMem_47477f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47477f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47477f)
  store %struct.Memory* %call_47477f, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474783	 Bytes: 4
  %loadMem_474783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474783 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474783)
  store %struct.Memory* %call_474783, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474787	 Bytes: 4
  %loadMem_474787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474787 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474787)
  store %struct.Memory* %call_474787, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47478b	 Bytes: 3
  %loadMem_47478b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47478b = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47478b)
  store %struct.Memory* %call_47478b, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47478e	 Bytes: 3
  %loadMem_47478e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47478e = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47478e)
  store %struct.Memory* %call_47478e, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474791	 Bytes: 3
  %loadMem_474791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474791 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474791)
  store %struct.Memory* %call_474791, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax)	 RIP: 474794	 Bytes: 5
  %loadMem_474794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474794 = call %struct.Memory* @routine_movw__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474794)
  store %struct.Memory* %call_474794, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474799	 Bytes: 4
  %loadMem_474799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474799 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474799)
  store %struct.Memory* %call_474799, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 47479d	 Bytes: 4
  %loadMem_47479d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47479d = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47479d)
  store %struct.Memory* %call_47479d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4747a1	 Bytes: 4
  %loadMem_4747a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747a1 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747a1)
  store %struct.Memory* %call_4747a1, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 4747a5	 Bytes: 4
  %loadMem_4747a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747a5 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747a5)
  store %struct.Memory* %call_4747a5, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4747a9	 Bytes: 4
  %loadMem_4747a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747a9 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747a9)
  store %struct.Memory* %call_4747a9, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4747ad	 Bytes: 3
  %loadMem_4747ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747ad = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747ad)
  store %struct.Memory* %call_4747ad, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4747b0	 Bytes: 3
  %loadMem_4747b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747b0 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747b0)
  store %struct.Memory* %call_4747b0, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4747b3	 Bytes: 3
  %loadMem_4747b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747b3 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747b3)
  store %struct.Memory* %call_4747b3, %struct.Memory** %MEMORY

  ; Code: movw $0x0, 0x2(%rax)	 RIP: 4747b6	 Bytes: 6
  %loadMem_4747b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747b6 = call %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747b6)
  store %struct.Memory* %call_4747b6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rax	 RIP: 4747bc	 Bytes: 8
  %loadMem_4747bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747bc = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747bc)
  store %struct.Memory* %call_4747bc, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4747c4	 Bytes: 3
  %loadMem_4747c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747c4 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747c4)
  store %struct.Memory* %call_4747c4, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4747c7	 Bytes: 4
  %loadMem_4747c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747c7 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747c7)
  store %struct.Memory* %call_4747c7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4747cb	 Bytes: 4
  %loadMem_4747cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747cb = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747cb)
  store %struct.Memory* %call_4747cb, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4747cf	 Bytes: 4
  %loadMem_4747cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747cf = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747cf)
  store %struct.Memory* %call_4747cf, %struct.Memory** %MEMORY

  ; Code: movw $0xffff, (%rax,%rcx,2)	 RIP: 4747d3	 Bytes: 6
  %loadMem_4747d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747d3 = call %struct.Memory* @routine_movw__0xffff____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747d3)
  store %struct.Memory* %call_4747d3, %struct.Memory** %MEMORY

  ; Code: .L_4747d9:	 RIP: 4747d9	 Bytes: 0
  br label %block_.L_4747d9
block_.L_4747d9:

  ; Code: movswl -0x64(%rbp), %eax	 RIP: 4747d9	 Bytes: 4
  %loadMem_4747d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747d9 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747d9)
  store %struct.Memory* %call_4747d9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4747dd	 Bytes: 3
  %loadMem_4747dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747dd = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747dd)
  store %struct.Memory* %call_4747dd, %struct.Memory** %MEMORY

  ; Code: jl .L_4748f5	 RIP: 4747e0	 Bytes: 6
  %loadMem_4747e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747e0 = call %struct.Memory* @routine_jl_.L_4748f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747e0, i8* %BRANCH_TAKEN, i64 277, i64 6, i64 6)
  store %struct.Memory* %call_4747e0, %struct.Memory** %MEMORY

  %loadBr_4747e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4747e0 = icmp eq i8 %loadBr_4747e0, 1
  br i1 %cmpBr_4747e0, label %block_.L_4748f5, label %block_4747e6

block_4747e6:
  ; Code: movswl -0x64(%rbp), %eax	 RIP: 4747e6	 Bytes: 4
  %loadMem_4747e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747e6 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747e6)
  store %struct.Memory* %call_4747e6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4747ea	 Bytes: 3
  %loadMem_4747ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747ea = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747ea)
  store %struct.Memory* %call_4747ea, %struct.Memory** %MEMORY

  ; Code: jne .L_474879	 RIP: 4747ed	 Bytes: 6
  %loadMem_4747ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747ed = call %struct.Memory* @routine_jne_.L_474879(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747ed, i8* %BRANCH_TAKEN, i64 140, i64 6, i64 6)
  store %struct.Memory* %call_4747ed, %struct.Memory** %MEMORY

  %loadBr_4747ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4747ed = icmp eq i8 %loadBr_4747ed, 1
  br i1 %cmpBr_4747ed, label %block_.L_474879, label %block_4747f3

block_4747f3:
  ; Code: movq -0x30(%rbp), %rax	 RIP: 4747f3	 Bytes: 4
  %loadMem_4747f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747f3 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747f3)
  store %struct.Memory* %call_4747f3, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 4747f7	 Bytes: 4
  %loadMem_4747f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747f7 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747f7)
  store %struct.Memory* %call_4747f7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4747fb	 Bytes: 4
  %loadMem_4747fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747fb = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747fb)
  store %struct.Memory* %call_4747fb, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 4747ff	 Bytes: 4
  %loadMem_4747ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4747ff = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4747ff)
  store %struct.Memory* %call_4747ff, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, (%rax,%rcx,1)	 RIP: 474803	 Bytes: 4
  %loadMem_474803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474803 = call %struct.Memory* @routine_cmpb__0x0____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474803)
  store %struct.Memory* %call_474803, %struct.Memory** %MEMORY

  ; Code: jne .L_474879	 RIP: 474807	 Bytes: 6
  %loadMem_474807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474807 = call %struct.Memory* @routine_jne_.L_474879(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474807, i8* %BRANCH_TAKEN, i64 114, i64 6, i64 6)
  store %struct.Memory* %call_474807, %struct.Memory** %MEMORY

  %loadBr_474807 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474807 = icmp eq i8 %loadBr_474807, 1
  br i1 %cmpBr_474807, label %block_.L_474879, label %block_47480d

block_47480d:
  ; Code: movq -0x20(%rbp), %rax	 RIP: 47480d	 Bytes: 4
  %loadMem_47480d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47480d = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47480d)
  store %struct.Memory* %call_47480d, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474811	 Bytes: 4
  %loadMem_474811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474811 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474811)
  store %struct.Memory* %call_474811, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474815	 Bytes: 4
  %loadMem_474815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474815 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474815)
  store %struct.Memory* %call_474815, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474819	 Bytes: 4
  %loadMem_474819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474819 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474819)
  store %struct.Memory* %call_474819, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47481d	 Bytes: 4
  %loadMem_47481d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47481d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47481d)
  store %struct.Memory* %call_47481d, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474821	 Bytes: 4
  %loadMem_474821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474821 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474821)
  store %struct.Memory* %call_474821, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474825	 Bytes: 3
  %loadMem_474825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474825 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474825)
  store %struct.Memory* %call_474825, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474828	 Bytes: 3
  %loadMem_474828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474828 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474828)
  store %struct.Memory* %call_474828, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax)	 RIP: 47482b	 Bytes: 5
  %loadMem_47482b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47482b = call %struct.Memory* @routine_movw__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47482b)
  store %struct.Memory* %call_47482b, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474830	 Bytes: 4
  %loadMem_474830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474830 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474830)
  store %struct.Memory* %call_474830, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474834	 Bytes: 4
  %loadMem_474834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474834 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474834)
  store %struct.Memory* %call_474834, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474838	 Bytes: 4
  %loadMem_474838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474838 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474838)
  store %struct.Memory* %call_474838, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 47483c	 Bytes: 4
  %loadMem_47483c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47483c = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47483c)
  store %struct.Memory* %call_47483c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474840	 Bytes: 4
  %loadMem_474840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474840 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474840)
  store %struct.Memory* %call_474840, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474844	 Bytes: 4
  %loadMem_474844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474844 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474844)
  store %struct.Memory* %call_474844, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474848	 Bytes: 3
  %loadMem_474848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474848 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474848)
  store %struct.Memory* %call_474848, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47484b	 Bytes: 3
  %loadMem_47484b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47484b = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47484b)
  store %struct.Memory* %call_47484b, %struct.Memory** %MEMORY

  ; Code: movw $0x0, 0x2(%rax)	 RIP: 47484e	 Bytes: 6
  %loadMem_47484e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47484e = call %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47484e)
  store %struct.Memory* %call_47484e, %struct.Memory** %MEMORY

  ; Code: movw -0x64(%rbp), %dx	 RIP: 474854	 Bytes: 4
  %loadMem_474854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474854 = call %struct.Memory* @routine_movw_MINUS0x64__rbp____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474854)
  store %struct.Memory* %call_474854, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rax	 RIP: 474858	 Bytes: 8
  %loadMem_474858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474858 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474858)
  store %struct.Memory* %call_474858, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474860	 Bytes: 4
  %loadMem_474860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474860 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474860)
  store %struct.Memory* %call_474860, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474864	 Bytes: 4
  %loadMem_474864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474864 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474864)
  store %struct.Memory* %call_474864, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474868	 Bytes: 4
  %loadMem_474868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474868 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474868)
  store %struct.Memory* %call_474868, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 47486c	 Bytes: 4
  %loadMem_47486c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47486c = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47486c)
  store %struct.Memory* %call_47486c, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax,%rcx,2)	 RIP: 474870	 Bytes: 4
  %loadMem_474870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474870 = call %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474870)
  store %struct.Memory* %call_474870, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4748f0	 RIP: 474874	 Bytes: 5
  %loadMem_474874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474874 = call %struct.Memory* @routine_jmpq_.L_4748f0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474874, i64 124, i64 5)
  store %struct.Memory* %call_474874, %struct.Memory** %MEMORY

  br label %block_.L_4748f0

  ; Code: .L_474879:	 RIP: 474879	 Bytes: 0
block_.L_474879:

  ; Code: movw -0x6c(%rbp), %ax	 RIP: 474879	 Bytes: 4
  %loadMem_474879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474879 = call %struct.Memory* @routine_movw_MINUS0x6c__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474879)
  store %struct.Memory* %call_474879, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 47487d	 Bytes: 4
  %loadMem_47487d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47487d = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47487d)
  store %struct.Memory* %call_47487d, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 474881	 Bytes: 4
  %loadMem_474881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474881 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474881)
  store %struct.Memory* %call_474881, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474885	 Bytes: 4
  %loadMem_474885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474885 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474885)
  store %struct.Memory* %call_474885, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 474889	 Bytes: 4
  %loadMem_474889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474889 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474889)
  store %struct.Memory* %call_474889, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47488d	 Bytes: 4
  %loadMem_47488d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47488d = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47488d)
  store %struct.Memory* %call_47488d, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 474891	 Bytes: 4
  %loadMem_474891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474891 = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474891)
  store %struct.Memory* %call_474891, %struct.Memory** %MEMORY

  ; Code: movswq -0x64(%rbp), %rdx	 RIP: 474895	 Bytes: 5
  %loadMem_474895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474895 = call %struct.Memory* @routine_movswq_MINUS0x64__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474895)
  store %struct.Memory* %call_474895, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47489a	 Bytes: 4
  %loadMem_47489a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47489a = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47489a)
  store %struct.Memory* %call_47489a, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 47489e	 Bytes: 3
  %loadMem_47489e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47489e = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47489e)
  store %struct.Memory* %call_47489e, %struct.Memory** %MEMORY

  ; Code: movw %ax, (%rcx)	 RIP: 4748a1	 Bytes: 3
  %loadMem_4748a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748a1 = call %struct.Memory* @routine_movw__ax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748a1)
  store %struct.Memory* %call_4748a1, %struct.Memory** %MEMORY

  ; Code: movw -0x6a(%rbp), %ax	 RIP: 4748a4	 Bytes: 4
  %loadMem_4748a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748a4 = call %struct.Memory* @routine_movw_MINUS0x6a__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748a4)
  store %struct.Memory* %call_4748a4, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 4748a8	 Bytes: 4
  %loadMem_4748a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748a8 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748a8)
  store %struct.Memory* %call_4748a8, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 4748ac	 Bytes: 4
  %loadMem_4748ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748ac = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748ac)
  store %struct.Memory* %call_4748ac, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4748b0	 Bytes: 4
  %loadMem_4748b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748b0 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748b0)
  store %struct.Memory* %call_4748b0, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 4748b4	 Bytes: 4
  %loadMem_4748b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748b4 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748b4)
  store %struct.Memory* %call_4748b4, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4748b8	 Bytes: 4
  %loadMem_4748b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748b8 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748b8)
  store %struct.Memory* %call_4748b8, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 4748bc	 Bytes: 4
  %loadMem_4748bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748bc = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748bc)
  store %struct.Memory* %call_4748bc, %struct.Memory** %MEMORY

  ; Code: movswq -0x64(%rbp), %rdx	 RIP: 4748c0	 Bytes: 5
  %loadMem_4748c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748c0 = call %struct.Memory* @routine_movswq_MINUS0x64__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748c0)
  store %struct.Memory* %call_4748c0, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4748c5	 Bytes: 4
  %loadMem_4748c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748c5 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748c5)
  store %struct.Memory* %call_4748c5, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 4748c9	 Bytes: 3
  %loadMem_4748c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748c9 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748c9)
  store %struct.Memory* %call_4748c9, %struct.Memory** %MEMORY

  ; Code: movw %ax, 0x2(%rcx)	 RIP: 4748cc	 Bytes: 4
  %loadMem_4748cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748cc = call %struct.Memory* @routine_movw__ax__0x2__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748cc)
  store %struct.Memory* %call_4748cc, %struct.Memory** %MEMORY

  ; Code: movw -0x64(%rbp), %ax	 RIP: 4748d0	 Bytes: 4
  %loadMem_4748d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748d0 = call %struct.Memory* @routine_movw_MINUS0x64__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748d0)
  store %struct.Memory* %call_4748d0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rcx	 RIP: 4748d4	 Bytes: 8
  %loadMem_4748d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748d4 = call %struct.Memory* @routine_movq_0x6cea08___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748d4)
  store %struct.Memory* %call_4748d4, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 4748dc	 Bytes: 4
  %loadMem_4748dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748dc = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748dc)
  store %struct.Memory* %call_4748dc, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 4748e0	 Bytes: 4
  %loadMem_4748e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748e0 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748e0)
  store %struct.Memory* %call_4748e0, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4748e4	 Bytes: 4
  %loadMem_4748e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748e4 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748e4)
  store %struct.Memory* %call_4748e4, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 4748e8	 Bytes: 4
  %loadMem_4748e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748e8 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748e8)
  store %struct.Memory* %call_4748e8, %struct.Memory** %MEMORY

  ; Code: movw %ax, (%rcx,%rdx,2)	 RIP: 4748ec	 Bytes: 4
  %loadMem_4748ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748ec = call %struct.Memory* @routine_movw__ax____rcx__rdx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748ec)
  store %struct.Memory* %call_4748ec, %struct.Memory** %MEMORY

  ; Code: .L_4748f0:	 RIP: 4748f0	 Bytes: 0
  br label %block_.L_4748f0
block_.L_4748f0:

  ; Code: jmpq .L_47495a	 RIP: 4748f0	 Bytes: 5
  %loadMem_4748f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748f0 = call %struct.Memory* @routine_jmpq_.L_47495a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748f0, i64 106, i64 5)
  store %struct.Memory* %call_4748f0, %struct.Memory** %MEMORY

  br label %block_.L_47495a

  ; Code: .L_4748f5:	 RIP: 4748f5	 Bytes: 0
block_.L_4748f5:

  ; Code: movq 0x6cea08, %rax	 RIP: 4748f5	 Bytes: 8
  %loadMem_4748f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748f5 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748f5)
  store %struct.Memory* %call_4748f5, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4748fd	 Bytes: 4
  %loadMem_4748fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4748fd = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4748fd)
  store %struct.Memory* %call_4748fd, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474901	 Bytes: 4
  %loadMem_474901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474901 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474901)
  store %struct.Memory* %call_474901, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474905	 Bytes: 4
  %loadMem_474905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474905 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474905)
  store %struct.Memory* %call_474905, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474909	 Bytes: 4
  %loadMem_474909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474909 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474909)
  store %struct.Memory* %call_474909, %struct.Memory** %MEMORY

  ; Code: movw $0xffff, (%rax,%rcx,2)	 RIP: 47490d	 Bytes: 6
  %loadMem_47490d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47490d = call %struct.Memory* @routine_movw__0xffff____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47490d)
  store %struct.Memory* %call_47490d, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474913	 Bytes: 4
  %loadMem_474913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474913 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474913)
  store %struct.Memory* %call_474913, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474917	 Bytes: 4
  %loadMem_474917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474917 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474917)
  store %struct.Memory* %call_474917, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47491b	 Bytes: 4
  %loadMem_47491b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47491b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47491b)
  store %struct.Memory* %call_47491b, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 47491f	 Bytes: 4
  %loadMem_47491f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47491f = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47491f)
  store %struct.Memory* %call_47491f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474923	 Bytes: 4
  %loadMem_474923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474923 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474923)
  store %struct.Memory* %call_474923, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474927	 Bytes: 4
  %loadMem_474927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474927 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474927)
  store %struct.Memory* %call_474927, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47492b	 Bytes: 3
  %loadMem_47492b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47492b = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47492b)
  store %struct.Memory* %call_47492b, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47492e	 Bytes: 3
  %loadMem_47492e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47492e = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47492e)
  store %struct.Memory* %call_47492e, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax)	 RIP: 474931	 Bytes: 5
  %loadMem_474931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474931 = call %struct.Memory* @routine_movw__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474931)
  store %struct.Memory* %call_474931, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474936	 Bytes: 4
  %loadMem_474936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474936 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474936)
  store %struct.Memory* %call_474936, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 47493a	 Bytes: 4
  %loadMem_47493a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47493a = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47493a)
  store %struct.Memory* %call_47493a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 47493e	 Bytes: 4
  %loadMem_47493e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47493e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47493e)
  store %struct.Memory* %call_47493e, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474942	 Bytes: 4
  %loadMem_474942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474942 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474942)
  store %struct.Memory* %call_474942, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474946	 Bytes: 4
  %loadMem_474946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474946 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474946)
  store %struct.Memory* %call_474946, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 47494a	 Bytes: 4
  %loadMem_47494a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47494a = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47494a)
  store %struct.Memory* %call_47494a, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47494e	 Bytes: 3
  %loadMem_47494e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47494e = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47494e)
  store %struct.Memory* %call_47494e, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474951	 Bytes: 3
  %loadMem_474951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474951 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474951)
  store %struct.Memory* %call_474951, %struct.Memory** %MEMORY

  ; Code: movw $0x0, 0x2(%rax)	 RIP: 474954	 Bytes: 6
  %loadMem_474954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474954 = call %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474954)
  store %struct.Memory* %call_474954, %struct.Memory** %MEMORY

  ; Code: .L_47495a:	 RIP: 47495a	 Bytes: 0
  br label %block_.L_47495a
block_.L_47495a:

  ; Code: movswl -0x62(%rbp), %eax	 RIP: 47495a	 Bytes: 4
  %loadMem_47495a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47495a = call %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47495a)
  store %struct.Memory* %call_47495a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 47495e	 Bytes: 3
  %loadMem_47495e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47495e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47495e)
  store %struct.Memory* %call_47495e, %struct.Memory** %MEMORY

  ; Code: jge .L_4749af	 RIP: 474961	 Bytes: 6
  %loadMem_474961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474961 = call %struct.Memory* @routine_jge_.L_4749af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474961, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_474961, %struct.Memory** %MEMORY

  %loadBr_474961 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474961 = icmp eq i8 %loadBr_474961, 1
  br i1 %cmpBr_474961, label %block_.L_4749af, label %block_474967

block_474967:
  ; Code: movswl -0x64(%rbp), %eax	 RIP: 474967	 Bytes: 4
  %loadMem_474967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474967 = call %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474967)
  store %struct.Memory* %call_474967, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 47496b	 Bytes: 3
  %loadMem_47496b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47496b = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47496b)
  store %struct.Memory* %call_47496b, %struct.Memory** %MEMORY

  ; Code: jge .L_4749af	 RIP: 47496e	 Bytes: 6
  %loadMem_47496e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47496e = call %struct.Memory* @routine_jge_.L_4749af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47496e, i8* %BRANCH_TAKEN, i64 65, i64 6, i64 6)
  store %struct.Memory* %call_47496e, %struct.Memory** %MEMORY

  %loadBr_47496e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47496e = icmp eq i8 %loadBr_47496e, 1
  br i1 %cmpBr_47496e, label %block_.L_4749af, label %block_474974

block_474974:
  ; Code: movq 0x6cea08, %rax	 RIP: 474974	 Bytes: 8
  %loadMem_474974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474974 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474974)
  store %struct.Memory* %call_474974, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 47497c	 Bytes: 4
  %loadMem_47497c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47497c = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47497c)
  store %struct.Memory* %call_47497c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474980	 Bytes: 4
  %loadMem_474980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474980 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474980)
  store %struct.Memory* %call_474980, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474984	 Bytes: 4
  %loadMem_474984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474984 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474984)
  store %struct.Memory* %call_474984, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474988	 Bytes: 4
  %loadMem_474988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474988 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474988)
  store %struct.Memory* %call_474988, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax,%rcx,2)	 RIP: 47498c	 Bytes: 6
  %loadMem_47498c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47498c = call %struct.Memory* @routine_movw__0x0____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47498c)
  store %struct.Memory* %call_47498c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rax	 RIP: 474992	 Bytes: 8
  %loadMem_474992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474992 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474992)
  store %struct.Memory* %call_474992, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 47499a	 Bytes: 3
  %loadMem_47499a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47499a = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47499a)
  store %struct.Memory* %call_47499a, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 47499d	 Bytes: 4
  %loadMem_47499d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47499d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47499d)
  store %struct.Memory* %call_47499d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4749a1	 Bytes: 4
  %loadMem_4749a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749a1 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749a1)
  store %struct.Memory* %call_4749a1, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4749a5	 Bytes: 4
  %loadMem_4749a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749a5 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749a5)
  store %struct.Memory* %call_4749a5, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax,%rcx,2)	 RIP: 4749a9	 Bytes: 6
  %loadMem_4749a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749a9 = call %struct.Memory* @routine_movw__0x0____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749a9)
  store %struct.Memory* %call_4749a9, %struct.Memory** %MEMORY

  ; Code: .L_4749af:	 RIP: 4749af	 Bytes: 0
  br label %block_.L_4749af
block_.L_4749af:

  ; Code: movq 0x6cea08, %rax	 RIP: 4749af	 Bytes: 8
  %loadMem_4749af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749af = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749af)
  store %struct.Memory* %call_4749af, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4749b7	 Bytes: 4
  %loadMem_4749b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749b7 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749b7)
  store %struct.Memory* %call_4749b7, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4749bb	 Bytes: 4
  %loadMem_4749bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749bb = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749bb)
  store %struct.Memory* %call_4749bb, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4749bf	 Bytes: 4
  %loadMem_4749bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749bf = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749bf)
  store %struct.Memory* %call_4749bf, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4749c3	 Bytes: 4
  %loadMem_4749c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749c3 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749c3)
  store %struct.Memory* %call_4749c3, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 4749c7	 Bytes: 4
  %loadMem_4749c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749c7 = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749c7)
  store %struct.Memory* %call_4749c7, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, %edx	 RIP: 4749cb	 Bytes: 3
  %loadMem_4749cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749cb = call %struct.Memory* @routine_cmpl__0xffffffff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749cb)
  store %struct.Memory* %call_4749cb, %struct.Memory** %MEMORY

  ; Code: jne .L_4749f3	 RIP: 4749ce	 Bytes: 6
  %loadMem_4749ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749ce = call %struct.Memory* @routine_jne_.L_4749f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749ce, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_4749ce, %struct.Memory** %MEMORY

  %loadBr_4749ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4749ce = icmp eq i8 %loadBr_4749ce, 1
  br i1 %cmpBr_4749ce, label %block_.L_4749f3, label %block_4749d4

block_4749d4:
  ; Code: movq 0x722cb8, %rax	 RIP: 4749d4	 Bytes: 8
  %loadMem_4749d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749d4 = call %struct.Memory* @routine_movq_0x722cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749d4)
  store %struct.Memory* %call_4749d4, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4749dc	 Bytes: 4
  %loadMem_4749dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749dc = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749dc)
  store %struct.Memory* %call_4749dc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4749e0	 Bytes: 4
  %loadMem_4749e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749e0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749e0)
  store %struct.Memory* %call_4749e0, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4749e4	 Bytes: 4
  %loadMem_4749e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749e4 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749e4)
  store %struct.Memory* %call_4749e4, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax,%rcx,2)	 RIP: 4749e8	 Bytes: 6
  %loadMem_4749e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749e8 = call %struct.Memory* @routine_movw__0x0____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749e8)
  store %struct.Memory* %call_4749e8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474a55	 RIP: 4749ee	 Bytes: 5
  %loadMem_4749ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749ee = call %struct.Memory* @routine_jmpq_.L_474a55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749ee, i64 103, i64 5)
  store %struct.Memory* %call_4749ee, %struct.Memory** %MEMORY

  br label %block_.L_474a55

  ; Code: .L_4749f3:	 RIP: 4749f3	 Bytes: 0
block_.L_4749f3:

  ; Code: movq 0x6cea08, %rax	 RIP: 4749f3	 Bytes: 8
  %loadMem_4749f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749f3 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749f3)
  store %struct.Memory* %call_4749f3, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4749fb	 Bytes: 3
  %loadMem_4749fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749fb = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749fb)
  store %struct.Memory* %call_4749fb, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4749fe	 Bytes: 4
  %loadMem_4749fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4749fe = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4749fe)
  store %struct.Memory* %call_4749fe, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474a02	 Bytes: 4
  %loadMem_474a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a02 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a02)
  store %struct.Memory* %call_474a02, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474a06	 Bytes: 4
  %loadMem_474a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a06 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a06)
  store %struct.Memory* %call_474a06, %struct.Memory** %MEMORY

  ; Code: movswl (%rax,%rcx,2), %edx	 RIP: 474a0a	 Bytes: 4
  %loadMem_474a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a0a = call %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a0a)
  store %struct.Memory* %call_474a0a, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, %edx	 RIP: 474a0e	 Bytes: 3
  %loadMem_474a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a0e = call %struct.Memory* @routine_cmpl__0xffffffff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a0e)
  store %struct.Memory* %call_474a0e, %struct.Memory** %MEMORY

  ; Code: jne .L_474a36	 RIP: 474a11	 Bytes: 6
  %loadMem_474a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a11 = call %struct.Memory* @routine_jne_.L_474a36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a11, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_474a11, %struct.Memory** %MEMORY

  %loadBr_474a11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474a11 = icmp eq i8 %loadBr_474a11, 1
  br i1 %cmpBr_474a11, label %block_.L_474a36, label %block_474a17

block_474a17:
  ; Code: movq 0x722cb8, %rax	 RIP: 474a17	 Bytes: 8
  %loadMem_474a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a17 = call %struct.Memory* @routine_movq_0x722cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a17)
  store %struct.Memory* %call_474a17, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474a1f	 Bytes: 4
  %loadMem_474a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a1f = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a1f)
  store %struct.Memory* %call_474a1f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474a23	 Bytes: 4
  %loadMem_474a23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a23 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a23)
  store %struct.Memory* %call_474a23, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474a27	 Bytes: 4
  %loadMem_474a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a27 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a27)
  store %struct.Memory* %call_474a27, %struct.Memory** %MEMORY

  ; Code: movw $0x1, (%rax,%rcx,2)	 RIP: 474a2b	 Bytes: 6
  %loadMem_474a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a2b = call %struct.Memory* @routine_movw__0x1____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a2b)
  store %struct.Memory* %call_474a2b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474a50	 RIP: 474a31	 Bytes: 5
  %loadMem_474a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a31 = call %struct.Memory* @routine_jmpq_.L_474a50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a31, i64 31, i64 5)
  store %struct.Memory* %call_474a31, %struct.Memory** %MEMORY

  br label %block_.L_474a50

  ; Code: .L_474a36:	 RIP: 474a36	 Bytes: 0
block_.L_474a36:

  ; Code: movq 0x722cb8, %rax	 RIP: 474a36	 Bytes: 8
  %loadMem_474a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a36 = call %struct.Memory* @routine_movq_0x722cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a36)
  store %struct.Memory* %call_474a36, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474a3e	 Bytes: 4
  %loadMem_474a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a3e = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a3e)
  store %struct.Memory* %call_474a3e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474a42	 Bytes: 4
  %loadMem_474a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a42 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a42)
  store %struct.Memory* %call_474a42, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474a46	 Bytes: 4
  %loadMem_474a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a46 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a46)
  store %struct.Memory* %call_474a46, %struct.Memory** %MEMORY

  ; Code: movw $0x2, (%rax,%rcx,2)	 RIP: 474a4a	 Bytes: 6
  %loadMem_474a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a4a = call %struct.Memory* @routine_movw__0x2____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a4a)
  store %struct.Memory* %call_474a4a, %struct.Memory** %MEMORY

  ; Code: .L_474a50:	 RIP: 474a50	 Bytes: 0
  br label %block_.L_474a50
block_.L_474a50:

  ; Code: jmpq .L_474a55	 RIP: 474a50	 Bytes: 5
  %loadMem_474a50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a50 = call %struct.Memory* @routine_jmpq_.L_474a55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a50, i64 5, i64 5)
  store %struct.Memory* %call_474a50, %struct.Memory** %MEMORY

  br label %block_.L_474a55

  ; Code: .L_474a55:	 RIP: 474a55	 Bytes: 0
block_.L_474a55:

  ; Code: jmpq .L_474a5a	 RIP: 474a55	 Bytes: 5
  %loadMem_474a55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a55 = call %struct.Memory* @routine_jmpq_.L_474a5a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a55, i64 5, i64 5)
  store %struct.Memory* %call_474a55, %struct.Memory** %MEMORY

  br label %block_.L_474a5a

  ; Code: .L_474a5a:	 RIP: 474a5a	 Bytes: 0
block_.L_474a5a:

  ; Code: movl -0x4(%rbp), %eax	 RIP: 474a5a	 Bytes: 3
  %loadMem_474a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a5a = call %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a5a)
  store %struct.Memory* %call_474a5a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 474a5d	 Bytes: 3
  %loadMem_474a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a5d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a5d)
  store %struct.Memory* %call_474a5d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 474a60	 Bytes: 3
  %loadMem_474a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a60 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a60)
  store %struct.Memory* %call_474a60, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47462d	 RIP: 474a63	 Bytes: 5
  %loadMem_474a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a63 = call %struct.Memory* @routine_jmpq_.L_47462d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a63, i64 -1078, i64 5)
  store %struct.Memory* %call_474a63, %struct.Memory** %MEMORY

  br label %block_.L_47462d

  ; Code: .L_474a68:	 RIP: 474a68	 Bytes: 0
block_.L_474a68:

  ; Code: jmpq .L_474a6d	 RIP: 474a68	 Bytes: 5
  %loadMem_474a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a68 = call %struct.Memory* @routine_jmpq_.L_474a6d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a68, i64 5, i64 5)
  store %struct.Memory* %call_474a68, %struct.Memory** %MEMORY

  br label %block_.L_474a6d

  ; Code: .L_474a6d:	 RIP: 474a6d	 Bytes: 0
block_.L_474a6d:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 474a6d	 Bytes: 3
  %loadMem_474a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a6d = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a6d)
  store %struct.Memory* %call_474a6d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 474a70	 Bytes: 3
  %loadMem_474a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a70 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a70)
  store %struct.Memory* %call_474a70, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 474a73	 Bytes: 3
  %loadMem_474a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a73 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a73)
  store %struct.Memory* %call_474a73, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4745ee	 RIP: 474a76	 Bytes: 5
  %loadMem_474a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a76 = call %struct.Memory* @routine_jmpq_.L_4745ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a76, i64 -1160, i64 5)
  store %struct.Memory* %call_474a76, %struct.Memory** %MEMORY

  br label %block_.L_4745ee

  ; Code: .L_474a7b:	 RIP: 474a7b	 Bytes: 0
block_.L_474a7b:

  ; Code: jmpq .L_475138	 RIP: 474a7b	 Bytes: 5
  %loadMem_474a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a7b = call %struct.Memory* @routine_jmpq_.L_475138(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a7b, i64 1725, i64 5)
  store %struct.Memory* %call_474a7b, %struct.Memory** %MEMORY

  br label %block_.L_475138

  ; Code: .L_474a80:	 RIP: 474a80	 Bytes: 0
block_.L_474a80:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 474a80	 Bytes: 7
  %loadMem_474a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a80 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a80)
  store %struct.Memory* %call_474a80, %struct.Memory** %MEMORY

  ; Code: .L_474a87:	 RIP: 474a87	 Bytes: 0
  br label %block_.L_474a87
block_.L_474a87:

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 474a87	 Bytes: 4
  %loadMem_474a87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a87 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a87)
  store %struct.Memory* %call_474a87, %struct.Memory** %MEMORY

  ; Code: jge .L_475133	 RIP: 474a8b	 Bytes: 6
  %loadMem_474a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a8b = call %struct.Memory* @routine_jge_.L_475133(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a8b, i8* %BRANCH_TAKEN, i64 1704, i64 6, i64 6)
  store %struct.Memory* %call_474a8b, %struct.Memory** %MEMORY

  %loadBr_474a8b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474a8b = icmp eq i8 %loadBr_474a8b, 1
  br i1 %cmpBr_474a8b, label %block_.L_475133, label %block_474a91

block_474a91:
  ; Code: movq 0x6cb900, %rax	 RIP: 474a91	 Bytes: 8
  %loadMem_474a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a91 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a91)
  store %struct.Memory* %call_474a91, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rax), %ecx	 RIP: 474a99	 Bytes: 6
  %loadMem_474a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a99 = call %struct.Memory* @routine_movl_0x9c__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a99)
  store %struct.Memory* %call_474a99, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 474a9f	 Bytes: 3
  %loadMem_474a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474a9f = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474a9f)
  store %struct.Memory* %call_474a9f, %struct.Memory** %MEMORY

  ; Code: addl -0x8(%rbp), %ecx	 RIP: 474aa2	 Bytes: 3
  %loadMem_474aa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474aa2 = call %struct.Memory* @routine_addl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474aa2)
  store %struct.Memory* %call_474aa2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x10(%rbp)	 RIP: 474aa5	 Bytes: 3
  %loadMem_474aa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474aa5 = call %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474aa5)
  store %struct.Memory* %call_474aa5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 474aa8	 Bytes: 8
  %loadMem_474aa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474aa8 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474aa8)
  store %struct.Memory* %call_474aa8, %struct.Memory** %MEMORY

  ; Code: movl 0xac(%rax), %ecx	 RIP: 474ab0	 Bytes: 6
  %loadMem_474ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ab0 = call %struct.Memory* @routine_movl_0xac__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ab0)
  store %struct.Memory* %call_474ab0, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 474ab6	 Bytes: 3
  %loadMem_474ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ab6 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ab6)
  store %struct.Memory* %call_474ab6, %struct.Memory** %MEMORY

  ; Code: addl -0x8(%rbp), %ecx	 RIP: 474ab9	 Bytes: 3
  %loadMem_474ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ab9 = call %struct.Memory* @routine_addl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ab9)
  store %struct.Memory* %call_474ab9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 474abc	 Bytes: 3
  %loadMem_474abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474abc = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474abc)
  store %struct.Memory* %call_474abc, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4(%rbp)	 RIP: 474abf	 Bytes: 7
  %loadMem_474abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474abf = call %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474abf)
  store %struct.Memory* %call_474abf, %struct.Memory** %MEMORY

  ; Code: .L_474ac6:	 RIP: 474ac6	 Bytes: 0
  br label %block_.L_474ac6
block_.L_474ac6:

  ; Code: cmpl $0x4, -0x4(%rbp)	 RIP: 474ac6	 Bytes: 4
  %loadMem_474ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ac6 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ac6)
  store %struct.Memory* %call_474ac6, %struct.Memory** %MEMORY

  ; Code: jge .L_475120	 RIP: 474aca	 Bytes: 6
  %loadMem_474aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474aca = call %struct.Memory* @routine_jge_.L_475120(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474aca, i8* %BRANCH_TAKEN, i64 1622, i64 6, i64 6)
  store %struct.Memory* %call_474aca, %struct.Memory** %MEMORY

  %loadBr_474aca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474aca = icmp eq i8 %loadBr_474aca, 1
  br i1 %cmpBr_474aca, label %block_.L_475120, label %block_474ad0

block_474ad0:
  ; Code: movq 0x6cb900, %rax	 RIP: 474ad0	 Bytes: 8
  %loadMem_474ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ad0 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ad0)
  store %struct.Memory* %call_474ad0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11ad0(%rax)	 RIP: 474ad8	 Bytes: 7
  %loadMem_474ad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ad8 = call %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ad8)
  store %struct.Memory* %call_474ad8, %struct.Memory** %MEMORY

  ; Code: je .L_474b2d	 RIP: 474adf	 Bytes: 6
  %loadMem_474adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474adf = call %struct.Memory* @routine_je_.L_474b2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474adf, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_474adf, %struct.Memory** %MEMORY

  %loadBr_474adf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474adf = icmp eq i8 %loadBr_474adf, 1
  br i1 %cmpBr_474adf, label %block_.L_474b2d, label %block_474ae5

block_474ae5:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 474ae5	 Bytes: 4
  %loadMem_474ae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ae5 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ae5)
  store %struct.Memory* %call_474ae5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x214(%rax)	 RIP: 474ae9	 Bytes: 7
  %loadMem_474ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ae9 = call %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ae9)
  store %struct.Memory* %call_474ae9, %struct.Memory** %MEMORY

  ; Code: je .L_474b2d	 RIP: 474af0	 Bytes: 6
  %loadMem_474af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474af0 = call %struct.Memory* @routine_je_.L_474b2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474af0, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_474af0, %struct.Memory** %MEMORY

  %loadBr_474af0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474af0 = icmp eq i8 %loadBr_474af0, 1
  br i1 %cmpBr_474af0, label %block_.L_474b2d, label %block_474af6

block_474af6:
  ; Code: movl $0x2, %eax	 RIP: 474af6	 Bytes: 5
  %loadMem_474af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474af6 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474af6)
  store %struct.Memory* %call_474af6, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %ecx	 RIP: 474afb	 Bytes: 5
  %loadMem_474afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474afb = call %struct.Memory* @routine_movl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474afb)
  store %struct.Memory* %call_474afb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 474b00	 Bytes: 8
  %loadMem_474b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b00 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b00)
  store %struct.Memory* %call_474b00, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rdx), %esi	 RIP: 474b08	 Bytes: 3
  %loadMem_474b08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b08 = call %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b08)
  store %struct.Memory* %call_474b08, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e8(%rbp)	 RIP: 474b0b	 Bytes: 6
  %loadMem_474b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b0b = call %struct.Memory* @routine_movl__eax__MINUS0x1e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b0b)
  store %struct.Memory* %call_474b0b, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 474b11	 Bytes: 2
  %loadMem_474b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b11 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b11)
  store %struct.Memory* %call_474b11, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 474b13	 Bytes: 1
  %loadMem_474b13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b13 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b13)
  store %struct.Memory* %call_474b13, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 474b14	 Bytes: 6
  %loadMem_474b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b14 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b14)
  store %struct.Memory* %call_474b14, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 474b1a	 Bytes: 2
  %loadMem_474b1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b1a = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b1a)
  store %struct.Memory* %call_474b1a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 474b1c	 Bytes: 3
  %loadMem_474b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b1c = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b1c)
  store %struct.Memory* %call_474b1c, %struct.Memory** %MEMORY

  ; Code: cmovnel %ecx, %esi	 RIP: 474b1f	 Bytes: 3
  %loadMem_474b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b1f = call %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b1f)
  store %struct.Memory* %call_474b1f, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x1ec(%rbp)	 RIP: 474b22	 Bytes: 6
  %loadMem_474b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b22 = call %struct.Memory* @routine_movl__esi__MINUS0x1ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b22)
  store %struct.Memory* %call_474b22, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474b3a	 RIP: 474b28	 Bytes: 5
  %loadMem_474b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b28 = call %struct.Memory* @routine_jmpq_.L_474b3a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b28, i64 18, i64 5)
  store %struct.Memory* %call_474b28, %struct.Memory** %MEMORY

  br label %block_.L_474b3a

  ; Code: .L_474b2d:	 RIP: 474b2d	 Bytes: 0
block_.L_474b2d:

  ; Code: xorl %eax, %eax	 RIP: 474b2d	 Bytes: 2
  %loadMem_474b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b2d = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b2d)
  store %struct.Memory* %call_474b2d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1ec(%rbp)	 RIP: 474b2f	 Bytes: 6
  %loadMem_474b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b2f = call %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b2f)
  store %struct.Memory* %call_474b2f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474b3a	 RIP: 474b35	 Bytes: 5
  %loadMem_474b35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b35 = call %struct.Memory* @routine_jmpq_.L_474b3a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b35, i64 5, i64 5)
  store %struct.Memory* %call_474b35, %struct.Memory** %MEMORY

  br label %block_.L_474b3a

  ; Code: .L_474b3a:	 RIP: 474b3a	 Bytes: 0
block_.L_474b3a:

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 474b3a	 Bytes: 6
  %loadMem_474b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b3a = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b3a)
  store %struct.Memory* %call_474b3a, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 474b40	 Bytes: 2
  %loadMem_474b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b40 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b40)
  store %struct.Memory* %call_474b40, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 474b42	 Bytes: 5
  %loadMem_474b42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b42 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b42)
  store %struct.Memory* %call_474b42, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xdc(%rbp)	 RIP: 474b47	 Bytes: 6
  %loadMem_474b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b47 = call %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b47)
  store %struct.Memory* %call_474b47, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 474b4d	 Bytes: 8
  %loadMem_474b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b4d = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b4d)
  store %struct.Memory* %call_474b4d, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rsi), %eax	 RIP: 474b55	 Bytes: 6
  %loadMem_474b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b55 = call %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b55)
  store %struct.Memory* %call_474b55, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 474b5b	 Bytes: 3
  %loadMem_474b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b5b = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b5b)
  store %struct.Memory* %call_474b5b, %struct.Memory** %MEMORY

  ; Code: addl -0x4(%rbp), %eax	 RIP: 474b5e	 Bytes: 3
  %loadMem_474b5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b5e = call %struct.Memory* @routine_addl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b5e)
  store %struct.Memory* %call_474b5e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 474b61	 Bytes: 3
  %loadMem_474b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b61 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b61)
  store %struct.Memory* %call_474b61, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 474b64	 Bytes: 8
  %loadMem_474b64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b64 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b64)
  store %struct.Memory* %call_474b64, %struct.Memory** %MEMORY

  ; Code: movl 0xa8(%rsi), %eax	 RIP: 474b6c	 Bytes: 6
  %loadMem_474b6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b6c = call %struct.Memory* @routine_movl_0xa8__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b6c)
  store %struct.Memory* %call_474b6c, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 474b72	 Bytes: 3
  %loadMem_474b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b72 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b72)
  store %struct.Memory* %call_474b72, %struct.Memory** %MEMORY

  ; Code: addl -0x4(%rbp), %eax	 RIP: 474b75	 Bytes: 3
  %loadMem_474b75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b75 = call %struct.Memory* @routine_addl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b75)
  store %struct.Memory* %call_474b75, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 474b78	 Bytes: 3
  %loadMem_474b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b78 = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b78)
  store %struct.Memory* %call_474b78, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rsi	 RIP: 474b7b	 Bytes: 4
  %loadMem_474b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b7b = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b7b)
  store %struct.Memory* %call_474b7b, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 474b7f	 Bytes: 3
  %loadMem_474b7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b7f = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b7f)
  store %struct.Memory* %call_474b7f, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdi	 RIP: 474b82	 Bytes: 4
  %loadMem_474b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b82 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b82)
  store %struct.Memory* %call_474b82, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 474b86	 Bytes: 4
  %loadMem_474b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b86 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b86)
  store %struct.Memory* %call_474b86, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdi	 RIP: 474b8a	 Bytes: 4
  %loadMem_474b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b8a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b8a)
  store %struct.Memory* %call_474b8a, %struct.Memory** %MEMORY

  ; Code: movswl (%rsi,%rdi,2), %eax	 RIP: 474b8e	 Bytes: 4
  %loadMem_474b8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b8e = call %struct.Memory* @routine_movswl___rsi__rdi_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b8e)
  store %struct.Memory* %call_474b8e, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, %eax	 RIP: 474b92	 Bytes: 3
  %loadMem_474b92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b92 = call %struct.Memory* @routine_cmpl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b92)
  store %struct.Memory* %call_474b92, %struct.Memory** %MEMORY

  ; Code: cmovel %edx, %ecx	 RIP: 474b95	 Bytes: 3
  %loadMem_474b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b95 = call %struct.Memory* @routine_cmovel__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b95)
  store %struct.Memory* %call_474b95, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xd4(%rbp)	 RIP: 474b98	 Bytes: 6
  %loadMem_474b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b98 = call %struct.Memory* @routine_movl__ecx__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b98)
  store %struct.Memory* %call_474b98, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rsi	 RIP: 474b9e	 Bytes: 4
  %loadMem_474b9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474b9e = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474b9e)
  store %struct.Memory* %call_474b9e, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rdi	 RIP: 474ba2	 Bytes: 7
  %loadMem_474ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ba2 = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ba2)
  store %struct.Memory* %call_474ba2, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 474ba9	 Bytes: 4
  %loadMem_474ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ba9 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ba9)
  store %struct.Memory* %call_474ba9, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdi	 RIP: 474bad	 Bytes: 4
  %loadMem_474bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bad = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bad)
  store %struct.Memory* %call_474bad, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 474bb1	 Bytes: 4
  %loadMem_474bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bb1 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bb1)
  store %struct.Memory* %call_474bb1, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdi	 RIP: 474bb5	 Bytes: 4
  %loadMem_474bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bb5 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bb5)
  store %struct.Memory* %call_474bb5, %struct.Memory** %MEMORY

  ; Code: movswl (%rsi,%rdi,2), %eax	 RIP: 474bb9	 Bytes: 4
  %loadMem_474bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bb9 = call %struct.Memory* @routine_movswl___rsi__rdi_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bb9)
  store %struct.Memory* %call_474bb9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd8(%rbp)	 RIP: 474bbd	 Bytes: 6
  %loadMem_474bbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bbd = call %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bbd)
  store %struct.Memory* %call_474bbd, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, -0xd8(%rbp)	 RIP: 474bc3	 Bytes: 7
  %loadMem_474bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bc3 = call %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bc3)
  store %struct.Memory* %call_474bc3, %struct.Memory** %MEMORY

  ; Code: jne .L_474cb6	 RIP: 474bca	 Bytes: 6
  %loadMem_474bca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bca = call %struct.Memory* @routine_jne_.L_474cb6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bca, i8* %BRANCH_TAKEN, i64 236, i64 6, i64 6)
  store %struct.Memory* %call_474bca, %struct.Memory** %MEMORY

  %loadBr_474bca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474bca = icmp eq i8 %loadBr_474bca, 1
  br i1 %cmpBr_474bca, label %block_.L_474cb6, label %block_474bd0

block_474bd0:
  ; Code: movq -0x20(%rbp), %rax	 RIP: 474bd0	 Bytes: 4
  %loadMem_474bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bd0 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bd0)
  store %struct.Memory* %call_474bd0, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474bd4	 Bytes: 4
  %loadMem_474bd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bd4 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bd4)
  store %struct.Memory* %call_474bd4, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474bd8	 Bytes: 4
  %loadMem_474bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bd8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bd8)
  store %struct.Memory* %call_474bd8, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474bdc	 Bytes: 4
  %loadMem_474bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bdc = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bdc)
  store %struct.Memory* %call_474bdc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474be0	 Bytes: 4
  %loadMem_474be0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474be0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474be0)
  store %struct.Memory* %call_474be0, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474be4	 Bytes: 3
  %loadMem_474be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474be4 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474be4)
  store %struct.Memory* %call_474be4, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474be7	 Bytes: 3
  %loadMem_474be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474be7 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474be7)
  store %struct.Memory* %call_474be7, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474bea	 Bytes: 3
  %loadMem_474bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bea = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bea)
  store %struct.Memory* %call_474bea, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax)	 RIP: 474bed	 Bytes: 5
  %loadMem_474bed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bed = call %struct.Memory* @routine_movw__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bed)
  store %struct.Memory* %call_474bed, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474bf2	 Bytes: 4
  %loadMem_474bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bf2 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bf2)
  store %struct.Memory* %call_474bf2, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474bf6	 Bytes: 4
  %loadMem_474bf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bf6 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bf6)
  store %struct.Memory* %call_474bf6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474bfa	 Bytes: 4
  %loadMem_474bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bfa = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bfa)
  store %struct.Memory* %call_474bfa, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474bfe	 Bytes: 4
  %loadMem_474bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474bfe = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474bfe)
  store %struct.Memory* %call_474bfe, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474c02	 Bytes: 4
  %loadMem_474c02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c02 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c02)
  store %struct.Memory* %call_474c02, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c06	 Bytes: 3
  %loadMem_474c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c06 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c06)
  store %struct.Memory* %call_474c06, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c09	 Bytes: 3
  %loadMem_474c09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c09 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c09)
  store %struct.Memory* %call_474c09, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c0c	 Bytes: 3
  %loadMem_474c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c0c = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c0c)
  store %struct.Memory* %call_474c0c, %struct.Memory** %MEMORY

  ; Code: movw $0x0, 0x2(%rax)	 RIP: 474c0f	 Bytes: 6
  %loadMem_474c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c0f = call %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c0f)
  store %struct.Memory* %call_474c0f, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474c15	 Bytes: 4
  %loadMem_474c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c15 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c15)
  store %struct.Memory* %call_474c15, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474c19	 Bytes: 4
  %loadMem_474c19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c19 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c19)
  store %struct.Memory* %call_474c19, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474c1d	 Bytes: 4
  %loadMem_474c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c1d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c1d)
  store %struct.Memory* %call_474c1d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474c21	 Bytes: 4
  %loadMem_474c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c21 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c21)
  store %struct.Memory* %call_474c21, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474c25	 Bytes: 4
  %loadMem_474c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c25 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c25)
  store %struct.Memory* %call_474c25, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474c29	 Bytes: 4
  %loadMem_474c29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c29 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c29)
  store %struct.Memory* %call_474c29, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c2d	 Bytes: 3
  %loadMem_474c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c2d = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c2d)
  store %struct.Memory* %call_474c2d, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c30	 Bytes: 3
  %loadMem_474c30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c30 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c30)
  store %struct.Memory* %call_474c30, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax)	 RIP: 474c33	 Bytes: 5
  %loadMem_474c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c33 = call %struct.Memory* @routine_movw__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c33)
  store %struct.Memory* %call_474c33, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474c38	 Bytes: 4
  %loadMem_474c38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c38 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c38)
  store %struct.Memory* %call_474c38, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474c3c	 Bytes: 4
  %loadMem_474c3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c3c = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c3c)
  store %struct.Memory* %call_474c3c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474c40	 Bytes: 4
  %loadMem_474c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c40 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c40)
  store %struct.Memory* %call_474c40, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474c44	 Bytes: 4
  %loadMem_474c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c44 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c44)
  store %struct.Memory* %call_474c44, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474c48	 Bytes: 4
  %loadMem_474c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c48 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c48)
  store %struct.Memory* %call_474c48, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474c4c	 Bytes: 4
  %loadMem_474c4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c4c = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c4c)
  store %struct.Memory* %call_474c4c, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c50	 Bytes: 3
  %loadMem_474c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c50 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c50)
  store %struct.Memory* %call_474c50, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c53	 Bytes: 3
  %loadMem_474c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c53 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c53)
  store %struct.Memory* %call_474c53, %struct.Memory** %MEMORY

  ; Code: movw $0x0, 0x2(%rax)	 RIP: 474c56	 Bytes: 6
  %loadMem_474c56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c56 = call %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c56)
  store %struct.Memory* %call_474c56, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rax	 RIP: 474c5c	 Bytes: 8
  %loadMem_474c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c5c = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c5c)
  store %struct.Memory* %call_474c5c, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474c64	 Bytes: 3
  %loadMem_474c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c64 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c64)
  store %struct.Memory* %call_474c64, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474c67	 Bytes: 4
  %loadMem_474c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c67 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c67)
  store %struct.Memory* %call_474c67, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474c6b	 Bytes: 4
  %loadMem_474c6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c6b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c6b)
  store %struct.Memory* %call_474c6b, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474c6f	 Bytes: 4
  %loadMem_474c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c6f = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c6f)
  store %struct.Memory* %call_474c6f, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax,%rcx,2)	 RIP: 474c73	 Bytes: 6
  %loadMem_474c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c73 = call %struct.Memory* @routine_movw__0x0____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c73)
  store %struct.Memory* %call_474c73, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rax	 RIP: 474c79	 Bytes: 8
  %loadMem_474c79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c79 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c79)
  store %struct.Memory* %call_474c79, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474c81	 Bytes: 4
  %loadMem_474c81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c81 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c81)
  store %struct.Memory* %call_474c81, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474c85	 Bytes: 4
  %loadMem_474c85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c85 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c85)
  store %struct.Memory* %call_474c85, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474c89	 Bytes: 4
  %loadMem_474c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c89 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c89)
  store %struct.Memory* %call_474c89, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474c8d	 Bytes: 4
  %loadMem_474c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c8d = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c8d)
  store %struct.Memory* %call_474c8d, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax,%rcx,2)	 RIP: 474c91	 Bytes: 6
  %loadMem_474c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c91 = call %struct.Memory* @routine_movw__0x0____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c91)
  store %struct.Memory* %call_474c91, %struct.Memory** %MEMORY

  ; Code: movq 0x722cb8, %rax	 RIP: 474c97	 Bytes: 8
  %loadMem_474c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c97 = call %struct.Memory* @routine_movq_0x722cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c97)
  store %struct.Memory* %call_474c97, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 474c9f	 Bytes: 4
  %loadMem_474c9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474c9f = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474c9f)
  store %struct.Memory* %call_474c9f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474ca3	 Bytes: 4
  %loadMem_474ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ca3 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ca3)
  store %struct.Memory* %call_474ca3, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 474ca7	 Bytes: 4
  %loadMem_474ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ca7 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ca7)
  store %struct.Memory* %call_474ca7, %struct.Memory** %MEMORY

  ; Code: movw $0x2, (%rax,%rcx,2)	 RIP: 474cab	 Bytes: 6
  %loadMem_474cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cab = call %struct.Memory* @routine_movw__0x2____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cab)
  store %struct.Memory* %call_474cab, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47510d	 RIP: 474cb1	 Bytes: 5
  %loadMem_474cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cb1 = call %struct.Memory* @routine_jmpq_.L_47510d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cb1, i64 1116, i64 5)
  store %struct.Memory* %call_474cb1, %struct.Memory** %MEMORY

  br label %block_.L_47510d

  ; Code: .L_474cb6:	 RIP: 474cb6	 Bytes: 0
block_.L_474cb6:

  ; Code: movl $0xf7e7f8ac, -0xe0(%rbp)	 RIP: 474cb6	 Bytes: 10
  %loadMem_474cb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cb6 = call %struct.Memory* @routine_movl__0xf7e7f8ac__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cb6)
  store %struct.Memory* %call_474cb6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xe4(%rbp)	 RIP: 474cc0	 Bytes: 10
  %loadMem_474cc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cc0 = call %struct.Memory* @routine_movl__0x0__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cc0)
  store %struct.Memory* %call_474cc0, %struct.Memory** %MEMORY

  ; Code: .L_474cca:	 RIP: 474cca	 Bytes: 0
  br label %block_.L_474cca
block_.L_474cca:

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 474cca	 Bytes: 6
  %loadMem_474cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cca = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cca)
  store %struct.Memory* %call_474cca, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 474cd0	 Bytes: 8
  %loadMem_474cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cd0 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cd0)
  store %struct.Memory* %call_474cd0, %struct.Memory** %MEMORY

  ; Code: movl 0x11940(%rcx), %edx	 RIP: 474cd8	 Bytes: 6
  %loadMem_474cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cd8 = call %struct.Memory* @routine_movl_0x11940__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cd8)
  store %struct.Memory* %call_474cd8, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 474cde	 Bytes: 6
  %loadMem_474cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cde = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cde)
  store %struct.Memory* %call_474cde, %struct.Memory** %MEMORY

  ; Code: addl $0x0, %esi	 RIP: 474ce4	 Bytes: 3
  %loadMem_474ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ce4 = call %struct.Memory* @routine_addl__0x0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ce4)
  store %struct.Memory* %call_474ce4, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 474ce7	 Bytes: 3
  %loadMem_474ce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ce7 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ce7)
  store %struct.Memory* %call_474ce7, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7247b0(,%rcx,4), %edx	 RIP: 474cea	 Bytes: 7
  %loadMem_474cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cea = call %struct.Memory* @routine_cmpl_0x7247b0___rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cea)
  store %struct.Memory* %call_474cea, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f0(%rbp)	 RIP: 474cf1	 Bytes: 6
  %loadMem_474cf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cf1 = call %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cf1)
  store %struct.Memory* %call_474cf1, %struct.Memory** %MEMORY

  ; Code: jge .L_474d16	 RIP: 474cf7	 Bytes: 6
  %loadMem_474cf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cf7 = call %struct.Memory* @routine_jge_.L_474d16(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cf7, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_474cf7, %struct.Memory** %MEMORY

  %loadBr_474cf7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474cf7 = icmp eq i8 %loadBr_474cf7, 1
  br i1 %cmpBr_474cf7, label %block_.L_474d16, label %block_474cfd

block_474cfd:
  ; Code: movq 0x6cb900, %rax	 RIP: 474cfd	 Bytes: 8
  %loadMem_474cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474cfd = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474cfd)
  store %struct.Memory* %call_474cfd, %struct.Memory** %MEMORY

  ; Code: movl 0x11940(%rax), %ecx	 RIP: 474d05	 Bytes: 6
  %loadMem_474d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d05 = call %struct.Memory* @routine_movl_0x11940__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d05)
  store %struct.Memory* %call_474d05, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1f4(%rbp)	 RIP: 474d0b	 Bytes: 6
  %loadMem_474d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d0b = call %struct.Memory* @routine_movl__ecx__MINUS0x1f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d0b)
  store %struct.Memory* %call_474d0b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474d2f	 RIP: 474d11	 Bytes: 5
  %loadMem_474d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d11 = call %struct.Memory* @routine_jmpq_.L_474d2f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d11, i64 30, i64 5)
  store %struct.Memory* %call_474d11, %struct.Memory** %MEMORY

  br label %block_.L_474d2f

  ; Code: .L_474d16:	 RIP: 474d16	 Bytes: 0
block_.L_474d16:

  ; Code: movl -0xdc(%rbp), %eax	 RIP: 474d16	 Bytes: 6
  %loadMem_474d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d16 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d16)
  store %struct.Memory* %call_474d16, %struct.Memory** %MEMORY

  ; Code: addl $0x0, %eax	 RIP: 474d1c	 Bytes: 3
  %loadMem_474d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d1c = call %struct.Memory* @routine_addl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d1c)
  store %struct.Memory* %call_474d1c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 474d1f	 Bytes: 3
  %loadMem_474d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d1f = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d1f)
  store %struct.Memory* %call_474d1f, %struct.Memory** %MEMORY

  ; Code: movl 0x7247b0(,%rcx,4), %eax	 RIP: 474d22	 Bytes: 7
  %loadMem_474d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d22 = call %struct.Memory* @routine_movl_0x7247b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d22)
  store %struct.Memory* %call_474d22, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f4(%rbp)	 RIP: 474d29	 Bytes: 6
  %loadMem_474d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d29 = call %struct.Memory* @routine_movl__eax__MINUS0x1f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d29)
  store %struct.Memory* %call_474d29, %struct.Memory** %MEMORY

  ; Code: .L_474d2f:	 RIP: 474d2f	 Bytes: 0
  br label %block_.L_474d2f
block_.L_474d2f:

  ; Code: movl -0x1f4(%rbp), %eax	 RIP: 474d2f	 Bytes: 6
  %loadMem_474d2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d2f = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d2f)
  store %struct.Memory* %call_474d2f, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %ecx	 RIP: 474d35	 Bytes: 6
  %loadMem_474d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d35 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d35)
  store %struct.Memory* %call_474d35, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 474d3b	 Bytes: 2
  %loadMem_474d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d3b = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d3b)
  store %struct.Memory* %call_474d3b, %struct.Memory** %MEMORY

  ; Code: jge .L_474dc9	 RIP: 474d3d	 Bytes: 6
  %loadMem_474d3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d3d = call %struct.Memory* @routine_jge_.L_474dc9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d3d, i8* %BRANCH_TAKEN, i64 140, i64 6, i64 6)
  store %struct.Memory* %call_474d3d, %struct.Memory** %MEMORY

  %loadBr_474d3d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474d3d = icmp eq i8 %loadBr_474d3d, 1
  br i1 %cmpBr_474d3d, label %block_.L_474dc9, label %block_474d43

block_474d43:
  ; Code: movq 0x70fcf0, %rax	 RIP: 474d43	 Bytes: 8
  %loadMem_474d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d43 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d43)
  store %struct.Memory* %call_474d43, %struct.Memory** %MEMORY

  ; Code: addq $0x18, %rax	 RIP: 474d4b	 Bytes: 4
  %loadMem_474d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d4b = call %struct.Memory* @routine_addq__0x18___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d4b)
  store %struct.Memory* %call_474d4b, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %ecx	 RIP: 474d4f	 Bytes: 6
  %loadMem_474d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d4f = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d4f)
  store %struct.Memory* %call_474d4f, %struct.Memory** %MEMORY

  ; Code: addl $0x0, %ecx	 RIP: 474d55	 Bytes: 3
  %loadMem_474d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d55 = call %struct.Memory* @routine_addl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d55)
  store %struct.Memory* %call_474d55, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 474d58	 Bytes: 3
  %loadMem_474d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d58 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d58)
  store %struct.Memory* %call_474d58, %struct.Memory** %MEMORY

  ; Code: imulq $0x108, %rdx, %rdx	 RIP: 474d5b	 Bytes: 7
  %loadMem_474d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d5b = call %struct.Memory* @routine_imulq__0x108___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d5b)
  store %struct.Memory* %call_474d5b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 474d62	 Bytes: 3
  %loadMem_474d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d62 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d62)
  store %struct.Memory* %call_474d62, %struct.Memory** %MEMORY

  ; Code: movslq -0xe4(%rbp), %rdx	 RIP: 474d65	 Bytes: 7
  %loadMem_474d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d65 = call %struct.Memory* @routine_movslq_MINUS0xe4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d65)
  store %struct.Memory* %call_474d65, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 474d6c	 Bytes: 4
  %loadMem_474d6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d6c = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d6c)
  store %struct.Memory* %call_474d6c, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rdx	 RIP: 474d70	 Bytes: 4
  %loadMem_474d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d70 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d70)
  store %struct.Memory* %call_474d70, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rsi	 RIP: 474d74	 Bytes: 7
  %loadMem_474d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d74 = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d74)
  store %struct.Memory* %call_474d74, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 474d7b	 Bytes: 4
  %loadMem_474d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d7b = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d7b)
  store %struct.Memory* %call_474d7b, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rsi	 RIP: 474d7f	 Bytes: 4
  %loadMem_474d7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d7f = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d7f)
  store %struct.Memory* %call_474d7f, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 474d83	 Bytes: 4
  %loadMem_474d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d83 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d83)
  store %struct.Memory* %call_474d83, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 474d87	 Bytes: 4
  %loadMem_474d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d87 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d87)
  store %struct.Memory* %call_474d87, %struct.Memory** %MEMORY

  ; Code: cmpq (%rdx,%rsi,8), %rax	 RIP: 474d8b	 Bytes: 4
  %loadMem_474d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d8b = call %struct.Memory* @routine_cmpq___rdx__rsi_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d8b)
  store %struct.Memory* %call_474d8b, %struct.Memory** %MEMORY

  ; Code: jne .L_474da6	 RIP: 474d8f	 Bytes: 6
  %loadMem_474d8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d8f = call %struct.Memory* @routine_jne_.L_474da6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d8f, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_474d8f, %struct.Memory** %MEMORY

  %loadBr_474d8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474d8f = icmp eq i8 %loadBr_474d8f, 1
  br i1 %cmpBr_474d8f, label %block_.L_474da6, label %block_474d95

block_474d95:
  ; Code: movl -0xe4(%rbp), %eax	 RIP: 474d95	 Bytes: 6
  %loadMem_474d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d95 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d95)
  store %struct.Memory* %call_474d95, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe0(%rbp)	 RIP: 474d9b	 Bytes: 6
  %loadMem_474d9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474d9b = call %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474d9b)
  store %struct.Memory* %call_474d9b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474dc9	 RIP: 474da1	 Bytes: 5
  %loadMem_474da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474da1 = call %struct.Memory* @routine_jmpq_.L_474dc9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474da1, i64 40, i64 5)
  store %struct.Memory* %call_474da1, %struct.Memory** %MEMORY

  br label %block_.L_474dc9

  ; Code: .L_474da6:	 RIP: 474da6	 Bytes: 0
block_.L_474da6:

  ; Code: movl $0xf7e7f8ac, -0xe0(%rbp)	 RIP: 474da6	 Bytes: 10
  %loadMem_474da6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474da6 = call %struct.Memory* @routine_movl__0xf7e7f8ac__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474da6)
  store %struct.Memory* %call_474da6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474db5	 RIP: 474db0	 Bytes: 5
  %loadMem_474db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474db0 = call %struct.Memory* @routine_jmpq_.L_474db5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474db0, i64 5, i64 5)
  store %struct.Memory* %call_474db0, %struct.Memory** %MEMORY

  br label %block_.L_474db5

  ; Code: .L_474db5:	 RIP: 474db5	 Bytes: 0
block_.L_474db5:

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 474db5	 Bytes: 6
  %loadMem_474db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474db5 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474db5)
  store %struct.Memory* %call_474db5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 474dbb	 Bytes: 3
  %loadMem_474dbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474dbb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474dbb)
  store %struct.Memory* %call_474dbb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe4(%rbp)	 RIP: 474dbe	 Bytes: 6
  %loadMem_474dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474dbe = call %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474dbe)
  store %struct.Memory* %call_474dbe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474cca	 RIP: 474dc4	 Bytes: 5
  %loadMem_474dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474dc4 = call %struct.Memory* @routine_jmpq_.L_474cca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474dc4, i64 -250, i64 5)
  store %struct.Memory* %call_474dc4, %struct.Memory** %MEMORY

  br label %block_.L_474cca

  ; Code: .L_474dc9:	 RIP: 474dc9	 Bytes: 0
block_.L_474dc9:

  ; Code: cmpl $0xf7e7f8ac, -0xe0(%rbp)	 RIP: 474dc9	 Bytes: 10
  %loadMem_474dc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474dc9 = call %struct.Memory* @routine_cmpl__0xf7e7f8ac__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474dc9)
  store %struct.Memory* %call_474dc9, %struct.Memory** %MEMORY

  ; Code: je .L_4750b3	 RIP: 474dd3	 Bytes: 6
  %loadMem_474dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474dd3 = call %struct.Memory* @routine_je_.L_4750b3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474dd3, i8* %BRANCH_TAKEN, i64 736, i64 6, i64 6)
  store %struct.Memory* %call_474dd3, %struct.Memory** %MEMORY

  %loadBr_474dd3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474dd3 = icmp eq i8 %loadBr_474dd3, 1
  br i1 %cmpBr_474dd3, label %block_.L_4750b3, label %block_474dd9

block_474dd9:
  ; Code: movq 0x6cb900, %rax	 RIP: 474dd9	 Bytes: 8
  %loadMem_474dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474dd9 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474dd9)
  store %struct.Memory* %call_474dd9, %struct.Memory** %MEMORY

  ; Code: addq $0x11950, %rax	 RIP: 474de1	 Bytes: 6
  %loadMem_474de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474de1 = call %struct.Memory* @routine_addq__0x11950___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474de1)
  store %struct.Memory* %call_474de1, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %ecx	 RIP: 474de7	 Bytes: 6
  %loadMem_474de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474de7 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474de7)
  store %struct.Memory* %call_474de7, %struct.Memory** %MEMORY

  ; Code: addl $0x0, %ecx	 RIP: 474ded	 Bytes: 3
  %loadMem_474ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ded = call %struct.Memory* @routine_addl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ded)
  store %struct.Memory* %call_474ded, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 474df0	 Bytes: 3
  %loadMem_474df0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474df0 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474df0)
  store %struct.Memory* %call_474df0, %struct.Memory** %MEMORY

  ; Code: imulq $0x3c, %rdx, %rdx	 RIP: 474df3	 Bytes: 4
  %loadMem_474df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474df3 = call %struct.Memory* @routine_imulq__0x3c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474df3)
  store %struct.Memory* %call_474df3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 474df7	 Bytes: 3
  %loadMem_474df7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474df7 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474df7)
  store %struct.Memory* %call_474df7, %struct.Memory** %MEMORY

  ; Code: movslq -0xe0(%rbp), %rdx	 RIP: 474dfa	 Bytes: 7
  %loadMem_474dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474dfa = call %struct.Memory* @routine_movslq_MINUS0xe0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474dfa)
  store %struct.Memory* %call_474dfa, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %ecx	 RIP: 474e01	 Bytes: 3
  %loadMem_474e01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e01 = call %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e01)
  store %struct.Memory* %call_474e01, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x24(%rbp)	 RIP: 474e04	 Bytes: 3
  %loadMem_474e04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e04 = call %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e04)
  store %struct.Memory* %call_474e04, %struct.Memory** %MEMORY

  ; Code: cmpl $0x270f, -0x24(%rbp)	 RIP: 474e07	 Bytes: 7
  %loadMem_474e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e07 = call %struct.Memory* @routine_cmpl__0x270f__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e07)
  store %struct.Memory* %call_474e07, %struct.Memory** %MEMORY

  ; Code: jne .L_474ee6	 RIP: 474e0e	 Bytes: 6
  %loadMem_474e0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e0e = call %struct.Memory* @routine_jne_.L_474ee6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e0e, i8* %BRANCH_TAKEN, i64 216, i64 6, i64 6)
  store %struct.Memory* %call_474e0e, %struct.Memory** %MEMORY

  %loadBr_474e0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_474e0e = icmp eq i8 %loadBr_474e0e, 1
  br i1 %cmpBr_474e0e, label %block_.L_474ee6, label %block_474e14

block_474e14:
  ; Code: movq -0x38(%rbp), %rax	 RIP: 474e14	 Bytes: 4
  %loadMem_474e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e14 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e14)
  store %struct.Memory* %call_474e14, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rcx	 RIP: 474e18	 Bytes: 7
  %loadMem_474e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e18 = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e18)
  store %struct.Memory* %call_474e18, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e1f	 Bytes: 4
  %loadMem_474e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e1f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e1f)
  store %struct.Memory* %call_474e1f, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 474e23	 Bytes: 4
  %loadMem_474e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e23 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e23)
  store %struct.Memory* %call_474e23, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e27	 Bytes: 4
  %loadMem_474e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e27 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e27)
  store %struct.Memory* %call_474e27, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 474e2b	 Bytes: 4
  %loadMem_474e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e2b = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e2b)
  store %struct.Memory* %call_474e2b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e2f	 Bytes: 4
  %loadMem_474e2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e2f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e2f)
  store %struct.Memory* %call_474e2f, %struct.Memory** %MEMORY

  ; Code: movw (%rax), %dx	 RIP: 474e33	 Bytes: 3
  %loadMem_474e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e33 = call %struct.Memory* @routine_movw___rax____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e33)
  store %struct.Memory* %call_474e33, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474e36	 Bytes: 4
  %loadMem_474e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e36 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e36)
  store %struct.Memory* %call_474e36, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474e3a	 Bytes: 4
  %loadMem_474e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e3a = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e3a)
  store %struct.Memory* %call_474e3a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e3e	 Bytes: 4
  %loadMem_474e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e3e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e3e)
  store %struct.Memory* %call_474e3e, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474e42	 Bytes: 4
  %loadMem_474e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e42 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e42)
  store %struct.Memory* %call_474e42, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e46	 Bytes: 4
  %loadMem_474e46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e46 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e46)
  store %struct.Memory* %call_474e46, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474e4a	 Bytes: 3
  %loadMem_474e4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e4a = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e4a)
  store %struct.Memory* %call_474e4a, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474e4d	 Bytes: 3
  %loadMem_474e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e4d = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e4d)
  store %struct.Memory* %call_474e4d, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474e50	 Bytes: 3
  %loadMem_474e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e50 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e50)
  store %struct.Memory* %call_474e50, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax)	 RIP: 474e53	 Bytes: 3
  %loadMem_474e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e53 = call %struct.Memory* @routine_movw__dx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e53)
  store %struct.Memory* %call_474e53, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rax	 RIP: 474e56	 Bytes: 4
  %loadMem_474e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e56 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e56)
  store %struct.Memory* %call_474e56, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rcx	 RIP: 474e5a	 Bytes: 7
  %loadMem_474e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e5a = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e5a)
  store %struct.Memory* %call_474e5a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e61	 Bytes: 4
  %loadMem_474e61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e61 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e61)
  store %struct.Memory* %call_474e61, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 474e65	 Bytes: 4
  %loadMem_474e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e65 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e65)
  store %struct.Memory* %call_474e65, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e69	 Bytes: 4
  %loadMem_474e69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e69 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e69)
  store %struct.Memory* %call_474e69, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 474e6d	 Bytes: 4
  %loadMem_474e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e6d = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e6d)
  store %struct.Memory* %call_474e6d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e71	 Bytes: 4
  %loadMem_474e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e71 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e71)
  store %struct.Memory* %call_474e71, %struct.Memory** %MEMORY

  ; Code: movw 0x2(%rax), %dx	 RIP: 474e75	 Bytes: 4
  %loadMem_474e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e75 = call %struct.Memory* @routine_movw_0x2__rax____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e75)
  store %struct.Memory* %call_474e75, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474e79	 Bytes: 4
  %loadMem_474e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e79 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e79)
  store %struct.Memory* %call_474e79, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474e7d	 Bytes: 4
  %loadMem_474e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e7d = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e7d)
  store %struct.Memory* %call_474e7d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e81	 Bytes: 4
  %loadMem_474e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e81 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e81)
  store %struct.Memory* %call_474e81, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474e85	 Bytes: 4
  %loadMem_474e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e85 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e85)
  store %struct.Memory* %call_474e85, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474e89	 Bytes: 4
  %loadMem_474e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e89 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e89)
  store %struct.Memory* %call_474e89, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474e8d	 Bytes: 3
  %loadMem_474e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e8d = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e8d)
  store %struct.Memory* %call_474e8d, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474e90	 Bytes: 3
  %loadMem_474e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e90 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e90)
  store %struct.Memory* %call_474e90, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474e93	 Bytes: 3
  %loadMem_474e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e93 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e93)
  store %struct.Memory* %call_474e93, %struct.Memory** %MEMORY

  ; Code: movw %dx, 0x2(%rax)	 RIP: 474e96	 Bytes: 4
  %loadMem_474e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e96 = call %struct.Memory* @routine_movw__dx__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e96)
  store %struct.Memory* %call_474e96, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474e9a	 Bytes: 4
  %loadMem_474e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e9a = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e9a)
  store %struct.Memory* %call_474e9a, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474e9e	 Bytes: 4
  %loadMem_474e9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474e9e = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474e9e)
  store %struct.Memory* %call_474e9e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474ea2	 Bytes: 4
  %loadMem_474ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ea2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ea2)
  store %struct.Memory* %call_474ea2, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474ea6	 Bytes: 4
  %loadMem_474ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ea6 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ea6)
  store %struct.Memory* %call_474ea6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474eaa	 Bytes: 4
  %loadMem_474eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474eaa = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474eaa)
  store %struct.Memory* %call_474eaa, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474eae	 Bytes: 4
  %loadMem_474eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474eae = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474eae)
  store %struct.Memory* %call_474eae, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474eb2	 Bytes: 3
  %loadMem_474eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474eb2 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474eb2)
  store %struct.Memory* %call_474eb2, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474eb5	 Bytes: 3
  %loadMem_474eb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474eb5 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474eb5)
  store %struct.Memory* %call_474eb5, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rax)	 RIP: 474eb8	 Bytes: 5
  %loadMem_474eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474eb8 = call %struct.Memory* @routine_movw__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474eb8)
  store %struct.Memory* %call_474eb8, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rax	 RIP: 474ebd	 Bytes: 4
  %loadMem_474ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ebd = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ebd)
  store %struct.Memory* %call_474ebd, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 474ec1	 Bytes: 4
  %loadMem_474ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ec1 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ec1)
  store %struct.Memory* %call_474ec1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474ec5	 Bytes: 4
  %loadMem_474ec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ec5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ec5)
  store %struct.Memory* %call_474ec5, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 474ec9	 Bytes: 4
  %loadMem_474ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ec9 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ec9)
  store %struct.Memory* %call_474ec9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 474ecd	 Bytes: 4
  %loadMem_474ecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ecd = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ecd)
  store %struct.Memory* %call_474ecd, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 474ed1	 Bytes: 4
  %loadMem_474ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ed1 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ed1)
  store %struct.Memory* %call_474ed1, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474ed5	 Bytes: 3
  %loadMem_474ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ed5 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ed5)
  store %struct.Memory* %call_474ed5, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 474ed8	 Bytes: 3
  %loadMem_474ed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ed8 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ed8)
  store %struct.Memory* %call_474ed8, %struct.Memory** %MEMORY

  ; Code: movw $0x0, 0x2(%rax)	 RIP: 474edb	 Bytes: 6
  %loadMem_474edb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474edb = call %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474edb)
  store %struct.Memory* %call_474edb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475052	 RIP: 474ee1	 Bytes: 5
  %loadMem_474ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ee1 = call %struct.Memory* @routine_jmpq_.L_475052(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ee1, i64 369, i64 5)
  store %struct.Memory* %call_474ee1, %struct.Memory** %MEMORY

  br label %block_.L_475052

  ; Code: .L_474ee6:	 RIP: 474ee6	 Bytes: 0
block_.L_474ee6:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 474ee6	 Bytes: 3
  %loadMem_474ee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ee6 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ee6)
  store %struct.Memory* %call_474ee6, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rcx	 RIP: 474ee9	 Bytes: 4
  %loadMem_474ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ee9 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ee9)
  store %struct.Memory* %call_474ee9, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rdx	 RIP: 474eed	 Bytes: 7
  %loadMem_474eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474eed = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474eed)
  store %struct.Memory* %call_474eed, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474ef4	 Bytes: 4
  %loadMem_474ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ef4 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ef4)
  store %struct.Memory* %call_474ef4, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 474ef8	 Bytes: 4
  %loadMem_474ef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ef8 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ef8)
  store %struct.Memory* %call_474ef8, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474efc	 Bytes: 4
  %loadMem_474efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474efc = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474efc)
  store %struct.Memory* %call_474efc, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 474f00	 Bytes: 4
  %loadMem_474f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f00 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f00)
  store %struct.Memory* %call_474f00, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f04	 Bytes: 4
  %loadMem_474f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f04 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f04)
  store %struct.Memory* %call_474f04, %struct.Memory** %MEMORY

  ; Code: movswl (%rcx), %esi	 RIP: 474f08	 Bytes: 3
  %loadMem_474f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f08 = call %struct.Memory* @routine_movswl___rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f08)
  store %struct.Memory* %call_474f08, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 474f0b	 Bytes: 3
  %loadMem_474f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f0b = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f0b)
  store %struct.Memory* %call_474f0b, %struct.Memory** %MEMORY

  ; Code: addl $0x80, %eax	 RIP: 474f0e	 Bytes: 5
  %loadMem_474f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f0e = call %struct.Memory* @routine_addl__0x80___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f0e)
  store %struct.Memory* %call_474f0e, %struct.Memory** %MEMORY

  ; Code: sarl $0x8, %eax	 RIP: 474f13	 Bytes: 3
  %loadMem_474f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f13 = call %struct.Memory* @routine_sarl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f13)
  store %struct.Memory* %call_474f13, %struct.Memory** %MEMORY

  ; Code: movw %ax, %di	 RIP: 474f16	 Bytes: 3
  %loadMem_474f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f16 = call %struct.Memory* @routine_movw__ax___di(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f16)
  store %struct.Memory* %call_474f16, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 474f19	 Bytes: 4
  %loadMem_474f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f19 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f19)
  store %struct.Memory* %call_474f19, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 474f1d	 Bytes: 4
  %loadMem_474f1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f1d = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f1d)
  store %struct.Memory* %call_474f1d, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f21	 Bytes: 4
  %loadMem_474f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f21 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f21)
  store %struct.Memory* %call_474f21, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 474f25	 Bytes: 4
  %loadMem_474f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f25 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f25)
  store %struct.Memory* %call_474f25, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f29	 Bytes: 4
  %loadMem_474f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f29 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f29)
  store %struct.Memory* %call_474f29, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474f2d	 Bytes: 3
  %loadMem_474f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f2d = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f2d)
  store %struct.Memory* %call_474f2d, %struct.Memory** %MEMORY

  ; Code: movslq -0xe0(%rbp), %rdx	 RIP: 474f30	 Bytes: 7
  %loadMem_474f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f30 = call %struct.Memory* @routine_movslq_MINUS0xe0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f30)
  store %struct.Memory* %call_474f30, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f37	 Bytes: 4
  %loadMem_474f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f37 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f37)
  store %struct.Memory* %call_474f37, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474f3b	 Bytes: 3
  %loadMem_474f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f3b = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f3b)
  store %struct.Memory* %call_474f3b, %struct.Memory** %MEMORY

  ; Code: movw %di, (%rcx)	 RIP: 474f3e	 Bytes: 3
  %loadMem_474f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f3e = call %struct.Memory* @routine_movw__di____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f3e)
  store %struct.Memory* %call_474f3e, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 474f41	 Bytes: 3
  %loadMem_474f41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f41 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f41)
  store %struct.Memory* %call_474f41, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rcx	 RIP: 474f44	 Bytes: 4
  %loadMem_474f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f44 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f44)
  store %struct.Memory* %call_474f44, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rdx	 RIP: 474f48	 Bytes: 7
  %loadMem_474f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f48 = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f48)
  store %struct.Memory* %call_474f48, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f4f	 Bytes: 4
  %loadMem_474f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f4f = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f4f)
  store %struct.Memory* %call_474f4f, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 474f53	 Bytes: 4
  %loadMem_474f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f53 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f53)
  store %struct.Memory* %call_474f53, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f57	 Bytes: 4
  %loadMem_474f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f57 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f57)
  store %struct.Memory* %call_474f57, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 474f5b	 Bytes: 4
  %loadMem_474f5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f5b = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f5b)
  store %struct.Memory* %call_474f5b, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f5f	 Bytes: 4
  %loadMem_474f5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f5f = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f5f)
  store %struct.Memory* %call_474f5f, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rcx), %esi	 RIP: 474f63	 Bytes: 4
  %loadMem_474f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f63 = call %struct.Memory* @routine_movswl_0x2__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f63)
  store %struct.Memory* %call_474f63, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 474f67	 Bytes: 3
  %loadMem_474f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f67 = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f67)
  store %struct.Memory* %call_474f67, %struct.Memory** %MEMORY

  ; Code: addl $0x80, %eax	 RIP: 474f6a	 Bytes: 5
  %loadMem_474f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f6a = call %struct.Memory* @routine_addl__0x80___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f6a)
  store %struct.Memory* %call_474f6a, %struct.Memory** %MEMORY

  ; Code: sarl $0x8, %eax	 RIP: 474f6f	 Bytes: 3
  %loadMem_474f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f6f = call %struct.Memory* @routine_sarl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f6f)
  store %struct.Memory* %call_474f6f, %struct.Memory** %MEMORY

  ; Code: movw %ax, %di	 RIP: 474f72	 Bytes: 3
  %loadMem_474f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f72 = call %struct.Memory* @routine_movw__ax___di(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f72)
  store %struct.Memory* %call_474f72, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 474f75	 Bytes: 4
  %loadMem_474f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f75 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f75)
  store %struct.Memory* %call_474f75, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 474f79	 Bytes: 4
  %loadMem_474f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f79 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f79)
  store %struct.Memory* %call_474f79, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f7d	 Bytes: 4
  %loadMem_474f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f7d = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f7d)
  store %struct.Memory* %call_474f7d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 474f81	 Bytes: 4
  %loadMem_474f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f81 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f81)
  store %struct.Memory* %call_474f81, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f85	 Bytes: 4
  %loadMem_474f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f85 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f85)
  store %struct.Memory* %call_474f85, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474f89	 Bytes: 3
  %loadMem_474f89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f89 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f89)
  store %struct.Memory* %call_474f89, %struct.Memory** %MEMORY

  ; Code: movslq -0xe0(%rbp), %rdx	 RIP: 474f8c	 Bytes: 7
  %loadMem_474f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f8c = call %struct.Memory* @routine_movslq_MINUS0xe0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f8c)
  store %struct.Memory* %call_474f8c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474f93	 Bytes: 4
  %loadMem_474f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f93 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f93)
  store %struct.Memory* %call_474f93, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474f97	 Bytes: 3
  %loadMem_474f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f97 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f97)
  store %struct.Memory* %call_474f97, %struct.Memory** %MEMORY

  ; Code: movw %di, 0x2(%rcx)	 RIP: 474f9a	 Bytes: 4
  %loadMem_474f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f9a = call %struct.Memory* @routine_movw__di__0x2__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f9a)
  store %struct.Memory* %call_474f9a, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 474f9e	 Bytes: 3
  %loadMem_474f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474f9e = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474f9e)
  store %struct.Memory* %call_474f9e, %struct.Memory** %MEMORY

  ; Code: subl $0x100, %eax	 RIP: 474fa1	 Bytes: 5
  %loadMem_474fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fa1 = call %struct.Memory* @routine_subl__0x100___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fa1)
  store %struct.Memory* %call_474fa1, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rcx	 RIP: 474fa6	 Bytes: 4
  %loadMem_474fa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fa6 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fa6)
  store %struct.Memory* %call_474fa6, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rdx	 RIP: 474faa	 Bytes: 7
  %loadMem_474faa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474faa = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474faa)
  store %struct.Memory* %call_474faa, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474fb1	 Bytes: 4
  %loadMem_474fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fb1 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fb1)
  store %struct.Memory* %call_474fb1, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 474fb5	 Bytes: 4
  %loadMem_474fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fb5 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fb5)
  store %struct.Memory* %call_474fb5, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474fb9	 Bytes: 4
  %loadMem_474fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fb9 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fb9)
  store %struct.Memory* %call_474fb9, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 474fbd	 Bytes: 4
  %loadMem_474fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fbd = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fbd)
  store %struct.Memory* %call_474fbd, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474fc1	 Bytes: 4
  %loadMem_474fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fc1 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fc1)
  store %struct.Memory* %call_474fc1, %struct.Memory** %MEMORY

  ; Code: movswl (%rcx), %esi	 RIP: 474fc5	 Bytes: 3
  %loadMem_474fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fc5 = call %struct.Memory* @routine_movswl___rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fc5)
  store %struct.Memory* %call_474fc5, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 474fc8	 Bytes: 3
  %loadMem_474fc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fc8 = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fc8)
  store %struct.Memory* %call_474fc8, %struct.Memory** %MEMORY

  ; Code: addl $0x80, %eax	 RIP: 474fcb	 Bytes: 5
  %loadMem_474fcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fcb = call %struct.Memory* @routine_addl__0x80___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fcb)
  store %struct.Memory* %call_474fcb, %struct.Memory** %MEMORY

  ; Code: sarl $0x8, %eax	 RIP: 474fd0	 Bytes: 3
  %loadMem_474fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fd0 = call %struct.Memory* @routine_sarl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fd0)
  store %struct.Memory* %call_474fd0, %struct.Memory** %MEMORY

  ; Code: movw %ax, %di	 RIP: 474fd3	 Bytes: 3
  %loadMem_474fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fd3 = call %struct.Memory* @routine_movw__ax___di(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fd3)
  store %struct.Memory* %call_474fd3, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 474fd6	 Bytes: 4
  %loadMem_474fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fd6 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fd6)
  store %struct.Memory* %call_474fd6, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 474fda	 Bytes: 4
  %loadMem_474fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fda = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fda)
  store %struct.Memory* %call_474fda, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474fde	 Bytes: 4
  %loadMem_474fde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fde = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fde)
  store %struct.Memory* %call_474fde, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 474fe2	 Bytes: 4
  %loadMem_474fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fe2 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fe2)
  store %struct.Memory* %call_474fe2, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 474fe6	 Bytes: 4
  %loadMem_474fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fe6 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fe6)
  store %struct.Memory* %call_474fe6, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 474fea	 Bytes: 4
  %loadMem_474fea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fea = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fea)
  store %struct.Memory* %call_474fea, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474fee	 Bytes: 3
  %loadMem_474fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fee = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fee)
  store %struct.Memory* %call_474fee, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 474ff1	 Bytes: 3
  %loadMem_474ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ff1 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ff1)
  store %struct.Memory* %call_474ff1, %struct.Memory** %MEMORY

  ; Code: movw %di, (%rcx)	 RIP: 474ff4	 Bytes: 3
  %loadMem_474ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ff4 = call %struct.Memory* @routine_movw__di____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ff4)
  store %struct.Memory* %call_474ff4, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 474ff7	 Bytes: 3
  %loadMem_474ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ff7 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ff7)
  store %struct.Memory* %call_474ff7, %struct.Memory** %MEMORY

  ; Code: subl $0x100, %eax	 RIP: 474ffa	 Bytes: 5
  %loadMem_474ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474ffa = call %struct.Memory* @routine_subl__0x100___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474ffa)
  store %struct.Memory* %call_474ffa, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rcx	 RIP: 474fff	 Bytes: 4
  %loadMem_474fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_474fff = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_474fff)
  store %struct.Memory* %call_474fff, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rdx	 RIP: 475003	 Bytes: 7
  %loadMem_475003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475003 = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475003)
  store %struct.Memory* %call_475003, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47500a	 Bytes: 4
  %loadMem_47500a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47500a = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47500a)
  store %struct.Memory* %call_47500a, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 47500e	 Bytes: 4
  %loadMem_47500e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47500e = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47500e)
  store %struct.Memory* %call_47500e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 475012	 Bytes: 4
  %loadMem_475012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475012 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475012)
  store %struct.Memory* %call_475012, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 475016	 Bytes: 4
  %loadMem_475016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475016 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475016)
  store %struct.Memory* %call_475016, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47501a	 Bytes: 4
  %loadMem_47501a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47501a = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47501a)
  store %struct.Memory* %call_47501a, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rcx), %esi	 RIP: 47501e	 Bytes: 4
  %loadMem_47501e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47501e = call %struct.Memory* @routine_movswl_0x2__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47501e)
  store %struct.Memory* %call_47501e, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 475022	 Bytes: 3
  %loadMem_475022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475022 = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475022)
  store %struct.Memory* %call_475022, %struct.Memory** %MEMORY

  ; Code: addl $0x80, %eax	 RIP: 475025	 Bytes: 5
  %loadMem_475025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475025 = call %struct.Memory* @routine_addl__0x80___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475025)
  store %struct.Memory* %call_475025, %struct.Memory** %MEMORY

  ; Code: sarl $0x8, %eax	 RIP: 47502a	 Bytes: 3
  %loadMem_47502a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47502a = call %struct.Memory* @routine_sarl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47502a)
  store %struct.Memory* %call_47502a, %struct.Memory** %MEMORY

  ; Code: movw %ax, %di	 RIP: 47502d	 Bytes: 3
  %loadMem_47502d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47502d = call %struct.Memory* @routine_movw__ax___di(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47502d)
  store %struct.Memory* %call_47502d, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 475030	 Bytes: 4
  %loadMem_475030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475030 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475030)
  store %struct.Memory* %call_475030, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 475034	 Bytes: 4
  %loadMem_475034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475034 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475034)
  store %struct.Memory* %call_475034, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 475038	 Bytes: 4
  %loadMem_475038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475038 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475038)
  store %struct.Memory* %call_475038, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 47503c	 Bytes: 4
  %loadMem_47503c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47503c = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47503c)
  store %struct.Memory* %call_47503c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 475040	 Bytes: 4
  %loadMem_475040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475040 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475040)
  store %struct.Memory* %call_475040, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 475044	 Bytes: 4
  %loadMem_475044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475044 = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475044)
  store %struct.Memory* %call_475044, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 475048	 Bytes: 3
  %loadMem_475048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475048 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475048)
  store %struct.Memory* %call_475048, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 47504b	 Bytes: 3
  %loadMem_47504b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47504b = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47504b)
  store %struct.Memory* %call_47504b, %struct.Memory** %MEMORY

  ; Code: movw %di, 0x2(%rcx)	 RIP: 47504e	 Bytes: 4
  %loadMem_47504e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47504e = call %struct.Memory* @routine_movw__di__0x2__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47504e)
  store %struct.Memory* %call_47504e, %struct.Memory** %MEMORY

  ; Code: .L_475052:	 RIP: 475052	 Bytes: 0
  br label %block_.L_475052
block_.L_475052:

  ; Code: movl -0xe0(%rbp), %eax	 RIP: 475052	 Bytes: 6
  %loadMem_475052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475052 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475052)
  store %struct.Memory* %call_475052, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 475058	 Bytes: 3
  %loadMem_475058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475058 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475058)
  store %struct.Memory* %call_475058, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rdx	 RIP: 47505b	 Bytes: 8
  %loadMem_47505b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47505b = call %struct.Memory* @routine_movq_0x6cea08___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47505b)
  store %struct.Memory* %call_47505b, %struct.Memory** %MEMORY

  ; Code: movq (%rdx), %rdx	 RIP: 475063	 Bytes: 3
  %loadMem_475063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475063 = call %struct.Memory* @routine_movq___rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475063)
  store %struct.Memory* %call_475063, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 475066	 Bytes: 4
  %loadMem_475066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475066 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475066)
  store %struct.Memory* %call_475066, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 47506a	 Bytes: 4
  %loadMem_47506a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47506a = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47506a)
  store %struct.Memory* %call_47506a, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 47506e	 Bytes: 4
  %loadMem_47506e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47506e = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47506e)
  store %struct.Memory* %call_47506e, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rdx,%rsi,2)	 RIP: 475072	 Bytes: 4
  %loadMem_475072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475072 = call %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475072)
  store %struct.Memory* %call_475072, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rdx	 RIP: 475076	 Bytes: 8
  %loadMem_475076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475076 = call %struct.Memory* @routine_movq_0x6cea08___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475076)
  store %struct.Memory* %call_475076, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdx), %rdx	 RIP: 47507e	 Bytes: 4
  %loadMem_47507e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47507e = call %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47507e)
  store %struct.Memory* %call_47507e, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 475082	 Bytes: 4
  %loadMem_475082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475082 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475082)
  store %struct.Memory* %call_475082, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 475086	 Bytes: 4
  %loadMem_475086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475086 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475086)
  store %struct.Memory* %call_475086, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 47508a	 Bytes: 4
  %loadMem_47508a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47508a = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47508a)
  store %struct.Memory* %call_47508a, %struct.Memory** %MEMORY

  ; Code: movw $0x0, (%rdx,%rsi,2)	 RIP: 47508e	 Bytes: 6
  %loadMem_47508e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47508e = call %struct.Memory* @routine_movw__0x0____rdx__rsi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47508e)
  store %struct.Memory* %call_47508e, %struct.Memory** %MEMORY

  ; Code: movq 0x722cb8, %rdx	 RIP: 475094	 Bytes: 8
  %loadMem_475094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475094 = call %struct.Memory* @routine_movq_0x722cb8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475094)
  store %struct.Memory* %call_475094, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 47509c	 Bytes: 4
  %loadMem_47509c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47509c = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47509c)
  store %struct.Memory* %call_47509c, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 4750a0	 Bytes: 4
  %loadMem_4750a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750a0 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750a0)
  store %struct.Memory* %call_4750a0, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 4750a4	 Bytes: 4
  %loadMem_4750a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750a4 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750a4)
  store %struct.Memory* %call_4750a4, %struct.Memory** %MEMORY

  ; Code: movw $0x2, (%rdx,%rsi,2)	 RIP: 4750a8	 Bytes: 6
  %loadMem_4750a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750a8 = call %struct.Memory* @routine_movw__0x2____rdx__rsi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750a8)
  store %struct.Memory* %call_4750a8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475108	 RIP: 4750ae	 Bytes: 5
  %loadMem_4750ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750ae = call %struct.Memory* @routine_jmpq_.L_475108(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750ae, i64 90, i64 5)
  store %struct.Memory* %call_4750ae, %struct.Memory** %MEMORY

  br label %block_.L_475108

  ; Code: .L_4750b3:	 RIP: 4750b3	 Bytes: 0
block_.L_4750b3:

  ; Code: movq 0x6cea08, %rax	 RIP: 4750b3	 Bytes: 8
  %loadMem_4750b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750b3 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750b3)
  store %struct.Memory* %call_4750b3, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4750bb	 Bytes: 3
  %loadMem_4750bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750bb = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750bb)
  store %struct.Memory* %call_4750bb, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4750be	 Bytes: 4
  %loadMem_4750be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750be = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750be)
  store %struct.Memory* %call_4750be, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4750c2	 Bytes: 4
  %loadMem_4750c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750c2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750c2)
  store %struct.Memory* %call_4750c2, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4750c6	 Bytes: 4
  %loadMem_4750c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750c6 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750c6)
  store %struct.Memory* %call_4750c6, %struct.Memory** %MEMORY

  ; Code: movw $0xffff, (%rax,%rcx,2)	 RIP: 4750ca	 Bytes: 6
  %loadMem_4750ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750ca = call %struct.Memory* @routine_movw__0xffff____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750ca)
  store %struct.Memory* %call_4750ca, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea08, %rax	 RIP: 4750d0	 Bytes: 8
  %loadMem_4750d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750d0 = call %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750d0)
  store %struct.Memory* %call_4750d0, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4750d8	 Bytes: 4
  %loadMem_4750d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750d8 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750d8)
  store %struct.Memory* %call_4750d8, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4750dc	 Bytes: 4
  %loadMem_4750dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750dc = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750dc)
  store %struct.Memory* %call_4750dc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4750e0	 Bytes: 4
  %loadMem_4750e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750e0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750e0)
  store %struct.Memory* %call_4750e0, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4750e4	 Bytes: 4
  %loadMem_4750e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750e4 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750e4)
  store %struct.Memory* %call_4750e4, %struct.Memory** %MEMORY

  ; Code: movw $0xffff, (%rax,%rcx,2)	 RIP: 4750e8	 Bytes: 6
  %loadMem_4750e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750e8 = call %struct.Memory* @routine_movw__0xffff____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750e8)
  store %struct.Memory* %call_4750e8, %struct.Memory** %MEMORY

  ; Code: movq 0x722cb8, %rax	 RIP: 4750ee	 Bytes: 8
  %loadMem_4750ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750ee = call %struct.Memory* @routine_movq_0x722cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750ee)
  store %struct.Memory* %call_4750ee, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4750f6	 Bytes: 4
  %loadMem_4750f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750f6 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750f6)
  store %struct.Memory* %call_4750f6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4750fa	 Bytes: 4
  %loadMem_4750fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750fa = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750fa)
  store %struct.Memory* %call_4750fa, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4750fe	 Bytes: 4
  %loadMem_4750fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4750fe = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4750fe)
  store %struct.Memory* %call_4750fe, %struct.Memory** %MEMORY

  ; Code: movw $0xffff, (%rax,%rcx,2)	 RIP: 475102	 Bytes: 6
  %loadMem_475102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475102 = call %struct.Memory* @routine_movw__0xffff____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475102)
  store %struct.Memory* %call_475102, %struct.Memory** %MEMORY

  ; Code: .L_475108:	 RIP: 475108	 Bytes: 0
  br label %block_.L_475108
block_.L_475108:

  ; Code: jmpq .L_47510d	 RIP: 475108	 Bytes: 5
  %loadMem_475108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475108 = call %struct.Memory* @routine_jmpq_.L_47510d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475108, i64 5, i64 5)
  store %struct.Memory* %call_475108, %struct.Memory** %MEMORY

  br label %block_.L_47510d

  ; Code: .L_47510d:	 RIP: 47510d	 Bytes: 0
block_.L_47510d:

  ; Code: jmpq .L_475112	 RIP: 47510d	 Bytes: 5
  %loadMem_47510d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47510d = call %struct.Memory* @routine_jmpq_.L_475112(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47510d, i64 5, i64 5)
  store %struct.Memory* %call_47510d, %struct.Memory** %MEMORY

  br label %block_.L_475112

  ; Code: .L_475112:	 RIP: 475112	 Bytes: 0
block_.L_475112:

  ; Code: movl -0x4(%rbp), %eax	 RIP: 475112	 Bytes: 3
  %loadMem_475112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475112 = call %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475112)
  store %struct.Memory* %call_475112, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475115	 Bytes: 3
  %loadMem_475115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475115 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475115)
  store %struct.Memory* %call_475115, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 475118	 Bytes: 3
  %loadMem_475118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475118 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475118)
  store %struct.Memory* %call_475118, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474ac6	 RIP: 47511b	 Bytes: 5
  %loadMem_47511b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47511b = call %struct.Memory* @routine_jmpq_.L_474ac6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47511b, i64 -1621, i64 5)
  store %struct.Memory* %call_47511b, %struct.Memory** %MEMORY

  br label %block_.L_474ac6

  ; Code: .L_475120:	 RIP: 475120	 Bytes: 0
block_.L_475120:

  ; Code: jmpq .L_475125	 RIP: 475120	 Bytes: 5
  %loadMem_475120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475120 = call %struct.Memory* @routine_jmpq_.L_475125(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475120, i64 5, i64 5)
  store %struct.Memory* %call_475120, %struct.Memory** %MEMORY

  br label %block_.L_475125

  ; Code: .L_475125:	 RIP: 475125	 Bytes: 0
block_.L_475125:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 475125	 Bytes: 3
  %loadMem_475125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475125 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475125)
  store %struct.Memory* %call_475125, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475128	 Bytes: 3
  %loadMem_475128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475128 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475128)
  store %struct.Memory* %call_475128, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 47512b	 Bytes: 3
  %loadMem_47512b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47512b = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47512b)
  store %struct.Memory* %call_47512b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_474a87	 RIP: 47512e	 Bytes: 5
  %loadMem_47512e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47512e = call %struct.Memory* @routine_jmpq_.L_474a87(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47512e, i64 -1703, i64 5)
  store %struct.Memory* %call_47512e, %struct.Memory** %MEMORY

  br label %block_.L_474a87

  ; Code: .L_475133:	 RIP: 475133	 Bytes: 0
block_.L_475133:

  ; Code: jmpq .L_475138	 RIP: 475133	 Bytes: 5
  %loadMem_475133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475133 = call %struct.Memory* @routine_jmpq_.L_475138(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475133, i64 5, i64 5)
  store %struct.Memory* %call_475133, %struct.Memory** %MEMORY

  br label %block_.L_475138

  ; Code: .L_475138:	 RIP: 475138	 Bytes: 0
block_.L_475138:

  ; Code: addq $0x210, %rsp	 RIP: 475138	 Bytes: 7
  %loadMem_475138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475138 = call %struct.Memory* @routine_addq__0x210___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475138)
  store %struct.Memory* %call_475138, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 47513f	 Bytes: 1
  %loadMem_47513f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47513f = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47513f)
  store %struct.Memory* %call_47513f, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 475140	 Bytes: 1
  %loadMem_475140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475140 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475140)
  store %struct.Memory* %call_475140, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_475140
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x210___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 528)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x118f8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71928
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rax__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 632)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_472eb9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_0xc__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_472e68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cc330___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cc330_type* @G_0x6cc330 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x12f8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4856
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x12f0__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4848
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x12e0__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4832
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x12e8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4840
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_472eb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq_0xca8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3240
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movq_0xca0__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3232
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movq_0xc90__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movq_0xc98__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_472f05(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq_0x658__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1624
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movq_0x650__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1616
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movq_0x640__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1600
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movq_0x648__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1608
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_cmpl__0x0__0x1193c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71996
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_474a80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 4294967295)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x88__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x4___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 4)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__edx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x6c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x68__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdi__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rsi__MINUS0xf8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xf8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xfc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__r9__MINUS0x108__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %R9
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl_MINUS0xfc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0xc__rdx____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xfc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x100__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xfc__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 252
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x108__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 4294967295)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0xa0__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0xc__r10____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__0x10___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 16)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_leaq_MINUS0xd0__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_leaq_MINUS0xb8__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__ecx__MINUS0x10c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x10c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 268
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x6cb900___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x11ad0__r9_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_473323(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_473084(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1950__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6480
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq___rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = sext i16 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswl___rax__rcx_2____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl__edx__MINUS0x110__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473094(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4294967295)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x110__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x110__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__cx__MINUS0x52__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 82
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 160
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4730e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movslq_MINUS0x90__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x114__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4730f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x114__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x114__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_47313e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movslq_MINUS0xa8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0xa4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47314e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x118__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x56__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 86
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_47319b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movslq_MINUS0xc0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4731a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movswl_MINUS0x56__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 86
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x11c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_je_.L_4731ed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_movl__edx__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4731fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x5a__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 90
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_je_.L_47324b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47325b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x124__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_je_.L_4732a9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4732b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x128__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x5e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 94
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_je_.L_473307(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x12c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473311(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movswl_MINUS0x5e__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 94
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x12c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4742c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_473afd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_473402(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x84__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_473399(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

















define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_4733c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4733f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}















define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x130__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x134__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473412(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x134__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4734ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x9c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_47348a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_4734bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4734ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl_MINUS0x138__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47350f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4735fc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0xb4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_473587(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_4735ba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x140__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4735eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl_MINUS0x140__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x144__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 324
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47360c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x144__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 324
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4736f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0xcc__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_473684(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_4736b7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4736e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl_MINUS0x148__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473703(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x14c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4737e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_473776(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_4737a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4737d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl_MINUS0x150__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4737f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4738e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_47386a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_47389e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4738d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4738f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4739e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_47396a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_47399e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4739d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl_MINUS0x160__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4739f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x164__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_473ae1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_473a6a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_473a9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__edx__MINUS0x168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473ad0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl_MINUS0x168__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473aeb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x16c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jmpq_.L_4742c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_473bcb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_473b62(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_473b92(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}















define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__MINUS0x170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473bba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x170__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473bdb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x174__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_473cc8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_473c53(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_473c89(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__edx__MINUS0x178__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473cb7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x178__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473cd8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x17c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_473dc5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_473d50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_473d86(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__edx__MINUS0x180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473db4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x180__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x184__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473dd5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x184__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_473ec2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_473e4d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_473e83(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__edx__MINUS0x188__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473eb1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x188__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473ecc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x18c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_473faa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_473f3f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_473f70(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__edx__MINUS0x190__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473f99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x190__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_473fba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x194__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4740aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_474033(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_47406a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__edx__MINUS0x198__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474099(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x198__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x19c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4740ba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x19c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4741aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_474133(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_47416a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__edx__MINUS0x1a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474199(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x1a0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4741ba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x1a4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4742aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_474233(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jge_.L_47426a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__edx__MINUS0x1a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474299(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl_MINUS0x1a8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4742b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1ac__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movswl_MINUS0x52__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 82
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_47431a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x54__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movswl_MINUS0x54__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_4742ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474309(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1b0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47434f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_474339(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474343(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1b8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1b4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x62__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 98
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl_MINUS0x62__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 98
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jl_.L_4743b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x58__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movswl_MINUS0x58__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_474395(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47439f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4743e5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jle_.L_4743cf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4743d9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1c4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1c0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movswl_MINUS0x5a__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 90
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jl_.L_474446(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x5c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movswl_MINUS0x5c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_47442b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474435(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1c8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47447b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jle_.L_474465(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47446f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1d0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1cc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0x64__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl_MINUS0x64__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jl_.L_4744dc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x60__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movswl_MINUS0x60__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4744c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4744cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1d4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474511(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jle_.L_4744fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474505(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x1dc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1d8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jl_.L_474584(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_leaq_MINUS0x68__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1950__rdx____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 6480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x1968__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6504
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movswl_MINUS0x62__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 98
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x10__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 16)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x10__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 16)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_callq_.SetMotionVectorPredictor(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jl_.L_4745e7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__r9d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x10___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 16)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1950__rcx____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x1968__rcx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movswl_MINUS0x64__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_474a7b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x9c__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_sarl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xac__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_474a68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x98__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xa8__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl_MINUS0x62__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 98
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jl_.L_474777(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i16*
  %6 = load i16, i16* %5
  %7 = trunc i64 %3 to i16
  %8 = sub i16 %6, %7
  %9 = icmp ult i16 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i16 %8, 255
  %13 = zext i16 %12 to i32
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i16 %6, %7
  %20 = xor i16 %19, %8
  %21 = lshr i16 %20, 4
  %22 = trunc i16 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i16 %8, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i16 %8, 15
  %29 = trunc i16 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i16 %6, 15
  %32 = lshr i16 %7, 15
  %33 = xor i16 %31, %32
  %34 = xor i16 %28, %31
  %35 = add   i16 %34, %33
  %36 = icmp eq i16 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpw__0x0__MINUS0x62__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 98
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4746fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i8*
  %6 = load i8, i8* %5
  %7 = trunc i64 %3 to i8
  %8 = sub i8 %6, %7
  %9 = icmp ult i8 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = zext i8 %8 to i32
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i8 %6, %7
  %19 = xor i8 %18, %8
  %20 = lshr i8 %19, 4
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i8 %8, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i8 %8, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i8 %6, 7
  %29 = lshr i8 %7, 7
  %30 = xor i8 %28, %29
  %31 = xor i8 %26, %28
  %32 = add   i8 %31, %30
  %33 = icmp eq i8 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpb__0x0____rax__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 0)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}









define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__0x0____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movw__0x0__0x2__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cea08___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cea08_type* @G_0x6cea08 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__0x0____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 2
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474772(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  store i16 %6, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw_MINUS0x68__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq___rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = sext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswq_MINUS0x62__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 98
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movw__ax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i16, i16* %AX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0x66__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 102
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movw__ax__0x2__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 2
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0x62__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 98
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6cea08___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cea08_type* @G_0x6cea08 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax____rcx__rdx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %AX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_4747d9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















































define %struct.Memory* @routine_movw__0xffff____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 2
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 -1)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jl_.L_4748f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_474879(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















































define %struct.Memory* @routine_movw_MINUS0x64__rbp____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_4748f0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movw_MINUS0x6c__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movswq_MINUS0x64__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movw_MINUS0x6a__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 106
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movw_MINUS0x64__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_47495a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






















































define %struct.Memory* @routine_jge_.L_4749af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












































define %struct.Memory* @routine_cmpl__0xffffffff___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4749f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x722cb8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x722cb8_type* @G_0x722cb8 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jmpq_.L_474a55(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jne_.L_474a36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movw__0x1____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 2
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 1)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474a50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movw__0x2____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 2
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 2)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jmpq_.L_474a5a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47462d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_474a6d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4745ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475138(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_475133(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


























define %struct.Memory* @routine_jge_.L_475120(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_474b2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 4)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6CMOVNZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  %8 = load i64, i64* %2, align 8
  %9 = select i1 %7, i64 %3, i64 %8
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6CMOVNZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__MINUS0x1ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474b3a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_sarl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xa8__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x40__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movswl___rsi__rdi_2____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_cmpl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  %8 = load i64, i64* %2, align 8
  %9 = select i1 %7, i64 %3, i64 %8
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmovel__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_474cb6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












































































































define %struct.Memory* @routine_jmpq_.L_47510d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xf7e7f8ac__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -135792468)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 228
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x11940__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72000
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 0)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_0x7247b0___rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = mul i64 %14, 4
  %16 = add i64 %15, 7489456
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_474d16(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x11940__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72000
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474d2f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq__eax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x7247b0___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 7489456
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1f4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_474dc9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x18___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 24)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x108___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 264)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xe4__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %2, %6
  %8 = icmp ugt i64 %6, %2
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %2
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %2, 63
  %31 = lshr i64 %6, 63
  %32 = xor i64 %31, %30
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq___rdx__rsi_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_jne_.L_474da6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474dc9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_474db5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_474cca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0xf7e7f8ac__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -135792468)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4750b3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x11950___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 72016)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_imulq__0x3c___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 60)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0xe0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x270f__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9999)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_474ee6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x38__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movw___rax____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %12)
  ret %struct.Memory* %15
}


















define %struct.Memory* @routine_movw__dx____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i16, i16* %DX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}
















define %struct.Memory* @routine_movw_0x2__rax____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movw__dx__0x2__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2
  %14 = load i16, i16* %DX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






































define %struct.Memory* @routine_jmpq_.L_475052(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x38__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movswl___rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__0x80___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 128)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_sarl__0x8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 8)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movw__ax___di(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movw__di____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i16, i16* %DI
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_movswl_0x2__rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




























define %struct.Memory* @routine_movw__di__0x2__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 2
  %14 = load i16, i16* %DI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x100___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 256)
  ret %struct.Memory* %12
}


























































































define %struct.Memory* @routine_movl_MINUS0xe0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x6cea08___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cea08_type* @G_0x6cea08 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq___rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movw__0x0____rdx__rsi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 2
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x722cb8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x722cb8_type* @G_0x722cb8 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movw__0x2____rdx__rsi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 2
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 2)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475108(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_jmpq_.L_475112(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_474ac6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475125(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_474a87(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addq__0x210___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 528)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

