; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_45ca00.SetMotionVectorPredictor(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_420700.FastIntegerPelBlockMotionSearch(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45ee30.FastFullPelBlockMotionSearch(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_423bb0.FastSubPelBlockMotionSearch(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_460230.SubPelBlockMotionSearch(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4711a0.FindSkipModeMotionVector(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4716e0.GetSkipCostMB(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_462170.FullPelBlockMotionBiPred(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4634d0.SubPelBlockSearchBiPred(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x25be7e__rip__type = type <{ [8 x i8] }>
@G_0x25be7e__rip_= global %G_0x25be7e__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x25befb__rip__type = type <{ [8 x i8] }>
@G_0x25befb__rip_= global %G_0x25befb__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x25d9ed__rip__type = type <{ [8 x i8] }>
@G_0x25d9ed__rip_= global %G_0x25d9ed__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x25da6a__rip__type = type <{ [8 x i8] }>
@G_0x25da6a__rip_= global %G_0x25da6a__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x25da89__rip__type = type <{ [4 x i8] }>
@G_0x25da89__rip_= global %G_0x25da89__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x2a0544__rip__type = type <{ [4 x i8] }>
@G_0x2a0544__rip_= global %G_0x2a0544__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x2a054a__rip__type = type <{ [4 x i8] }>
@G_0x2a054a__rip_= global %G_0x2a054a__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x2a059c__rip__type = type <{ [4 x i8] }>
@G_0x2a059c__rip_= global %G_0x2a059c__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x2a05bd__rip__type = type <{ [4 x i8] }>
@G_0x2a05bd__rip_= global %G_0x2a05bd__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x2a05c3__rip__type = type <{ [4 x i8] }>
@G_0x2a05c3__rip_= global %G_0x2a05c3__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x409e8__rip__type = type <{ [8 x i8] }>
@G_0x409e8__rip_= global %G_0x409e8__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x40b26__rip__type = type <{ [8 x i8] }>
@G_0x40b26__rip_= global %G_0x40b26__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x41318__rip__type = type <{ [8 x i8] }>
@G_0x41318__rip_= global %G_0x41318__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x42302__rip__type = type <{ [8 x i8] }>
@G_0x42302__rip_= global %G_0x42302__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x42312__rip__type = type <{ [8 x i8] }>
@G_0x42312__rip_= global %G_0x42312__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x423dd__rip__type = type <{ [8 x i8] }>
@G_0x423dd__rip_= global %G_0x423dd__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x423ed__rip__type = type <{ [8 x i8] }>
@G_0x423ed__rip_= global %G_0x423ed__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x4dc85__rip__type = type <{ [4 x i8] }>
@G_0x4dc85__rip_= global %G_0x4dc85__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x4dfef__rip__type = type <{ [4 x i8] }>
@G_0x4dfef__rip_= global %G_0x4dfef__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cd3b0_type = type <{ [8 x i8] }>
@G_0x6cd3b0= global %G_0x6cd3b0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cd468_type = type <{ [8 x i8] }>
@G_0x6cd468= global %G_0x6cd468_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cd480_type = type <{ [4 x i8] }>
@G_0x6cd480= global %G_0x6cd480_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d1f98_type = type <{ [4 x i8] }>
@G_0x6d1f98= global %G_0x6d1f98_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d1fa0_type = type <{ [4 x i8] }>
@G_0x6d1fa0= global %G_0x6d1fa0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d1fa4_type = type <{ [4 x i8] }>
@G_0x6d1fa4= global %G_0x6d1fa4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d32c4_type = type <{ [4 x i8] }>
@G_0x6d32c4= global %G_0x6d32c4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f934c_type = type <{ [1 x i8] }>
@G_0x6f934c= global %G_0x6f934c_type <{ [1 x i8] c"\00" }>
%G_0x6f968c_type = type <{ [4 x i8] }>
@G_0x6f968c= global %G_0x6f968c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f9734_type = type <{ [4 x i8] }>
@G_0x6f9734= global %G_0x6f9734_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
@G_0x70fcf0= global %G_0x70fcf0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x70fd54_type = type <{ [4 x i8] }>
@G_0x70fd54= global %G_0x70fd54_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x70fd58_type = type <{ [4 x i8] }>
@G_0x70fd58= global %G_0x70fd58_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710010_type = type <{ [4 x i8] }>
@G_0x710010= global %G_0x710010_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710014_type = type <{ [4 x i8] }>
@G_0x710014= global %G_0x710014_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x722ca8_type = type <{ [4 x i8] }>
@G_0x722ca8= global %G_0x722ca8_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x72369c_type = type <{ [4 x i8] }>
@G_0x72369c= global %G_0x72369c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x726418_type = type <{ [8 x i8] }>
@G_0x726418= global %G_0x726418_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6cbc30_type = type <{ [8 x i8] }>
@G__0x6cbc30= global %G__0x6cbc30_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @BlockMotionSearch(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .BlockMotionSearch:	 RIP: 46e520	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 46e520	 Bytes: 1
  %loadMem_46e520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e520 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e520)
  store %struct.Memory* %call_46e520, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 46e521	 Bytes: 3
  %loadMem_46e521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e521 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e521)
  store %struct.Memory* %call_46e521, %struct.Memory** %MEMORY

  ; Code: pushq %r15	 RIP: 46e524	 Bytes: 2
  %loadMem_46e524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e524 = call %struct.Memory* @routine_pushq__r15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e524)
  store %struct.Memory* %call_46e524, %struct.Memory** %MEMORY

  ; Code: pushq %r14	 RIP: 46e526	 Bytes: 2
  %loadMem_46e526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e526 = call %struct.Memory* @routine_pushq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e526)
  store %struct.Memory* %call_46e526, %struct.Memory** %MEMORY

  ; Code: pushq %r13	 RIP: 46e528	 Bytes: 2
  %loadMem_46e528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e528 = call %struct.Memory* @routine_pushq__r13(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e528)
  store %struct.Memory* %call_46e528, %struct.Memory** %MEMORY

  ; Code: pushq %r12	 RIP: 46e52a	 Bytes: 2
  %loadMem_46e52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e52a = call %struct.Memory* @routine_pushq__r12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e52a)
  store %struct.Memory* %call_46e52a, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 46e52c	 Bytes: 1
  %loadMem_46e52c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e52c = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e52c)
  store %struct.Memory* %call_46e52c, %struct.Memory** %MEMORY

  ; Code: subq $0x288, %rsp	 RIP: 46e52d	 Bytes: 7
  %loadMem_46e52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e52d = call %struct.Memory* @routine_subq__0x288___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e52d)
  store %struct.Memory* %call_46e52d, %struct.Memory** %MEMORY

  ; Code: movw %di, %ax	 RIP: 46e534	 Bytes: 3
  %loadMem_46e534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e534 = call %struct.Memory* @routine_movw__di___ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e534)
  store %struct.Memory* %call_46e534, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0x2a(%rbp)	 RIP: 46e537	 Bytes: 4
  %loadMem_46e537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e537 = call %struct.Memory* @routine_movw__ax__MINUS0x2a__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e537)
  store %struct.Memory* %call_46e537, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x30(%rbp)	 RIP: 46e53b	 Bytes: 3
  %loadMem_46e53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e53b = call %struct.Memory* @routine_movl__esi__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e53b)
  store %struct.Memory* %call_46e53b, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x34(%rbp)	 RIP: 46e53e	 Bytes: 3
  %loadMem_46e53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e53e = call %struct.Memory* @routine_movl__edx__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e53e)
  store %struct.Memory* %call_46e53e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x38(%rbp)	 RIP: 46e541	 Bytes: 3
  %loadMem_46e541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e541 = call %struct.Memory* @routine_movl__ecx__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e541)
  store %struct.Memory* %call_46e541, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x3c(%rbp)	 RIP: 46e544	 Bytes: 4
  %loadMem_46e544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e544 = call %struct.Memory* @routine_movl__r8d__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e544)
  store %struct.Memory* %call_46e544, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x40(%rbp)	 RIP: 46e548	 Bytes: 4
  %loadMem_46e548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e548 = call %struct.Memory* @routine_movl__r9d__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e548)
  store %struct.Memory* %call_46e548, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x48(%rbp)	 RIP: 46e54c	 Bytes: 5
  %loadMem_46e54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e54c = call %struct.Memory* @routine_movsd__xmm0__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e54c)
  store %struct.Memory* %call_46e54c, %struct.Memory** %MEMORY

  ; Code: movl $0x7fffffff, -0x5c(%rbp)	 RIP: 46e551	 Bytes: 7
  %loadMem_46e551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e551 = call %struct.Memory* @routine_movl__0x7fffffff__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e551)
  store %struct.Memory* %call_46e551, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %ecx	 RIP: 46e558	 Bytes: 3
  %loadMem_46e558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e558 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e558)
  store %struct.Memory* %call_46e558, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x60(%rbp)	 RIP: 46e55b	 Bytes: 3
  %loadMem_46e55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e55b = call %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e55b)
  store %struct.Memory* %call_46e55b, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %ecx	 RIP: 46e55e	 Bytes: 3
  %loadMem_46e55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e55e = call %struct.Memory* @routine_movl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e55e)
  store %struct.Memory* %call_46e55e, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 46e561	 Bytes: 3
  %loadMem_46e561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e561 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e561)
  store %struct.Memory* %call_46e561, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x64(%rbp)	 RIP: 46e564	 Bytes: 3
  %loadMem_46e564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e564 = call %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e564)
  store %struct.Memory* %call_46e564, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %ecx	 RIP: 46e567	 Bytes: 3
  %loadMem_46e567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e567 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e567)
  store %struct.Memory* %call_46e567, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 46e56a	 Bytes: 3
  %loadMem_46e56a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e56a = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e56a)
  store %struct.Memory* %call_46e56a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x68(%rbp)	 RIP: 46e56d	 Bytes: 3
  %loadMem_46e56d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e56d = call %struct.Memory* @routine_movl__ecx__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e56d)
  store %struct.Memory* %call_46e56d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %r10	 RIP: 46e570	 Bytes: 8
  %loadMem_46e570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e570 = call %struct.Memory* @routine_movq_0x6cb8f8___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e570)
  store %struct.Memory* %call_46e570, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %r11	 RIP: 46e578	 Bytes: 4
  %loadMem_46e578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e578 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e578)
  store %struct.Memory* %call_46e578, %struct.Memory** %MEMORY

  ; Code: movl 0x50(%r10,%r11,8), %ecx	 RIP: 46e57c	 Bytes: 5
  %loadMem_46e57c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e57c = call %struct.Memory* @routine_movl_0x50__r10__r11_8____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e57c)
  store %struct.Memory* %call_46e57c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x6c(%rbp)	 RIP: 46e581	 Bytes: 3
  %loadMem_46e581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e581 = call %struct.Memory* @routine_movl__ecx__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e581)
  store %struct.Memory* %call_46e581, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %r10	 RIP: 46e584	 Bytes: 8
  %loadMem_46e584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e584 = call %struct.Memory* @routine_movq_0x6cb8f8___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e584)
  store %struct.Memory* %call_46e584, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %r11	 RIP: 46e58c	 Bytes: 4
  %loadMem_46e58c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e58c = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e58c)
  store %struct.Memory* %call_46e58c, %struct.Memory** %MEMORY

  ; Code: movl 0x54(%r10,%r11,8), %ecx	 RIP: 46e590	 Bytes: 5
  %loadMem_46e590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e590 = call %struct.Memory* @routine_movl_0x54__r10__r11_8____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e590)
  store %struct.Memory* %call_46e590, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x70(%rbp)	 RIP: 46e595	 Bytes: 3
  %loadMem_46e595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e595 = call %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e595)
  store %struct.Memory* %call_46e595, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r10	 RIP: 46e598	 Bytes: 8
  %loadMem_46e598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e598 = call %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e598)
  store %struct.Memory* %call_46e598, %struct.Memory** %MEMORY

  ; Code: movl 0xa8(%r10), %ecx	 RIP: 46e5a0	 Bytes: 7
  %loadMem_46e5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5a0 = call %struct.Memory* @routine_movl_0xa8__r10____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5a0)
  store %struct.Memory* %call_46e5a0, %struct.Memory** %MEMORY

  ; Code: addl -0x34(%rbp), %ecx	 RIP: 46e5a7	 Bytes: 3
  %loadMem_46e5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5a7 = call %struct.Memory* @routine_addl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5a7)
  store %struct.Memory* %call_46e5a7, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x74(%rbp)	 RIP: 46e5aa	 Bytes: 3
  %loadMem_46e5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5aa = call %struct.Memory* @routine_movl__ecx__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5aa)
  store %struct.Memory* %call_46e5aa, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r10	 RIP: 46e5ad	 Bytes: 8
  %loadMem_46e5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5ad = call %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5ad)
  store %struct.Memory* %call_46e5ad, %struct.Memory** %MEMORY

  ; Code: movl 0xac(%r10), %ecx	 RIP: 46e5b5	 Bytes: 7
  %loadMem_46e5b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5b5 = call %struct.Memory* @routine_movl_0xac__r10____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5b5)
  store %struct.Memory* %call_46e5b5, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %ecx	 RIP: 46e5bc	 Bytes: 3
  %loadMem_46e5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5bc = call %struct.Memory* @routine_addl_MINUS0x38__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5bc)
  store %struct.Memory* %call_46e5bc, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x78(%rbp)	 RIP: 46e5bf	 Bytes: 3
  %loadMem_46e5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5bf = call %struct.Memory* @routine_movl__ecx__MINUS0x78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5bf)
  store %struct.Memory* %call_46e5bf, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %r10	 RIP: 46e5c2	 Bytes: 8
  %loadMem_46e5c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5c2 = call %struct.Memory* @routine_movq_0x70fcf0___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5c2)
  store %struct.Memory* %call_46e5c2, %struct.Memory** %MEMORY

  ; Code: movq 0x1968(%r10), %r10	 RIP: 46e5ca	 Bytes: 7
  %loadMem_46e5ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5ca = call %struct.Memory* @routine_movq_0x1968__r10____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5ca)
  store %struct.Memory* %call_46e5ca, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r11	 RIP: 46e5d1	 Bytes: 4
  %loadMem_46e5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5d1 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5d1)
  store %struct.Memory* %call_46e5d1, %struct.Memory** %MEMORY

  ; Code: movq (%r10,%r11,8), %r10	 RIP: 46e5d5	 Bytes: 4
  %loadMem_46e5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5d5 = call %struct.Memory* @routine_movq___r10__r11_8____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5d5)
  store %struct.Memory* %call_46e5d5, %struct.Memory** %MEMORY

  ; Code: movq %r10, -0x88(%rbp)	 RIP: 46e5d9	 Bytes: 7
  %loadMem_46e5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5d9 = call %struct.Memory* @routine_movq__r10__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5d9)
  store %struct.Memory* %call_46e5d9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r10	 RIP: 46e5e0	 Bytes: 8
  %loadMem_46e5e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5e0 = call %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5e0)
  store %struct.Memory* %call_46e5e0, %struct.Memory** %MEMORY

  ; Code: movq 0x118f8(%r10), %r10	 RIP: 46e5e8	 Bytes: 7
  %loadMem_46e5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5e8 = call %struct.Memory* @routine_movq_0x118f8__r10____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5e8)
  store %struct.Memory* %call_46e5e8, %struct.Memory** %MEMORY

  ; Code: movq %r10, -0x90(%rbp)	 RIP: 46e5ef	 Bytes: 7
  %loadMem_46e5ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5ef = call %struct.Memory* @routine_movq__r10__MINUS0x90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5ef)
  store %struct.Memory* %call_46e5ef, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xb8(%rbp)	 RIP: 46e5f6	 Bytes: 10
  %loadMem_46e5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e5f6 = call %struct.Memory* @routine_movl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e5f6)
  store %struct.Memory* %call_46e5f6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xbc(%rbp)	 RIP: 46e600	 Bytes: 10
  %loadMem_46e600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e600 = call %struct.Memory* @routine_movl__0x0__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e600)
  store %struct.Memory* %call_46e600, %struct.Memory** %MEMORY

  ; Code: movq $0x0, -0xa0(%rbp)	 RIP: 46e60a	 Bytes: 11
  %loadMem_46e60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e60a = call %struct.Memory* @routine_movq__0x0__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e60a)
  store %struct.Memory* %call_46e60a, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0x98(%rbp)	 RIP: 46e615	 Bytes: 9
  %loadMem_46e615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e615 = call %struct.Memory* @routine_movw__0x0__MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e615)
  store %struct.Memory* %call_46e615, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0x96(%rbp)	 RIP: 46e61e	 Bytes: 9
  %loadMem_46e61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e61e = call %struct.Memory* @routine_movw__0x0__MINUS0x96__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e61e)
  store %struct.Memory* %call_46e61e, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0x94(%rbp)	 RIP: 46e627	 Bytes: 9
  %loadMem_46e627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e627 = call %struct.Memory* @routine_movw__0x0__MINUS0x94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e627)
  store %struct.Memory* %call_46e627, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %r10	 RIP: 46e630	 Bytes: 8
  %loadMem_46e630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e630 = call %struct.Memory* @routine_movq_0x6cb8f8___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e630)
  store %struct.Memory* %call_46e630, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xcdc(%r10)	 RIP: 46e638	 Bytes: 8
  %loadMem_46e638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e638 = call %struct.Memory* @routine_cmpl__0x0__0xcdc__r10_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e638)
  store %struct.Memory* %call_46e638, %struct.Memory** %MEMORY

  ; Code: je .L_46e69c	 RIP: 46e640	 Bytes: 6
  %loadMem_46e640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e640 = call %struct.Memory* @routine_je_.L_46e69c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e640, i8* %BRANCH_TAKEN, i64 92, i64 6, i64 6)
  store %struct.Memory* %call_46e640, %struct.Memory** %MEMORY

  %loadBr_46e640 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e640 = icmp eq i8 %loadBr_46e640, 1
  br i1 %cmpBr_46e640, label %block_.L_46e69c, label %block_46e646

block_46e646:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 46e646	 Bytes: 8
  %loadMem_46e646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e646 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e646)
  store %struct.Memory* %call_46e646, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rax), %ecx	 RIP: 46e64e	 Bytes: 6
  %loadMem_46e64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e64e = call %struct.Memory* @routine_movl_0x4d4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e64e)
  store %struct.Memory* %call_46e64e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xb8(%rbp)	 RIP: 46e654	 Bytes: 6
  %loadMem_46e654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e654 = call %struct.Memory* @routine_movl__ecx__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e654)
  store %struct.Memory* %call_46e654, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xb8(%rbp)	 RIP: 46e65a	 Bytes: 7
  %loadMem_46e65a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e65a = call %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e65a)
  store %struct.Memory* %call_46e65a, %struct.Memory** %MEMORY

  ; Code: je .L_46e683	 RIP: 46e661	 Bytes: 6
  %loadMem_46e661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e661 = call %struct.Memory* @routine_je_.L_46e683(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e661, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_46e661, %struct.Memory** %MEMORY

  %loadBr_46e661 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e661 = icmp eq i8 %loadBr_46e661, 1
  br i1 %cmpBr_46e661, label %block_.L_46e683, label %block_46e667

block_46e667:
  ; Code: movl 0x722ca8, %eax	 RIP: 46e667	 Bytes: 7
  %loadMem_46e667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e667 = call %struct.Memory* @routine_movl_0x722ca8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e667)
  store %struct.Memory* %call_46e667, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46e66e	 Bytes: 1
  %loadMem_46e66e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e66e = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e66e)
  store %struct.Memory* %call_46e66e, %struct.Memory** %MEMORY

  ; Code: idivl -0xb8(%rbp)	 RIP: 46e66f	 Bytes: 6
  %loadMem_46e66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e66f = call %struct.Memory* @routine_idivl_MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e66f)
  store %struct.Memory* %call_46e66f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 46e675	 Bytes: 3
  %loadMem_46e675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e675 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e675)
  store %struct.Memory* %call_46e675, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xf0(%rbp)	 RIP: 46e678	 Bytes: 6
  %loadMem_46e678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e678 = call %struct.Memory* @routine_movl__edx__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e678)
  store %struct.Memory* %call_46e678, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46e690	 RIP: 46e67e	 Bytes: 5
  %loadMem_46e67e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e67e = call %struct.Memory* @routine_jmpq_.L_46e690(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e67e, i64 18, i64 5)
  store %struct.Memory* %call_46e67e, %struct.Memory** %MEMORY

  br label %block_.L_46e690

  ; Code: .L_46e683:	 RIP: 46e683	 Bytes: 0
block_.L_46e683:

  ; Code: xorl %eax, %eax	 RIP: 46e683	 Bytes: 2
  %loadMem_46e683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e683 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e683)
  store %struct.Memory* %call_46e683, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf0(%rbp)	 RIP: 46e685	 Bytes: 6
  %loadMem_46e685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e685 = call %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e685)
  store %struct.Memory* %call_46e685, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46e690	 RIP: 46e68b	 Bytes: 5
  %loadMem_46e68b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e68b = call %struct.Memory* @routine_jmpq_.L_46e690(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e68b, i64 5, i64 5)
  store %struct.Memory* %call_46e68b, %struct.Memory** %MEMORY

  br label %block_.L_46e690

  ; Code: .L_46e690:	 RIP: 46e690	 Bytes: 0
block_.L_46e690:

  ; Code: movl -0xf0(%rbp), %eax	 RIP: 46e690	 Bytes: 6
  %loadMem_46e690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e690 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e690)
  store %struct.Memory* %call_46e690, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 46e696	 Bytes: 6
  %loadMem_46e696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e696 = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e696)
  store %struct.Memory* %call_46e696, %struct.Memory** %MEMORY

  ; Code: .L_46e69c:	 RIP: 46e69c	 Bytes: 0
  br label %block_.L_46e69c
block_.L_46e69c:

  ; Code: movq 0x6cb900, %rax	 RIP: 46e69c	 Bytes: 8
  %loadMem_46e69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e69c = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e69c)
  store %struct.Memory* %call_46e69c, %struct.Memory** %MEMORY

  ; Code: movq 0x118f0(%rax), %rax	 RIP: 46e6a4	 Bytes: 7
  %loadMem_46e6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6a4 = call %struct.Memory* @routine_movq_0x118f0__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6a4)
  store %struct.Memory* %call_46e6a4, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46e6ab	 Bytes: 4
  %loadMem_46e6ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6ab = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6ab)
  store %struct.Memory* %call_46e6ab, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e6af	 Bytes: 4
  %loadMem_46e6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6af = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6af)
  store %struct.Memory* %call_46e6af, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46e6b3	 Bytes: 4
  %loadMem_46e6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6b3 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6b3)
  store %struct.Memory* %call_46e6b3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e6b7	 Bytes: 4
  %loadMem_46e6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6b7 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6b7)
  store %struct.Memory* %call_46e6b7, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46e6bb	 Bytes: 4
  %loadMem_46e6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6bb = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6bb)
  store %struct.Memory* %call_46e6bb, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e6bf	 Bytes: 4
  %loadMem_46e6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6bf = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6bf)
  store %struct.Memory* %call_46e6bf, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46e6c3	 Bytes: 5
  %loadMem_46e6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6c3 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6c3)
  store %struct.Memory* %call_46e6c3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e6c8	 Bytes: 4
  %loadMem_46e6c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6c8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6c8)
  store %struct.Memory* %call_46e6c8, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46e6cc	 Bytes: 4
  %loadMem_46e6cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6cc = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6cc)
  store %struct.Memory* %call_46e6cc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e6d0	 Bytes: 4
  %loadMem_46e6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6d0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6d0)
  store %struct.Memory* %call_46e6d0, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x80(%rbp)	 RIP: 46e6d4	 Bytes: 4
  %loadMem_46e6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6d4 = call %struct.Memory* @routine_movq__rax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6d4)
  store %struct.Memory* %call_46e6d4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x58(%rbp)	 RIP: 46e6d8	 Bytes: 7
  %loadMem_46e6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6d8 = call %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6d8)
  store %struct.Memory* %call_46e6d8, %struct.Memory** %MEMORY

  ; Code: .L_46e6df:	 RIP: 46e6df	 Bytes: 0
  br label %block_.L_46e6df
block_.L_46e6df:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 46e6df	 Bytes: 3
  %loadMem_46e6df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6df = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6df)
  store %struct.Memory* %call_46e6df, %struct.Memory** %MEMORY

  ; Code: cmpl -0x70(%rbp), %eax	 RIP: 46e6e2	 Bytes: 3
  %loadMem_46e6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6e2 = call %struct.Memory* @routine_cmpl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6e2)
  store %struct.Memory* %call_46e6e2, %struct.Memory** %MEMORY

  ; Code: jge .L_46e755	 RIP: 46e6e5	 Bytes: 6
  %loadMem_46e6e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6e5 = call %struct.Memory* @routine_jge_.L_46e755(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6e5, i8* %BRANCH_TAKEN, i64 112, i64 6, i64 6)
  store %struct.Memory* %call_46e6e5, %struct.Memory** %MEMORY

  %loadBr_46e6e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e6e5 = icmp eq i8 %loadBr_46e6e5, 1
  br i1 %cmpBr_46e6e5, label %block_.L_46e755, label %block_46e6eb

block_46e6eb:
  ; Code: movl $0x0, -0x54(%rbp)	 RIP: 46e6eb	 Bytes: 7
  %loadMem_46e6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6eb = call %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6eb)
  store %struct.Memory* %call_46e6eb, %struct.Memory** %MEMORY

  ; Code: .L_46e6f2:	 RIP: 46e6f2	 Bytes: 0
  br label %block_.L_46e6f2
block_.L_46e6f2:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 46e6f2	 Bytes: 3
  %loadMem_46e6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6f2 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6f2)
  store %struct.Memory* %call_46e6f2, %struct.Memory** %MEMORY

  ; Code: cmpl -0x6c(%rbp), %eax	 RIP: 46e6f5	 Bytes: 3
  %loadMem_46e6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6f5 = call %struct.Memory* @routine_cmpl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6f5)
  store %struct.Memory* %call_46e6f5, %struct.Memory** %MEMORY

  ; Code: jge .L_46e742	 RIP: 46e6f8	 Bytes: 6
  %loadMem_46e6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6f8 = call %struct.Memory* @routine_jge_.L_46e742(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6f8, i8* %BRANCH_TAKEN, i64 74, i64 6, i64 6)
  store %struct.Memory* %call_46e6f8, %struct.Memory** %MEMORY

  %loadBr_46e6f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e6f8 = icmp eq i8 %loadBr_46e6f8, 1
  br i1 %cmpBr_46e6f8, label %block_.L_46e742, label %block_46e6fe

block_46e6fe:
  ; Code: movq 0x726418, %rax	 RIP: 46e6fe	 Bytes: 8
  %loadMem_46e6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e6fe = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e6fe)
  store %struct.Memory* %call_46e6fe, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %ecx	 RIP: 46e706	 Bytes: 3
  %loadMem_46e706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e706 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e706)
  store %struct.Memory* %call_46e706, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %ecx	 RIP: 46e709	 Bytes: 3
  %loadMem_46e709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e709 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e709)
  store %struct.Memory* %call_46e709, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 46e70c	 Bytes: 3
  %loadMem_46e70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e70c = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e70c)
  store %struct.Memory* %call_46e70c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 46e70f	 Bytes: 4
  %loadMem_46e70f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e70f = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e70f)
  store %struct.Memory* %call_46e70f, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %ecx	 RIP: 46e713	 Bytes: 3
  %loadMem_46e713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e713 = call %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e713)
  store %struct.Memory* %call_46e713, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %ecx	 RIP: 46e716	 Bytes: 3
  %loadMem_46e716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e716 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e716)
  store %struct.Memory* %call_46e716, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 46e719	 Bytes: 3
  %loadMem_46e719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e719 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e719)
  store %struct.Memory* %call_46e719, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rdx,2), %si	 RIP: 46e71c	 Bytes: 4
  %loadMem_46e71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e71c = call %struct.Memory* @routine_movw___rax__rdx_2____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e71c)
  store %struct.Memory* %call_46e71c, %struct.Memory** %MEMORY

  ; Code: movslq -0x58(%rbp), %rax	 RIP: 46e720	 Bytes: 4
  %loadMem_46e720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e720 = call %struct.Memory* @routine_movslq_MINUS0x58__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e720)
  store %struct.Memory* %call_46e720, %struct.Memory** %MEMORY

  ; Code: movq 0x6cbc30(,%rax,8), %rax	 RIP: 46e724	 Bytes: 8
  %loadMem_46e724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e724 = call %struct.Memory* @routine_movq_0x6cbc30___rax_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e724)
  store %struct.Memory* %call_46e724, %struct.Memory** %MEMORY

  ; Code: movslq -0x54(%rbp), %rdx	 RIP: 46e72c	 Bytes: 4
  %loadMem_46e72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e72c = call %struct.Memory* @routine_movslq_MINUS0x54__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e72c)
  store %struct.Memory* %call_46e72c, %struct.Memory** %MEMORY

  ; Code: movw %si, (%rax,%rdx,2)	 RIP: 46e730	 Bytes: 4
  %loadMem_46e730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e730 = call %struct.Memory* @routine_movw__si____rax__rdx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e730)
  store %struct.Memory* %call_46e730, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %eax	 RIP: 46e734	 Bytes: 3
  %loadMem_46e734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e734 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e734)
  store %struct.Memory* %call_46e734, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 46e737	 Bytes: 3
  %loadMem_46e737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e737 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e737)
  store %struct.Memory* %call_46e737, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 46e73a	 Bytes: 3
  %loadMem_46e73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e73a = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e73a)
  store %struct.Memory* %call_46e73a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46e6f2	 RIP: 46e73d	 Bytes: 5
  %loadMem_46e73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e73d = call %struct.Memory* @routine_jmpq_.L_46e6f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e73d, i64 -75, i64 5)
  store %struct.Memory* %call_46e73d, %struct.Memory** %MEMORY

  br label %block_.L_46e6f2

  ; Code: .L_46e742:	 RIP: 46e742	 Bytes: 0
block_.L_46e742:

  ; Code: jmpq .L_46e747	 RIP: 46e742	 Bytes: 5
  %loadMem_46e742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e742 = call %struct.Memory* @routine_jmpq_.L_46e747(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e742, i64 5, i64 5)
  store %struct.Memory* %call_46e742, %struct.Memory** %MEMORY

  br label %block_.L_46e747

  ; Code: .L_46e747:	 RIP: 46e747	 Bytes: 0
block_.L_46e747:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 46e747	 Bytes: 3
  %loadMem_46e747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e747 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e747)
  store %struct.Memory* %call_46e747, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 46e74a	 Bytes: 3
  %loadMem_46e74a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e74a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e74a)
  store %struct.Memory* %call_46e74a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 46e74d	 Bytes: 3
  %loadMem_46e74d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e74d = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e74d)
  store %struct.Memory* %call_46e74d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46e6df	 RIP: 46e750	 Bytes: 5
  %loadMem_46e750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e750 = call %struct.Memory* @routine_jmpq_.L_46e6df(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e750, i64 -113, i64 5)
  store %struct.Memory* %call_46e750, %struct.Memory** %MEMORY

  br label %block_.L_46e6df

  ; Code: .L_46e755:	 RIP: 46e755	 Bytes: 0
block_.L_46e755:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 46e755	 Bytes: 8
  %loadMem_46e755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e755 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e755)
  store %struct.Memory* %call_46e755, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xcdc(%rax)	 RIP: 46e75d	 Bytes: 7
  %loadMem_46e75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e75d = call %struct.Memory* @routine_cmpl__0x0__0xcdc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e75d)
  store %struct.Memory* %call_46e75d, %struct.Memory** %MEMORY

  ; Code: je .L_46fcc8	 RIP: 46e764	 Bytes: 6
  %loadMem_46e764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e764 = call %struct.Memory* @routine_je_.L_46fcc8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e764, i8* %BRANCH_TAKEN, i64 5476, i64 6, i64 6)
  store %struct.Memory* %call_46e764, %struct.Memory** %MEMORY

  %loadBr_46e764 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e764 = icmp eq i8 %loadBr_46e764, 1
  br i1 %cmpBr_46e764, label %block_.L_46fcc8, label %block_46e76a

block_46e76a:
  ; Code: cmpl $0x6, -0x3c(%rbp)	 RIP: 46e76a	 Bytes: 4
  %loadMem_46e76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e76a = call %struct.Memory* @routine_cmpl__0x6__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e76a)
  store %struct.Memory* %call_46e76a, %struct.Memory** %MEMORY

  ; Code: jle .L_46e8b8	 RIP: 46e76e	 Bytes: 6
  %loadMem_46e76e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e76e = call %struct.Memory* @routine_jle_.L_46e8b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e76e, i8* %BRANCH_TAKEN, i64 330, i64 6, i64 6)
  store %struct.Memory* %call_46e76e, %struct.Memory** %MEMORY

  %loadBr_46e76e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e76e = icmp eq i8 %loadBr_46e76e, 1
  br i1 %cmpBr_46e76e, label %block_.L_46e8b8, label %block_46e774

block_46e774:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46e774	 Bytes: 7
  %loadMem_46e774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e774 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e774)
  store %struct.Memory* %call_46e774, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46e77b	 Bytes: 4
  %loadMem_46e77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e77b = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e77b)
  store %struct.Memory* %call_46e77b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e77f	 Bytes: 4
  %loadMem_46e77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e77f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e77f)
  store %struct.Memory* %call_46e77f, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46e783	 Bytes: 4
  %loadMem_46e783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e783 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e783)
  store %struct.Memory* %call_46e783, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e787	 Bytes: 4
  %loadMem_46e787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e787 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e787)
  store %struct.Memory* %call_46e787, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46e78b	 Bytes: 4
  %loadMem_46e78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e78b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e78b)
  store %struct.Memory* %call_46e78b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e78f	 Bytes: 4
  %loadMem_46e78f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e78f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e78f)
  store %struct.Memory* %call_46e78f, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46e793	 Bytes: 5
  %loadMem_46e793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e793 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e793)
  store %struct.Memory* %call_46e793, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e798	 Bytes: 4
  %loadMem_46e798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e798 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e798)
  store %struct.Memory* %call_46e798, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46e79c	 Bytes: 4
  %loadMem_46e79c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e79c = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e79c)
  store %struct.Memory* %call_46e79c, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46e7a0	 Bytes: 3
  %loadMem_46e7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7a0 = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7a0)
  store %struct.Memory* %call_46e7a0, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46e7a3	 Bytes: 7
  %loadMem_46e7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7a3 = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7a3)
  store %struct.Memory* %call_46e7a3, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46e7aa	 Bytes: 7
  %loadMem_46e7aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7aa = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7aa)
  store %struct.Memory* %call_46e7aa, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46e7b1	 Bytes: 4
  %loadMem_46e7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7b1 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7b1)
  store %struct.Memory* %call_46e7b1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e7b5	 Bytes: 4
  %loadMem_46e7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7b5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7b5)
  store %struct.Memory* %call_46e7b5, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46e7b9	 Bytes: 4
  %loadMem_46e7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7b9 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7b9)
  store %struct.Memory* %call_46e7b9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e7bd	 Bytes: 4
  %loadMem_46e7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7bd = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7bd)
  store %struct.Memory* %call_46e7bd, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46e7c1	 Bytes: 4
  %loadMem_46e7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7c1 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7c1)
  store %struct.Memory* %call_46e7c1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e7c5	 Bytes: 4
  %loadMem_46e7c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7c5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7c5)
  store %struct.Memory* %call_46e7c5, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46e7c9	 Bytes: 5
  %loadMem_46e7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7c9 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7c9)
  store %struct.Memory* %call_46e7c9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e7ce	 Bytes: 4
  %loadMem_46e7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7ce = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7ce)
  store %struct.Memory* %call_46e7ce, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46e7d2	 Bytes: 4
  %loadMem_46e7d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7d2 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7d2)
  store %struct.Memory* %call_46e7d2, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46e7d6	 Bytes: 4
  %loadMem_46e7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7d6 = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7d6)
  store %struct.Memory* %call_46e7d6, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46e7da	 Bytes: 7
  %loadMem_46e7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7da = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7da)
  store %struct.Memory* %call_46e7da, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46e7e1	 Bytes: 4
  %loadMem_46e7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7e1 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7e1)
  store %struct.Memory* %call_46e7e1, %struct.Memory** %MEMORY

  ; Code: jne .L_46e83d	 RIP: 46e7e5	 Bytes: 6
  %loadMem_46e7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7e5 = call %struct.Memory* @routine_jne_.L_46e83d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7e5, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46e7e5, %struct.Memory** %MEMORY

  %loadBr_46e7e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e7e5 = icmp eq i8 %loadBr_46e7e5, 1
  br i1 %cmpBr_46e7e5, label %block_.L_46e83d, label %block_46e7eb

block_46e7eb:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46e7eb	 Bytes: 8
  %loadMem_46e7eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7eb = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7eb)
  store %struct.Memory* %call_46e7eb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e7f3	 Bytes: 8
  %loadMem_46e7f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7f3 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7f3)
  store %struct.Memory* %call_46e7f3, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46e7fb	 Bytes: 6
  %loadMem_46e7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e7fb = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e7fb)
  store %struct.Memory* %call_46e7fb, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e801	 Bytes: 3
  %loadMem_46e801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e801 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e801)
  store %struct.Memory* %call_46e801, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46e804	 Bytes: 3
  %loadMem_46e804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e804 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e804)
  store %struct.Memory* %call_46e804, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e807	 Bytes: 3
  %loadMem_46e807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e807 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e807)
  store %struct.Memory* %call_46e807, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e80a	 Bytes: 4
  %loadMem_46e80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e80a = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e80a)
  store %struct.Memory* %call_46e80a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e80e	 Bytes: 8
  %loadMem_46e80e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e80e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e80e)
  store %struct.Memory* %call_46e80e, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46e816	 Bytes: 6
  %loadMem_46e816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e816 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e816)
  store %struct.Memory* %call_46e816, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e81c	 Bytes: 3
  %loadMem_46e81c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e81c = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e81c)
  store %struct.Memory* %call_46e81c, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46e81f	 Bytes: 3
  %loadMem_46e81f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e81f = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e81f)
  store %struct.Memory* %call_46e81f, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e822	 Bytes: 3
  %loadMem_46e822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e822 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e822)
  store %struct.Memory* %call_46e822, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e825	 Bytes: 4
  %loadMem_46e825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e825 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e825)
  store %struct.Memory* %call_46e825, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46e829	 Bytes: 3
  %loadMem_46e829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e829 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e829)
  store %struct.Memory* %call_46e829, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46e82c	 Bytes: 4
  %loadMem_46e82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e82c = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e82c)
  store %struct.Memory* %call_46e82c, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46e830	 Bytes: 2
  %loadMem_46e830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e830 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e830)
  store %struct.Memory* %call_46e830, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xf4(%rbp)	 RIP: 46e832	 Bytes: 6
  %loadMem_46e832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e832 = call %struct.Memory* @routine_movl__edx__MINUS0xf4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e832)
  store %struct.Memory* %call_46e832, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46e890	 RIP: 46e838	 Bytes: 5
  %loadMem_46e838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e838 = call %struct.Memory* @routine_jmpq_.L_46e890(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e838, i64 88, i64 5)
  store %struct.Memory* %call_46e838, %struct.Memory** %MEMORY

  br label %block_.L_46e890

  ; Code: .L_46e83d:	 RIP: 46e83d	 Bytes: 0
block_.L_46e83d:

  ; Code: movq 0x6cd468, %rax	 RIP: 46e83d	 Bytes: 8
  %loadMem_46e83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e83d = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e83d)
  store %struct.Memory* %call_46e83d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e845	 Bytes: 8
  %loadMem_46e845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e845 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e845)
  store %struct.Memory* %call_46e845, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46e84d	 Bytes: 6
  %loadMem_46e84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e84d = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e84d)
  store %struct.Memory* %call_46e84d, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e853	 Bytes: 3
  %loadMem_46e853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e853 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e853)
  store %struct.Memory* %call_46e853, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46e856	 Bytes: 3
  %loadMem_46e856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e856 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e856)
  store %struct.Memory* %call_46e856, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e859	 Bytes: 3
  %loadMem_46e859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e859 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e859)
  store %struct.Memory* %call_46e859, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e85c	 Bytes: 4
  %loadMem_46e85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e85c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e85c)
  store %struct.Memory* %call_46e85c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e860	 Bytes: 8
  %loadMem_46e860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e860 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e860)
  store %struct.Memory* %call_46e860, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46e868	 Bytes: 6
  %loadMem_46e868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e868 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e868)
  store %struct.Memory* %call_46e868, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e86e	 Bytes: 3
  %loadMem_46e86e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e86e = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e86e)
  store %struct.Memory* %call_46e86e, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46e871	 Bytes: 3
  %loadMem_46e871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e871 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e871)
  store %struct.Memory* %call_46e871, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e874	 Bytes: 3
  %loadMem_46e874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e874 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e874)
  store %struct.Memory* %call_46e874, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e877	 Bytes: 4
  %loadMem_46e877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e877 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e877)
  store %struct.Memory* %call_46e877, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46e87b	 Bytes: 5
  %loadMem_46e87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e87b = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e87b)
  store %struct.Memory* %call_46e87b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e880	 Bytes: 4
  %loadMem_46e880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e880 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e880)
  store %struct.Memory* %call_46e880, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46e884	 Bytes: 4
  %loadMem_46e884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e884 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e884)
  store %struct.Memory* %call_46e884, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46e888	 Bytes: 2
  %loadMem_46e888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e888 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e888)
  store %struct.Memory* %call_46e888, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xf4(%rbp)	 RIP: 46e88a	 Bytes: 6
  %loadMem_46e88a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e88a = call %struct.Memory* @routine_movl__edx__MINUS0xf4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e88a)
  store %struct.Memory* %call_46e88a, %struct.Memory** %MEMORY

  ; Code: .L_46e890:	 RIP: 46e890	 Bytes: 0
  br label %block_.L_46e890
block_.L_46e890:

  ; Code: movl -0xf4(%rbp), %eax	 RIP: 46e890	 Bytes: 6
  %loadMem_46e890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e890 = call %struct.Memory* @routine_movl_MINUS0xf4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e890)
  store %struct.Memory* %call_46e890, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46e896	 Bytes: 5
  %loadMem_46e896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e896 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e896)
  store %struct.Memory* %call_46e896, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46e89b	 Bytes: 7
  %loadMem_46e89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e89b = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e89b)
  store %struct.Memory* %call_46e89b, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46e8a2	 Bytes: 7
  %loadMem_46e8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8a2 = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8a2)
  store %struct.Memory* %call_46e8a2, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46e8a9	 Bytes: 1
  %loadMem_46e8a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8a9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8a9)
  store %struct.Memory* %call_46e8a9, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46e8aa	 Bytes: 2
  %loadMem_46e8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8aa = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8aa)
  store %struct.Memory* %call_46e8aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46e8ac	 Bytes: 7
  %loadMem_46e8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8ac = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8ac)
  store %struct.Memory* %call_46e8ac, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46ecac	 RIP: 46e8b3	 Bytes: 5
  %loadMem_46e8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8b3 = call %struct.Memory* @routine_jmpq_.L_46ecac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8b3, i64 1017, i64 5)
  store %struct.Memory* %call_46e8b3, %struct.Memory** %MEMORY

  br label %block_.L_46ecac

  ; Code: .L_46e8b8:	 RIP: 46e8b8	 Bytes: 0
block_.L_46e8b8:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 46e8b8	 Bytes: 4
  %loadMem_46e8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8b8 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8b8)
  store %struct.Memory* %call_46e8b8, %struct.Memory** %MEMORY

  ; Code: jle .L_46ea06	 RIP: 46e8bc	 Bytes: 6
  %loadMem_46e8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8bc = call %struct.Memory* @routine_jle_.L_46ea06(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8bc, i8* %BRANCH_TAKEN, i64 330, i64 6, i64 6)
  store %struct.Memory* %call_46e8bc, %struct.Memory** %MEMORY

  %loadBr_46e8bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e8bc = icmp eq i8 %loadBr_46e8bc, 1
  br i1 %cmpBr_46e8bc, label %block_.L_46ea06, label %block_46e8c2

block_46e8c2:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46e8c2	 Bytes: 7
  %loadMem_46e8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8c2 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8c2)
  store %struct.Memory* %call_46e8c2, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46e8c9	 Bytes: 4
  %loadMem_46e8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8c9 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8c9)
  store %struct.Memory* %call_46e8c9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e8cd	 Bytes: 4
  %loadMem_46e8cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8cd = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8cd)
  store %struct.Memory* %call_46e8cd, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46e8d1	 Bytes: 4
  %loadMem_46e8d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8d1 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8d1)
  store %struct.Memory* %call_46e8d1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e8d5	 Bytes: 4
  %loadMem_46e8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8d5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8d5)
  store %struct.Memory* %call_46e8d5, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46e8d9	 Bytes: 4
  %loadMem_46e8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8d9 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8d9)
  store %struct.Memory* %call_46e8d9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e8dd	 Bytes: 4
  %loadMem_46e8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8dd = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8dd)
  store %struct.Memory* %call_46e8dd, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46e8e1	 Bytes: 5
  %loadMem_46e8e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8e1 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8e1)
  store %struct.Memory* %call_46e8e1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e8e6	 Bytes: 4
  %loadMem_46e8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8e6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8e6)
  store %struct.Memory* %call_46e8e6, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46e8ea	 Bytes: 4
  %loadMem_46e8ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8ea = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8ea)
  store %struct.Memory* %call_46e8ea, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46e8ee	 Bytes: 3
  %loadMem_46e8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8ee = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8ee)
  store %struct.Memory* %call_46e8ee, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46e8f1	 Bytes: 7
  %loadMem_46e8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8f1 = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8f1)
  store %struct.Memory* %call_46e8f1, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46e8f8	 Bytes: 7
  %loadMem_46e8f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8f8 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8f8)
  store %struct.Memory* %call_46e8f8, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46e8ff	 Bytes: 4
  %loadMem_46e8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e8ff = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e8ff)
  store %struct.Memory* %call_46e8ff, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e903	 Bytes: 4
  %loadMem_46e903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e903 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e903)
  store %struct.Memory* %call_46e903, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46e907	 Bytes: 4
  %loadMem_46e907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e907 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e907)
  store %struct.Memory* %call_46e907, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e90b	 Bytes: 4
  %loadMem_46e90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e90b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e90b)
  store %struct.Memory* %call_46e90b, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46e90f	 Bytes: 4
  %loadMem_46e90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e90f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e90f)
  store %struct.Memory* %call_46e90f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e913	 Bytes: 4
  %loadMem_46e913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e913 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e913)
  store %struct.Memory* %call_46e913, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46e917	 Bytes: 5
  %loadMem_46e917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e917 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e917)
  store %struct.Memory* %call_46e917, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e91c	 Bytes: 4
  %loadMem_46e91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e91c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e91c)
  store %struct.Memory* %call_46e91c, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46e920	 Bytes: 4
  %loadMem_46e920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e920 = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e920)
  store %struct.Memory* %call_46e920, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46e924	 Bytes: 4
  %loadMem_46e924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e924 = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e924)
  store %struct.Memory* %call_46e924, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46e928	 Bytes: 7
  %loadMem_46e928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e928 = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e928)
  store %struct.Memory* %call_46e928, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46e92f	 Bytes: 4
  %loadMem_46e92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e92f = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e92f)
  store %struct.Memory* %call_46e92f, %struct.Memory** %MEMORY

  ; Code: jne .L_46e98b	 RIP: 46e933	 Bytes: 6
  %loadMem_46e933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e933 = call %struct.Memory* @routine_jne_.L_46e98b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e933, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46e933, %struct.Memory** %MEMORY

  %loadBr_46e933 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46e933 = icmp eq i8 %loadBr_46e933, 1
  br i1 %cmpBr_46e933, label %block_.L_46e98b, label %block_46e939

block_46e939:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46e939	 Bytes: 8
  %loadMem_46e939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e939 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e939)
  store %struct.Memory* %call_46e939, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e941	 Bytes: 8
  %loadMem_46e941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e941 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e941)
  store %struct.Memory* %call_46e941, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46e949	 Bytes: 6
  %loadMem_46e949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e949 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e949)
  store %struct.Memory* %call_46e949, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e94f	 Bytes: 3
  %loadMem_46e94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e94f = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e94f)
  store %struct.Memory* %call_46e94f, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46e952	 Bytes: 3
  %loadMem_46e952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e952 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e952)
  store %struct.Memory* %call_46e952, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e955	 Bytes: 3
  %loadMem_46e955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e955 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e955)
  store %struct.Memory* %call_46e955, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e958	 Bytes: 4
  %loadMem_46e958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e958 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e958)
  store %struct.Memory* %call_46e958, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e95c	 Bytes: 8
  %loadMem_46e95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e95c = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e95c)
  store %struct.Memory* %call_46e95c, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46e964	 Bytes: 6
  %loadMem_46e964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e964 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e964)
  store %struct.Memory* %call_46e964, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e96a	 Bytes: 3
  %loadMem_46e96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e96a = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e96a)
  store %struct.Memory* %call_46e96a, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46e96d	 Bytes: 3
  %loadMem_46e96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e96d = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e96d)
  store %struct.Memory* %call_46e96d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e970	 Bytes: 3
  %loadMem_46e970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e970 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e970)
  store %struct.Memory* %call_46e970, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e973	 Bytes: 4
  %loadMem_46e973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e973 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e973)
  store %struct.Memory* %call_46e973, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46e977	 Bytes: 3
  %loadMem_46e977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e977 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e977)
  store %struct.Memory* %call_46e977, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46e97a	 Bytes: 4
  %loadMem_46e97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e97a = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e97a)
  store %struct.Memory* %call_46e97a, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46e97e	 Bytes: 2
  %loadMem_46e97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e97e = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e97e)
  store %struct.Memory* %call_46e97e, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xf8(%rbp)	 RIP: 46e980	 Bytes: 6
  %loadMem_46e980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e980 = call %struct.Memory* @routine_movl__edx__MINUS0xf8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e980)
  store %struct.Memory* %call_46e980, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46e9de	 RIP: 46e986	 Bytes: 5
  %loadMem_46e986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e986 = call %struct.Memory* @routine_jmpq_.L_46e9de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e986, i64 88, i64 5)
  store %struct.Memory* %call_46e986, %struct.Memory** %MEMORY

  br label %block_.L_46e9de

  ; Code: .L_46e98b:	 RIP: 46e98b	 Bytes: 0
block_.L_46e98b:

  ; Code: movq 0x6cd468, %rax	 RIP: 46e98b	 Bytes: 8
  %loadMem_46e98b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e98b = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e98b)
  store %struct.Memory* %call_46e98b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e993	 Bytes: 8
  %loadMem_46e993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e993 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e993)
  store %struct.Memory* %call_46e993, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46e99b	 Bytes: 6
  %loadMem_46e99b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e99b = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e99b)
  store %struct.Memory* %call_46e99b, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e9a1	 Bytes: 3
  %loadMem_46e9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9a1 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9a1)
  store %struct.Memory* %call_46e9a1, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46e9a4	 Bytes: 3
  %loadMem_46e9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9a4 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9a4)
  store %struct.Memory* %call_46e9a4, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e9a7	 Bytes: 3
  %loadMem_46e9a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9a7 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9a7)
  store %struct.Memory* %call_46e9a7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e9aa	 Bytes: 4
  %loadMem_46e9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9aa = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9aa)
  store %struct.Memory* %call_46e9aa, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46e9ae	 Bytes: 8
  %loadMem_46e9ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9ae = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9ae)
  store %struct.Memory* %call_46e9ae, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46e9b6	 Bytes: 6
  %loadMem_46e9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9b6 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9b6)
  store %struct.Memory* %call_46e9b6, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46e9bc	 Bytes: 3
  %loadMem_46e9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9bc = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9bc)
  store %struct.Memory* %call_46e9bc, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46e9bf	 Bytes: 3
  %loadMem_46e9bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9bf = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9bf)
  store %struct.Memory* %call_46e9bf, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46e9c2	 Bytes: 3
  %loadMem_46e9c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9c2 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9c2)
  store %struct.Memory* %call_46e9c2, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e9c5	 Bytes: 4
  %loadMem_46e9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9c5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9c5)
  store %struct.Memory* %call_46e9c5, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46e9c9	 Bytes: 5
  %loadMem_46e9c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9c9 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9c9)
  store %struct.Memory* %call_46e9c9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46e9ce	 Bytes: 4
  %loadMem_46e9ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9ce = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9ce)
  store %struct.Memory* %call_46e9ce, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46e9d2	 Bytes: 4
  %loadMem_46e9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9d2 = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9d2)
  store %struct.Memory* %call_46e9d2, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46e9d6	 Bytes: 2
  %loadMem_46e9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9d6 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9d6)
  store %struct.Memory* %call_46e9d6, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xf8(%rbp)	 RIP: 46e9d8	 Bytes: 6
  %loadMem_46e9d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9d8 = call %struct.Memory* @routine_movl__edx__MINUS0xf8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9d8)
  store %struct.Memory* %call_46e9d8, %struct.Memory** %MEMORY

  ; Code: .L_46e9de:	 RIP: 46e9de	 Bytes: 0
  br label %block_.L_46e9de
block_.L_46e9de:

  ; Code: movl -0xf8(%rbp), %eax	 RIP: 46e9de	 Bytes: 6
  %loadMem_46e9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9de = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9de)
  store %struct.Memory* %call_46e9de, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46e9e4	 Bytes: 5
  %loadMem_46e9e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9e4 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9e4)
  store %struct.Memory* %call_46e9e4, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46e9e9	 Bytes: 7
  %loadMem_46e9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9e9 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9e9)
  store %struct.Memory* %call_46e9e9, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46e9f0	 Bytes: 7
  %loadMem_46e9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9f0 = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9f0)
  store %struct.Memory* %call_46e9f0, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46e9f7	 Bytes: 1
  %loadMem_46e9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9f7 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9f7)
  store %struct.Memory* %call_46e9f7, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46e9f8	 Bytes: 2
  %loadMem_46e9f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9f8 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9f8)
  store %struct.Memory* %call_46e9f8, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46e9fa	 Bytes: 7
  %loadMem_46e9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46e9fa = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46e9fa)
  store %struct.Memory* %call_46e9fa, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46eca7	 RIP: 46ea01	 Bytes: 5
  %loadMem_46ea01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea01 = call %struct.Memory* @routine_jmpq_.L_46eca7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea01, i64 678, i64 5)
  store %struct.Memory* %call_46ea01, %struct.Memory** %MEMORY

  br label %block_.L_46eca7

  ; Code: .L_46ea06:	 RIP: 46ea06	 Bytes: 0
block_.L_46ea06:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 46ea06	 Bytes: 4
  %loadMem_46ea06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea06 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea06)
  store %struct.Memory* %call_46ea06, %struct.Memory** %MEMORY

  ; Code: jne .L_46eb54	 RIP: 46ea0a	 Bytes: 6
  %loadMem_46ea0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea0a = call %struct.Memory* @routine_jne_.L_46eb54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea0a, i8* %BRANCH_TAKEN, i64 330, i64 6, i64 6)
  store %struct.Memory* %call_46ea0a, %struct.Memory** %MEMORY

  %loadBr_46ea0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ea0a = icmp eq i8 %loadBr_46ea0a, 1
  br i1 %cmpBr_46ea0a, label %block_.L_46eb54, label %block_46ea10

block_46ea10:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46ea10	 Bytes: 7
  %loadMem_46ea10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea10 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea10)
  store %struct.Memory* %call_46ea10, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46ea17	 Bytes: 4
  %loadMem_46ea17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea17 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea17)
  store %struct.Memory* %call_46ea17, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea1b	 Bytes: 4
  %loadMem_46ea1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea1b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea1b)
  store %struct.Memory* %call_46ea1b, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46ea1f	 Bytes: 4
  %loadMem_46ea1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea1f = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea1f)
  store %struct.Memory* %call_46ea1f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea23	 Bytes: 4
  %loadMem_46ea23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea23 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea23)
  store %struct.Memory* %call_46ea23, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ea27	 Bytes: 4
  %loadMem_46ea27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea27 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea27)
  store %struct.Memory* %call_46ea27, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea2b	 Bytes: 4
  %loadMem_46ea2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea2b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea2b)
  store %struct.Memory* %call_46ea2b, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ea2f	 Bytes: 5
  %loadMem_46ea2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea2f = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea2f)
  store %struct.Memory* %call_46ea2f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea34	 Bytes: 4
  %loadMem_46ea34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea34 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea34)
  store %struct.Memory* %call_46ea34, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46ea38	 Bytes: 4
  %loadMem_46ea38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea38 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea38)
  store %struct.Memory* %call_46ea38, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46ea3c	 Bytes: 3
  %loadMem_46ea3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea3c = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea3c)
  store %struct.Memory* %call_46ea3c, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46ea3f	 Bytes: 7
  %loadMem_46ea3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea3f = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea3f)
  store %struct.Memory* %call_46ea3f, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46ea46	 Bytes: 7
  %loadMem_46ea46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea46 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea46)
  store %struct.Memory* %call_46ea46, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46ea4d	 Bytes: 4
  %loadMem_46ea4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea4d = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea4d)
  store %struct.Memory* %call_46ea4d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea51	 Bytes: 4
  %loadMem_46ea51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea51 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea51)
  store %struct.Memory* %call_46ea51, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46ea55	 Bytes: 4
  %loadMem_46ea55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea55 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea55)
  store %struct.Memory* %call_46ea55, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea59	 Bytes: 4
  %loadMem_46ea59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea59 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea59)
  store %struct.Memory* %call_46ea59, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ea5d	 Bytes: 4
  %loadMem_46ea5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea5d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea5d)
  store %struct.Memory* %call_46ea5d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea61	 Bytes: 4
  %loadMem_46ea61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea61 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea61)
  store %struct.Memory* %call_46ea61, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ea65	 Bytes: 5
  %loadMem_46ea65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea65 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea65)
  store %struct.Memory* %call_46ea65, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ea6a	 Bytes: 4
  %loadMem_46ea6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea6a = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea6a)
  store %struct.Memory* %call_46ea6a, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46ea6e	 Bytes: 4
  %loadMem_46ea6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea6e = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea6e)
  store %struct.Memory* %call_46ea6e, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46ea72	 Bytes: 4
  %loadMem_46ea72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea72 = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea72)
  store %struct.Memory* %call_46ea72, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46ea76	 Bytes: 7
  %loadMem_46ea76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea76 = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea76)
  store %struct.Memory* %call_46ea76, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46ea7d	 Bytes: 4
  %loadMem_46ea7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea7d = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea7d)
  store %struct.Memory* %call_46ea7d, %struct.Memory** %MEMORY

  ; Code: jne .L_46ead9	 RIP: 46ea81	 Bytes: 6
  %loadMem_46ea81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea81 = call %struct.Memory* @routine_jne_.L_46ead9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea81, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46ea81, %struct.Memory** %MEMORY

  %loadBr_46ea81 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ea81 = icmp eq i8 %loadBr_46ea81, 1
  br i1 %cmpBr_46ea81, label %block_.L_46ead9, label %block_46ea87

block_46ea87:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46ea87	 Bytes: 8
  %loadMem_46ea87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea87 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea87)
  store %struct.Memory* %call_46ea87, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ea8f	 Bytes: 8
  %loadMem_46ea8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea8f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea8f)
  store %struct.Memory* %call_46ea8f, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46ea97	 Bytes: 6
  %loadMem_46ea97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea97 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea97)
  store %struct.Memory* %call_46ea97, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ea9d	 Bytes: 3
  %loadMem_46ea9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ea9d = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ea9d)
  store %struct.Memory* %call_46ea9d, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46eaa0	 Bytes: 3
  %loadMem_46eaa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaa0 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaa0)
  store %struct.Memory* %call_46eaa0, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46eaa3	 Bytes: 3
  %loadMem_46eaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaa3 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaa3)
  store %struct.Memory* %call_46eaa3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eaa6	 Bytes: 4
  %loadMem_46eaa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaa6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaa6)
  store %struct.Memory* %call_46eaa6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46eaaa	 Bytes: 8
  %loadMem_46eaaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaaa = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaaa)
  store %struct.Memory* %call_46eaaa, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46eab2	 Bytes: 6
  %loadMem_46eab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eab2 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eab2)
  store %struct.Memory* %call_46eab2, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46eab8	 Bytes: 3
  %loadMem_46eab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eab8 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eab8)
  store %struct.Memory* %call_46eab8, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46eabb	 Bytes: 3
  %loadMem_46eabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eabb = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eabb)
  store %struct.Memory* %call_46eabb, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46eabe	 Bytes: 3
  %loadMem_46eabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eabe = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eabe)
  store %struct.Memory* %call_46eabe, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eac1	 Bytes: 4
  %loadMem_46eac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eac1 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eac1)
  store %struct.Memory* %call_46eac1, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46eac5	 Bytes: 3
  %loadMem_46eac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eac5 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eac5)
  store %struct.Memory* %call_46eac5, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46eac8	 Bytes: 4
  %loadMem_46eac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eac8 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eac8)
  store %struct.Memory* %call_46eac8, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46eacc	 Bytes: 2
  %loadMem_46eacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eacc = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eacc)
  store %struct.Memory* %call_46eacc, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xfc(%rbp)	 RIP: 46eace	 Bytes: 6
  %loadMem_46eace = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eace = call %struct.Memory* @routine_movl__edx__MINUS0xfc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eace)
  store %struct.Memory* %call_46eace, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46eb2c	 RIP: 46ead4	 Bytes: 5
  %loadMem_46ead4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ead4 = call %struct.Memory* @routine_jmpq_.L_46eb2c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ead4, i64 88, i64 5)
  store %struct.Memory* %call_46ead4, %struct.Memory** %MEMORY

  br label %block_.L_46eb2c

  ; Code: .L_46ead9:	 RIP: 46ead9	 Bytes: 0
block_.L_46ead9:

  ; Code: movq 0x6cd468, %rax	 RIP: 46ead9	 Bytes: 8
  %loadMem_46ead9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ead9 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ead9)
  store %struct.Memory* %call_46ead9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46eae1	 Bytes: 8
  %loadMem_46eae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eae1 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eae1)
  store %struct.Memory* %call_46eae1, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46eae9	 Bytes: 6
  %loadMem_46eae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eae9 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eae9)
  store %struct.Memory* %call_46eae9, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46eaef	 Bytes: 3
  %loadMem_46eaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaef = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaef)
  store %struct.Memory* %call_46eaef, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46eaf2	 Bytes: 3
  %loadMem_46eaf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaf2 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaf2)
  store %struct.Memory* %call_46eaf2, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46eaf5	 Bytes: 3
  %loadMem_46eaf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaf5 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaf5)
  store %struct.Memory* %call_46eaf5, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eaf8	 Bytes: 4
  %loadMem_46eaf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eaf8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eaf8)
  store %struct.Memory* %call_46eaf8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46eafc	 Bytes: 8
  %loadMem_46eafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eafc = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eafc)
  store %struct.Memory* %call_46eafc, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46eb04	 Bytes: 6
  %loadMem_46eb04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb04 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb04)
  store %struct.Memory* %call_46eb04, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46eb0a	 Bytes: 3
  %loadMem_46eb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb0a = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb0a)
  store %struct.Memory* %call_46eb0a, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46eb0d	 Bytes: 3
  %loadMem_46eb0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb0d = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb0d)
  store %struct.Memory* %call_46eb0d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46eb10	 Bytes: 3
  %loadMem_46eb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb10 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb10)
  store %struct.Memory* %call_46eb10, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eb13	 Bytes: 4
  %loadMem_46eb13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb13 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb13)
  store %struct.Memory* %call_46eb13, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46eb17	 Bytes: 5
  %loadMem_46eb17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb17 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb17)
  store %struct.Memory* %call_46eb17, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eb1c	 Bytes: 4
  %loadMem_46eb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb1c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb1c)
  store %struct.Memory* %call_46eb1c, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46eb20	 Bytes: 4
  %loadMem_46eb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb20 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb20)
  store %struct.Memory* %call_46eb20, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46eb24	 Bytes: 2
  %loadMem_46eb24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb24 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb24)
  store %struct.Memory* %call_46eb24, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xfc(%rbp)	 RIP: 46eb26	 Bytes: 6
  %loadMem_46eb26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb26 = call %struct.Memory* @routine_movl__edx__MINUS0xfc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb26)
  store %struct.Memory* %call_46eb26, %struct.Memory** %MEMORY

  ; Code: .L_46eb2c:	 RIP: 46eb2c	 Bytes: 0
  br label %block_.L_46eb2c
block_.L_46eb2c:

  ; Code: movl -0xfc(%rbp), %eax	 RIP: 46eb2c	 Bytes: 6
  %loadMem_46eb2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb2c = call %struct.Memory* @routine_movl_MINUS0xfc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb2c)
  store %struct.Memory* %call_46eb2c, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46eb32	 Bytes: 5
  %loadMem_46eb32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb32 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb32)
  store %struct.Memory* %call_46eb32, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46eb37	 Bytes: 7
  %loadMem_46eb37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb37 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb37)
  store %struct.Memory* %call_46eb37, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46eb3e	 Bytes: 7
  %loadMem_46eb3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb3e = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb3e)
  store %struct.Memory* %call_46eb3e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46eb45	 Bytes: 1
  %loadMem_46eb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb45 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb45)
  store %struct.Memory* %call_46eb45, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46eb46	 Bytes: 2
  %loadMem_46eb46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb46 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb46)
  store %struct.Memory* %call_46eb46, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46eb48	 Bytes: 7
  %loadMem_46eb48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb48 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb48)
  store %struct.Memory* %call_46eb48, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46eca2	 RIP: 46eb4f	 Bytes: 5
  %loadMem_46eb4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb4f = call %struct.Memory* @routine_jmpq_.L_46eca2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb4f, i64 339, i64 5)
  store %struct.Memory* %call_46eb4f, %struct.Memory** %MEMORY

  br label %block_.L_46eca2

  ; Code: .L_46eb54:	 RIP: 46eb54	 Bytes: 0
block_.L_46eb54:

  ; Code: cmpl $0x1, -0x3c(%rbp)	 RIP: 46eb54	 Bytes: 4
  %loadMem_46eb54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb54 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb54)
  store %struct.Memory* %call_46eb54, %struct.Memory** %MEMORY

  ; Code: jle .L_46ec9d	 RIP: 46eb58	 Bytes: 6
  %loadMem_46eb58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb58 = call %struct.Memory* @routine_jle_.L_46ec9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb58, i8* %BRANCH_TAKEN, i64 325, i64 6, i64 6)
  store %struct.Memory* %call_46eb58, %struct.Memory** %MEMORY

  %loadBr_46eb58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46eb58 = icmp eq i8 %loadBr_46eb58, 1
  br i1 %cmpBr_46eb58, label %block_.L_46ec9d, label %block_46eb5e

block_46eb5e:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46eb5e	 Bytes: 7
  %loadMem_46eb5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb5e = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb5e)
  store %struct.Memory* %call_46eb5e, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46eb65	 Bytes: 4
  %loadMem_46eb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb65 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb65)
  store %struct.Memory* %call_46eb65, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eb69	 Bytes: 4
  %loadMem_46eb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb69 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb69)
  store %struct.Memory* %call_46eb69, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46eb6d	 Bytes: 4
  %loadMem_46eb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb6d = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb6d)
  store %struct.Memory* %call_46eb6d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eb71	 Bytes: 4
  %loadMem_46eb71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb71 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb71)
  store %struct.Memory* %call_46eb71, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46eb75	 Bytes: 4
  %loadMem_46eb75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb75 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb75)
  store %struct.Memory* %call_46eb75, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eb79	 Bytes: 4
  %loadMem_46eb79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb79 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb79)
  store %struct.Memory* %call_46eb79, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46eb7d	 Bytes: 5
  %loadMem_46eb7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb7d = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb7d)
  store %struct.Memory* %call_46eb7d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eb82	 Bytes: 4
  %loadMem_46eb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb82 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb82)
  store %struct.Memory* %call_46eb82, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46eb86	 Bytes: 4
  %loadMem_46eb86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb86 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb86)
  store %struct.Memory* %call_46eb86, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46eb8a	 Bytes: 3
  %loadMem_46eb8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb8a = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb8a)
  store %struct.Memory* %call_46eb8a, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46eb8d	 Bytes: 7
  %loadMem_46eb8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb8d = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb8d)
  store %struct.Memory* %call_46eb8d, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46eb94	 Bytes: 7
  %loadMem_46eb94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb94 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb94)
  store %struct.Memory* %call_46eb94, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46eb9b	 Bytes: 4
  %loadMem_46eb9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb9b = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb9b)
  store %struct.Memory* %call_46eb9b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eb9f	 Bytes: 4
  %loadMem_46eb9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eb9f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eb9f)
  store %struct.Memory* %call_46eb9f, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46eba3	 Bytes: 4
  %loadMem_46eba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eba3 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eba3)
  store %struct.Memory* %call_46eba3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eba7	 Bytes: 4
  %loadMem_46eba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eba7 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eba7)
  store %struct.Memory* %call_46eba7, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ebab	 Bytes: 4
  %loadMem_46ebab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebab = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebab)
  store %struct.Memory* %call_46ebab, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ebaf	 Bytes: 4
  %loadMem_46ebaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebaf = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebaf)
  store %struct.Memory* %call_46ebaf, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ebb3	 Bytes: 5
  %loadMem_46ebb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebb3 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebb3)
  store %struct.Memory* %call_46ebb3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ebb8	 Bytes: 4
  %loadMem_46ebb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebb8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebb8)
  store %struct.Memory* %call_46ebb8, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46ebbc	 Bytes: 4
  %loadMem_46ebbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebbc = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebbc)
  store %struct.Memory* %call_46ebbc, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46ebc0	 Bytes: 4
  %loadMem_46ebc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebc0 = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebc0)
  store %struct.Memory* %call_46ebc0, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46ebc4	 Bytes: 7
  %loadMem_46ebc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebc4 = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebc4)
  store %struct.Memory* %call_46ebc4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46ebcb	 Bytes: 4
  %loadMem_46ebcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebcb = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebcb)
  store %struct.Memory* %call_46ebcb, %struct.Memory** %MEMORY

  ; Code: jne .L_46ec27	 RIP: 46ebcf	 Bytes: 6
  %loadMem_46ebcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebcf = call %struct.Memory* @routine_jne_.L_46ec27(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebcf, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46ebcf, %struct.Memory** %MEMORY

  %loadBr_46ebcf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ebcf = icmp eq i8 %loadBr_46ebcf, 1
  br i1 %cmpBr_46ebcf, label %block_.L_46ec27, label %block_46ebd5

block_46ebd5:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46ebd5	 Bytes: 8
  %loadMem_46ebd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebd5 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebd5)
  store %struct.Memory* %call_46ebd5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ebdd	 Bytes: 8
  %loadMem_46ebdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebdd = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebdd)
  store %struct.Memory* %call_46ebdd, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46ebe5	 Bytes: 6
  %loadMem_46ebe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebe5 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebe5)
  store %struct.Memory* %call_46ebe5, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ebeb	 Bytes: 3
  %loadMem_46ebeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebeb = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebeb)
  store %struct.Memory* %call_46ebeb, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46ebee	 Bytes: 3
  %loadMem_46ebee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebee = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebee)
  store %struct.Memory* %call_46ebee, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ebf1	 Bytes: 3
  %loadMem_46ebf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebf1 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebf1)
  store %struct.Memory* %call_46ebf1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ebf4	 Bytes: 4
  %loadMem_46ebf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebf4 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebf4)
  store %struct.Memory* %call_46ebf4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ebf8	 Bytes: 8
  %loadMem_46ebf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ebf8 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ebf8)
  store %struct.Memory* %call_46ebf8, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46ec00	 Bytes: 6
  %loadMem_46ec00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec00 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec00)
  store %struct.Memory* %call_46ec00, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ec06	 Bytes: 3
  %loadMem_46ec06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec06 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec06)
  store %struct.Memory* %call_46ec06, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46ec09	 Bytes: 3
  %loadMem_46ec09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec09 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec09)
  store %struct.Memory* %call_46ec09, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ec0c	 Bytes: 3
  %loadMem_46ec0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec0c = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec0c)
  store %struct.Memory* %call_46ec0c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ec0f	 Bytes: 4
  %loadMem_46ec0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec0f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec0f)
  store %struct.Memory* %call_46ec0f, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46ec13	 Bytes: 3
  %loadMem_46ec13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec13 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec13)
  store %struct.Memory* %call_46ec13, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46ec16	 Bytes: 4
  %loadMem_46ec16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec16 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec16)
  store %struct.Memory* %call_46ec16, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46ec1a	 Bytes: 2
  %loadMem_46ec1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec1a = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec1a)
  store %struct.Memory* %call_46ec1a, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x100(%rbp)	 RIP: 46ec1c	 Bytes: 6
  %loadMem_46ec1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec1c = call %struct.Memory* @routine_movl__edx__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec1c)
  store %struct.Memory* %call_46ec1c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46ec7a	 RIP: 46ec22	 Bytes: 5
  %loadMem_46ec22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec22 = call %struct.Memory* @routine_jmpq_.L_46ec7a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec22, i64 88, i64 5)
  store %struct.Memory* %call_46ec22, %struct.Memory** %MEMORY

  br label %block_.L_46ec7a

  ; Code: .L_46ec27:	 RIP: 46ec27	 Bytes: 0
block_.L_46ec27:

  ; Code: movq 0x6cd468, %rax	 RIP: 46ec27	 Bytes: 8
  %loadMem_46ec27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec27 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec27)
  store %struct.Memory* %call_46ec27, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ec2f	 Bytes: 8
  %loadMem_46ec2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec2f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec2f)
  store %struct.Memory* %call_46ec2f, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46ec37	 Bytes: 6
  %loadMem_46ec37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec37 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec37)
  store %struct.Memory* %call_46ec37, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ec3d	 Bytes: 3
  %loadMem_46ec3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec3d = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec3d)
  store %struct.Memory* %call_46ec3d, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46ec40	 Bytes: 3
  %loadMem_46ec40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec40 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec40)
  store %struct.Memory* %call_46ec40, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ec43	 Bytes: 3
  %loadMem_46ec43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec43 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec43)
  store %struct.Memory* %call_46ec43, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ec46	 Bytes: 4
  %loadMem_46ec46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec46 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec46)
  store %struct.Memory* %call_46ec46, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ec4a	 Bytes: 8
  %loadMem_46ec4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec4a = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec4a)
  store %struct.Memory* %call_46ec4a, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46ec52	 Bytes: 6
  %loadMem_46ec52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec52 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec52)
  store %struct.Memory* %call_46ec52, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ec58	 Bytes: 3
  %loadMem_46ec58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec58 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec58)
  store %struct.Memory* %call_46ec58, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46ec5b	 Bytes: 3
  %loadMem_46ec5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec5b = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec5b)
  store %struct.Memory* %call_46ec5b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ec5e	 Bytes: 3
  %loadMem_46ec5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec5e = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec5e)
  store %struct.Memory* %call_46ec5e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ec61	 Bytes: 4
  %loadMem_46ec61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec61 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec61)
  store %struct.Memory* %call_46ec61, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ec65	 Bytes: 5
  %loadMem_46ec65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec65 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec65)
  store %struct.Memory* %call_46ec65, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ec6a	 Bytes: 4
  %loadMem_46ec6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec6a = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec6a)
  store %struct.Memory* %call_46ec6a, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46ec6e	 Bytes: 4
  %loadMem_46ec6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec6e = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec6e)
  store %struct.Memory* %call_46ec6e, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46ec72	 Bytes: 2
  %loadMem_46ec72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec72 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec72)
  store %struct.Memory* %call_46ec72, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x100(%rbp)	 RIP: 46ec74	 Bytes: 6
  %loadMem_46ec74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec74 = call %struct.Memory* @routine_movl__edx__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec74)
  store %struct.Memory* %call_46ec74, %struct.Memory** %MEMORY

  ; Code: .L_46ec7a:	 RIP: 46ec7a	 Bytes: 0
  br label %block_.L_46ec7a
block_.L_46ec7a:

  ; Code: movl -0x100(%rbp), %eax	 RIP: 46ec7a	 Bytes: 6
  %loadMem_46ec7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec7a = call %struct.Memory* @routine_movl_MINUS0x100__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec7a)
  store %struct.Memory* %call_46ec7a, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46ec80	 Bytes: 5
  %loadMem_46ec80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec80 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec80)
  store %struct.Memory* %call_46ec80, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46ec85	 Bytes: 7
  %loadMem_46ec85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec85 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec85)
  store %struct.Memory* %call_46ec85, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46ec8c	 Bytes: 7
  %loadMem_46ec8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec8c = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec8c)
  store %struct.Memory* %call_46ec8c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46ec93	 Bytes: 1
  %loadMem_46ec93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec93 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec93)
  store %struct.Memory* %call_46ec93, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46ec94	 Bytes: 2
  %loadMem_46ec94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec94 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec94)
  store %struct.Memory* %call_46ec94, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46ec96	 Bytes: 7
  %loadMem_46ec96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec96 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec96)
  store %struct.Memory* %call_46ec96, %struct.Memory** %MEMORY

  ; Code: .L_46ec9d:	 RIP: 46ec9d	 Bytes: 0
  br label %block_.L_46ec9d
block_.L_46ec9d:

  ; Code: jmpq .L_46eca2	 RIP: 46ec9d	 Bytes: 5
  %loadMem_46ec9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ec9d = call %struct.Memory* @routine_jmpq_.L_46eca2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ec9d, i64 5, i64 5)
  store %struct.Memory* %call_46ec9d, %struct.Memory** %MEMORY

  br label %block_.L_46eca2

  ; Code: .L_46eca2:	 RIP: 46eca2	 Bytes: 0
block_.L_46eca2:

  ; Code: jmpq .L_46eca7	 RIP: 46eca2	 Bytes: 5
  %loadMem_46eca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eca2 = call %struct.Memory* @routine_jmpq_.L_46eca7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eca2, i64 5, i64 5)
  store %struct.Memory* %call_46eca2, %struct.Memory** %MEMORY

  br label %block_.L_46eca7

  ; Code: .L_46eca7:	 RIP: 46eca7	 Bytes: 0
block_.L_46eca7:

  ; Code: jmpq .L_46ecac	 RIP: 46eca7	 Bytes: 5
  %loadMem_46eca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eca7 = call %struct.Memory* @routine_jmpq_.L_46ecac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eca7, i64 5, i64 5)
  store %struct.Memory* %call_46eca7, %struct.Memory** %MEMORY

  br label %block_.L_46ecac

  ; Code: .L_46ecac:	 RIP: 46ecac	 Bytes: 0
block_.L_46ecac:

  ; Code: movq 0x6cb900, %rax	 RIP: 46ecac	 Bytes: 8
  %loadMem_46ecac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecac = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecac)
  store %struct.Memory* %call_46ecac, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 46ecb4	 Bytes: 4
  %loadMem_46ecb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecb4 = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecb4)
  store %struct.Memory* %call_46ecb4, %struct.Memory** %MEMORY

  ; Code: jne .L_46f21a	 RIP: 46ecb8	 Bytes: 6
  %loadMem_46ecb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecb8 = call %struct.Memory* @routine_jne_.L_46f21a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecb8, i8* %BRANCH_TAKEN, i64 1378, i64 6, i64 6)
  store %struct.Memory* %call_46ecb8, %struct.Memory** %MEMORY

  %loadBr_46ecb8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ecb8 = icmp eq i8 %loadBr_46ecb8, 1
  br i1 %cmpBr_46ecb8, label %block_.L_46f21a, label %block_46ecbe

block_46ecbe:
  ; Code: movq 0x6cb900, %rax	 RIP: 46ecbe	 Bytes: 8
  %loadMem_46ecbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecbe = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecbe)
  store %struct.Memory* %call_46ecbe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b30(%rax)	 RIP: 46ecc6	 Bytes: 7
  %loadMem_46ecc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecc6 = call %struct.Memory* @routine_cmpl__0x0__0x11b30__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecc6)
  store %struct.Memory* %call_46ecc6, %struct.Memory** %MEMORY

  ; Code: jle .L_46f21a	 RIP: 46eccd	 Bytes: 6
  %loadMem_46eccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eccd = call %struct.Memory* @routine_jle_.L_46f21a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eccd, i8* %BRANCH_TAKEN, i64 1357, i64 6, i64 6)
  store %struct.Memory* %call_46eccd, %struct.Memory** %MEMORY

  %loadBr_46eccd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46eccd = icmp eq i8 %loadBr_46eccd, 1
  br i1 %cmpBr_46eccd, label %block_.L_46f21a, label %block_46ecd3

block_46ecd3:
  ; Code: cmpl $0x6, -0x3c(%rbp)	 RIP: 46ecd3	 Bytes: 4
  %loadMem_46ecd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecd3 = call %struct.Memory* @routine_cmpl__0x6__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecd3)
  store %struct.Memory* %call_46ecd3, %struct.Memory** %MEMORY

  ; Code: jle .L_46ee21	 RIP: 46ecd7	 Bytes: 6
  %loadMem_46ecd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecd7 = call %struct.Memory* @routine_jle_.L_46ee21(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecd7, i8* %BRANCH_TAKEN, i64 330, i64 6, i64 6)
  store %struct.Memory* %call_46ecd7, %struct.Memory** %MEMORY

  %loadBr_46ecd7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ecd7 = icmp eq i8 %loadBr_46ecd7, 1
  br i1 %cmpBr_46ecd7, label %block_.L_46ee21, label %block_46ecdd

block_46ecdd:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46ecdd	 Bytes: 7
  %loadMem_46ecdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecdd = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecdd)
  store %struct.Memory* %call_46ecdd, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46ece4	 Bytes: 4
  %loadMem_46ece4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ece4 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ece4)
  store %struct.Memory* %call_46ece4, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ece8	 Bytes: 4
  %loadMem_46ece8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ece8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ece8)
  store %struct.Memory* %call_46ece8, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46ecec	 Bytes: 4
  %loadMem_46ecec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecec = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecec)
  store %struct.Memory* %call_46ecec, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ecf0	 Bytes: 4
  %loadMem_46ecf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecf0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecf0)
  store %struct.Memory* %call_46ecf0, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ecf4	 Bytes: 4
  %loadMem_46ecf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecf4 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecf4)
  store %struct.Memory* %call_46ecf4, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ecf8	 Bytes: 4
  %loadMem_46ecf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecf8 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecf8)
  store %struct.Memory* %call_46ecf8, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ecfc	 Bytes: 5
  %loadMem_46ecfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ecfc = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ecfc)
  store %struct.Memory* %call_46ecfc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ed01	 Bytes: 4
  %loadMem_46ed01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed01 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed01)
  store %struct.Memory* %call_46ed01, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46ed05	 Bytes: 4
  %loadMem_46ed05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed05 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed05)
  store %struct.Memory* %call_46ed05, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46ed09	 Bytes: 3
  %loadMem_46ed09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed09 = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed09)
  store %struct.Memory* %call_46ed09, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46ed0c	 Bytes: 7
  %loadMem_46ed0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed0c = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed0c)
  store %struct.Memory* %call_46ed0c, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46ed13	 Bytes: 7
  %loadMem_46ed13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed13 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed13)
  store %struct.Memory* %call_46ed13, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46ed1a	 Bytes: 4
  %loadMem_46ed1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed1a = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed1a)
  store %struct.Memory* %call_46ed1a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ed1e	 Bytes: 4
  %loadMem_46ed1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed1e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed1e)
  store %struct.Memory* %call_46ed1e, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46ed22	 Bytes: 4
  %loadMem_46ed22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed22 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed22)
  store %struct.Memory* %call_46ed22, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ed26	 Bytes: 4
  %loadMem_46ed26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed26 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed26)
  store %struct.Memory* %call_46ed26, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ed2a	 Bytes: 4
  %loadMem_46ed2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed2a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed2a)
  store %struct.Memory* %call_46ed2a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ed2e	 Bytes: 4
  %loadMem_46ed2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed2e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed2e)
  store %struct.Memory* %call_46ed2e, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ed32	 Bytes: 5
  %loadMem_46ed32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed32 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed32)
  store %struct.Memory* %call_46ed32, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ed37	 Bytes: 4
  %loadMem_46ed37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed37 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed37)
  store %struct.Memory* %call_46ed37, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46ed3b	 Bytes: 4
  %loadMem_46ed3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed3b = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed3b)
  store %struct.Memory* %call_46ed3b, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46ed3f	 Bytes: 4
  %loadMem_46ed3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed3f = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed3f)
  store %struct.Memory* %call_46ed3f, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46ed43	 Bytes: 7
  %loadMem_46ed43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed43 = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed43)
  store %struct.Memory* %call_46ed43, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46ed4a	 Bytes: 4
  %loadMem_46ed4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed4a = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed4a)
  store %struct.Memory* %call_46ed4a, %struct.Memory** %MEMORY

  ; Code: jne .L_46eda6	 RIP: 46ed4e	 Bytes: 6
  %loadMem_46ed4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed4e = call %struct.Memory* @routine_jne_.L_46eda6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed4e, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46ed4e, %struct.Memory** %MEMORY

  %loadBr_46ed4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ed4e = icmp eq i8 %loadBr_46ed4e, 1
  br i1 %cmpBr_46ed4e, label %block_.L_46eda6, label %block_46ed54

block_46ed54:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46ed54	 Bytes: 8
  %loadMem_46ed54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed54 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed54)
  store %struct.Memory* %call_46ed54, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ed5c	 Bytes: 8
  %loadMem_46ed5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed5c = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed5c)
  store %struct.Memory* %call_46ed5c, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46ed64	 Bytes: 6
  %loadMem_46ed64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed64 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed64)
  store %struct.Memory* %call_46ed64, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ed6a	 Bytes: 3
  %loadMem_46ed6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed6a = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed6a)
  store %struct.Memory* %call_46ed6a, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46ed6d	 Bytes: 3
  %loadMem_46ed6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed6d = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed6d)
  store %struct.Memory* %call_46ed6d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ed70	 Bytes: 3
  %loadMem_46ed70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed70 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed70)
  store %struct.Memory* %call_46ed70, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ed73	 Bytes: 4
  %loadMem_46ed73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed73 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed73)
  store %struct.Memory* %call_46ed73, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ed77	 Bytes: 8
  %loadMem_46ed77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed77 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed77)
  store %struct.Memory* %call_46ed77, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46ed7f	 Bytes: 6
  %loadMem_46ed7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed7f = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed7f)
  store %struct.Memory* %call_46ed7f, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ed85	 Bytes: 3
  %loadMem_46ed85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed85 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed85)
  store %struct.Memory* %call_46ed85, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46ed88	 Bytes: 3
  %loadMem_46ed88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed88 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed88)
  store %struct.Memory* %call_46ed88, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ed8b	 Bytes: 3
  %loadMem_46ed8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed8b = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed8b)
  store %struct.Memory* %call_46ed8b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ed8e	 Bytes: 4
  %loadMem_46ed8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed8e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed8e)
  store %struct.Memory* %call_46ed8e, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46ed92	 Bytes: 3
  %loadMem_46ed92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed92 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed92)
  store %struct.Memory* %call_46ed92, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46ed95	 Bytes: 4
  %loadMem_46ed95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed95 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed95)
  store %struct.Memory* %call_46ed95, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46ed99	 Bytes: 2
  %loadMem_46ed99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed99 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed99)
  store %struct.Memory* %call_46ed99, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x104(%rbp)	 RIP: 46ed9b	 Bytes: 6
  %loadMem_46ed9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ed9b = call %struct.Memory* @routine_movl__edx__MINUS0x104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ed9b)
  store %struct.Memory* %call_46ed9b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46edf9	 RIP: 46eda1	 Bytes: 5
  %loadMem_46eda1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eda1 = call %struct.Memory* @routine_jmpq_.L_46edf9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eda1, i64 88, i64 5)
  store %struct.Memory* %call_46eda1, %struct.Memory** %MEMORY

  br label %block_.L_46edf9

  ; Code: .L_46eda6:	 RIP: 46eda6	 Bytes: 0
block_.L_46eda6:

  ; Code: movq 0x6cd468, %rax	 RIP: 46eda6	 Bytes: 8
  %loadMem_46eda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eda6 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eda6)
  store %struct.Memory* %call_46eda6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46edae	 Bytes: 8
  %loadMem_46edae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edae = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edae)
  store %struct.Memory* %call_46edae, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46edb6	 Bytes: 6
  %loadMem_46edb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edb6 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edb6)
  store %struct.Memory* %call_46edb6, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46edbc	 Bytes: 3
  %loadMem_46edbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edbc = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edbc)
  store %struct.Memory* %call_46edbc, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46edbf	 Bytes: 3
  %loadMem_46edbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edbf = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edbf)
  store %struct.Memory* %call_46edbf, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46edc2	 Bytes: 3
  %loadMem_46edc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edc2 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edc2)
  store %struct.Memory* %call_46edc2, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46edc5	 Bytes: 4
  %loadMem_46edc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edc5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edc5)
  store %struct.Memory* %call_46edc5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46edc9	 Bytes: 8
  %loadMem_46edc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edc9 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edc9)
  store %struct.Memory* %call_46edc9, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46edd1	 Bytes: 6
  %loadMem_46edd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edd1 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edd1)
  store %struct.Memory* %call_46edd1, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46edd7	 Bytes: 3
  %loadMem_46edd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edd7 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edd7)
  store %struct.Memory* %call_46edd7, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46edda	 Bytes: 3
  %loadMem_46edda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edda = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edda)
  store %struct.Memory* %call_46edda, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46eddd	 Bytes: 3
  %loadMem_46eddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eddd = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eddd)
  store %struct.Memory* %call_46eddd, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ede0	 Bytes: 4
  %loadMem_46ede0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ede0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ede0)
  store %struct.Memory* %call_46ede0, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ede4	 Bytes: 5
  %loadMem_46ede4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ede4 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ede4)
  store %struct.Memory* %call_46ede4, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ede9	 Bytes: 4
  %loadMem_46ede9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ede9 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ede9)
  store %struct.Memory* %call_46ede9, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 46eded	 Bytes: 4
  %loadMem_46eded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eded = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eded)
  store %struct.Memory* %call_46eded, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46edf1	 Bytes: 2
  %loadMem_46edf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edf1 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edf1)
  store %struct.Memory* %call_46edf1, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x104(%rbp)	 RIP: 46edf3	 Bytes: 6
  %loadMem_46edf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edf3 = call %struct.Memory* @routine_movl__edx__MINUS0x104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edf3)
  store %struct.Memory* %call_46edf3, %struct.Memory** %MEMORY

  ; Code: .L_46edf9:	 RIP: 46edf9	 Bytes: 0
  br label %block_.L_46edf9
block_.L_46edf9:

  ; Code: movl -0x104(%rbp), %eax	 RIP: 46edf9	 Bytes: 6
  %loadMem_46edf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edf9 = call %struct.Memory* @routine_movl_MINUS0x104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edf9)
  store %struct.Memory* %call_46edf9, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46edff	 Bytes: 5
  %loadMem_46edff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46edff = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46edff)
  store %struct.Memory* %call_46edff, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46ee04	 Bytes: 7
  %loadMem_46ee04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee04 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee04)
  store %struct.Memory* %call_46ee04, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46ee0b	 Bytes: 7
  %loadMem_46ee0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee0b = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee0b)
  store %struct.Memory* %call_46ee0b, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46ee12	 Bytes: 1
  %loadMem_46ee12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee12 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee12)
  store %struct.Memory* %call_46ee12, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46ee13	 Bytes: 2
  %loadMem_46ee13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee13 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee13)
  store %struct.Memory* %call_46ee13, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46ee15	 Bytes: 7
  %loadMem_46ee15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee15 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee15)
  store %struct.Memory* %call_46ee15, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f215	 RIP: 46ee1c	 Bytes: 5
  %loadMem_46ee1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee1c = call %struct.Memory* @routine_jmpq_.L_46f215(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee1c, i64 1017, i64 5)
  store %struct.Memory* %call_46ee1c, %struct.Memory** %MEMORY

  br label %block_.L_46f215

  ; Code: .L_46ee21:	 RIP: 46ee21	 Bytes: 0
block_.L_46ee21:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 46ee21	 Bytes: 4
  %loadMem_46ee21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee21 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee21)
  store %struct.Memory* %call_46ee21, %struct.Memory** %MEMORY

  ; Code: jle .L_46ef6f	 RIP: 46ee25	 Bytes: 6
  %loadMem_46ee25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee25 = call %struct.Memory* @routine_jle_.L_46ef6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee25, i8* %BRANCH_TAKEN, i64 330, i64 6, i64 6)
  store %struct.Memory* %call_46ee25, %struct.Memory** %MEMORY

  %loadBr_46ee25 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ee25 = icmp eq i8 %loadBr_46ee25, 1
  br i1 %cmpBr_46ee25, label %block_.L_46ef6f, label %block_46ee2b

block_46ee2b:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46ee2b	 Bytes: 7
  %loadMem_46ee2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee2b = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee2b)
  store %struct.Memory* %call_46ee2b, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46ee32	 Bytes: 4
  %loadMem_46ee32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee32 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee32)
  store %struct.Memory* %call_46ee32, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee36	 Bytes: 4
  %loadMem_46ee36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee36 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee36)
  store %struct.Memory* %call_46ee36, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46ee3a	 Bytes: 4
  %loadMem_46ee3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee3a = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee3a)
  store %struct.Memory* %call_46ee3a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee3e	 Bytes: 4
  %loadMem_46ee3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee3e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee3e)
  store %struct.Memory* %call_46ee3e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ee42	 Bytes: 4
  %loadMem_46ee42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee42 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee42)
  store %struct.Memory* %call_46ee42, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee46	 Bytes: 4
  %loadMem_46ee46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee46 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee46)
  store %struct.Memory* %call_46ee46, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ee4a	 Bytes: 5
  %loadMem_46ee4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee4a = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee4a)
  store %struct.Memory* %call_46ee4a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee4f	 Bytes: 4
  %loadMem_46ee4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee4f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee4f)
  store %struct.Memory* %call_46ee4f, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46ee53	 Bytes: 4
  %loadMem_46ee53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee53 = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee53)
  store %struct.Memory* %call_46ee53, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46ee57	 Bytes: 3
  %loadMem_46ee57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee57 = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee57)
  store %struct.Memory* %call_46ee57, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46ee5a	 Bytes: 7
  %loadMem_46ee5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee5a = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee5a)
  store %struct.Memory* %call_46ee5a, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46ee61	 Bytes: 7
  %loadMem_46ee61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee61 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee61)
  store %struct.Memory* %call_46ee61, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46ee68	 Bytes: 4
  %loadMem_46ee68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee68 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee68)
  store %struct.Memory* %call_46ee68, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee6c	 Bytes: 4
  %loadMem_46ee6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee6c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee6c)
  store %struct.Memory* %call_46ee6c, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46ee70	 Bytes: 4
  %loadMem_46ee70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee70 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee70)
  store %struct.Memory* %call_46ee70, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee74	 Bytes: 4
  %loadMem_46ee74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee74 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee74)
  store %struct.Memory* %call_46ee74, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ee78	 Bytes: 4
  %loadMem_46ee78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee78 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee78)
  store %struct.Memory* %call_46ee78, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee7c	 Bytes: 4
  %loadMem_46ee7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee7c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee7c)
  store %struct.Memory* %call_46ee7c, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ee80	 Bytes: 5
  %loadMem_46ee80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee80 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee80)
  store %struct.Memory* %call_46ee80, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ee85	 Bytes: 4
  %loadMem_46ee85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee85 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee85)
  store %struct.Memory* %call_46ee85, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46ee89	 Bytes: 4
  %loadMem_46ee89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee89 = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee89)
  store %struct.Memory* %call_46ee89, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46ee8d	 Bytes: 4
  %loadMem_46ee8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee8d = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee8d)
  store %struct.Memory* %call_46ee8d, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46ee91	 Bytes: 7
  %loadMem_46ee91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee91 = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee91)
  store %struct.Memory* %call_46ee91, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46ee98	 Bytes: 4
  %loadMem_46ee98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee98 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee98)
  store %struct.Memory* %call_46ee98, %struct.Memory** %MEMORY

  ; Code: jne .L_46eef4	 RIP: 46ee9c	 Bytes: 6
  %loadMem_46ee9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ee9c = call %struct.Memory* @routine_jne_.L_46eef4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ee9c, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46ee9c, %struct.Memory** %MEMORY

  %loadBr_46ee9c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ee9c = icmp eq i8 %loadBr_46ee9c, 1
  br i1 %cmpBr_46ee9c, label %block_.L_46eef4, label %block_46eea2

block_46eea2:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46eea2	 Bytes: 8
  %loadMem_46eea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eea2 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eea2)
  store %struct.Memory* %call_46eea2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46eeaa	 Bytes: 8
  %loadMem_46eeaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eeaa = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eeaa)
  store %struct.Memory* %call_46eeaa, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46eeb2	 Bytes: 6
  %loadMem_46eeb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eeb2 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eeb2)
  store %struct.Memory* %call_46eeb2, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46eeb8	 Bytes: 3
  %loadMem_46eeb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eeb8 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eeb8)
  store %struct.Memory* %call_46eeb8, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46eebb	 Bytes: 3
  %loadMem_46eebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eebb = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eebb)
  store %struct.Memory* %call_46eebb, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46eebe	 Bytes: 3
  %loadMem_46eebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eebe = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eebe)
  store %struct.Memory* %call_46eebe, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eec1	 Bytes: 4
  %loadMem_46eec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eec1 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eec1)
  store %struct.Memory* %call_46eec1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46eec5	 Bytes: 8
  %loadMem_46eec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eec5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eec5)
  store %struct.Memory* %call_46eec5, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46eecd	 Bytes: 6
  %loadMem_46eecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eecd = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eecd)
  store %struct.Memory* %call_46eecd, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46eed3	 Bytes: 3
  %loadMem_46eed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eed3 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eed3)
  store %struct.Memory* %call_46eed3, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46eed6	 Bytes: 3
  %loadMem_46eed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eed6 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eed6)
  store %struct.Memory* %call_46eed6, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46eed9	 Bytes: 3
  %loadMem_46eed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eed9 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eed9)
  store %struct.Memory* %call_46eed9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46eedc	 Bytes: 4
  %loadMem_46eedc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eedc = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eedc)
  store %struct.Memory* %call_46eedc, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46eee0	 Bytes: 3
  %loadMem_46eee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eee0 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eee0)
  store %struct.Memory* %call_46eee0, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46eee3	 Bytes: 4
  %loadMem_46eee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eee3 = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eee3)
  store %struct.Memory* %call_46eee3, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46eee7	 Bytes: 2
  %loadMem_46eee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eee7 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eee7)
  store %struct.Memory* %call_46eee7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x108(%rbp)	 RIP: 46eee9	 Bytes: 6
  %loadMem_46eee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eee9 = call %struct.Memory* @routine_movl__edx__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eee9)
  store %struct.Memory* %call_46eee9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46ef47	 RIP: 46eeef	 Bytes: 5
  %loadMem_46eeef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eeef = call %struct.Memory* @routine_jmpq_.L_46ef47(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eeef, i64 88, i64 5)
  store %struct.Memory* %call_46eeef, %struct.Memory** %MEMORY

  br label %block_.L_46ef47

  ; Code: .L_46eef4:	 RIP: 46eef4	 Bytes: 0
block_.L_46eef4:

  ; Code: movq 0x6cd468, %rax	 RIP: 46eef4	 Bytes: 8
  %loadMem_46eef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eef4 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eef4)
  store %struct.Memory* %call_46eef4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46eefc	 Bytes: 8
  %loadMem_46eefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eefc = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eefc)
  store %struct.Memory* %call_46eefc, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46ef04	 Bytes: 6
  %loadMem_46ef04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef04 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef04)
  store %struct.Memory* %call_46ef04, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ef0a	 Bytes: 3
  %loadMem_46ef0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef0a = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef0a)
  store %struct.Memory* %call_46ef0a, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46ef0d	 Bytes: 3
  %loadMem_46ef0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef0d = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef0d)
  store %struct.Memory* %call_46ef0d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ef10	 Bytes: 3
  %loadMem_46ef10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef10 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef10)
  store %struct.Memory* %call_46ef10, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ef13	 Bytes: 4
  %loadMem_46ef13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef13 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef13)
  store %struct.Memory* %call_46ef13, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46ef17	 Bytes: 8
  %loadMem_46ef17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef17 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef17)
  store %struct.Memory* %call_46ef17, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46ef1f	 Bytes: 6
  %loadMem_46ef1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef1f = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef1f)
  store %struct.Memory* %call_46ef1f, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46ef25	 Bytes: 3
  %loadMem_46ef25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef25 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef25)
  store %struct.Memory* %call_46ef25, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46ef28	 Bytes: 3
  %loadMem_46ef28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef28 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef28)
  store %struct.Memory* %call_46ef28, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46ef2b	 Bytes: 3
  %loadMem_46ef2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef2b = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef2b)
  store %struct.Memory* %call_46ef2b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ef2e	 Bytes: 4
  %loadMem_46ef2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef2e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef2e)
  store %struct.Memory* %call_46ef2e, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ef32	 Bytes: 5
  %loadMem_46ef32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef32 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef32)
  store %struct.Memory* %call_46ef32, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ef37	 Bytes: 4
  %loadMem_46ef37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef37 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef37)
  store %struct.Memory* %call_46ef37, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 46ef3b	 Bytes: 4
  %loadMem_46ef3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef3b = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef3b)
  store %struct.Memory* %call_46ef3b, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46ef3f	 Bytes: 2
  %loadMem_46ef3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef3f = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef3f)
  store %struct.Memory* %call_46ef3f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x108(%rbp)	 RIP: 46ef41	 Bytes: 6
  %loadMem_46ef41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef41 = call %struct.Memory* @routine_movl__edx__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef41)
  store %struct.Memory* %call_46ef41, %struct.Memory** %MEMORY

  ; Code: .L_46ef47:	 RIP: 46ef47	 Bytes: 0
  br label %block_.L_46ef47
block_.L_46ef47:

  ; Code: movl -0x108(%rbp), %eax	 RIP: 46ef47	 Bytes: 6
  %loadMem_46ef47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef47 = call %struct.Memory* @routine_movl_MINUS0x108__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef47)
  store %struct.Memory* %call_46ef47, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46ef4d	 Bytes: 5
  %loadMem_46ef4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef4d = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef4d)
  store %struct.Memory* %call_46ef4d, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46ef52	 Bytes: 7
  %loadMem_46ef52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef52 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef52)
  store %struct.Memory* %call_46ef52, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46ef59	 Bytes: 7
  %loadMem_46ef59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef59 = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef59)
  store %struct.Memory* %call_46ef59, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46ef60	 Bytes: 1
  %loadMem_46ef60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef60 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef60)
  store %struct.Memory* %call_46ef60, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46ef61	 Bytes: 2
  %loadMem_46ef61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef61 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef61)
  store %struct.Memory* %call_46ef61, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46ef63	 Bytes: 7
  %loadMem_46ef63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef63 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef63)
  store %struct.Memory* %call_46ef63, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f210	 RIP: 46ef6a	 Bytes: 5
  %loadMem_46ef6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef6a = call %struct.Memory* @routine_jmpq_.L_46f210(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef6a, i64 678, i64 5)
  store %struct.Memory* %call_46ef6a, %struct.Memory** %MEMORY

  br label %block_.L_46f210

  ; Code: .L_46ef6f:	 RIP: 46ef6f	 Bytes: 0
block_.L_46ef6f:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 46ef6f	 Bytes: 4
  %loadMem_46ef6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef6f = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef6f)
  store %struct.Memory* %call_46ef6f, %struct.Memory** %MEMORY

  ; Code: jne .L_46f0bd	 RIP: 46ef73	 Bytes: 6
  %loadMem_46ef73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef73 = call %struct.Memory* @routine_jne_.L_46f0bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef73, i8* %BRANCH_TAKEN, i64 330, i64 6, i64 6)
  store %struct.Memory* %call_46ef73, %struct.Memory** %MEMORY

  %loadBr_46ef73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ef73 = icmp eq i8 %loadBr_46ef73, 1
  br i1 %cmpBr_46ef73, label %block_.L_46f0bd, label %block_46ef79

block_46ef79:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46ef79	 Bytes: 7
  %loadMem_46ef79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef79 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef79)
  store %struct.Memory* %call_46ef79, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46ef80	 Bytes: 4
  %loadMem_46ef80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef80 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef80)
  store %struct.Memory* %call_46ef80, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ef84	 Bytes: 4
  %loadMem_46ef84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef84 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef84)
  store %struct.Memory* %call_46ef84, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46ef88	 Bytes: 4
  %loadMem_46ef88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef88 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef88)
  store %struct.Memory* %call_46ef88, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ef8c	 Bytes: 4
  %loadMem_46ef8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef8c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef8c)
  store %struct.Memory* %call_46ef8c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46ef90	 Bytes: 4
  %loadMem_46ef90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef90 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef90)
  store %struct.Memory* %call_46ef90, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ef94	 Bytes: 4
  %loadMem_46ef94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef94 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef94)
  store %struct.Memory* %call_46ef94, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46ef98	 Bytes: 5
  %loadMem_46ef98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef98 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef98)
  store %struct.Memory* %call_46ef98, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46ef9d	 Bytes: 4
  %loadMem_46ef9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ef9d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ef9d)
  store %struct.Memory* %call_46ef9d, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46efa1	 Bytes: 4
  %loadMem_46efa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efa1 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efa1)
  store %struct.Memory* %call_46efa1, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46efa5	 Bytes: 3
  %loadMem_46efa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efa5 = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efa5)
  store %struct.Memory* %call_46efa5, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46efa8	 Bytes: 7
  %loadMem_46efa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efa8 = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efa8)
  store %struct.Memory* %call_46efa8, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46efaf	 Bytes: 7
  %loadMem_46efaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efaf = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efaf)
  store %struct.Memory* %call_46efaf, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46efb6	 Bytes: 4
  %loadMem_46efb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efb6 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efb6)
  store %struct.Memory* %call_46efb6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46efba	 Bytes: 4
  %loadMem_46efba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efba = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efba)
  store %struct.Memory* %call_46efba, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46efbe	 Bytes: 4
  %loadMem_46efbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efbe = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efbe)
  store %struct.Memory* %call_46efbe, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46efc2	 Bytes: 4
  %loadMem_46efc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efc2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efc2)
  store %struct.Memory* %call_46efc2, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46efc6	 Bytes: 4
  %loadMem_46efc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efc6 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efc6)
  store %struct.Memory* %call_46efc6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46efca	 Bytes: 4
  %loadMem_46efca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efca = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efca)
  store %struct.Memory* %call_46efca, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46efce	 Bytes: 5
  %loadMem_46efce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efce = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efce)
  store %struct.Memory* %call_46efce, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46efd3	 Bytes: 4
  %loadMem_46efd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efd3 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efd3)
  store %struct.Memory* %call_46efd3, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46efd7	 Bytes: 4
  %loadMem_46efd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efd7 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efd7)
  store %struct.Memory* %call_46efd7, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46efdb	 Bytes: 4
  %loadMem_46efdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efdb = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efdb)
  store %struct.Memory* %call_46efdb, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46efdf	 Bytes: 7
  %loadMem_46efdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efdf = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efdf)
  store %struct.Memory* %call_46efdf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46efe6	 Bytes: 4
  %loadMem_46efe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efe6 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efe6)
  store %struct.Memory* %call_46efe6, %struct.Memory** %MEMORY

  ; Code: jne .L_46f042	 RIP: 46efea	 Bytes: 6
  %loadMem_46efea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46efea = call %struct.Memory* @routine_jne_.L_46f042(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46efea, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46efea, %struct.Memory** %MEMORY

  %loadBr_46efea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46efea = icmp eq i8 %loadBr_46efea, 1
  br i1 %cmpBr_46efea, label %block_.L_46f042, label %block_46eff0

block_46eff0:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46eff0	 Bytes: 8
  %loadMem_46eff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eff0 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eff0)
  store %struct.Memory* %call_46eff0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46eff8	 Bytes: 8
  %loadMem_46eff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46eff8 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46eff8)
  store %struct.Memory* %call_46eff8, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f000	 Bytes: 6
  %loadMem_46f000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f000 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f000)
  store %struct.Memory* %call_46f000, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f006	 Bytes: 3
  %loadMem_46f006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f006 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f006)
  store %struct.Memory* %call_46f006, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f009	 Bytes: 3
  %loadMem_46f009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f009 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f009)
  store %struct.Memory* %call_46f009, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f00c	 Bytes: 3
  %loadMem_46f00c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f00c = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f00c)
  store %struct.Memory* %call_46f00c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f00f	 Bytes: 4
  %loadMem_46f00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f00f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f00f)
  store %struct.Memory* %call_46f00f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f013	 Bytes: 8
  %loadMem_46f013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f013 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f013)
  store %struct.Memory* %call_46f013, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f01b	 Bytes: 6
  %loadMem_46f01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f01b = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f01b)
  store %struct.Memory* %call_46f01b, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f021	 Bytes: 3
  %loadMem_46f021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f021 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f021)
  store %struct.Memory* %call_46f021, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f024	 Bytes: 3
  %loadMem_46f024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f024 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f024)
  store %struct.Memory* %call_46f024, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f027	 Bytes: 3
  %loadMem_46f027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f027 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f027)
  store %struct.Memory* %call_46f027, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f02a	 Bytes: 4
  %loadMem_46f02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f02a = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f02a)
  store %struct.Memory* %call_46f02a, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46f02e	 Bytes: 3
  %loadMem_46f02e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f02e = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f02e)
  store %struct.Memory* %call_46f02e, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46f031	 Bytes: 4
  %loadMem_46f031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f031 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f031)
  store %struct.Memory* %call_46f031, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f035	 Bytes: 2
  %loadMem_46f035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f035 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f035)
  store %struct.Memory* %call_46f035, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x10c(%rbp)	 RIP: 46f037	 Bytes: 6
  %loadMem_46f037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f037 = call %struct.Memory* @routine_movl__edx__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f037)
  store %struct.Memory* %call_46f037, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f095	 RIP: 46f03d	 Bytes: 5
  %loadMem_46f03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f03d = call %struct.Memory* @routine_jmpq_.L_46f095(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f03d, i64 88, i64 5)
  store %struct.Memory* %call_46f03d, %struct.Memory** %MEMORY

  br label %block_.L_46f095

  ; Code: .L_46f042:	 RIP: 46f042	 Bytes: 0
block_.L_46f042:

  ; Code: movq 0x6cd468, %rax	 RIP: 46f042	 Bytes: 8
  %loadMem_46f042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f042 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f042)
  store %struct.Memory* %call_46f042, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f04a	 Bytes: 8
  %loadMem_46f04a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f04a = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f04a)
  store %struct.Memory* %call_46f04a, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f052	 Bytes: 6
  %loadMem_46f052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f052 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f052)
  store %struct.Memory* %call_46f052, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f058	 Bytes: 3
  %loadMem_46f058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f058 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f058)
  store %struct.Memory* %call_46f058, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f05b	 Bytes: 3
  %loadMem_46f05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f05b = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f05b)
  store %struct.Memory* %call_46f05b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f05e	 Bytes: 3
  %loadMem_46f05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f05e = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f05e)
  store %struct.Memory* %call_46f05e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f061	 Bytes: 4
  %loadMem_46f061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f061 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f061)
  store %struct.Memory* %call_46f061, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f065	 Bytes: 8
  %loadMem_46f065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f065 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f065)
  store %struct.Memory* %call_46f065, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f06d	 Bytes: 6
  %loadMem_46f06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f06d = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f06d)
  store %struct.Memory* %call_46f06d, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f073	 Bytes: 3
  %loadMem_46f073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f073 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f073)
  store %struct.Memory* %call_46f073, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f076	 Bytes: 3
  %loadMem_46f076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f076 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f076)
  store %struct.Memory* %call_46f076, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f079	 Bytes: 3
  %loadMem_46f079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f079 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f079)
  store %struct.Memory* %call_46f079, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f07c	 Bytes: 4
  %loadMem_46f07c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f07c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f07c)
  store %struct.Memory* %call_46f07c, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f080	 Bytes: 5
  %loadMem_46f080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f080 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f080)
  store %struct.Memory* %call_46f080, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f085	 Bytes: 4
  %loadMem_46f085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f085 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f085)
  store %struct.Memory* %call_46f085, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 46f089	 Bytes: 4
  %loadMem_46f089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f089 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f089)
  store %struct.Memory* %call_46f089, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f08d	 Bytes: 2
  %loadMem_46f08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f08d = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f08d)
  store %struct.Memory* %call_46f08d, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x10c(%rbp)	 RIP: 46f08f	 Bytes: 6
  %loadMem_46f08f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f08f = call %struct.Memory* @routine_movl__edx__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f08f)
  store %struct.Memory* %call_46f08f, %struct.Memory** %MEMORY

  ; Code: .L_46f095:	 RIP: 46f095	 Bytes: 0
  br label %block_.L_46f095
block_.L_46f095:

  ; Code: movl -0x10c(%rbp), %eax	 RIP: 46f095	 Bytes: 6
  %loadMem_46f095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f095 = call %struct.Memory* @routine_movl_MINUS0x10c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f095)
  store %struct.Memory* %call_46f095, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46f09b	 Bytes: 5
  %loadMem_46f09b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f09b = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f09b)
  store %struct.Memory* %call_46f09b, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46f0a0	 Bytes: 7
  %loadMem_46f0a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0a0 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0a0)
  store %struct.Memory* %call_46f0a0, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46f0a7	 Bytes: 7
  %loadMem_46f0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0a7 = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0a7)
  store %struct.Memory* %call_46f0a7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46f0ae	 Bytes: 1
  %loadMem_46f0ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0ae = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0ae)
  store %struct.Memory* %call_46f0ae, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46f0af	 Bytes: 2
  %loadMem_46f0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0af = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0af)
  store %struct.Memory* %call_46f0af, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46f0b1	 Bytes: 7
  %loadMem_46f0b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0b1 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0b1)
  store %struct.Memory* %call_46f0b1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f20b	 RIP: 46f0b8	 Bytes: 5
  %loadMem_46f0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0b8 = call %struct.Memory* @routine_jmpq_.L_46f20b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0b8, i64 339, i64 5)
  store %struct.Memory* %call_46f0b8, %struct.Memory** %MEMORY

  br label %block_.L_46f20b

  ; Code: .L_46f0bd:	 RIP: 46f0bd	 Bytes: 0
block_.L_46f0bd:

  ; Code: cmpl $0x1, -0x3c(%rbp)	 RIP: 46f0bd	 Bytes: 4
  %loadMem_46f0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0bd = call %struct.Memory* @routine_cmpl__0x1__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0bd)
  store %struct.Memory* %call_46f0bd, %struct.Memory** %MEMORY

  ; Code: jle .L_46f206	 RIP: 46f0c1	 Bytes: 6
  %loadMem_46f0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0c1 = call %struct.Memory* @routine_jle_.L_46f206(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0c1, i8* %BRANCH_TAKEN, i64 325, i64 6, i64 6)
  store %struct.Memory* %call_46f0c1, %struct.Memory** %MEMORY

  %loadBr_46f0c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f0c1 = icmp eq i8 %loadBr_46f0c1, 1
  br i1 %cmpBr_46f0c1, label %block_.L_46f206, label %block_46f0c7

block_46f0c7:
  ; Code: movq -0x90(%rbp), %rax	 RIP: 46f0c7	 Bytes: 7
  %loadMem_46f0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0c7 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0c7)
  store %struct.Memory* %call_46f0c7, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46f0ce	 Bytes: 4
  %loadMem_46f0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0ce = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0ce)
  store %struct.Memory* %call_46f0ce, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f0d2	 Bytes: 4
  %loadMem_46f0d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0d2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0d2)
  store %struct.Memory* %call_46f0d2, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46f0d6	 Bytes: 4
  %loadMem_46f0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0d6 = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0d6)
  store %struct.Memory* %call_46f0d6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f0da	 Bytes: 4
  %loadMem_46f0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0da = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0da)
  store %struct.Memory* %call_46f0da, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46f0de	 Bytes: 4
  %loadMem_46f0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0de = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0de)
  store %struct.Memory* %call_46f0de, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f0e2	 Bytes: 4
  %loadMem_46f0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0e2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0e2)
  store %struct.Memory* %call_46f0e2, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f0e6	 Bytes: 5
  %loadMem_46f0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0e6 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0e6)
  store %struct.Memory* %call_46f0e6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f0eb	 Bytes: 4
  %loadMem_46f0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0eb = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0eb)
  store %struct.Memory* %call_46f0eb, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46f0ef	 Bytes: 4
  %loadMem_46f0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0ef = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0ef)
  store %struct.Memory* %call_46f0ef, %struct.Memory** %MEMORY

  ; Code: movswl (%rax), %edx	 RIP: 46f0f3	 Bytes: 3
  %loadMem_46f0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0f3 = call %struct.Memory* @routine_movswl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0f3)
  store %struct.Memory* %call_46f0f3, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa0	 RIP: 46f0f6	 Bytes: 7
  %loadMem_46f0f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0f6 = call %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0f6)
  store %struct.Memory* %call_46f0f6, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rax	 RIP: 46f0fd	 Bytes: 7
  %loadMem_46f0fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f0fd = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f0fd)
  store %struct.Memory* %call_46f0fd, %struct.Memory** %MEMORY

  ; Code: movslq -0x64(%rbp), %rcx	 RIP: 46f104	 Bytes: 4
  %loadMem_46f104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f104 = call %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f104)
  store %struct.Memory* %call_46f104, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f108	 Bytes: 4
  %loadMem_46f108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f108 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f108)
  store %struct.Memory* %call_46f108, %struct.Memory** %MEMORY

  ; Code: movslq -0x68(%rbp), %rcx	 RIP: 46f10c	 Bytes: 4
  %loadMem_46f10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f10c = call %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f10c)
  store %struct.Memory* %call_46f10c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f110	 Bytes: 4
  %loadMem_46f110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f110 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f110)
  store %struct.Memory* %call_46f110, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 46f114	 Bytes: 4
  %loadMem_46f114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f114 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f114)
  store %struct.Memory* %call_46f114, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f118	 Bytes: 4
  %loadMem_46f118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f118 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f118)
  store %struct.Memory* %call_46f118, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f11c	 Bytes: 5
  %loadMem_46f11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f11c = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f11c)
  store %struct.Memory* %call_46f11c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f121	 Bytes: 4
  %loadMem_46f121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f121 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f121)
  store %struct.Memory* %call_46f121, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46f125	 Bytes: 4
  %loadMem_46f125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f125 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f125)
  store %struct.Memory* %call_46f125, %struct.Memory** %MEMORY

  ; Code: movswl 0x2(%rax), %edx	 RIP: 46f129	 Bytes: 4
  %loadMem_46f129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f129 = call %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f129)
  store %struct.Memory* %call_46f129, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d1fa4	 RIP: 46f12d	 Bytes: 7
  %loadMem_46f12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f12d = call %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f12d)
  store %struct.Memory* %call_46f12d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46f134	 Bytes: 4
  %loadMem_46f134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f134 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f134)
  store %struct.Memory* %call_46f134, %struct.Memory** %MEMORY

  ; Code: jne .L_46f190	 RIP: 46f138	 Bytes: 6
  %loadMem_46f138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f138 = call %struct.Memory* @routine_jne_.L_46f190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f138, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_46f138, %struct.Memory** %MEMORY

  %loadBr_46f138 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f138 = icmp eq i8 %loadBr_46f138, 1
  br i1 %cmpBr_46f138, label %block_.L_46f190, label %block_46f13e

block_46f13e:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46f13e	 Bytes: 8
  %loadMem_46f13e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f13e = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f13e)
  store %struct.Memory* %call_46f13e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f146	 Bytes: 8
  %loadMem_46f146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f146 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f146)
  store %struct.Memory* %call_46f146, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f14e	 Bytes: 6
  %loadMem_46f14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f14e = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f14e)
  store %struct.Memory* %call_46f14e, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f154	 Bytes: 3
  %loadMem_46f154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f154 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f154)
  store %struct.Memory* %call_46f154, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f157	 Bytes: 3
  %loadMem_46f157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f157 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f157)
  store %struct.Memory* %call_46f157, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f15a	 Bytes: 3
  %loadMem_46f15a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f15a = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f15a)
  store %struct.Memory* %call_46f15a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f15d	 Bytes: 4
  %loadMem_46f15d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f15d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f15d)
  store %struct.Memory* %call_46f15d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f161	 Bytes: 8
  %loadMem_46f161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f161 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f161)
  store %struct.Memory* %call_46f161, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f169	 Bytes: 6
  %loadMem_46f169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f169 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f169)
  store %struct.Memory* %call_46f169, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f16f	 Bytes: 3
  %loadMem_46f16f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f16f = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f16f)
  store %struct.Memory* %call_46f16f, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f172	 Bytes: 3
  %loadMem_46f172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f172 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f172)
  store %struct.Memory* %call_46f172, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f175	 Bytes: 3
  %loadMem_46f175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f175 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f175)
  store %struct.Memory* %call_46f175, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f178	 Bytes: 4
  %loadMem_46f178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f178 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f178)
  store %struct.Memory* %call_46f178, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46f17c	 Bytes: 3
  %loadMem_46f17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f17c = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f17c)
  store %struct.Memory* %call_46f17c, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46f17f	 Bytes: 4
  %loadMem_46f17f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f17f = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f17f)
  store %struct.Memory* %call_46f17f, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f183	 Bytes: 2
  %loadMem_46f183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f183 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f183)
  store %struct.Memory* %call_46f183, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x110(%rbp)	 RIP: 46f185	 Bytes: 6
  %loadMem_46f185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f185 = call %struct.Memory* @routine_movl__edx__MINUS0x110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f185)
  store %struct.Memory* %call_46f185, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f1e3	 RIP: 46f18b	 Bytes: 5
  %loadMem_46f18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f18b = call %struct.Memory* @routine_jmpq_.L_46f1e3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f18b, i64 88, i64 5)
  store %struct.Memory* %call_46f18b, %struct.Memory** %MEMORY

  br label %block_.L_46f1e3

  ; Code: .L_46f190:	 RIP: 46f190	 Bytes: 0
block_.L_46f190:

  ; Code: movq 0x6cd468, %rax	 RIP: 46f190	 Bytes: 8
  %loadMem_46f190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f190 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f190)
  store %struct.Memory* %call_46f190, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f198	 Bytes: 8
  %loadMem_46f198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f198 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f198)
  store %struct.Memory* %call_46f198, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f1a0	 Bytes: 6
  %loadMem_46f1a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1a0 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1a0)
  store %struct.Memory* %call_46f1a0, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f1a6	 Bytes: 3
  %loadMem_46f1a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1a6 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1a6)
  store %struct.Memory* %call_46f1a6, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f1a9	 Bytes: 3
  %loadMem_46f1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1a9 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1a9)
  store %struct.Memory* %call_46f1a9, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f1ac	 Bytes: 3
  %loadMem_46f1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1ac = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1ac)
  store %struct.Memory* %call_46f1ac, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f1af	 Bytes: 4
  %loadMem_46f1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1af = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1af)
  store %struct.Memory* %call_46f1af, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f1b3	 Bytes: 8
  %loadMem_46f1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1b3 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1b3)
  store %struct.Memory* %call_46f1b3, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f1bb	 Bytes: 6
  %loadMem_46f1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1bb = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1bb)
  store %struct.Memory* %call_46f1bb, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f1c1	 Bytes: 3
  %loadMem_46f1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1c1 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1c1)
  store %struct.Memory* %call_46f1c1, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f1c4	 Bytes: 3
  %loadMem_46f1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1c4 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1c4)
  store %struct.Memory* %call_46f1c4, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f1c7	 Bytes: 3
  %loadMem_46f1c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1c7 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1c7)
  store %struct.Memory* %call_46f1c7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f1ca	 Bytes: 4
  %loadMem_46f1ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1ca = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1ca)
  store %struct.Memory* %call_46f1ca, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f1ce	 Bytes: 5
  %loadMem_46f1ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1ce = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1ce)
  store %struct.Memory* %call_46f1ce, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f1d3	 Bytes: 4
  %loadMem_46f1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1d3 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1d3)
  store %struct.Memory* %call_46f1d3, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 46f1d7	 Bytes: 4
  %loadMem_46f1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1d7 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1d7)
  store %struct.Memory* %call_46f1d7, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f1db	 Bytes: 2
  %loadMem_46f1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1db = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1db)
  store %struct.Memory* %call_46f1db, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x110(%rbp)	 RIP: 46f1dd	 Bytes: 6
  %loadMem_46f1dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1dd = call %struct.Memory* @routine_movl__edx__MINUS0x110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1dd)
  store %struct.Memory* %call_46f1dd, %struct.Memory** %MEMORY

  ; Code: .L_46f1e3:	 RIP: 46f1e3	 Bytes: 0
  br label %block_.L_46f1e3
block_.L_46f1e3:

  ; Code: movl -0x110(%rbp), %eax	 RIP: 46f1e3	 Bytes: 6
  %loadMem_46f1e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1e3 = call %struct.Memory* @routine_movl_MINUS0x110__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1e3)
  store %struct.Memory* %call_46f1e3, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 46f1e9	 Bytes: 5
  %loadMem_46f1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1e9 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1e9)
  store %struct.Memory* %call_46f1e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46f1ee	 Bytes: 7
  %loadMem_46f1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1ee = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1ee)
  store %struct.Memory* %call_46f1ee, %struct.Memory** %MEMORY

  ; Code: movl 0x72369c, %eax	 RIP: 46f1f5	 Bytes: 7
  %loadMem_46f1f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1f5 = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1f5)
  store %struct.Memory* %call_46f1f5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46f1fc	 Bytes: 1
  %loadMem_46f1fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1fc = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1fc)
  store %struct.Memory* %call_46f1fc, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46f1fd	 Bytes: 2
  %loadMem_46f1fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1fd = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1fd)
  store %struct.Memory* %call_46f1fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46f1ff	 Bytes: 7
  %loadMem_46f1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f1ff = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f1ff)
  store %struct.Memory* %call_46f1ff, %struct.Memory** %MEMORY

  ; Code: .L_46f206:	 RIP: 46f206	 Bytes: 0
  br label %block_.L_46f206
block_.L_46f206:

  ; Code: jmpq .L_46f20b	 RIP: 46f206	 Bytes: 5
  %loadMem_46f206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f206 = call %struct.Memory* @routine_jmpq_.L_46f20b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f206, i64 5, i64 5)
  store %struct.Memory* %call_46f206, %struct.Memory** %MEMORY

  br label %block_.L_46f20b

  ; Code: .L_46f20b:	 RIP: 46f20b	 Bytes: 0
block_.L_46f20b:

  ; Code: jmpq .L_46f210	 RIP: 46f20b	 Bytes: 5
  %loadMem_46f20b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f20b = call %struct.Memory* @routine_jmpq_.L_46f210(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f20b, i64 5, i64 5)
  store %struct.Memory* %call_46f20b, %struct.Memory** %MEMORY

  br label %block_.L_46f210

  ; Code: .L_46f210:	 RIP: 46f210	 Bytes: 0
block_.L_46f210:

  ; Code: jmpq .L_46f215	 RIP: 46f210	 Bytes: 5
  %loadMem_46f210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f210 = call %struct.Memory* @routine_jmpq_.L_46f215(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f210, i64 5, i64 5)
  store %struct.Memory* %call_46f210, %struct.Memory** %MEMORY

  br label %block_.L_46f215

  ; Code: .L_46f215:	 RIP: 46f215	 Bytes: 0
block_.L_46f215:

  ; Code: jmpq .L_46f21a	 RIP: 46f215	 Bytes: 5
  %loadMem_46f215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f215 = call %struct.Memory* @routine_jmpq_.L_46f21a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f215, i64 5, i64 5)
  store %struct.Memory* %call_46f215, %struct.Memory** %MEMORY

  br label %block_.L_46f21a

  ; Code: .L_46f21a:	 RIP: 46f21a	 Bytes: 0
block_.L_46f21a:

  ; Code: cmpl $0x0, 0x6f934c	 RIP: 46f21a	 Bytes: 8
  %loadMem_46f21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f21a = call %struct.Memory* @routine_cmpl__0x0__0x6f934c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f21a)
  store %struct.Memory* %call_46f21a, %struct.Memory** %MEMORY

  ; Code: je .L_46f235	 RIP: 46f222	 Bytes: 6
  %loadMem_46f222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f222 = call %struct.Memory* @routine_je_.L_46f235(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f222, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_46f222, %struct.Memory** %MEMORY

  %loadBr_46f222 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f222 = icmp eq i8 %loadBr_46f222, 1
  br i1 %cmpBr_46f222, label %block_.L_46f235, label %block_46f228

block_46f228:
  ; Code: xorl %eax, %eax	 RIP: 46f228	 Bytes: 2
  %loadMem_46f228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f228 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f228)
  store %struct.Memory* %call_46f228, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x114(%rbp)	 RIP: 46f22a	 Bytes: 6
  %loadMem_46f22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f22a = call %struct.Memory* @routine_movl__eax__MINUS0x114__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f22a)
  store %struct.Memory* %call_46f22a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f242	 RIP: 46f230	 Bytes: 5
  %loadMem_46f230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f230 = call %struct.Memory* @routine_jmpq_.L_46f242(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f230, i64 18, i64 5)
  store %struct.Memory* %call_46f230, %struct.Memory** %MEMORY

  br label %block_.L_46f242

  ; Code: .L_46f235:	 RIP: 46f235	 Bytes: 0
block_.L_46f235:

  ; Code: movl 0x72369c, %eax	 RIP: 46f235	 Bytes: 7
  %loadMem_46f235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f235 = call %struct.Memory* @routine_movl_0x72369c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f235)
  store %struct.Memory* %call_46f235, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x114(%rbp)	 RIP: 46f23c	 Bytes: 6
  %loadMem_46f23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f23c = call %struct.Memory* @routine_movl__eax__MINUS0x114__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f23c)
  store %struct.Memory* %call_46f23c, %struct.Memory** %MEMORY

  ; Code: .L_46f242:	 RIP: 46f242	 Bytes: 0
  br label %block_.L_46f242
block_.L_46f242:

  ; Code: movl -0x114(%rbp), %eax	 RIP: 46f242	 Bytes: 6
  %loadMem_46f242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f242 = call %struct.Memory* @routine_movl_MINUS0x114__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f242)
  store %struct.Memory* %call_46f242, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x72369c	 RIP: 46f248	 Bytes: 7
  %loadMem_46f248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f248 = call %struct.Memory* @routine_movl__eax__0x72369c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f248)
  store %struct.Memory* %call_46f248, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f24f	 Bytes: 8
  %loadMem_46f24f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f24f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f24f)
  store %struct.Memory* %call_46f24f, %struct.Memory** %MEMORY

  ; Code: movl (%rcx), %eax	 RIP: 46f257	 Bytes: 2
  %loadMem_46f257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f257 = call %struct.Memory* @routine_movl___rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f257)
  store %struct.Memory* %call_46f257, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %edx	 RIP: 46f259	 Bytes: 4
  %loadMem_46f259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f259 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f259)
  store %struct.Memory* %call_46f259, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 46f25d	 Bytes: 3
  %loadMem_46f25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f25d = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f25d)
  store %struct.Memory* %call_46f25d, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 46f260	 Bytes: 2
  %loadMem_46f260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f260 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f260)
  store %struct.Memory* %call_46f260, %struct.Memory** %MEMORY

  ; Code: jle .L_46f372	 RIP: 46f262	 Bytes: 6
  %loadMem_46f262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f262 = call %struct.Memory* @routine_jle_.L_46f372(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f262, i8* %BRANCH_TAKEN, i64 272, i64 6, i64 6)
  store %struct.Memory* %call_46f262, %struct.Memory** %MEMORY

  %loadBr_46f262 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f262 = icmp eq i8 %loadBr_46f262, 1
  br i1 %cmpBr_46f262, label %block_.L_46f372, label %block_46f268

block_46f268:
  ; Code: movq 0x6cd468, %rax	 RIP: 46f268	 Bytes: 8
  %loadMem_46f268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f268 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f268)
  store %struct.Memory* %call_46f268, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f270	 Bytes: 8
  %loadMem_46f270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f270 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f270)
  store %struct.Memory* %call_46f270, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f278	 Bytes: 6
  %loadMem_46f278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f278 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f278)
  store %struct.Memory* %call_46f278, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f27e	 Bytes: 3
  %loadMem_46f27e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f27e = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f27e)
  store %struct.Memory* %call_46f27e, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f281	 Bytes: 3
  %loadMem_46f281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f281 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f281)
  store %struct.Memory* %call_46f281, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f284	 Bytes: 3
  %loadMem_46f284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f284 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f284)
  store %struct.Memory* %call_46f284, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f287	 Bytes: 4
  %loadMem_46f287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f287 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f287)
  store %struct.Memory* %call_46f287, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f28b	 Bytes: 8
  %loadMem_46f28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f28b = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f28b)
  store %struct.Memory* %call_46f28b, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f293	 Bytes: 6
  %loadMem_46f293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f293 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f293)
  store %struct.Memory* %call_46f293, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f299	 Bytes: 3
  %loadMem_46f299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f299 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f299)
  store %struct.Memory* %call_46f299, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f29c	 Bytes: 3
  %loadMem_46f29c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f29c = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f29c)
  store %struct.Memory* %call_46f29c, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f29f	 Bytes: 3
  %loadMem_46f29f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f29f = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f29f)
  store %struct.Memory* %call_46f29f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f2a2	 Bytes: 4
  %loadMem_46f2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2a2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2a2)
  store %struct.Memory* %call_46f2a2, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f2a6	 Bytes: 5
  %loadMem_46f2a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2a6 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2a6)
  store %struct.Memory* %call_46f2a6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f2ab	 Bytes: 4
  %loadMem_46f2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2ab = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2ab)
  store %struct.Memory* %call_46f2ab, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f2af	 Bytes: 4
  %loadMem_46f2af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2af = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2af)
  store %struct.Memory* %call_46f2af, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f2b3	 Bytes: 4
  %loadMem_46f2b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2b3 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2b3)
  store %struct.Memory* %call_46f2b3, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f2b7	 Bytes: 2
  %loadMem_46f2b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2b7 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2b7)
  store %struct.Memory* %call_46f2b7, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d32c4	 RIP: 46f2b9	 Bytes: 7
  %loadMem_46f2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2b9 = call %struct.Memory* @routine_movl__edx__0x6d32c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2b9)
  store %struct.Memory* %call_46f2b9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd468, %rax	 RIP: 46f2c0	 Bytes: 8
  %loadMem_46f2c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2c0 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2c0)
  store %struct.Memory* %call_46f2c0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f2c8	 Bytes: 8
  %loadMem_46f2c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2c8 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2c8)
  store %struct.Memory* %call_46f2c8, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f2d0	 Bytes: 6
  %loadMem_46f2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2d0 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2d0)
  store %struct.Memory* %call_46f2d0, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f2d6	 Bytes: 3
  %loadMem_46f2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2d6 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2d6)
  store %struct.Memory* %call_46f2d6, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f2d9	 Bytes: 3
  %loadMem_46f2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2d9 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2d9)
  store %struct.Memory* %call_46f2d9, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f2dc	 Bytes: 3
  %loadMem_46f2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2dc = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2dc)
  store %struct.Memory* %call_46f2dc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f2df	 Bytes: 4
  %loadMem_46f2df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2df = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2df)
  store %struct.Memory* %call_46f2df, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f2e3	 Bytes: 8
  %loadMem_46f2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2e3 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2e3)
  store %struct.Memory* %call_46f2e3, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f2eb	 Bytes: 6
  %loadMem_46f2eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2eb = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2eb)
  store %struct.Memory* %call_46f2eb, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f2f1	 Bytes: 3
  %loadMem_46f2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2f1 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2f1)
  store %struct.Memory* %call_46f2f1, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f2f4	 Bytes: 3
  %loadMem_46f2f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2f4 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2f4)
  store %struct.Memory* %call_46f2f4, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f2f7	 Bytes: 3
  %loadMem_46f2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2f7 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2f7)
  store %struct.Memory* %call_46f2f7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f2fa	 Bytes: 4
  %loadMem_46f2fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2fa = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2fa)
  store %struct.Memory* %call_46f2fa, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f2fe	 Bytes: 5
  %loadMem_46f2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f2fe = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f2fe)
  store %struct.Memory* %call_46f2fe, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f303	 Bytes: 4
  %loadMem_46f303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f303 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f303)
  store %struct.Memory* %call_46f303, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f307	 Bytes: 4
  %loadMem_46f307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f307 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f307)
  store %struct.Memory* %call_46f307, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f30b	 Bytes: 4
  %loadMem_46f30b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f30b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f30b)
  store %struct.Memory* %call_46f30b, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %edx	 RIP: 46f30f	 Bytes: 3
  %loadMem_46f30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f30f = call %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f30f)
  store %struct.Memory* %call_46f30f, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x70fd54	 RIP: 46f312	 Bytes: 7
  %loadMem_46f312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f312 = call %struct.Memory* @routine_movl__edx__0x70fd54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f312)
  store %struct.Memory* %call_46f312, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd468, %rax	 RIP: 46f319	 Bytes: 8
  %loadMem_46f319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f319 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f319)
  store %struct.Memory* %call_46f319, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f321	 Bytes: 8
  %loadMem_46f321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f321 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f321)
  store %struct.Memory* %call_46f321, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f329	 Bytes: 6
  %loadMem_46f329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f329 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f329)
  store %struct.Memory* %call_46f329, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f32f	 Bytes: 3
  %loadMem_46f32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f32f = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f32f)
  store %struct.Memory* %call_46f32f, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f332	 Bytes: 3
  %loadMem_46f332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f332 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f332)
  store %struct.Memory* %call_46f332, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f335	 Bytes: 3
  %loadMem_46f335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f335 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f335)
  store %struct.Memory* %call_46f335, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f338	 Bytes: 4
  %loadMem_46f338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f338 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f338)
  store %struct.Memory* %call_46f338, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f33c	 Bytes: 8
  %loadMem_46f33c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f33c = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f33c)
  store %struct.Memory* %call_46f33c, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f344	 Bytes: 6
  %loadMem_46f344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f344 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f344)
  store %struct.Memory* %call_46f344, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f34a	 Bytes: 3
  %loadMem_46f34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f34a = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f34a)
  store %struct.Memory* %call_46f34a, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f34d	 Bytes: 3
  %loadMem_46f34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f34d = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f34d)
  store %struct.Memory* %call_46f34d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f350	 Bytes: 3
  %loadMem_46f350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f350 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f350)
  store %struct.Memory* %call_46f350, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f353	 Bytes: 4
  %loadMem_46f353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f353 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f353)
  store %struct.Memory* %call_46f353, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f357	 Bytes: 5
  %loadMem_46f357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f357 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f357)
  store %struct.Memory* %call_46f357, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f35c	 Bytes: 4
  %loadMem_46f35c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f35c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f35c)
  store %struct.Memory* %call_46f35c, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f360	 Bytes: 4
  %loadMem_46f360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f360 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f360)
  store %struct.Memory* %call_46f360, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f364	 Bytes: 4
  %loadMem_46f364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f364 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f364)
  store %struct.Memory* %call_46f364, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 46f368	 Bytes: 3
  %loadMem_46f368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f368 = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f368)
  store %struct.Memory* %call_46f368, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x70fd58	 RIP: 46f36b	 Bytes: 7
  %loadMem_46f36b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f36b = call %struct.Memory* @routine_movl__edx__0x70fd58(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f36b)
  store %struct.Memory* %call_46f36b, %struct.Memory** %MEMORY

  ; Code: .L_46f372:	 RIP: 46f372	 Bytes: 0
  br label %block_.L_46f372
block_.L_46f372:

  ; Code: cmpl $0x1, -0x30(%rbp)	 RIP: 46f372	 Bytes: 4
  %loadMem_46f372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f372 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f372)
  store %struct.Memory* %call_46f372, %struct.Memory** %MEMORY

  ; Code: jne .L_46f5a1	 RIP: 46f376	 Bytes: 6
  %loadMem_46f376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f376 = call %struct.Memory* @routine_jne_.L_46f5a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f376, i8* %BRANCH_TAKEN, i64 555, i64 6, i64 6)
  store %struct.Memory* %call_46f376, %struct.Memory** %MEMORY

  %loadBr_46f376 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f376 = icmp eq i8 %loadBr_46f376, 1
  br i1 %cmpBr_46f376, label %block_.L_46f5a1, label %block_46f37c

block_46f37c:
  ; Code: movl 0x722ca8, %eax	 RIP: 46f37c	 Bytes: 7
  %loadMem_46f37c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f37c = call %struct.Memory* @routine_movl_0x722ca8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f37c)
  store %struct.Memory* %call_46f37c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46f383	 Bytes: 1
  %loadMem_46f383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f383 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f383)
  store %struct.Memory* %call_46f383, %struct.Memory** %MEMORY

  ; Code: idivl -0xb8(%rbp)	 RIP: 46f384	 Bytes: 6
  %loadMem_46f384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f384 = call %struct.Memory* @routine_idivl_MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f384)
  store %struct.Memory* %call_46f384, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %edx	 RIP: 46f38a	 Bytes: 3
  %loadMem_46f38a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f38a = call %struct.Memory* @routine_cmpl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f38a)
  store %struct.Memory* %call_46f38a, %struct.Memory** %MEMORY

  ; Code: jle .L_46f5a1	 RIP: 46f38d	 Bytes: 6
  %loadMem_46f38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f38d = call %struct.Memory* @routine_jle_.L_46f5a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f38d, i8* %BRANCH_TAKEN, i64 532, i64 6, i64 6)
  store %struct.Memory* %call_46f38d, %struct.Memory** %MEMORY

  %loadBr_46f38d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f38d = icmp eq i8 %loadBr_46f38d, 1
  br i1 %cmpBr_46f38d, label %block_.L_46f5a1, label %block_46f393

block_46f393:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46f393	 Bytes: 8
  %loadMem_46f393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f393 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f393)
  store %struct.Memory* %call_46f393, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f39b	 Bytes: 8
  %loadMem_46f39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f39b = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f39b)
  store %struct.Memory* %call_46f39b, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f3a3	 Bytes: 6
  %loadMem_46f3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3a3 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3a3)
  store %struct.Memory* %call_46f3a3, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f3a9	 Bytes: 3
  %loadMem_46f3a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3a9 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3a9)
  store %struct.Memory* %call_46f3a9, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f3ac	 Bytes: 3
  %loadMem_46f3ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3ac = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3ac)
  store %struct.Memory* %call_46f3ac, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f3af	 Bytes: 3
  %loadMem_46f3af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3af = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3af)
  store %struct.Memory* %call_46f3af, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f3b2	 Bytes: 4
  %loadMem_46f3b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3b2 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3b2)
  store %struct.Memory* %call_46f3b2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f3b6	 Bytes: 8
  %loadMem_46f3b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3b6 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3b6)
  store %struct.Memory* %call_46f3b6, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f3be	 Bytes: 6
  %loadMem_46f3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3be = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3be)
  store %struct.Memory* %call_46f3be, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f3c4	 Bytes: 3
  %loadMem_46f3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3c4 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3c4)
  store %struct.Memory* %call_46f3c4, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f3c7	 Bytes: 3
  %loadMem_46f3c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3c7 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3c7)
  store %struct.Memory* %call_46f3c7, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f3ca	 Bytes: 3
  %loadMem_46f3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3ca = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3ca)
  store %struct.Memory* %call_46f3ca, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f3cd	 Bytes: 4
  %loadMem_46f3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3cd = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3cd)
  store %struct.Memory* %call_46f3cd, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rcx	 RIP: 46f3d1	 Bytes: 5
  %loadMem_46f3d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3d1 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3d1)
  store %struct.Memory* %call_46f3d1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f3d6	 Bytes: 4
  %loadMem_46f3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3d6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3d6)
  store %struct.Memory* %call_46f3d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f3da	 Bytes: 4
  %loadMem_46f3da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3da = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3da)
  store %struct.Memory* %call_46f3da, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f3de	 Bytes: 4
  %loadMem_46f3de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3de = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3de)
  store %struct.Memory* %call_46f3de, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f3e2	 Bytes: 2
  %loadMem_46f3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3e2 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3e2)
  store %struct.Memory* %call_46f3e2, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6d32c4	 RIP: 46f3e4	 Bytes: 7
  %loadMem_46f3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3e4 = call %struct.Memory* @routine_movl__edx__0x6d32c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3e4)
  store %struct.Memory* %call_46f3e4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rax	 RIP: 46f3eb	 Bytes: 8
  %loadMem_46f3eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3eb = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3eb)
  store %struct.Memory* %call_46f3eb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f3f3	 Bytes: 8
  %loadMem_46f3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3f3 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3f3)
  store %struct.Memory* %call_46f3f3, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f3fb	 Bytes: 6
  %loadMem_46f3fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f3fb = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f3fb)
  store %struct.Memory* %call_46f3fb, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f401	 Bytes: 3
  %loadMem_46f401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f401 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f401)
  store %struct.Memory* %call_46f401, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f404	 Bytes: 3
  %loadMem_46f404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f404 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f404)
  store %struct.Memory* %call_46f404, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f407	 Bytes: 3
  %loadMem_46f407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f407 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f407)
  store %struct.Memory* %call_46f407, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f40a	 Bytes: 4
  %loadMem_46f40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f40a = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f40a)
  store %struct.Memory* %call_46f40a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f40e	 Bytes: 8
  %loadMem_46f40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f40e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f40e)
  store %struct.Memory* %call_46f40e, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f416	 Bytes: 6
  %loadMem_46f416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f416 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f416)
  store %struct.Memory* %call_46f416, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f41c	 Bytes: 3
  %loadMem_46f41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f41c = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f41c)
  store %struct.Memory* %call_46f41c, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f41f	 Bytes: 3
  %loadMem_46f41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f41f = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f41f)
  store %struct.Memory* %call_46f41f, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f422	 Bytes: 3
  %loadMem_46f422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f422 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f422)
  store %struct.Memory* %call_46f422, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f425	 Bytes: 4
  %loadMem_46f425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f425 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f425)
  store %struct.Memory* %call_46f425, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46f429	 Bytes: 3
  %loadMem_46f429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f429 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f429)
  store %struct.Memory* %call_46f429, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f42c	 Bytes: 4
  %loadMem_46f42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f42c = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f42c)
  store %struct.Memory* %call_46f42c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f430	 Bytes: 4
  %loadMem_46f430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f430 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f430)
  store %struct.Memory* %call_46f430, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x4(%rax), %xmm0	 RIP: 46f434	 Bytes: 5
  %loadMem_46f434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f434 = call %struct.Memory* @routine_cvtsi2sdl_0x4__rax____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f434)
  store %struct.Memory* %call_46f434, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0xbc(%rbp)	 RIP: 46f439	 Bytes: 7
  %loadMem_46f439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f439 = call %struct.Memory* @routine_cmpl__0x1__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f439)
  store %struct.Memory* %call_46f439, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x120(%rbp)	 RIP: 46f440	 Bytes: 8
  %loadMem_46f440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f440 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f440)
  store %struct.Memory* %call_46f440, %struct.Memory** %MEMORY

  ; Code: jne .L_46f463	 RIP: 46f448	 Bytes: 6
  %loadMem_46f448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f448 = call %struct.Memory* @routine_jne_.L_46f463(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f448, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_46f448, %struct.Memory** %MEMORY

  %loadBr_46f448 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f448 = icmp eq i8 %loadBr_46f448, 1
  br i1 %cmpBr_46f448, label %block_.L_46f463, label %block_46f44e

block_46f44e:
  ; Code: cvtsi2sdl -0xb8(%rbp), %xmm0	 RIP: 46f44e	 Bytes: 8
  %loadMem_46f44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f44e = call %struct.Memory* @routine_cvtsi2sdl_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f44e)
  store %struct.Memory* %call_46f44e, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x128(%rbp)	 RIP: 46f456	 Bytes: 8
  %loadMem_46f456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f456 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f456)
  store %struct.Memory* %call_46f456, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f4a7	 RIP: 46f45e	 Bytes: 5
  %loadMem_46f45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f45e = call %struct.Memory* @routine_jmpq_.L_46f4a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f45e, i64 73, i64 5)
  store %struct.Memory* %call_46f45e, %struct.Memory** %MEMORY

  br label %block_.L_46f4a7

  ; Code: .L_46f463:	 RIP: 46f463	 Bytes: 0
block_.L_46f463:

  ; Code: movsd 0x423dd(%rip), %xmm0	 RIP: 46f463	 Bytes: 8
  %loadMem_46f463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f463 = call %struct.Memory* @routine_movsd_0x423dd__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f463)
  store %struct.Memory* %call_46f463, %struct.Memory** %MEMORY

  ; Code: movsd 0x423ed(%rip), %xmm1	 RIP: 46f46b	 Bytes: 8
  %loadMem_46f46b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f46b = call %struct.Memory* @routine_movsd_0x423ed__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f46b)
  store %struct.Memory* %call_46f46b, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46f473	 Bytes: 6
  %loadMem_46f473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f473 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f473)
  store %struct.Memory* %call_46f473, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46f479	 Bytes: 6
  %loadMem_46f479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f479 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f479)
  store %struct.Memory* %call_46f479, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %eax, %xmm2	 RIP: 46f47f	 Bytes: 4
  %loadMem_46f47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f47f = call %struct.Memory* @routine_cvtsi2sdl__eax___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f47f)
  store %struct.Memory* %call_46f47f, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm2	 RIP: 46f483	 Bytes: 4
  %loadMem_46f483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f483 = call %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f483)
  store %struct.Memory* %call_46f483, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46f487	 Bytes: 6
  %loadMem_46f487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f487 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f487)
  store %struct.Memory* %call_46f487, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46f48d	 Bytes: 6
  %loadMem_46f48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f48d = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f48d)
  store %struct.Memory* %call_46f48d, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %eax, %xmm1	 RIP: 46f493	 Bytes: 4
  %loadMem_46f493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f493 = call %struct.Memory* @routine_cvtsi2sdl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f493)
  store %struct.Memory* %call_46f493, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 46f497	 Bytes: 4
  %loadMem_46f497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f497 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f497)
  store %struct.Memory* %call_46f497, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm2	 RIP: 46f49b	 Bytes: 4
  %loadMem_46f49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f49b = call %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f49b)
  store %struct.Memory* %call_46f49b, %struct.Memory** %MEMORY

  ; Code: movsd %xmm2, -0x128(%rbp)	 RIP: 46f49f	 Bytes: 8
  %loadMem_46f49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f49f = call %struct.Memory* @routine_movsd__xmm2__MINUS0x128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f49f)
  store %struct.Memory* %call_46f49f, %struct.Memory** %MEMORY

  ; Code: .L_46f4a7:	 RIP: 46f4a7	 Bytes: 0
  br label %block_.L_46f4a7
block_.L_46f4a7:

  ; Code: movsd -0x128(%rbp), %xmm0	 RIP: 46f4a7	 Bytes: 8
  %loadMem_46f4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4a7 = call %struct.Memory* @routine_movsd_MINUS0x128__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4a7)
  store %struct.Memory* %call_46f4a7, %struct.Memory** %MEMORY

  ; Code: movsd -0x120(%rbp), %xmm1	 RIP: 46f4af	 Bytes: 8
  %loadMem_46f4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4af = call %struct.Memory* @routine_movsd_MINUS0x120__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4af)
  store %struct.Memory* %call_46f4af, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm0, %xmm1	 RIP: 46f4b7	 Bytes: 4
  %loadMem_46f4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4b7 = call %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4b7)
  store %struct.Memory* %call_46f4b7, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 46f4bb	 Bytes: 4
  %loadMem_46f4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4bb = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4bb)
  store %struct.Memory* %call_46f4bb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70fd54	 RIP: 46f4bf	 Bytes: 7
  %loadMem_46f4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4bf = call %struct.Memory* @routine_movl__eax__0x70fd54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4bf)
  store %struct.Memory* %call_46f4bf, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rcx	 RIP: 46f4c6	 Bytes: 8
  %loadMem_46f4c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4c6 = call %struct.Memory* @routine_movq_0x6cd3b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4c6)
  store %struct.Memory* %call_46f4c6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46f4ce	 Bytes: 8
  %loadMem_46f4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4ce = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4ce)
  store %struct.Memory* %call_46f4ce, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %eax	 RIP: 46f4d6	 Bytes: 6
  %loadMem_46f4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4d6 = call %struct.Memory* @routine_movl_0x98__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4d6)
  store %struct.Memory* %call_46f4d6, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f4dc	 Bytes: 3
  %loadMem_46f4dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4dc = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4dc)
  store %struct.Memory* %call_46f4dc, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %eax	 RIP: 46f4df	 Bytes: 3
  %loadMem_46f4df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4df = call %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4df)
  store %struct.Memory* %call_46f4df, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f4e2	 Bytes: 3
  %loadMem_46f4e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4e2 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4e2)
  store %struct.Memory* %call_46f4e2, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f4e5	 Bytes: 4
  %loadMem_46f4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4e5 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4e5)
  store %struct.Memory* %call_46f4e5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46f4e9	 Bytes: 8
  %loadMem_46f4e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4e9 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4e9)
  store %struct.Memory* %call_46f4e9, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %eax	 RIP: 46f4f1	 Bytes: 6
  %loadMem_46f4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4f1 = call %struct.Memory* @routine_movl_0x9c__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4f1)
  store %struct.Memory* %call_46f4f1, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f4f7	 Bytes: 3
  %loadMem_46f4f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4f7 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4f7)
  store %struct.Memory* %call_46f4f7, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 46f4fa	 Bytes: 3
  %loadMem_46f4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4fa = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4fa)
  store %struct.Memory* %call_46f4fa, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f4fd	 Bytes: 3
  %loadMem_46f4fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f4fd = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f4fd)
  store %struct.Memory* %call_46f4fd, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f500	 Bytes: 4
  %loadMem_46f500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f500 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f500)
  store %struct.Memory* %call_46f500, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 46f504	 Bytes: 3
  %loadMem_46f504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f504 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f504)
  store %struct.Memory* %call_46f504, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 46f507	 Bytes: 4
  %loadMem_46f507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f507 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f507)
  store %struct.Memory* %call_46f507, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f50b	 Bytes: 4
  %loadMem_46f50b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f50b = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f50b)
  store %struct.Memory* %call_46f50b, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x8(%rcx), %xmm0	 RIP: 46f50f	 Bytes: 5
  %loadMem_46f50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f50f = call %struct.Memory* @routine_cvtsi2sdl_0x8__rcx____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f50f)
  store %struct.Memory* %call_46f50f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0xbc(%rbp)	 RIP: 46f514	 Bytes: 7
  %loadMem_46f514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f514 = call %struct.Memory* @routine_cmpl__0x1__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f514)
  store %struct.Memory* %call_46f514, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x130(%rbp)	 RIP: 46f51b	 Bytes: 8
  %loadMem_46f51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f51b = call %struct.Memory* @routine_movsd__xmm0__MINUS0x130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f51b)
  store %struct.Memory* %call_46f51b, %struct.Memory** %MEMORY

  ; Code: jne .L_46f53e	 RIP: 46f523	 Bytes: 6
  %loadMem_46f523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f523 = call %struct.Memory* @routine_jne_.L_46f53e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f523, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_46f523, %struct.Memory** %MEMORY

  %loadBr_46f523 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f523 = icmp eq i8 %loadBr_46f523, 1
  br i1 %cmpBr_46f523, label %block_.L_46f53e, label %block_46f529

block_46f529:
  ; Code: cvtsi2sdl -0xb8(%rbp), %xmm0	 RIP: 46f529	 Bytes: 8
  %loadMem_46f529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f529 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f529)
  store %struct.Memory* %call_46f529, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x138(%rbp)	 RIP: 46f531	 Bytes: 8
  %loadMem_46f531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f531 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f531)
  store %struct.Memory* %call_46f531, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f582	 RIP: 46f539	 Bytes: 5
  %loadMem_46f539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f539 = call %struct.Memory* @routine_jmpq_.L_46f582(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f539, i64 73, i64 5)
  store %struct.Memory* %call_46f539, %struct.Memory** %MEMORY

  br label %block_.L_46f582

  ; Code: .L_46f53e:	 RIP: 46f53e	 Bytes: 0
block_.L_46f53e:

  ; Code: movsd 0x42302(%rip), %xmm0	 RIP: 46f53e	 Bytes: 8
  %loadMem_46f53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f53e = call %struct.Memory* @routine_movsd_0x42302__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f53e)
  store %struct.Memory* %call_46f53e, %struct.Memory** %MEMORY

  ; Code: movsd 0x42312(%rip), %xmm1	 RIP: 46f546	 Bytes: 8
  %loadMem_46f546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f546 = call %struct.Memory* @routine_movsd_0x42312__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f546)
  store %struct.Memory* %call_46f546, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46f54e	 Bytes: 6
  %loadMem_46f54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f54e = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f54e)
  store %struct.Memory* %call_46f54e, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46f554	 Bytes: 6
  %loadMem_46f554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f554 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f554)
  store %struct.Memory* %call_46f554, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %eax, %xmm2	 RIP: 46f55a	 Bytes: 4
  %loadMem_46f55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f55a = call %struct.Memory* @routine_cvtsi2sdl__eax___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f55a)
  store %struct.Memory* %call_46f55a, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm2	 RIP: 46f55e	 Bytes: 4
  %loadMem_46f55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f55e = call %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f55e)
  store %struct.Memory* %call_46f55e, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46f562	 Bytes: 6
  %loadMem_46f562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f562 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f562)
  store %struct.Memory* %call_46f562, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46f568	 Bytes: 6
  %loadMem_46f568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f568 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f568)
  store %struct.Memory* %call_46f568, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl %eax, %xmm1	 RIP: 46f56e	 Bytes: 4
  %loadMem_46f56e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f56e = call %struct.Memory* @routine_cvtsi2sdl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f56e)
  store %struct.Memory* %call_46f56e, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 46f572	 Bytes: 4
  %loadMem_46f572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f572 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f572)
  store %struct.Memory* %call_46f572, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm2	 RIP: 46f576	 Bytes: 4
  %loadMem_46f576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f576 = call %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f576)
  store %struct.Memory* %call_46f576, %struct.Memory** %MEMORY

  ; Code: movsd %xmm2, -0x138(%rbp)	 RIP: 46f57a	 Bytes: 8
  %loadMem_46f57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f57a = call %struct.Memory* @routine_movsd__xmm2__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f57a)
  store %struct.Memory* %call_46f57a, %struct.Memory** %MEMORY

  ; Code: .L_46f582:	 RIP: 46f582	 Bytes: 0
  br label %block_.L_46f582
block_.L_46f582:

  ; Code: movsd -0x138(%rbp), %xmm0	 RIP: 46f582	 Bytes: 8
  %loadMem_46f582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f582 = call %struct.Memory* @routine_movsd_MINUS0x138__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f582)
  store %struct.Memory* %call_46f582, %struct.Memory** %MEMORY

  ; Code: movsd -0x130(%rbp), %xmm1	 RIP: 46f58a	 Bytes: 8
  %loadMem_46f58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f58a = call %struct.Memory* @routine_movsd_MINUS0x130__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f58a)
  store %struct.Memory* %call_46f58a, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm0, %xmm1	 RIP: 46f592	 Bytes: 4
  %loadMem_46f592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f592 = call %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f592)
  store %struct.Memory* %call_46f592, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 46f596	 Bytes: 4
  %loadMem_46f596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f596 = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f596)
  store %struct.Memory* %call_46f596, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70fd58	 RIP: 46f59a	 Bytes: 7
  %loadMem_46f59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f59a = call %struct.Memory* @routine_movl__eax__0x70fd58(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f59a)
  store %struct.Memory* %call_46f59a, %struct.Memory** %MEMORY

  ; Code: .L_46f5a1:	 RIP: 46f5a1	 Bytes: 0
  br label %block_.L_46f5a1
block_.L_46f5a1:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 46f5a1	 Bytes: 8
  %loadMem_46f5a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5a1 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5a1)
  store %struct.Memory* %call_46f5a1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0xb40(%rax)	 RIP: 46f5a9	 Bytes: 7
  %loadMem_46f5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5a9 = call %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5a9)
  store %struct.Memory* %call_46f5a9, %struct.Memory** %MEMORY

  ; Code: jne .L_46f959	 RIP: 46f5b0	 Bytes: 6
  %loadMem_46f5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5b0 = call %struct.Memory* @routine_jne_.L_46f959(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5b0, i8* %BRANCH_TAKEN, i64 937, i64 6, i64 6)
  store %struct.Memory* %call_46f5b0, %struct.Memory** %MEMORY

  %loadBr_46f5b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f5b0 = icmp eq i8 %loadBr_46f5b0, 1
  br i1 %cmpBr_46f5b0, label %block_.L_46f959, label %block_46f5b6

block_46f5b6:
  ; Code: movq 0x6cb900, %rax	 RIP: 46f5b6	 Bytes: 8
  %loadMem_46f5b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5b6 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5b6)
  store %struct.Memory* %call_46f5b6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 46f5be	 Bytes: 4
  %loadMem_46f5be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5be = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5be)
  store %struct.Memory* %call_46f5be, %struct.Memory** %MEMORY

  ; Code: jne .L_46f787	 RIP: 46f5c2	 Bytes: 6
  %loadMem_46f5c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5c2 = call %struct.Memory* @routine_jne_.L_46f787(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5c2, i8* %BRANCH_TAKEN, i64 453, i64 6, i64 6)
  store %struct.Memory* %call_46f5c2, %struct.Memory** %MEMORY

  %loadBr_46f5c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f5c2 = icmp eq i8 %loadBr_46f5c2, 1
  br i1 %cmpBr_46f5c2, label %block_.L_46f787, label %block_46f5c8

block_46f5c8:
  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f5c8	 Bytes: 4
  %loadMem_46f5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5c8 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5c8)
  store %struct.Memory* %call_46f5c8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 46f5cc	 Bytes: 3
  %loadMem_46f5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5cc = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5cc)
  store %struct.Memory* %call_46f5cc, %struct.Memory** %MEMORY

  ; Code: jle .L_46f787	 RIP: 46f5cf	 Bytes: 6
  %loadMem_46f5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5cf = call %struct.Memory* @routine_jle_.L_46f787(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5cf, i8* %BRANCH_TAKEN, i64 440, i64 6, i64 6)
  store %struct.Memory* %call_46f5cf, %struct.Memory** %MEMORY

  %loadBr_46f5cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f5cf = icmp eq i8 %loadBr_46f5cf, 1
  br i1 %cmpBr_46f5cf, label %block_.L_46f787, label %block_46f5d5

block_46f5d5:
  ; Code: movq 0x6cd468, %rax	 RIP: 46f5d5	 Bytes: 8
  %loadMem_46f5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5d5 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5d5)
  store %struct.Memory* %call_46f5d5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f5dd	 Bytes: 8
  %loadMem_46f5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5dd = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5dd)
  store %struct.Memory* %call_46f5dd, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f5e5	 Bytes: 6
  %loadMem_46f5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5e5 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5e5)
  store %struct.Memory* %call_46f5e5, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f5eb	 Bytes: 3
  %loadMem_46f5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5eb = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5eb)
  store %struct.Memory* %call_46f5eb, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f5ee	 Bytes: 3
  %loadMem_46f5ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5ee = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5ee)
  store %struct.Memory* %call_46f5ee, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f5f1	 Bytes: 3
  %loadMem_46f5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5f1 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5f1)
  store %struct.Memory* %call_46f5f1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f5f4	 Bytes: 4
  %loadMem_46f5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5f4 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5f4)
  store %struct.Memory* %call_46f5f4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f5f8	 Bytes: 8
  %loadMem_46f5f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f5f8 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f5f8)
  store %struct.Memory* %call_46f5f8, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f600	 Bytes: 6
  %loadMem_46f600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f600 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f600)
  store %struct.Memory* %call_46f600, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f606	 Bytes: 3
  %loadMem_46f606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f606 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f606)
  store %struct.Memory* %call_46f606, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f609	 Bytes: 3
  %loadMem_46f609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f609 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f609)
  store %struct.Memory* %call_46f609, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f60c	 Bytes: 3
  %loadMem_46f60c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f60c = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f60c)
  store %struct.Memory* %call_46f60c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f60f	 Bytes: 4
  %loadMem_46f60f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f60f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f60f)
  store %struct.Memory* %call_46f60f, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %edx	 RIP: 46f613	 Bytes: 4
  %loadMem_46f613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f613 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f613)
  store %struct.Memory* %call_46f613, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %edx	 RIP: 46f617	 Bytes: 3
  %loadMem_46f617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f617 = call %struct.Memory* @routine_subl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f617)
  store %struct.Memory* %call_46f617, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f61a	 Bytes: 3
  %loadMem_46f61a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f61a = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f61a)
  store %struct.Memory* %call_46f61a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f61d	 Bytes: 4
  %loadMem_46f61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f61d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f61d)
  store %struct.Memory* %call_46f61d, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f621	 Bytes: 4
  %loadMem_46f621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f621 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f621)
  store %struct.Memory* %call_46f621, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f625	 Bytes: 4
  %loadMem_46f625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f625 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f625)
  store %struct.Memory* %call_46f625, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f629	 Bytes: 2
  %loadMem_46f629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f629 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f629)
  store %struct.Memory* %call_46f629, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6cd480	 RIP: 46f62b	 Bytes: 7
  %loadMem_46f62b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f62b = call %struct.Memory* @routine_movl__edx__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f62b)
  store %struct.Memory* %call_46f62b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x6f934c	 RIP: 46f632	 Bytes: 8
  %loadMem_46f632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f632 = call %struct.Memory* @routine_cmpl__0x0__0x6f934c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f632)
  store %struct.Memory* %call_46f632, %struct.Memory** %MEMORY

  ; Code: je .L_46f64d	 RIP: 46f63a	 Bytes: 6
  %loadMem_46f63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f63a = call %struct.Memory* @routine_je_.L_46f64d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f63a, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_46f63a, %struct.Memory** %MEMORY

  %loadBr_46f63a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f63a = icmp eq i8 %loadBr_46f63a, 1
  br i1 %cmpBr_46f63a, label %block_.L_46f64d, label %block_46f640

block_46f640:
  ; Code: xorl %eax, %eax	 RIP: 46f640	 Bytes: 2
  %loadMem_46f640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f640 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f640)
  store %struct.Memory* %call_46f640, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 46f642	 Bytes: 6
  %loadMem_46f642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f642 = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f642)
  store %struct.Memory* %call_46f642, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f65a	 RIP: 46f648	 Bytes: 5
  %loadMem_46f648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f648 = call %struct.Memory* @routine_jmpq_.L_46f65a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f648, i64 18, i64 5)
  store %struct.Memory* %call_46f648, %struct.Memory** %MEMORY

  br label %block_.L_46f65a

  ; Code: .L_46f64d:	 RIP: 46f64d	 Bytes: 0
block_.L_46f64d:

  ; Code: movl 0x6cd480, %eax	 RIP: 46f64d	 Bytes: 7
  %loadMem_46f64d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f64d = call %struct.Memory* @routine_movl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f64d)
  store %struct.Memory* %call_46f64d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 46f654	 Bytes: 6
  %loadMem_46f654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f654 = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f654)
  store %struct.Memory* %call_46f654, %struct.Memory** %MEMORY

  ; Code: .L_46f65a:	 RIP: 46f65a	 Bytes: 0
  br label %block_.L_46f65a
block_.L_46f65a:

  ; Code: movl -0x13c(%rbp), %eax	 RIP: 46f65a	 Bytes: 6
  %loadMem_46f65a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f65a = call %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f65a)
  store %struct.Memory* %call_46f65a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd480	 RIP: 46f660	 Bytes: 7
  %loadMem_46f660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f660 = call %struct.Memory* @routine_movl__eax__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f660)
  store %struct.Memory* %call_46f660, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd468, %rcx	 RIP: 46f667	 Bytes: 8
  %loadMem_46f667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f667 = call %struct.Memory* @routine_movq_0x6cd468___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f667)
  store %struct.Memory* %call_46f667, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46f66f	 Bytes: 8
  %loadMem_46f66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f66f = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f66f)
  store %struct.Memory* %call_46f66f, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %eax	 RIP: 46f677	 Bytes: 6
  %loadMem_46f677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f677 = call %struct.Memory* @routine_movl_0x98__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f677)
  store %struct.Memory* %call_46f677, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f67d	 Bytes: 3
  %loadMem_46f67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f67d = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f67d)
  store %struct.Memory* %call_46f67d, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %eax	 RIP: 46f680	 Bytes: 3
  %loadMem_46f680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f680 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f680)
  store %struct.Memory* %call_46f680, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f683	 Bytes: 3
  %loadMem_46f683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f683 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f683)
  store %struct.Memory* %call_46f683, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f686	 Bytes: 4
  %loadMem_46f686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f686 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f686)
  store %struct.Memory* %call_46f686, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46f68a	 Bytes: 8
  %loadMem_46f68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f68a = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f68a)
  store %struct.Memory* %call_46f68a, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %eax	 RIP: 46f692	 Bytes: 6
  %loadMem_46f692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f692 = call %struct.Memory* @routine_movl_0x9c__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f692)
  store %struct.Memory* %call_46f692, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f698	 Bytes: 3
  %loadMem_46f698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f698 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f698)
  store %struct.Memory* %call_46f698, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 46f69b	 Bytes: 3
  %loadMem_46f69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f69b = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f69b)
  store %struct.Memory* %call_46f69b, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f69e	 Bytes: 3
  %loadMem_46f69e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f69e = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f69e)
  store %struct.Memory* %call_46f69e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f6a1	 Bytes: 4
  %loadMem_46f6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6a1 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6a1)
  store %struct.Memory* %call_46f6a1, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f6a5	 Bytes: 4
  %loadMem_46f6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6a5 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6a5)
  store %struct.Memory* %call_46f6a5, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %eax	 RIP: 46f6a9	 Bytes: 3
  %loadMem_46f6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6a9 = call %struct.Memory* @routine_subl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6a9)
  store %struct.Memory* %call_46f6a9, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f6ac	 Bytes: 3
  %loadMem_46f6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6ac = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6ac)
  store %struct.Memory* %call_46f6ac, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f6af	 Bytes: 4
  %loadMem_46f6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6af = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6af)
  store %struct.Memory* %call_46f6af, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 46f6b3	 Bytes: 4
  %loadMem_46f6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6b3 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6b3)
  store %struct.Memory* %call_46f6b3, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f6b7	 Bytes: 4
  %loadMem_46f6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6b7 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6b7)
  store %struct.Memory* %call_46f6b7, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rcx), %eax	 RIP: 46f6bb	 Bytes: 3
  %loadMem_46f6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6bb = call %struct.Memory* @routine_movl_0x4__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6bb)
  store %struct.Memory* %call_46f6bb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710010	 RIP: 46f6be	 Bytes: 7
  %loadMem_46f6be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6be = call %struct.Memory* @routine_movl__eax__0x710010(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6be)
  store %struct.Memory* %call_46f6be, %struct.Memory** %MEMORY

  ; Code: movl 0x710010, %eax	 RIP: 46f6c5	 Bytes: 7
  %loadMem_46f6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6c5 = call %struct.Memory* @routine_movl_0x710010___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6c5)
  store %struct.Memory* %call_46f6c5, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %esi	 RIP: 46f6cc	 Bytes: 4
  %loadMem_46f6cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6cc = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6cc)
  store %struct.Memory* %call_46f6cc, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %esi	 RIP: 46f6d0	 Bytes: 3
  %loadMem_46f6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6d0 = call %struct.Memory* @routine_sarl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6d0)
  store %struct.Memory* %call_46f6d0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 46f6d3	 Bytes: 3
  %loadMem_46f6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6d3 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6d3)
  store %struct.Memory* %call_46f6d3, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 46f6d6	 Bytes: 3
  %loadMem_46f6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6d6 = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6d6)
  store %struct.Memory* %call_46f6d6, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 46f6d9	 Bytes: 4
  %loadMem_46f6d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6d9 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6d9)
  store %struct.Memory* %call_46f6d9, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f6dd	 Bytes: 4
  %loadMem_46f6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6dd = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6dd)
  store %struct.Memory* %call_46f6dd, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %eax	 RIP: 46f6e1	 Bytes: 3
  %loadMem_46f6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6e1 = call %struct.Memory* @routine_sarl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6e1)
  store %struct.Memory* %call_46f6e1, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 46f6e4	 Bytes: 4
  %loadMem_46f6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6e4 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6e4)
  store %struct.Memory* %call_46f6e4, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 46f6e8	 Bytes: 4
  %loadMem_46f6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6e8 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6e8)
  store %struct.Memory* %call_46f6e8, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm0, %eax	 RIP: 46f6ec	 Bytes: 4
  %loadMem_46f6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6ec = call %struct.Memory* @routine_cvttss2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6ec)
  store %struct.Memory* %call_46f6ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710010	 RIP: 46f6f0	 Bytes: 7
  %loadMem_46f6f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6f0 = call %struct.Memory* @routine_movl__eax__0x710010(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6f0)
  store %struct.Memory* %call_46f6f0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd468, %rcx	 RIP: 46f6f7	 Bytes: 8
  %loadMem_46f6f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6f7 = call %struct.Memory* @routine_movq_0x6cd468___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6f7)
  store %struct.Memory* %call_46f6f7, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46f6ff	 Bytes: 8
  %loadMem_46f6ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f6ff = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f6ff)
  store %struct.Memory* %call_46f6ff, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %eax	 RIP: 46f707	 Bytes: 6
  %loadMem_46f707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f707 = call %struct.Memory* @routine_movl_0x98__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f707)
  store %struct.Memory* %call_46f707, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f70d	 Bytes: 3
  %loadMem_46f70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f70d = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f70d)
  store %struct.Memory* %call_46f70d, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %eax	 RIP: 46f710	 Bytes: 3
  %loadMem_46f710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f710 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f710)
  store %struct.Memory* %call_46f710, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f713	 Bytes: 3
  %loadMem_46f713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f713 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f713)
  store %struct.Memory* %call_46f713, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f716	 Bytes: 4
  %loadMem_46f716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f716 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f716)
  store %struct.Memory* %call_46f716, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46f71a	 Bytes: 8
  %loadMem_46f71a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f71a = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f71a)
  store %struct.Memory* %call_46f71a, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %eax	 RIP: 46f722	 Bytes: 6
  %loadMem_46f722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f722 = call %struct.Memory* @routine_movl_0x9c__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f722)
  store %struct.Memory* %call_46f722, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f728	 Bytes: 3
  %loadMem_46f728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f728 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f728)
  store %struct.Memory* %call_46f728, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 46f72b	 Bytes: 3
  %loadMem_46f72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f72b = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f72b)
  store %struct.Memory* %call_46f72b, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f72e	 Bytes: 3
  %loadMem_46f72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f72e = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f72e)
  store %struct.Memory* %call_46f72e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f731	 Bytes: 4
  %loadMem_46f731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f731 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f731)
  store %struct.Memory* %call_46f731, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f735	 Bytes: 4
  %loadMem_46f735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f735 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f735)
  store %struct.Memory* %call_46f735, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %eax	 RIP: 46f739	 Bytes: 3
  %loadMem_46f739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f739 = call %struct.Memory* @routine_subl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f739)
  store %struct.Memory* %call_46f739, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46f73c	 Bytes: 3
  %loadMem_46f73c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f73c = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f73c)
  store %struct.Memory* %call_46f73c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f73f	 Bytes: 4
  %loadMem_46f73f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f73f = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f73f)
  store %struct.Memory* %call_46f73f, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 46f743	 Bytes: 4
  %loadMem_46f743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f743 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f743)
  store %struct.Memory* %call_46f743, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46f747	 Bytes: 4
  %loadMem_46f747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f747 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f747)
  store %struct.Memory* %call_46f747, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rcx), %eax	 RIP: 46f74b	 Bytes: 3
  %loadMem_46f74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f74b = call %struct.Memory* @routine_movl_0x8__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f74b)
  store %struct.Memory* %call_46f74b, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710014	 RIP: 46f74e	 Bytes: 7
  %loadMem_46f74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f74e = call %struct.Memory* @routine_movl__eax__0x710014(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f74e)
  store %struct.Memory* %call_46f74e, %struct.Memory** %MEMORY

  ; Code: movl 0x710014, %eax	 RIP: 46f755	 Bytes: 7
  %loadMem_46f755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f755 = call %struct.Memory* @routine_movl_0x710014___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f755)
  store %struct.Memory* %call_46f755, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %esi	 RIP: 46f75c	 Bytes: 4
  %loadMem_46f75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f75c = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f75c)
  store %struct.Memory* %call_46f75c, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %esi	 RIP: 46f760	 Bytes: 3
  %loadMem_46f760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f760 = call %struct.Memory* @routine_sarl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f760)
  store %struct.Memory* %call_46f760, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 46f763	 Bytes: 3
  %loadMem_46f763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f763 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f763)
  store %struct.Memory* %call_46f763, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 46f766	 Bytes: 3
  %loadMem_46f766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f766 = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f766)
  store %struct.Memory* %call_46f766, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 46f769	 Bytes: 4
  %loadMem_46f769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f769 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f769)
  store %struct.Memory* %call_46f769, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f76d	 Bytes: 4
  %loadMem_46f76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f76d = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f76d)
  store %struct.Memory* %call_46f76d, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %eax	 RIP: 46f771	 Bytes: 3
  %loadMem_46f771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f771 = call %struct.Memory* @routine_sarl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f771)
  store %struct.Memory* %call_46f771, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 46f774	 Bytes: 4
  %loadMem_46f774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f774 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f774)
  store %struct.Memory* %call_46f774, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 46f778	 Bytes: 4
  %loadMem_46f778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f778 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f778)
  store %struct.Memory* %call_46f778, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm0, %eax	 RIP: 46f77c	 Bytes: 4
  %loadMem_46f77c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f77c = call %struct.Memory* @routine_cvttss2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f77c)
  store %struct.Memory* %call_46f77c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710014	 RIP: 46f780	 Bytes: 7
  %loadMem_46f780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f780 = call %struct.Memory* @routine_movl__eax__0x710014(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f780)
  store %struct.Memory* %call_46f780, %struct.Memory** %MEMORY

  ; Code: .L_46f787:	 RIP: 46f787	 Bytes: 0
  br label %block_.L_46f787
block_.L_46f787:

  ; Code: movq 0x6cb900, %rax	 RIP: 46f787	 Bytes: 8
  %loadMem_46f787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f787 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f787)
  store %struct.Memory* %call_46f787, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 46f78f	 Bytes: 4
  %loadMem_46f78f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f78f = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f78f)
  store %struct.Memory* %call_46f78f, %struct.Memory** %MEMORY

  ; Code: jne .L_46f954	 RIP: 46f793	 Bytes: 6
  %loadMem_46f793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f793 = call %struct.Memory* @routine_jne_.L_46f954(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f793, i8* %BRANCH_TAKEN, i64 449, i64 6, i64 6)
  store %struct.Memory* %call_46f793, %struct.Memory** %MEMORY

  %loadBr_46f793 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f793 = icmp eq i8 %loadBr_46f793, 1
  br i1 %cmpBr_46f793, label %block_.L_46f954, label %block_46f799

block_46f799:
  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 46f799	 Bytes: 4
  %loadMem_46f799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f799 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f799)
  store %struct.Memory* %call_46f799, %struct.Memory** %MEMORY

  ; Code: jne .L_46f954	 RIP: 46f79d	 Bytes: 6
  %loadMem_46f79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f79d = call %struct.Memory* @routine_jne_.L_46f954(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f79d, i8* %BRANCH_TAKEN, i64 439, i64 6, i64 6)
  store %struct.Memory* %call_46f79d, %struct.Memory** %MEMORY

  %loadBr_46f79d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f79d = icmp eq i8 %loadBr_46f79d, 1
  br i1 %cmpBr_46f79d, label %block_.L_46f954, label %block_46f7a3

block_46f7a3:
  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f7a3	 Bytes: 4
  %loadMem_46f7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7a3 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7a3)
  store %struct.Memory* %call_46f7a3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 46f7a7	 Bytes: 3
  %loadMem_46f7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7a7 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7a7)
  store %struct.Memory* %call_46f7a7, %struct.Memory** %MEMORY

  ; Code: je .L_46f7bd	 RIP: 46f7aa	 Bytes: 6
  %loadMem_46f7aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7aa = call %struct.Memory* @routine_je_.L_46f7bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7aa, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_46f7aa, %struct.Memory** %MEMORY

  %loadBr_46f7aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f7aa = icmp eq i8 %loadBr_46f7aa, 1
  br i1 %cmpBr_46f7aa, label %block_.L_46f7bd, label %block_46f7b0

block_46f7b0:
  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f7b0	 Bytes: 4
  %loadMem_46f7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7b0 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7b0)
  store %struct.Memory* %call_46f7b0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 46f7b4	 Bytes: 3
  %loadMem_46f7b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7b4 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7b4)
  store %struct.Memory* %call_46f7b4, %struct.Memory** %MEMORY

  ; Code: jne .L_46f954	 RIP: 46f7b7	 Bytes: 6
  %loadMem_46f7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7b7 = call %struct.Memory* @routine_jne_.L_46f954(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7b7, i8* %BRANCH_TAKEN, i64 413, i64 6, i64 6)
  store %struct.Memory* %call_46f7b7, %struct.Memory** %MEMORY

  %loadBr_46f7b7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f7b7 = icmp eq i8 %loadBr_46f7b7, 1
  br i1 %cmpBr_46f7b7, label %block_.L_46f954, label %block_.L_46f7bd

  ; Code: .L_46f7bd:	 RIP: 46f7bd	 Bytes: 0
block_.L_46f7bd:

  ; Code: movq 0x6cd3b0, %rax	 RIP: 46f7bd	 Bytes: 8
  %loadMem_46f7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7bd = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7bd)
  store %struct.Memory* %call_46f7bd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f7c5	 Bytes: 8
  %loadMem_46f7c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7c5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7c5)
  store %struct.Memory* %call_46f7c5, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f7cd	 Bytes: 6
  %loadMem_46f7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7cd = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7cd)
  store %struct.Memory* %call_46f7cd, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f7d3	 Bytes: 3
  %loadMem_46f7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7d3 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7d3)
  store %struct.Memory* %call_46f7d3, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f7d6	 Bytes: 3
  %loadMem_46f7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7d6 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7d6)
  store %struct.Memory* %call_46f7d6, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f7d9	 Bytes: 3
  %loadMem_46f7d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7d9 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7d9)
  store %struct.Memory* %call_46f7d9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f7dc	 Bytes: 4
  %loadMem_46f7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7dc = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7dc)
  store %struct.Memory* %call_46f7dc, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f7e0	 Bytes: 8
  %loadMem_46f7e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7e0 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7e0)
  store %struct.Memory* %call_46f7e0, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f7e8	 Bytes: 6
  %loadMem_46f7e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7e8 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7e8)
  store %struct.Memory* %call_46f7e8, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f7ee	 Bytes: 3
  %loadMem_46f7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7ee = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7ee)
  store %struct.Memory* %call_46f7ee, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f7f1	 Bytes: 3
  %loadMem_46f7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7f1 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7f1)
  store %struct.Memory* %call_46f7f1, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f7f4	 Bytes: 3
  %loadMem_46f7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7f4 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7f4)
  store %struct.Memory* %call_46f7f4, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f7f7	 Bytes: 4
  %loadMem_46f7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7f7 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7f7)
  store %struct.Memory* %call_46f7f7, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46f7fb	 Bytes: 3
  %loadMem_46f7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7fb = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7fb)
  store %struct.Memory* %call_46f7fb, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f7fe	 Bytes: 4
  %loadMem_46f7fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f7fe = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f7fe)
  store %struct.Memory* %call_46f7fe, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f802	 Bytes: 4
  %loadMem_46f802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f802 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f802)
  store %struct.Memory* %call_46f802, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f806	 Bytes: 2
  %loadMem_46f806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f806 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f806)
  store %struct.Memory* %call_46f806, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6cd480	 RIP: 46f808	 Bytes: 7
  %loadMem_46f808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f808 = call %struct.Memory* @routine_movl__edx__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f808)
  store %struct.Memory* %call_46f808, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x6f934c	 RIP: 46f80f	 Bytes: 8
  %loadMem_46f80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f80f = call %struct.Memory* @routine_cmpl__0x0__0x6f934c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f80f)
  store %struct.Memory* %call_46f80f, %struct.Memory** %MEMORY

  ; Code: je .L_46f82a	 RIP: 46f817	 Bytes: 6
  %loadMem_46f817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f817 = call %struct.Memory* @routine_je_.L_46f82a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f817, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_46f817, %struct.Memory** %MEMORY

  %loadBr_46f817 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f817 = icmp eq i8 %loadBr_46f817, 1
  br i1 %cmpBr_46f817, label %block_.L_46f82a, label %block_46f81d

block_46f81d:
  ; Code: xorl %eax, %eax	 RIP: 46f81d	 Bytes: 2
  %loadMem_46f81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f81d = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f81d)
  store %struct.Memory* %call_46f81d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x140(%rbp)	 RIP: 46f81f	 Bytes: 6
  %loadMem_46f81f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f81f = call %struct.Memory* @routine_movl__eax__MINUS0x140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f81f)
  store %struct.Memory* %call_46f81f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f837	 RIP: 46f825	 Bytes: 5
  %loadMem_46f825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f825 = call %struct.Memory* @routine_jmpq_.L_46f837(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f825, i64 18, i64 5)
  store %struct.Memory* %call_46f825, %struct.Memory** %MEMORY

  br label %block_.L_46f837

  ; Code: .L_46f82a:	 RIP: 46f82a	 Bytes: 0
block_.L_46f82a:

  ; Code: movl 0x6cd480, %eax	 RIP: 46f82a	 Bytes: 7
  %loadMem_46f82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f82a = call %struct.Memory* @routine_movl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f82a)
  store %struct.Memory* %call_46f82a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x140(%rbp)	 RIP: 46f831	 Bytes: 6
  %loadMem_46f831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f831 = call %struct.Memory* @routine_movl__eax__MINUS0x140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f831)
  store %struct.Memory* %call_46f831, %struct.Memory** %MEMORY

  ; Code: .L_46f837:	 RIP: 46f837	 Bytes: 0
  br label %block_.L_46f837
block_.L_46f837:

  ; Code: movl -0x140(%rbp), %eax	 RIP: 46f837	 Bytes: 6
  %loadMem_46f837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f837 = call %struct.Memory* @routine_movl_MINUS0x140__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f837)
  store %struct.Memory* %call_46f837, %struct.Memory** %MEMORY

  ; Code: movss 0x4dfef(%rip), %xmm0	 RIP: 46f83d	 Bytes: 8
  %loadMem_46f83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f83d = call %struct.Memory* @routine_movss_0x4dfef__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f83d)
  store %struct.Memory* %call_46f83d, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 46f845	 Bytes: 2
  %loadMem_46f845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f845 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f845)
  store %struct.Memory* %call_46f845, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd480	 RIP: 46f847	 Bytes: 7
  %loadMem_46f847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f847 = call %struct.Memory* @routine_movl__eax__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f847)
  store %struct.Memory* %call_46f847, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rdx	 RIP: 46f84e	 Bytes: 8
  %loadMem_46f84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f84e = call %struct.Memory* @routine_movq_0x6cd3b0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f84e)
  store %struct.Memory* %call_46f84e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46f856	 Bytes: 8
  %loadMem_46f856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f856 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f856)
  store %struct.Memory* %call_46f856, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rsi), %eax	 RIP: 46f85e	 Bytes: 6
  %loadMem_46f85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f85e = call %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f85e)
  store %struct.Memory* %call_46f85e, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f864	 Bytes: 3
  %loadMem_46f864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f864 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f864)
  store %struct.Memory* %call_46f864, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %eax	 RIP: 46f867	 Bytes: 3
  %loadMem_46f867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f867 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f867)
  store %struct.Memory* %call_46f867, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46f86a	 Bytes: 3
  %loadMem_46f86a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f86a = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f86a)
  store %struct.Memory* %call_46f86a, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f86d	 Bytes: 4
  %loadMem_46f86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f86d = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f86d)
  store %struct.Memory* %call_46f86d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46f871	 Bytes: 8
  %loadMem_46f871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f871 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f871)
  store %struct.Memory* %call_46f871, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rsi), %eax	 RIP: 46f879	 Bytes: 6
  %loadMem_46f879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f879 = call %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f879)
  store %struct.Memory* %call_46f879, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f87f	 Bytes: 3
  %loadMem_46f87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f87f = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f87f)
  store %struct.Memory* %call_46f87f, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 46f882	 Bytes: 3
  %loadMem_46f882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f882 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f882)
  store %struct.Memory* %call_46f882, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46f885	 Bytes: 3
  %loadMem_46f885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f885 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f885)
  store %struct.Memory* %call_46f885, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f888	 Bytes: 4
  %loadMem_46f888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f888 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f888)
  store %struct.Memory* %call_46f888, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 46f88c	 Bytes: 5
  %loadMem_46f88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f88c = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f88c)
  store %struct.Memory* %call_46f88c, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f891	 Bytes: 4
  %loadMem_46f891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f891 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f891)
  store %struct.Memory* %call_46f891, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 46f895	 Bytes: 4
  %loadMem_46f895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f895 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f895)
  store %struct.Memory* %call_46f895, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f899	 Bytes: 4
  %loadMem_46f899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f899 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f899)
  store %struct.Memory* %call_46f899, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rdx), %eax	 RIP: 46f89d	 Bytes: 3
  %loadMem_46f89d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f89d = call %struct.Memory* @routine_movl_0x4__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f89d)
  store %struct.Memory* %call_46f89d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 46f8a0	 Bytes: 2
  %loadMem_46f8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8a0 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8a0)
  store %struct.Memory* %call_46f8a0, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %edi	 RIP: 46f8a2	 Bytes: 6
  %loadMem_46f8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8a2 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8a2)
  store %struct.Memory* %call_46f8a2, %struct.Memory** %MEMORY

  ; Code: imull %edi, %eax	 RIP: 46f8a8	 Bytes: 3
  %loadMem_46f8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8a8 = call %struct.Memory* @routine_imull__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8a8)
  store %struct.Memory* %call_46f8a8, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 46f8ab	 Bytes: 4
  %loadMem_46f8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8ab = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8ab)
  store %struct.Memory* %call_46f8ab, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46f8af	 Bytes: 6
  %loadMem_46f8af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8af = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8af)
  store %struct.Memory* %call_46f8af, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46f8b5	 Bytes: 6
  %loadMem_46f8b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8b5 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8b5)
  store %struct.Memory* %call_46f8b5, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm2	 RIP: 46f8bb	 Bytes: 4
  %loadMem_46f8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8bb = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8bb)
  store %struct.Memory* %call_46f8bb, %struct.Memory** %MEMORY

  ; Code: addss %xmm0, %xmm2	 RIP: 46f8bf	 Bytes: 4
  %loadMem_46f8bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8bf = call %struct.Memory* @routine_addss__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8bf)
  store %struct.Memory* %call_46f8bf, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm1	 RIP: 46f8c3	 Bytes: 4
  %loadMem_46f8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8c3 = call %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8c3)
  store %struct.Memory* %call_46f8c3, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm1, %eax	 RIP: 46f8c7	 Bytes: 4
  %loadMem_46f8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8c7 = call %struct.Memory* @routine_cvttss2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8c7)
  store %struct.Memory* %call_46f8c7, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710010	 RIP: 46f8cb	 Bytes: 7
  %loadMem_46f8cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8cb = call %struct.Memory* @routine_movl__eax__0x710010(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8cb)
  store %struct.Memory* %call_46f8cb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rdx	 RIP: 46f8d2	 Bytes: 8
  %loadMem_46f8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8d2 = call %struct.Memory* @routine_movq_0x6cd3b0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8d2)
  store %struct.Memory* %call_46f8d2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46f8da	 Bytes: 8
  %loadMem_46f8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8da = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8da)
  store %struct.Memory* %call_46f8da, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rsi), %eax	 RIP: 46f8e2	 Bytes: 6
  %loadMem_46f8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8e2 = call %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8e2)
  store %struct.Memory* %call_46f8e2, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f8e8	 Bytes: 3
  %loadMem_46f8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8e8 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8e8)
  store %struct.Memory* %call_46f8e8, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %eax	 RIP: 46f8eb	 Bytes: 3
  %loadMem_46f8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8eb = call %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8eb)
  store %struct.Memory* %call_46f8eb, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46f8ee	 Bytes: 3
  %loadMem_46f8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8ee = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8ee)
  store %struct.Memory* %call_46f8ee, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f8f1	 Bytes: 4
  %loadMem_46f8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8f1 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8f1)
  store %struct.Memory* %call_46f8f1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46f8f5	 Bytes: 8
  %loadMem_46f8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8f5 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8f5)
  store %struct.Memory* %call_46f8f5, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rsi), %eax	 RIP: 46f8fd	 Bytes: 6
  %loadMem_46f8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f8fd = call %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f8fd)
  store %struct.Memory* %call_46f8fd, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46f903	 Bytes: 3
  %loadMem_46f903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f903 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f903)
  store %struct.Memory* %call_46f903, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 46f906	 Bytes: 3
  %loadMem_46f906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f906 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f906)
  store %struct.Memory* %call_46f906, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46f909	 Bytes: 3
  %loadMem_46f909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f909 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f909)
  store %struct.Memory* %call_46f909, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f90c	 Bytes: 4
  %loadMem_46f90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f90c = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f90c)
  store %struct.Memory* %call_46f90c, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 46f910	 Bytes: 5
  %loadMem_46f910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f910 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f910)
  store %struct.Memory* %call_46f910, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f915	 Bytes: 4
  %loadMem_46f915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f915 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f915)
  store %struct.Memory* %call_46f915, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 46f919	 Bytes: 4
  %loadMem_46f919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f919 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f919)
  store %struct.Memory* %call_46f919, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46f91d	 Bytes: 4
  %loadMem_46f91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f91d = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f91d)
  store %struct.Memory* %call_46f91d, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rdx), %eax	 RIP: 46f921	 Bytes: 3
  %loadMem_46f921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f921 = call %struct.Memory* @routine_movl_0x8__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f921)
  store %struct.Memory* %call_46f921, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %ecx	 RIP: 46f924	 Bytes: 6
  %loadMem_46f924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f924 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f924)
  store %struct.Memory* %call_46f924, %struct.Memory** %MEMORY

  ; Code: imull %ecx, %eax	 RIP: 46f92a	 Bytes: 3
  %loadMem_46f92a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f92a = call %struct.Memory* @routine_imull__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f92a)
  store %struct.Memory* %call_46f92a, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 46f92d	 Bytes: 4
  %loadMem_46f92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f92d = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f92d)
  store %struct.Memory* %call_46f92d, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46f931	 Bytes: 6
  %loadMem_46f931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f931 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f931)
  store %struct.Memory* %call_46f931, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46f937	 Bytes: 6
  %loadMem_46f937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f937 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f937)
  store %struct.Memory* %call_46f937, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm2	 RIP: 46f93d	 Bytes: 4
  %loadMem_46f93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f93d = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f93d)
  store %struct.Memory* %call_46f93d, %struct.Memory** %MEMORY

  ; Code: addss %xmm0, %xmm2	 RIP: 46f941	 Bytes: 4
  %loadMem_46f941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f941 = call %struct.Memory* @routine_addss__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f941)
  store %struct.Memory* %call_46f941, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm1	 RIP: 46f945	 Bytes: 4
  %loadMem_46f945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f945 = call %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f945)
  store %struct.Memory* %call_46f945, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm1, %eax	 RIP: 46f949	 Bytes: 4
  %loadMem_46f949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f949 = call %struct.Memory* @routine_cvttss2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f949)
  store %struct.Memory* %call_46f949, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710014	 RIP: 46f94d	 Bytes: 7
  %loadMem_46f94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f94d = call %struct.Memory* @routine_movl__eax__0x710014(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f94d)
  store %struct.Memory* %call_46f94d, %struct.Memory** %MEMORY

  ; Code: .L_46f954:	 RIP: 46f954	 Bytes: 0
  br label %block_.L_46f954
block_.L_46f954:

  ; Code: jmpq .L_46fcc3	 RIP: 46f954	 Bytes: 5
  %loadMem_46f954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f954 = call %struct.Memory* @routine_jmpq_.L_46fcc3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f954, i64 879, i64 5)
  store %struct.Memory* %call_46f954, %struct.Memory** %MEMORY

  br label %block_.L_46fcc3

  ; Code: .L_46f959:	 RIP: 46f959	 Bytes: 0
block_.L_46f959:

  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46f959	 Bytes: 4
  %loadMem_46f959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f959 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f959)
  store %struct.Memory* %call_46f959, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 46f95d	 Bytes: 3
  %loadMem_46f95d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f95d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f95d)
  store %struct.Memory* %call_46f95d, %struct.Memory** %MEMORY

  ; Code: jle .L_46fafe	 RIP: 46f960	 Bytes: 6
  %loadMem_46f960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f960 = call %struct.Memory* @routine_jle_.L_46fafe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f960, i8* %BRANCH_TAKEN, i64 414, i64 6, i64 6)
  store %struct.Memory* %call_46f960, %struct.Memory** %MEMORY

  %loadBr_46f960 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f960 = icmp eq i8 %loadBr_46f960, 1
  br i1 %cmpBr_46f960, label %block_.L_46fafe, label %block_46f966

block_46f966:
  ; Code: movq 0x6cd468, %rax	 RIP: 46f966	 Bytes: 8
  %loadMem_46f966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f966 = call %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f966)
  store %struct.Memory* %call_46f966, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f96e	 Bytes: 8
  %loadMem_46f96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f96e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f96e)
  store %struct.Memory* %call_46f96e, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46f976	 Bytes: 6
  %loadMem_46f976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f976 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f976)
  store %struct.Memory* %call_46f976, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f97c	 Bytes: 3
  %loadMem_46f97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f97c = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f97c)
  store %struct.Memory* %call_46f97c, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46f97f	 Bytes: 3
  %loadMem_46f97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f97f = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f97f)
  store %struct.Memory* %call_46f97f, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f982	 Bytes: 3
  %loadMem_46f982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f982 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f982)
  store %struct.Memory* %call_46f982, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f985	 Bytes: 4
  %loadMem_46f985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f985 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f985)
  store %struct.Memory* %call_46f985, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46f989	 Bytes: 8
  %loadMem_46f989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f989 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f989)
  store %struct.Memory* %call_46f989, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46f991	 Bytes: 6
  %loadMem_46f991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f991 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f991)
  store %struct.Memory* %call_46f991, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46f997	 Bytes: 3
  %loadMem_46f997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f997 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f997)
  store %struct.Memory* %call_46f997, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46f99a	 Bytes: 3
  %loadMem_46f99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f99a = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f99a)
  store %struct.Memory* %call_46f99a, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f99d	 Bytes: 3
  %loadMem_46f99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f99d = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f99d)
  store %struct.Memory* %call_46f99d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f9a0	 Bytes: 4
  %loadMem_46f9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9a0 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9a0)
  store %struct.Memory* %call_46f9a0, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %edx	 RIP: 46f9a4	 Bytes: 4
  %loadMem_46f9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9a4 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9a4)
  store %struct.Memory* %call_46f9a4, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 46f9a8	 Bytes: 3
  %loadMem_46f9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9a8 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9a8)
  store %struct.Memory* %call_46f9a8, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46f9ab	 Bytes: 3
  %loadMem_46f9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9ab = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9ab)
  store %struct.Memory* %call_46f9ab, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f9ae	 Bytes: 4
  %loadMem_46f9ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9ae = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9ae)
  store %struct.Memory* %call_46f9ae, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46f9b2	 Bytes: 4
  %loadMem_46f9b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9b2 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9b2)
  store %struct.Memory* %call_46f9b2, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46f9b6	 Bytes: 4
  %loadMem_46f9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9b6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9b6)
  store %struct.Memory* %call_46f9b6, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46f9ba	 Bytes: 2
  %loadMem_46f9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9ba = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9ba)
  store %struct.Memory* %call_46f9ba, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6cd480	 RIP: 46f9bc	 Bytes: 7
  %loadMem_46f9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9bc = call %struct.Memory* @routine_movl__edx__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9bc)
  store %struct.Memory* %call_46f9bc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x6f934c	 RIP: 46f9c3	 Bytes: 8
  %loadMem_46f9c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9c3 = call %struct.Memory* @routine_cmpl__0x0__0x6f934c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9c3)
  store %struct.Memory* %call_46f9c3, %struct.Memory** %MEMORY

  ; Code: je .L_46f9de	 RIP: 46f9cb	 Bytes: 6
  %loadMem_46f9cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9cb = call %struct.Memory* @routine_je_.L_46f9de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9cb, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_46f9cb, %struct.Memory** %MEMORY

  %loadBr_46f9cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46f9cb = icmp eq i8 %loadBr_46f9cb, 1
  br i1 %cmpBr_46f9cb, label %block_.L_46f9de, label %block_46f9d1

block_46f9d1:
  ; Code: xorl %eax, %eax	 RIP: 46f9d1	 Bytes: 2
  %loadMem_46f9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9d1 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9d1)
  store %struct.Memory* %call_46f9d1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x144(%rbp)	 RIP: 46f9d3	 Bytes: 6
  %loadMem_46f9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9d3 = call %struct.Memory* @routine_movl__eax__MINUS0x144__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9d3)
  store %struct.Memory* %call_46f9d3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46f9eb	 RIP: 46f9d9	 Bytes: 5
  %loadMem_46f9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9d9 = call %struct.Memory* @routine_jmpq_.L_46f9eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9d9, i64 18, i64 5)
  store %struct.Memory* %call_46f9d9, %struct.Memory** %MEMORY

  br label %block_.L_46f9eb

  ; Code: .L_46f9de:	 RIP: 46f9de	 Bytes: 0
block_.L_46f9de:

  ; Code: movl 0x6cd480, %eax	 RIP: 46f9de	 Bytes: 7
  %loadMem_46f9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9de = call %struct.Memory* @routine_movl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9de)
  store %struct.Memory* %call_46f9de, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x144(%rbp)	 RIP: 46f9e5	 Bytes: 6
  %loadMem_46f9e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9e5 = call %struct.Memory* @routine_movl__eax__MINUS0x144__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9e5)
  store %struct.Memory* %call_46f9e5, %struct.Memory** %MEMORY

  ; Code: .L_46f9eb:	 RIP: 46f9eb	 Bytes: 0
  br label %block_.L_46f9eb
block_.L_46f9eb:

  ; Code: movl -0x144(%rbp), %eax	 RIP: 46f9eb	 Bytes: 6
  %loadMem_46f9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9eb = call %struct.Memory* @routine_movl_MINUS0x144__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9eb)
  store %struct.Memory* %call_46f9eb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x25da89(%rip)	 RIP: 46f9f1	 Bytes: 6
  %loadMem_46f9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9f1 = call %struct.Memory* @routine_movl__eax__0x25da89__rip_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9f1)
  store %struct.Memory* %call_46f9f1, %struct.Memory** %MEMORY

  ; Code: movq 0x25da6a(%rip), %rcx	 RIP: 46f9f7	 Bytes: 7
  %loadMem_46f9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9f7 = call %struct.Memory* @routine_movq_0x25da6a__rip____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9f7)
  store %struct.Memory* %call_46f9f7, %struct.Memory** %MEMORY

  ; Code: movq 0x25befb(%rip), %rdx	 RIP: 46f9fe	 Bytes: 7
  %loadMem_46f9fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46f9fe = call %struct.Memory* @routine_movq_0x25befb__rip____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46f9fe)
  store %struct.Memory* %call_46f9fe, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %eax	 RIP: 46fa05	 Bytes: 6
  %loadMem_46fa05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa05 = call %struct.Memory* @routine_movl_0x98__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa05)
  store %struct.Memory* %call_46fa05, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 46fa0b	 Bytes: 6
  %loadMem_46fa0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa0b = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa0b)
  store %struct.Memory* %call_46fa0b, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46fa11	 Bytes: 3
  %loadMem_46fa11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa11 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa11)
  store %struct.Memory* %call_46fa11, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edi	 RIP: 46fa14	 Bytes: 3
  %loadMem_46fa14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa14 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa14)
  store %struct.Memory* %call_46fa14, %struct.Memory** %MEMORY

  ; Code: addl %edi, %eax	 RIP: 46fa17	 Bytes: 2
  %loadMem_46fa17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa17 = call %struct.Memory* @routine_addl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa17)
  store %struct.Memory* %call_46fa17, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46fa19	 Bytes: 3
  %loadMem_46fa19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa19 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa19)
  store %struct.Memory* %call_46fa19, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fa1c	 Bytes: 4
  %loadMem_46fa1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa1c = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa1c)
  store %struct.Memory* %call_46fa1c, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 46fa20	 Bytes: 3
  %loadMem_46fa20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa20 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa20)
  store %struct.Memory* %call_46fa20, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 46fa23	 Bytes: 3
  %loadMem_46fa23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa23 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa23)
  store %struct.Memory* %call_46fa23, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 46fa26	 Bytes: 2
  %loadMem_46fa26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa26 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa26)
  store %struct.Memory* %call_46fa26, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 46fa28	 Bytes: 3
  %loadMem_46fa28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa28 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa28)
  store %struct.Memory* %call_46fa28, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fa2b	 Bytes: 4
  %loadMem_46fa2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa2b = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa2b)
  store %struct.Memory* %call_46fa2b, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46fa2f	 Bytes: 4
  %loadMem_46fa2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa2f = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa2f)
  store %struct.Memory* %call_46fa2f, %struct.Memory** %MEMORY

  ; Code: decl %eax	 RIP: 46fa33	 Bytes: 2
  %loadMem_46fa33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa33 = call %struct.Memory* @routine_decl__eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa33)
  store %struct.Memory* %call_46fa33, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46fa35	 Bytes: 3
  %loadMem_46fa35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa35 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa35)
  store %struct.Memory* %call_46fa35, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fa38	 Bytes: 4
  %loadMem_46fa38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa38 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa38)
  store %struct.Memory* %call_46fa38, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 46fa3c	 Bytes: 4
  %loadMem_46fa3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa3c = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa3c)
  store %struct.Memory* %call_46fa3c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fa40	 Bytes: 4
  %loadMem_46fa40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa40 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa40)
  store %struct.Memory* %call_46fa40, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rcx), %eax	 RIP: 46fa44	 Bytes: 3
  %loadMem_46fa44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa44 = call %struct.Memory* @routine_movl_0x4__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa44)
  store %struct.Memory* %call_46fa44, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x2a05c3(%rip)	 RIP: 46fa47	 Bytes: 6
  %loadMem_46fa47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa47 = call %struct.Memory* @routine_movl__eax__0x2a05c3__rip_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa47)
  store %struct.Memory* %call_46fa47, %struct.Memory** %MEMORY

  ; Code: movl 0x2a05bd(%rip), %eax	 RIP: 46fa4d	 Bytes: 6
  %loadMem_46fa4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa4d = call %struct.Memory* @routine_movl_0x2a05bd__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa4d)
  store %struct.Memory* %call_46fa4d, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %esi	 RIP: 46fa53	 Bytes: 4
  %loadMem_46fa53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa53 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa53)
  store %struct.Memory* %call_46fa53, %struct.Memory** %MEMORY

  ; Code: movl %esi, %edi	 RIP: 46fa57	 Bytes: 2
  %loadMem_46fa57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa57 = call %struct.Memory* @routine_movl__esi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa57)
  store %struct.Memory* %call_46fa57, %struct.Memory** %MEMORY

  ; Code: incl %edi	 RIP: 46fa59	 Bytes: 2
  %loadMem_46fa59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa59 = call %struct.Memory* @routine_incl__edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa59)
  store %struct.Memory* %call_46fa59, %struct.Memory** %MEMORY

  ; Code: imull %edi, %eax	 RIP: 46fa5b	 Bytes: 3
  %loadMem_46fa5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa5b = call %struct.Memory* @routine_imull__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa5b)
  store %struct.Memory* %call_46fa5b, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 46fa5e	 Bytes: 4
  %loadMem_46fa5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa5e = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa5e)
  store %struct.Memory* %call_46fa5e, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %esi, %xmm1	 RIP: 46fa62	 Bytes: 4
  %loadMem_46fa62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa62 = call %struct.Memory* @routine_cvtsi2ssl__esi___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa62)
  store %struct.Memory* %call_46fa62, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 46fa66	 Bytes: 4
  %loadMem_46fa66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa66 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa66)
  store %struct.Memory* %call_46fa66, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm0, %eax	 RIP: 46fa6a	 Bytes: 4
  %loadMem_46fa6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa6a = call %struct.Memory* @routine_cvttss2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa6a)
  store %struct.Memory* %call_46fa6a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x2a059c(%rip)	 RIP: 46fa6e	 Bytes: 6
  %loadMem_46fa6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa6e = call %struct.Memory* @routine_movl__eax__0x2a059c__rip_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa6e)
  store %struct.Memory* %call_46fa6e, %struct.Memory** %MEMORY

  ; Code: movq 0x25d9ed(%rip), %rcx	 RIP: 46fa74	 Bytes: 7
  %loadMem_46fa74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa74 = call %struct.Memory* @routine_movq_0x25d9ed__rip____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa74)
  store %struct.Memory* %call_46fa74, %struct.Memory** %MEMORY

  ; Code: movq 0x25be7e(%rip), %rdx	 RIP: 46fa7b	 Bytes: 7
  %loadMem_46fa7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa7b = call %struct.Memory* @routine_movq_0x25be7e__rip____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa7b)
  store %struct.Memory* %call_46fa7b, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %eax	 RIP: 46fa82	 Bytes: 6
  %loadMem_46fa82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa82 = call %struct.Memory* @routine_movl_0x98__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa82)
  store %struct.Memory* %call_46fa82, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 46fa88	 Bytes: 6
  %loadMem_46fa88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa88 = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa88)
  store %struct.Memory* %call_46fa88, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46fa8e	 Bytes: 3
  %loadMem_46fa8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa8e = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa8e)
  store %struct.Memory* %call_46fa8e, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edi	 RIP: 46fa91	 Bytes: 3
  %loadMem_46fa91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa91 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa91)
  store %struct.Memory* %call_46fa91, %struct.Memory** %MEMORY

  ; Code: addl %edi, %eax	 RIP: 46fa94	 Bytes: 2
  %loadMem_46fa94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa94 = call %struct.Memory* @routine_addl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa94)
  store %struct.Memory* %call_46fa94, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46fa96	 Bytes: 3
  %loadMem_46fa96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa96 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa96)
  store %struct.Memory* %call_46fa96, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fa99	 Bytes: 4
  %loadMem_46fa99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa99 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa99)
  store %struct.Memory* %call_46fa99, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 46fa9d	 Bytes: 3
  %loadMem_46fa9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fa9d = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fa9d)
  store %struct.Memory* %call_46fa9d, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %eax	 RIP: 46faa0	 Bytes: 3
  %loadMem_46faa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faa0 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faa0)
  store %struct.Memory* %call_46faa0, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 46faa3	 Bytes: 2
  %loadMem_46faa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faa3 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faa3)
  store %struct.Memory* %call_46faa3, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 46faa5	 Bytes: 3
  %loadMem_46faa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faa5 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faa5)
  store %struct.Memory* %call_46faa5, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46faa8	 Bytes: 4
  %loadMem_46faa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faa8 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faa8)
  store %struct.Memory* %call_46faa8, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46faac	 Bytes: 4
  %loadMem_46faac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faac = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faac)
  store %struct.Memory* %call_46faac, %struct.Memory** %MEMORY

  ; Code: decl %eax	 RIP: 46fab0	 Bytes: 2
  %loadMem_46fab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fab0 = call %struct.Memory* @routine_decl__eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fab0)
  store %struct.Memory* %call_46fab0, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 46fab2	 Bytes: 3
  %loadMem_46fab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fab2 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fab2)
  store %struct.Memory* %call_46fab2, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fab5	 Bytes: 4
  %loadMem_46fab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fab5 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fab5)
  store %struct.Memory* %call_46fab5, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 46fab9	 Bytes: 4
  %loadMem_46fab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fab9 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fab9)
  store %struct.Memory* %call_46fab9, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fabd	 Bytes: 4
  %loadMem_46fabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fabd = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fabd)
  store %struct.Memory* %call_46fabd, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rcx), %eax	 RIP: 46fac1	 Bytes: 3
  %loadMem_46fac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fac1 = call %struct.Memory* @routine_movl_0x8__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fac1)
  store %struct.Memory* %call_46fac1, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x2a054a(%rip)	 RIP: 46fac4	 Bytes: 6
  %loadMem_46fac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fac4 = call %struct.Memory* @routine_movl__eax__0x2a054a__rip_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fac4)
  store %struct.Memory* %call_46fac4, %struct.Memory** %MEMORY

  ; Code: movl 0x2a0544(%rip), %eax	 RIP: 46faca	 Bytes: 6
  %loadMem_46faca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faca = call %struct.Memory* @routine_movl_0x2a0544__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faca)
  store %struct.Memory* %call_46faca, %struct.Memory** %MEMORY

  ; Code: movswl -0x2a(%rbp), %esi	 RIP: 46fad0	 Bytes: 4
  %loadMem_46fad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fad0 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fad0)
  store %struct.Memory* %call_46fad0, %struct.Memory** %MEMORY

  ; Code: movw %si, %r8w	 RIP: 46fad4	 Bytes: 4
  %loadMem_46fad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fad4 = call %struct.Memory* @routine_movw__si___r8w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fad4)
  store %struct.Memory* %call_46fad4, %struct.Memory** %MEMORY

  ; Code: movl %esi, %edi	 RIP: 46fad8	 Bytes: 2
  %loadMem_46fad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fad8 = call %struct.Memory* @routine_movl__esi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fad8)
  store %struct.Memory* %call_46fad8, %struct.Memory** %MEMORY

  ; Code: incl %edi	 RIP: 46fada	 Bytes: 2
  %loadMem_46fada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fada = call %struct.Memory* @routine_incl__edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fada)
  store %struct.Memory* %call_46fada, %struct.Memory** %MEMORY

  ; Code: imull %edi, %eax	 RIP: 46fadc	 Bytes: 3
  %loadMem_46fadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fadc = call %struct.Memory* @routine_imull__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fadc)
  store %struct.Memory* %call_46fadc, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 46fadf	 Bytes: 4
  %loadMem_46fadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fadf = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fadf)
  store %struct.Memory* %call_46fadf, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %esi, %xmm1	 RIP: 46fae3	 Bytes: 4
  %loadMem_46fae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fae3 = call %struct.Memory* @routine_cvtsi2ssl__esi___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fae3)
  store %struct.Memory* %call_46fae3, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 46fae7	 Bytes: 4
  %loadMem_46fae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fae7 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fae7)
  store %struct.Memory* %call_46fae7, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm0, %eax	 RIP: 46faeb	 Bytes: 4
  %loadMem_46faeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faeb = call %struct.Memory* @routine_cvttss2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faeb)
  store %struct.Memory* %call_46faeb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710014	 RIP: 46faef	 Bytes: 7
  %loadMem_46faef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faef = call %struct.Memory* @routine_movl__eax__0x710014(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faef)
  store %struct.Memory* %call_46faef, %struct.Memory** %MEMORY

  ; Code: movw %r8w, -0x146(%rbp)	 RIP: 46faf6	 Bytes: 8
  %loadMem_46faf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46faf6 = call %struct.Memory* @routine_movw__r8w__MINUS0x146__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46faf6)
  store %struct.Memory* %call_46faf6, %struct.Memory** %MEMORY

  ; Code: .L_46fafe:	 RIP: 46fafe	 Bytes: 0
  br label %block_.L_46fafe
block_.L_46fafe:

  ; Code: movq 0x6cb900, %rax	 RIP: 46fafe	 Bytes: 8
  %loadMem_46fafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fafe = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fafe)
  store %struct.Memory* %call_46fafe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 46fb06	 Bytes: 4
  %loadMem_46fb06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb06 = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb06)
  store %struct.Memory* %call_46fb06, %struct.Memory** %MEMORY

  ; Code: jne .L_46fcbe	 RIP: 46fb0a	 Bytes: 6
  %loadMem_46fb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb0a = call %struct.Memory* @routine_jne_.L_46fcbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb0a, i8* %BRANCH_TAKEN, i64 436, i64 6, i64 6)
  store %struct.Memory* %call_46fb0a, %struct.Memory** %MEMORY

  %loadBr_46fb0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fb0a = icmp eq i8 %loadBr_46fb0a, 1
  br i1 %cmpBr_46fb0a, label %block_.L_46fcbe, label %block_46fb10

block_46fb10:
  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 46fb10	 Bytes: 4
  %loadMem_46fb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb10 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb10)
  store %struct.Memory* %call_46fb10, %struct.Memory** %MEMORY

  ; Code: jne .L_46fcbe	 RIP: 46fb14	 Bytes: 6
  %loadMem_46fb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb14 = call %struct.Memory* @routine_jne_.L_46fcbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb14, i8* %BRANCH_TAKEN, i64 426, i64 6, i64 6)
  store %struct.Memory* %call_46fb14, %struct.Memory** %MEMORY

  %loadBr_46fb14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fb14 = icmp eq i8 %loadBr_46fb14, 1
  br i1 %cmpBr_46fb14, label %block_.L_46fcbe, label %block_46fb1a

block_46fb1a:
  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 46fb1a	 Bytes: 4
  %loadMem_46fb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb1a = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb1a)
  store %struct.Memory* %call_46fb1a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 46fb1e	 Bytes: 3
  %loadMem_46fb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb1e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb1e)
  store %struct.Memory* %call_46fb1e, %struct.Memory** %MEMORY

  ; Code: jne .L_46fcbe	 RIP: 46fb21	 Bytes: 6
  %loadMem_46fb21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb21 = call %struct.Memory* @routine_jne_.L_46fcbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb21, i8* %BRANCH_TAKEN, i64 413, i64 6, i64 6)
  store %struct.Memory* %call_46fb21, %struct.Memory** %MEMORY

  %loadBr_46fb21 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fb21 = icmp eq i8 %loadBr_46fb21, 1
  br i1 %cmpBr_46fb21, label %block_.L_46fcbe, label %block_46fb27

block_46fb27:
  ; Code: movq 0x6cd3b0, %rax	 RIP: 46fb27	 Bytes: 8
  %loadMem_46fb27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb27 = call %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb27)
  store %struct.Memory* %call_46fb27, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46fb2f	 Bytes: 8
  %loadMem_46fb2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb2f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb2f)
  store %struct.Memory* %call_46fb2f, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 46fb37	 Bytes: 6
  %loadMem_46fb37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb37 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb37)
  store %struct.Memory* %call_46fb37, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46fb3d	 Bytes: 3
  %loadMem_46fb3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb3d = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb3d)
  store %struct.Memory* %call_46fb3d, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %edx	 RIP: 46fb40	 Bytes: 3
  %loadMem_46fb40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb40 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb40)
  store %struct.Memory* %call_46fb40, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46fb43	 Bytes: 3
  %loadMem_46fb43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb43 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb43)
  store %struct.Memory* %call_46fb43, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46fb46	 Bytes: 4
  %loadMem_46fb46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb46 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb46)
  store %struct.Memory* %call_46fb46, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 46fb4a	 Bytes: 8
  %loadMem_46fb4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb4a = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb4a)
  store %struct.Memory* %call_46fb4a, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 46fb52	 Bytes: 6
  %loadMem_46fb52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb52 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb52)
  store %struct.Memory* %call_46fb52, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %edx	 RIP: 46fb58	 Bytes: 3
  %loadMem_46fb58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb58 = call %struct.Memory* @routine_sarl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb58)
  store %struct.Memory* %call_46fb58, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %edx	 RIP: 46fb5b	 Bytes: 3
  %loadMem_46fb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb5b = call %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb5b)
  store %struct.Memory* %call_46fb5b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 46fb5e	 Bytes: 3
  %loadMem_46fb5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb5e = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb5e)
  store %struct.Memory* %call_46fb5e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46fb61	 Bytes: 4
  %loadMem_46fb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb61 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb61)
  store %struct.Memory* %call_46fb61, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 46fb65	 Bytes: 3
  %loadMem_46fb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb65 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb65)
  store %struct.Memory* %call_46fb65, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 46fb68	 Bytes: 4
  %loadMem_46fb68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb68 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb68)
  store %struct.Memory* %call_46fb68, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 46fb6c	 Bytes: 4
  %loadMem_46fb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb6c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb6c)
  store %struct.Memory* %call_46fb6c, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 46fb70	 Bytes: 2
  %loadMem_46fb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb70 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb70)
  store %struct.Memory* %call_46fb70, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x6cd480	 RIP: 46fb72	 Bytes: 7
  %loadMem_46fb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb72 = call %struct.Memory* @routine_movl__edx__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb72)
  store %struct.Memory* %call_46fb72, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x6f934c	 RIP: 46fb79	 Bytes: 8
  %loadMem_46fb79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb79 = call %struct.Memory* @routine_cmpl__0x0__0x6f934c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb79)
  store %struct.Memory* %call_46fb79, %struct.Memory** %MEMORY

  ; Code: je .L_46fb94	 RIP: 46fb81	 Bytes: 6
  %loadMem_46fb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb81 = call %struct.Memory* @routine_je_.L_46fb94(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb81, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_46fb81, %struct.Memory** %MEMORY

  %loadBr_46fb81 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fb81 = icmp eq i8 %loadBr_46fb81, 1
  br i1 %cmpBr_46fb81, label %block_.L_46fb94, label %block_46fb87

block_46fb87:
  ; Code: xorl %eax, %eax	 RIP: 46fb87	 Bytes: 2
  %loadMem_46fb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb87 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb87)
  store %struct.Memory* %call_46fb87, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14c(%rbp)	 RIP: 46fb89	 Bytes: 6
  %loadMem_46fb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb89 = call %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb89)
  store %struct.Memory* %call_46fb89, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46fba1	 RIP: 46fb8f	 Bytes: 5
  %loadMem_46fb8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb8f = call %struct.Memory* @routine_jmpq_.L_46fba1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb8f, i64 18, i64 5)
  store %struct.Memory* %call_46fb8f, %struct.Memory** %MEMORY

  br label %block_.L_46fba1

  ; Code: .L_46fb94:	 RIP: 46fb94	 Bytes: 0
block_.L_46fb94:

  ; Code: movl 0x6cd480, %eax	 RIP: 46fb94	 Bytes: 7
  %loadMem_46fb94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb94 = call %struct.Memory* @routine_movl_0x6cd480___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb94)
  store %struct.Memory* %call_46fb94, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14c(%rbp)	 RIP: 46fb9b	 Bytes: 6
  %loadMem_46fb9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fb9b = call %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fb9b)
  store %struct.Memory* %call_46fb9b, %struct.Memory** %MEMORY

  ; Code: .L_46fba1:	 RIP: 46fba1	 Bytes: 0
  br label %block_.L_46fba1
block_.L_46fba1:

  ; Code: movl -0x14c(%rbp), %eax	 RIP: 46fba1	 Bytes: 6
  %loadMem_46fba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fba1 = call %struct.Memory* @routine_movl_MINUS0x14c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fba1)
  store %struct.Memory* %call_46fba1, %struct.Memory** %MEMORY

  ; Code: movss 0x4dc85(%rip), %xmm0	 RIP: 46fba7	 Bytes: 8
  %loadMem_46fba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fba7 = call %struct.Memory* @routine_movss_0x4dc85__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fba7)
  store %struct.Memory* %call_46fba7, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 46fbaf	 Bytes: 2
  %loadMem_46fbaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbaf = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbaf)
  store %struct.Memory* %call_46fbaf, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd480	 RIP: 46fbb1	 Bytes: 7
  %loadMem_46fbb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbb1 = call %struct.Memory* @routine_movl__eax__0x6cd480(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbb1)
  store %struct.Memory* %call_46fbb1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rdx	 RIP: 46fbb8	 Bytes: 8
  %loadMem_46fbb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbb8 = call %struct.Memory* @routine_movq_0x6cd3b0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbb8)
  store %struct.Memory* %call_46fbb8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46fbc0	 Bytes: 8
  %loadMem_46fbc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbc0 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbc0)
  store %struct.Memory* %call_46fbc0, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rsi), %eax	 RIP: 46fbc8	 Bytes: 6
  %loadMem_46fbc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbc8 = call %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbc8)
  store %struct.Memory* %call_46fbc8, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46fbce	 Bytes: 3
  %loadMem_46fbce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbce = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbce)
  store %struct.Memory* %call_46fbce, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %eax	 RIP: 46fbd1	 Bytes: 3
  %loadMem_46fbd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbd1 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbd1)
  store %struct.Memory* %call_46fbd1, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46fbd4	 Bytes: 3
  %loadMem_46fbd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbd4 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbd4)
  store %struct.Memory* %call_46fbd4, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fbd7	 Bytes: 4
  %loadMem_46fbd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbd7 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbd7)
  store %struct.Memory* %call_46fbd7, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46fbdb	 Bytes: 8
  %loadMem_46fbdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbdb = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbdb)
  store %struct.Memory* %call_46fbdb, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rsi), %eax	 RIP: 46fbe3	 Bytes: 6
  %loadMem_46fbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbe3 = call %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbe3)
  store %struct.Memory* %call_46fbe3, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46fbe9	 Bytes: 3
  %loadMem_46fbe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbe9 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbe9)
  store %struct.Memory* %call_46fbe9, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 46fbec	 Bytes: 3
  %loadMem_46fbec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbec = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbec)
  store %struct.Memory* %call_46fbec, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46fbef	 Bytes: 3
  %loadMem_46fbef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbef = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbef)
  store %struct.Memory* %call_46fbef, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fbf2	 Bytes: 4
  %loadMem_46fbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbf2 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbf2)
  store %struct.Memory* %call_46fbf2, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 46fbf6	 Bytes: 5
  %loadMem_46fbf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbf6 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbf6)
  store %struct.Memory* %call_46fbf6, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fbfb	 Bytes: 4
  %loadMem_46fbfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbfb = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbfb)
  store %struct.Memory* %call_46fbfb, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 46fbff	 Bytes: 4
  %loadMem_46fbff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fbff = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fbff)
  store %struct.Memory* %call_46fbff, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fc03	 Bytes: 4
  %loadMem_46fc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc03 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc03)
  store %struct.Memory* %call_46fc03, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rdx), %eax	 RIP: 46fc07	 Bytes: 3
  %loadMem_46fc07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc07 = call %struct.Memory* @routine_movl_0x4__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc07)
  store %struct.Memory* %call_46fc07, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 46fc0a	 Bytes: 2
  %loadMem_46fc0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc0a = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc0a)
  store %struct.Memory* %call_46fc0a, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %edi	 RIP: 46fc0c	 Bytes: 6
  %loadMem_46fc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc0c = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc0c)
  store %struct.Memory* %call_46fc0c, %struct.Memory** %MEMORY

  ; Code: imull %edi, %eax	 RIP: 46fc12	 Bytes: 3
  %loadMem_46fc12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc12 = call %struct.Memory* @routine_imull__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc12)
  store %struct.Memory* %call_46fc12, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 46fc15	 Bytes: 4
  %loadMem_46fc15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc15 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc15)
  store %struct.Memory* %call_46fc15, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46fc19	 Bytes: 6
  %loadMem_46fc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc19 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc19)
  store %struct.Memory* %call_46fc19, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46fc1f	 Bytes: 6
  %loadMem_46fc1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc1f = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc1f)
  store %struct.Memory* %call_46fc1f, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm2	 RIP: 46fc25	 Bytes: 4
  %loadMem_46fc25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc25 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc25)
  store %struct.Memory* %call_46fc25, %struct.Memory** %MEMORY

  ; Code: addss %xmm0, %xmm2	 RIP: 46fc29	 Bytes: 4
  %loadMem_46fc29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc29 = call %struct.Memory* @routine_addss__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc29)
  store %struct.Memory* %call_46fc29, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm1	 RIP: 46fc2d	 Bytes: 4
  %loadMem_46fc2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc2d = call %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc2d)
  store %struct.Memory* %call_46fc2d, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm1, %eax	 RIP: 46fc31	 Bytes: 4
  %loadMem_46fc31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc31 = call %struct.Memory* @routine_cvttss2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc31)
  store %struct.Memory* %call_46fc31, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710010	 RIP: 46fc35	 Bytes: 7
  %loadMem_46fc35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc35 = call %struct.Memory* @routine_movl__eax__0x710010(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc35)
  store %struct.Memory* %call_46fc35, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rdx	 RIP: 46fc3c	 Bytes: 8
  %loadMem_46fc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc3c = call %struct.Memory* @routine_movq_0x6cd3b0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc3c)
  store %struct.Memory* %call_46fc3c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46fc44	 Bytes: 8
  %loadMem_46fc44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc44 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc44)
  store %struct.Memory* %call_46fc44, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rsi), %eax	 RIP: 46fc4c	 Bytes: 6
  %loadMem_46fc4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc4c = call %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc4c)
  store %struct.Memory* %call_46fc4c, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46fc52	 Bytes: 3
  %loadMem_46fc52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc52 = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc52)
  store %struct.Memory* %call_46fc52, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %eax	 RIP: 46fc55	 Bytes: 3
  %loadMem_46fc55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc55 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc55)
  store %struct.Memory* %call_46fc55, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46fc58	 Bytes: 3
  %loadMem_46fc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc58 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc58)
  store %struct.Memory* %call_46fc58, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fc5b	 Bytes: 4
  %loadMem_46fc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc5b = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc5b)
  store %struct.Memory* %call_46fc5b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 46fc5f	 Bytes: 8
  %loadMem_46fc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc5f = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc5f)
  store %struct.Memory* %call_46fc5f, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rsi), %eax	 RIP: 46fc67	 Bytes: 6
  %loadMem_46fc67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc67 = call %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc67)
  store %struct.Memory* %call_46fc67, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %eax	 RIP: 46fc6d	 Bytes: 3
  %loadMem_46fc6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc6d = call %struct.Memory* @routine_sarl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc6d)
  store %struct.Memory* %call_46fc6d, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %eax	 RIP: 46fc70	 Bytes: 3
  %loadMem_46fc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc70 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc70)
  store %struct.Memory* %call_46fc70, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 46fc73	 Bytes: 3
  %loadMem_46fc73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc73 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc73)
  store %struct.Memory* %call_46fc73, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fc76	 Bytes: 4
  %loadMem_46fc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc76 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc76)
  store %struct.Memory* %call_46fc76, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 46fc7a	 Bytes: 5
  %loadMem_46fc7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc7a = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc7a)
  store %struct.Memory* %call_46fc7a, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fc7f	 Bytes: 4
  %loadMem_46fc7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc7f = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc7f)
  store %struct.Memory* %call_46fc7f, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 46fc83	 Bytes: 4
  %loadMem_46fc83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc83 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc83)
  store %struct.Memory* %call_46fc83, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 46fc87	 Bytes: 4
  %loadMem_46fc87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc87 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc87)
  store %struct.Memory* %call_46fc87, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rdx), %eax	 RIP: 46fc8b	 Bytes: 3
  %loadMem_46fc8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc8b = call %struct.Memory* @routine_movl_0x8__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc8b)
  store %struct.Memory* %call_46fc8b, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %ecx	 RIP: 46fc8e	 Bytes: 6
  %loadMem_46fc8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc8e = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc8e)
  store %struct.Memory* %call_46fc8e, %struct.Memory** %MEMORY

  ; Code: imull %ecx, %eax	 RIP: 46fc94	 Bytes: 3
  %loadMem_46fc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc94 = call %struct.Memory* @routine_imull__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc94)
  store %struct.Memory* %call_46fc94, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 46fc97	 Bytes: 4
  %loadMem_46fc97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc97 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc97)
  store %struct.Memory* %call_46fc97, %struct.Memory** %MEMORY

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 46fc9b	 Bytes: 6
  %loadMem_46fc9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fc9b = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fc9b)
  store %struct.Memory* %call_46fc9b, %struct.Memory** %MEMORY

  ; Code: subl -0xbc(%rbp), %eax	 RIP: 46fca1	 Bytes: 6
  %loadMem_46fca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fca1 = call %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fca1)
  store %struct.Memory* %call_46fca1, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm2	 RIP: 46fca7	 Bytes: 4
  %loadMem_46fca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fca7 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fca7)
  store %struct.Memory* %call_46fca7, %struct.Memory** %MEMORY

  ; Code: addss %xmm0, %xmm2	 RIP: 46fcab	 Bytes: 4
  %loadMem_46fcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcab = call %struct.Memory* @routine_addss__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcab)
  store %struct.Memory* %call_46fcab, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm1	 RIP: 46fcaf	 Bytes: 4
  %loadMem_46fcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcaf = call %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcaf)
  store %struct.Memory* %call_46fcaf, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm1, %eax	 RIP: 46fcb3	 Bytes: 4
  %loadMem_46fcb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcb3 = call %struct.Memory* @routine_cvttss2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcb3)
  store %struct.Memory* %call_46fcb3, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x710014	 RIP: 46fcb7	 Bytes: 7
  %loadMem_46fcb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcb7 = call %struct.Memory* @routine_movl__eax__0x710014(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcb7)
  store %struct.Memory* %call_46fcb7, %struct.Memory** %MEMORY

  ; Code: .L_46fcbe:	 RIP: 46fcbe	 Bytes: 0
  br label %block_.L_46fcbe
block_.L_46fcbe:

  ; Code: jmpq .L_46fcc3	 RIP: 46fcbe	 Bytes: 5
  %loadMem_46fcbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcbe = call %struct.Memory* @routine_jmpq_.L_46fcc3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcbe, i64 5, i64 5)
  store %struct.Memory* %call_46fcbe, %struct.Memory** %MEMORY

  br label %block_.L_46fcc3

  ; Code: .L_46fcc3:	 RIP: 46fcc3	 Bytes: 0
block_.L_46fcc3:

  ; Code: jmpq .L_46fcc8	 RIP: 46fcc3	 Bytes: 5
  %loadMem_46fcc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcc3 = call %struct.Memory* @routine_jmpq_.L_46fcc8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcc3, i64 5, i64 5)
  store %struct.Memory* %call_46fcc3, %struct.Memory** %MEMORY

  br label %block_.L_46fcc8

  ; Code: .L_46fcc8:	 RIP: 46fcc8	 Bytes: 0
block_.L_46fcc8:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 46fcc8	 Bytes: 8
  %loadMem_46fcc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcc8 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcc8)
  store %struct.Memory* %call_46fcc8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xcdc(%rax)	 RIP: 46fcd0	 Bytes: 7
  %loadMem_46fcd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcd0 = call %struct.Memory* @routine_cmpl__0x0__0xcdc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcd0)
  store %struct.Memory* %call_46fcd0, %struct.Memory** %MEMORY

  ; Code: je .L_46fce7	 RIP: 46fcd7	 Bytes: 6
  %loadMem_46fcd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcd7 = call %struct.Memory* @routine_je_.L_46fce7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcd7, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_46fcd7, %struct.Memory** %MEMORY

  %loadBr_46fcd7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fcd7 = icmp eq i8 %loadBr_46fcd7, 1
  br i1 %cmpBr_46fcd7, label %block_.L_46fce7, label %block_46fcdd

block_46fcdd:
  ; Code: movl -0x3c(%rbp), %eax	 RIP: 46fcdd	 Bytes: 3
  %loadMem_46fcdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcdd = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcdd)
  store %struct.Memory* %call_46fcdd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9734	 RIP: 46fce0	 Bytes: 7
  %loadMem_46fce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fce0 = call %struct.Memory* @routine_movl__eax__0x6f9734(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fce0)
  store %struct.Memory* %call_46fce0, %struct.Memory** %MEMORY

  ; Code: .L_46fce7:	 RIP: 46fce7	 Bytes: 0
  br label %block_.L_46fce7
block_.L_46fce7:

  ; Code: movq -0x80(%rbp), %rdi	 RIP: 46fce7	 Bytes: 4
  %loadMem_46fce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fce7 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fce7)
  store %struct.Memory* %call_46fce7, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 46fceb	 Bytes: 8
  %loadMem_46fceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fceb = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fceb)
  store %struct.Memory* %call_46fceb, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rsi	 RIP: 46fcf3	 Bytes: 7
  %loadMem_46fcf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcf3 = call %struct.Memory* @routine_movq_0x1950__rax____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcf3)
  store %struct.Memory* %call_46fcf3, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 46fcfa	 Bytes: 8
  %loadMem_46fcfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fcfa = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fcfa)
  store %struct.Memory* %call_46fcfa, %struct.Memory** %MEMORY

  ; Code: movq 0x1968(%rax), %rdx	 RIP: 46fd02	 Bytes: 7
  %loadMem_46fd02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd02 = call %struct.Memory* @routine_movq_0x1968__rax____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd02)
  store %struct.Memory* %call_46fd02, %struct.Memory** %MEMORY

  ; Code: movw -0x2a(%rbp), %cx	 RIP: 46fd09	 Bytes: 4
  %loadMem_46fd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd09 = call %struct.Memory* @routine_movw_MINUS0x2a__rbp____cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd09)
  store %struct.Memory* %call_46fd09, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %r8d	 RIP: 46fd0d	 Bytes: 4
  %loadMem_46fd0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd0d = call %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd0d)
  store %struct.Memory* %call_46fd0d, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %r9d	 RIP: 46fd11	 Bytes: 4
  %loadMem_46fd11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd11 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd11)
  store %struct.Memory* %call_46fd11, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %r10d	 RIP: 46fd15	 Bytes: 4
  %loadMem_46fd15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd15 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd15)
  store %struct.Memory* %call_46fd15, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %r11d	 RIP: 46fd19	 Bytes: 4
  %loadMem_46fd19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd19 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd19)
  store %struct.Memory* %call_46fd19, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ebx	 RIP: 46fd1d	 Bytes: 3
  %loadMem_46fd1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd1d = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd1d)
  store %struct.Memory* %call_46fd1d, %struct.Memory** %MEMORY

  ; Code: movswl %cx, %ecx	 RIP: 46fd20	 Bytes: 3
  %loadMem_46fd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd20 = call %struct.Memory* @routine_movswl__cx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd20)
  store %struct.Memory* %call_46fd20, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 46fd23	 Bytes: 4
  %loadMem_46fd23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd23 = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd23)
  store %struct.Memory* %call_46fd23, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x8(%rsp)	 RIP: 46fd27	 Bytes: 5
  %loadMem_46fd27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd27 = call %struct.Memory* @routine_movl__r11d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd27)
  store %struct.Memory* %call_46fd27, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x10(%rsp)	 RIP: 46fd2c	 Bytes: 4
  %loadMem_46fd2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd2c = call %struct.Memory* @routine_movl__ebx__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd2c)
  store %struct.Memory* %call_46fd2c, %struct.Memory** %MEMORY

  ; Code: callq .SetMotionVectorPredictor	 RIP: 46fd30	 Bytes: 5
  %loadMem1_46fd30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_46fd30 = call %struct.Memory* @routine_callq_.SetMotionVectorPredictor(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_46fd30, i64 -78640, i64 5, i64 5)
  store %struct.Memory* %call1_46fd30, %struct.Memory** %MEMORY

  %loadMem2_46fd30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46fd30 = load i64, i64* %3
  %call2_46fd30 = call %struct.Memory* @sub_45ca00.SetMotionVectorPredictor(%struct.State* %0, i64  %loadPC_46fd30, %struct.Memory* %loadMem2_46fd30)
  store %struct.Memory* %call2_46fd30, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rax	 RIP: 46fd35	 Bytes: 4
  %loadMem_46fd35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd35 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd35)
  store %struct.Memory* %call_46fd35, %struct.Memory** %MEMORY

  ; Code: movw (%rax), %r14w	 RIP: 46fd39	 Bytes: 4
  %loadMem_46fd39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd39 = call %struct.Memory* @routine_movw___rax____r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd39)
  store %struct.Memory* %call_46fd39, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x4a(%rbp)	 RIP: 46fd3d	 Bytes: 5
  %loadMem_46fd3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd3d = call %struct.Memory* @routine_movw__r14w__MINUS0x4a__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd3d)
  store %struct.Memory* %call_46fd3d, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rax	 RIP: 46fd42	 Bytes: 4
  %loadMem_46fd42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd42 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd42)
  store %struct.Memory* %call_46fd42, %struct.Memory** %MEMORY

  ; Code: movw 0x2(%rax), %r14w	 RIP: 46fd46	 Bytes: 5
  %loadMem_46fd46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd46 = call %struct.Memory* @routine_movw_0x2__rax____r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd46)
  store %struct.Memory* %call_46fd46, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x4c(%rbp)	 RIP: 46fd4b	 Bytes: 5
  %loadMem_46fd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd4b = call %struct.Memory* @routine_movw__r14w__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd4b)
  store %struct.Memory* %call_46fd4b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rax	 RIP: 46fd50	 Bytes: 8
  %loadMem_46fd50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd50 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd50)
  store %struct.Memory* %call_46fd50, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xcdc(%rax)	 RIP: 46fd58	 Bytes: 7
  %loadMem_46fd58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd58 = call %struct.Memory* @routine_cmpl__0x0__0xcdc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd58)
  store %struct.Memory* %call_46fd58, %struct.Memory** %MEMORY

  ; Code: je .L_470085	 RIP: 46fd5f	 Bytes: 6
  %loadMem_46fd5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd5f = call %struct.Memory* @routine_je_.L_470085(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd5f, i8* %BRANCH_TAKEN, i64 806, i64 6, i64 6)
  store %struct.Memory* %call_46fd5f, %struct.Memory** %MEMORY

  %loadBr_46fd5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fd5f = icmp eq i8 %loadBr_46fd5f, 1
  br i1 %cmpBr_46fd5f, label %block_.L_470085, label %block_46fd65

block_46fd65:
  ; Code: movl $0x4, %eax	 RIP: 46fd65	 Bytes: 5
  %loadMem_46fd65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd65 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd65)
  store %struct.Memory* %call_46fd65, %struct.Memory** %MEMORY

  ; Code: movswl -0x4a(%rbp), %ecx	 RIP: 46fd6a	 Bytes: 4
  %loadMem_46fd6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd6a = call %struct.Memory* @routine_movswl_MINUS0x4a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd6a)
  store %struct.Memory* %call_46fd6a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x150(%rbp)	 RIP: 46fd6e	 Bytes: 6
  %loadMem_46fd6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd6e = call %struct.Memory* @routine_movl__eax__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd6e)
  store %struct.Memory* %call_46fd6e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 46fd74	 Bytes: 2
  %loadMem_46fd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd74 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd74)
  store %struct.Memory* %call_46fd74, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46fd76	 Bytes: 1
  %loadMem_46fd76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd76 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd76)
  store %struct.Memory* %call_46fd76, %struct.Memory** %MEMORY

  ; Code: movl -0x150(%rbp), %ecx	 RIP: 46fd77	 Bytes: 6
  %loadMem_46fd77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd77 = call %struct.Memory* @routine_movl_MINUS0x150__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd77)
  store %struct.Memory* %call_46fd77, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46fd7d	 Bytes: 2
  %loadMem_46fd7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd7d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd7d)
  store %struct.Memory* %call_46fd7d, %struct.Memory** %MEMORY

  ; Code: movw %ax, %si	 RIP: 46fd7f	 Bytes: 3
  %loadMem_46fd7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd7f = call %struct.Memory* @routine_movw__ax___si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd7f)
  store %struct.Memory* %call_46fd7f, %struct.Memory** %MEMORY

  ; Code: movw %si, -0x4e(%rbp)	 RIP: 46fd82	 Bytes: 4
  %loadMem_46fd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd82 = call %struct.Memory* @routine_movw__si__MINUS0x4e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd82)
  store %struct.Memory* %call_46fd82, %struct.Memory** %MEMORY

  ; Code: movswl -0x4c(%rbp), %eax	 RIP: 46fd86	 Bytes: 4
  %loadMem_46fd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd86 = call %struct.Memory* @routine_movswl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd86)
  store %struct.Memory* %call_46fd86, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 46fd8a	 Bytes: 1
  %loadMem_46fd8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd8a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd8a)
  store %struct.Memory* %call_46fd8a, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 46fd8b	 Bytes: 2
  %loadMem_46fd8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd8b = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd8b)
  store %struct.Memory* %call_46fd8b, %struct.Memory** %MEMORY

  ; Code: movw %ax, %si	 RIP: 46fd8d	 Bytes: 3
  %loadMem_46fd8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd8d = call %struct.Memory* @routine_movw__ax___si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd8d)
  store %struct.Memory* %call_46fd8d, %struct.Memory** %MEMORY

  ; Code: movw %si, -0x50(%rbp)	 RIP: 46fd90	 Bytes: 4
  %loadMem_46fd90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd90 = call %struct.Memory* @routine_movw__si__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd90)
  store %struct.Memory* %call_46fd90, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdi	 RIP: 46fd94	 Bytes: 8
  %loadMem_46fd94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd94 = call %struct.Memory* @routine_movq_0x6cb8f8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd94)
  store %struct.Memory* %call_46fd94, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x9a0(%rdi)	 RIP: 46fd9c	 Bytes: 7
  %loadMem_46fd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fd9c = call %struct.Memory* @routine_cmpl__0x0__0x9a0__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fd9c)
  store %struct.Memory* %call_46fd9c, %struct.Memory** %MEMORY

  ; Code: jne .L_46fed5	 RIP: 46fda3	 Bytes: 6
  %loadMem_46fda3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fda3 = call %struct.Memory* @routine_jne_.L_46fed5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fda3, i8* %BRANCH_TAKEN, i64 306, i64 6, i64 6)
  store %struct.Memory* %call_46fda3, %struct.Memory** %MEMORY

  %loadBr_46fda3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fda3 = icmp eq i8 %loadBr_46fda3, 1
  br i1 %cmpBr_46fda3, label %block_.L_46fed5, label %block_46fda9

block_46fda9:
  ; Code: xorl %eax, %eax	 RIP: 46fda9	 Bytes: 2
  %loadMem_46fda9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fda9 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fda9)
  store %struct.Memory* %call_46fda9, %struct.Memory** %MEMORY

  ; Code: subl -0x40(%rbp), %eax	 RIP: 46fdab	 Bytes: 3
  %loadMem_46fdab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdab = call %struct.Memory* @routine_subl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdab)
  store %struct.Memory* %call_46fdab, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %ecx	 RIP: 46fdae	 Bytes: 3
  %loadMem_46fdae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdae = call %struct.Memory* @routine_movl_MINUS0x40__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdae)
  store %struct.Memory* %call_46fdae, %struct.Memory** %MEMORY

  ; Code: movswl -0x4e(%rbp), %edx	 RIP: 46fdb1	 Bytes: 4
  %loadMem_46fdb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdb1 = call %struct.Memory* @routine_movswl_MINUS0x4e__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdb1)
  store %struct.Memory* %call_46fdb1, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 46fdb5	 Bytes: 2
  %loadMem_46fdb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdb5 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdb5)
  store %struct.Memory* %call_46fdb5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x154(%rbp)	 RIP: 46fdb7	 Bytes: 6
  %loadMem_46fdb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdb7 = call %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdb7)
  store %struct.Memory* %call_46fdb7, %struct.Memory** %MEMORY

  ; Code: jge .L_46fdd1	 RIP: 46fdbd	 Bytes: 6
  %loadMem_46fdbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdbd = call %struct.Memory* @routine_jge_.L_46fdd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdbd, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_46fdbd, %struct.Memory** %MEMORY

  %loadBr_46fdbd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fdbd = icmp eq i8 %loadBr_46fdbd, 1
  br i1 %cmpBr_46fdbd, label %block_.L_46fdd1, label %block_46fdc3

block_46fdc3:
  ; Code: movl -0x40(%rbp), %eax	 RIP: 46fdc3	 Bytes: 3
  %loadMem_46fdc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdc3 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdc3)
  store %struct.Memory* %call_46fdc3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x158(%rbp)	 RIP: 46fdc6	 Bytes: 6
  %loadMem_46fdc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdc6 = call %struct.Memory* @routine_movl__eax__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdc6)
  store %struct.Memory* %call_46fdc6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46fddb	 RIP: 46fdcc	 Bytes: 5
  %loadMem_46fdcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdcc = call %struct.Memory* @routine_jmpq_.L_46fddb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdcc, i64 15, i64 5)
  store %struct.Memory* %call_46fdcc, %struct.Memory** %MEMORY

  br label %block_.L_46fddb

  ; Code: .L_46fdd1:	 RIP: 46fdd1	 Bytes: 0
block_.L_46fdd1:

  ; Code: movswl -0x4e(%rbp), %eax	 RIP: 46fdd1	 Bytes: 4
  %loadMem_46fdd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdd1 = call %struct.Memory* @routine_movswl_MINUS0x4e__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdd1)
  store %struct.Memory* %call_46fdd1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x158(%rbp)	 RIP: 46fdd5	 Bytes: 6
  %loadMem_46fdd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdd5 = call %struct.Memory* @routine_movl__eax__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdd5)
  store %struct.Memory* %call_46fdd5, %struct.Memory** %MEMORY

  ; Code: .L_46fddb:	 RIP: 46fddb	 Bytes: 0
  br label %block_.L_46fddb
block_.L_46fddb:

  ; Code: movl -0x158(%rbp), %eax	 RIP: 46fddb	 Bytes: 6
  %loadMem_46fddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fddb = call %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fddb)
  store %struct.Memory* %call_46fddb, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %ecx	 RIP: 46fde1	 Bytes: 6
  %loadMem_46fde1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fde1 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fde1)
  store %struct.Memory* %call_46fde1, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 46fde7	 Bytes: 2
  %loadMem_46fde7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fde7 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fde7)
  store %struct.Memory* %call_46fde7, %struct.Memory** %MEMORY

  ; Code: jle .L_46fdff	 RIP: 46fde9	 Bytes: 6
  %loadMem_46fde9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fde9 = call %struct.Memory* @routine_jle_.L_46fdff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fde9, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_46fde9, %struct.Memory** %MEMORY

  %loadBr_46fde9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fde9 = icmp eq i8 %loadBr_46fde9, 1
  br i1 %cmpBr_46fde9, label %block_.L_46fdff, label %block_46fdef

block_46fdef:
  ; Code: xorl %eax, %eax	 RIP: 46fdef	 Bytes: 2
  %loadMem_46fdef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdef = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdef)
  store %struct.Memory* %call_46fdef, %struct.Memory** %MEMORY

  ; Code: subl -0x40(%rbp), %eax	 RIP: 46fdf1	 Bytes: 3
  %loadMem_46fdf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdf1 = call %struct.Memory* @routine_subl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdf1)
  store %struct.Memory* %call_46fdf1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x15c(%rbp)	 RIP: 46fdf4	 Bytes: 6
  %loadMem_46fdf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdf4 = call %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdf4)
  store %struct.Memory* %call_46fdf4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46fe32	 RIP: 46fdfa	 Bytes: 5
  %loadMem_46fdfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdfa = call %struct.Memory* @routine_jmpq_.L_46fe32(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdfa, i64 56, i64 5)
  store %struct.Memory* %call_46fdfa, %struct.Memory** %MEMORY

  br label %block_.L_46fe32

  ; Code: .L_46fdff:	 RIP: 46fdff	 Bytes: 0
block_.L_46fdff:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 46fdff	 Bytes: 3
  %loadMem_46fdff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fdff = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fdff)
  store %struct.Memory* %call_46fdff, %struct.Memory** %MEMORY

  ; Code: movswl -0x4e(%rbp), %ecx	 RIP: 46fe02	 Bytes: 4
  %loadMem_46fe02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe02 = call %struct.Memory* @routine_movswl_MINUS0x4e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe02)
  store %struct.Memory* %call_46fe02, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 46fe06	 Bytes: 2
  %loadMem_46fe06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe06 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe06)
  store %struct.Memory* %call_46fe06, %struct.Memory** %MEMORY

  ; Code: jge .L_46fe1c	 RIP: 46fe08	 Bytes: 6
  %loadMem_46fe08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe08 = call %struct.Memory* @routine_jge_.L_46fe1c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe08, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_46fe08, %struct.Memory** %MEMORY

  %loadBr_46fe08 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fe08 = icmp eq i8 %loadBr_46fe08, 1
  br i1 %cmpBr_46fe08, label %block_.L_46fe1c, label %block_46fe0e

block_46fe0e:
  ; Code: movl -0x40(%rbp), %eax	 RIP: 46fe0e	 Bytes: 3
  %loadMem_46fe0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe0e = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe0e)
  store %struct.Memory* %call_46fe0e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x160(%rbp)	 RIP: 46fe11	 Bytes: 6
  %loadMem_46fe11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe11 = call %struct.Memory* @routine_movl__eax__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe11)
  store %struct.Memory* %call_46fe11, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46fe26	 RIP: 46fe17	 Bytes: 5
  %loadMem_46fe17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe17 = call %struct.Memory* @routine_jmpq_.L_46fe26(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe17, i64 15, i64 5)
  store %struct.Memory* %call_46fe17, %struct.Memory** %MEMORY

  br label %block_.L_46fe26

  ; Code: .L_46fe1c:	 RIP: 46fe1c	 Bytes: 0
block_.L_46fe1c:

  ; Code: movswl -0x4e(%rbp), %eax	 RIP: 46fe1c	 Bytes: 4
  %loadMem_46fe1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe1c = call %struct.Memory* @routine_movswl_MINUS0x4e__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe1c)
  store %struct.Memory* %call_46fe1c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x160(%rbp)	 RIP: 46fe20	 Bytes: 6
  %loadMem_46fe20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe20 = call %struct.Memory* @routine_movl__eax__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe20)
  store %struct.Memory* %call_46fe20, %struct.Memory** %MEMORY

  ; Code: .L_46fe26:	 RIP: 46fe26	 Bytes: 0
  br label %block_.L_46fe26
block_.L_46fe26:

  ; Code: movl -0x160(%rbp), %eax	 RIP: 46fe26	 Bytes: 6
  %loadMem_46fe26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe26 = call %struct.Memory* @routine_movl_MINUS0x160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe26)
  store %struct.Memory* %call_46fe26, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x15c(%rbp)	 RIP: 46fe2c	 Bytes: 6
  %loadMem_46fe2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe2c = call %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe2c)
  store %struct.Memory* %call_46fe2c, %struct.Memory** %MEMORY

  ; Code: .L_46fe32:	 RIP: 46fe32	 Bytes: 0
  br label %block_.L_46fe32
block_.L_46fe32:

  ; Code: movl -0x15c(%rbp), %eax	 RIP: 46fe32	 Bytes: 6
  %loadMem_46fe32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe32 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe32)
  store %struct.Memory* %call_46fe32, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 46fe38	 Bytes: 2
  %loadMem_46fe38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe38 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe38)
  store %struct.Memory* %call_46fe38, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 46fe3a	 Bytes: 3
  %loadMem_46fe3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe3a = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe3a)
  store %struct.Memory* %call_46fe3a, %struct.Memory** %MEMORY

  ; Code: movw %dx, -0x4e(%rbp)	 RIP: 46fe3d	 Bytes: 4
  %loadMem_46fe3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe3d = call %struct.Memory* @routine_movw__dx__MINUS0x4e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe3d)
  store %struct.Memory* %call_46fe3d, %struct.Memory** %MEMORY

  ; Code: subl -0x40(%rbp), %ecx	 RIP: 46fe41	 Bytes: 3
  %loadMem_46fe41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe41 = call %struct.Memory* @routine_subl_MINUS0x40__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe41)
  store %struct.Memory* %call_46fe41, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %eax	 RIP: 46fe44	 Bytes: 3
  %loadMem_46fe44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe44 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe44)
  store %struct.Memory* %call_46fe44, %struct.Memory** %MEMORY

  ; Code: movswl -0x50(%rbp), %esi	 RIP: 46fe47	 Bytes: 4
  %loadMem_46fe47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe47 = call %struct.Memory* @routine_movswl_MINUS0x50__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe47)
  store %struct.Memory* %call_46fe47, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %eax	 RIP: 46fe4b	 Bytes: 2
  %loadMem_46fe4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe4b = call %struct.Memory* @routine_cmpl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe4b)
  store %struct.Memory* %call_46fe4b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x164(%rbp)	 RIP: 46fe4d	 Bytes: 6
  %loadMem_46fe4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe4d = call %struct.Memory* @routine_movl__ecx__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe4d)
  store %struct.Memory* %call_46fe4d, %struct.Memory** %MEMORY

  ; Code: jge .L_46fe67	 RIP: 46fe53	 Bytes: 6
  %loadMem_46fe53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe53 = call %struct.Memory* @routine_jge_.L_46fe67(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe53, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_46fe53, %struct.Memory** %MEMORY

  %loadBr_46fe53 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fe53 = icmp eq i8 %loadBr_46fe53, 1
  br i1 %cmpBr_46fe53, label %block_.L_46fe67, label %block_46fe59

block_46fe59:
  ; Code: movl -0x40(%rbp), %eax	 RIP: 46fe59	 Bytes: 3
  %loadMem_46fe59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe59 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe59)
  store %struct.Memory* %call_46fe59, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x168(%rbp)	 RIP: 46fe5c	 Bytes: 6
  %loadMem_46fe5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe5c = call %struct.Memory* @routine_movl__eax__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe5c)
  store %struct.Memory* %call_46fe5c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46fe71	 RIP: 46fe62	 Bytes: 5
  %loadMem_46fe62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe62 = call %struct.Memory* @routine_jmpq_.L_46fe71(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe62, i64 15, i64 5)
  store %struct.Memory* %call_46fe62, %struct.Memory** %MEMORY

  br label %block_.L_46fe71

  ; Code: .L_46fe67:	 RIP: 46fe67	 Bytes: 0
block_.L_46fe67:

  ; Code: movswl -0x50(%rbp), %eax	 RIP: 46fe67	 Bytes: 4
  %loadMem_46fe67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe67 = call %struct.Memory* @routine_movswl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe67)
  store %struct.Memory* %call_46fe67, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x168(%rbp)	 RIP: 46fe6b	 Bytes: 6
  %loadMem_46fe6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe6b = call %struct.Memory* @routine_movl__eax__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe6b)
  store %struct.Memory* %call_46fe6b, %struct.Memory** %MEMORY

  ; Code: .L_46fe71:	 RIP: 46fe71	 Bytes: 0
  br label %block_.L_46fe71
block_.L_46fe71:

  ; Code: movl -0x168(%rbp), %eax	 RIP: 46fe71	 Bytes: 6
  %loadMem_46fe71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe71 = call %struct.Memory* @routine_movl_MINUS0x168__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe71)
  store %struct.Memory* %call_46fe71, %struct.Memory** %MEMORY

  ; Code: movl -0x164(%rbp), %ecx	 RIP: 46fe77	 Bytes: 6
  %loadMem_46fe77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe77 = call %struct.Memory* @routine_movl_MINUS0x164__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe77)
  store %struct.Memory* %call_46fe77, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 46fe7d	 Bytes: 2
  %loadMem_46fe7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe7d = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe7d)
  store %struct.Memory* %call_46fe7d, %struct.Memory** %MEMORY

  ; Code: jle .L_46fe95	 RIP: 46fe7f	 Bytes: 6
  %loadMem_46fe7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe7f = call %struct.Memory* @routine_jle_.L_46fe95(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe7f, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_46fe7f, %struct.Memory** %MEMORY

  %loadBr_46fe7f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fe7f = icmp eq i8 %loadBr_46fe7f, 1
  br i1 %cmpBr_46fe7f, label %block_.L_46fe95, label %block_46fe85

block_46fe85:
  ; Code: xorl %eax, %eax	 RIP: 46fe85	 Bytes: 2
  %loadMem_46fe85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe85 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe85)
  store %struct.Memory* %call_46fe85, %struct.Memory** %MEMORY

  ; Code: subl -0x40(%rbp), %eax	 RIP: 46fe87	 Bytes: 3
  %loadMem_46fe87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe87 = call %struct.Memory* @routine_subl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe87)
  store %struct.Memory* %call_46fe87, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x16c(%rbp)	 RIP: 46fe8a	 Bytes: 6
  %loadMem_46fe8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe8a = call %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe8a)
  store %struct.Memory* %call_46fe8a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46fec8	 RIP: 46fe90	 Bytes: 5
  %loadMem_46fe90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe90 = call %struct.Memory* @routine_jmpq_.L_46fec8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe90, i64 56, i64 5)
  store %struct.Memory* %call_46fe90, %struct.Memory** %MEMORY

  br label %block_.L_46fec8

  ; Code: .L_46fe95:	 RIP: 46fe95	 Bytes: 0
block_.L_46fe95:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 46fe95	 Bytes: 3
  %loadMem_46fe95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe95 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe95)
  store %struct.Memory* %call_46fe95, %struct.Memory** %MEMORY

  ; Code: movswl -0x50(%rbp), %ecx	 RIP: 46fe98	 Bytes: 4
  %loadMem_46fe98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe98 = call %struct.Memory* @routine_movswl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe98)
  store %struct.Memory* %call_46fe98, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 46fe9c	 Bytes: 2
  %loadMem_46fe9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe9c = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe9c)
  store %struct.Memory* %call_46fe9c, %struct.Memory** %MEMORY

  ; Code: jge .L_46feb2	 RIP: 46fe9e	 Bytes: 6
  %loadMem_46fe9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fe9e = call %struct.Memory* @routine_jge_.L_46feb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fe9e, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_46fe9e, %struct.Memory** %MEMORY

  %loadBr_46fe9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46fe9e = icmp eq i8 %loadBr_46fe9e, 1
  br i1 %cmpBr_46fe9e, label %block_.L_46feb2, label %block_46fea4

block_46fea4:
  ; Code: movl -0x40(%rbp), %eax	 RIP: 46fea4	 Bytes: 3
  %loadMem_46fea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fea4 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fea4)
  store %struct.Memory* %call_46fea4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x170(%rbp)	 RIP: 46fea7	 Bytes: 6
  %loadMem_46fea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fea7 = call %struct.Memory* @routine_movl__eax__MINUS0x170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fea7)
  store %struct.Memory* %call_46fea7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46febc	 RIP: 46fead	 Bytes: 5
  %loadMem_46fead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fead = call %struct.Memory* @routine_jmpq_.L_46febc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fead, i64 15, i64 5)
  store %struct.Memory* %call_46fead, %struct.Memory** %MEMORY

  br label %block_.L_46febc

  ; Code: .L_46feb2:	 RIP: 46feb2	 Bytes: 0
block_.L_46feb2:

  ; Code: movswl -0x50(%rbp), %eax	 RIP: 46feb2	 Bytes: 4
  %loadMem_46feb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46feb2 = call %struct.Memory* @routine_movswl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46feb2)
  store %struct.Memory* %call_46feb2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x170(%rbp)	 RIP: 46feb6	 Bytes: 6
  %loadMem_46feb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46feb6 = call %struct.Memory* @routine_movl__eax__MINUS0x170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46feb6)
  store %struct.Memory* %call_46feb6, %struct.Memory** %MEMORY

  ; Code: .L_46febc:	 RIP: 46febc	 Bytes: 0
  br label %block_.L_46febc
block_.L_46febc:

  ; Code: movl -0x170(%rbp), %eax	 RIP: 46febc	 Bytes: 6
  %loadMem_46febc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46febc = call %struct.Memory* @routine_movl_MINUS0x170__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46febc)
  store %struct.Memory* %call_46febc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x16c(%rbp)	 RIP: 46fec2	 Bytes: 6
  %loadMem_46fec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fec2 = call %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fec2)
  store %struct.Memory* %call_46fec2, %struct.Memory** %MEMORY

  ; Code: .L_46fec8:	 RIP: 46fec8	 Bytes: 0
  br label %block_.L_46fec8
block_.L_46fec8:

  ; Code: movl -0x16c(%rbp), %eax	 RIP: 46fec8	 Bytes: 6
  %loadMem_46fec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fec8 = call %struct.Memory* @routine_movl_MINUS0x16c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fec8)
  store %struct.Memory* %call_46fec8, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 46fece	 Bytes: 3
  %loadMem_46fece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fece = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fece)
  store %struct.Memory* %call_46fece, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0x50(%rbp)	 RIP: 46fed1	 Bytes: 4
  %loadMem_46fed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fed1 = call %struct.Memory* @routine_movw__cx__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fed1)
  store %struct.Memory* %call_46fed1, %struct.Memory** %MEMORY

  ; Code: .L_46fed5:	 RIP: 46fed5	 Bytes: 0
  br label %block_.L_46fed5
block_.L_46fed5:

  ; Code: movq $0x6cbc30, %rdi	 RIP: 46fed5	 Bytes: 10
  %loadMem_46fed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fed5 = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fed5)
  store %struct.Memory* %call_46fed5, %struct.Memory** %MEMORY

  ; Code: leaq -0x4e(%rbp), %rax	 RIP: 46fedf	 Bytes: 4
  %loadMem_46fedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fedf = call %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fedf)
  store %struct.Memory* %call_46fedf, %struct.Memory** %MEMORY

  ; Code: leaq -0x50(%rbp), %rcx	 RIP: 46fee3	 Bytes: 4
  %loadMem_46fee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fee3 = call %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fee3)
  store %struct.Memory* %call_46fee3, %struct.Memory** %MEMORY

  ; Code: movw -0x2a(%rbp), %dx	 RIP: 46fee7	 Bytes: 4
  %loadMem_46fee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fee7 = call %struct.Memory* @routine_movw_MINUS0x2a__rbp____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fee7)
  store %struct.Memory* %call_46fee7, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %esi	 RIP: 46feeb	 Bytes: 3
  %loadMem_46feeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46feeb = call %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46feeb)
  store %struct.Memory* %call_46feeb, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r8d	 RIP: 46feee	 Bytes: 4
  %loadMem_46feee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46feee = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46feee)
  store %struct.Memory* %call_46feee, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %r9d	 RIP: 46fef2	 Bytes: 4
  %loadMem_46fef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fef2 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fef2)
  store %struct.Memory* %call_46fef2, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %r10d	 RIP: 46fef6	 Bytes: 4
  %loadMem_46fef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fef6 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fef6)
  store %struct.Memory* %call_46fef6, %struct.Memory** %MEMORY

  ; Code: movw -0x4a(%rbp), %r11w	 RIP: 46fefa	 Bytes: 5
  %loadMem_46fefa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fefa = call %struct.Memory* @routine_movw_MINUS0x4a__rbp____r11w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fefa)
  store %struct.Memory* %call_46fefa, %struct.Memory** %MEMORY

  ; Code: movw -0x4c(%rbp), %bx	 RIP: 46feff	 Bytes: 4
  %loadMem_46feff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46feff = call %struct.Memory* @routine_movw_MINUS0x4c__rbp____bx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46feff)
  store %struct.Memory* %call_46feff, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %r14d	 RIP: 46ff03	 Bytes: 4
  %loadMem_46ff03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff03 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff03)
  store %struct.Memory* %call_46ff03, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r15d	 RIP: 46ff07	 Bytes: 4
  %loadMem_46ff07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff07 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r15d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff07)
  store %struct.Memory* %call_46ff07, %struct.Memory** %MEMORY

  ; Code: movsd -0x48(%rbp), %xmm0	 RIP: 46ff0b	 Bytes: 5
  %loadMem_46ff0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff0b = call %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff0b)
  store %struct.Memory* %call_46ff0b, %struct.Memory** %MEMORY

  ; Code: movswl %dx, %r12d	 RIP: 46ff10	 Bytes: 4
  %loadMem_46ff10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff10 = call %struct.Memory* @routine_movswl__dx___r12d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff10)
  store %struct.Memory* %call_46ff10, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x174(%rbp)	 RIP: 46ff14	 Bytes: 6
  %loadMem_46ff14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff14 = call %struct.Memory* @routine_movl__esi__MINUS0x174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff14)
  store %struct.Memory* %call_46ff14, %struct.Memory** %MEMORY

  ; Code: movl %r12d, %esi	 RIP: 46ff1a	 Bytes: 3
  %loadMem_46ff1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff1a = call %struct.Memory* @routine_movl__r12d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff1a)
  store %struct.Memory* %call_46ff1a, %struct.Memory** %MEMORY

  ; Code: movl -0x174(%rbp), %edx	 RIP: 46ff1d	 Bytes: 6
  %loadMem_46ff1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff1d = call %struct.Memory* @routine_movl_MINUS0x174__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff1d)
  store %struct.Memory* %call_46ff1d, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x180(%rbp)	 RIP: 46ff23	 Bytes: 7
  %loadMem_46ff23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff23 = call %struct.Memory* @routine_movq__rcx__MINUS0x180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff23)
  store %struct.Memory* %call_46ff23, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 46ff2a	 Bytes: 3
  %loadMem_46ff2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff2a = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff2a)
  store %struct.Memory* %call_46ff2a, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %r8d	 RIP: 46ff2d	 Bytes: 3
  %loadMem_46ff2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff2d = call %struct.Memory* @routine_movl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff2d)
  store %struct.Memory* %call_46ff2d, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %r9d	 RIP: 46ff30	 Bytes: 3
  %loadMem_46ff30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff30 = call %struct.Memory* @routine_movl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff30)
  store %struct.Memory* %call_46ff30, %struct.Memory** %MEMORY

  ; Code: movswl %r11w, %r10d	 RIP: 46ff33	 Bytes: 4
  %loadMem_46ff33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff33 = call %struct.Memory* @routine_movswl__r11w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff33)
  store %struct.Memory* %call_46ff33, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 46ff37	 Bytes: 4
  %loadMem_46ff37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff37 = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff37)
  store %struct.Memory* %call_46ff37, %struct.Memory** %MEMORY

  ; Code: movswl %bx, %r10d	 RIP: 46ff3b	 Bytes: 4
  %loadMem_46ff3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff3b = call %struct.Memory* @routine_movswl__bx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff3b)
  store %struct.Memory* %call_46ff3b, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 46ff3f	 Bytes: 5
  %loadMem_46ff3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff3f = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff3f)
  store %struct.Memory* %call_46ff3f, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rsp)	 RIP: 46ff44	 Bytes: 5
  %loadMem_46ff44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff44 = call %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff44)
  store %struct.Memory* %call_46ff44, %struct.Memory** %MEMORY

  ; Code: movq -0x180(%rbp), %rax	 RIP: 46ff49	 Bytes: 7
  %loadMem_46ff49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff49 = call %struct.Memory* @routine_movq_MINUS0x180__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff49)
  store %struct.Memory* %call_46ff49, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x18(%rsp)	 RIP: 46ff50	 Bytes: 5
  %loadMem_46ff50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff50 = call %struct.Memory* @routine_movq__rax__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff50)
  store %struct.Memory* %call_46ff50, %struct.Memory** %MEMORY

  ; Code: movl %r14d, 0x20(%rsp)	 RIP: 46ff55	 Bytes: 5
  %loadMem_46ff55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff55 = call %struct.Memory* @routine_movl__r14d__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff55)
  store %struct.Memory* %call_46ff55, %struct.Memory** %MEMORY

  ; Code: movl %r15d, 0x28(%rsp)	 RIP: 46ff5a	 Bytes: 5
  %loadMem_46ff5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff5a = call %struct.Memory* @routine_movl__r15d__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff5a)
  store %struct.Memory* %call_46ff5a, %struct.Memory** %MEMORY

  ; Code: callq .FastIntegerPelBlockMotionSearch	 RIP: 46ff5f	 Bytes: 5
  %loadMem1_46ff5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_46ff5f = call %struct.Memory* @routine_callq_.FastIntegerPelBlockMotionSearch(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_46ff5f, i64 -325727, i64 5, i64 5)
  store %struct.Memory* %call1_46ff5f, %struct.Memory** %MEMORY

  %loadMem2_46ff5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46ff5f = load i64, i64* %3
  %call2_46ff5f = call %struct.Memory* @sub_420700.FastIntegerPelBlockMotionSearch(%struct.State* %0, i64  %loadPC_46ff5f, %struct.Memory* %loadMem2_46ff5f)
  store %struct.Memory* %call2_46ff5f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 46ff64	 Bytes: 3
  %loadMem_46ff64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff64 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff64)
  store %struct.Memory* %call_46ff64, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x54(%rbp)	 RIP: 46ff67	 Bytes: 7
  %loadMem_46ff67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff67 = call %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff67)
  store %struct.Memory* %call_46ff67, %struct.Memory** %MEMORY

  ; Code: .L_46ff6e:	 RIP: 46ff6e	 Bytes: 0
  br label %block_.L_46ff6e
block_.L_46ff6e:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 46ff6e	 Bytes: 3
  %loadMem_46ff6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff6e = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff6e)
  store %struct.Memory* %call_46ff6e, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %ecx	 RIP: 46ff71	 Bytes: 3
  %loadMem_46ff71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff71 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff71)
  store %struct.Memory* %call_46ff71, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 46ff74	 Bytes: 3
  %loadMem_46ff74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff74 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff74)
  store %struct.Memory* %call_46ff74, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 46ff77	 Bytes: 2
  %loadMem_46ff77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff77 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff77)
  store %struct.Memory* %call_46ff77, %struct.Memory** %MEMORY

  ; Code: jge .L_470080	 RIP: 46ff79	 Bytes: 6
  %loadMem_46ff79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff79 = call %struct.Memory* @routine_jge_.L_470080(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff79, i8* %BRANCH_TAKEN, i64 263, i64 6, i64 6)
  store %struct.Memory* %call_46ff79, %struct.Memory** %MEMORY

  %loadBr_46ff79 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ff79 = icmp eq i8 %loadBr_46ff79, 1
  br i1 %cmpBr_46ff79, label %block_.L_470080, label %block_46ff7f

block_46ff7f:
  ; Code: movl $0x0, -0x58(%rbp)	 RIP: 46ff7f	 Bytes: 7
  %loadMem_46ff7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff7f = call %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff7f)
  store %struct.Memory* %call_46ff7f, %struct.Memory** %MEMORY

  ; Code: .L_46ff86:	 RIP: 46ff86	 Bytes: 0
  br label %block_.L_46ff86
block_.L_46ff86:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 46ff86	 Bytes: 3
  %loadMem_46ff86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff86 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff86)
  store %struct.Memory* %call_46ff86, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 46ff89	 Bytes: 3
  %loadMem_46ff89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff89 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff89)
  store %struct.Memory* %call_46ff89, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 46ff8c	 Bytes: 3
  %loadMem_46ff8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff8c = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff8c)
  store %struct.Memory* %call_46ff8c, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 46ff8f	 Bytes: 2
  %loadMem_46ff8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff8f = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff8f)
  store %struct.Memory* %call_46ff8f, %struct.Memory** %MEMORY

  ; Code: jge .L_47006d	 RIP: 46ff91	 Bytes: 6
  %loadMem_46ff91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff91 = call %struct.Memory* @routine_jge_.L_47006d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff91, i8* %BRANCH_TAKEN, i64 220, i64 6, i64 6)
  store %struct.Memory* %call_46ff91, %struct.Memory** %MEMORY

  %loadBr_46ff91 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ff91 = icmp eq i8 %loadBr_46ff91, 1
  br i1 %cmpBr_46ff91, label %block_.L_47006d, label %block_46ff97

block_46ff97:
  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 46ff97	 Bytes: 4
  %loadMem_46ff97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff97 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff97)
  store %struct.Memory* %call_46ff97, %struct.Memory** %MEMORY

  ; Code: jne .L_470000	 RIP: 46ff9b	 Bytes: 6
  %loadMem_46ff9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ff9b = call %struct.Memory* @routine_jne_.L_470000(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ff9b, i8* %BRANCH_TAKEN, i64 101, i64 6, i64 6)
  store %struct.Memory* %call_46ff9b, %struct.Memory** %MEMORY

  %loadBr_46ff9b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ff9b = icmp eq i8 %loadBr_46ff9b, 1
  br i1 %cmpBr_46ff9b, label %block_.L_470000, label %block_46ffa1

block_46ffa1:
  ; Code: movl -0x60(%rbp), %eax	 RIP: 46ffa1	 Bytes: 3
  %loadMem_46ffa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffa1 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffa1)
  store %struct.Memory* %call_46ffa1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd468, %rcx	 RIP: 46ffa4	 Bytes: 8
  %loadMem_46ffa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffa4 = call %struct.Memory* @routine_movq_0x6cd468___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffa4)
  store %struct.Memory* %call_46ffa4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46ffac	 Bytes: 8
  %loadMem_46ffac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffac = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffac)
  store %struct.Memory* %call_46ffac, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %esi	 RIP: 46ffb4	 Bytes: 6
  %loadMem_46ffb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffb4 = call %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffb4)
  store %struct.Memory* %call_46ffb4, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 46ffba	 Bytes: 3
  %loadMem_46ffba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffba = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffba)
  store %struct.Memory* %call_46ffba, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %esi	 RIP: 46ffbd	 Bytes: 3
  %loadMem_46ffbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffbd = call %struct.Memory* @routine_addl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffbd)
  store %struct.Memory* %call_46ffbd, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %esi	 RIP: 46ffc0	 Bytes: 3
  %loadMem_46ffc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffc0 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffc0)
  store %struct.Memory* %call_46ffc0, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 46ffc3	 Bytes: 3
  %loadMem_46ffc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffc3 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffc3)
  store %struct.Memory* %call_46ffc3, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46ffc6	 Bytes: 4
  %loadMem_46ffc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffc6 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffc6)
  store %struct.Memory* %call_46ffc6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 46ffca	 Bytes: 8
  %loadMem_46ffca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffca = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffca)
  store %struct.Memory* %call_46ffca, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 46ffd2	 Bytes: 6
  %loadMem_46ffd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffd2 = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffd2)
  store %struct.Memory* %call_46ffd2, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 46ffd8	 Bytes: 3
  %loadMem_46ffd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffd8 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffd8)
  store %struct.Memory* %call_46ffd8, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %esi	 RIP: 46ffdb	 Bytes: 3
  %loadMem_46ffdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffdb = call %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffdb)
  store %struct.Memory* %call_46ffdb, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %esi	 RIP: 46ffde	 Bytes: 3
  %loadMem_46ffde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffde = call %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffde)
  store %struct.Memory* %call_46ffde, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 46ffe1	 Bytes: 3
  %loadMem_46ffe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffe1 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffe1)
  store %struct.Memory* %call_46ffe1, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46ffe4	 Bytes: 4
  %loadMem_46ffe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffe4 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffe4)
  store %struct.Memory* %call_46ffe4, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rdx	 RIP: 46ffe8	 Bytes: 5
  %loadMem_46ffe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffe8 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffe8)
  store %struct.Memory* %call_46ffe8, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46ffed	 Bytes: 4
  %loadMem_46ffed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46ffed = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46ffed)
  store %struct.Memory* %call_46ffed, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 46fff1	 Bytes: 4
  %loadMem_46fff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fff1 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fff1)
  store %struct.Memory* %call_46fff1, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 46fff5	 Bytes: 4
  %loadMem_46fff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fff5 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fff5)
  store %struct.Memory* %call_46fff5, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 46fff9	 Bytes: 2
  %loadMem_46fff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fff9 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fff9)
  store %struct.Memory* %call_46fff9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47005a	 RIP: 46fffb	 Bytes: 5
  %loadMem_46fffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_46fffb = call %struct.Memory* @routine_jmpq_.L_47005a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_46fffb, i64 95, i64 5)
  store %struct.Memory* %call_46fffb, %struct.Memory** %MEMORY

  br label %block_.L_47005a

  ; Code: .L_470000:	 RIP: 470000	 Bytes: 0
block_.L_470000:

  ; Code: movl -0x60(%rbp), %eax	 RIP: 470000	 Bytes: 3
  %loadMem_470000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470000 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470000)
  store %struct.Memory* %call_470000, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rcx	 RIP: 470003	 Bytes: 8
  %loadMem_470003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470003 = call %struct.Memory* @routine_movq_0x6cd3b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470003)
  store %struct.Memory* %call_470003, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 47000b	 Bytes: 8
  %loadMem_47000b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47000b = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47000b)
  store %struct.Memory* %call_47000b, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %esi	 RIP: 470013	 Bytes: 6
  %loadMem_470013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470013 = call %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470013)
  store %struct.Memory* %call_470013, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 470019	 Bytes: 3
  %loadMem_470019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470019 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470019)
  store %struct.Memory* %call_470019, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %esi	 RIP: 47001c	 Bytes: 3
  %loadMem_47001c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47001c = call %struct.Memory* @routine_addl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47001c)
  store %struct.Memory* %call_47001c, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %esi	 RIP: 47001f	 Bytes: 3
  %loadMem_47001f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47001f = call %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47001f)
  store %struct.Memory* %call_47001f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 470022	 Bytes: 3
  %loadMem_470022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470022 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470022)
  store %struct.Memory* %call_470022, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470025	 Bytes: 4
  %loadMem_470025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470025 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470025)
  store %struct.Memory* %call_470025, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 470029	 Bytes: 8
  %loadMem_470029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470029 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470029)
  store %struct.Memory* %call_470029, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 470031	 Bytes: 6
  %loadMem_470031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470031 = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470031)
  store %struct.Memory* %call_470031, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 470037	 Bytes: 3
  %loadMem_470037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470037 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470037)
  store %struct.Memory* %call_470037, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %esi	 RIP: 47003a	 Bytes: 3
  %loadMem_47003a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47003a = call %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47003a)
  store %struct.Memory* %call_47003a, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %esi	 RIP: 47003d	 Bytes: 3
  %loadMem_47003d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47003d = call %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47003d)
  store %struct.Memory* %call_47003d, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 470040	 Bytes: 3
  %loadMem_470040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470040 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470040)
  store %struct.Memory* %call_470040, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470043	 Bytes: 4
  %loadMem_470043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470043 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470043)
  store %struct.Memory* %call_470043, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rdx	 RIP: 470047	 Bytes: 5
  %loadMem_470047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470047 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470047)
  store %struct.Memory* %call_470047, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47004c	 Bytes: 4
  %loadMem_47004c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47004c = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47004c)
  store %struct.Memory* %call_47004c, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 470050	 Bytes: 4
  %loadMem_470050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470050 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470050)
  store %struct.Memory* %call_470050, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470054	 Bytes: 4
  %loadMem_470054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470054 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470054)
  store %struct.Memory* %call_470054, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 470058	 Bytes: 2
  %loadMem_470058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470058 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470058)
  store %struct.Memory* %call_470058, %struct.Memory** %MEMORY

  ; Code: .L_47005a:	 RIP: 47005a	 Bytes: 0
  br label %block_.L_47005a
block_.L_47005a:

  ; Code: jmpq .L_47005f	 RIP: 47005a	 Bytes: 5
  %loadMem_47005a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47005a = call %struct.Memory* @routine_jmpq_.L_47005f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47005a, i64 5, i64 5)
  store %struct.Memory* %call_47005a, %struct.Memory** %MEMORY

  br label %block_.L_47005f

  ; Code: .L_47005f:	 RIP: 47005f	 Bytes: 0
block_.L_47005f:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 47005f	 Bytes: 3
  %loadMem_47005f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47005f = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47005f)
  store %struct.Memory* %call_47005f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 470062	 Bytes: 3
  %loadMem_470062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470062 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470062)
  store %struct.Memory* %call_470062, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 470065	 Bytes: 3
  %loadMem_470065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470065 = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470065)
  store %struct.Memory* %call_470065, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46ff86	 RIP: 470068	 Bytes: 5
  %loadMem_470068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470068 = call %struct.Memory* @routine_jmpq_.L_46ff86(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470068, i64 -226, i64 5)
  store %struct.Memory* %call_470068, %struct.Memory** %MEMORY

  br label %block_.L_46ff86

  ; Code: .L_47006d:	 RIP: 47006d	 Bytes: 0
block_.L_47006d:

  ; Code: jmpq .L_470072	 RIP: 47006d	 Bytes: 5
  %loadMem_47006d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47006d = call %struct.Memory* @routine_jmpq_.L_470072(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47006d, i64 5, i64 5)
  store %struct.Memory* %call_47006d, %struct.Memory** %MEMORY

  br label %block_.L_470072

  ; Code: .L_470072:	 RIP: 470072	 Bytes: 0
block_.L_470072:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 470072	 Bytes: 3
  %loadMem_470072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470072 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470072)
  store %struct.Memory* %call_470072, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 470075	 Bytes: 3
  %loadMem_470075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470075 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470075)
  store %struct.Memory* %call_470075, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 470078	 Bytes: 3
  %loadMem_470078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470078 = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470078)
  store %struct.Memory* %call_470078, %struct.Memory** %MEMORY

  ; Code: jmpq .L_46ff6e	 RIP: 47007b	 Bytes: 5
  %loadMem_47007b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47007b = call %struct.Memory* @routine_jmpq_.L_46ff6e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47007b, i64 -269, i64 5)
  store %struct.Memory* %call_47007b, %struct.Memory** %MEMORY

  br label %block_.L_46ff6e

  ; Code: .L_470080:	 RIP: 470080	 Bytes: 0
block_.L_470080:

  ; Code: jmpq .L_470117	 RIP: 470080	 Bytes: 5
  %loadMem_470080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470080 = call %struct.Memory* @routine_jmpq_.L_470117(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470080, i64 151, i64 5)
  store %struct.Memory* %call_470080, %struct.Memory** %MEMORY

  br label %block_.L_470117

  ; Code: .L_470085:	 RIP: 470085	 Bytes: 0
block_.L_470085:

  ; Code: movq $0x6cbc30, %rdi	 RIP: 470085	 Bytes: 10
  %loadMem_470085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470085 = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470085)
  store %struct.Memory* %call_470085, %struct.Memory** %MEMORY

  ; Code: leaq -0x4e(%rbp), %rax	 RIP: 47008f	 Bytes: 4
  %loadMem_47008f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47008f = call %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47008f)
  store %struct.Memory* %call_47008f, %struct.Memory** %MEMORY

  ; Code: leaq -0x50(%rbp), %rcx	 RIP: 470093	 Bytes: 4
  %loadMem_470093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470093 = call %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470093)
  store %struct.Memory* %call_470093, %struct.Memory** %MEMORY

  ; Code: movw -0x2a(%rbp), %dx	 RIP: 470097	 Bytes: 4
  %loadMem_470097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470097 = call %struct.Memory* @routine_movw_MINUS0x2a__rbp____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470097)
  store %struct.Memory* %call_470097, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %esi	 RIP: 47009b	 Bytes: 3
  %loadMem_47009b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47009b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47009b)
  store %struct.Memory* %call_47009b, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r8d	 RIP: 47009e	 Bytes: 4
  %loadMem_47009e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47009e = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47009e)
  store %struct.Memory* %call_47009e, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %r9d	 RIP: 4700a2	 Bytes: 4
  %loadMem_4700a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700a2 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700a2)
  store %struct.Memory* %call_4700a2, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %r10d	 RIP: 4700a6	 Bytes: 4
  %loadMem_4700a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700a6 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700a6)
  store %struct.Memory* %call_4700a6, %struct.Memory** %MEMORY

  ; Code: movw -0x4a(%rbp), %r11w	 RIP: 4700aa	 Bytes: 5
  %loadMem_4700aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700aa = call %struct.Memory* @routine_movw_MINUS0x4a__rbp____r11w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700aa)
  store %struct.Memory* %call_4700aa, %struct.Memory** %MEMORY

  ; Code: movw -0x4c(%rbp), %bx	 RIP: 4700af	 Bytes: 4
  %loadMem_4700af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700af = call %struct.Memory* @routine_movw_MINUS0x4c__rbp____bx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700af)
  store %struct.Memory* %call_4700af, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %r14d	 RIP: 4700b3	 Bytes: 4
  %loadMem_4700b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700b3 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700b3)
  store %struct.Memory* %call_4700b3, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r15d	 RIP: 4700b7	 Bytes: 4
  %loadMem_4700b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700b7 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r15d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700b7)
  store %struct.Memory* %call_4700b7, %struct.Memory** %MEMORY

  ; Code: movsd -0x48(%rbp), %xmm0	 RIP: 4700bb	 Bytes: 5
  %loadMem_4700bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700bb = call %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700bb)
  store %struct.Memory* %call_4700bb, %struct.Memory** %MEMORY

  ; Code: movswl %dx, %r12d	 RIP: 4700c0	 Bytes: 4
  %loadMem_4700c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700c0 = call %struct.Memory* @routine_movswl__dx___r12d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700c0)
  store %struct.Memory* %call_4700c0, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x184(%rbp)	 RIP: 4700c4	 Bytes: 6
  %loadMem_4700c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700c4 = call %struct.Memory* @routine_movl__esi__MINUS0x184__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700c4)
  store %struct.Memory* %call_4700c4, %struct.Memory** %MEMORY

  ; Code: movl %r12d, %esi	 RIP: 4700ca	 Bytes: 3
  %loadMem_4700ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700ca = call %struct.Memory* @routine_movl__r12d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700ca)
  store %struct.Memory* %call_4700ca, %struct.Memory** %MEMORY

  ; Code: movl -0x184(%rbp), %edx	 RIP: 4700cd	 Bytes: 6
  %loadMem_4700cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700cd = call %struct.Memory* @routine_movl_MINUS0x184__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700cd)
  store %struct.Memory* %call_4700cd, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x190(%rbp)	 RIP: 4700d3	 Bytes: 7
  %loadMem_4700d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700d3 = call %struct.Memory* @routine_movq__rcx__MINUS0x190__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700d3)
  store %struct.Memory* %call_4700d3, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 4700da	 Bytes: 3
  %loadMem_4700da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700da = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700da)
  store %struct.Memory* %call_4700da, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %r8d	 RIP: 4700dd	 Bytes: 3
  %loadMem_4700dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700dd = call %struct.Memory* @routine_movl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700dd)
  store %struct.Memory* %call_4700dd, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %r9d	 RIP: 4700e0	 Bytes: 3
  %loadMem_4700e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700e0 = call %struct.Memory* @routine_movl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700e0)
  store %struct.Memory* %call_4700e0, %struct.Memory** %MEMORY

  ; Code: movswl %r11w, %r10d	 RIP: 4700e3	 Bytes: 4
  %loadMem_4700e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700e3 = call %struct.Memory* @routine_movswl__r11w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700e3)
  store %struct.Memory* %call_4700e3, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 4700e7	 Bytes: 4
  %loadMem_4700e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700e7 = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700e7)
  store %struct.Memory* %call_4700e7, %struct.Memory** %MEMORY

  ; Code: movswl %bx, %r10d	 RIP: 4700eb	 Bytes: 4
  %loadMem_4700eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700eb = call %struct.Memory* @routine_movswl__bx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700eb)
  store %struct.Memory* %call_4700eb, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 4700ef	 Bytes: 5
  %loadMem_4700ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700ef = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700ef)
  store %struct.Memory* %call_4700ef, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rsp)	 RIP: 4700f4	 Bytes: 5
  %loadMem_4700f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700f4 = call %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700f4)
  store %struct.Memory* %call_4700f4, %struct.Memory** %MEMORY

  ; Code: movq -0x190(%rbp), %rax	 RIP: 4700f9	 Bytes: 7
  %loadMem_4700f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4700f9 = call %struct.Memory* @routine_movq_MINUS0x190__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4700f9)
  store %struct.Memory* %call_4700f9, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x18(%rsp)	 RIP: 470100	 Bytes: 5
  %loadMem_470100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470100 = call %struct.Memory* @routine_movq__rax__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470100)
  store %struct.Memory* %call_470100, %struct.Memory** %MEMORY

  ; Code: movl %r14d, 0x20(%rsp)	 RIP: 470105	 Bytes: 5
  %loadMem_470105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470105 = call %struct.Memory* @routine_movl__r14d__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470105)
  store %struct.Memory* %call_470105, %struct.Memory** %MEMORY

  ; Code: movl %r15d, 0x28(%rsp)	 RIP: 47010a	 Bytes: 5
  %loadMem_47010a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47010a = call %struct.Memory* @routine_movl__r15d__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47010a)
  store %struct.Memory* %call_47010a, %struct.Memory** %MEMORY

  ; Code: callq .FastFullPelBlockMotionSearch	 RIP: 47010f	 Bytes: 5
  %loadMem1_47010f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47010f = call %struct.Memory* @routine_callq_.FastFullPelBlockMotionSearch(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47010f, i64 -70367, i64 5, i64 5)
  store %struct.Memory* %call1_47010f, %struct.Memory** %MEMORY

  %loadMem2_47010f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47010f = load i64, i64* %3
  %call2_47010f = call %struct.Memory* @sub_45ee30.FastFullPelBlockMotionSearch(%struct.State* %0, i64  %loadPC_47010f, %struct.Memory* %loadMem2_47010f)
  store %struct.Memory* %call2_47010f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 470114	 Bytes: 3
  %loadMem_470114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470114 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470114)
  store %struct.Memory* %call_470114, %struct.Memory** %MEMORY

  ; Code: .L_470117:	 RIP: 470117	 Bytes: 0
  br label %block_.L_470117
block_.L_470117:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 470117	 Bytes: 8
  %loadMem_470117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470117 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470117)
  store %struct.Memory* %call_470117, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 47011f	 Bytes: 4
  %loadMem_47011f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47011f = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47011f)
  store %struct.Memory* %call_47011f, %struct.Memory** %MEMORY

  ; Code: je .L_470141	 RIP: 470123	 Bytes: 6
  %loadMem_470123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470123 = call %struct.Memory* @routine_je_.L_470141(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470123, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_470123, %struct.Memory** %MEMORY

  %loadBr_470123 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470123 = icmp eq i8 %loadBr_470123, 1
  br i1 %cmpBr_470123, label %block_.L_470141, label %block_470129

block_470129:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 470129	 Bytes: 8
  %loadMem_470129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470129 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470129)
  store %struct.Memory* %call_470129, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x1c(%rax)	 RIP: 470131	 Bytes: 4
  %loadMem_470131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470131 = call %struct.Memory* @routine_cmpl__0x0__0x1c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470131)
  store %struct.Memory* %call_470131, %struct.Memory** %MEMORY

  ; Code: jne .L_470141	 RIP: 470135	 Bytes: 6
  %loadMem_470135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470135 = call %struct.Memory* @routine_jne_.L_470141(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470135, i8* %BRANCH_TAKEN, i64 12, i64 6, i64 6)
  store %struct.Memory* %call_470135, %struct.Memory** %MEMORY

  %loadBr_470135 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470135 = icmp eq i8 %loadBr_470135, 1
  br i1 %cmpBr_470135, label %block_.L_470141, label %block_47013b

block_47013b:
  ; Code: movl -0x5c(%rbp), %eax	 RIP: 47013b	 Bytes: 3
  %loadMem_47013b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47013b = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47013b)
  store %struct.Memory* %call_47013b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 47013e	 Bytes: 3
  %loadMem_47013e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47013e = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47013e)
  store %struct.Memory* %call_47013e, %struct.Memory** %MEMORY

  ; Code: .L_470141:	 RIP: 470141	 Bytes: 0
  br label %block_.L_470141
block_.L_470141:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 470141	 Bytes: 8
  %loadMem_470141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470141 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470141)
  store %struct.Memory* %call_470141, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xcdc(%rax)	 RIP: 470149	 Bytes: 7
  %loadMem_470149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470149 = call %struct.Memory* @routine_cmpl__0x0__0xcdc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470149)
  store %struct.Memory* %call_470149, %struct.Memory** %MEMORY

  ; Code: je .L_470484	 RIP: 470150	 Bytes: 6
  %loadMem_470150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470150 = call %struct.Memory* @routine_je_.L_470484(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470150, i8* %BRANCH_TAKEN, i64 820, i64 6, i64 6)
  store %struct.Memory* %call_470150, %struct.Memory** %MEMORY

  %loadBr_470150 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470150 = icmp eq i8 %loadBr_470150, 1
  br i1 %cmpBr_470150, label %block_.L_470484, label %block_470156

block_470156:
  ; Code: cmpl $0x3, -0x3c(%rbp)	 RIP: 470156	 Bytes: 4
  %loadMem_470156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470156 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470156)
  store %struct.Memory* %call_470156, %struct.Memory** %MEMORY

  ; Code: jle .L_470212	 RIP: 47015a	 Bytes: 6
  %loadMem_47015a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47015a = call %struct.Memory* @routine_jle_.L_470212(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47015a, i8* %BRANCH_TAKEN, i64 184, i64 6, i64 6)
  store %struct.Memory* %call_47015a, %struct.Memory** %MEMORY

  %loadBr_47015a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47015a = icmp eq i8 %loadBr_47015a, 1
  br i1 %cmpBr_47015a, label %block_.L_470212, label %block_470160

block_470160:
  ; Code: movq $0x6cbc30, %rdi	 RIP: 470160	 Bytes: 10
  %loadMem_470160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470160 = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470160)
  store %struct.Memory* %call_470160, %struct.Memory** %MEMORY

  ; Code: leaq -0x4e(%rbp), %rax	 RIP: 47016a	 Bytes: 4
  %loadMem_47016a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47016a = call %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47016a)
  store %struct.Memory* %call_47016a, %struct.Memory** %MEMORY

  ; Code: leaq -0x50(%rbp), %rcx	 RIP: 47016e	 Bytes: 4
  %loadMem_47016e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47016e = call %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47016e)
  store %struct.Memory* %call_47016e, %struct.Memory** %MEMORY

  ; Code: movl $0x9, %edx	 RIP: 470172	 Bytes: 5
  %loadMem_470172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470172 = call %struct.Memory* @routine_movl__0x9___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470172)
  store %struct.Memory* %call_470172, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 470177	 Bytes: 2
  %loadMem_470177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470177 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470177)
  store %struct.Memory* %call_470177, %struct.Memory** %MEMORY

  ; Code: movw -0x2a(%rbp), %r8w	 RIP: 470179	 Bytes: 5
  %loadMem_470179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470179 = call %struct.Memory* @routine_movw_MINUS0x2a__rbp____r8w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470179)
  store %struct.Memory* %call_470179, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %r9d	 RIP: 47017e	 Bytes: 4
  %loadMem_47017e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47017e = call %struct.Memory* @routine_movl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47017e)
  store %struct.Memory* %call_47017e, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r10d	 RIP: 470182	 Bytes: 4
  %loadMem_470182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470182 = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470182)
  store %struct.Memory* %call_470182, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %r11d	 RIP: 470186	 Bytes: 4
  %loadMem_470186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470186 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470186)
  store %struct.Memory* %call_470186, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %ebx	 RIP: 47018a	 Bytes: 3
  %loadMem_47018a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47018a = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47018a)
  store %struct.Memory* %call_47018a, %struct.Memory** %MEMORY

  ; Code: movw -0x4a(%rbp), %r14w	 RIP: 47018d	 Bytes: 5
  %loadMem_47018d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47018d = call %struct.Memory* @routine_movw_MINUS0x4a__rbp____r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47018d)
  store %struct.Memory* %call_47018d, %struct.Memory** %MEMORY

  ; Code: movw -0x4c(%rbp), %r15w	 RIP: 470192	 Bytes: 5
  %loadMem_470192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470192 = call %struct.Memory* @routine_movw_MINUS0x4c__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470192)
  store %struct.Memory* %call_470192, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r12d	 RIP: 470197	 Bytes: 4
  %loadMem_470197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470197 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r12d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470197)
  store %struct.Memory* %call_470197, %struct.Memory** %MEMORY

  ; Code: movsd -0x48(%rbp), %xmm0	 RIP: 47019b	 Bytes: 5
  %loadMem_47019b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47019b = call %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47019b)
  store %struct.Memory* %call_47019b, %struct.Memory** %MEMORY

  ; Code: movswl %r8w, %r13d	 RIP: 4701a0	 Bytes: 4
  %loadMem_4701a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701a0 = call %struct.Memory* @routine_movswl__r8w___r13d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701a0)
  store %struct.Memory* %call_4701a0, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x194(%rbp)	 RIP: 4701a4	 Bytes: 6
  %loadMem_4701a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701a4 = call %struct.Memory* @routine_movl__esi__MINUS0x194__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701a4)
  store %struct.Memory* %call_4701a4, %struct.Memory** %MEMORY

  ; Code: movl %r13d, %esi	 RIP: 4701aa	 Bytes: 3
  %loadMem_4701aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701aa = call %struct.Memory* @routine_movl__r13d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701aa)
  store %struct.Memory* %call_4701aa, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x198(%rbp)	 RIP: 4701ad	 Bytes: 6
  %loadMem_4701ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701ad = call %struct.Memory* @routine_movl__edx__MINUS0x198__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701ad)
  store %struct.Memory* %call_4701ad, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %edx	 RIP: 4701b3	 Bytes: 3
  %loadMem_4701b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701b3 = call %struct.Memory* @routine_movl__r9d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701b3)
  store %struct.Memory* %call_4701b3, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x1a0(%rbp)	 RIP: 4701b6	 Bytes: 7
  %loadMem_4701b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701b6 = call %struct.Memory* @routine_movq__rcx__MINUS0x1a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701b6)
  store %struct.Memory* %call_4701b6, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %ecx	 RIP: 4701bd	 Bytes: 3
  %loadMem_4701bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701bd = call %struct.Memory* @routine_movl__r10d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701bd)
  store %struct.Memory* %call_4701bd, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r8d	 RIP: 4701c0	 Bytes: 3
  %loadMem_4701c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701c0 = call %struct.Memory* @routine_movl__r11d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701c0)
  store %struct.Memory* %call_4701c0, %struct.Memory** %MEMORY

  ; Code: movl %ebx, %r9d	 RIP: 4701c3	 Bytes: 3
  %loadMem_4701c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701c3 = call %struct.Memory* @routine_movl__ebx___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701c3)
  store %struct.Memory* %call_4701c3, %struct.Memory** %MEMORY

  ; Code: movswl %r14w, %r10d	 RIP: 4701c6	 Bytes: 4
  %loadMem_4701c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701c6 = call %struct.Memory* @routine_movswl__r14w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701c6)
  store %struct.Memory* %call_4701c6, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 4701ca	 Bytes: 4
  %loadMem_4701ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701ca = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701ca)
  store %struct.Memory* %call_4701ca, %struct.Memory** %MEMORY

  ; Code: movswl %r15w, %r10d	 RIP: 4701ce	 Bytes: 4
  %loadMem_4701ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701ce = call %struct.Memory* @routine_movswl__r15w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701ce)
  store %struct.Memory* %call_4701ce, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 4701d2	 Bytes: 5
  %loadMem_4701d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701d2 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701d2)
  store %struct.Memory* %call_4701d2, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rsp)	 RIP: 4701d7	 Bytes: 5
  %loadMem_4701d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701d7 = call %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701d7)
  store %struct.Memory* %call_4701d7, %struct.Memory** %MEMORY

  ; Code: movq -0x1a0(%rbp), %rax	 RIP: 4701dc	 Bytes: 7
  %loadMem_4701dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701dc = call %struct.Memory* @routine_movq_MINUS0x1a0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701dc)
  store %struct.Memory* %call_4701dc, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x18(%rsp)	 RIP: 4701e3	 Bytes: 5
  %loadMem_4701e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701e3 = call %struct.Memory* @routine_movq__rax__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701e3)
  store %struct.Memory* %call_4701e3, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x20(%rsp)	 RIP: 4701e8	 Bytes: 8
  %loadMem_4701e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701e8 = call %struct.Memory* @routine_movl__0x9__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701e8)
  store %struct.Memory* %call_4701e8, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x28(%rsp)	 RIP: 4701f0	 Bytes: 8
  %loadMem_4701f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701f0 = call %struct.Memory* @routine_movl__0x9__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701f0)
  store %struct.Memory* %call_4701f0, %struct.Memory** %MEMORY

  ; Code: movl %r12d, 0x30(%rsp)	 RIP: 4701f8	 Bytes: 5
  %loadMem_4701f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701f8 = call %struct.Memory* @routine_movl__r12d__0x30__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701f8)
  store %struct.Memory* %call_4701f8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x38(%rsp)	 RIP: 4701fd	 Bytes: 8
  %loadMem_4701fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4701fd = call %struct.Memory* @routine_movl__0x0__0x38__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4701fd)
  store %struct.Memory* %call_4701fd, %struct.Memory** %MEMORY

  ; Code: callq .FastSubPelBlockMotionSearch	 RIP: 470205	 Bytes: 5
  %loadMem1_470205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_470205 = call %struct.Memory* @routine_callq_.FastSubPelBlockMotionSearch(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_470205, i64 -312917, i64 5, i64 5)
  store %struct.Memory* %call1_470205, %struct.Memory** %MEMORY

  %loadMem2_470205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_470205 = load i64, i64* %3
  %call2_470205 = call %struct.Memory* @sub_423bb0.FastSubPelBlockMotionSearch(%struct.State* %0, i64  %loadPC_470205, %struct.Memory* %loadMem2_470205)
  store %struct.Memory* %call2_470205, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 47020a	 Bytes: 3
  %loadMem_47020a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47020a = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47020a)
  store %struct.Memory* %call_47020a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4702aa	 RIP: 47020d	 Bytes: 5
  %loadMem_47020d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47020d = call %struct.Memory* @routine_jmpq_.L_4702aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47020d, i64 157, i64 5)
  store %struct.Memory* %call_47020d, %struct.Memory** %MEMORY

  br label %block_.L_4702aa

  ; Code: .L_470212:	 RIP: 470212	 Bytes: 0
block_.L_470212:

  ; Code: movq $0x6cbc30, %rdi	 RIP: 470212	 Bytes: 10
  %loadMem_470212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470212 = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470212)
  store %struct.Memory* %call_470212, %struct.Memory** %MEMORY

  ; Code: leaq -0x4e(%rbp), %rax	 RIP: 47021c	 Bytes: 4
  %loadMem_47021c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47021c = call %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47021c)
  store %struct.Memory* %call_47021c, %struct.Memory** %MEMORY

  ; Code: leaq -0x50(%rbp), %rcx	 RIP: 470220	 Bytes: 4
  %loadMem_470220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470220 = call %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470220)
  store %struct.Memory* %call_470220, %struct.Memory** %MEMORY

  ; Code: movl $0x9, %edx	 RIP: 470224	 Bytes: 5
  %loadMem_470224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470224 = call %struct.Memory* @routine_movl__0x9___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470224)
  store %struct.Memory* %call_470224, %struct.Memory** %MEMORY

  ; Code: movw -0x2a(%rbp), %si	 RIP: 470229	 Bytes: 4
  %loadMem_470229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470229 = call %struct.Memory* @routine_movw_MINUS0x2a__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470229)
  store %struct.Memory* %call_470229, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %r8d	 RIP: 47022d	 Bytes: 4
  %loadMem_47022d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47022d = call %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47022d)
  store %struct.Memory* %call_47022d, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r9d	 RIP: 470231	 Bytes: 4
  %loadMem_470231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470231 = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470231)
  store %struct.Memory* %call_470231, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %r10d	 RIP: 470235	 Bytes: 4
  %loadMem_470235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470235 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470235)
  store %struct.Memory* %call_470235, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %r11d	 RIP: 470239	 Bytes: 4
  %loadMem_470239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470239 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470239)
  store %struct.Memory* %call_470239, %struct.Memory** %MEMORY

  ; Code: movw -0x4a(%rbp), %bx	 RIP: 47023d	 Bytes: 4
  %loadMem_47023d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47023d = call %struct.Memory* @routine_movw_MINUS0x4a__rbp____bx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47023d)
  store %struct.Memory* %call_47023d, %struct.Memory** %MEMORY

  ; Code: movw -0x4c(%rbp), %r14w	 RIP: 470241	 Bytes: 5
  %loadMem_470241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470241 = call %struct.Memory* @routine_movw_MINUS0x4c__rbp____r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470241)
  store %struct.Memory* %call_470241, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r15d	 RIP: 470246	 Bytes: 4
  %loadMem_470246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470246 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r15d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470246)
  store %struct.Memory* %call_470246, %struct.Memory** %MEMORY

  ; Code: movsd -0x48(%rbp), %xmm0	 RIP: 47024a	 Bytes: 5
  %loadMem_47024a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47024a = call %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47024a)
  store %struct.Memory* %call_47024a, %struct.Memory** %MEMORY

  ; Code: movswl %si, %esi	 RIP: 47024f	 Bytes: 3
  %loadMem_47024f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47024f = call %struct.Memory* @routine_movswl__si___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47024f)
  store %struct.Memory* %call_47024f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1a4(%rbp)	 RIP: 470252	 Bytes: 6
  %loadMem_470252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470252 = call %struct.Memory* @routine_movl__edx__MINUS0x1a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470252)
  store %struct.Memory* %call_470252, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edx	 RIP: 470258	 Bytes: 3
  %loadMem_470258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470258 = call %struct.Memory* @routine_movl__r8d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470258)
  store %struct.Memory* %call_470258, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x1b0(%rbp)	 RIP: 47025b	 Bytes: 7
  %loadMem_47025b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47025b = call %struct.Memory* @routine_movq__rcx__MINUS0x1b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47025b)
  store %struct.Memory* %call_47025b, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %ecx	 RIP: 470262	 Bytes: 3
  %loadMem_470262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470262 = call %struct.Memory* @routine_movl__r9d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470262)
  store %struct.Memory* %call_470262, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %r8d	 RIP: 470265	 Bytes: 3
  %loadMem_470265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470265 = call %struct.Memory* @routine_movl__r10d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470265)
  store %struct.Memory* %call_470265, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r9d	 RIP: 470268	 Bytes: 3
  %loadMem_470268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470268 = call %struct.Memory* @routine_movl__r11d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470268)
  store %struct.Memory* %call_470268, %struct.Memory** %MEMORY

  ; Code: movswl %bx, %r10d	 RIP: 47026b	 Bytes: 4
  %loadMem_47026b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47026b = call %struct.Memory* @routine_movswl__bx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47026b)
  store %struct.Memory* %call_47026b, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 47026f	 Bytes: 4
  %loadMem_47026f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47026f = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47026f)
  store %struct.Memory* %call_47026f, %struct.Memory** %MEMORY

  ; Code: movswl %r14w, %r10d	 RIP: 470273	 Bytes: 4
  %loadMem_470273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470273 = call %struct.Memory* @routine_movswl__r14w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470273)
  store %struct.Memory* %call_470273, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 470277	 Bytes: 5
  %loadMem_470277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470277 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470277)
  store %struct.Memory* %call_470277, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rsp)	 RIP: 47027c	 Bytes: 5
  %loadMem_47027c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47027c = call %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47027c)
  store %struct.Memory* %call_47027c, %struct.Memory** %MEMORY

  ; Code: movq -0x1b0(%rbp), %rax	 RIP: 470281	 Bytes: 7
  %loadMem_470281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470281 = call %struct.Memory* @routine_movq_MINUS0x1b0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470281)
  store %struct.Memory* %call_470281, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x18(%rsp)	 RIP: 470288	 Bytes: 5
  %loadMem_470288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470288 = call %struct.Memory* @routine_movq__rax__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470288)
  store %struct.Memory* %call_470288, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x20(%rsp)	 RIP: 47028d	 Bytes: 8
  %loadMem_47028d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47028d = call %struct.Memory* @routine_movl__0x9__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47028d)
  store %struct.Memory* %call_47028d, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x28(%rsp)	 RIP: 470295	 Bytes: 8
  %loadMem_470295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470295 = call %struct.Memory* @routine_movl__0x9__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470295)
  store %struct.Memory* %call_470295, %struct.Memory** %MEMORY

  ; Code: movl %r15d, 0x30(%rsp)	 RIP: 47029d	 Bytes: 5
  %loadMem_47029d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47029d = call %struct.Memory* @routine_movl__r15d__0x30__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47029d)
  store %struct.Memory* %call_47029d, %struct.Memory** %MEMORY

  ; Code: callq .SubPelBlockMotionSearch	 RIP: 4702a2	 Bytes: 5
  %loadMem1_4702a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4702a2 = call %struct.Memory* @routine_callq_.SubPelBlockMotionSearch(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4702a2, i64 -65650, i64 5, i64 5)
  store %struct.Memory* %call1_4702a2, %struct.Memory** %MEMORY

  %loadMem2_4702a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4702a2 = load i64, i64* %3
  %call2_4702a2 = call %struct.Memory* @sub_460230.SubPelBlockMotionSearch(%struct.State* %0, i64  %loadPC_4702a2, %struct.Memory* %loadMem2_4702a2)
  store %struct.Memory* %call2_4702a2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 4702a7	 Bytes: 3
  %loadMem_4702a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702a7 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702a7)
  store %struct.Memory* %call_4702a7, %struct.Memory** %MEMORY

  ; Code: .L_4702aa:	 RIP: 4702aa	 Bytes: 0
  br label %block_.L_4702aa
block_.L_4702aa:

  ; Code: movl $0x0, -0x54(%rbp)	 RIP: 4702aa	 Bytes: 7
  %loadMem_4702aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702aa = call %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702aa)
  store %struct.Memory* %call_4702aa, %struct.Memory** %MEMORY

  ; Code: .L_4702b1:	 RIP: 4702b1	 Bytes: 0
  br label %block_.L_4702b1
block_.L_4702b1:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 4702b1	 Bytes: 3
  %loadMem_4702b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702b1 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702b1)
  store %struct.Memory* %call_4702b1, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %ecx	 RIP: 4702b4	 Bytes: 3
  %loadMem_4702b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702b4 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702b4)
  store %struct.Memory* %call_4702b4, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 4702b7	 Bytes: 3
  %loadMem_4702b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702b7 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702b7)
  store %struct.Memory* %call_4702b7, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4702ba	 Bytes: 2
  %loadMem_4702ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702ba = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702ba)
  store %struct.Memory* %call_4702ba, %struct.Memory** %MEMORY

  ; Code: jge .L_47047f	 RIP: 4702bc	 Bytes: 6
  %loadMem_4702bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702bc = call %struct.Memory* @routine_jge_.L_47047f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702bc, i8* %BRANCH_TAKEN, i64 451, i64 6, i64 6)
  store %struct.Memory* %call_4702bc, %struct.Memory** %MEMORY

  %loadBr_4702bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4702bc = icmp eq i8 %loadBr_4702bc, 1
  br i1 %cmpBr_4702bc, label %block_.L_47047f, label %block_4702c2

block_4702c2:
  ; Code: movl $0x0, -0x58(%rbp)	 RIP: 4702c2	 Bytes: 7
  %loadMem_4702c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702c2 = call %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702c2)
  store %struct.Memory* %call_4702c2, %struct.Memory** %MEMORY

  ; Code: .L_4702c9:	 RIP: 4702c9	 Bytes: 0
  br label %block_.L_4702c9
block_.L_4702c9:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 4702c9	 Bytes: 3
  %loadMem_4702c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702c9 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702c9)
  store %struct.Memory* %call_4702c9, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 4702cc	 Bytes: 3
  %loadMem_4702cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702cc = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702cc)
  store %struct.Memory* %call_4702cc, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 4702cf	 Bytes: 3
  %loadMem_4702cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702cf = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702cf)
  store %struct.Memory* %call_4702cf, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4702d2	 Bytes: 2
  %loadMem_4702d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702d2 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702d2)
  store %struct.Memory* %call_4702d2, %struct.Memory** %MEMORY

  ; Code: jge .L_47046c	 RIP: 4702d4	 Bytes: 6
  %loadMem_4702d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702d4 = call %struct.Memory* @routine_jge_.L_47046c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702d4, i8* %BRANCH_TAKEN, i64 408, i64 6, i64 6)
  store %struct.Memory* %call_4702d4, %struct.Memory** %MEMORY

  %loadBr_4702d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4702d4 = icmp eq i8 %loadBr_4702d4, 1
  br i1 %cmpBr_4702d4, label %block_.L_47046c, label %block_4702da

block_4702da:
  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 4702da	 Bytes: 4
  %loadMem_4702da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702da = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702da)
  store %struct.Memory* %call_4702da, %struct.Memory** %MEMORY

  ; Code: jne .L_4703a1	 RIP: 4702de	 Bytes: 6
  %loadMem_4702de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702de = call %struct.Memory* @routine_jne_.L_4703a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702de, i8* %BRANCH_TAKEN, i64 195, i64 6, i64 6)
  store %struct.Memory* %call_4702de, %struct.Memory** %MEMORY

  %loadBr_4702de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4702de = icmp eq i8 %loadBr_4702de, 1
  br i1 %cmpBr_4702de, label %block_.L_4703a1, label %block_4702e4

block_4702e4:
  ; Code: movswl -0x4e(%rbp), %eax	 RIP: 4702e4	 Bytes: 4
  %loadMem_4702e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702e4 = call %struct.Memory* @routine_movswl_MINUS0x4e__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702e4)
  store %struct.Memory* %call_4702e4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd468, %rcx	 RIP: 4702e8	 Bytes: 8
  %loadMem_4702e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702e8 = call %struct.Memory* @routine_movq_0x6cd468___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702e8)
  store %struct.Memory* %call_4702e8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4702f0	 Bytes: 8
  %loadMem_4702f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702f0 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702f0)
  store %struct.Memory* %call_4702f0, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %esi	 RIP: 4702f8	 Bytes: 6
  %loadMem_4702f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702f8 = call %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702f8)
  store %struct.Memory* %call_4702f8, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 4702fe	 Bytes: 3
  %loadMem_4702fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4702fe = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4702fe)
  store %struct.Memory* %call_4702fe, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %esi	 RIP: 470301	 Bytes: 3
  %loadMem_470301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470301 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470301)
  store %struct.Memory* %call_470301, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %esi	 RIP: 470304	 Bytes: 3
  %loadMem_470304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470304 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470304)
  store %struct.Memory* %call_470304, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 470307	 Bytes: 3
  %loadMem_470307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470307 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470307)
  store %struct.Memory* %call_470307, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47030a	 Bytes: 4
  %loadMem_47030a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47030a = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47030a)
  store %struct.Memory* %call_47030a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 47030e	 Bytes: 8
  %loadMem_47030e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47030e = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47030e)
  store %struct.Memory* %call_47030e, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 470316	 Bytes: 6
  %loadMem_470316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470316 = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470316)
  store %struct.Memory* %call_470316, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 47031c	 Bytes: 3
  %loadMem_47031c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47031c = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47031c)
  store %struct.Memory* %call_47031c, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %esi	 RIP: 47031f	 Bytes: 3
  %loadMem_47031f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47031f = call %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47031f)
  store %struct.Memory* %call_47031f, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %esi	 RIP: 470322	 Bytes: 3
  %loadMem_470322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470322 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470322)
  store %struct.Memory* %call_470322, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 470325	 Bytes: 3
  %loadMem_470325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470325 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470325)
  store %struct.Memory* %call_470325, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470328	 Bytes: 4
  %loadMem_470328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470328 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470328)
  store %struct.Memory* %call_470328, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rdx	 RIP: 47032c	 Bytes: 5
  %loadMem_47032c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47032c = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47032c)
  store %struct.Memory* %call_47032c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470331	 Bytes: 4
  %loadMem_470331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470331 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470331)
  store %struct.Memory* %call_470331, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 470335	 Bytes: 4
  %loadMem_470335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470335 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470335)
  store %struct.Memory* %call_470335, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470339	 Bytes: 4
  %loadMem_470339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470339 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470339)
  store %struct.Memory* %call_470339, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x4(%rcx)	 RIP: 47033d	 Bytes: 3
  %loadMem_47033d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47033d = call %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47033d)
  store %struct.Memory* %call_47033d, %struct.Memory** %MEMORY

  ; Code: movswl -0x50(%rbp), %eax	 RIP: 470340	 Bytes: 4
  %loadMem_470340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470340 = call %struct.Memory* @routine_movswl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470340)
  store %struct.Memory* %call_470340, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd468, %rcx	 RIP: 470344	 Bytes: 8
  %loadMem_470344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470344 = call %struct.Memory* @routine_movq_0x6cd468___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470344)
  store %struct.Memory* %call_470344, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 47034c	 Bytes: 8
  %loadMem_47034c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47034c = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47034c)
  store %struct.Memory* %call_47034c, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %esi	 RIP: 470354	 Bytes: 6
  %loadMem_470354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470354 = call %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470354)
  store %struct.Memory* %call_470354, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 47035a	 Bytes: 3
  %loadMem_47035a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47035a = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47035a)
  store %struct.Memory* %call_47035a, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %esi	 RIP: 47035d	 Bytes: 3
  %loadMem_47035d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47035d = call %struct.Memory* @routine_addl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47035d)
  store %struct.Memory* %call_47035d, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %esi	 RIP: 470360	 Bytes: 3
  %loadMem_470360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470360 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470360)
  store %struct.Memory* %call_470360, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 470363	 Bytes: 3
  %loadMem_470363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470363 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470363)
  store %struct.Memory* %call_470363, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470366	 Bytes: 4
  %loadMem_470366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470366 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470366)
  store %struct.Memory* %call_470366, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 47036a	 Bytes: 8
  %loadMem_47036a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47036a = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47036a)
  store %struct.Memory* %call_47036a, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 470372	 Bytes: 6
  %loadMem_470372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470372 = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470372)
  store %struct.Memory* %call_470372, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 470378	 Bytes: 3
  %loadMem_470378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470378 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470378)
  store %struct.Memory* %call_470378, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %esi	 RIP: 47037b	 Bytes: 3
  %loadMem_47037b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47037b = call %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47037b)
  store %struct.Memory* %call_47037b, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %esi	 RIP: 47037e	 Bytes: 3
  %loadMem_47037e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47037e = call %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47037e)
  store %struct.Memory* %call_47037e, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 470381	 Bytes: 3
  %loadMem_470381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470381 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470381)
  store %struct.Memory* %call_470381, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470384	 Bytes: 4
  %loadMem_470384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470384 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470384)
  store %struct.Memory* %call_470384, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rdx	 RIP: 470388	 Bytes: 5
  %loadMem_470388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470388 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470388)
  store %struct.Memory* %call_470388, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47038d	 Bytes: 4
  %loadMem_47038d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47038d = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47038d)
  store %struct.Memory* %call_47038d, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 470391	 Bytes: 4
  %loadMem_470391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470391 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470391)
  store %struct.Memory* %call_470391, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470395	 Bytes: 4
  %loadMem_470395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470395 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470395)
  store %struct.Memory* %call_470395, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x8(%rcx)	 RIP: 470399	 Bytes: 3
  %loadMem_470399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470399 = call %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470399)
  store %struct.Memory* %call_470399, %struct.Memory** %MEMORY

  ; Code: jmpq .L_470459	 RIP: 47039c	 Bytes: 5
  %loadMem_47039c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47039c = call %struct.Memory* @routine_jmpq_.L_470459(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47039c, i64 189, i64 5)
  store %struct.Memory* %call_47039c, %struct.Memory** %MEMORY

  br label %block_.L_470459

  ; Code: .L_4703a1:	 RIP: 4703a1	 Bytes: 0
block_.L_4703a1:

  ; Code: movswl -0x4e(%rbp), %eax	 RIP: 4703a1	 Bytes: 4
  %loadMem_4703a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703a1 = call %struct.Memory* @routine_movswl_MINUS0x4e__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703a1)
  store %struct.Memory* %call_4703a1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rcx	 RIP: 4703a5	 Bytes: 8
  %loadMem_4703a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703a5 = call %struct.Memory* @routine_movq_0x6cd3b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703a5)
  store %struct.Memory* %call_4703a5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4703ad	 Bytes: 8
  %loadMem_4703ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703ad = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703ad)
  store %struct.Memory* %call_4703ad, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %esi	 RIP: 4703b5	 Bytes: 6
  %loadMem_4703b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703b5 = call %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703b5)
  store %struct.Memory* %call_4703b5, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 4703bb	 Bytes: 3
  %loadMem_4703bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703bb = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703bb)
  store %struct.Memory* %call_4703bb, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %esi	 RIP: 4703be	 Bytes: 3
  %loadMem_4703be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703be = call %struct.Memory* @routine_addl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703be)
  store %struct.Memory* %call_4703be, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %esi	 RIP: 4703c1	 Bytes: 3
  %loadMem_4703c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703c1 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703c1)
  store %struct.Memory* %call_4703c1, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4703c4	 Bytes: 3
  %loadMem_4703c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703c4 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703c4)
  store %struct.Memory* %call_4703c4, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4703c7	 Bytes: 4
  %loadMem_4703c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703c7 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703c7)
  store %struct.Memory* %call_4703c7, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4703cb	 Bytes: 8
  %loadMem_4703cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703cb = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703cb)
  store %struct.Memory* %call_4703cb, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 4703d3	 Bytes: 6
  %loadMem_4703d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703d3 = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703d3)
  store %struct.Memory* %call_4703d3, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 4703d9	 Bytes: 3
  %loadMem_4703d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703d9 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703d9)
  store %struct.Memory* %call_4703d9, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %esi	 RIP: 4703dc	 Bytes: 3
  %loadMem_4703dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703dc = call %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703dc)
  store %struct.Memory* %call_4703dc, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %esi	 RIP: 4703df	 Bytes: 3
  %loadMem_4703df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703df = call %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703df)
  store %struct.Memory* %call_4703df, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4703e2	 Bytes: 3
  %loadMem_4703e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703e2 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703e2)
  store %struct.Memory* %call_4703e2, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4703e5	 Bytes: 4
  %loadMem_4703e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703e5 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703e5)
  store %struct.Memory* %call_4703e5, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rdx	 RIP: 4703e9	 Bytes: 5
  %loadMem_4703e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703e9 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703e9)
  store %struct.Memory* %call_4703e9, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4703ee	 Bytes: 4
  %loadMem_4703ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703ee = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703ee)
  store %struct.Memory* %call_4703ee, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 4703f2	 Bytes: 4
  %loadMem_4703f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703f2 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703f2)
  store %struct.Memory* %call_4703f2, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4703f6	 Bytes: 4
  %loadMem_4703f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703f6 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703f6)
  store %struct.Memory* %call_4703f6, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x4(%rcx)	 RIP: 4703fa	 Bytes: 3
  %loadMem_4703fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703fa = call %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703fa)
  store %struct.Memory* %call_4703fa, %struct.Memory** %MEMORY

  ; Code: movswl -0x50(%rbp), %eax	 RIP: 4703fd	 Bytes: 4
  %loadMem_4703fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4703fd = call %struct.Memory* @routine_movswl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4703fd)
  store %struct.Memory* %call_4703fd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cd3b0, %rcx	 RIP: 470401	 Bytes: 8
  %loadMem_470401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470401 = call %struct.Memory* @routine_movq_0x6cd3b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470401)
  store %struct.Memory* %call_470401, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 470409	 Bytes: 8
  %loadMem_470409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470409 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470409)
  store %struct.Memory* %call_470409, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %esi	 RIP: 470411	 Bytes: 6
  %loadMem_470411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470411 = call %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470411)
  store %struct.Memory* %call_470411, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 470417	 Bytes: 3
  %loadMem_470417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470417 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470417)
  store %struct.Memory* %call_470417, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %esi	 RIP: 47041a	 Bytes: 3
  %loadMem_47041a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47041a = call %struct.Memory* @routine_addl_MINUS0x64__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47041a)
  store %struct.Memory* %call_47041a, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %esi	 RIP: 47041d	 Bytes: 3
  %loadMem_47041d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47041d = call %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47041d)
  store %struct.Memory* %call_47041d, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 470420	 Bytes: 3
  %loadMem_470420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470420 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470420)
  store %struct.Memory* %call_470420, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470423	 Bytes: 4
  %loadMem_470423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470423 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470423)
  store %struct.Memory* %call_470423, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 470427	 Bytes: 8
  %loadMem_470427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470427 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470427)
  store %struct.Memory* %call_470427, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 47042f	 Bytes: 6
  %loadMem_47042f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47042f = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47042f)
  store %struct.Memory* %call_47042f, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %esi	 RIP: 470435	 Bytes: 3
  %loadMem_470435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470435 = call %struct.Memory* @routine_sarl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470435)
  store %struct.Memory* %call_470435, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %esi	 RIP: 470438	 Bytes: 3
  %loadMem_470438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470438 = call %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470438)
  store %struct.Memory* %call_470438, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %esi	 RIP: 47043b	 Bytes: 3
  %loadMem_47043b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47043b = call %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47043b)
  store %struct.Memory* %call_47043b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 47043e	 Bytes: 3
  %loadMem_47043e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47043e = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47043e)
  store %struct.Memory* %call_47043e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470441	 Bytes: 4
  %loadMem_470441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470441 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470441)
  store %struct.Memory* %call_470441, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rdx	 RIP: 470445	 Bytes: 5
  %loadMem_470445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470445 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470445)
  store %struct.Memory* %call_470445, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 47044a	 Bytes: 4
  %loadMem_47044a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47044a = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47044a)
  store %struct.Memory* %call_47044a, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rdx	 RIP: 47044e	 Bytes: 4
  %loadMem_47044e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47044e = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47044e)
  store %struct.Memory* %call_47044e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 470452	 Bytes: 4
  %loadMem_470452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470452 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470452)
  store %struct.Memory* %call_470452, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x8(%rcx)	 RIP: 470456	 Bytes: 3
  %loadMem_470456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470456 = call %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470456)
  store %struct.Memory* %call_470456, %struct.Memory** %MEMORY

  ; Code: .L_470459:	 RIP: 470459	 Bytes: 0
  br label %block_.L_470459
block_.L_470459:

  ; Code: jmpq .L_47045e	 RIP: 470459	 Bytes: 5
  %loadMem_470459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470459 = call %struct.Memory* @routine_jmpq_.L_47045e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470459, i64 5, i64 5)
  store %struct.Memory* %call_470459, %struct.Memory** %MEMORY

  br label %block_.L_47045e

  ; Code: .L_47045e:	 RIP: 47045e	 Bytes: 0
block_.L_47045e:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 47045e	 Bytes: 3
  %loadMem_47045e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47045e = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47045e)
  store %struct.Memory* %call_47045e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 470461	 Bytes: 3
  %loadMem_470461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470461 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470461)
  store %struct.Memory* %call_470461, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 470464	 Bytes: 3
  %loadMem_470464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470464 = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470464)
  store %struct.Memory* %call_470464, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4702c9	 RIP: 470467	 Bytes: 5
  %loadMem_470467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470467 = call %struct.Memory* @routine_jmpq_.L_4702c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470467, i64 -414, i64 5)
  store %struct.Memory* %call_470467, %struct.Memory** %MEMORY

  br label %block_.L_4702c9

  ; Code: .L_47046c:	 RIP: 47046c	 Bytes: 0
block_.L_47046c:

  ; Code: jmpq .L_470471	 RIP: 47046c	 Bytes: 5
  %loadMem_47046c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47046c = call %struct.Memory* @routine_jmpq_.L_470471(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47046c, i64 5, i64 5)
  store %struct.Memory* %call_47046c, %struct.Memory** %MEMORY

  br label %block_.L_470471

  ; Code: .L_470471:	 RIP: 470471	 Bytes: 0
block_.L_470471:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 470471	 Bytes: 3
  %loadMem_470471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470471 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470471)
  store %struct.Memory* %call_470471, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 470474	 Bytes: 3
  %loadMem_470474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470474 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470474)
  store %struct.Memory* %call_470474, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 470477	 Bytes: 3
  %loadMem_470477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470477 = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470477)
  store %struct.Memory* %call_470477, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4702b1	 RIP: 47047a	 Bytes: 5
  %loadMem_47047a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47047a = call %struct.Memory* @routine_jmpq_.L_4702b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47047a, i64 -457, i64 5)
  store %struct.Memory* %call_47047a, %struct.Memory** %MEMORY

  br label %block_.L_4702b1

  ; Code: .L_47047f:	 RIP: 47047f	 Bytes: 0
block_.L_47047f:

  ; Code: jmpq .L_470546	 RIP: 47047f	 Bytes: 5
  %loadMem_47047f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47047f = call %struct.Memory* @routine_jmpq_.L_470546(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47047f, i64 199, i64 5)
  store %struct.Memory* %call_47047f, %struct.Memory** %MEMORY

  br label %block_.L_470546

  ; Code: .L_470484:	 RIP: 470484	 Bytes: 0
block_.L_470484:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 470484	 Bytes: 8
  %loadMem_470484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470484 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470484)
  store %struct.Memory* %call_470484, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 47048c	 Bytes: 4
  %loadMem_47048c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47048c = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47048c)
  store %struct.Memory* %call_47048c, %struct.Memory** %MEMORY

  ; Code: je .L_4704ae	 RIP: 470490	 Bytes: 6
  %loadMem_470490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470490 = call %struct.Memory* @routine_je_.L_4704ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470490, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_470490, %struct.Memory** %MEMORY

  %loadBr_470490 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470490 = icmp eq i8 %loadBr_470490, 1
  br i1 %cmpBr_470490, label %block_.L_4704ae, label %block_470496

block_470496:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 470496	 Bytes: 8
  %loadMem_470496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470496 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470496)
  store %struct.Memory* %call_470496, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x1c(%rax)	 RIP: 47049e	 Bytes: 4
  %loadMem_47049e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47049e = call %struct.Memory* @routine_cmpl__0x0__0x1c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47049e)
  store %struct.Memory* %call_47049e, %struct.Memory** %MEMORY

  ; Code: jne .L_4704ae	 RIP: 4704a2	 Bytes: 6
  %loadMem_4704a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704a2 = call %struct.Memory* @routine_jne_.L_4704ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704a2, i8* %BRANCH_TAKEN, i64 12, i64 6, i64 6)
  store %struct.Memory* %call_4704a2, %struct.Memory** %MEMORY

  %loadBr_4704a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4704a2 = icmp eq i8 %loadBr_4704a2, 1
  br i1 %cmpBr_4704a2, label %block_.L_4704ae, label %block_4704a8

block_4704a8:
  ; Code: movl -0x5c(%rbp), %eax	 RIP: 4704a8	 Bytes: 3
  %loadMem_4704a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704a8 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704a8)
  store %struct.Memory* %call_4704a8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 4704ab	 Bytes: 3
  %loadMem_4704ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704ab = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704ab)
  store %struct.Memory* %call_4704ab, %struct.Memory** %MEMORY

  ; Code: .L_4704ae:	 RIP: 4704ae	 Bytes: 0
  br label %block_.L_4704ae
block_.L_4704ae:

  ; Code: movq $0x6cbc30, %rdi	 RIP: 4704ae	 Bytes: 10
  %loadMem_4704ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704ae = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704ae)
  store %struct.Memory* %call_4704ae, %struct.Memory** %MEMORY

  ; Code: leaq -0x4e(%rbp), %rax	 RIP: 4704b8	 Bytes: 4
  %loadMem_4704b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704b8 = call %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704b8)
  store %struct.Memory* %call_4704b8, %struct.Memory** %MEMORY

  ; Code: leaq -0x50(%rbp), %rcx	 RIP: 4704bc	 Bytes: 4
  %loadMem_4704bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704bc = call %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704bc)
  store %struct.Memory* %call_4704bc, %struct.Memory** %MEMORY

  ; Code: movl $0x9, %edx	 RIP: 4704c0	 Bytes: 5
  %loadMem_4704c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704c0 = call %struct.Memory* @routine_movl__0x9___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704c0)
  store %struct.Memory* %call_4704c0, %struct.Memory** %MEMORY

  ; Code: movw -0x2a(%rbp), %si	 RIP: 4704c5	 Bytes: 4
  %loadMem_4704c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704c5 = call %struct.Memory* @routine_movw_MINUS0x2a__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704c5)
  store %struct.Memory* %call_4704c5, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %r8d	 RIP: 4704c9	 Bytes: 4
  %loadMem_4704c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704c9 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704c9)
  store %struct.Memory* %call_4704c9, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r9d	 RIP: 4704cd	 Bytes: 4
  %loadMem_4704cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704cd = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704cd)
  store %struct.Memory* %call_4704cd, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %r10d	 RIP: 4704d1	 Bytes: 4
  %loadMem_4704d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704d1 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704d1)
  store %struct.Memory* %call_4704d1, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %r11d	 RIP: 4704d5	 Bytes: 4
  %loadMem_4704d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704d5 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704d5)
  store %struct.Memory* %call_4704d5, %struct.Memory** %MEMORY

  ; Code: movw -0x4a(%rbp), %bx	 RIP: 4704d9	 Bytes: 4
  %loadMem_4704d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704d9 = call %struct.Memory* @routine_movw_MINUS0x4a__rbp____bx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704d9)
  store %struct.Memory* %call_4704d9, %struct.Memory** %MEMORY

  ; Code: movw -0x4c(%rbp), %r14w	 RIP: 4704dd	 Bytes: 5
  %loadMem_4704dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704dd = call %struct.Memory* @routine_movw_MINUS0x4c__rbp____r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704dd)
  store %struct.Memory* %call_4704dd, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r15d	 RIP: 4704e2	 Bytes: 4
  %loadMem_4704e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704e2 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r15d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704e2)
  store %struct.Memory* %call_4704e2, %struct.Memory** %MEMORY

  ; Code: movsd -0x48(%rbp), %xmm0	 RIP: 4704e6	 Bytes: 5
  %loadMem_4704e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704e6 = call %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704e6)
  store %struct.Memory* %call_4704e6, %struct.Memory** %MEMORY

  ; Code: movswl %si, %esi	 RIP: 4704eb	 Bytes: 3
  %loadMem_4704eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704eb = call %struct.Memory* @routine_movswl__si___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704eb)
  store %struct.Memory* %call_4704eb, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1b4(%rbp)	 RIP: 4704ee	 Bytes: 6
  %loadMem_4704ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704ee = call %struct.Memory* @routine_movl__edx__MINUS0x1b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704ee)
  store %struct.Memory* %call_4704ee, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edx	 RIP: 4704f4	 Bytes: 3
  %loadMem_4704f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704f4 = call %struct.Memory* @routine_movl__r8d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704f4)
  store %struct.Memory* %call_4704f4, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x1c0(%rbp)	 RIP: 4704f7	 Bytes: 7
  %loadMem_4704f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704f7 = call %struct.Memory* @routine_movq__rcx__MINUS0x1c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704f7)
  store %struct.Memory* %call_4704f7, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %ecx	 RIP: 4704fe	 Bytes: 3
  %loadMem_4704fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4704fe = call %struct.Memory* @routine_movl__r9d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4704fe)
  store %struct.Memory* %call_4704fe, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %r8d	 RIP: 470501	 Bytes: 3
  %loadMem_470501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470501 = call %struct.Memory* @routine_movl__r10d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470501)
  store %struct.Memory* %call_470501, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r9d	 RIP: 470504	 Bytes: 3
  %loadMem_470504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470504 = call %struct.Memory* @routine_movl__r11d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470504)
  store %struct.Memory* %call_470504, %struct.Memory** %MEMORY

  ; Code: movswl %bx, %r10d	 RIP: 470507	 Bytes: 4
  %loadMem_470507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470507 = call %struct.Memory* @routine_movswl__bx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470507)
  store %struct.Memory* %call_470507, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 47050b	 Bytes: 4
  %loadMem_47050b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47050b = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47050b)
  store %struct.Memory* %call_47050b, %struct.Memory** %MEMORY

  ; Code: movswl %r14w, %r10d	 RIP: 47050f	 Bytes: 4
  %loadMem_47050f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47050f = call %struct.Memory* @routine_movswl__r14w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47050f)
  store %struct.Memory* %call_47050f, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 470513	 Bytes: 5
  %loadMem_470513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470513 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470513)
  store %struct.Memory* %call_470513, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rsp)	 RIP: 470518	 Bytes: 5
  %loadMem_470518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470518 = call %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470518)
  store %struct.Memory* %call_470518, %struct.Memory** %MEMORY

  ; Code: movq -0x1c0(%rbp), %rax	 RIP: 47051d	 Bytes: 7
  %loadMem_47051d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47051d = call %struct.Memory* @routine_movq_MINUS0x1c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47051d)
  store %struct.Memory* %call_47051d, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x18(%rsp)	 RIP: 470524	 Bytes: 5
  %loadMem_470524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470524 = call %struct.Memory* @routine_movq__rax__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470524)
  store %struct.Memory* %call_470524, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x20(%rsp)	 RIP: 470529	 Bytes: 8
  %loadMem_470529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470529 = call %struct.Memory* @routine_movl__0x9__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470529)
  store %struct.Memory* %call_470529, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x28(%rsp)	 RIP: 470531	 Bytes: 8
  %loadMem_470531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470531 = call %struct.Memory* @routine_movl__0x9__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470531)
  store %struct.Memory* %call_470531, %struct.Memory** %MEMORY

  ; Code: movl %r15d, 0x30(%rsp)	 RIP: 470539	 Bytes: 5
  %loadMem_470539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470539 = call %struct.Memory* @routine_movl__r15d__0x30__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470539)
  store %struct.Memory* %call_470539, %struct.Memory** %MEMORY

  ; Code: callq .SubPelBlockMotionSearch	 RIP: 47053e	 Bytes: 5
  %loadMem1_47053e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47053e = call %struct.Memory* @routine_callq_.SubPelBlockMotionSearch(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47053e, i64 -66318, i64 5, i64 5)
  store %struct.Memory* %call1_47053e, %struct.Memory** %MEMORY

  %loadMem2_47053e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47053e = load i64, i64* %3
  %call2_47053e = call %struct.Memory* @sub_460230.SubPelBlockMotionSearch(%struct.State* %0, i64  %loadPC_47053e, %struct.Memory* %loadMem2_47053e)
  store %struct.Memory* %call2_47053e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 470543	 Bytes: 3
  %loadMem_470543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470543 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470543)
  store %struct.Memory* %call_470543, %struct.Memory** %MEMORY

  ; Code: .L_470546:	 RIP: 470546	 Bytes: 0
  br label %block_.L_470546
block_.L_470546:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 470546	 Bytes: 8
  %loadMem_470546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470546 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470546)
  store %struct.Memory* %call_470546, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x9a0(%rax)	 RIP: 47054e	 Bytes: 7
  %loadMem_47054e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47054e = call %struct.Memory* @routine_cmpl__0x0__0x9a0__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47054e)
  store %struct.Memory* %call_47054e, %struct.Memory** %MEMORY

  ; Code: jne .L_47063e	 RIP: 470555	 Bytes: 6
  %loadMem_470555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470555 = call %struct.Memory* @routine_jne_.L_47063e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470555, i8* %BRANCH_TAKEN, i64 233, i64 6, i64 6)
  store %struct.Memory* %call_470555, %struct.Memory** %MEMORY

  %loadBr_470555 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470555 = icmp eq i8 %loadBr_470555, 1
  br i1 %cmpBr_470555, label %block_.L_47063e, label %block_47055b

block_47055b:
  ; Code: cmpl $0x1, -0x3c(%rbp)	 RIP: 47055b	 Bytes: 4
  %loadMem_47055b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47055b = call %struct.Memory* @routine_cmpl__0x1__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47055b)
  store %struct.Memory* %call_47055b, %struct.Memory** %MEMORY

  ; Code: jne .L_470639	 RIP: 47055f	 Bytes: 6
  %loadMem_47055f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47055f = call %struct.Memory* @routine_jne_.L_470639(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47055f, i8* %BRANCH_TAKEN, i64 218, i64 6, i64 6)
  store %struct.Memory* %call_47055f, %struct.Memory** %MEMORY

  %loadBr_47055f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47055f = icmp eq i8 %loadBr_47055f, 1
  br i1 %cmpBr_47055f, label %block_.L_470639, label %block_470565

block_470565:
  ; Code: movq 0x6cb900, %rax	 RIP: 470565	 Bytes: 8
  %loadMem_470565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470565 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470565)
  store %struct.Memory* %call_470565, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 47056d	 Bytes: 4
  %loadMem_47056d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47056d = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47056d)
  store %struct.Memory* %call_47056d, %struct.Memory** %MEMORY

  ; Code: je .L_470589	 RIP: 470571	 Bytes: 6
  %loadMem_470571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470571 = call %struct.Memory* @routine_je_.L_470589(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470571, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_470571, %struct.Memory** %MEMORY

  %loadBr_470571 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470571 = icmp eq i8 %loadBr_470571, 1
  br i1 %cmpBr_470571, label %block_.L_470589, label %block_470577

block_470577:
  ; Code: movq 0x6cb900, %rax	 RIP: 470577	 Bytes: 8
  %loadMem_470577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470577 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470577)
  store %struct.Memory* %call_470577, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, 0x18(%rax)	 RIP: 47057f	 Bytes: 4
  %loadMem_47057f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47057f = call %struct.Memory* @routine_cmpl__0x3__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47057f)
  store %struct.Memory* %call_47057f, %struct.Memory** %MEMORY

  ; Code: jne .L_470639	 RIP: 470583	 Bytes: 6
  %loadMem_470583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470583 = call %struct.Memory* @routine_jne_.L_470639(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470583, i8* %BRANCH_TAKEN, i64 182, i64 6, i64 6)
  store %struct.Memory* %call_470583, %struct.Memory** %MEMORY

  %loadBr_470583 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470583 = icmp eq i8 %loadBr_470583, 1
  br i1 %cmpBr_470583, label %block_.L_470639, label %block_.L_470589

  ; Code: .L_470589:	 RIP: 470589	 Bytes: 0
block_.L_470589:

  ; Code: callq .FindSkipModeMotionVector	 RIP: 470589	 Bytes: 5
  %loadMem1_470589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_470589 = call %struct.Memory* @routine_callq_.FindSkipModeMotionVector(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_470589, i64 3095, i64 5, i64 5)
  store %struct.Memory* %call1_470589, %struct.Memory** %MEMORY

  %loadMem2_470589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_470589 = load i64, i64* %3
  %call2_470589 = call %struct.Memory* @sub_4711a0.FindSkipModeMotionVector(%struct.State* %0, i64  %loadPC_470589, %struct.Memory* %loadMem2_470589)
  store %struct.Memory* %call2_470589, %struct.Memory** %MEMORY

  ; Code: movsd -0x48(%rbp), %xmm0	 RIP: 47058e	 Bytes: 5
  %loadMem_47058e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47058e = call %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47058e)
  store %struct.Memory* %call_47058e, %struct.Memory** %MEMORY

  ; Code: callq .GetSkipCostMB	 RIP: 470593	 Bytes: 5
  %loadMem1_470593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_470593 = call %struct.Memory* @routine_callq_.GetSkipCostMB(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_470593, i64 4429, i64 5, i64 5)
  store %struct.Memory* %call1_470593, %struct.Memory** %MEMORY

  %loadMem2_470593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_470593 = load i64, i64* %3
  %call2_470593 = call %struct.Memory* @sub_4716e0.GetSkipCostMB(%struct.State* %0, i64  %loadPC_470593, %struct.Memory* %loadMem2_470593)
  store %struct.Memory* %call2_470593, %struct.Memory** %MEMORY

  ; Code: movsd 0x41318(%rip), %xmm0	 RIP: 470598	 Bytes: 8
  %loadMem_470598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470598 = call %struct.Memory* @routine_movsd_0x41318__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470598)
  store %struct.Memory* %call_470598, %struct.Memory** %MEMORY

  ; Code: movsd 0x41318(%rip), %xmm1	 RIP: 4705a0	 Bytes: 8
  %loadMem_4705a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705a0 = call %struct.Memory* @routine_movsd_0x41318__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705a0)
  store %struct.Memory* %call_4705a0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 4705a8	 Bytes: 6
  %loadMem_4705a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705a8 = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705a8)
  store %struct.Memory* %call_4705a8, %struct.Memory** %MEMORY

  ; Code: mulsd -0x48(%rbp), %xmm1	 RIP: 4705ae	 Bytes: 5
  %loadMem_4705ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705ae = call %struct.Memory* @routine_mulsd_MINUS0x48__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705ae)
  store %struct.Memory* %call_4705ae, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 4705b3	 Bytes: 4
  %loadMem_4705b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705b3 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705b3)
  store %struct.Memory* %call_4705b3, %struct.Memory** %MEMORY

  ; Code: movaps %xmm1, %xmm0	 RIP: 4705b7	 Bytes: 3
  %loadMem_4705b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705b7 = call %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705b7)
  store %struct.Memory* %call_4705b7, %struct.Memory** %MEMORY

  ; Code: callq .floor_plt	 RIP: 4705ba	 Bytes: 5
  %loadMem1_4705ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4705ba = call %struct.Memory* @routine_callq_.floor_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4705ba, i64 -455690, i64 5, i64 5)
  store %struct.Memory* %call1_4705ba, %struct.Memory** %MEMORY

  %loadMem2_4705ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4705ba = load i64, i64* %3
  %call2_4705ba = call %struct.Memory* @ext_floor(%struct.State* %0, i64  %loadPC_4705ba, %struct.Memory* %loadMem2_4705ba)
  store %struct.Memory* %call2_4705ba, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %eax	 RIP: 4705bf	 Bytes: 4
  %loadMem_4705bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705bf = call %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705bf)
  store %struct.Memory* %call_4705bf, %struct.Memory** %MEMORY

  ; Code: movl -0xc0(%rbp), %ecx	 RIP: 4705c3	 Bytes: 6
  %loadMem_4705c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705c3 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705c3)
  store %struct.Memory* %call_4705c3, %struct.Memory** %MEMORY

  ; Code: subl %eax, %ecx	 RIP: 4705c9	 Bytes: 2
  %loadMem_4705c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705c9 = call %struct.Memory* @routine_subl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705c9)
  store %struct.Memory* %call_4705c9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc0(%rbp)	 RIP: 4705cb	 Bytes: 6
  %loadMem_4705cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705cb = call %struct.Memory* @routine_movl__ecx__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705cb)
  store %struct.Memory* %call_4705cb, %struct.Memory** %MEMORY

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 4705d1	 Bytes: 6
  %loadMem_4705d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705d1 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705d1)
  store %struct.Memory* %call_4705d1, %struct.Memory** %MEMORY

  ; Code: cmpl -0x60(%rbp), %eax	 RIP: 4705d7	 Bytes: 3
  %loadMem_4705d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705d7 = call %struct.Memory* @routine_cmpl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705d7)
  store %struct.Memory* %call_4705d7, %struct.Memory** %MEMORY

  ; Code: jge .L_470634	 RIP: 4705da	 Bytes: 6
  %loadMem_4705da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705da = call %struct.Memory* @routine_jge_.L_470634(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705da, i8* %BRANCH_TAKEN, i64 90, i64 6, i64 6)
  store %struct.Memory* %call_4705da, %struct.Memory** %MEMORY

  %loadBr_4705da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4705da = icmp eq i8 %loadBr_4705da, 1
  br i1 %cmpBr_4705da, label %block_.L_470634, label %block_4705e0

block_4705e0:
  ; Code: movl -0xc0(%rbp), %eax	 RIP: 4705e0	 Bytes: 6
  %loadMem_4705e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705e0 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705e0)
  store %struct.Memory* %call_4705e0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 4705e6	 Bytes: 3
  %loadMem_4705e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705e6 = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705e6)
  store %struct.Memory* %call_4705e6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4705e9	 Bytes: 8
  %loadMem_4705e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705e9 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705e9)
  store %struct.Memory* %call_4705e9, %struct.Memory** %MEMORY

  ; Code: movq 0x118f8(%rcx), %rcx	 RIP: 4705f1	 Bytes: 7
  %loadMem_4705f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705f1 = call %struct.Memory* @routine_movq_0x118f8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705f1)
  store %struct.Memory* %call_4705f1, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 4705f8	 Bytes: 3
  %loadMem_4705f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705f8 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705f8)
  store %struct.Memory* %call_4705f8, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 4705fb	 Bytes: 3
  %loadMem_4705fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705fb = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705fb)
  store %struct.Memory* %call_4705fb, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 4705fe	 Bytes: 3
  %loadMem_4705fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4705fe = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4705fe)
  store %struct.Memory* %call_4705fe, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 470601	 Bytes: 3
  %loadMem_470601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470601 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470601)
  store %struct.Memory* %call_470601, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 470604	 Bytes: 3
  %loadMem_470604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470604 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470604)
  store %struct.Memory* %call_470604, %struct.Memory** %MEMORY

  ; Code: movw (%rcx), %dx	 RIP: 470607	 Bytes: 3
  %loadMem_470607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470607 = call %struct.Memory* @routine_movw___rcx____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470607)
  store %struct.Memory* %call_470607, %struct.Memory** %MEMORY

  ; Code: movw %dx, -0x4e(%rbp)	 RIP: 47060a	 Bytes: 4
  %loadMem_47060a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47060a = call %struct.Memory* @routine_movw__dx__MINUS0x4e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47060a)
  store %struct.Memory* %call_47060a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47060e	 Bytes: 8
  %loadMem_47060e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47060e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47060e)
  store %struct.Memory* %call_47060e, %struct.Memory** %MEMORY

  ; Code: movq 0x118f8(%rcx), %rcx	 RIP: 470616	 Bytes: 7
  %loadMem_470616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470616 = call %struct.Memory* @routine_movq_0x118f8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470616)
  store %struct.Memory* %call_470616, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 47061d	 Bytes: 3
  %loadMem_47061d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47061d = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47061d)
  store %struct.Memory* %call_47061d, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 470620	 Bytes: 3
  %loadMem_470620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470620 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470620)
  store %struct.Memory* %call_470620, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 470623	 Bytes: 3
  %loadMem_470623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470623 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470623)
  store %struct.Memory* %call_470623, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 470626	 Bytes: 3
  %loadMem_470626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470626 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470626)
  store %struct.Memory* %call_470626, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 470629	 Bytes: 3
  %loadMem_470629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470629 = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470629)
  store %struct.Memory* %call_470629, %struct.Memory** %MEMORY

  ; Code: movw 0x2(%rcx), %dx	 RIP: 47062c	 Bytes: 4
  %loadMem_47062c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47062c = call %struct.Memory* @routine_movw_0x2__rcx____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47062c)
  store %struct.Memory* %call_47062c, %struct.Memory** %MEMORY

  ; Code: movw %dx, -0x50(%rbp)	 RIP: 470630	 Bytes: 4
  %loadMem_470630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470630 = call %struct.Memory* @routine_movw__dx__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470630)
  store %struct.Memory* %call_470630, %struct.Memory** %MEMORY

  ; Code: .L_470634:	 RIP: 470634	 Bytes: 0
  br label %block_.L_470634
block_.L_470634:

  ; Code: jmpq .L_470639	 RIP: 470634	 Bytes: 5
  %loadMem_470634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470634 = call %struct.Memory* @routine_jmpq_.L_470639(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470634, i64 5, i64 5)
  store %struct.Memory* %call_470634, %struct.Memory** %MEMORY

  br label %block_.L_470639

  ; Code: .L_470639:	 RIP: 470639	 Bytes: 0
block_.L_470639:

  ; Code: jmpq .L_47063e	 RIP: 470639	 Bytes: 5
  %loadMem_470639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470639 = call %struct.Memory* @routine_jmpq_.L_47063e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470639, i64 5, i64 5)
  store %struct.Memory* %call_470639, %struct.Memory** %MEMORY

  br label %block_.L_47063e

  ; Code: .L_47063e:	 RIP: 47063e	 Bytes: 0
block_.L_47063e:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 47063e	 Bytes: 8
  %loadMem_47063e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47063e = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47063e)
  store %struct.Memory* %call_47063e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xcdc(%rax)	 RIP: 470646	 Bytes: 7
  %loadMem_470646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470646 = call %struct.Memory* @routine_cmpl__0x0__0xcdc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470646)
  store %struct.Memory* %call_470646, %struct.Memory** %MEMORY

  ; Code: je .L_4707bd	 RIP: 47064d	 Bytes: 6
  %loadMem_47064d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47064d = call %struct.Memory* @routine_je_.L_4707bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47064d, i8* %BRANCH_TAKEN, i64 368, i64 6, i64 6)
  store %struct.Memory* %call_47064d, %struct.Memory** %MEMORY

  %loadBr_47064d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47064d = icmp eq i8 %loadBr_47064d, 1
  br i1 %cmpBr_47064d, label %block_.L_4707bd, label %block_470653

block_470653:
  ; Code: movq 0x6cb900, %rax	 RIP: 470653	 Bytes: 8
  %loadMem_470653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470653 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470653)
  store %struct.Memory* %call_470653, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rax), %ecx	 RIP: 47065b	 Bytes: 6
  %loadMem_47065b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47065b = call %struct.Memory* @routine_movl_0x98__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47065b)
  store %struct.Memory* %call_47065b, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 470661	 Bytes: 3
  %loadMem_470661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470661 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470661)
  store %struct.Memory* %call_470661, %struct.Memory** %MEMORY

  ; Code: addl -0x64(%rbp), %ecx	 RIP: 470664	 Bytes: 3
  %loadMem_470664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470664 = call %struct.Memory* @routine_addl_MINUS0x64__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470664)
  store %struct.Memory* %call_470664, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc4(%rbp)	 RIP: 470667	 Bytes: 6
  %loadMem_470667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470667 = call %struct.Memory* @routine_movl__ecx__MINUS0xc4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470667)
  store %struct.Memory* %call_470667, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47066d	 Bytes: 8
  %loadMem_47066d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47066d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47066d)
  store %struct.Memory* %call_47066d, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rax), %ecx	 RIP: 470675	 Bytes: 6
  %loadMem_470675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470675 = call %struct.Memory* @routine_movl_0x9c__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470675)
  store %struct.Memory* %call_470675, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 47067b	 Bytes: 3
  %loadMem_47067b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47067b = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47067b)
  store %struct.Memory* %call_47067b, %struct.Memory** %MEMORY

  ; Code: addl -0x68(%rbp), %ecx	 RIP: 47067e	 Bytes: 3
  %loadMem_47067e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47067e = call %struct.Memory* @routine_addl_MINUS0x68__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47067e)
  store %struct.Memory* %call_47067e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc8(%rbp)	 RIP: 470681	 Bytes: 6
  %loadMem_470681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470681 = call %struct.Memory* @routine_movl__ecx__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470681)
  store %struct.Memory* %call_470681, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x54(%rbp)	 RIP: 470687	 Bytes: 7
  %loadMem_470687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470687 = call %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470687)
  store %struct.Memory* %call_470687, %struct.Memory** %MEMORY

  ; Code: .L_47068e:	 RIP: 47068e	 Bytes: 0
  br label %block_.L_47068e
block_.L_47068e:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 47068e	 Bytes: 3
  %loadMem_47068e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47068e = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47068e)
  store %struct.Memory* %call_47068e, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %ecx	 RIP: 470691	 Bytes: 3
  %loadMem_470691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470691 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470691)
  store %struct.Memory* %call_470691, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 470694	 Bytes: 3
  %loadMem_470694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470694 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470694)
  store %struct.Memory* %call_470694, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 470697	 Bytes: 2
  %loadMem_470697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470697 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470697)
  store %struct.Memory* %call_470697, %struct.Memory** %MEMORY

  ; Code: jge .L_4707b8	 RIP: 470699	 Bytes: 6
  %loadMem_470699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470699 = call %struct.Memory* @routine_jge_.L_4707b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470699, i8* %BRANCH_TAKEN, i64 287, i64 6, i64 6)
  store %struct.Memory* %call_470699, %struct.Memory** %MEMORY

  %loadBr_470699 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470699 = icmp eq i8 %loadBr_470699, 1
  br i1 %cmpBr_470699, label %block_.L_4707b8, label %block_47069f

block_47069f:
  ; Code: movl $0x0, -0x58(%rbp)	 RIP: 47069f	 Bytes: 7
  %loadMem_47069f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47069f = call %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47069f)
  store %struct.Memory* %call_47069f, %struct.Memory** %MEMORY

  ; Code: .L_4706a6:	 RIP: 4706a6	 Bytes: 0
  br label %block_.L_4706a6
block_.L_4706a6:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 4706a6	 Bytes: 3
  %loadMem_4706a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706a6 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706a6)
  store %struct.Memory* %call_4706a6, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 4706a9	 Bytes: 3
  %loadMem_4706a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706a9 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706a9)
  store %struct.Memory* %call_4706a9, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 4706ac	 Bytes: 3
  %loadMem_4706ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706ac = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706ac)
  store %struct.Memory* %call_4706ac, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4706af	 Bytes: 2
  %loadMem_4706af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706af = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706af)
  store %struct.Memory* %call_4706af, %struct.Memory** %MEMORY

  ; Code: jge .L_4707a5	 RIP: 4706b1	 Bytes: 6
  %loadMem_4706b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706b1 = call %struct.Memory* @routine_jge_.L_4707a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706b1, i8* %BRANCH_TAKEN, i64 244, i64 6, i64 6)
  store %struct.Memory* %call_4706b1, %struct.Memory** %MEMORY

  %loadBr_4706b1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4706b1 = icmp eq i8 %loadBr_4706b1, 1
  br i1 %cmpBr_4706b1, label %block_.L_4707a5, label %block_4706b7

block_4706b7:
  ; Code: movw -0x4e(%rbp), %ax	 RIP: 4706b7	 Bytes: 4
  %loadMem_4706b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706b7 = call %struct.Memory* @routine_movw_MINUS0x4e__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706b7)
  store %struct.Memory* %call_4706b7, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 4706bb	 Bytes: 7
  %loadMem_4706bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706bb = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706bb)
  store %struct.Memory* %call_4706bb, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edx	 RIP: 4706c2	 Bytes: 3
  %loadMem_4706c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706c2 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706c2)
  store %struct.Memory* %call_4706c2, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edx	 RIP: 4706c5	 Bytes: 3
  %loadMem_4706c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706c5 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706c5)
  store %struct.Memory* %call_4706c5, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4706c8	 Bytes: 3
  %loadMem_4706c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706c8 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706c8)
  store %struct.Memory* %call_4706c8, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4706cb	 Bytes: 4
  %loadMem_4706cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706cb = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706cb)
  store %struct.Memory* %call_4706cb, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edx	 RIP: 4706cf	 Bytes: 3
  %loadMem_4706cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706cf = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706cf)
  store %struct.Memory* %call_4706cf, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edx	 RIP: 4706d2	 Bytes: 3
  %loadMem_4706d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706d2 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706d2)
  store %struct.Memory* %call_4706d2, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4706d5	 Bytes: 3
  %loadMem_4706d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706d5 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706d5)
  store %struct.Memory* %call_4706d5, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4706d8	 Bytes: 4
  %loadMem_4706d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706d8 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706d8)
  store %struct.Memory* %call_4706d8, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4706dc	 Bytes: 4
  %loadMem_4706dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706dc = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706dc)
  store %struct.Memory* %call_4706dc, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4706e0	 Bytes: 4
  %loadMem_4706e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706e0 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706e0)
  store %struct.Memory* %call_4706e0, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 4706e4	 Bytes: 5
  %loadMem_4706e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706e4 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706e4)
  store %struct.Memory* %call_4706e4, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4706e9	 Bytes: 4
  %loadMem_4706e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706e9 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706e9)
  store %struct.Memory* %call_4706e9, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 4706ed	 Bytes: 4
  %loadMem_4706ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706ed = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706ed)
  store %struct.Memory* %call_4706ed, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4706f1	 Bytes: 4
  %loadMem_4706f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706f1 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706f1)
  store %struct.Memory* %call_4706f1, %struct.Memory** %MEMORY

  ; Code: movw %ax, (%rcx)	 RIP: 4706f5	 Bytes: 3
  %loadMem_4706f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706f5 = call %struct.Memory* @routine_movw__ax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706f5)
  store %struct.Memory* %call_4706f5, %struct.Memory** %MEMORY

  ; Code: movw -0x50(%rbp), %ax	 RIP: 4706f8	 Bytes: 4
  %loadMem_4706f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706f8 = call %struct.Memory* @routine_movw_MINUS0x50__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706f8)
  store %struct.Memory* %call_4706f8, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 4706fc	 Bytes: 7
  %loadMem_4706fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4706fc = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4706fc)
  store %struct.Memory* %call_4706fc, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edx	 RIP: 470703	 Bytes: 3
  %loadMem_470703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470703 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470703)
  store %struct.Memory* %call_470703, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edx	 RIP: 470706	 Bytes: 3
  %loadMem_470706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470706 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470706)
  store %struct.Memory* %call_470706, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 470709	 Bytes: 3
  %loadMem_470709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470709 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470709)
  store %struct.Memory* %call_470709, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 47070c	 Bytes: 4
  %loadMem_47070c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47070c = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47070c)
  store %struct.Memory* %call_47070c, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edx	 RIP: 470710	 Bytes: 3
  %loadMem_470710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470710 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470710)
  store %struct.Memory* %call_470710, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edx	 RIP: 470713	 Bytes: 3
  %loadMem_470713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470713 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470713)
  store %struct.Memory* %call_470713, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 470716	 Bytes: 3
  %loadMem_470716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470716 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470716)
  store %struct.Memory* %call_470716, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470719	 Bytes: 4
  %loadMem_470719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470719 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470719)
  store %struct.Memory* %call_470719, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 47071d	 Bytes: 4
  %loadMem_47071d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47071d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47071d)
  store %struct.Memory* %call_47071d, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470721	 Bytes: 4
  %loadMem_470721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470721 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470721)
  store %struct.Memory* %call_470721, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 470725	 Bytes: 5
  %loadMem_470725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470725 = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470725)
  store %struct.Memory* %call_470725, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 47072a	 Bytes: 4
  %loadMem_47072a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47072a = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47072a)
  store %struct.Memory* %call_47072a, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 47072e	 Bytes: 4
  %loadMem_47072e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47072e = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47072e)
  store %struct.Memory* %call_47072e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470732	 Bytes: 4
  %loadMem_470732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470732 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470732)
  store %struct.Memory* %call_470732, %struct.Memory** %MEMORY

  ; Code: movw %ax, 0x2(%rcx)	 RIP: 470736	 Bytes: 4
  %loadMem_470736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470736 = call %struct.Memory* @routine_movw__ax__0x2__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470736)
  store %struct.Memory* %call_470736, %struct.Memory** %MEMORY

  ; Code: movw -0x4e(%rbp), %ax	 RIP: 47073a	 Bytes: 4
  %loadMem_47073a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47073a = call %struct.Memory* @routine_movw_MINUS0x4e__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47073a)
  store %struct.Memory* %call_47073a, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rcx	 RIP: 47073e	 Bytes: 7
  %loadMem_47073e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47073e = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47073e)
  store %struct.Memory* %call_47073e, %struct.Memory** %MEMORY

  ; Code: movl -0xc4(%rbp), %edx	 RIP: 470745	 Bytes: 6
  %loadMem_470745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470745 = call %struct.Memory* @routine_movl_MINUS0xc4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470745)
  store %struct.Memory* %call_470745, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edx	 RIP: 47074b	 Bytes: 3
  %loadMem_47074b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47074b = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47074b)
  store %struct.Memory* %call_47074b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 47074e	 Bytes: 3
  %loadMem_47074e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47074e = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47074e)
  store %struct.Memory* %call_47074e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470751	 Bytes: 4
  %loadMem_470751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470751 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470751)
  store %struct.Memory* %call_470751, %struct.Memory** %MEMORY

  ; Code: movl -0xc8(%rbp), %edx	 RIP: 470755	 Bytes: 6
  %loadMem_470755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470755 = call %struct.Memory* @routine_movl_MINUS0xc8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470755)
  store %struct.Memory* %call_470755, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edx	 RIP: 47075b	 Bytes: 3
  %loadMem_47075b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47075b = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47075b)
  store %struct.Memory* %call_47075b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 47075e	 Bytes: 3
  %loadMem_47075e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47075e = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47075e)
  store %struct.Memory* %call_47075e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470761	 Bytes: 4
  %loadMem_470761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470761 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470761)
  store %struct.Memory* %call_470761, %struct.Memory** %MEMORY

  ; Code: movw %ax, (%rcx)	 RIP: 470765	 Bytes: 3
  %loadMem_470765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470765 = call %struct.Memory* @routine_movw__ax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470765)
  store %struct.Memory* %call_470765, %struct.Memory** %MEMORY

  ; Code: movw -0x50(%rbp), %ax	 RIP: 470768	 Bytes: 4
  %loadMem_470768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470768 = call %struct.Memory* @routine_movw_MINUS0x50__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470768)
  store %struct.Memory* %call_470768, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rcx	 RIP: 47076c	 Bytes: 7
  %loadMem_47076c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47076c = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47076c)
  store %struct.Memory* %call_47076c, %struct.Memory** %MEMORY

  ; Code: movl -0xc4(%rbp), %edx	 RIP: 470773	 Bytes: 6
  %loadMem_470773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470773 = call %struct.Memory* @routine_movl_MINUS0xc4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470773)
  store %struct.Memory* %call_470773, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edx	 RIP: 470779	 Bytes: 3
  %loadMem_470779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470779 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470779)
  store %struct.Memory* %call_470779, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 47077c	 Bytes: 3
  %loadMem_47077c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47077c = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47077c)
  store %struct.Memory* %call_47077c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 47077f	 Bytes: 4
  %loadMem_47077f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47077f = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47077f)
  store %struct.Memory* %call_47077f, %struct.Memory** %MEMORY

  ; Code: movl -0xc8(%rbp), %edx	 RIP: 470783	 Bytes: 6
  %loadMem_470783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470783 = call %struct.Memory* @routine_movl_MINUS0xc8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470783)
  store %struct.Memory* %call_470783, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edx	 RIP: 470789	 Bytes: 3
  %loadMem_470789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470789 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470789)
  store %struct.Memory* %call_470789, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 47078c	 Bytes: 3
  %loadMem_47078c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47078c = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47078c)
  store %struct.Memory* %call_47078c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 47078f	 Bytes: 4
  %loadMem_47078f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47078f = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47078f)
  store %struct.Memory* %call_47078f, %struct.Memory** %MEMORY

  ; Code: movw %ax, 0x2(%rcx)	 RIP: 470793	 Bytes: 4
  %loadMem_470793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470793 = call %struct.Memory* @routine_movw__ax__0x2__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470793)
  store %struct.Memory* %call_470793, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %eax	 RIP: 470797	 Bytes: 3
  %loadMem_470797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470797 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470797)
  store %struct.Memory* %call_470797, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47079a	 Bytes: 3
  %loadMem_47079a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47079a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47079a)
  store %struct.Memory* %call_47079a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 47079d	 Bytes: 3
  %loadMem_47079d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47079d = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47079d)
  store %struct.Memory* %call_47079d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4706a6	 RIP: 4707a0	 Bytes: 5
  %loadMem_4707a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707a0 = call %struct.Memory* @routine_jmpq_.L_4706a6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707a0, i64 -250, i64 5)
  store %struct.Memory* %call_4707a0, %struct.Memory** %MEMORY

  br label %block_.L_4706a6

  ; Code: .L_4707a5:	 RIP: 4707a5	 Bytes: 0
block_.L_4707a5:

  ; Code: jmpq .L_4707aa	 RIP: 4707a5	 Bytes: 5
  %loadMem_4707a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707a5 = call %struct.Memory* @routine_jmpq_.L_4707aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707a5, i64 5, i64 5)
  store %struct.Memory* %call_4707a5, %struct.Memory** %MEMORY

  br label %block_.L_4707aa

  ; Code: .L_4707aa:	 RIP: 4707aa	 Bytes: 0
block_.L_4707aa:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 4707aa	 Bytes: 3
  %loadMem_4707aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707aa = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707aa)
  store %struct.Memory* %call_4707aa, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4707ad	 Bytes: 3
  %loadMem_4707ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707ad = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707ad)
  store %struct.Memory* %call_4707ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 4707b0	 Bytes: 3
  %loadMem_4707b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707b0 = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707b0)
  store %struct.Memory* %call_4707b0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47068e	 RIP: 4707b3	 Bytes: 5
  %loadMem_4707b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707b3 = call %struct.Memory* @routine_jmpq_.L_47068e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707b3, i64 -293, i64 5)
  store %struct.Memory* %call_4707b3, %struct.Memory** %MEMORY

  br label %block_.L_47068e

  ; Code: .L_4707b8:	 RIP: 4707b8	 Bytes: 0
block_.L_4707b8:

  ; Code: jmpq .L_470896	 RIP: 4707b8	 Bytes: 5
  %loadMem_4707b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707b8 = call %struct.Memory* @routine_jmpq_.L_470896(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707b8, i64 222, i64 5)
  store %struct.Memory* %call_4707b8, %struct.Memory** %MEMORY

  br label %block_.L_470896

  ; Code: .L_4707bd:	 RIP: 4707bd	 Bytes: 0
block_.L_4707bd:

  ; Code: movl $0x0, -0x54(%rbp)	 RIP: 4707bd	 Bytes: 7
  %loadMem_4707bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707bd = call %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707bd)
  store %struct.Memory* %call_4707bd, %struct.Memory** %MEMORY

  ; Code: .L_4707c4:	 RIP: 4707c4	 Bytes: 0
  br label %block_.L_4707c4
block_.L_4707c4:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 4707c4	 Bytes: 3
  %loadMem_4707c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707c4 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707c4)
  store %struct.Memory* %call_4707c4, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %ecx	 RIP: 4707c7	 Bytes: 3
  %loadMem_4707c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707c7 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707c7)
  store %struct.Memory* %call_4707c7, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 4707ca	 Bytes: 3
  %loadMem_4707ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707ca = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707ca)
  store %struct.Memory* %call_4707ca, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4707cd	 Bytes: 2
  %loadMem_4707cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707cd = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707cd)
  store %struct.Memory* %call_4707cd, %struct.Memory** %MEMORY

  ; Code: jge .L_470891	 RIP: 4707cf	 Bytes: 6
  %loadMem_4707cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707cf = call %struct.Memory* @routine_jge_.L_470891(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707cf, i8* %BRANCH_TAKEN, i64 194, i64 6, i64 6)
  store %struct.Memory* %call_4707cf, %struct.Memory** %MEMORY

  %loadBr_4707cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4707cf = icmp eq i8 %loadBr_4707cf, 1
  br i1 %cmpBr_4707cf, label %block_.L_470891, label %block_4707d5

block_4707d5:
  ; Code: movl $0x0, -0x58(%rbp)	 RIP: 4707d5	 Bytes: 7
  %loadMem_4707d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707d5 = call %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707d5)
  store %struct.Memory* %call_4707d5, %struct.Memory** %MEMORY

  ; Code: .L_4707dc:	 RIP: 4707dc	 Bytes: 0
  br label %block_.L_4707dc
block_.L_4707dc:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 4707dc	 Bytes: 3
  %loadMem_4707dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707dc = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707dc)
  store %struct.Memory* %call_4707dc, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 4707df	 Bytes: 3
  %loadMem_4707df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707df = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707df)
  store %struct.Memory* %call_4707df, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 4707e2	 Bytes: 3
  %loadMem_4707e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707e2 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707e2)
  store %struct.Memory* %call_4707e2, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4707e5	 Bytes: 2
  %loadMem_4707e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707e5 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707e5)
  store %struct.Memory* %call_4707e5, %struct.Memory** %MEMORY

  ; Code: jge .L_47087e	 RIP: 4707e7	 Bytes: 6
  %loadMem_4707e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707e7 = call %struct.Memory* @routine_jge_.L_47087e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707e7, i8* %BRANCH_TAKEN, i64 151, i64 6, i64 6)
  store %struct.Memory* %call_4707e7, %struct.Memory** %MEMORY

  %loadBr_4707e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4707e7 = icmp eq i8 %loadBr_4707e7, 1
  br i1 %cmpBr_4707e7, label %block_.L_47087e, label %block_4707ed

block_4707ed:
  ; Code: movw -0x4e(%rbp), %ax	 RIP: 4707ed	 Bytes: 4
  %loadMem_4707ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707ed = call %struct.Memory* @routine_movw_MINUS0x4e__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707ed)
  store %struct.Memory* %call_4707ed, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 4707f1	 Bytes: 7
  %loadMem_4707f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707f1 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707f1)
  store %struct.Memory* %call_4707f1, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edx	 RIP: 4707f8	 Bytes: 3
  %loadMem_4707f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707f8 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707f8)
  store %struct.Memory* %call_4707f8, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edx	 RIP: 4707fb	 Bytes: 3
  %loadMem_4707fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707fb = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707fb)
  store %struct.Memory* %call_4707fb, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4707fe	 Bytes: 3
  %loadMem_4707fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4707fe = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4707fe)
  store %struct.Memory* %call_4707fe, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470801	 Bytes: 4
  %loadMem_470801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470801 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470801)
  store %struct.Memory* %call_470801, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edx	 RIP: 470805	 Bytes: 3
  %loadMem_470805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470805 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470805)
  store %struct.Memory* %call_470805, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edx	 RIP: 470808	 Bytes: 3
  %loadMem_470808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470808 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470808)
  store %struct.Memory* %call_470808, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 47080b	 Bytes: 3
  %loadMem_47080b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47080b = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47080b)
  store %struct.Memory* %call_47080b, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 47080e	 Bytes: 4
  %loadMem_47080e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47080e = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47080e)
  store %struct.Memory* %call_47080e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 470812	 Bytes: 4
  %loadMem_470812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470812 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470812)
  store %struct.Memory* %call_470812, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470816	 Bytes: 4
  %loadMem_470816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470816 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470816)
  store %struct.Memory* %call_470816, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 47081a	 Bytes: 5
  %loadMem_47081a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47081a = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47081a)
  store %struct.Memory* %call_47081a, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 47081f	 Bytes: 4
  %loadMem_47081f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47081f = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47081f)
  store %struct.Memory* %call_47081f, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 470823	 Bytes: 4
  %loadMem_470823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470823 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470823)
  store %struct.Memory* %call_470823, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470827	 Bytes: 4
  %loadMem_470827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470827 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470827)
  store %struct.Memory* %call_470827, %struct.Memory** %MEMORY

  ; Code: movw %ax, (%rcx)	 RIP: 47082b	 Bytes: 3
  %loadMem_47082b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47082b = call %struct.Memory* @routine_movw__ax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47082b)
  store %struct.Memory* %call_47082b, %struct.Memory** %MEMORY

  ; Code: movw -0x50(%rbp), %ax	 RIP: 47082e	 Bytes: 4
  %loadMem_47082e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47082e = call %struct.Memory* @routine_movw_MINUS0x50__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47082e)
  store %struct.Memory* %call_47082e, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 470832	 Bytes: 7
  %loadMem_470832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470832 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470832)
  store %struct.Memory* %call_470832, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edx	 RIP: 470839	 Bytes: 3
  %loadMem_470839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470839 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470839)
  store %struct.Memory* %call_470839, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edx	 RIP: 47083c	 Bytes: 3
  %loadMem_47083c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47083c = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47083c)
  store %struct.Memory* %call_47083c, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 47083f	 Bytes: 3
  %loadMem_47083f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47083f = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47083f)
  store %struct.Memory* %call_47083f, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470842	 Bytes: 4
  %loadMem_470842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470842 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470842)
  store %struct.Memory* %call_470842, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edx	 RIP: 470846	 Bytes: 3
  %loadMem_470846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470846 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470846)
  store %struct.Memory* %call_470846, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edx	 RIP: 470849	 Bytes: 3
  %loadMem_470849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470849 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470849)
  store %struct.Memory* %call_470849, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 47084c	 Bytes: 3
  %loadMem_47084c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47084c = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47084c)
  store %struct.Memory* %call_47084c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 47084f	 Bytes: 4
  %loadMem_47084f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47084f = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47084f)
  store %struct.Memory* %call_47084f, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 470853	 Bytes: 4
  %loadMem_470853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470853 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470853)
  store %struct.Memory* %call_470853, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470857	 Bytes: 4
  %loadMem_470857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470857 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470857)
  store %struct.Memory* %call_470857, %struct.Memory** %MEMORY

  ; Code: movswq -0x2a(%rbp), %rsi	 RIP: 47085b	 Bytes: 5
  %loadMem_47085b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47085b = call %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47085b)
  store %struct.Memory* %call_47085b, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470860	 Bytes: 4
  %loadMem_470860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470860 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470860)
  store %struct.Memory* %call_470860, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rsi	 RIP: 470864	 Bytes: 4
  %loadMem_470864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470864 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470864)
  store %struct.Memory* %call_470864, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 470868	 Bytes: 4
  %loadMem_470868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470868 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470868)
  store %struct.Memory* %call_470868, %struct.Memory** %MEMORY

  ; Code: movw %ax, 0x2(%rcx)	 RIP: 47086c	 Bytes: 4
  %loadMem_47086c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47086c = call %struct.Memory* @routine_movw__ax__0x2__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47086c)
  store %struct.Memory* %call_47086c, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %eax	 RIP: 470870	 Bytes: 3
  %loadMem_470870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470870 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470870)
  store %struct.Memory* %call_470870, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 470873	 Bytes: 3
  %loadMem_470873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470873 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470873)
  store %struct.Memory* %call_470873, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 470876	 Bytes: 3
  %loadMem_470876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470876 = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470876)
  store %struct.Memory* %call_470876, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4707dc	 RIP: 470879	 Bytes: 5
  %loadMem_470879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470879 = call %struct.Memory* @routine_jmpq_.L_4707dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470879, i64 -157, i64 5)
  store %struct.Memory* %call_470879, %struct.Memory** %MEMORY

  br label %block_.L_4707dc

  ; Code: .L_47087e:	 RIP: 47087e	 Bytes: 0
block_.L_47087e:

  ; Code: jmpq .L_470883	 RIP: 47087e	 Bytes: 5
  %loadMem_47087e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47087e = call %struct.Memory* @routine_jmpq_.L_470883(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47087e, i64 5, i64 5)
  store %struct.Memory* %call_47087e, %struct.Memory** %MEMORY

  br label %block_.L_470883

  ; Code: .L_470883:	 RIP: 470883	 Bytes: 0
block_.L_470883:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 470883	 Bytes: 3
  %loadMem_470883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470883 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470883)
  store %struct.Memory* %call_470883, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 470886	 Bytes: 3
  %loadMem_470886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470886 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470886)
  store %struct.Memory* %call_470886, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 470889	 Bytes: 3
  %loadMem_470889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470889 = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470889)
  store %struct.Memory* %call_470889, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4707c4	 RIP: 47088c	 Bytes: 5
  %loadMem_47088c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47088c = call %struct.Memory* @routine_jmpq_.L_4707c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47088c, i64 -200, i64 5)
  store %struct.Memory* %call_47088c, %struct.Memory** %MEMORY

  br label %block_.L_4707c4

  ; Code: .L_470891:	 RIP: 470891	 Bytes: 0
block_.L_470891:

  ; Code: jmpq .L_470896	 RIP: 470891	 Bytes: 5
  %loadMem_470891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470891 = call %struct.Memory* @routine_jmpq_.L_470896(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470891, i64 5, i64 5)
  store %struct.Memory* %call_470891, %struct.Memory** %MEMORY

  br label %block_.L_470896

  ; Code: .L_470896:	 RIP: 470896	 Bytes: 0
block_.L_470896:

  ; Code: movq 0x6cb900, %rax	 RIP: 470896	 Bytes: 8
  %loadMem_470896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470896 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470896)
  store %struct.Memory* %call_470896, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 47089e	 Bytes: 4
  %loadMem_47089e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47089e = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47089e)
  store %struct.Memory* %call_47089e, %struct.Memory** %MEMORY

  ; Code: jne .L_4710f8	 RIP: 4708a2	 Bytes: 6
  %loadMem_4708a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708a2 = call %struct.Memory* @routine_jne_.L_4710f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708a2, i8* %BRANCH_TAKEN, i64 2134, i64 6, i64 6)
  store %struct.Memory* %call_4708a2, %struct.Memory** %MEMORY

  %loadBr_4708a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4708a2 = icmp eq i8 %loadBr_4708a2, 1
  br i1 %cmpBr_4708a2, label %block_.L_4710f8, label %block_4708a8

block_4708a8:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 4708a8	 Bytes: 8
  %loadMem_4708a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708a8 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708a8)
  store %struct.Memory* %call_4708a8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x4e8(%rax)	 RIP: 4708b0	 Bytes: 7
  %loadMem_4708b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708b0 = call %struct.Memory* @routine_cmpl__0x0__0x4e8__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708b0)
  store %struct.Memory* %call_4708b0, %struct.Memory** %MEMORY

  ; Code: je .L_4710f8	 RIP: 4708b7	 Bytes: 6
  %loadMem_4708b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708b7 = call %struct.Memory* @routine_je_.L_4710f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708b7, i8* %BRANCH_TAKEN, i64 2113, i64 6, i64 6)
  store %struct.Memory* %call_4708b7, %struct.Memory** %MEMORY

  %loadBr_4708b7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4708b7 = icmp eq i8 %loadBr_4708b7, 1
  br i1 %cmpBr_4708b7, label %block_.L_4710f8, label %block_4708bd

block_4708bd:
  ; Code: cmpl $0x1, -0x3c(%rbp)	 RIP: 4708bd	 Bytes: 4
  %loadMem_4708bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708bd = call %struct.Memory* @routine_cmpl__0x1__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708bd)
  store %struct.Memory* %call_4708bd, %struct.Memory** %MEMORY

  ; Code: jne .L_4710f8	 RIP: 4708c1	 Bytes: 6
  %loadMem_4708c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708c1 = call %struct.Memory* @routine_jne_.L_4710f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708c1, i8* %BRANCH_TAKEN, i64 2103, i64 6, i64 6)
  store %struct.Memory* %call_4708c1, %struct.Memory** %MEMORY

  %loadBr_4708c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4708c1 = icmp eq i8 %loadBr_4708c1, 1
  br i1 %cmpBr_4708c1, label %block_.L_4710f8, label %block_4708c7

block_4708c7:
  ; Code: movswl -0x2a(%rbp), %eax	 RIP: 4708c7	 Bytes: 4
  %loadMem_4708c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708c7 = call %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708c7)
  store %struct.Memory* %call_4708c7, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4708cb	 Bytes: 3
  %loadMem_4708cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708cb = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708cb)
  store %struct.Memory* %call_4708cb, %struct.Memory** %MEMORY

  ; Code: jne .L_4710f8	 RIP: 4708ce	 Bytes: 6
  %loadMem_4708ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708ce = call %struct.Memory* @routine_jne_.L_4710f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708ce, i8* %BRANCH_TAKEN, i64 2090, i64 6, i64 6)
  store %struct.Memory* %call_4708ce, %struct.Memory** %MEMORY

  %loadBr_4708ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4708ce = icmp eq i8 %loadBr_4708ce, 1
  br i1 %cmpBr_4708ce, label %block_.L_4710f8, label %block_4708d4

block_4708d4:
  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 4708d4	 Bytes: 4
  %loadMem_4708d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708d4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708d4)
  store %struct.Memory* %call_4708d4, %struct.Memory** %MEMORY

  ; Code: je .L_4708f9	 RIP: 4708d8	 Bytes: 6
  %loadMem_4708d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708d8 = call %struct.Memory* @routine_je_.L_4708f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708d8, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_4708d8, %struct.Memory** %MEMORY

  %loadBr_4708d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4708d8 = icmp eq i8 %loadBr_4708d8, 1
  br i1 %cmpBr_4708d8, label %block_.L_4708f9, label %block_4708de

block_4708de:
  ; Code: movq 0x6cb900, %rax	 RIP: 4708de	 Bytes: 8
  %loadMem_4708de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708de = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708de)
  store %struct.Memory* %call_4708de, %struct.Memory** %MEMORY

  ; Code: movq 0x11900(%rax), %rax	 RIP: 4708e6	 Bytes: 7
  %loadMem_4708e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708e6 = call %struct.Memory* @routine_movq_0x11900__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708e6)
  store %struct.Memory* %call_4708e6, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x1c8(%rbp)	 RIP: 4708ed	 Bytes: 7
  %loadMem_4708ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708ed = call %struct.Memory* @routine_movq__rax__MINUS0x1c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708ed)
  store %struct.Memory* %call_4708ed, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47090f	 RIP: 4708f4	 Bytes: 5
  %loadMem_4708f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708f4 = call %struct.Memory* @routine_jmpq_.L_47090f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708f4, i64 27, i64 5)
  store %struct.Memory* %call_4708f4, %struct.Memory** %MEMORY

  br label %block_.L_47090f

  ; Code: .L_4708f9:	 RIP: 4708f9	 Bytes: 0
block_.L_4708f9:

  ; Code: movq 0x6cb900, %rax	 RIP: 4708f9	 Bytes: 8
  %loadMem_4708f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4708f9 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4708f9)
  store %struct.Memory* %call_4708f9, %struct.Memory** %MEMORY

  ; Code: movq 0x11908(%rax), %rax	 RIP: 470901	 Bytes: 7
  %loadMem_470901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470901 = call %struct.Memory* @routine_movq_0x11908__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470901)
  store %struct.Memory* %call_470901, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x1c8(%rbp)	 RIP: 470908	 Bytes: 7
  %loadMem_470908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470908 = call %struct.Memory* @routine_movq__rax__MINUS0x1c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470908)
  store %struct.Memory* %call_470908, %struct.Memory** %MEMORY

  ; Code: .L_47090f:	 RIP: 47090f	 Bytes: 0
  br label %block_.L_47090f
block_.L_47090f:

  ; Code: movq -0x1c8(%rbp), %rax	 RIP: 47090f	 Bytes: 7
  %loadMem_47090f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47090f = call %struct.Memory* @routine_movq_MINUS0x1c8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47090f)
  store %struct.Memory* %call_47090f, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 470916	 Bytes: 2
  %loadMem_470916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470916 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470916)
  store %struct.Memory* %call_470916, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 470918	 Bytes: 5
  %loadMem_470918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470918 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470918)
  store %struct.Memory* %call_470918, %struct.Memory** %MEMORY

  ; Code: leaq -0xea(%rbp), %rdi	 RIP: 47091d	 Bytes: 7
  %loadMem_47091d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47091d = call %struct.Memory* @routine_leaq_MINUS0xea__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47091d)
  store %struct.Memory* %call_47091d, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0xd0(%rbp)	 RIP: 470924	 Bytes: 7
  %loadMem_470924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470924 = call %struct.Memory* @routine_movq__rax__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470924)
  store %struct.Memory* %call_470924, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 47092b	 Bytes: 3
  %loadMem_47092b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47092b = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47092b)
  store %struct.Memory* %call_47092b, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xd4(%rbp)	 RIP: 47092e	 Bytes: 6
  %loadMem_47092e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47092e = call %struct.Memory* @routine_movl__esi__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47092e)
  store %struct.Memory* %call_47092e, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0xe2(%rbp)	 RIP: 470934	 Bytes: 9
  %loadMem_470934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470934 = call %struct.Memory* @routine_movw__0x0__MINUS0xe2__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470934)
  store %struct.Memory* %call_470934, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0xe4(%rbp)	 RIP: 47093d	 Bytes: 9
  %loadMem_47093d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47093d = call %struct.Memory* @routine_movw__0x0__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47093d)
  store %struct.Memory* %call_47093d, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %esi	 RIP: 470946	 Bytes: 3
  %loadMem_470946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470946 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470946)
  store %struct.Memory* %call_470946, %struct.Memory** %MEMORY

  ; Code: movw %si, %r8w	 RIP: 470949	 Bytes: 4
  %loadMem_470949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470949 = call %struct.Memory* @routine_movw__si___r8w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470949)
  store %struct.Memory* %call_470949, %struct.Memory** %MEMORY

  ; Code: movw %r8w, -0xe6(%rbp)	 RIP: 47094d	 Bytes: 8
  %loadMem_47094d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47094d = call %struct.Memory* @routine_movw__r8w__MINUS0xe6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47094d)
  store %struct.Memory* %call_47094d, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 470955	 Bytes: 8
  %loadMem_470955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470955 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470955)
  store %struct.Memory* %call_470955, %struct.Memory** %MEMORY

  ; Code: movq 0x1950(%rax), %rsi	 RIP: 47095d	 Bytes: 7
  %loadMem_47095d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47095d = call %struct.Memory* @routine_movq_0x1950__rax____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47095d)
  store %struct.Memory* %call_47095d, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 470964	 Bytes: 8
  %loadMem_470964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470964 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470964)
  store %struct.Memory* %call_470964, %struct.Memory** %MEMORY

  ; Code: movq 0x1968(%rax), %rax	 RIP: 47096c	 Bytes: 7
  %loadMem_47096c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47096c = call %struct.Memory* @routine_movq_0x1968__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47096c)
  store %struct.Memory* %call_47096c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 470973	 Bytes: 4
  %loadMem_470973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470973 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470973)
  store %struct.Memory* %call_470973, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %r9d	 RIP: 470977	 Bytes: 3
  %loadMem_470977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470977 = call %struct.Memory* @routine_movl__ecx___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470977)
  store %struct.Memory* %call_470977, %struct.Memory** %MEMORY

  ; Code: cmovel %edx, %r9d	 RIP: 47097a	 Bytes: 4
  %loadMem_47097a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47097a = call %struct.Memory* @routine_cmovel__edx___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47097a)
  store %struct.Memory* %call_47097a, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edx	 RIP: 47097e	 Bytes: 3
  %loadMem_47097e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47097e = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47097e)
  store %struct.Memory* %call_47097e, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %r10d	 RIP: 470981	 Bytes: 4
  %loadMem_470981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470981 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470981)
  store %struct.Memory* %call_470981, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %r11d	 RIP: 470985	 Bytes: 4
  %loadMem_470985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470985 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470985)
  store %struct.Memory* %call_470985, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ebx	 RIP: 470989	 Bytes: 3
  %loadMem_470989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470989 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470989)
  store %struct.Memory* %call_470989, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1cc(%rbp)	 RIP: 47098c	 Bytes: 6
  %loadMem_47098c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47098c = call %struct.Memory* @routine_movl__edx__MINUS0x1cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47098c)
  store %struct.Memory* %call_47098c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 470992	 Bytes: 3
  %loadMem_470992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470992 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470992)
  store %struct.Memory* %call_470992, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %r8d	 RIP: 470995	 Bytes: 3
  %loadMem_470995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470995 = call %struct.Memory* @routine_movl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470995)
  store %struct.Memory* %call_470995, %struct.Memory** %MEMORY

  ; Code: movl -0x1cc(%rbp), %r9d	 RIP: 470998	 Bytes: 7
  %loadMem_470998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470998 = call %struct.Memory* @routine_movl_MINUS0x1cc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470998)
  store %struct.Memory* %call_470998, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 47099f	 Bytes: 4
  %loadMem_47099f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47099f = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47099f)
  store %struct.Memory* %call_47099f, %struct.Memory** %MEMORY

  ; Code: movl %r11d, 0x8(%rsp)	 RIP: 4709a3	 Bytes: 5
  %loadMem_4709a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709a3 = call %struct.Memory* @routine_movl__r11d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709a3)
  store %struct.Memory* %call_4709a3, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x10(%rsp)	 RIP: 4709a8	 Bytes: 4
  %loadMem_4709a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709a8 = call %struct.Memory* @routine_movl__ebx__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709a8)
  store %struct.Memory* %call_4709a8, %struct.Memory** %MEMORY

  ; Code: callq .SetMotionVectorPredictor	 RIP: 4709ac	 Bytes: 5
  %loadMem1_4709ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4709ac = call %struct.Memory* @routine_callq_.SetMotionVectorPredictor(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4709ac, i64 -81836, i64 5, i64 5)
  store %struct.Memory* %call1_4709ac, %struct.Memory** %MEMORY

  %loadMem2_4709ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4709ac = load i64, i64* %3
  %call2_4709ac = call %struct.Memory* @sub_45ca00.SetMotionVectorPredictor(%struct.State* %0, i64  %loadPC_4709ac, %struct.Memory* %loadMem2_4709ac)
  store %struct.Memory* %call2_4709ac, %struct.Memory** %MEMORY

  ; Code: movswl -0x4e(%rbp), %ecx	 RIP: 4709b1	 Bytes: 4
  %loadMem_4709b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709b1 = call %struct.Memory* @routine_movswl_MINUS0x4e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709b1)
  store %struct.Memory* %call_4709b1, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 4709b5	 Bytes: 3
  %loadMem_4709b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709b5 = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709b5)
  store %struct.Memory* %call_4709b5, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 4709b8	 Bytes: 3
  %loadMem_4709b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709b8 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709b8)
  store %struct.Memory* %call_4709b8, %struct.Memory** %MEMORY

  ; Code: movw %cx, %r14w	 RIP: 4709bb	 Bytes: 4
  %loadMem_4709bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709bb = call %struct.Memory* @routine_movw__cx___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709bb)
  store %struct.Memory* %call_4709bb, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x4e(%rbp)	 RIP: 4709bf	 Bytes: 5
  %loadMem_4709bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709bf = call %struct.Memory* @routine_movw__r14w__MINUS0x4e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709bf)
  store %struct.Memory* %call_4709bf, %struct.Memory** %MEMORY

  ; Code: movswl -0x50(%rbp), %ecx	 RIP: 4709c4	 Bytes: 4
  %loadMem_4709c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709c4 = call %struct.Memory* @routine_movswl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709c4)
  store %struct.Memory* %call_4709c4, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 4709c8	 Bytes: 3
  %loadMem_4709c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709c8 = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709c8)
  store %struct.Memory* %call_4709c8, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 4709cb	 Bytes: 3
  %loadMem_4709cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709cb = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709cb)
  store %struct.Memory* %call_4709cb, %struct.Memory** %MEMORY

  ; Code: movw %cx, %r14w	 RIP: 4709ce	 Bytes: 4
  %loadMem_4709ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709ce = call %struct.Memory* @routine_movw__cx___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709ce)
  store %struct.Memory* %call_4709ce, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x50(%rbp)	 RIP: 4709d2	 Bytes: 5
  %loadMem_4709d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709d2 = call %struct.Memory* @routine_movw__r14w__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709d2)
  store %struct.Memory* %call_4709d2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x54(%rbp)	 RIP: 4709d7	 Bytes: 7
  %loadMem_4709d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709d7 = call %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709d7)
  store %struct.Memory* %call_4709d7, %struct.Memory** %MEMORY

  ; Code: .L_4709de:	 RIP: 4709de	 Bytes: 0
  br label %block_.L_4709de
block_.L_4709de:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 4709de	 Bytes: 3
  %loadMem_4709de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709de = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709de)
  store %struct.Memory* %call_4709de, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 4709e1	 Bytes: 8
  %loadMem_4709e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709e1 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709e1)
  store %struct.Memory* %call_4709e1, %struct.Memory** %MEMORY

  ; Code: cmpl 0x4ec(%rcx), %eax	 RIP: 4709e9	 Bytes: 6
  %loadMem_4709e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709e9 = call %struct.Memory* @routine_cmpl_0x4ec__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709e9)
  store %struct.Memory* %call_4709e9, %struct.Memory** %MEMORY

  ; Code: jg .L_470cd4	 RIP: 4709ef	 Bytes: 6
  %loadMem_4709ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709ef = call %struct.Memory* @routine_jg_.L_470cd4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709ef, i8* %BRANCH_TAKEN, i64 741, i64 6, i64 6)
  store %struct.Memory* %call_4709ef, %struct.Memory** %MEMORY

  %loadBr_4709ef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4709ef = icmp eq i8 %loadBr_4709ef, 1
  br i1 %cmpBr_4709ef, label %block_.L_470cd4, label %block_4709f5

block_4709f5:
  ; Code: movl $0x2, %eax	 RIP: 4709f5	 Bytes: 5
  %loadMem_4709f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709f5 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709f5)
  store %struct.Memory* %call_4709f5, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %ecx	 RIP: 4709fa	 Bytes: 3
  %loadMem_4709fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709fa = call %struct.Memory* @routine_movl_MINUS0x54__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709fa)
  store %struct.Memory* %call_4709fa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d0(%rbp)	 RIP: 4709fd	 Bytes: 6
  %loadMem_4709fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4709fd = call %struct.Memory* @routine_movl__eax__MINUS0x1d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4709fd)
  store %struct.Memory* %call_4709fd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 470a03	 Bytes: 2
  %loadMem_470a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a03 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a03)
  store %struct.Memory* %call_470a03, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 470a05	 Bytes: 1
  %loadMem_470a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a05 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a05)
  store %struct.Memory* %call_470a05, %struct.Memory** %MEMORY

  ; Code: movl -0x1d0(%rbp), %ecx	 RIP: 470a06	 Bytes: 6
  %loadMem_470a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a06 = call %struct.Memory* @routine_movl_MINUS0x1d0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a06)
  store %struct.Memory* %call_470a06, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 470a0c	 Bytes: 2
  %loadMem_470a0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a0c = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a0c)
  store %struct.Memory* %call_470a0c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 470a0e	 Bytes: 3
  %loadMem_470a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a0e = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a0e)
  store %struct.Memory* %call_470a0e, %struct.Memory** %MEMORY

  ; Code: je .L_470a9f	 RIP: 470a11	 Bytes: 6
  %loadMem_470a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a11 = call %struct.Memory* @routine_je_.L_470a9f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a11, i8* %BRANCH_TAKEN, i64 142, i64 6, i64 6)
  store %struct.Memory* %call_470a11, %struct.Memory** %MEMORY

  %loadBr_470a11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470a11 = icmp eq i8 %loadBr_470a11, 1
  br i1 %cmpBr_470a11, label %block_.L_470a9f, label %block_470a17

block_470a17:
  ; Code: xorl %eax, %eax	 RIP: 470a17	 Bytes: 2
  %loadMem_470a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a17 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a17)
  store %struct.Memory* %call_470a17, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 470a19	 Bytes: 5
  %loadMem_470a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a19 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a19)
  store %struct.Memory* %call_470a19, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdx	 RIP: 470a1e	 Bytes: 4
  %loadMem_470a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a1e = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a1e)
  store %struct.Memory* %call_470a1e, %struct.Memory** %MEMORY

  ; Code: movw (%rdx), %si	 RIP: 470a22	 Bytes: 3
  %loadMem_470a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a22 = call %struct.Memory* @routine_movw___rdx____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a22)
  store %struct.Memory* %call_470a22, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xe2(%rbp)	 RIP: 470a25	 Bytes: 7
  %loadMem_470a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a25 = call %struct.Memory* @routine_movw__si__MINUS0xe2__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a25)
  store %struct.Memory* %call_470a25, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rdx	 RIP: 470a2c	 Bytes: 4
  %loadMem_470a2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a2c = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a2c)
  store %struct.Memory* %call_470a2c, %struct.Memory** %MEMORY

  ; Code: movw 0x2(%rdx), %si	 RIP: 470a30	 Bytes: 4
  %loadMem_470a30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a30 = call %struct.Memory* @routine_movw_0x2__rdx____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a30)
  store %struct.Memory* %call_470a30, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xe4(%rbp)	 RIP: 470a34	 Bytes: 7
  %loadMem_470a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a34 = call %struct.Memory* @routine_movw__si__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a34)
  store %struct.Memory* %call_470a34, %struct.Memory** %MEMORY

  ; Code: movw -0xea(%rbp), %si	 RIP: 470a3b	 Bytes: 7
  %loadMem_470a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a3b = call %struct.Memory* @routine_movw_MINUS0xea__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a3b)
  store %struct.Memory* %call_470a3b, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xde(%rbp)	 RIP: 470a42	 Bytes: 7
  %loadMem_470a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a42 = call %struct.Memory* @routine_movw__si__MINUS0xde__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a42)
  store %struct.Memory* %call_470a42, %struct.Memory** %MEMORY

  ; Code: movw -0xe8(%rbp), %si	 RIP: 470a49	 Bytes: 7
  %loadMem_470a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a49 = call %struct.Memory* @routine_movw_MINUS0xe8__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a49)
  store %struct.Memory* %call_470a49, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xe0(%rbp)	 RIP: 470a50	 Bytes: 7
  %loadMem_470a50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a50 = call %struct.Memory* @routine_movw__si__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a50)
  store %struct.Memory* %call_470a50, %struct.Memory** %MEMORY

  ; Code: movw -0xd6(%rbp), %si	 RIP: 470a57	 Bytes: 7
  %loadMem_470a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a57 = call %struct.Memory* @routine_movw_MINUS0xd6__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a57)
  store %struct.Memory* %call_470a57, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xda(%rbp)	 RIP: 470a5e	 Bytes: 7
  %loadMem_470a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a5e = call %struct.Memory* @routine_movw__si__MINUS0xda__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a5e)
  store %struct.Memory* %call_470a5e, %struct.Memory** %MEMORY

  ; Code: movw -0xd8(%rbp), %si	 RIP: 470a65	 Bytes: 7
  %loadMem_470a65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a65 = call %struct.Memory* @routine_movw_MINUS0xd8__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a65)
  store %struct.Memory* %call_470a65, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xdc(%rbp)	 RIP: 470a6c	 Bytes: 7
  %loadMem_470a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a6c = call %struct.Memory* @routine_movw__si__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a6c)
  store %struct.Memory* %call_470a6c, %struct.Memory** %MEMORY

  ; Code: movw -0x4e(%rbp), %si	 RIP: 470a73	 Bytes: 4
  %loadMem_470a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a73 = call %struct.Memory* @routine_movw_MINUS0x4e__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a73)
  store %struct.Memory* %call_470a73, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xd6(%rbp)	 RIP: 470a77	 Bytes: 7
  %loadMem_470a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a77 = call %struct.Memory* @routine_movw__si__MINUS0xd6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a77)
  store %struct.Memory* %call_470a77, %struct.Memory** %MEMORY

  ; Code: movw -0x50(%rbp), %si	 RIP: 470a7e	 Bytes: 4
  %loadMem_470a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a7e = call %struct.Memory* @routine_movw_MINUS0x50__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a7e)
  store %struct.Memory* %call_470a7e, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xd8(%rbp)	 RIP: 470a82	 Bytes: 7
  %loadMem_470a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a82 = call %struct.Memory* @routine_movw__si__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a82)
  store %struct.Memory* %call_470a82, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 470a89	 Bytes: 4
  %loadMem_470a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a89 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a89)
  store %struct.Memory* %call_470a89, %struct.Memory** %MEMORY

  ; Code: cmovel %ecx, %eax	 RIP: 470a8d	 Bytes: 3
  %loadMem_470a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a8d = call %struct.Memory* @routine_cmovel__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a8d)
  store %struct.Memory* %call_470a8d, %struct.Memory** %MEMORY

  ; Code: movw %ax, %si	 RIP: 470a90	 Bytes: 3
  %loadMem_470a90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a90 = call %struct.Memory* @routine_movw__ax___si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a90)
  store %struct.Memory* %call_470a90, %struct.Memory** %MEMORY

  ; Code: movw %si, -0xe6(%rbp)	 RIP: 470a93	 Bytes: 7
  %loadMem_470a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a93 = call %struct.Memory* @routine_movw__si__MINUS0xe6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a93)
  store %struct.Memory* %call_470a93, %struct.Memory** %MEMORY

  ; Code: jmpq .L_470b6a	 RIP: 470a9a	 Bytes: 5
  %loadMem_470a9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a9a = call %struct.Memory* @routine_jmpq_.L_470b6a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a9a, i64 208, i64 5)
  store %struct.Memory* %call_470a9a, %struct.Memory** %MEMORY

  br label %block_.L_470b6a

  ; Code: .L_470a9f:	 RIP: 470a9f	 Bytes: 0
block_.L_470a9f:

  ; Code: movq -0x80(%rbp), %rax	 RIP: 470a9f	 Bytes: 4
  %loadMem_470a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470a9f = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470a9f)
  store %struct.Memory* %call_470a9f, %struct.Memory** %MEMORY

  ; Code: movw (%rax), %cx	 RIP: 470aa3	 Bytes: 3
  %loadMem_470aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470aa3 = call %struct.Memory* @routine_movw___rax____cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470aa3)
  store %struct.Memory* %call_470aa3, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xde(%rbp)	 RIP: 470aa6	 Bytes: 7
  %loadMem_470aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470aa6 = call %struct.Memory* @routine_movw__cx__MINUS0xde__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470aa6)
  store %struct.Memory* %call_470aa6, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rax	 RIP: 470aad	 Bytes: 4
  %loadMem_470aad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470aad = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470aad)
  store %struct.Memory* %call_470aad, %struct.Memory** %MEMORY

  ; Code: movw 0x2(%rax), %cx	 RIP: 470ab1	 Bytes: 4
  %loadMem_470ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ab1 = call %struct.Memory* @routine_movw_0x2__rax____cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ab1)
  store %struct.Memory* %call_470ab1, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xe0(%rbp)	 RIP: 470ab5	 Bytes: 7
  %loadMem_470ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ab5 = call %struct.Memory* @routine_movw__cx__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ab5)
  store %struct.Memory* %call_470ab5, %struct.Memory** %MEMORY

  ; Code: movw -0xea(%rbp), %cx	 RIP: 470abc	 Bytes: 7
  %loadMem_470abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470abc = call %struct.Memory* @routine_movw_MINUS0xea__rbp____cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470abc)
  store %struct.Memory* %call_470abc, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xe2(%rbp)	 RIP: 470ac3	 Bytes: 7
  %loadMem_470ac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ac3 = call %struct.Memory* @routine_movw__cx__MINUS0xe2__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ac3)
  store %struct.Memory* %call_470ac3, %struct.Memory** %MEMORY

  ; Code: movw -0xe8(%rbp), %cx	 RIP: 470aca	 Bytes: 7
  %loadMem_470aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470aca = call %struct.Memory* @routine_movw_MINUS0xe8__rbp____cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470aca)
  store %struct.Memory* %call_470aca, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xe4(%rbp)	 RIP: 470ad1	 Bytes: 7
  %loadMem_470ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ad1 = call %struct.Memory* @routine_movw__cx__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ad1)
  store %struct.Memory* %call_470ad1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x54(%rbp)	 RIP: 470ad8	 Bytes: 4
  %loadMem_470ad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ad8 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ad8)
  store %struct.Memory* %call_470ad8, %struct.Memory** %MEMORY

  ; Code: je .L_470b19	 RIP: 470adc	 Bytes: 6
  %loadMem_470adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470adc = call %struct.Memory* @routine_je_.L_470b19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470adc, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_470adc, %struct.Memory** %MEMORY

  %loadBr_470adc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470adc = icmp eq i8 %loadBr_470adc, 1
  br i1 %cmpBr_470adc, label %block_.L_470b19, label %block_470ae2

block_470ae2:
  ; Code: movw -0xd6(%rbp), %ax	 RIP: 470ae2	 Bytes: 7
  %loadMem_470ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ae2 = call %struct.Memory* @routine_movw_MINUS0xd6__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ae2)
  store %struct.Memory* %call_470ae2, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xda(%rbp)	 RIP: 470ae9	 Bytes: 7
  %loadMem_470ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ae9 = call %struct.Memory* @routine_movw__ax__MINUS0xda__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ae9)
  store %struct.Memory* %call_470ae9, %struct.Memory** %MEMORY

  ; Code: movw -0xd8(%rbp), %ax	 RIP: 470af0	 Bytes: 7
  %loadMem_470af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470af0 = call %struct.Memory* @routine_movw_MINUS0xd8__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470af0)
  store %struct.Memory* %call_470af0, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xdc(%rbp)	 RIP: 470af7	 Bytes: 7
  %loadMem_470af7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470af7 = call %struct.Memory* @routine_movw__ax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470af7)
  store %struct.Memory* %call_470af7, %struct.Memory** %MEMORY

  ; Code: movw -0x4e(%rbp), %ax	 RIP: 470afe	 Bytes: 4
  %loadMem_470afe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470afe = call %struct.Memory* @routine_movw_MINUS0x4e__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470afe)
  store %struct.Memory* %call_470afe, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xd6(%rbp)	 RIP: 470b02	 Bytes: 7
  %loadMem_470b02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b02 = call %struct.Memory* @routine_movw__ax__MINUS0xd6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b02)
  store %struct.Memory* %call_470b02, %struct.Memory** %MEMORY

  ; Code: movw -0x50(%rbp), %ax	 RIP: 470b09	 Bytes: 4
  %loadMem_470b09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b09 = call %struct.Memory* @routine_movw_MINUS0x50__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b09)
  store %struct.Memory* %call_470b09, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xd8(%rbp)	 RIP: 470b0d	 Bytes: 7
  %loadMem_470b0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b0d = call %struct.Memory* @routine_movw__ax__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b0d)
  store %struct.Memory* %call_470b0d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_470b5d	 RIP: 470b14	 Bytes: 5
  %loadMem_470b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b14 = call %struct.Memory* @routine_jmpq_.L_470b5d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b14, i64 73, i64 5)
  store %struct.Memory* %call_470b14, %struct.Memory** %MEMORY

  br label %block_.L_470b5d

  ; Code: .L_470b19:	 RIP: 470b19	 Bytes: 0
block_.L_470b19:

  ; Code: movw -0x4e(%rbp), %ax	 RIP: 470b19	 Bytes: 4
  %loadMem_470b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b19 = call %struct.Memory* @routine_movw_MINUS0x4e__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b19)
  store %struct.Memory* %call_470b19, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xda(%rbp)	 RIP: 470b1d	 Bytes: 7
  %loadMem_470b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b1d = call %struct.Memory* @routine_movw__ax__MINUS0xda__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b1d)
  store %struct.Memory* %call_470b1d, %struct.Memory** %MEMORY

  ; Code: movw -0x50(%rbp), %ax	 RIP: 470b24	 Bytes: 4
  %loadMem_470b24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b24 = call %struct.Memory* @routine_movw_MINUS0x50__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b24)
  store %struct.Memory* %call_470b24, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xdc(%rbp)	 RIP: 470b28	 Bytes: 7
  %loadMem_470b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b28 = call %struct.Memory* @routine_movw__ax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b28)
  store %struct.Memory* %call_470b28, %struct.Memory** %MEMORY

  ; Code: movswl -0xe2(%rbp), %ecx	 RIP: 470b2f	 Bytes: 7
  %loadMem_470b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b2f = call %struct.Memory* @routine_movswl_MINUS0xe2__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b2f)
  store %struct.Memory* %call_470b2f, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 470b36	 Bytes: 3
  %loadMem_470b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b36 = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b36)
  store %struct.Memory* %call_470b36, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 470b39	 Bytes: 3
  %loadMem_470b39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b39 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b39)
  store %struct.Memory* %call_470b39, %struct.Memory** %MEMORY

  ; Code: movw %cx, %ax	 RIP: 470b3c	 Bytes: 3
  %loadMem_470b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b3c = call %struct.Memory* @routine_movw__cx___ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b3c)
  store %struct.Memory* %call_470b3c, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xd6(%rbp)	 RIP: 470b3f	 Bytes: 7
  %loadMem_470b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b3f = call %struct.Memory* @routine_movw__ax__MINUS0xd6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b3f)
  store %struct.Memory* %call_470b3f, %struct.Memory** %MEMORY

  ; Code: movswl -0xe4(%rbp), %ecx	 RIP: 470b46	 Bytes: 7
  %loadMem_470b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b46 = call %struct.Memory* @routine_movswl_MINUS0xe4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b46)
  store %struct.Memory* %call_470b46, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 470b4d	 Bytes: 3
  %loadMem_470b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b4d = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b4d)
  store %struct.Memory* %call_470b4d, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 470b50	 Bytes: 3
  %loadMem_470b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b50 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b50)
  store %struct.Memory* %call_470b50, %struct.Memory** %MEMORY

  ; Code: movw %cx, %ax	 RIP: 470b53	 Bytes: 3
  %loadMem_470b53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b53 = call %struct.Memory* @routine_movw__cx___ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b53)
  store %struct.Memory* %call_470b53, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0xd8(%rbp)	 RIP: 470b56	 Bytes: 7
  %loadMem_470b56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b56 = call %struct.Memory* @routine_movw__ax__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b56)
  store %struct.Memory* %call_470b56, %struct.Memory** %MEMORY

  ; Code: .L_470b5d:	 RIP: 470b5d	 Bytes: 0
  br label %block_.L_470b5d
block_.L_470b5d:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 470b5d	 Bytes: 3
  %loadMem_470b5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b5d = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b5d)
  store %struct.Memory* %call_470b5d, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 470b60	 Bytes: 3
  %loadMem_470b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b60 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b60)
  store %struct.Memory* %call_470b60, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xe6(%rbp)	 RIP: 470b63	 Bytes: 7
  %loadMem_470b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b63 = call %struct.Memory* @routine_movw__cx__MINUS0xe6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b63)
  store %struct.Memory* %call_470b63, %struct.Memory** %MEMORY

  ; Code: .L_470b6a:	 RIP: 470b6a	 Bytes: 0
  br label %block_.L_470b6a
block_.L_470b6a:

  ; Code: movq $0x6cbc30, %rdi	 RIP: 470b6a	 Bytes: 10
  %loadMem_470b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b6a = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b6a)
  store %struct.Memory* %call_470b6a, %struct.Memory** %MEMORY

  ; Code: leaq -0xd6(%rbp), %rax	 RIP: 470b74	 Bytes: 7
  %loadMem_470b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b74 = call %struct.Memory* @routine_leaq_MINUS0xd6__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b74)
  store %struct.Memory* %call_470b74, %struct.Memory** %MEMORY

  ; Code: leaq -0xd8(%rbp), %rcx	 RIP: 470b7b	 Bytes: 7
  %loadMem_470b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b7b = call %struct.Memory* @routine_leaq_MINUS0xd8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b7b)
  store %struct.Memory* %call_470b7b, %struct.Memory** %MEMORY

  ; Code: leaq -0xda(%rbp), %rdx	 RIP: 470b82	 Bytes: 7
  %loadMem_470b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b82 = call %struct.Memory* @routine_leaq_MINUS0xda__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b82)
  store %struct.Memory* %call_470b82, %struct.Memory** %MEMORY

  ; Code: leaq -0xdc(%rbp), %rsi	 RIP: 470b89	 Bytes: 7
  %loadMem_470b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b89 = call %struct.Memory* @routine_leaq_MINUS0xdc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b89)
  store %struct.Memory* %call_470b89, %struct.Memory** %MEMORY

  ; Code: movw -0x2a(%rbp), %r8w	 RIP: 470b90	 Bytes: 5
  %loadMem_470b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b90 = call %struct.Memory* @routine_movw_MINUS0x2a__rbp____r8w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b90)
  store %struct.Memory* %call_470b90, %struct.Memory** %MEMORY

  ; Code: movswl -0xe6(%rbp), %r9d	 RIP: 470b95	 Bytes: 8
  %loadMem_470b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b95 = call %struct.Memory* @routine_movswl_MINUS0xe6__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b95)
  store %struct.Memory* %call_470b95, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r10d	 RIP: 470b9d	 Bytes: 4
  %loadMem_470b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470b9d = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470b9d)
  store %struct.Memory* %call_470b9d, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %r11d	 RIP: 470ba1	 Bytes: 4
  %loadMem_470ba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ba1 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ba1)
  store %struct.Memory* %call_470ba1, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %ebx	 RIP: 470ba5	 Bytes: 3
  %loadMem_470ba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ba5 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ba5)
  store %struct.Memory* %call_470ba5, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %r14d	 RIP: 470ba8	 Bytes: 4
  %loadMem_470ba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ba8 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ba8)
  store %struct.Memory* %call_470ba8, %struct.Memory** %MEMORY

  ; Code: movw -0xde(%rbp), %r15w	 RIP: 470bac	 Bytes: 8
  %loadMem_470bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bac = call %struct.Memory* @routine_movw_MINUS0xde__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bac)
  store %struct.Memory* %call_470bac, %struct.Memory** %MEMORY

  ; Code: movw -0xe0(%rbp), %r12w	 RIP: 470bb4	 Bytes: 8
  %loadMem_470bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bb4 = call %struct.Memory* @routine_movw_MINUS0xe0__rbp____r12w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bb4)
  store %struct.Memory* %call_470bb4, %struct.Memory** %MEMORY

  ; Code: movw -0xe2(%rbp), %r13w	 RIP: 470bbc	 Bytes: 8
  %loadMem_470bbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bbc = call %struct.Memory* @routine_movw_MINUS0xe2__rbp____r13w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bbc)
  store %struct.Memory* %call_470bbc, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x1d8(%rbp)	 RIP: 470bc4	 Bytes: 7
  %loadMem_470bc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bc4 = call %struct.Memory* @routine_movq__rsi__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bc4)
  store %struct.Memory* %call_470bc4, %struct.Memory** %MEMORY

  ; Code: movw -0xe4(%rbp), %si	 RIP: 470bcb	 Bytes: 7
  %loadMem_470bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bcb = call %struct.Memory* @routine_movw_MINUS0xe4__rbp____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bcb)
  store %struct.Memory* %call_470bcb, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x1e0(%rbp)	 RIP: 470bd2	 Bytes: 7
  %loadMem_470bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bd2 = call %struct.Memory* @routine_movq__rax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bd2)
  store %struct.Memory* %call_470bd2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rax	 RIP: 470bd9	 Bytes: 8
  %loadMem_470bd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bd9 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bd9)
  store %struct.Memory* %call_470bd9, %struct.Memory** %MEMORY

  ; Code: movl 0x4f0(%rax), %eax	 RIP: 470be1	 Bytes: 6
  %loadMem_470be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470be1 = call %struct.Memory* @routine_movl_0x4f0__rax____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470be1)
  store %struct.Memory* %call_470be1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e4(%rbp)	 RIP: 470be7	 Bytes: 6
  %loadMem_470be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470be7 = call %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470be7)
  store %struct.Memory* %call_470be7, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %eax	 RIP: 470bed	 Bytes: 3
  %loadMem_470bed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bed = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bed)
  store %struct.Memory* %call_470bed, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x1f0(%rbp)	 RIP: 470bf0	 Bytes: 7
  %loadMem_470bf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bf0 = call %struct.Memory* @routine_movq__rcx__MINUS0x1f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bf0)
  store %struct.Memory* %call_470bf0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 470bf7	 Bytes: 2
  %loadMem_470bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bf7 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bf7)
  store %struct.Memory* %call_470bf7, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %eax	 RIP: 470bf9	 Bytes: 6
  %loadMem_470bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bf9 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bf9)
  store %struct.Memory* %call_470bf9, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 470bff	 Bytes: 2
  %loadMem_470bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470bff = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470bff)
  store %struct.Memory* %call_470bff, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %ecx	 RIP: 470c01	 Bytes: 6
  %loadMem_470c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c01 = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c01)
  store %struct.Memory* %call_470c01, %struct.Memory** %MEMORY

  ; Code: movsd -0x48(%rbp), %xmm0	 RIP: 470c07	 Bytes: 5
  %loadMem_470c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c07 = call %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c07)
  store %struct.Memory* %call_470c07, %struct.Memory** %MEMORY

  ; Code: movswl %r8w, %r8d	 RIP: 470c0c	 Bytes: 4
  %loadMem_470c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c0c = call %struct.Memory* @routine_movswl__r8w___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c0c)
  store %struct.Memory* %call_470c0c, %struct.Memory** %MEMORY

  ; Code: movw %si, -0x1f2(%rbp)	 RIP: 470c10	 Bytes: 7
  %loadMem_470c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c10 = call %struct.Memory* @routine_movw__si__MINUS0x1f2__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c10)
  store %struct.Memory* %call_470c10, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %esi	 RIP: 470c17	 Bytes: 3
  %loadMem_470c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c17 = call %struct.Memory* @routine_movl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c17)
  store %struct.Memory* %call_470c17, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x200(%rbp)	 RIP: 470c1a	 Bytes: 7
  %loadMem_470c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c1a = call %struct.Memory* @routine_movq__rdx__MINUS0x200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c1a)
  store %struct.Memory* %call_470c1a, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %edx	 RIP: 470c21	 Bytes: 3
  %loadMem_470c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c21 = call %struct.Memory* @routine_movl__r9d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c21)
  store %struct.Memory* %call_470c21, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x204(%rbp)	 RIP: 470c24	 Bytes: 6
  %loadMem_470c24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c24 = call %struct.Memory* @routine_movl__ecx__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c24)
  store %struct.Memory* %call_470c24, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %ecx	 RIP: 470c2a	 Bytes: 3
  %loadMem_470c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c2a = call %struct.Memory* @routine_movl__r10d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c2a)
  store %struct.Memory* %call_470c2a, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r8d	 RIP: 470c2d	 Bytes: 3
  %loadMem_470c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c2d = call %struct.Memory* @routine_movl__r11d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c2d)
  store %struct.Memory* %call_470c2d, %struct.Memory** %MEMORY

  ; Code: movl %ebx, %r9d	 RIP: 470c30	 Bytes: 3
  %loadMem_470c30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c30 = call %struct.Memory* @routine_movl__ebx___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c30)
  store %struct.Memory* %call_470c30, %struct.Memory** %MEMORY

  ; Code: movl %r14d, (%rsp)	 RIP: 470c33	 Bytes: 4
  %loadMem_470c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c33 = call %struct.Memory* @routine_movl__r14d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c33)
  store %struct.Memory* %call_470c33, %struct.Memory** %MEMORY

  ; Code: movswl %r15w, %r10d	 RIP: 470c37	 Bytes: 4
  %loadMem_470c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c37 = call %struct.Memory* @routine_movswl__r15w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c37)
  store %struct.Memory* %call_470c37, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 470c3b	 Bytes: 5
  %loadMem_470c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c3b = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c3b)
  store %struct.Memory* %call_470c3b, %struct.Memory** %MEMORY

  ; Code: movswl %r12w, %r10d	 RIP: 470c40	 Bytes: 4
  %loadMem_470c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c40 = call %struct.Memory* @routine_movswl__r12w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c40)
  store %struct.Memory* %call_470c40, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x10(%rsp)	 RIP: 470c44	 Bytes: 5
  %loadMem_470c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c44 = call %struct.Memory* @routine_movl__r10d__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c44)
  store %struct.Memory* %call_470c44, %struct.Memory** %MEMORY

  ; Code: movswl %r13w, %r10d	 RIP: 470c49	 Bytes: 4
  %loadMem_470c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c49 = call %struct.Memory* @routine_movswl__r13w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c49)
  store %struct.Memory* %call_470c49, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x18(%rsp)	 RIP: 470c4d	 Bytes: 5
  %loadMem_470c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c4d = call %struct.Memory* @routine_movl__r10d__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c4d)
  store %struct.Memory* %call_470c4d, %struct.Memory** %MEMORY

  ; Code: movw -0x1f2(%rbp), %r15w	 RIP: 470c52	 Bytes: 8
  %loadMem_470c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c52 = call %struct.Memory* @routine_movw_MINUS0x1f2__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c52)
  store %struct.Memory* %call_470c52, %struct.Memory** %MEMORY

  ; Code: movswl %r15w, %r10d	 RIP: 470c5a	 Bytes: 4
  %loadMem_470c5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c5a = call %struct.Memory* @routine_movswl__r15w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c5a)
  store %struct.Memory* %call_470c5a, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x20(%rsp)	 RIP: 470c5e	 Bytes: 5
  %loadMem_470c5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c5e = call %struct.Memory* @routine_movl__r10d__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c5e)
  store %struct.Memory* %call_470c5e, %struct.Memory** %MEMORY

  ; Code: movq -0x1e0(%rbp), %r10	 RIP: 470c63	 Bytes: 7
  %loadMem_470c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c63 = call %struct.Memory* @routine_movq_MINUS0x1e0__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c63)
  store %struct.Memory* %call_470c63, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x28(%rsp)	 RIP: 470c6a	 Bytes: 5
  %loadMem_470c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c6a = call %struct.Memory* @routine_movq__r10__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c6a)
  store %struct.Memory* %call_470c6a, %struct.Memory** %MEMORY

  ; Code: movq -0x1f0(%rbp), %r10	 RIP: 470c6f	 Bytes: 7
  %loadMem_470c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c6f = call %struct.Memory* @routine_movq_MINUS0x1f0__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c6f)
  store %struct.Memory* %call_470c6f, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x30(%rsp)	 RIP: 470c76	 Bytes: 5
  %loadMem_470c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c76 = call %struct.Memory* @routine_movq__r10__0x30__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c76)
  store %struct.Memory* %call_470c76, %struct.Memory** %MEMORY

  ; Code: movq -0x200(%rbp), %r10	 RIP: 470c7b	 Bytes: 7
  %loadMem_470c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c7b = call %struct.Memory* @routine_movq_MINUS0x200__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c7b)
  store %struct.Memory* %call_470c7b, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x38(%rsp)	 RIP: 470c82	 Bytes: 5
  %loadMem_470c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c82 = call %struct.Memory* @routine_movq__r10__0x38__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c82)
  store %struct.Memory* %call_470c82, %struct.Memory** %MEMORY

  ; Code: movq -0x1d8(%rbp), %r10	 RIP: 470c87	 Bytes: 7
  %loadMem_470c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c87 = call %struct.Memory* @routine_movq_MINUS0x1d8__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c87)
  store %struct.Memory* %call_470c87, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x40(%rsp)	 RIP: 470c8e	 Bytes: 5
  %loadMem_470c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c8e = call %struct.Memory* @routine_movq__r10__0x40__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c8e)
  store %struct.Memory* %call_470c8e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x48(%rsp)	 RIP: 470c93	 Bytes: 4
  %loadMem_470c93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c93 = call %struct.Memory* @routine_movl__eax__0x48__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c93)
  store %struct.Memory* %call_470c93, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %eax	 RIP: 470c97	 Bytes: 6
  %loadMem_470c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c97 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c97)
  store %struct.Memory* %call_470c97, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x50(%rsp)	 RIP: 470c9d	 Bytes: 4
  %loadMem_470c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470c9d = call %struct.Memory* @routine_movl__eax__0x50__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470c9d)
  store %struct.Memory* %call_470c9d, %struct.Memory** %MEMORY

  ; Code: callq .FullPelBlockMotionBiPred	 RIP: 470ca1	 Bytes: 5
  %loadMem1_470ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_470ca1 = call %struct.Memory* @routine_callq_.FullPelBlockMotionBiPred(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_470ca1, i64 -60209, i64 5, i64 5)
  store %struct.Memory* %call1_470ca1, %struct.Memory** %MEMORY

  %loadMem2_470ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_470ca1 = load i64, i64* %3
  %call2_470ca1 = call %struct.Memory* @sub_462170.FullPelBlockMotionBiPred(%struct.State* %0, i64  %loadPC_470ca1, %struct.Memory* %loadMem2_470ca1)
  store %struct.Memory* %call2_470ca1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 470ca6	 Bytes: 6
  %loadMem_470ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ca6 = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ca6)
  store %struct.Memory* %call_470ca6, %struct.Memory** %MEMORY

  ; Code: movw -0xda(%rbp), %r15w	 RIP: 470cac	 Bytes: 8
  %loadMem_470cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cac = call %struct.Memory* @routine_movw_MINUS0xda__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cac)
  store %struct.Memory* %call_470cac, %struct.Memory** %MEMORY

  ; Code: movw %r15w, -0x4e(%rbp)	 RIP: 470cb4	 Bytes: 5
  %loadMem_470cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cb4 = call %struct.Memory* @routine_movw__r15w__MINUS0x4e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cb4)
  store %struct.Memory* %call_470cb4, %struct.Memory** %MEMORY

  ; Code: movw -0xdc(%rbp), %r15w	 RIP: 470cb9	 Bytes: 8
  %loadMem_470cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cb9 = call %struct.Memory* @routine_movw_MINUS0xdc__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cb9)
  store %struct.Memory* %call_470cb9, %struct.Memory** %MEMORY

  ; Code: movw %r15w, -0x50(%rbp)	 RIP: 470cc1	 Bytes: 5
  %loadMem_470cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cc1 = call %struct.Memory* @routine_movw__r15w__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cc1)
  store %struct.Memory* %call_470cc1, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %eax	 RIP: 470cc6	 Bytes: 3
  %loadMem_470cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cc6 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cc6)
  store %struct.Memory* %call_470cc6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 470cc9	 Bytes: 3
  %loadMem_470cc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cc9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cc9)
  store %struct.Memory* %call_470cc9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 470ccc	 Bytes: 3
  %loadMem_470ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ccc = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ccc)
  store %struct.Memory* %call_470ccc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4709de	 RIP: 470ccf	 Bytes: 5
  %loadMem_470ccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ccf = call %struct.Memory* @routine_jmpq_.L_4709de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ccf, i64 -753, i64 5)
  store %struct.Memory* %call_470ccf, %struct.Memory** %MEMORY

  br label %block_.L_4709de

  ; Code: .L_470cd4:	 RIP: 470cd4	 Bytes: 0
block_.L_470cd4:

  ; Code: movswl -0xda(%rbp), %eax	 RIP: 470cd4	 Bytes: 7
  %loadMem_470cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cd4 = call %struct.Memory* @routine_movswl_MINUS0xda__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cd4)
  store %struct.Memory* %call_470cd4, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 470cdb	 Bytes: 3
  %loadMem_470cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cdb = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cdb)
  store %struct.Memory* %call_470cdb, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 470cde	 Bytes: 3
  %loadMem_470cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cde = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cde)
  store %struct.Memory* %call_470cde, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xda(%rbp)	 RIP: 470ce1	 Bytes: 7
  %loadMem_470ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ce1 = call %struct.Memory* @routine_movw__cx__MINUS0xda__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ce1)
  store %struct.Memory* %call_470ce1, %struct.Memory** %MEMORY

  ; Code: movswl -0xdc(%rbp), %eax	 RIP: 470ce8	 Bytes: 7
  %loadMem_470ce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ce8 = call %struct.Memory* @routine_movswl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ce8)
  store %struct.Memory* %call_470ce8, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 470cef	 Bytes: 3
  %loadMem_470cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cef = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cef)
  store %struct.Memory* %call_470cef, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 470cf2	 Bytes: 3
  %loadMem_470cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cf2 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cf2)
  store %struct.Memory* %call_470cf2, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xdc(%rbp)	 RIP: 470cf5	 Bytes: 7
  %loadMem_470cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cf5 = call %struct.Memory* @routine_movw__cx__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cf5)
  store %struct.Memory* %call_470cf5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdx	 RIP: 470cfc	 Bytes: 8
  %loadMem_470cfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470cfc = call %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470cfc)
  store %struct.Memory* %call_470cfc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x4f4(%rdx)	 RIP: 470d04	 Bytes: 7
  %loadMem_470d04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d04 = call %struct.Memory* @routine_cmpl__0x0__0x4f4__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d04)
  store %struct.Memory* %call_470d04, %struct.Memory** %MEMORY

  ; Code: je .L_470e18	 RIP: 470d0b	 Bytes: 6
  %loadMem_470d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d0b = call %struct.Memory* @routine_je_.L_470e18(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d0b, i8* %BRANCH_TAKEN, i64 269, i64 6, i64 6)
  store %struct.Memory* %call_470d0b, %struct.Memory** %MEMORY

  %loadBr_470d0b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470d0b = icmp eq i8 %loadBr_470d0b, 1
  br i1 %cmpBr_470d0b, label %block_.L_470e18, label %block_470d11

block_470d11:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 470d11	 Bytes: 8
  %loadMem_470d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d11 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d11)
  store %struct.Memory* %call_470d11, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 470d19	 Bytes: 4
  %loadMem_470d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d19 = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d19)
  store %struct.Memory* %call_470d19, %struct.Memory** %MEMORY

  ; Code: je .L_470d2c	 RIP: 470d1d	 Bytes: 6
  %loadMem_470d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d1d = call %struct.Memory* @routine_je_.L_470d2c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d1d, i8* %BRANCH_TAKEN, i64 15, i64 6, i64 6)
  store %struct.Memory* %call_470d1d, %struct.Memory** %MEMORY

  %loadBr_470d1d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470d1d = icmp eq i8 %loadBr_470d1d, 1
  br i1 %cmpBr_470d1d, label %block_.L_470d2c, label %block_470d23

block_470d23:
  ; Code: movl -0x5c(%rbp), %eax	 RIP: 470d23	 Bytes: 3
  %loadMem_470d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d23 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d23)
  store %struct.Memory* %call_470d23, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 470d26	 Bytes: 6
  %loadMem_470d26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d26 = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d26)
  store %struct.Memory* %call_470d26, %struct.Memory** %MEMORY

  ; Code: .L_470d2c:	 RIP: 470d2c	 Bytes: 0
  br label %block_.L_470d2c
block_.L_470d2c:

  ; Code: movq $0x6cbc30, %rdi	 RIP: 470d2c	 Bytes: 10
  %loadMem_470d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d2c = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d2c)
  store %struct.Memory* %call_470d2c, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 470d36	 Bytes: 2
  %loadMem_470d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d36 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d36)
  store %struct.Memory* %call_470d36, %struct.Memory** %MEMORY

  ; Code: leaq -0xd6(%rbp), %rax	 RIP: 470d38	 Bytes: 7
  %loadMem_470d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d38 = call %struct.Memory* @routine_leaq_MINUS0xd6__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d38)
  store %struct.Memory* %call_470d38, %struct.Memory** %MEMORY

  ; Code: leaq -0xd8(%rbp), %rcx	 RIP: 470d3f	 Bytes: 7
  %loadMem_470d3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d3f = call %struct.Memory* @routine_leaq_MINUS0xd8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d3f)
  store %struct.Memory* %call_470d3f, %struct.Memory** %MEMORY

  ; Code: leaq -0xda(%rbp), %rdx	 RIP: 470d46	 Bytes: 7
  %loadMem_470d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d46 = call %struct.Memory* @routine_leaq_MINUS0xda__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d46)
  store %struct.Memory* %call_470d46, %struct.Memory** %MEMORY

  ; Code: leaq -0xdc(%rbp), %r8	 RIP: 470d4d	 Bytes: 7
  %loadMem_470d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d4d = call %struct.Memory* @routine_leaq_MINUS0xdc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d4d)
  store %struct.Memory* %call_470d4d, %struct.Memory** %MEMORY

  ; Code: movl $0x9, %r9d	 RIP: 470d54	 Bytes: 6
  %loadMem_470d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d54 = call %struct.Memory* @routine_movl__0x9___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d54)
  store %struct.Memory* %call_470d54, %struct.Memory** %MEMORY

  ; Code: movsd 0x40b26(%rip), %xmm0	 RIP: 470d5a	 Bytes: 8
  %loadMem_470d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d5a = call %struct.Memory* @routine_movsd_0x40b26__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d5a)
  store %struct.Memory* %call_470d5a, %struct.Memory** %MEMORY

  ; Code: movswl -0xe6(%rbp), %r10d	 RIP: 470d62	 Bytes: 8
  %loadMem_470d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d62 = call %struct.Memory* @routine_movswl_MINUS0xe6__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d62)
  store %struct.Memory* %call_470d62, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r11d	 RIP: 470d6a	 Bytes: 4
  %loadMem_470d6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d6a = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d6a)
  store %struct.Memory* %call_470d6a, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %ebx	 RIP: 470d6e	 Bytes: 3
  %loadMem_470d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d6e = call %struct.Memory* @routine_movl_MINUS0x78__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d6e)
  store %struct.Memory* %call_470d6e, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %r14d	 RIP: 470d71	 Bytes: 4
  %loadMem_470d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d71 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d71)
  store %struct.Memory* %call_470d71, %struct.Memory** %MEMORY

  ; Code: movw -0xe2(%rbp), %r15w	 RIP: 470d75	 Bytes: 8
  %loadMem_470d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d75 = call %struct.Memory* @routine_movw_MINUS0xe2__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d75)
  store %struct.Memory* %call_470d75, %struct.Memory** %MEMORY

  ; Code: movw -0xe4(%rbp), %r12w	 RIP: 470d7d	 Bytes: 8
  %loadMem_470d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d7d = call %struct.Memory* @routine_movw_MINUS0xe4__rbp____r12w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d7d)
  store %struct.Memory* %call_470d7d, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %r13d	 RIP: 470d85	 Bytes: 7
  %loadMem_470d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d85 = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____r13d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d85)
  store %struct.Memory* %call_470d85, %struct.Memory** %MEMORY

  ; Code: mulsd -0x48(%rbp), %xmm0	 RIP: 470d8c	 Bytes: 5
  %loadMem_470d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d8c = call %struct.Memory* @routine_mulsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d8c)
  store %struct.Memory* %call_470d8c, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x210(%rbp)	 RIP: 470d91	 Bytes: 7
  %loadMem_470d91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d91 = call %struct.Memory* @routine_movq__rdx__MINUS0x210__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d91)
  store %struct.Memory* %call_470d91, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %edx	 RIP: 470d98	 Bytes: 3
  %loadMem_470d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d98 = call %struct.Memory* @routine_movl__r10d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d98)
  store %struct.Memory* %call_470d98, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x218(%rbp)	 RIP: 470d9b	 Bytes: 7
  %loadMem_470d9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470d9b = call %struct.Memory* @routine_movq__rcx__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470d9b)
  store %struct.Memory* %call_470d9b, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %ecx	 RIP: 470da2	 Bytes: 3
  %loadMem_470da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470da2 = call %struct.Memory* @routine_movl__r11d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470da2)
  store %struct.Memory* %call_470da2, %struct.Memory** %MEMORY

  ; Code: movq %r8, -0x220(%rbp)	 RIP: 470da5	 Bytes: 7
  %loadMem_470da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470da5 = call %struct.Memory* @routine_movq__r8__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470da5)
  store %struct.Memory* %call_470da5, %struct.Memory** %MEMORY

  ; Code: movl %ebx, %r8d	 RIP: 470dac	 Bytes: 3
  %loadMem_470dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dac = call %struct.Memory* @routine_movl__ebx___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dac)
  store %struct.Memory* %call_470dac, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x224(%rbp)	 RIP: 470daf	 Bytes: 7
  %loadMem_470daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470daf = call %struct.Memory* @routine_movl__r9d__MINUS0x224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470daf)
  store %struct.Memory* %call_470daf, %struct.Memory** %MEMORY

  ; Code: movl %r14d, %r9d	 RIP: 470db6	 Bytes: 3
  %loadMem_470db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470db6 = call %struct.Memory* @routine_movl__r14d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470db6)
  store %struct.Memory* %call_470db6, %struct.Memory** %MEMORY

  ; Code: movswl %r15w, %r10d	 RIP: 470db9	 Bytes: 4
  %loadMem_470db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470db9 = call %struct.Memory* @routine_movswl__r15w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470db9)
  store %struct.Memory* %call_470db9, %struct.Memory** %MEMORY

  ; Code: movl %r10d, (%rsp)	 RIP: 470dbd	 Bytes: 4
  %loadMem_470dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dbd = call %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dbd)
  store %struct.Memory* %call_470dbd, %struct.Memory** %MEMORY

  ; Code: movswl %r12w, %r10d	 RIP: 470dc1	 Bytes: 4
  %loadMem_470dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dc1 = call %struct.Memory* @routine_movswl__r12w___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dc1)
  store %struct.Memory* %call_470dc1, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 470dc5	 Bytes: 5
  %loadMem_470dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dc5 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dc5)
  store %struct.Memory* %call_470dc5, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rsp)	 RIP: 470dca	 Bytes: 5
  %loadMem_470dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dca = call %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dca)
  store %struct.Memory* %call_470dca, %struct.Memory** %MEMORY

  ; Code: movq -0x218(%rbp), %rax	 RIP: 470dcf	 Bytes: 7
  %loadMem_470dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dcf = call %struct.Memory* @routine_movq_MINUS0x218__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dcf)
  store %struct.Memory* %call_470dcf, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x18(%rsp)	 RIP: 470dd6	 Bytes: 5
  %loadMem_470dd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dd6 = call %struct.Memory* @routine_movq__rax__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dd6)
  store %struct.Memory* %call_470dd6, %struct.Memory** %MEMORY

  ; Code: movq -0x210(%rbp), %rax	 RIP: 470ddb	 Bytes: 7
  %loadMem_470ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ddb = call %struct.Memory* @routine_movq_MINUS0x210__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ddb)
  store %struct.Memory* %call_470ddb, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x20(%rsp)	 RIP: 470de2	 Bytes: 5
  %loadMem_470de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470de2 = call %struct.Memory* @routine_movq__rax__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470de2)
  store %struct.Memory* %call_470de2, %struct.Memory** %MEMORY

  ; Code: movq -0x220(%rbp), %rax	 RIP: 470de7	 Bytes: 7
  %loadMem_470de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470de7 = call %struct.Memory* @routine_movq_MINUS0x220__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470de7)
  store %struct.Memory* %call_470de7, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x28(%rsp)	 RIP: 470dee	 Bytes: 5
  %loadMem_470dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dee = call %struct.Memory* @routine_movq__rax__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dee)
  store %struct.Memory* %call_470dee, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x30(%rsp)	 RIP: 470df3	 Bytes: 8
  %loadMem_470df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470df3 = call %struct.Memory* @routine_movl__0x9__0x30__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470df3)
  store %struct.Memory* %call_470df3, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x38(%rsp)	 RIP: 470dfb	 Bytes: 8
  %loadMem_470dfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470dfb = call %struct.Memory* @routine_movl__0x9__0x38__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470dfb)
  store %struct.Memory* %call_470dfb, %struct.Memory** %MEMORY

  ; Code: movl %r13d, 0x40(%rsp)	 RIP: 470e03	 Bytes: 5
  %loadMem_470e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e03 = call %struct.Memory* @routine_movl__r13d__0x40__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e03)
  store %struct.Memory* %call_470e03, %struct.Memory** %MEMORY

  ; Code: callq .SubPelBlockSearchBiPred	 RIP: 470e08	 Bytes: 5
  %loadMem1_470e08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_470e08 = call %struct.Memory* @routine_callq_.SubPelBlockSearchBiPred(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_470e08, i64 -55608, i64 5, i64 5)
  store %struct.Memory* %call1_470e08, %struct.Memory** %MEMORY

  %loadMem2_470e08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_470e08 = load i64, i64* %3
  %call2_470e08 = call %struct.Memory* @sub_4634d0.SubPelBlockSearchBiPred(%struct.State* %0, i64  %loadPC_470e08, %struct.Memory* %loadMem2_470e08)
  store %struct.Memory* %call2_470e08, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 470e0d	 Bytes: 6
  %loadMem_470e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e0d = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e0d)
  store %struct.Memory* %call_470e0d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_470e40	 RIP: 470e13	 Bytes: 5
  %loadMem_470e13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e13 = call %struct.Memory* @routine_jmpq_.L_470e40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e13, i64 45, i64 5)
  store %struct.Memory* %call_470e13, %struct.Memory** %MEMORY

  br label %block_.L_470e40

  ; Code: .L_470e18:	 RIP: 470e18	 Bytes: 0
block_.L_470e18:

  ; Code: movswl -0xd6(%rbp), %eax	 RIP: 470e18	 Bytes: 7
  %loadMem_470e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e18 = call %struct.Memory* @routine_movswl_MINUS0xd6__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e18)
  store %struct.Memory* %call_470e18, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 470e1f	 Bytes: 3
  %loadMem_470e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e1f = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e1f)
  store %struct.Memory* %call_470e1f, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 470e22	 Bytes: 3
  %loadMem_470e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e22 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e22)
  store %struct.Memory* %call_470e22, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xd6(%rbp)	 RIP: 470e25	 Bytes: 7
  %loadMem_470e25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e25 = call %struct.Memory* @routine_movw__cx__MINUS0xd6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e25)
  store %struct.Memory* %call_470e25, %struct.Memory** %MEMORY

  ; Code: movswl -0xd8(%rbp), %eax	 RIP: 470e2c	 Bytes: 7
  %loadMem_470e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e2c = call %struct.Memory* @routine_movswl_MINUS0xd8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e2c)
  store %struct.Memory* %call_470e2c, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 470e33	 Bytes: 3
  %loadMem_470e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e33 = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e33)
  store %struct.Memory* %call_470e33, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 470e36	 Bytes: 3
  %loadMem_470e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e36 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e36)
  store %struct.Memory* %call_470e36, %struct.Memory** %MEMORY

  ; Code: movw %cx, -0xd8(%rbp)	 RIP: 470e39	 Bytes: 7
  %loadMem_470e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e39 = call %struct.Memory* @routine_movw__cx__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e39)
  store %struct.Memory* %call_470e39, %struct.Memory** %MEMORY

  ; Code: .L_470e40:	 RIP: 470e40	 Bytes: 0
  br label %block_.L_470e40
block_.L_470e40:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 470e40	 Bytes: 8
  %loadMem_470e40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e40 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e40)
  store %struct.Memory* %call_470e40, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x4f4(%rax)	 RIP: 470e48	 Bytes: 7
  %loadMem_470e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e48 = call %struct.Memory* @routine_cmpl__0x2__0x4f4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e48)
  store %struct.Memory* %call_470e48, %struct.Memory** %MEMORY

  ; Code: jne .L_470f6f	 RIP: 470e4f	 Bytes: 6
  %loadMem_470e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e4f = call %struct.Memory* @routine_jne_.L_470f6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e4f, i8* %BRANCH_TAKEN, i64 288, i64 6, i64 6)
  store %struct.Memory* %call_470e4f, %struct.Memory** %MEMORY

  %loadBr_470e4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470e4f = icmp eq i8 %loadBr_470e4f, 1
  br i1 %cmpBr_470e4f, label %block_.L_470f6f, label %block_470e55

block_470e55:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 470e55	 Bytes: 8
  %loadMem_470e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e55 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e55)
  store %struct.Memory* %call_470e55, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 470e5d	 Bytes: 4
  %loadMem_470e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e5d = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e5d)
  store %struct.Memory* %call_470e5d, %struct.Memory** %MEMORY

  ; Code: je .L_470e70	 RIP: 470e61	 Bytes: 6
  %loadMem_470e61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e61 = call %struct.Memory* @routine_je_.L_470e70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e61, i8* %BRANCH_TAKEN, i64 15, i64 6, i64 6)
  store %struct.Memory* %call_470e61, %struct.Memory** %MEMORY

  %loadBr_470e61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470e61 = icmp eq i8 %loadBr_470e61, 1
  br i1 %cmpBr_470e61, label %block_.L_470e70, label %block_470e67

block_470e67:
  ; Code: movl -0x5c(%rbp), %eax	 RIP: 470e67	 Bytes: 3
  %loadMem_470e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e67 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e67)
  store %struct.Memory* %call_470e67, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 470e6a	 Bytes: 6
  %loadMem_470e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e6a = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e6a)
  store %struct.Memory* %call_470e6a, %struct.Memory** %MEMORY

  ; Code: .L_470e70:	 RIP: 470e70	 Bytes: 0
  br label %block_.L_470e70
block_.L_470e70:

  ; Code: movq $0x6cbc30, %rdi	 RIP: 470e70	 Bytes: 10
  %loadMem_470e70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e70 = call %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e70)
  store %struct.Memory* %call_470e70, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 470e7a	 Bytes: 2
  %loadMem_470e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e7a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e7a)
  store %struct.Memory* %call_470e7a, %struct.Memory** %MEMORY

  ; Code: leaq -0x4e(%rbp), %rcx	 RIP: 470e7c	 Bytes: 4
  %loadMem_470e7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e7c = call %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e7c)
  store %struct.Memory* %call_470e7c, %struct.Memory** %MEMORY

  ; Code: leaq -0x50(%rbp), %rdx	 RIP: 470e80	 Bytes: 4
  %loadMem_470e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e80 = call %struct.Memory* @routine_leaq_MINUS0x50__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e80)
  store %struct.Memory* %call_470e80, %struct.Memory** %MEMORY

  ; Code: leaq -0xd6(%rbp), %rsi	 RIP: 470e84	 Bytes: 7
  %loadMem_470e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e84 = call %struct.Memory* @routine_leaq_MINUS0xd6__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e84)
  store %struct.Memory* %call_470e84, %struct.Memory** %MEMORY

  ; Code: leaq -0xd8(%rbp), %r8	 RIP: 470e8b	 Bytes: 7
  %loadMem_470e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e8b = call %struct.Memory* @routine_leaq_MINUS0xd8__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e8b)
  store %struct.Memory* %call_470e8b, %struct.Memory** %MEMORY

  ; Code: movl $0x9, %r9d	 RIP: 470e92	 Bytes: 6
  %loadMem_470e92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e92 = call %struct.Memory* @routine_movl__0x9___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e92)
  store %struct.Memory* %call_470e92, %struct.Memory** %MEMORY

  ; Code: movsd 0x409e8(%rip), %xmm0	 RIP: 470e98	 Bytes: 8
  %loadMem_470e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470e98 = call %struct.Memory* @routine_movsd_0x409e8__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470e98)
  store %struct.Memory* %call_470e98, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r10d	 RIP: 470ea0	 Bytes: 6
  %loadMem_470ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ea0 = call %struct.Memory* @routine_movl__0x1___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ea0)
  store %struct.Memory* %call_470ea0, %struct.Memory** %MEMORY

  ; Code: movswl -0xe6(%rbp), %r11d	 RIP: 470ea6	 Bytes: 8
  %loadMem_470ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ea6 = call %struct.Memory* @routine_movswl_MINUS0xe6__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ea6)
  store %struct.Memory* %call_470ea6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %r11d	 RIP: 470eae	 Bytes: 4
  %loadMem_470eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470eae = call %struct.Memory* @routine_cmpl__0x0___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470eae)
  store %struct.Memory* %call_470eae, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r11d	 RIP: 470eb2	 Bytes: 3
  %loadMem_470eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470eb2 = call %struct.Memory* @routine_movl__eax___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470eb2)
  store %struct.Memory* %call_470eb2, %struct.Memory** %MEMORY

  ; Code: cmovel %r10d, %r11d	 RIP: 470eb5	 Bytes: 4
  %loadMem_470eb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470eb5 = call %struct.Memory* @routine_cmovel__r10d___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470eb5)
  store %struct.Memory* %call_470eb5, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %r10d	 RIP: 470eb9	 Bytes: 4
  %loadMem_470eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470eb9 = call %struct.Memory* @routine_movl_MINUS0x74__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470eb9)
  store %struct.Memory* %call_470eb9, %struct.Memory** %MEMORY

  ; Code: movl -0x78(%rbp), %ebx	 RIP: 470ebd	 Bytes: 3
  %loadMem_470ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ebd = call %struct.Memory* @routine_movl_MINUS0x78__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ebd)
  store %struct.Memory* %call_470ebd, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %r14d	 RIP: 470ec0	 Bytes: 4
  %loadMem_470ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ec0 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ec0)
  store %struct.Memory* %call_470ec0, %struct.Memory** %MEMORY

  ; Code: movw -0x4a(%rbp), %r15w	 RIP: 470ec4	 Bytes: 5
  %loadMem_470ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ec4 = call %struct.Memory* @routine_movw_MINUS0x4a__rbp____r15w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ec4)
  store %struct.Memory* %call_470ec4, %struct.Memory** %MEMORY

  ; Code: movw -0x4c(%rbp), %r12w	 RIP: 470ec9	 Bytes: 5
  %loadMem_470ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ec9 = call %struct.Memory* @routine_movw_MINUS0x4c__rbp____r12w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ec9)
  store %struct.Memory* %call_470ec9, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %r13d	 RIP: 470ece	 Bytes: 7
  %loadMem_470ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ece = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____r13d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ece)
  store %struct.Memory* %call_470ece, %struct.Memory** %MEMORY

  ; Code: mulsd -0x48(%rbp), %xmm0	 RIP: 470ed5	 Bytes: 5
  %loadMem_470ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ed5 = call %struct.Memory* @routine_mulsd_MINUS0x48__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ed5)
  store %struct.Memory* %call_470ed5, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x230(%rbp)	 RIP: 470eda	 Bytes: 7
  %loadMem_470eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470eda = call %struct.Memory* @routine_movq__rsi__MINUS0x230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470eda)
  store %struct.Memory* %call_470eda, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 470ee1	 Bytes: 2
  %loadMem_470ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ee1 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ee1)
  store %struct.Memory* %call_470ee1, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x238(%rbp)	 RIP: 470ee3	 Bytes: 7
  %loadMem_470ee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ee3 = call %struct.Memory* @routine_movq__rdx__MINUS0x238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ee3)
  store %struct.Memory* %call_470ee3, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %edx	 RIP: 470eea	 Bytes: 3
  %loadMem_470eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470eea = call %struct.Memory* @routine_movl__r11d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470eea)
  store %struct.Memory* %call_470eea, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x240(%rbp)	 RIP: 470eed	 Bytes: 7
  %loadMem_470eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470eed = call %struct.Memory* @routine_movq__rcx__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470eed)
  store %struct.Memory* %call_470eed, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %ecx	 RIP: 470ef4	 Bytes: 3
  %loadMem_470ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ef4 = call %struct.Memory* @routine_movl__r10d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ef4)
  store %struct.Memory* %call_470ef4, %struct.Memory** %MEMORY

  ; Code: movq %r8, -0x248(%rbp)	 RIP: 470ef7	 Bytes: 7
  %loadMem_470ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ef7 = call %struct.Memory* @routine_movq__r8__MINUS0x248__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ef7)
  store %struct.Memory* %call_470ef7, %struct.Memory** %MEMORY

  ; Code: movl %ebx, %r8d	 RIP: 470efe	 Bytes: 3
  %loadMem_470efe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470efe = call %struct.Memory* @routine_movl__ebx___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470efe)
  store %struct.Memory* %call_470efe, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x24c(%rbp)	 RIP: 470f01	 Bytes: 7
  %loadMem_470f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f01 = call %struct.Memory* @routine_movl__r9d__MINUS0x24c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f01)
  store %struct.Memory* %call_470f01, %struct.Memory** %MEMORY

  ; Code: movl %r14d, %r9d	 RIP: 470f08	 Bytes: 3
  %loadMem_470f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f08 = call %struct.Memory* @routine_movl__r14d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f08)
  store %struct.Memory* %call_470f08, %struct.Memory** %MEMORY

  ; Code: movswl %r15w, %eax	 RIP: 470f0b	 Bytes: 4
  %loadMem_470f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f0b = call %struct.Memory* @routine_movswl__r15w___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f0b)
  store %struct.Memory* %call_470f0b, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsp)	 RIP: 470f0f	 Bytes: 3
  %loadMem_470f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f0f = call %struct.Memory* @routine_movl__eax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f0f)
  store %struct.Memory* %call_470f0f, %struct.Memory** %MEMORY

  ; Code: movswl %r12w, %eax	 RIP: 470f12	 Bytes: 4
  %loadMem_470f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f12 = call %struct.Memory* @routine_movswl__r12w___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f12)
  store %struct.Memory* %call_470f12, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x8(%rsp)	 RIP: 470f16	 Bytes: 4
  %loadMem_470f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f16 = call %struct.Memory* @routine_movl__eax__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f16)
  store %struct.Memory* %call_470f16, %struct.Memory** %MEMORY

  ; Code: movq -0x240(%rbp), %r10	 RIP: 470f1a	 Bytes: 7
  %loadMem_470f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f1a = call %struct.Memory* @routine_movq_MINUS0x240__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f1a)
  store %struct.Memory* %call_470f1a, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x10(%rsp)	 RIP: 470f21	 Bytes: 5
  %loadMem_470f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f21 = call %struct.Memory* @routine_movq__r10__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f21)
  store %struct.Memory* %call_470f21, %struct.Memory** %MEMORY

  ; Code: movq -0x238(%rbp), %r10	 RIP: 470f26	 Bytes: 7
  %loadMem_470f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f26 = call %struct.Memory* @routine_movq_MINUS0x238__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f26)
  store %struct.Memory* %call_470f26, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x18(%rsp)	 RIP: 470f2d	 Bytes: 5
  %loadMem_470f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f2d = call %struct.Memory* @routine_movq__r10__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f2d)
  store %struct.Memory* %call_470f2d, %struct.Memory** %MEMORY

  ; Code: movq -0x230(%rbp), %r10	 RIP: 470f32	 Bytes: 7
  %loadMem_470f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f32 = call %struct.Memory* @routine_movq_MINUS0x230__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f32)
  store %struct.Memory* %call_470f32, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x20(%rsp)	 RIP: 470f39	 Bytes: 5
  %loadMem_470f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f39 = call %struct.Memory* @routine_movq__r10__0x20__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f39)
  store %struct.Memory* %call_470f39, %struct.Memory** %MEMORY

  ; Code: movq -0x248(%rbp), %r10	 RIP: 470f3e	 Bytes: 7
  %loadMem_470f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f3e = call %struct.Memory* @routine_movq_MINUS0x248__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f3e)
  store %struct.Memory* %call_470f3e, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0x28(%rsp)	 RIP: 470f45	 Bytes: 5
  %loadMem_470f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f45 = call %struct.Memory* @routine_movq__r10__0x28__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f45)
  store %struct.Memory* %call_470f45, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x30(%rsp)	 RIP: 470f4a	 Bytes: 8
  %loadMem_470f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f4a = call %struct.Memory* @routine_movl__0x9__0x30__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f4a)
  store %struct.Memory* %call_470f4a, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x38(%rsp)	 RIP: 470f52	 Bytes: 8
  %loadMem_470f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f52 = call %struct.Memory* @routine_movl__0x9__0x38__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f52)
  store %struct.Memory* %call_470f52, %struct.Memory** %MEMORY

  ; Code: movl %r13d, 0x40(%rsp)	 RIP: 470f5a	 Bytes: 5
  %loadMem_470f5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f5a = call %struct.Memory* @routine_movl__r13d__0x40__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f5a)
  store %struct.Memory* %call_470f5a, %struct.Memory** %MEMORY

  ; Code: callq .SubPelBlockSearchBiPred	 RIP: 470f5f	 Bytes: 5
  %loadMem1_470f5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_470f5f = call %struct.Memory* @routine_callq_.SubPelBlockSearchBiPred(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_470f5f, i64 -55951, i64 5, i64 5)
  store %struct.Memory* %call1_470f5f, %struct.Memory** %MEMORY

  %loadMem2_470f5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_470f5f = load i64, i64* %3
  %call2_470f5f = call %struct.Memory* @sub_4634d0.SubPelBlockSearchBiPred(%struct.State* %0, i64  %loadPC_470f5f, %struct.Memory* %loadMem2_470f5f)
  store %struct.Memory* %call2_470f5f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 470f64	 Bytes: 6
  %loadMem_470f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f64 = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f64)
  store %struct.Memory* %call_470f64, %struct.Memory** %MEMORY

  ; Code: jmpq .L_470f85	 RIP: 470f6a	 Bytes: 5
  %loadMem_470f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f6a = call %struct.Memory* @routine_jmpq_.L_470f85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f6a, i64 27, i64 5)
  store %struct.Memory* %call_470f6a, %struct.Memory** %MEMORY

  br label %block_.L_470f85

  ; Code: .L_470f6f:	 RIP: 470f6f	 Bytes: 0
block_.L_470f6f:

  ; Code: movw -0xda(%rbp), %ax	 RIP: 470f6f	 Bytes: 7
  %loadMem_470f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f6f = call %struct.Memory* @routine_movw_MINUS0xda__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f6f)
  store %struct.Memory* %call_470f6f, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0x4e(%rbp)	 RIP: 470f76	 Bytes: 4
  %loadMem_470f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f76 = call %struct.Memory* @routine_movw__ax__MINUS0x4e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f76)
  store %struct.Memory* %call_470f76, %struct.Memory** %MEMORY

  ; Code: movw -0xdc(%rbp), %ax	 RIP: 470f7a	 Bytes: 7
  %loadMem_470f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f7a = call %struct.Memory* @routine_movw_MINUS0xdc__rbp____ax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f7a)
  store %struct.Memory* %call_470f7a, %struct.Memory** %MEMORY

  ; Code: movw %ax, -0x50(%rbp)	 RIP: 470f81	 Bytes: 4
  %loadMem_470f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f81 = call %struct.Memory* @routine_movw__ax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f81)
  store %struct.Memory* %call_470f81, %struct.Memory** %MEMORY

  ; Code: .L_470f85:	 RIP: 470f85	 Bytes: 0
  br label %block_.L_470f85
block_.L_470f85:

  ; Code: movl $0x0, -0x54(%rbp)	 RIP: 470f85	 Bytes: 7
  %loadMem_470f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f85 = call %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f85)
  store %struct.Memory* %call_470f85, %struct.Memory** %MEMORY

  ; Code: .L_470f8c:	 RIP: 470f8c	 Bytes: 0
  br label %block_.L_470f8c
block_.L_470f8c:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 470f8c	 Bytes: 3
  %loadMem_470f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f8c = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f8c)
  store %struct.Memory* %call_470f8c, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %ecx	 RIP: 470f8f	 Bytes: 3
  %loadMem_470f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f8f = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f8f)
  store %struct.Memory* %call_470f8f, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 470f92	 Bytes: 3
  %loadMem_470f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f92 = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f92)
  store %struct.Memory* %call_470f92, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 470f95	 Bytes: 2
  %loadMem_470f95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f95 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f95)
  store %struct.Memory* %call_470f95, %struct.Memory** %MEMORY

  ; Code: jge .L_4710f3	 RIP: 470f97	 Bytes: 6
  %loadMem_470f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f97 = call %struct.Memory* @routine_jge_.L_4710f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f97, i8* %BRANCH_TAKEN, i64 348, i64 6, i64 6)
  store %struct.Memory* %call_470f97, %struct.Memory** %MEMORY

  %loadBr_470f97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470f97 = icmp eq i8 %loadBr_470f97, 1
  br i1 %cmpBr_470f97, label %block_.L_4710f3, label %block_470f9d

block_470f9d:
  ; Code: movl $0x0, -0x58(%rbp)	 RIP: 470f9d	 Bytes: 7
  %loadMem_470f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470f9d = call %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470f9d)
  store %struct.Memory* %call_470f9d, %struct.Memory** %MEMORY

  ; Code: .L_470fa4:	 RIP: 470fa4	 Bytes: 0
  br label %block_.L_470fa4
block_.L_470fa4:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 470fa4	 Bytes: 3
  %loadMem_470fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fa4 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fa4)
  store %struct.Memory* %call_470fa4, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 470fa7	 Bytes: 3
  %loadMem_470fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fa7 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fa7)
  store %struct.Memory* %call_470fa7, %struct.Memory** %MEMORY

  ; Code: sarl $0x2, %ecx	 RIP: 470faa	 Bytes: 3
  %loadMem_470faa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470faa = call %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470faa)
  store %struct.Memory* %call_470faa, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 470fad	 Bytes: 2
  %loadMem_470fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fad = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fad)
  store %struct.Memory* %call_470fad, %struct.Memory** %MEMORY

  ; Code: jge .L_4710e0	 RIP: 470faf	 Bytes: 6
  %loadMem_470faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470faf = call %struct.Memory* @routine_jge_.L_4710e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470faf, i8* %BRANCH_TAKEN, i64 305, i64 6, i64 6)
  store %struct.Memory* %call_470faf, %struct.Memory** %MEMORY

  %loadBr_470faf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_470faf = icmp eq i8 %loadBr_470faf, 1
  br i1 %cmpBr_470faf, label %block_.L_4710e0, label %block_470fb5

block_470fb5:
  ; Code: xorl %eax, %eax	 RIP: 470fb5	 Bytes: 2
  %loadMem_470fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fb5 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fb5)
  store %struct.Memory* %call_470fb5, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 470fb7	 Bytes: 5
  %loadMem_470fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fb7 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fb7)
  store %struct.Memory* %call_470fb7, %struct.Memory** %MEMORY

  ; Code: movw -0x4e(%rbp), %dx	 RIP: 470fbc	 Bytes: 4
  %loadMem_470fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fbc = call %struct.Memory* @routine_movw_MINUS0x4e__rbp____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fbc)
  store %struct.Memory* %call_470fbc, %struct.Memory** %MEMORY

  ; Code: movq -0xd0(%rbp), %rsi	 RIP: 470fc0	 Bytes: 7
  %loadMem_470fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fc0 = call %struct.Memory* @routine_movq_MINUS0xd0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fc0)
  store %struct.Memory* %call_470fc0, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edi	 RIP: 470fc7	 Bytes: 3
  %loadMem_470fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fc7 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fc7)
  store %struct.Memory* %call_470fc7, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edi	 RIP: 470fca	 Bytes: 3
  %loadMem_470fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fca = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fca)
  store %struct.Memory* %call_470fca, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 470fcd	 Bytes: 3
  %loadMem_470fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fcd = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fcd)
  store %struct.Memory* %call_470fcd, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 470fd0	 Bytes: 4
  %loadMem_470fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fd0 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fd0)
  store %struct.Memory* %call_470fd0, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edi	 RIP: 470fd4	 Bytes: 3
  %loadMem_470fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fd4 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fd4)
  store %struct.Memory* %call_470fd4, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edi	 RIP: 470fd7	 Bytes: 3
  %loadMem_470fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fd7 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fd7)
  store %struct.Memory* %call_470fd7, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 470fda	 Bytes: 3
  %loadMem_470fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fda = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fda)
  store %struct.Memory* %call_470fda, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 470fdd	 Bytes: 4
  %loadMem_470fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fdd = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fdd)
  store %struct.Memory* %call_470fdd, %struct.Memory** %MEMORY

  ; Code: movswq -0xe6(%rbp), %r8	 RIP: 470fe1	 Bytes: 8
  %loadMem_470fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fe1 = call %struct.Memory* @routine_movswq_MINUS0xe6__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fe1)
  store %struct.Memory* %call_470fe1, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 470fe9	 Bytes: 4
  %loadMem_470fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fe9 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fe9)
  store %struct.Memory* %call_470fe9, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 470fed	 Bytes: 3
  %loadMem_470fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fed = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fed)
  store %struct.Memory* %call_470fed, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %r8	 RIP: 470ff0	 Bytes: 4
  %loadMem_470ff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ff0 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ff0)
  store %struct.Memory* %call_470ff0, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 470ff4	 Bytes: 4
  %loadMem_470ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ff4 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ff4)
  store %struct.Memory* %call_470ff4, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi)	 RIP: 470ff8	 Bytes: 3
  %loadMem_470ff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ff8 = call %struct.Memory* @routine_movw__dx____rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ff8)
  store %struct.Memory* %call_470ff8, %struct.Memory** %MEMORY

  ; Code: movw -0x50(%rbp), %dx	 RIP: 470ffb	 Bytes: 4
  %loadMem_470ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470ffb = call %struct.Memory* @routine_movw_MINUS0x50__rbp____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470ffb)
  store %struct.Memory* %call_470ffb, %struct.Memory** %MEMORY

  ; Code: movq -0xd0(%rbp), %rsi	 RIP: 470fff	 Bytes: 7
  %loadMem_470fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_470fff = call %struct.Memory* @routine_movq_MINUS0xd0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_470fff)
  store %struct.Memory* %call_470fff, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edi	 RIP: 471006	 Bytes: 3
  %loadMem_471006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471006 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471006)
  store %struct.Memory* %call_471006, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edi	 RIP: 471009	 Bytes: 3
  %loadMem_471009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471009 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471009)
  store %struct.Memory* %call_471009, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 47100c	 Bytes: 3
  %loadMem_47100c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47100c = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47100c)
  store %struct.Memory* %call_47100c, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 47100f	 Bytes: 4
  %loadMem_47100f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47100f = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47100f)
  store %struct.Memory* %call_47100f, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edi	 RIP: 471013	 Bytes: 3
  %loadMem_471013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471013 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471013)
  store %struct.Memory* %call_471013, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edi	 RIP: 471016	 Bytes: 3
  %loadMem_471016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471016 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471016)
  store %struct.Memory* %call_471016, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 471019	 Bytes: 3
  %loadMem_471019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471019 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471019)
  store %struct.Memory* %call_471019, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 47101c	 Bytes: 4
  %loadMem_47101c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47101c = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47101c)
  store %struct.Memory* %call_47101c, %struct.Memory** %MEMORY

  ; Code: movswq -0xe6(%rbp), %r8	 RIP: 471020	 Bytes: 8
  %loadMem_471020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471020 = call %struct.Memory* @routine_movswq_MINUS0xe6__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471020)
  store %struct.Memory* %call_471020, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 471028	 Bytes: 4
  %loadMem_471028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471028 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471028)
  store %struct.Memory* %call_471028, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 47102c	 Bytes: 3
  %loadMem_47102c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47102c = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47102c)
  store %struct.Memory* %call_47102c, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %r8	 RIP: 47102f	 Bytes: 4
  %loadMem_47102f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47102f = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47102f)
  store %struct.Memory* %call_47102f, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 471033	 Bytes: 4
  %loadMem_471033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471033 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471033)
  store %struct.Memory* %call_471033, %struct.Memory** %MEMORY

  ; Code: movw %dx, 0x2(%rsi)	 RIP: 471037	 Bytes: 4
  %loadMem_471037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471037 = call %struct.Memory* @routine_movw__dx__0x2__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471037)
  store %struct.Memory* %call_471037, %struct.Memory** %MEMORY

  ; Code: movw -0xd6(%rbp), %dx	 RIP: 47103b	 Bytes: 7
  %loadMem_47103b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47103b = call %struct.Memory* @routine_movw_MINUS0xd6__rbp____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47103b)
  store %struct.Memory* %call_47103b, %struct.Memory** %MEMORY

  ; Code: movq -0xd0(%rbp), %rsi	 RIP: 471042	 Bytes: 7
  %loadMem_471042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471042 = call %struct.Memory* @routine_movq_MINUS0xd0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471042)
  store %struct.Memory* %call_471042, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edi	 RIP: 471049	 Bytes: 3
  %loadMem_471049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471049 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471049)
  store %struct.Memory* %call_471049, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edi	 RIP: 47104c	 Bytes: 3
  %loadMem_47104c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47104c = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47104c)
  store %struct.Memory* %call_47104c, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 47104f	 Bytes: 3
  %loadMem_47104f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47104f = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47104f)
  store %struct.Memory* %call_47104f, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 471052	 Bytes: 4
  %loadMem_471052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471052 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471052)
  store %struct.Memory* %call_471052, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edi	 RIP: 471056	 Bytes: 3
  %loadMem_471056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471056 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471056)
  store %struct.Memory* %call_471056, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edi	 RIP: 471059	 Bytes: 3
  %loadMem_471059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471059 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471059)
  store %struct.Memory* %call_471059, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 47105c	 Bytes: 3
  %loadMem_47105c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47105c = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47105c)
  store %struct.Memory* %call_47105c, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 47105f	 Bytes: 4
  %loadMem_47105f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47105f = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47105f)
  store %struct.Memory* %call_47105f, %struct.Memory** %MEMORY

  ; Code: movswl -0xe6(%rbp), %edi	 RIP: 471063	 Bytes: 7
  %loadMem_471063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471063 = call %struct.Memory* @routine_movswl_MINUS0xe6__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471063)
  store %struct.Memory* %call_471063, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edi	 RIP: 47106a	 Bytes: 3
  %loadMem_47106a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47106a = call %struct.Memory* @routine_cmpl__0x0___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47106a)
  store %struct.Memory* %call_47106a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 47106d	 Bytes: 2
  %loadMem_47106d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47106d = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47106d)
  store %struct.Memory* %call_47106d, %struct.Memory** %MEMORY

  ; Code: cmovel %ecx, %edi	 RIP: 47106f	 Bytes: 3
  %loadMem_47106f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47106f = call %struct.Memory* @routine_cmovel__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47106f)
  store %struct.Memory* %call_47106f, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 471072	 Bytes: 3
  %loadMem_471072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471072 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471072)
  store %struct.Memory* %call_471072, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 471075	 Bytes: 4
  %loadMem_471075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471075 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471075)
  store %struct.Memory* %call_471075, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 471079	 Bytes: 3
  %loadMem_471079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471079 = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471079)
  store %struct.Memory* %call_471079, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %r8	 RIP: 47107c	 Bytes: 4
  %loadMem_47107c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47107c = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47107c)
  store %struct.Memory* %call_47107c, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 471080	 Bytes: 4
  %loadMem_471080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471080 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471080)
  store %struct.Memory* %call_471080, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi)	 RIP: 471084	 Bytes: 3
  %loadMem_471084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471084 = call %struct.Memory* @routine_movw__dx____rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471084)
  store %struct.Memory* %call_471084, %struct.Memory** %MEMORY

  ; Code: movw -0xd8(%rbp), %dx	 RIP: 471087	 Bytes: 7
  %loadMem_471087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471087 = call %struct.Memory* @routine_movw_MINUS0xd8__rbp____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471087)
  store %struct.Memory* %call_471087, %struct.Memory** %MEMORY

  ; Code: movq -0xd0(%rbp), %rsi	 RIP: 47108e	 Bytes: 7
  %loadMem_47108e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47108e = call %struct.Memory* @routine_movq_MINUS0xd0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47108e)
  store %struct.Memory* %call_47108e, %struct.Memory** %MEMORY

  ; Code: movl -0x64(%rbp), %edi	 RIP: 471095	 Bytes: 3
  %loadMem_471095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471095 = call %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471095)
  store %struct.Memory* %call_471095, %struct.Memory** %MEMORY

  ; Code: addl -0x54(%rbp), %edi	 RIP: 471098	 Bytes: 3
  %loadMem_471098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471098 = call %struct.Memory* @routine_addl_MINUS0x54__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471098)
  store %struct.Memory* %call_471098, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 47109b	 Bytes: 3
  %loadMem_47109b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47109b = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47109b)
  store %struct.Memory* %call_47109b, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 47109e	 Bytes: 4
  %loadMem_47109e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47109e = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47109e)
  store %struct.Memory* %call_47109e, %struct.Memory** %MEMORY

  ; Code: movl -0x68(%rbp), %edi	 RIP: 4710a2	 Bytes: 3
  %loadMem_4710a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710a2 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710a2)
  store %struct.Memory* %call_4710a2, %struct.Memory** %MEMORY

  ; Code: addl -0x58(%rbp), %edi	 RIP: 4710a5	 Bytes: 3
  %loadMem_4710a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710a5 = call %struct.Memory* @routine_addl_MINUS0x58__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710a5)
  store %struct.Memory* %call_4710a5, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4710a8	 Bytes: 3
  %loadMem_4710a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710a8 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710a8)
  store %struct.Memory* %call_4710a8, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4710ab	 Bytes: 4
  %loadMem_4710ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710ab = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710ab)
  store %struct.Memory* %call_4710ab, %struct.Memory** %MEMORY

  ; Code: movswl -0xe6(%rbp), %edi	 RIP: 4710af	 Bytes: 7
  %loadMem_4710af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710af = call %struct.Memory* @routine_movswl_MINUS0xe6__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710af)
  store %struct.Memory* %call_4710af, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edi	 RIP: 4710b6	 Bytes: 3
  %loadMem_4710b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710b6 = call %struct.Memory* @routine_cmpl__0x0___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710b6)
  store %struct.Memory* %call_4710b6, %struct.Memory** %MEMORY

  ; Code: cmovel %ecx, %eax	 RIP: 4710b9	 Bytes: 3
  %loadMem_4710b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710b9 = call %struct.Memory* @routine_cmovel__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710b9)
  store %struct.Memory* %call_4710b9, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %r8	 RIP: 4710bc	 Bytes: 3
  %loadMem_4710bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710bc = call %struct.Memory* @routine_movslq__eax___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710bc)
  store %struct.Memory* %call_4710bc, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4710bf	 Bytes: 4
  %loadMem_4710bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710bf = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710bf)
  store %struct.Memory* %call_4710bf, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 4710c3	 Bytes: 3
  %loadMem_4710c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710c3 = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710c3)
  store %struct.Memory* %call_4710c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %r8	 RIP: 4710c6	 Bytes: 4
  %loadMem_4710c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710c6 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710c6)
  store %struct.Memory* %call_4710c6, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4710ca	 Bytes: 4
  %loadMem_4710ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710ca = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710ca)
  store %struct.Memory* %call_4710ca, %struct.Memory** %MEMORY

  ; Code: movw %dx, 0x2(%rsi)	 RIP: 4710ce	 Bytes: 4
  %loadMem_4710ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710ce = call %struct.Memory* @routine_movw__dx__0x2__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710ce)
  store %struct.Memory* %call_4710ce, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %eax	 RIP: 4710d2	 Bytes: 3
  %loadMem_4710d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710d2 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710d2)
  store %struct.Memory* %call_4710d2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4710d5	 Bytes: 3
  %loadMem_4710d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710d5 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710d5)
  store %struct.Memory* %call_4710d5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 4710d8	 Bytes: 3
  %loadMem_4710d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710d8 = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710d8)
  store %struct.Memory* %call_4710d8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_470fa4	 RIP: 4710db	 Bytes: 5
  %loadMem_4710db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710db = call %struct.Memory* @routine_jmpq_.L_470fa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710db, i64 -311, i64 5)
  store %struct.Memory* %call_4710db, %struct.Memory** %MEMORY

  br label %block_.L_470fa4

  ; Code: .L_4710e0:	 RIP: 4710e0	 Bytes: 0
block_.L_4710e0:

  ; Code: jmpq .L_4710e5	 RIP: 4710e0	 Bytes: 5
  %loadMem_4710e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710e0 = call %struct.Memory* @routine_jmpq_.L_4710e5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710e0, i64 5, i64 5)
  store %struct.Memory* %call_4710e0, %struct.Memory** %MEMORY

  br label %block_.L_4710e5

  ; Code: .L_4710e5:	 RIP: 4710e5	 Bytes: 0
block_.L_4710e5:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 4710e5	 Bytes: 3
  %loadMem_4710e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710e5 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710e5)
  store %struct.Memory* %call_4710e5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4710e8	 Bytes: 3
  %loadMem_4710e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710e8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710e8)
  store %struct.Memory* %call_4710e8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 4710eb	 Bytes: 3
  %loadMem_4710eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710eb = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710eb)
  store %struct.Memory* %call_4710eb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_470f8c	 RIP: 4710ee	 Bytes: 5
  %loadMem_4710ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710ee = call %struct.Memory* @routine_jmpq_.L_470f8c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710ee, i64 -354, i64 5)
  store %struct.Memory* %call_4710ee, %struct.Memory** %MEMORY

  br label %block_.L_470f8c

  ; Code: .L_4710f3:	 RIP: 4710f3	 Bytes: 0
block_.L_4710f3:

  ; Code: jmpq .L_4710f8	 RIP: 4710f3	 Bytes: 5
  %loadMem_4710f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710f3 = call %struct.Memory* @routine_jmpq_.L_4710f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710f3, i64 5, i64 5)
  store %struct.Memory* %call_4710f3, %struct.Memory** %MEMORY

  br label %block_.L_4710f8

  ; Code: .L_4710f8:	 RIP: 4710f8	 Bytes: 0
block_.L_4710f8:

  ; Code: movq $0x0, -0xb0(%rbp)	 RIP: 4710f8	 Bytes: 11
  %loadMem_4710f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4710f8 = call %struct.Memory* @routine_movq__0x0__MINUS0xb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4710f8)
  store %struct.Memory* %call_4710f8, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0xa8(%rbp)	 RIP: 471103	 Bytes: 9
  %loadMem_471103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471103 = call %struct.Memory* @routine_movw__0x0__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471103)
  store %struct.Memory* %call_471103, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0xa6(%rbp)	 RIP: 47110c	 Bytes: 9
  %loadMem_47110c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47110c = call %struct.Memory* @routine_movw__0x0__MINUS0xa6__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47110c)
  store %struct.Memory* %call_47110c, %struct.Memory** %MEMORY

  ; Code: movw $0x0, -0xa4(%rbp)	 RIP: 471115	 Bytes: 9
  %loadMem_471115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471115 = call %struct.Memory* @routine_movw__0x0__MINUS0xa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471115)
  store %struct.Memory* %call_471115, %struct.Memory** %MEMORY

  ; Code: imulq $0x3e8, -0xb0(%rbp), %rax	 RIP: 47111e	 Bytes: 11
  %loadMem_47111e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47111e = call %struct.Memory* @routine_imulq__0x3e8__MINUS0xb0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47111e)
  store %struct.Memory* %call_47111e, %struct.Memory** %MEMORY

  ; Code: movzwl -0xa8(%rbp), %ecx	 RIP: 471129	 Bytes: 7
  %loadMem_471129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471129 = call %struct.Memory* @routine_movzwl_MINUS0xa8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471129)
  store %struct.Memory* %call_471129, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 471130	 Bytes: 2
  %loadMem_471130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471130 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471130)
  store %struct.Memory* %call_471130, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 471132	 Bytes: 3
  %loadMem_471132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471132 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471132)
  store %struct.Memory* %call_471132, %struct.Memory** %MEMORY

  ; Code: imulq $0x3e8, -0xa0(%rbp), %rdx	 RIP: 471135	 Bytes: 11
  %loadMem_471135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471135 = call %struct.Memory* @routine_imulq__0x3e8__MINUS0xa0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471135)
  store %struct.Memory* %call_471135, %struct.Memory** %MEMORY

  ; Code: movzwl -0x98(%rbp), %ecx	 RIP: 471140	 Bytes: 7
  %loadMem_471140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471140 = call %struct.Memory* @routine_movzwl_MINUS0x98__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471140)
  store %struct.Memory* %call_471140, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 471147	 Bytes: 2
  %loadMem_471147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471147 = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471147)
  store %struct.Memory* %call_471147, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 471149	 Bytes: 3
  %loadMem_471149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471149 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471149)
  store %struct.Memory* %call_471149, %struct.Memory** %MEMORY

  ; Code: subq %rdx, %rax	 RIP: 47114c	 Bytes: 3
  %loadMem_47114c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47114c = call %struct.Memory* @routine_subq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47114c)
  store %struct.Memory* %call_47114c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 47114f	 Bytes: 2
  %loadMem_47114f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47114f = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47114f)
  store %struct.Memory* %call_47114f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xb4(%rbp)	 RIP: 471151	 Bytes: 6
  %loadMem_471151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471151 = call %struct.Memory* @routine_movl__ecx__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471151)
  store %struct.Memory* %call_471151, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %ecx	 RIP: 471157	 Bytes: 6
  %loadMem_471157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471157 = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471157)
  store %struct.Memory* %call_471157, %struct.Memory** %MEMORY

  ; Code: addl 0x6f968c, %ecx	 RIP: 47115d	 Bytes: 7
  %loadMem_47115d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47115d = call %struct.Memory* @routine_addl_0x6f968c___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47115d)
  store %struct.Memory* %call_47115d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x6f968c	 RIP: 471164	 Bytes: 7
  %loadMem_471164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471164 = call %struct.Memory* @routine_movl__ecx__0x6f968c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471164)
  store %struct.Memory* %call_471164, %struct.Memory** %MEMORY

  ; Code: movl -0xb4(%rbp), %ecx	 RIP: 47116b	 Bytes: 6
  %loadMem_47116b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47116b = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47116b)
  store %struct.Memory* %call_47116b, %struct.Memory** %MEMORY

  ; Code: addl 0x6d1f98, %ecx	 RIP: 471171	 Bytes: 7
  %loadMem_471171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471171 = call %struct.Memory* @routine_addl_0x6d1f98___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471171)
  store %struct.Memory* %call_471171, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x6d1f98	 RIP: 471178	 Bytes: 7
  %loadMem_471178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471178 = call %struct.Memory* @routine_movl__ecx__0x6d1f98(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471178)
  store %struct.Memory* %call_471178, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %eax	 RIP: 47117f	 Bytes: 3
  %loadMem_47117f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47117f = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47117f)
  store %struct.Memory* %call_47117f, %struct.Memory** %MEMORY

  ; Code: addq $0x288, %rsp	 RIP: 471182	 Bytes: 7
  %loadMem_471182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471182 = call %struct.Memory* @routine_addq__0x288___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471182)
  store %struct.Memory* %call_471182, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 471189	 Bytes: 1
  %loadMem_471189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471189 = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471189)
  store %struct.Memory* %call_471189, %struct.Memory** %MEMORY

  ; Code: popq %r12	 RIP: 47118a	 Bytes: 2
  %loadMem_47118a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47118a = call %struct.Memory* @routine_popq__r12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47118a)
  store %struct.Memory* %call_47118a, %struct.Memory** %MEMORY

  ; Code: popq %r13	 RIP: 47118c	 Bytes: 2
  %loadMem_47118c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47118c = call %struct.Memory* @routine_popq__r13(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47118c)
  store %struct.Memory* %call_47118c, %struct.Memory** %MEMORY

  ; Code: popq %r14	 RIP: 47118e	 Bytes: 2
  %loadMem_47118e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47118e = call %struct.Memory* @routine_popq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47118e)
  store %struct.Memory* %call_47118e, %struct.Memory** %MEMORY

  ; Code: popq %r15	 RIP: 471190	 Bytes: 2
  %loadMem_471190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471190 = call %struct.Memory* @routine_popq__r15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471190)
  store %struct.Memory* %call_471190, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 471192	 Bytes: 1
  %loadMem_471192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471192 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471192)
  store %struct.Memory* %call_471192, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 471193	 Bytes: 1
  %loadMem_471193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_471193 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_471193)
  store %struct.Memory* %call_471193, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_471193
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__r15(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R15
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__r13(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R13
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__r12(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R12
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x288___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 648)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__di___ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DI
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__ax__MINUS0x2a__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__esi__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r9d__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 72
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x7fffffff__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2147483647)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x38__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx__MINUS0x68__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x6cb8f8___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x50__r10__r11_8____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R10
  %16 = load i64, i64* %R11
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x6c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_0x54__r10__r11_8____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R10
  %16 = load i64, i64* %R11
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 84
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0xa8__r10____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x34__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xac__r10____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x38__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x70fcf0___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1968__r10____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = add i64 %9, 6504
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___r10__r11_8____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__r10__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x118f8__r10____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = add i64 %9, 71928
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__r10__MINUS0x90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x0__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 188
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x0__MINUS0xa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 160
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__0x0__MINUS0x98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movw__0x0__MINUS0x96__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 150
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movw__0x0__MINUS0x94__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0xcdc__r10_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = add i64 %9, 3292
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_46e69c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x4d4__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_46e683(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x722ca8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x722ca8_type* @G_0x722ca8 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = inttoptr i64 %2 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  %15 = shl  i64 %11, 32
  %16 = or i64 %15, %7
  %17 = sdiv i64 %16, %14
  %18 = shl i64 %17, 32
  %19 = ashr exact i64 %18, 32
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %25, label %21

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %23, %struct.Memory* %0) #21
  br label %37

; <label>:25:                                     ; preds = %3
  %26 = srem i64 %16, %14
  %27 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %28 = and i64 %17, 4294967295
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %30 = and i64 %26, 4294967295
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %25, %21
  %38 = phi %struct.Memory* [ %24, %21 ], [ %0, %25 ]
  ret %struct.Memory* %38
}

define %struct.Memory* @routine_idivl_MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_46e690(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0xf0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x118f0__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71920
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = sext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rax__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x70__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 112
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_46e755(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x6c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 108
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_46e742(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x726418___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x726418_type* @G_0x726418 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x78__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x58__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x54__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  store i16 %6, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw___rax__rdx_2____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movslq_MINUS0x58__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6cbc30___rax_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 8
  %11 = add i64 %10, 7126064
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movslq_MINUS0x54__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si____rax__rdx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46e6f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_46e747(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46e6df(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x0__0xcdc__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3292
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_46fcc8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x6__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_46e8b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = sext i16 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswl___rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__edx__0x6d1fa0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1fa0_type* @G_0x6d1fa0 to i64), i64 %10)
  ret %struct.Memory* %13
}






















define %struct.Memory* @routine_movswl_0x2__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__0x6d1fa4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1fa4_type* @G_0x6d1fa4 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_46e83d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cd3b0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cd3b0_type* @G_0x6cd3b0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_sarl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x64__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x68__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movq___rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl___rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__edx__MINUS0xf4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46e890(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_0x6cd468___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cd468_type* @G_0x6cd468 to i64))
  ret %struct.Memory* %11
}




































define %struct.Memory* @routine_movl_MINUS0xf4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x72369c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x72369c_type* @G_0x72369c to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x72369c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x72369c_type* @G_0x72369c to i64))
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_46ecac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_46ea06(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}
































define %struct.Memory* @routine_jne_.L_46e98b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0xf8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46e9de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0xf8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_46eca7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_46eb54(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}
































define %struct.Memory* @routine_jne_.L_46ead9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0xfc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46eb2c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0xfc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_46eca2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_46ec9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}
































define %struct.Memory* @routine_jne_.L_46ec27(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0x100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46ec7a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x100__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_46f21a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11b30__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72496
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_46f21a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jle_.L_46ee21(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















































define %struct.Memory* @routine_jne_.L_46eda6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0x104__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46edf9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x104__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_46f215(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_46ef6f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















































define %struct.Memory* @routine_jne_.L_46eef4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0x108__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46ef47(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x108__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_46f210(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_46f0bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















































define %struct.Memory* @routine_jne_.L_46f042(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0x10c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46f095(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x10c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_46f20b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_46f206(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















































define %struct.Memory* @routine_jne_.L_46f190(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0x110__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46f1e3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x110__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_jmpq_.L_46f21a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__0x6f934c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6f934c_type* @G_0x6f934c to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_46f235(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x114__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46f242(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x114__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl___rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movswl_MINUS0x2a__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_46f372(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






































define %struct.Memory* @routine_movl__edx__0x6d32c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d32c4_type* @G_0x6d32c4 to i64), i64 %10)
  ret %struct.Memory* %13
}




































define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__0x70fd54(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x70fd54_type* @G_0x70fd54 to i64), i64 %10)
  ret %struct.Memory* %13
}




































define %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__0x70fd58(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x70fd58_type* @G_0x70fd58 to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jne_.L_46f5a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_46f5a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}







































































define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sitofp i32 %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdl_0x4__rax____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 188
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 288
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jne_.L_46f463(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvtsi2sdl_MINUS0xb8__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 296
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jmpq_.L_46f4a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0x423dd__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x423dd__rip__type* @G_0x423dd__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x423ed__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x423ed__rip__type* @G_0x423ed__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0xbc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 188
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = trunc i64 %3 to i32
  %6 = sitofp i32 %5 to double
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdl__eax___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_cvtsi2sdl__eax___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fdiv double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movsd__xmm2__MINUS0x128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 296
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x128__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x120__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__eax__0x70fd54(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x70fd54_type* @G_0x70fd54 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cd3b0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cd3b0_type* @G_0x6cd3b0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x98__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_sarl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x64__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__eax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x9c__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movq___rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cvtsi2sdl_0x8__rcx____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movsd__xmm0__MINUS0x130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 304
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jne_.L_46f53e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movsd__xmm0__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 312
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jmpq_.L_46f582(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0x42302__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x42302__rip__type* @G_0x42302__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x42312__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x42312__rip__type* @G_0x42312__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




















define %struct.Memory* @routine_movsd__xmm2__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 312
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x138__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x130__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__0x70fd58(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x70fd58_type* @G_0x70fd58 to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_46f959(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_46f787(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x2a__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_46f787(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





























define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__edx__0x6cd480(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_je_.L_46f64d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46f65a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_0x6cd480___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x6cd480(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6cd480_type* @G_0x6cd480 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cd468___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cd468_type* @G_0x6cd468 to i64))
  ret %struct.Memory* %11
}




























define %struct.Memory* @routine_subl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_0x4__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x710010(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x710010_type* @G_0x710010 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x710010___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x710010_type* @G_0x710010 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movswl_MINUS0x2a__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_sarl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = trunc i64 %3 to i32
  %11 = sitofp i32 %10 to float
  %12 = bitcast i8* %2 to float*
  store float %11, float* %12, align 1
  %13 = extractelement <2 x i32> %6, i32 1
  %14 = getelementptr inbounds i8, i8* %2, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 1
  %16 = extractelement <2 x i32> %9, i32 0
  %17 = bitcast i8* %7 to i32*
  store i32 %16, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_sarl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fdiv float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSS2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero32EfEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = tail call float @llvm.trunc.f32(float %7) #22
  %9 = tail call float @llvm.fabs.f32(float %8) #22
  %10 = fcmp ogt float %9, 0x41E0000000000000
  %11 = fptosi float %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttss2si__xmm0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSS2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero32EfEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}










































define %struct.Memory* @routine_movl_0x8__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x710014(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x710014_type* @G_0x710014 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x710014___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x710014_type* @G_0x710014 to i64))
  ret %struct.Memory* %11
}




























define %struct.Memory* @routine_jne_.L_46f954(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_46f7bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































define %struct.Memory* @routine_je_.L_46f82a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x140__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46f837(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x140__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_0x4dfef__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x4dfef__rip__type* @G_0x4dfef__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x6cd3b0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cd3b0_type* @G_0x6cd3b0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq__eax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x4__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__ecx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0xbc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 188
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_imull__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_cvtsi2ssl__eax___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fadd float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addss__xmm0___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvttss2si__xmm1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSS2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero32EfEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}






































define %struct.Memory* @routine_movl_0x8__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0xbc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 188
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_imull__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_jmpq_.L_46fcc3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jle_.L_46fafe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_subl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_je_.L_46f9de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x144__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 324
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46f9eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x144__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 324
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x25da89__rip_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x25da89__rip__type* @G_0x25da89__rip_ to i64)
  %11 = load i32, i32* %EAX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 6
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq_0x25da6a__rip____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x25da6a__rip__type* @G_0x25da6a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x25befb__rip____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x25befb__rip__type* @G_0x25befb__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_sarl__0x2___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3DECI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = trunc i64 %3 to i32
  %6 = add i32 %5, -1
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  %8 = and i32 %6, 255
  %9 = tail call i32 @llvm.ctpop.i32(i32 %8) #22
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = xor i8 %11, 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %12, i8* %13, align 1
  %14 = xor i32 %6, %5
  %15 = lshr i32 %14, 4
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %17, i8* %18, align 1
  %19 = icmp eq i32 %6, 0
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %20, i8* %21, align 1
  %22 = lshr i32 %6, 31
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %5, 31
  %26 = xor i32 %22, %25
  %27 = add   i32 %26, %25
  %28 = icmp eq i32 %27, 2
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %29, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_decl__eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3DECI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__eax__0x2a05c3__rip_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2a05c3__rip__type* @G_0x2a05c3__rip_ to i64)
  %11 = load i32, i32* %EAX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 6
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl_0x2a05bd__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2a05bd__rip__type* @G_0x2a05bd__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__esi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3INCI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = trunc i64 %3 to i32
  %6 = add i32 %5, 1
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  %8 = and i32 %6, 255
  %9 = tail call i32 @llvm.ctpop.i32(i32 %8) #22
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = xor i8 %11, 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %12, i8* %13, align 1
  %14 = xor i32 %6, %5
  %15 = lshr i32 %14, 4
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %17, i8* %18, align 1
  %19 = icmp eq i32 %6, 0
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %20, i8* %21, align 1
  %22 = lshr i32 %6, 31
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %5, 31
  %26 = xor i32 %22, %25
  %27 = add   i32 %26, %22
  %28 = icmp eq i32 %27, 2
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %29, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_incl__edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3INCI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cvtsi2ssl__esi___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__0x2a059c__rip_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2a059c__rip__type* @G_0x2a059c__rip_ to i64)
  %11 = load i32, i32* %EAX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 6
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq_0x25d9ed__rip____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x25d9ed__rip__type* @G_0x25d9ed__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x25be7e__rip____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x25be7e__rip__type* @G_0x25be7e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}








































define %struct.Memory* @routine_movl__eax__0x2a054a__rip_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2a054a__rip__type* @G_0x2a054a__rip_ to i64)
  %11 = load i32, i32* %EAX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 6
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl_0x2a0544__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2a0544__rip__type* @G_0x2a0544__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movw__si___r8w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %SI
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R8W, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movw__r8w__MINUS0x146__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 326
  %14 = load i16, i16* %R8W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jne_.L_46fcbe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















































define %struct.Memory* @routine_je_.L_46fb94(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46fba1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x14c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss_0x4dc85__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x4dc85__rip__type* @G_0x4dc85__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


























































































































define %struct.Memory* @routine_jmpq_.L_46fcc8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_46fce7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x6f9734(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6f9734_type* @G_0x6f9734 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_MINUS0x80__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1950__rax____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 6480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x1968__rax____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 6504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0x2a__rbp____cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x64__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x68__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x6c__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 108
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x70__rbp____ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i32
  %6 = shl i32 %5, 16
  %7 = ashr exact i32 %6, 16
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswl__cx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r10d____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r11d__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %R11D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ebx__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i32, i32* %EBX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.SetMotionVectorPredictor(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x80__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw___rax____r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movw__r14w__MINUS0x4a__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 74
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movw_0x2__rax____r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__r14w__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_je_.L_470085(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movswl_MINUS0x4a__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 74
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x150__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__ax___si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0x4e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl_MINUS0x4c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movw__si__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb8f8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x9a0__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 2464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_46fed5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x40__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movswl_MINUS0x4e__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_46fdd1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46fddb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movswl_MINUS0x4e__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x154__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_46fdff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46fe32(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movswl_MINUS0x4e__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_46fe1c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46fe26(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x160__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__ax___dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__dx__MINUS0x4e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i16, i16* %DX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_subl_MINUS0x40__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movswl_MINUS0x50__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_46fe67(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46fe71(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movswl_MINUS0x50__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x168__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x164__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jle_.L_46fe95(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46fec8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movswl_MINUS0x50__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_46feb2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_46febc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x170__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x16c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax___cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__cx__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x6cbc30___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x6cbc30_type* @G__0x6cbc30 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0x2a__rbp____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x74__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x78__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0x4a__rbp____r11w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 74
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R11W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0x4c__rbp____bx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %BX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %BX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x40__rbp____r14d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____r15d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R15D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsd_MINUS0x48__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movswl__dx___r12d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 25
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R12D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R12D to i64*
  %13 = load i16, i16* %DX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r12d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R12D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x174__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r8d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movswl__r11w___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %R11W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movswl__bx___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %BX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %BX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x180__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x18__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r14d__0x20__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 32
  %14 = load i32, i32* %R14D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r15d__0x28__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 40
  %14 = load i32, i32* %R15D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.FastIntegerPelBlockMotionSearch(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jge_.L_470080(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jge_.L_47006d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_470000(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x64__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movswq_MINUS0x2a__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_47005a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












































define %struct.Memory* @routine_jmpq_.L_47005f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_46ff86(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_470072(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_46ff6e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_470117(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






























define %struct.Memory* @routine_movl__esi__MINUS0x184__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x184__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x190__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_movq_MINUS0x190__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_callq_.FastFullPelBlockMotionSearch(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_470141(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x1c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_470141(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_470484(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x3__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_470212(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__0x9___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 9)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_xorl__esi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0x2a__rbp____r8w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R8W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x74__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x78__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0x4a__rbp____r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 74
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0x4c__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____r12d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R12D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movswl__r8w___r13d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 27
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R13D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R13D to i64*
  %13 = load i16, i16* %R8W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x194__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r13d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R13D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x198__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r9d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x1a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r11d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ebx___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %EBX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movswl__r14w___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %R14W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movswl__r15w___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %R15W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movq_MINUS0x1a0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x9__0x20__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x9__0x28__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__r12d__0x30__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 48
  %14 = load i32, i32* %R12D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__0x38__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_callq_.FastSubPelBlockMotionSearch(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_4702aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movw_MINUS0x2a__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x74__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x78__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0x4a__rbp____bx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %BX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 74
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %BX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0x4c__rbp____r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movswl__si___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %SI
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x1a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x1b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r9d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r10d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r11d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movq_MINUS0x1b0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__r15d__0x30__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 48
  %14 = load i32, i32* %R15D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.SubPelBlockMotionSearch(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jge_.L_47047f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jge_.L_47046c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_4703a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










































define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










































define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_470459(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






















































































define %struct.Memory* @routine_jmpq_.L_47045e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4702c9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_470471(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4702b1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_470546(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_4704ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_4704ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__edx__MINUS0x1b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq__rcx__MINUS0x1c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_movq_MINUS0x1c0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_cmpl__0x0__0x9a0__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47063e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_470639(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_470589(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x3__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_callq_.FindSkipModeMotionVector(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.GetSkipCostMB(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x41318__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x41318__rip__type* @G_0x41318__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x41318__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x41318__rip__type* @G_0x41318__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd_MINUS0x48__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = extractelement <2 x i32> %6, i32 0
  %11 = bitcast i8* %2 to i32*
  store i32 %10, i32* %11, align 1
  %12 = extractelement <2 x i32> %6, i32 1
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 0
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_callq_.floor_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl_MINUS0xc0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x60__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 96
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_470634(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movq_0x118f8__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 71928
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_movw___rcx____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %12)
  ret %struct.Memory* %15
}


















define %struct.Memory* @routine_movw_0x2__rcx____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__dx__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i16, i16* %DX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_470639(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47063e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_4707bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x98__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x64__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0xc4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x9c__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x68__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0xc8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_jge_.L_4707b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jge_.L_4707a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movw_MINUS0x4e__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x64__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x68__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movw__ax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i16, i16* %AX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0x50__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}
































define %struct.Memory* @routine_movw__ax__0x2__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 2
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_MINUS0x88__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xc4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0xc8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






































define %struct.Memory* @routine_jmpq_.L_4706a6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4707aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_47068e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_470896(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jge_.L_470891(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jge_.L_47087e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












































































define %struct.Memory* @routine_jmpq_.L_4707dc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_470883(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4707c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_4710f8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x4e8__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1256
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4710f8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_je_.L_4708f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x11900__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71936
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x1c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_47090f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq_0x11908__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71944
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movq_MINUS0x1c8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0xea__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 234
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0xd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw__0x0__MINUS0xe2__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 226
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movw__0x0__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 228
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movw__r8w__MINUS0xe6__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 230
  %14 = load i16, i16* %R8W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movq_0x1968__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6504
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__ecx___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  %8 = load i64, i64* %2, align 8
  %9 = select i1 %7, i64 %3, i64 %8
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmovel__edx___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movl__edx__MINUS0x1cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movl_MINUS0x1cc__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 460
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_addl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movw__cx___r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__r14w__MINUS0x4e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movw__r14w__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl_0x4ec__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 1260
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_470cd4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x54__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x1d0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_470a9f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x80__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw___rdx____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movw__si__MINUS0xe2__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 226
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movw_0x2__rdx____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xea__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 234
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0xde__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 222
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xe8__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xd6__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0xda__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 218
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xd8__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0x4e__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0xd6__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0x50__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__si__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cmovel__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__si__MINUS0xe6__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 230
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_470b6a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movw___rax____cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movw__cx__MINUS0xde__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 222
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movw_0x2__rax____cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__cx__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xea__rbp____cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 234
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__cx__MINUS0xe2__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 226
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xe8__rbp____cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__cx__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_470b19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movw_MINUS0xd6__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax__MINUS0xda__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 218
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xd8__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movw__ax__MINUS0xd6__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movw__ax__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_470b5d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movswl_MINUS0xe2__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 226
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movw__cx___ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movswl_MINUS0xe4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx__MINUS0xe6__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 230
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_leaq_MINUS0xd6__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0xd8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0xda__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 218
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0xdc__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movswl_MINUS0xe6__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 230
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl_MINUS0x54__rbp____r14d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0xde__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 222
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0xe0__rbp____r12w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R12W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0xe2__rbp____r13w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 226
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R13W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rsi__MINUS0x1d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0xe4__rbp____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x1e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_0x4f0__rax____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1264
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq__rcx__MINUS0x1f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xd4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movswl__r8w___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i16, i16* %R8W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw__si__MINUS0x1f2__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 498
  %14 = load i16, i16* %SI
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__ecx__MINUS0x204__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl__r14d____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %R14D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movswl__r12w___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %R12W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl__r13w___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %R13W
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d__0x18__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 24
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0x1f2__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 498
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__r10d__0x20__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 32
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x1e0__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0x28__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 40
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x1f0__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0x30__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 48
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x200__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0x38__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 56
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x1d8__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0x40__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 64
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__0x48__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x204__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x50__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.FullPelBlockMotionBiPred(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xda__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 218
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__r15w__MINUS0x4e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i16, i16* %R15W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xdc__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__r15w__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i16, i16* %R15W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jmpq_.L_4709de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movswl_MINUS0xda__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 218
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movw__cx__MINUS0xda__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 218
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl_MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movw__cx__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x4f4__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 1268
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_470e18(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_470d2c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_leaq_MINUS0xdc__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x9___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x40b26__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x40b26__rip__type* @G_0x40b26__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movswl_MINUS0xe6__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 230
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x74__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x78__rbp____ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____r14d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0xe2__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 226
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0xe4__rbp____r12w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R12W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xd4__rbp____r13d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R13D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 212
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_mulsd_MINUS0x48__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdx__MINUS0x210__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r11d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r8__MINUS0x220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ebx___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EBX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r9d__MINUS0x224__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r14d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R14D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movq_MINUS0x218__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x210__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x20__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 32
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x220__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x28__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x9__0x30__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x9__0x38__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__r13d__0x40__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 64
  %14 = load i32, i32* %R13D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.SubPelBlockSearchBiPred(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_470e40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movswl_MINUS0xd6__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movw__cx__MINUS0xd6__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl_MINUS0xd8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movw__cx__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i16, i16* %CX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cmpl__0x2__0x4f4__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1268
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_470f6f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_470e70(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_leaq_MINUS0x4e__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x50__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0xd6__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0xd8__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movsd_0x409e8__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x409e8__rip__type* @G_0x409e8__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x1___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0xe6__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 230
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__0x0___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R11D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmovel__r10d___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movw_MINUS0x4a__rbp____r15w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 74
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R15W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw_MINUS0x4c__rbp____r12w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R12W, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__rsi__MINUS0x230__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r11d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__r8__MINUS0x248__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__r9d__MINUS0x24c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 588
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movswl__r15w___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %R15W
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movswl__r12w___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %R12W
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x240__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x238__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0x18__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x230__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0x20__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 32
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x248__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_470f85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movw_MINUS0xda__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 218
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax__MINUS0x4e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xdc__rbp____ax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %AX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_jge_.L_4710f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jge_.L_4710e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movw_MINUS0x4e__rbp____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 78
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xd0__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x54__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x58__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movswq_MINUS0xe6__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 230
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq___rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__dx____rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i16, i16* %DX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movw_MINUS0x50__rbp____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}






























define %struct.Memory* @routine_movw__dx__0x2__rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 2
  %14 = load i16, i16* %DX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movw_MINUS0xd6__rbp____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 214
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movswl_MINUS0xe6__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 230
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmovel__ecx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movw_MINUS0xd8__rbp____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


























define %struct.Memory* @routine_movslq__eax___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_jmpq_.L_470fa4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4710e5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_470f8c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4710f8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x0__MINUS0xb0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 176
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movw__0x0__MINUS0xa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movw__0x0__MINUS0xa6__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 166
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movw__0x0__MINUS0xa4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 164
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2InItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %3 to i64*
  %7 = load i64, i64* %6
  %8 = sext i64 %7 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = sext i64 %4 to i128
  %11 = and i128 %10, -18446744073709551616
  %12 = zext i64 %7 to i128
  %13 = or i128 %9, %12
  %14 = zext i64 %4 to i128
  %15 = or i128 %11, %14
  %16 = mul  i128 %13, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %2, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = tail call i32 @llvm.ctpop.i32(i32 %23) #22
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x3e8__MINUS0xb0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 1000)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl_MINUS0xa8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x3e8__MINUS0xa0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13, i64 1000)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzwl_MINUS0x98__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__rsi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx__MINUS0xb4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xb4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_0x6f968c___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x6f968c_type* @G_0x6f968c to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__0x6f968c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6f968c_type* @G_0x6f968c to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_addl_0x6d1f98___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x6d1f98_type* @G_0x6d1f98 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__0x6d1f98(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1f98_type* @G_0x6d1f98 to i64), i64 %10)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x288___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 648)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r12(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R12)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r13(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 27
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R13 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R13)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R14)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r15(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R15)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

