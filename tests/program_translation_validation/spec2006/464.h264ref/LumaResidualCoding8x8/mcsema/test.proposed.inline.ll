; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6f6f90_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G_0x726418_type = type <{ [8 x i8] }>
%G__0x6d40f0_type = type <{ [8 x i8] }>
%G__0x6f6fa0_type = type <{ [8 x i8] }>
%G__0x722ff0_type = type <{ [8 x i8] }>
%G__0x723720_type = type <{ [8 x i8] }>
%G__0x725610_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6f6f90 = global %G_0x6f6f90_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G_0x726418 = global %G_0x726418_type zeroinitializer
@G__0x6d40f0 = global %G__0x6d40f0_type zeroinitializer
@G__0x6f6fa0 = global %G__0x6f6fa0_type zeroinitializer
@G__0x722ff0 = global %G__0x722ff0_type zeroinitializer
@G__0x723720 = global %G__0x723720_type zeroinitializer
@G__0x725610 = global %G__0x725610_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_43fcc0.ChromaPrediction4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43df10.LumaPrediction4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_406250.dct_luma(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40bde0.dct_luma_sp(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4aa740.dct_luma8x8(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40f540.copyblock_sp(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @LumaResidualCoding8x8(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_43eea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_43eea0, %struct.Memory** %MEMORY
  %loadMem_43eea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i228 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i228
  %27 = load i64, i64* %PC.i227
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i227
  store i64 %26, i64* %RBP.i229, align 8
  store %struct.Memory* %loadMem_43eea1, %struct.Memory** %MEMORY
  %loadMem_43eea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 29
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R14.i341 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R14.i341
  %36 = load i64, i64* %PC.i340
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i340
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_43eea4, %struct.Memory** %MEMORY
  %loadMem_43eea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i2042 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 3
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %RBX.i2043 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %RBX.i2043
  %49 = load i64, i64* %PC.i2042
  %50 = add i64 %49, 1
  store i64 %50, i64* %PC.i2042
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_43eea6, %struct.Memory** %MEMORY
  %loadMem_43eea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i2056 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 13
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %RSP.i2057 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %RSP.i2057
  %62 = load i64, i64* %PC.i2056
  %63 = add i64 %62, 7
  store i64 %63, i64* %PC.i2056
  %64 = sub i64 %61, 176
  store i64 %64, i64* %RSP.i2057, align 8
  %65 = icmp ult i64 %61, 176
  %66 = zext i1 %65 to i8
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %66, i8* %67, align 1
  %68 = trunc i64 %64 to i32
  %69 = and i32 %68, 255
  %70 = call i32 @llvm.ctpop.i32(i32 %69)
  %71 = trunc i32 %70 to i8
  %72 = and i8 %71, 1
  %73 = xor i8 %72, 1
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %73, i8* %74, align 1
  %75 = xor i64 176, %61
  %76 = xor i64 %75, %64
  %77 = lshr i64 %76, 4
  %78 = trunc i64 %77 to i8
  %79 = and i8 %78, 1
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %79, i8* %80, align 1
  %81 = icmp eq i64 %64, 0
  %82 = zext i1 %81 to i8
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %82, i8* %83, align 1
  %84 = lshr i64 %64, 63
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %85, i8* %86, align 1
  %87 = lshr i64 %61, 63
  %88 = xor i64 %84, %87
  %89 = add i64 %88, %87
  %90 = icmp eq i64 %89, 2
  %91 = zext i1 %90 to i8
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %91, i8* %92, align 1
  store %struct.Memory* %loadMem_43eea7, %struct.Memory** %MEMORY
  %loadMem_43eeae = load %struct.Memory*, %struct.Memory** %MEMORY
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 33
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %PC.i2104 = bitcast %union.anon* %95 to i64*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 1
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %AX.i2105 = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 5
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %CX.i = bitcast %union.anon* %101 to i16*
  %102 = load i16, i16* %CX.i
  %103 = zext i16 %102 to i64
  %104 = load i64, i64* %PC.i2104
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC.i2104
  store i16 %102, i16* %AX.i2105, align 2
  store %struct.Memory* %loadMem_43eeae, %struct.Memory** %MEMORY
  %loadMem_43eeb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i2101 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 21
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %R10W.i2102 = bitcast %union.anon* %111 to i16*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i2103 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i2103
  %116 = add i64 %115, 24
  %117 = load i64, i64* %PC.i2101
  %118 = add i64 %117, 5
  store i64 %118, i64* %PC.i2101
  %119 = inttoptr i64 %116 to i16*
  %120 = load i16, i16* %119
  store i16 %120, i16* %R10W.i2102, align 2
  store %struct.Memory* %loadMem_43eeb1, %struct.Memory** %MEMORY
  %loadMem_43eeb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 33
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %PC.i2098 = bitcast %union.anon* %123 to i64*
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %125 = getelementptr inbounds %struct.GPR, %struct.GPR* %124, i32 0, i32 23
  %126 = getelementptr inbounds %struct.Reg, %struct.Reg* %125, i32 0, i32 0
  %R11W.i2099 = bitcast %union.anon* %126 to i16*
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %128 = getelementptr inbounds %struct.GPR, %struct.GPR* %127, i32 0, i32 15
  %129 = getelementptr inbounds %struct.Reg, %struct.Reg* %128, i32 0, i32 0
  %RBP.i2100 = bitcast %union.anon* %129 to i64*
  %130 = load i64, i64* %RBP.i2100
  %131 = add i64 %130, 16
  %132 = load i64, i64* %PC.i2098
  %133 = add i64 %132, 5
  store i64 %133, i64* %PC.i2098
  %134 = inttoptr i64 %131 to i16*
  %135 = load i16, i16* %134
  store i16 %135, i16* %R11W.i2099, align 2
  store %struct.Memory* %loadMem_43eeb6, %struct.Memory** %MEMORY
  %loadMem_43eebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %137 = getelementptr inbounds %struct.GPR, %struct.GPR* %136, i32 0, i32 33
  %138 = getelementptr inbounds %struct.Reg, %struct.Reg* %137, i32 0, i32 0
  %PC.i2095 = bitcast %union.anon* %138 to i64*
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %140 = getelementptr inbounds %struct.GPR, %struct.GPR* %139, i32 0, i32 5
  %141 = getelementptr inbounds %struct.Reg, %struct.Reg* %140, i32 0, i32 0
  %ECX.i2096 = bitcast %union.anon* %141 to i32*
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 5
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %RCX.i2097 = bitcast %union.anon* %144 to i64*
  %145 = load i64, i64* %RCX.i2097
  %146 = load i32, i32* %ECX.i2096
  %147 = zext i32 %146 to i64
  %148 = load i64, i64* %PC.i2095
  %149 = add i64 %148, 2
  store i64 %149, i64* %PC.i2095
  %150 = xor i64 %147, %145
  %151 = trunc i64 %150 to i32
  %152 = and i64 %150, 4294967295
  store i64 %152, i64* %RCX.i2097, align 8
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %153, align 1
  %154 = and i32 %151, 255
  %155 = call i32 @llvm.ctpop.i32(i32 %154)
  %156 = trunc i32 %155 to i8
  %157 = and i8 %156, 1
  %158 = xor i8 %157, 1
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %158, i8* %159, align 1
  %160 = icmp eq i32 %151, 0
  %161 = zext i1 %160 to i8
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %161, i8* %162, align 1
  %163 = lshr i32 %151, 31
  %164 = trunc i32 %163 to i8
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %164, i8* %165, align 1
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %166, align 1
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %167, align 1
  store %struct.Memory* %loadMem_43eebb, %struct.Memory** %MEMORY
  %loadMem_43eebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 33
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %PC.i2092 = bitcast %union.anon* %170 to i64*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 3
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %174 = bitcast %union.anon* %173 to %struct.anon.2*
  %BL.i2093 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %174, i32 0, i32 0
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 5
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %178 = bitcast %union.anon* %177 to %struct.anon.2*
  %CL.i2094 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %178, i32 0, i32 0
  %179 = load i8, i8* %CL.i2094
  %180 = zext i8 %179 to i64
  %181 = load i64, i64* %PC.i2092
  %182 = add i64 %181, 2
  store i64 %182, i64* %PC.i2092
  store i8 %179, i8* %BL.i2093, align 1
  store %struct.Memory* %loadMem_43eebd, %struct.Memory** %MEMORY
  %loadMem_43eebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 33
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %PC.i2090 = bitcast %union.anon* %185 to i64*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 5
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %RCX.i2091 = bitcast %union.anon* %188 to i64*
  %189 = load i64, i64* %PC.i2090
  %190 = add i64 %189, 5
  store i64 %190, i64* %PC.i2090
  store i64 1, i64* %RCX.i2091, align 8
  store %struct.Memory* %loadMem_43eebf, %struct.Memory** %MEMORY
  %loadMem_43eec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 33
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %PC.i2088 = bitcast %union.anon* %193 to i64*
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %195 = getelementptr inbounds %struct.GPR, %struct.GPR* %194, i32 0, i32 29
  %196 = getelementptr inbounds %struct.Reg, %struct.Reg* %195, i32 0, i32 0
  %R14D.i2089 = bitcast %union.anon* %196 to i32*
  %197 = bitcast i32* %R14D.i2089 to i64*
  %198 = load i64, i64* %PC.i2088
  %199 = add i64 %198, 6
  store i64 %199, i64* %PC.i2088
  store i64 2, i64* %197, align 8
  store %struct.Memory* %loadMem_43eec4, %struct.Memory** %MEMORY
  %loadMem_43eeca = load %struct.Memory*, %struct.Memory** %MEMORY
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 33
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %PC.i2085 = bitcast %union.anon* %202 to i64*
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %204 = getelementptr inbounds %struct.GPR, %struct.GPR* %203, i32 0, i32 11
  %205 = getelementptr inbounds %struct.Reg, %struct.Reg* %204, i32 0, i32 0
  %RDI.i2086 = bitcast %union.anon* %205 to i64*
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 15
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %RBP.i2087 = bitcast %union.anon* %208 to i64*
  %209 = load i64, i64* %RBP.i2087
  %210 = sub i64 %209, 24
  %211 = load i64, i64* %RDI.i2086
  %212 = load i64, i64* %PC.i2085
  %213 = add i64 %212, 4
  store i64 %213, i64* %PC.i2085
  %214 = inttoptr i64 %210 to i64*
  store i64 %211, i64* %214
  store %struct.Memory* %loadMem_43eeca, %struct.Memory** %MEMORY
  %loadMem_43eece = load %struct.Memory*, %struct.Memory** %MEMORY
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 33
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %PC.i2082 = bitcast %union.anon* %217 to i64*
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 9
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %RSI.i2083 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 15
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %RBP.i2084 = bitcast %union.anon* %223 to i64*
  %224 = load i64, i64* %RBP.i2084
  %225 = sub i64 %224, 32
  %226 = load i64, i64* %RSI.i2083
  %227 = load i64, i64* %PC.i2082
  %228 = add i64 %227, 4
  store i64 %228, i64* %PC.i2082
  %229 = inttoptr i64 %225 to i64*
  store i64 %226, i64* %229
  store %struct.Memory* %loadMem_43eece, %struct.Memory** %MEMORY
  %loadMem_43eed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %231 = getelementptr inbounds %struct.GPR, %struct.GPR* %230, i32 0, i32 33
  %232 = getelementptr inbounds %struct.Reg, %struct.Reg* %231, i32 0, i32 0
  %PC.i2079 = bitcast %union.anon* %232 to i64*
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 7
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %EDX.i2080 = bitcast %union.anon* %235 to i32*
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %237 = getelementptr inbounds %struct.GPR, %struct.GPR* %236, i32 0, i32 15
  %238 = getelementptr inbounds %struct.Reg, %struct.Reg* %237, i32 0, i32 0
  %RBP.i2081 = bitcast %union.anon* %238 to i64*
  %239 = load i64, i64* %RBP.i2081
  %240 = sub i64 %239, 36
  %241 = load i32, i32* %EDX.i2080
  %242 = zext i32 %241 to i64
  %243 = load i64, i64* %PC.i2079
  %244 = add i64 %243, 3
  store i64 %244, i64* %PC.i2079
  %245 = inttoptr i64 %240 to i32*
  store i32 %241, i32* %245
  store %struct.Memory* %loadMem_43eed2, %struct.Memory** %MEMORY
  %loadMem_43eed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %247 = getelementptr inbounds %struct.GPR, %struct.GPR* %246, i32 0, i32 33
  %248 = getelementptr inbounds %struct.Reg, %struct.Reg* %247, i32 0, i32 0
  %PC.i2076 = bitcast %union.anon* %248 to i64*
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %250 = getelementptr inbounds %struct.GPR, %struct.GPR* %249, i32 0, i32 1
  %251 = getelementptr inbounds %struct.Reg, %struct.Reg* %250, i32 0, i32 0
  %AX.i2077 = bitcast %union.anon* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %253 = getelementptr inbounds %struct.GPR, %struct.GPR* %252, i32 0, i32 15
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %RBP.i2078 = bitcast %union.anon* %254 to i64*
  %255 = load i64, i64* %RBP.i2078
  %256 = sub i64 %255, 38
  %257 = load i16, i16* %AX.i2077
  %258 = zext i16 %257 to i64
  %259 = load i64, i64* %PC.i2076
  %260 = add i64 %259, 4
  store i64 %260, i64* %PC.i2076
  %261 = inttoptr i64 %256 to i16*
  store i16 %257, i16* %261
  store %struct.Memory* %loadMem_43eed5, %struct.Memory** %MEMORY
  %loadMem_43eed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 33
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %PC.i2073 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 17
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %R8D.i2074 = bitcast %union.anon* %267 to i32*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 15
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %RBP.i2075 = bitcast %union.anon* %270 to i64*
  %271 = load i64, i64* %RBP.i2075
  %272 = sub i64 %271, 44
  %273 = load i32, i32* %R8D.i2074
  %274 = zext i32 %273 to i64
  %275 = load i64, i64* %PC.i2073
  %276 = add i64 %275, 4
  store i64 %276, i64* %PC.i2073
  %277 = inttoptr i64 %272 to i32*
  store i32 %273, i32* %277
  store %struct.Memory* %loadMem_43eed9, %struct.Memory** %MEMORY
  %loadMem_43eedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 33
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %PC.i2070 = bitcast %union.anon* %280 to i64*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 19
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %R9D.i2071 = bitcast %union.anon* %283 to i32*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %285 = getelementptr inbounds %struct.GPR, %struct.GPR* %284, i32 0, i32 15
  %286 = getelementptr inbounds %struct.Reg, %struct.Reg* %285, i32 0, i32 0
  %RBP.i2072 = bitcast %union.anon* %286 to i64*
  %287 = load i64, i64* %RBP.i2072
  %288 = sub i64 %287, 48
  %289 = load i32, i32* %R9D.i2071
  %290 = zext i32 %289 to i64
  %291 = load i64, i64* %PC.i2070
  %292 = add i64 %291, 4
  store i64 %292, i64* %PC.i2070
  %293 = inttoptr i64 %288 to i32*
  store i32 %289, i32* %293
  store %struct.Memory* %loadMem_43eedd, %struct.Memory** %MEMORY
  %loadMem_43eee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 33
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %PC.i2068 = bitcast %union.anon* %296 to i64*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 23
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %299 to i16*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 15
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %RBP.i2069 = bitcast %union.anon* %302 to i64*
  %303 = load i64, i64* %RBP.i2069
  %304 = sub i64 %303, 50
  %305 = load i16, i16* %R11W.i
  %306 = zext i16 %305 to i64
  %307 = load i64, i64* %PC.i2068
  %308 = add i64 %307, 5
  store i64 %308, i64* %PC.i2068
  %309 = inttoptr i64 %304 to i16*
  store i16 %305, i16* %309
  store %struct.Memory* %loadMem_43eee1, %struct.Memory** %MEMORY
  %loadMem_43eee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %311 = getelementptr inbounds %struct.GPR, %struct.GPR* %310, i32 0, i32 33
  %312 = getelementptr inbounds %struct.Reg, %struct.Reg* %311, i32 0, i32 0
  %PC.i2066 = bitcast %union.anon* %312 to i64*
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %314 = getelementptr inbounds %struct.GPR, %struct.GPR* %313, i32 0, i32 21
  %315 = getelementptr inbounds %struct.Reg, %struct.Reg* %314, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %315 to i16*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %317 = getelementptr inbounds %struct.GPR, %struct.GPR* %316, i32 0, i32 15
  %318 = getelementptr inbounds %struct.Reg, %struct.Reg* %317, i32 0, i32 0
  %RBP.i2067 = bitcast %union.anon* %318 to i64*
  %319 = load i64, i64* %RBP.i2067
  %320 = sub i64 %319, 52
  %321 = load i16, i16* %R10W.i
  %322 = zext i16 %321 to i64
  %323 = load i64, i64* %PC.i2066
  %324 = add i64 %323, 5
  store i64 %324, i64* %PC.i2066
  %325 = inttoptr i64 %320 to i16*
  store i16 %321, i16* %325
  store %struct.Memory* %loadMem_43eee6, %struct.Memory** %MEMORY
  %loadMem_43eeeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 33
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %PC.i2064 = bitcast %union.anon* %328 to i64*
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %330 = getelementptr inbounds %struct.GPR, %struct.GPR* %329, i32 0, i32 15
  %331 = getelementptr inbounds %struct.Reg, %struct.Reg* %330, i32 0, i32 0
  %RBP.i2065 = bitcast %union.anon* %331 to i64*
  %332 = load i64, i64* %RBP.i2065
  %333 = sub i64 %332, 80
  %334 = load i64, i64* %PC.i2064
  %335 = add i64 %334, 7
  store i64 %335, i64* %PC.i2064
  %336 = inttoptr i64 %333 to i32*
  store i32 0, i32* %336
  store %struct.Memory* %loadMem_43eeeb, %struct.Memory** %MEMORY
  %loadMem_43eef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %338 = getelementptr inbounds %struct.GPR, %struct.GPR* %337, i32 0, i32 33
  %339 = getelementptr inbounds %struct.Reg, %struct.Reg* %338, i32 0, i32 0
  %PC.i2062 = bitcast %union.anon* %339 to i64*
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 15
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %RBP.i2063 = bitcast %union.anon* %342 to i64*
  %343 = load i64, i64* %RBP.i2063
  %344 = sub i64 %343, 88
  %345 = load i64, i64* %PC.i2062
  %346 = add i64 %345, 7
  store i64 %346, i64* %PC.i2062
  %347 = inttoptr i64 %344 to i32*
  store i32 0, i32* %347
  store %struct.Memory* %loadMem_43eef2, %struct.Memory** %MEMORY
  %loadMem_43eef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 33
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %PC.i2059 = bitcast %union.anon* %350 to i64*
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %352 = getelementptr inbounds %struct.GPR, %struct.GPR* %351, i32 0, i32 1
  %353 = getelementptr inbounds %struct.Reg, %struct.Reg* %352, i32 0, i32 0
  %RAX.i2060 = bitcast %union.anon* %353 to i64*
  %354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %355 = getelementptr inbounds %struct.GPR, %struct.GPR* %354, i32 0, i32 15
  %356 = getelementptr inbounds %struct.Reg, %struct.Reg* %355, i32 0, i32 0
  %RBP.i2061 = bitcast %union.anon* %356 to i64*
  %357 = load i64, i64* %RBP.i2061
  %358 = sub i64 %357, 36
  %359 = load i64, i64* %PC.i2059
  %360 = add i64 %359, 3
  store i64 %360, i64* %PC.i2059
  %361 = inttoptr i64 %358 to i32*
  %362 = load i32, i32* %361
  %363 = zext i32 %362 to i64
  store i64 %363, i64* %RAX.i2060, align 8
  store %struct.Memory* %loadMem_43eef9, %struct.Memory** %MEMORY
  %loadMem_43eefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %365 = getelementptr inbounds %struct.GPR, %struct.GPR* %364, i32 0, i32 33
  %366 = getelementptr inbounds %struct.Reg, %struct.Reg* %365, i32 0, i32 0
  %PC.i2058 = bitcast %union.anon* %366 to i64*
  %367 = load i64, i64* %PC.i2058
  %368 = add i64 %367, 1
  store i64 %368, i64* %PC.i2058
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %371 = bitcast %union.anon* %370 to i32*
  %372 = load i32, i32* %371, align 8
  %373 = sext i32 %372 to i64
  %374 = lshr i64 %373, 32
  store i64 %374, i64* %369, align 8
  store %struct.Memory* %loadMem_43eefc, %struct.Memory** %MEMORY
  %loadMem_43eefd = load %struct.Memory*, %struct.Memory** %MEMORY
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %376 = getelementptr inbounds %struct.GPR, %struct.GPR* %375, i32 0, i32 33
  %377 = getelementptr inbounds %struct.Reg, %struct.Reg* %376, i32 0, i32 0
  %PC.i2053 = bitcast %union.anon* %377 to i64*
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 29
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %R14D.i2054 = bitcast %union.anon* %380 to i32*
  %381 = load i32, i32* %R14D.i2054
  %382 = zext i32 %381 to i64
  %383 = load i64, i64* %PC.i2053
  %384 = add i64 %383, 3
  store i64 %384, i64* %PC.i2053
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %386 = bitcast %union.anon* %385 to i32*
  %387 = load i32, i32* %386, align 8
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %390 = bitcast %union.anon* %389 to i32*
  %391 = load i32, i32* %390, align 8
  %392 = zext i32 %391 to i64
  %393 = shl i64 %382, 32
  %394 = ashr exact i64 %393, 32
  %395 = shl i64 %392, 32
  %396 = or i64 %395, %388
  %397 = sdiv i64 %396, %394
  %398 = shl i64 %397, 32
  %399 = ashr exact i64 %398, 32
  %400 = icmp eq i64 %397, %399
  br i1 %400, label %405, label %401

; <label>:401:                                    ; preds = %entry
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %403 = load i64, i64* %402, align 8
  %404 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %403, %struct.Memory* %loadMem_43eefd)
  br label %routine_idivl__r14d.exit2055

; <label>:405:                                    ; preds = %entry
  %406 = srem i64 %396, %394
  %407 = getelementptr inbounds %union.anon, %union.anon* %385, i64 0, i32 0
  %408 = and i64 %397, 4294967295
  store i64 %408, i64* %407, align 8
  %409 = getelementptr inbounds %union.anon, %union.anon* %389, i64 0, i32 0
  %410 = and i64 %406, 4294967295
  store i64 %410, i64* %409, align 8
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %411, align 1
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %412, align 1
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %413, align 1
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %414, align 1
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %415, align 1
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %416, align 1
  br label %routine_idivl__r14d.exit2055

routine_idivl__r14d.exit2055:                     ; preds = %401, %405
  %417 = phi %struct.Memory* [ %404, %401 ], [ %loadMem_43eefd, %405 ]
  store %struct.Memory* %417, %struct.Memory** %MEMORY
  %loadMem_43ef00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 33
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %PC.i2051 = bitcast %union.anon* %420 to i64*
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 1
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %RAX.i2052 = bitcast %union.anon* %423 to i64*
  %424 = load i64, i64* %RAX.i2052
  %425 = load i64, i64* %PC.i2051
  %426 = add i64 %425, 3
  store i64 %426, i64* %PC.i2051
  %427 = and i64 %424, 4294967295
  %428 = shl i64 %427, 2
  %429 = trunc i64 %428 to i32
  %430 = icmp slt i32 %429, 0
  %431 = shl i32 %429, 1
  %432 = zext i32 %431 to i64
  store i64 %432, i64* %RAX.i2052, align 8
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %434 = zext i1 %430 to i8
  store i8 %434, i8* %433, align 1
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %436 = and i32 %431, 254
  %437 = call i32 @llvm.ctpop.i32(i32 %436)
  %438 = trunc i32 %437 to i8
  %439 = and i8 %438, 1
  %440 = xor i8 %439, 1
  store i8 %440, i8* %435, align 1
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %441, align 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %443 = icmp eq i32 %431, 0
  %444 = zext i1 %443 to i8
  store i8 %444, i8* %442, align 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %446 = lshr i32 %431, 31
  %447 = trunc i32 %446 to i8
  store i8 %447, i8* %445, align 1
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %448, align 1
  store %struct.Memory* %loadMem_43ef00, %struct.Memory** %MEMORY
  %loadMem_43ef03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %450 = getelementptr inbounds %struct.GPR, %struct.GPR* %449, i32 0, i32 33
  %451 = getelementptr inbounds %struct.Reg, %struct.Reg* %450, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %451 to i64*
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %453 = getelementptr inbounds %struct.GPR, %struct.GPR* %452, i32 0, i32 1
  %454 = getelementptr inbounds %struct.Reg, %struct.Reg* %453, i32 0, i32 0
  %EAX.i2049 = bitcast %union.anon* %454 to i32*
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %456 = getelementptr inbounds %struct.GPR, %struct.GPR* %455, i32 0, i32 15
  %457 = getelementptr inbounds %struct.Reg, %struct.Reg* %456, i32 0, i32 0
  %RBP.i2050 = bitcast %union.anon* %457 to i64*
  %458 = load i64, i64* %RBP.i2050
  %459 = sub i64 %458, 92
  %460 = load i32, i32* %EAX.i2049
  %461 = zext i32 %460 to i64
  %462 = load i64, i64* %PC.i2048
  %463 = add i64 %462, 3
  store i64 %463, i64* %PC.i2048
  %464 = inttoptr i64 %459 to i32*
  store i32 %460, i32* %464
  store %struct.Memory* %loadMem_43ef03, %struct.Memory** %MEMORY
  %loadMem_43ef06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 33
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %PC.i2045 = bitcast %union.anon* %467 to i64*
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %469 = getelementptr inbounds %struct.GPR, %struct.GPR* %468, i32 0, i32 1
  %470 = getelementptr inbounds %struct.Reg, %struct.Reg* %469, i32 0, i32 0
  %RAX.i2046 = bitcast %union.anon* %470 to i64*
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %472 = getelementptr inbounds %struct.GPR, %struct.GPR* %471, i32 0, i32 15
  %473 = getelementptr inbounds %struct.Reg, %struct.Reg* %472, i32 0, i32 0
  %RBP.i2047 = bitcast %union.anon* %473 to i64*
  %474 = load i64, i64* %RBP.i2047
  %475 = sub i64 %474, 36
  %476 = load i64, i64* %PC.i2045
  %477 = add i64 %476, 3
  store i64 %477, i64* %PC.i2045
  %478 = inttoptr i64 %475 to i32*
  %479 = load i32, i32* %478
  %480 = zext i32 %479 to i64
  store i64 %480, i64* %RAX.i2046, align 8
  store %struct.Memory* %loadMem_43ef06, %struct.Memory** %MEMORY
  %loadMem_43ef09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %482 = getelementptr inbounds %struct.GPR, %struct.GPR* %481, i32 0, i32 33
  %483 = getelementptr inbounds %struct.Reg, %struct.Reg* %482, i32 0, i32 0
  %PC.i2044 = bitcast %union.anon* %483 to i64*
  %484 = load i64, i64* %PC.i2044
  %485 = add i64 %484, 1
  store i64 %485, i64* %PC.i2044
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %488 = bitcast %union.anon* %487 to i32*
  %489 = load i32, i32* %488, align 8
  %490 = sext i32 %489 to i64
  %491 = lshr i64 %490, 32
  store i64 %491, i64* %486, align 8
  store %struct.Memory* %loadMem_43ef09, %struct.Memory** %MEMORY
  %loadMem_43ef0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %493 = getelementptr inbounds %struct.GPR, %struct.GPR* %492, i32 0, i32 33
  %494 = getelementptr inbounds %struct.Reg, %struct.Reg* %493, i32 0, i32 0
  %PC.i2041 = bitcast %union.anon* %494 to i64*
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %496 = getelementptr inbounds %struct.GPR, %struct.GPR* %495, i32 0, i32 29
  %497 = getelementptr inbounds %struct.Reg, %struct.Reg* %496, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %497 to i32*
  %498 = load i32, i32* %R14D.i
  %499 = zext i32 %498 to i64
  %500 = load i64, i64* %PC.i2041
  %501 = add i64 %500, 3
  store i64 %501, i64* %PC.i2041
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %503 = bitcast %union.anon* %502 to i32*
  %504 = load i32, i32* %503, align 8
  %505 = zext i32 %504 to i64
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %507 = bitcast %union.anon* %506 to i32*
  %508 = load i32, i32* %507, align 8
  %509 = zext i32 %508 to i64
  %510 = shl i64 %499, 32
  %511 = ashr exact i64 %510, 32
  %512 = shl i64 %509, 32
  %513 = or i64 %512, %505
  %514 = sdiv i64 %513, %511
  %515 = shl i64 %514, 32
  %516 = ashr exact i64 %515, 32
  %517 = icmp eq i64 %514, %516
  br i1 %517, label %522, label %518

; <label>:518:                                    ; preds = %routine_idivl__r14d.exit2055
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %520 = load i64, i64* %519, align 8
  %521 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %520, %struct.Memory* %loadMem_43ef0a)
  br label %routine_idivl__r14d.exit

; <label>:522:                                    ; preds = %routine_idivl__r14d.exit2055
  %523 = srem i64 %513, %511
  %524 = getelementptr inbounds %union.anon, %union.anon* %502, i64 0, i32 0
  %525 = and i64 %514, 4294967295
  store i64 %525, i64* %524, align 8
  %526 = getelementptr inbounds %union.anon, %union.anon* %506, i64 0, i32 0
  %527 = and i64 %523, 4294967295
  store i64 %527, i64* %526, align 8
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %528, align 1
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %529, align 1
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %530, align 1
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %531, align 1
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %532, align 1
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %533, align 1
  br label %routine_idivl__r14d.exit

routine_idivl__r14d.exit:                         ; preds = %518, %522
  %534 = phi %struct.Memory* [ %521, %518 ], [ %loadMem_43ef0a, %522 ]
  store %struct.Memory* %534, %struct.Memory** %MEMORY
  %loadMem_43ef0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 33
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %PC.i2039 = bitcast %union.anon* %537 to i64*
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %539 = getelementptr inbounds %struct.GPR, %struct.GPR* %538, i32 0, i32 7
  %540 = getelementptr inbounds %struct.Reg, %struct.Reg* %539, i32 0, i32 0
  %RDX.i2040 = bitcast %union.anon* %540 to i64*
  %541 = load i64, i64* %RDX.i2040
  %542 = load i64, i64* %PC.i2039
  %543 = add i64 %542, 3
  store i64 %543, i64* %PC.i2039
  %544 = and i64 %541, 4294967295
  %545 = shl i64 %544, 2
  %546 = trunc i64 %545 to i32
  %547 = icmp slt i32 %546, 0
  %548 = shl i32 %546, 1
  %549 = zext i32 %548 to i64
  store i64 %549, i64* %RDX.i2040, align 8
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %551 = zext i1 %547 to i8
  store i8 %551, i8* %550, align 1
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %553 = and i32 %548, 254
  %554 = call i32 @llvm.ctpop.i32(i32 %553)
  %555 = trunc i32 %554 to i8
  %556 = and i8 %555, 1
  %557 = xor i8 %556, 1
  store i8 %557, i8* %552, align 1
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %558, align 1
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %560 = icmp eq i32 %548, 0
  %561 = zext i1 %560 to i8
  store i8 %561, i8* %559, align 1
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %563 = lshr i32 %548, 31
  %564 = trunc i32 %563 to i8
  store i8 %564, i8* %562, align 1
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %565, align 1
  store %struct.Memory* %loadMem_43ef0d, %struct.Memory** %MEMORY
  %loadMem_43ef10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %567 = getelementptr inbounds %struct.GPR, %struct.GPR* %566, i32 0, i32 33
  %568 = getelementptr inbounds %struct.Reg, %struct.Reg* %567, i32 0, i32 0
  %PC.i2036 = bitcast %union.anon* %568 to i64*
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %570 = getelementptr inbounds %struct.GPR, %struct.GPR* %569, i32 0, i32 7
  %571 = getelementptr inbounds %struct.Reg, %struct.Reg* %570, i32 0, i32 0
  %EDX.i2037 = bitcast %union.anon* %571 to i32*
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 15
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %RBP.i2038 = bitcast %union.anon* %574 to i64*
  %575 = load i64, i64* %RBP.i2038
  %576 = sub i64 %575, 96
  %577 = load i32, i32* %EDX.i2037
  %578 = zext i32 %577 to i64
  %579 = load i64, i64* %PC.i2036
  %580 = add i64 %579, 3
  store i64 %580, i64* %PC.i2036
  %581 = inttoptr i64 %576 to i32*
  store i32 %577, i32* %581
  store %struct.Memory* %loadMem_43ef10, %struct.Memory** %MEMORY
  %loadMem_43ef13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %583 = getelementptr inbounds %struct.GPR, %struct.GPR* %582, i32 0, i32 33
  %584 = getelementptr inbounds %struct.Reg, %struct.Reg* %583, i32 0, i32 0
  %PC.i2033 = bitcast %union.anon* %584 to i64*
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 7
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %RDX.i2034 = bitcast %union.anon* %587 to i64*
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %589 = getelementptr inbounds %struct.GPR, %struct.GPR* %588, i32 0, i32 15
  %590 = getelementptr inbounds %struct.Reg, %struct.Reg* %589, i32 0, i32 0
  %RBP.i2035 = bitcast %union.anon* %590 to i64*
  %591 = load i64, i64* %RBP.i2035
  %592 = sub i64 %591, 36
  %593 = load i64, i64* %PC.i2033
  %594 = add i64 %593, 3
  store i64 %594, i64* %PC.i2033
  %595 = inttoptr i64 %592 to i32*
  %596 = load i32, i32* %595
  %597 = zext i32 %596 to i64
  store i64 %597, i64* %RDX.i2034, align 8
  store %struct.Memory* %loadMem_43ef13, %struct.Memory** %MEMORY
  %loadMem_43ef16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 33
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %PC.i2030 = bitcast %union.anon* %600 to i64*
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %602 = getelementptr inbounds %struct.GPR, %struct.GPR* %601, i32 0, i32 5
  %603 = getelementptr inbounds %struct.Reg, %struct.Reg* %602, i32 0, i32 0
  %ECX.i2031 = bitcast %union.anon* %603 to i32*
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %605 = getelementptr inbounds %struct.GPR, %struct.GPR* %604, i32 0, i32 15
  %606 = getelementptr inbounds %struct.Reg, %struct.Reg* %605, i32 0, i32 0
  %RBP.i2032 = bitcast %union.anon* %606 to i64*
  %607 = load i64, i64* %RBP.i2032
  %608 = sub i64 %607, 152
  %609 = load i32, i32* %ECX.i2031
  %610 = zext i32 %609 to i64
  %611 = load i64, i64* %PC.i2030
  %612 = add i64 %611, 6
  store i64 %612, i64* %PC.i2030
  %613 = inttoptr i64 %608 to i32*
  store i32 %609, i32* %613
  store %struct.Memory* %loadMem_43ef16, %struct.Memory** %MEMORY
  %loadMem_43ef1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 33
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %PC.i2027 = bitcast %union.anon* %616 to i64*
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %618 = getelementptr inbounds %struct.GPR, %struct.GPR* %617, i32 0, i32 7
  %619 = getelementptr inbounds %struct.Reg, %struct.Reg* %618, i32 0, i32 0
  %EDX.i2028 = bitcast %union.anon* %619 to i32*
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 5
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %RCX.i2029 = bitcast %union.anon* %622 to i64*
  %623 = load i32, i32* %EDX.i2028
  %624 = zext i32 %623 to i64
  %625 = load i64, i64* %PC.i2027
  %626 = add i64 %625, 2
  store i64 %626, i64* %PC.i2027
  %627 = and i64 %624, 4294967295
  store i64 %627, i64* %RCX.i2029, align 8
  store %struct.Memory* %loadMem_43ef1c, %struct.Memory** %MEMORY
  %loadMem_43ef1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 33
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %PC.i2024 = bitcast %union.anon* %630 to i64*
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %632 = getelementptr inbounds %struct.GPR, %struct.GPR* %631, i32 0, i32 7
  %633 = getelementptr inbounds %struct.Reg, %struct.Reg* %632, i32 0, i32 0
  %RDX.i2025 = bitcast %union.anon* %633 to i64*
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %635 = getelementptr inbounds %struct.GPR, %struct.GPR* %634, i32 0, i32 15
  %636 = getelementptr inbounds %struct.Reg, %struct.Reg* %635, i32 0, i32 0
  %RBP.i2026 = bitcast %union.anon* %636 to i64*
  %637 = load i64, i64* %RBP.i2026
  %638 = sub i64 %637, 152
  %639 = load i64, i64* %PC.i2024
  %640 = add i64 %639, 6
  store i64 %640, i64* %PC.i2024
  %641 = inttoptr i64 %638 to i32*
  %642 = load i32, i32* %641
  %643 = zext i32 %642 to i64
  store i64 %643, i64* %RDX.i2025, align 8
  store %struct.Memory* %loadMem_43ef1e, %struct.Memory** %MEMORY
  %loadMem_43ef24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 33
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %PC.i2020 = bitcast %union.anon* %646 to i64*
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 5
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %650 = bitcast %union.anon* %649 to %struct.anon.2*
  %CL.i2021 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %650, i32 0, i32 0
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %652 = getelementptr inbounds %struct.GPR, %struct.GPR* %651, i32 0, i32 7
  %653 = getelementptr inbounds %struct.Reg, %struct.Reg* %652, i32 0, i32 0
  %RDX.i2022 = bitcast %union.anon* %653 to i64*
  %654 = load i64, i64* %RDX.i2022
  %655 = load i8, i8* %CL.i2021
  %656 = zext i8 %655 to i64
  %657 = load i64, i64* %PC.i2020
  %658 = add i64 %657, 2
  store i64 %658, i64* %PC.i2020
  %659 = trunc i64 %656 to i5
  switch i5 %659, label %666 [
    i5 0, label %routine_shll__cl___edx.exit2023
    i5 1, label %660
  ]

; <label>:660:                                    ; preds = %routine_idivl__r14d.exit
  %661 = trunc i64 %654 to i32
  %662 = shl i32 %661, 1
  %663 = icmp slt i32 %661, 0
  %664 = icmp slt i32 %662, 0
  %665 = xor i1 %663, %664
  br label %675

; <label>:666:                                    ; preds = %routine_idivl__r14d.exit
  %667 = and i64 %656, 31
  %668 = add i64 %667, 4294967295
  %669 = and i64 %654, 4294967295
  %670 = and i64 %668, 4294967295
  %671 = shl i64 %669, %670
  %672 = trunc i64 %671 to i32
  %673 = icmp slt i32 %672, 0
  %674 = shl i32 %672, 1
  br label %675

; <label>:675:                                    ; preds = %666, %660
  %676 = phi i1 [ %663, %660 ], [ %673, %666 ]
  %677 = phi i1 [ %665, %660 ], [ false, %666 ]
  %678 = phi i32 [ %662, %660 ], [ %674, %666 ]
  %679 = zext i32 %678 to i64
  store i64 %679, i64* %RDX.i2022, align 8
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %681 = zext i1 %676 to i8
  store i8 %681, i8* %680, align 1
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %683 = and i32 %678, 254
  %684 = call i32 @llvm.ctpop.i32(i32 %683)
  %685 = trunc i32 %684 to i8
  %686 = and i8 %685, 1
  %687 = xor i8 %686, 1
  store i8 %687, i8* %682, align 1
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %688, align 1
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %690 = icmp eq i32 %678, 0
  %691 = zext i1 %690 to i8
  store i8 %691, i8* %689, align 1
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %693 = lshr i32 %678, 31
  %694 = trunc i32 %693 to i8
  store i8 %694, i8* %692, align 1
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %696 = zext i1 %677 to i8
  store i8 %696, i8* %695, align 1
  br label %routine_shll__cl___edx.exit2023

routine_shll__cl___edx.exit2023:                  ; preds = %routine_idivl__r14d.exit, %675
  store %struct.Memory* %loadMem_43ef24, %struct.Memory** %MEMORY
  %loadMem_43ef26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %698 = getelementptr inbounds %struct.GPR, %struct.GPR* %697, i32 0, i32 33
  %699 = getelementptr inbounds %struct.Reg, %struct.Reg* %698, i32 0, i32 0
  %PC.i2017 = bitcast %union.anon* %699 to i64*
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 7
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %EDX.i2018 = bitcast %union.anon* %702 to i32*
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 15
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %RBP.i2019 = bitcast %union.anon* %705 to i64*
  %706 = load i64, i64* %RBP.i2019
  %707 = sub i64 %706, 100
  %708 = load i32, i32* %EDX.i2018
  %709 = zext i32 %708 to i64
  %710 = load i64, i64* %PC.i2017
  %711 = add i64 %710, 3
  store i64 %711, i64* %PC.i2017
  %712 = inttoptr i64 %707 to i32*
  store i32 %708, i32* %712
  store %struct.Memory* %loadMem_43ef26, %struct.Memory** %MEMORY
  %loadMem_43ef29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %714 = getelementptr inbounds %struct.GPR, %struct.GPR* %713, i32 0, i32 33
  %715 = getelementptr inbounds %struct.Reg, %struct.Reg* %714, i32 0, i32 0
  %PC.i2015 = bitcast %union.anon* %715 to i64*
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %717 = getelementptr inbounds %struct.GPR, %struct.GPR* %716, i32 0, i32 15
  %718 = getelementptr inbounds %struct.Reg, %struct.Reg* %717, i32 0, i32 0
  %RBP.i2016 = bitcast %union.anon* %718 to i64*
  %719 = load i64, i64* %RBP.i2016
  %720 = sub i64 %719, 112
  %721 = load i64, i64* %PC.i2015
  %722 = add i64 %721, 7
  store i64 %722, i64* %PC.i2015
  %723 = inttoptr i64 %720 to i32*
  store i32 0, i32* %723
  store %struct.Memory* %loadMem_43ef29, %struct.Memory** %MEMORY
  %loadMem_43ef30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %725 = getelementptr inbounds %struct.GPR, %struct.GPR* %724, i32 0, i32 33
  %726 = getelementptr inbounds %struct.Reg, %struct.Reg* %725, i32 0, i32 0
  %PC.i2013 = bitcast %union.anon* %726 to i64*
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %728 = getelementptr inbounds %struct.GPR, %struct.GPR* %727, i32 0, i32 15
  %729 = getelementptr inbounds %struct.Reg, %struct.Reg* %728, i32 0, i32 0
  %RBP.i2014 = bitcast %union.anon* %729 to i64*
  %730 = load i64, i64* %RBP.i2014
  %731 = sub i64 %730, 44
  %732 = load i64, i64* %PC.i2013
  %733 = add i64 %732, 4
  store i64 %733, i64* %PC.i2013
  %734 = inttoptr i64 %731 to i32*
  %735 = load i32, i32* %734
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %736, align 1
  %737 = and i32 %735, 255
  %738 = call i32 @llvm.ctpop.i32(i32 %737)
  %739 = trunc i32 %738 to i8
  %740 = and i8 %739, 1
  %741 = xor i8 %740, 1
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %741, i8* %742, align 1
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %743, align 1
  %744 = icmp eq i32 %735, 0
  %745 = zext i1 %744 to i8
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %745, i8* %746, align 1
  %747 = lshr i32 %735, 31
  %748 = trunc i32 %747 to i8
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %748, i8* %749, align 1
  %750 = lshr i32 %735, 31
  %751 = xor i32 %747, %750
  %752 = add i32 %751, %750
  %753 = icmp eq i32 %752, 2
  %754 = zext i1 %753 to i8
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %754, i8* %755, align 1
  store %struct.Memory* %loadMem_43ef30, %struct.Memory** %MEMORY
  %loadMem_43ef34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %757 = getelementptr inbounds %struct.GPR, %struct.GPR* %756, i32 0, i32 33
  %758 = getelementptr inbounds %struct.Reg, %struct.Reg* %757, i32 0, i32 0
  %PC.i2011 = bitcast %union.anon* %758 to i64*
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %760 = getelementptr inbounds %struct.GPR, %struct.GPR* %759, i32 0, i32 3
  %761 = getelementptr inbounds %struct.Reg, %struct.Reg* %760, i32 0, i32 0
  %762 = bitcast %union.anon* %761 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %762, i32 0, i32 0
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %764 = getelementptr inbounds %struct.GPR, %struct.GPR* %763, i32 0, i32 15
  %765 = getelementptr inbounds %struct.Reg, %struct.Reg* %764, i32 0, i32 0
  %RBP.i2012 = bitcast %union.anon* %765 to i64*
  %766 = load i64, i64* %RBP.i2012
  %767 = sub i64 %766, 153
  %768 = load i8, i8* %BL.i
  %769 = zext i8 %768 to i64
  %770 = load i64, i64* %PC.i2011
  %771 = add i64 %770, 6
  store i64 %771, i64* %PC.i2011
  %772 = inttoptr i64 %767 to i8*
  store i8 %768, i8* %772
  store %struct.Memory* %loadMem_43ef34, %struct.Memory** %MEMORY
  %loadMem_43ef3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 33
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %PC.i2010 = bitcast %union.anon* %775 to i64*
  %776 = load i64, i64* %PC.i2010
  %777 = add i64 %776, 47
  %778 = load i64, i64* %PC.i2010
  %779 = add i64 %778, 6
  %780 = load i64, i64* %PC.i2010
  %781 = add i64 %780, 6
  store i64 %781, i64* %PC.i2010
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %783 = load i8, i8* %782, align 1
  %784 = icmp eq i8 %783, 0
  %785 = zext i1 %784 to i8
  store i8 %785, i8* %BRANCH_TAKEN, align 1
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %787 = select i1 %784, i64 %777, i64 %779
  store i64 %787, i64* %786, align 8
  store %struct.Memory* %loadMem_43ef3a, %struct.Memory** %MEMORY
  %loadBr_43ef3a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ef3a = icmp eq i8 %loadBr_43ef3a, 1
  br i1 %cmpBr_43ef3a, label %block_.L_43ef69, label %block_43ef40

block_43ef40:                                     ; preds = %routine_shll__cl___edx.exit2023
  %loadMem_43ef40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 33
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %PC.i2007 = bitcast %union.anon* %790 to i64*
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 1
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %EAX.i2008 = bitcast %union.anon* %793 to i32*
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 1
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %RAX.i2009 = bitcast %union.anon* %796 to i64*
  %797 = load i64, i64* %RAX.i2009
  %798 = load i32, i32* %EAX.i2008
  %799 = zext i32 %798 to i64
  %800 = load i64, i64* %PC.i2007
  %801 = add i64 %800, 2
  store i64 %801, i64* %PC.i2007
  %802 = xor i64 %799, %797
  %803 = trunc i64 %802 to i32
  %804 = and i64 %802, 4294967295
  store i64 %804, i64* %RAX.i2009, align 8
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %805, align 1
  %806 = and i32 %803, 255
  %807 = call i32 @llvm.ctpop.i32(i32 %806)
  %808 = trunc i32 %807 to i8
  %809 = and i8 %808, 1
  %810 = xor i8 %809, 1
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %810, i8* %811, align 1
  %812 = icmp eq i32 %803, 0
  %813 = zext i1 %812 to i8
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %813, i8* %814, align 1
  %815 = lshr i32 %803, 31
  %816 = trunc i32 %815 to i8
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %816, i8* %817, align 1
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %818, align 1
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %819, align 1
  store %struct.Memory* %loadMem_43ef40, %struct.Memory** %MEMORY
  %loadMem_43ef42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %821 = getelementptr inbounds %struct.GPR, %struct.GPR* %820, i32 0, i32 33
  %822 = getelementptr inbounds %struct.Reg, %struct.Reg* %821, i32 0, i32 0
  %PC.i2004 = bitcast %union.anon* %822 to i64*
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %824 = getelementptr inbounds %struct.GPR, %struct.GPR* %823, i32 0, i32 1
  %825 = getelementptr inbounds %struct.Reg, %struct.Reg* %824, i32 0, i32 0
  %826 = bitcast %union.anon* %825 to %struct.anon.2*
  %AL.i2005 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %826, i32 0, i32 0
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 5
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %830 = bitcast %union.anon* %829 to %struct.anon.2*
  %CL.i2006 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %830, i32 0, i32 0
  %831 = load i8, i8* %AL.i2005
  %832 = zext i8 %831 to i64
  %833 = load i64, i64* %PC.i2004
  %834 = add i64 %833, 2
  store i64 %834, i64* %PC.i2004
  store i8 %831, i8* %CL.i2006, align 1
  store %struct.Memory* %loadMem_43ef42, %struct.Memory** %MEMORY
  %loadMem_43ef44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %836 = getelementptr inbounds %struct.GPR, %struct.GPR* %835, i32 0, i32 33
  %837 = getelementptr inbounds %struct.Reg, %struct.Reg* %836, i32 0, i32 0
  %PC.i2002 = bitcast %union.anon* %837 to i64*
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %839 = getelementptr inbounds %struct.GPR, %struct.GPR* %838, i32 0, i32 15
  %840 = getelementptr inbounds %struct.Reg, %struct.Reg* %839, i32 0, i32 0
  %RBP.i2003 = bitcast %union.anon* %840 to i64*
  %841 = load i64, i64* %RBP.i2003
  %842 = sub i64 %841, 48
  %843 = load i64, i64* %PC.i2002
  %844 = add i64 %843, 4
  store i64 %844, i64* %PC.i2002
  %845 = inttoptr i64 %842 to i32*
  %846 = load i32, i32* %845
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %847, align 1
  %848 = and i32 %846, 255
  %849 = call i32 @llvm.ctpop.i32(i32 %848)
  %850 = trunc i32 %849 to i8
  %851 = and i8 %850, 1
  %852 = xor i8 %851, 1
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %852, i8* %853, align 1
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %854, align 1
  %855 = icmp eq i32 %846, 0
  %856 = zext i1 %855 to i8
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %856, i8* %857, align 1
  %858 = lshr i32 %846, 31
  %859 = trunc i32 %858 to i8
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %859, i8* %860, align 1
  %861 = lshr i32 %846, 31
  %862 = xor i32 %858, %861
  %863 = add i32 %862, %861
  %864 = icmp eq i32 %863, 2
  %865 = zext i1 %864 to i8
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %865, i8* %866, align 1
  store %struct.Memory* %loadMem_43ef44, %struct.Memory** %MEMORY
  %loadMem_43ef48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %868 = getelementptr inbounds %struct.GPR, %struct.GPR* %867, i32 0, i32 33
  %869 = getelementptr inbounds %struct.Reg, %struct.Reg* %868, i32 0, i32 0
  %PC.i1999 = bitcast %union.anon* %869 to i64*
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %871 = getelementptr inbounds %struct.GPR, %struct.GPR* %870, i32 0, i32 5
  %872 = getelementptr inbounds %struct.Reg, %struct.Reg* %871, i32 0, i32 0
  %873 = bitcast %union.anon* %872 to %struct.anon.2*
  %CL.i2000 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %873, i32 0, i32 0
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 15
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %RBP.i2001 = bitcast %union.anon* %876 to i64*
  %877 = load i64, i64* %RBP.i2001
  %878 = sub i64 %877, 153
  %879 = load i8, i8* %CL.i2000
  %880 = zext i8 %879 to i64
  %881 = load i64, i64* %PC.i1999
  %882 = add i64 %881, 6
  store i64 %882, i64* %PC.i1999
  %883 = inttoptr i64 %878 to i8*
  store i8 %879, i8* %883
  store %struct.Memory* %loadMem_43ef48, %struct.Memory** %MEMORY
  %loadMem_43ef4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i1998 = bitcast %union.anon* %886 to i64*
  %887 = load i64, i64* %PC.i1998
  %888 = add i64 %887, 27
  %889 = load i64, i64* %PC.i1998
  %890 = add i64 %889, 6
  %891 = load i64, i64* %PC.i1998
  %892 = add i64 %891, 6
  store i64 %892, i64* %PC.i1998
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %894 = load i8, i8* %893, align 1
  %895 = icmp eq i8 %894, 0
  %896 = zext i1 %895 to i8
  store i8 %896, i8* %BRANCH_TAKEN, align 1
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %898 = select i1 %895, i64 %888, i64 %890
  store i64 %898, i64* %897, align 8
  store %struct.Memory* %loadMem_43ef4e, %struct.Memory** %MEMORY
  %loadBr_43ef4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ef4e = icmp eq i8 %loadBr_43ef4e, 1
  br i1 %cmpBr_43ef4e, label %block_.L_43ef69, label %block_43ef54

block_43ef54:                                     ; preds = %block_43ef40
  %loadMem_43ef54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %900 = getelementptr inbounds %struct.GPR, %struct.GPR* %899, i32 0, i32 33
  %901 = getelementptr inbounds %struct.Reg, %struct.Reg* %900, i32 0, i32 0
  %PC.i1996 = bitcast %union.anon* %901 to i64*
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %903 = getelementptr inbounds %struct.GPR, %struct.GPR* %902, i32 0, i32 1
  %904 = getelementptr inbounds %struct.Reg, %struct.Reg* %903, i32 0, i32 0
  %RAX.i1997 = bitcast %union.anon* %904 to i64*
  %905 = load i64, i64* %PC.i1996
  %906 = add i64 %905, 8
  store i64 %906, i64* %PC.i1996
  %907 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %907, i64* %RAX.i1997, align 8
  store %struct.Memory* %loadMem_43ef54, %struct.Memory** %MEMORY
  %loadMem_43ef5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 33
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %PC.i1994 = bitcast %union.anon* %910 to i64*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %912 = getelementptr inbounds %struct.GPR, %struct.GPR* %911, i32 0, i32 1
  %913 = getelementptr inbounds %struct.Reg, %struct.Reg* %912, i32 0, i32 0
  %RAX.i1995 = bitcast %union.anon* %913 to i64*
  %914 = load i64, i64* %RAX.i1995
  %915 = add i64 %914, 24
  %916 = load i64, i64* %PC.i1994
  %917 = add i64 %916, 4
  store i64 %917, i64* %PC.i1994
  %918 = inttoptr i64 %915 to i32*
  %919 = load i32, i32* %918
  %920 = sub i32 %919, 1
  %921 = icmp ult i32 %919, 1
  %922 = zext i1 %921 to i8
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %922, i8* %923, align 1
  %924 = and i32 %920, 255
  %925 = call i32 @llvm.ctpop.i32(i32 %924)
  %926 = trunc i32 %925 to i8
  %927 = and i8 %926, 1
  %928 = xor i8 %927, 1
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %928, i8* %929, align 1
  %930 = xor i32 %919, 1
  %931 = xor i32 %930, %920
  %932 = lshr i32 %931, 4
  %933 = trunc i32 %932 to i8
  %934 = and i8 %933, 1
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %934, i8* %935, align 1
  %936 = icmp eq i32 %920, 0
  %937 = zext i1 %936 to i8
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %937, i8* %938, align 1
  %939 = lshr i32 %920, 31
  %940 = trunc i32 %939 to i8
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %940, i8* %941, align 1
  %942 = lshr i32 %919, 31
  %943 = xor i32 %939, %942
  %944 = add i32 %943, %942
  %945 = icmp eq i32 %944, 2
  %946 = zext i1 %945 to i8
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %946, i8* %947, align 1
  store %struct.Memory* %loadMem_43ef5c, %struct.Memory** %MEMORY
  %loadMem_43ef60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 33
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %PC.i1992 = bitcast %union.anon* %950 to i64*
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 5
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %954 = bitcast %union.anon* %953 to %struct.anon.2*
  %CL.i1993 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %954, i32 0, i32 0
  %955 = load i64, i64* %PC.i1992
  %956 = add i64 %955, 3
  store i64 %956, i64* %PC.i1992
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %958 = load i8, i8* %957, align 1
  %959 = icmp eq i8 %958, 0
  %960 = zext i1 %959 to i8
  store i8 %960, i8* %CL.i1993, align 1
  store %struct.Memory* %loadMem_43ef60, %struct.Memory** %MEMORY
  %loadMem_43ef63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %962 = getelementptr inbounds %struct.GPR, %struct.GPR* %961, i32 0, i32 33
  %963 = getelementptr inbounds %struct.Reg, %struct.Reg* %962, i32 0, i32 0
  %PC.i1989 = bitcast %union.anon* %963 to i64*
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 5
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %967 = bitcast %union.anon* %966 to %struct.anon.2*
  %CL.i1990 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %967, i32 0, i32 0
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 15
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %RBP.i1991 = bitcast %union.anon* %970 to i64*
  %971 = load i64, i64* %RBP.i1991
  %972 = sub i64 %971, 153
  %973 = load i8, i8* %CL.i1990
  %974 = zext i8 %973 to i64
  %975 = load i64, i64* %PC.i1989
  %976 = add i64 %975, 6
  store i64 %976, i64* %PC.i1989
  %977 = inttoptr i64 %972 to i8*
  store i8 %973, i8* %977
  store %struct.Memory* %loadMem_43ef63, %struct.Memory** %MEMORY
  br label %block_.L_43ef69

block_.L_43ef69:                                  ; preds = %block_43ef54, %block_43ef40, %routine_shll__cl___edx.exit2023
  %loadMem_43ef69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %979 = getelementptr inbounds %struct.GPR, %struct.GPR* %978, i32 0, i32 33
  %980 = getelementptr inbounds %struct.Reg, %struct.Reg* %979, i32 0, i32 0
  %PC.i1986 = bitcast %union.anon* %980 to i64*
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 1
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %984 = bitcast %union.anon* %983 to %struct.anon.2*
  %AL.i1987 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %984, i32 0, i32 0
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %986 = getelementptr inbounds %struct.GPR, %struct.GPR* %985, i32 0, i32 15
  %987 = getelementptr inbounds %struct.Reg, %struct.Reg* %986, i32 0, i32 0
  %RBP.i1988 = bitcast %union.anon* %987 to i64*
  %988 = load i64, i64* %RBP.i1988
  %989 = sub i64 %988, 153
  %990 = load i64, i64* %PC.i1986
  %991 = add i64 %990, 6
  store i64 %991, i64* %PC.i1986
  %992 = inttoptr i64 %989 to i8*
  %993 = load i8, i8* %992
  store i8 %993, i8* %AL.i1987, align 1
  store %struct.Memory* %loadMem_43ef69, %struct.Memory** %MEMORY
  %loadMem_43ef6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %995 = getelementptr inbounds %struct.GPR, %struct.GPR* %994, i32 0, i32 33
  %996 = getelementptr inbounds %struct.Reg, %struct.Reg* %995, i32 0, i32 0
  %PC.i1984 = bitcast %union.anon* %996 to i64*
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %998 = getelementptr inbounds %struct.GPR, %struct.GPR* %997, i32 0, i32 1
  %999 = getelementptr inbounds %struct.Reg, %struct.Reg* %998, i32 0, i32 0
  %1000 = bitcast %union.anon* %999 to %struct.anon.2*
  %AL.i1985 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1000, i32 0, i32 0
  %1001 = load i8, i8* %AL.i1985
  %1002 = zext i8 %1001 to i64
  %1003 = load i64, i64* %PC.i1984
  %1004 = add i64 %1003, 2
  store i64 %1004, i64* %PC.i1984
  %1005 = and i64 1, %1002
  %1006 = trunc i64 %1005 to i8
  store i8 %1006, i8* %AL.i1985, align 1
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1007, align 1
  %1008 = trunc i64 %1005 to i32
  %1009 = and i32 %1008, 255
  %1010 = call i32 @llvm.ctpop.i32(i32 %1009)
  %1011 = trunc i32 %1010 to i8
  %1012 = and i8 %1011, 1
  %1013 = xor i8 %1012, 1
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1013, i8* %1014, align 1
  %1015 = icmp eq i8 %1006, 0
  %1016 = zext i1 %1015 to i8
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1016, i8* %1017, align 1
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1018, align 1
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1019, align 1
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1020, align 1
  store %struct.Memory* %loadMem_43ef6f, %struct.Memory** %MEMORY
  %loadMem_43ef71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 33
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %PC.i1982 = bitcast %union.anon* %1023 to i64*
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 1
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %1027 = bitcast %union.anon* %1026 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1027, i32 0, i32 0
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 5
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %RCX.i1983 = bitcast %union.anon* %1030 to i64*
  %1031 = load i8, i8* %AL.i
  %1032 = zext i8 %1031 to i64
  %1033 = load i64, i64* %PC.i1982
  %1034 = add i64 %1033, 3
  store i64 %1034, i64* %PC.i1982
  %1035 = and i64 %1032, 255
  store i64 %1035, i64* %RCX.i1983, align 8
  store %struct.Memory* %loadMem_43ef71, %struct.Memory** %MEMORY
  %loadMem_43ef74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1037 = getelementptr inbounds %struct.GPR, %struct.GPR* %1036, i32 0, i32 33
  %1038 = getelementptr inbounds %struct.Reg, %struct.Reg* %1037, i32 0, i32 0
  %PC.i1979 = bitcast %union.anon* %1038 to i64*
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1040 = getelementptr inbounds %struct.GPR, %struct.GPR* %1039, i32 0, i32 5
  %1041 = getelementptr inbounds %struct.Reg, %struct.Reg* %1040, i32 0, i32 0
  %ECX.i1980 = bitcast %union.anon* %1041 to i32*
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1043 = getelementptr inbounds %struct.GPR, %struct.GPR* %1042, i32 0, i32 15
  %1044 = getelementptr inbounds %struct.Reg, %struct.Reg* %1043, i32 0, i32 0
  %RBP.i1981 = bitcast %union.anon* %1044 to i64*
  %1045 = load i64, i64* %RBP.i1981
  %1046 = sub i64 %1045, 116
  %1047 = load i32, i32* %ECX.i1980
  %1048 = zext i32 %1047 to i64
  %1049 = load i64, i64* %PC.i1979
  %1050 = add i64 %1049, 3
  store i64 %1050, i64* %PC.i1979
  %1051 = inttoptr i64 %1046 to i32*
  store i32 %1047, i32* %1051
  store %struct.Memory* %loadMem_43ef74, %struct.Memory** %MEMORY
  %loadMem_43ef77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1053 = getelementptr inbounds %struct.GPR, %struct.GPR* %1052, i32 0, i32 33
  %1054 = getelementptr inbounds %struct.Reg, %struct.Reg* %1053, i32 0, i32 0
  %PC.i1977 = bitcast %union.anon* %1054 to i64*
  %1055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1056 = getelementptr inbounds %struct.GPR, %struct.GPR* %1055, i32 0, i32 7
  %1057 = getelementptr inbounds %struct.Reg, %struct.Reg* %1056, i32 0, i32 0
  %RDX.i1978 = bitcast %union.anon* %1057 to i64*
  %1058 = load i64, i64* %PC.i1977
  %1059 = add i64 %1058, 8
  store i64 %1059, i64* %PC.i1977
  %1060 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1060, i64* %RDX.i1978, align 8
  store %struct.Memory* %loadMem_43ef77, %struct.Memory** %MEMORY
  %loadMem_43ef7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1062 = getelementptr inbounds %struct.GPR, %struct.GPR* %1061, i32 0, i32 33
  %1063 = getelementptr inbounds %struct.Reg, %struct.Reg* %1062, i32 0, i32 0
  %PC.i1975 = bitcast %union.anon* %1063 to i64*
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1065 = getelementptr inbounds %struct.GPR, %struct.GPR* %1064, i32 0, i32 7
  %1066 = getelementptr inbounds %struct.Reg, %struct.Reg* %1065, i32 0, i32 0
  %RDX.i1976 = bitcast %union.anon* %1066 to i64*
  %1067 = load i64, i64* %RDX.i1976
  %1068 = add i64 %1067, 14168
  %1069 = load i64, i64* %PC.i1975
  %1070 = add i64 %1069, 7
  store i64 %1070, i64* %PC.i1975
  %1071 = inttoptr i64 %1068 to i64*
  %1072 = load i64, i64* %1071
  store i64 %1072, i64* %RDX.i1976, align 8
  store %struct.Memory* %loadMem_43ef7f, %struct.Memory** %MEMORY
  %loadMem_43ef86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 33
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %1075 to i64*
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 9
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %RSI.i1974 = bitcast %union.anon* %1078 to i64*
  %1079 = load i64, i64* %PC.i1973
  %1080 = add i64 %1079, 8
  store i64 %1080, i64* %PC.i1973
  %1081 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1081, i64* %RSI.i1974, align 8
  store %struct.Memory* %loadMem_43ef86, %struct.Memory** %MEMORY
  %loadMem_43ef8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1083 = getelementptr inbounds %struct.GPR, %struct.GPR* %1082, i32 0, i32 33
  %1084 = getelementptr inbounds %struct.Reg, %struct.Reg* %1083, i32 0, i32 0
  %PC.i1971 = bitcast %union.anon* %1084 to i64*
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1086 = getelementptr inbounds %struct.GPR, %struct.GPR* %1085, i32 0, i32 9
  %1087 = getelementptr inbounds %struct.Reg, %struct.Reg* %1086, i32 0, i32 0
  %RSI.i1972 = bitcast %union.anon* %1087 to i64*
  %1088 = load i64, i64* %RSI.i1972
  %1089 = add i64 %1088, 12
  %1090 = load i64, i64* %PC.i1971
  %1091 = add i64 %1090, 4
  store i64 %1091, i64* %PC.i1971
  %1092 = inttoptr i64 %1089 to i32*
  %1093 = load i32, i32* %1092
  %1094 = sext i32 %1093 to i64
  store i64 %1094, i64* %RSI.i1972, align 8
  store %struct.Memory* %loadMem_43ef8e, %struct.Memory** %MEMORY
  %loadMem_43ef92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 33
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %PC.i1969 = bitcast %union.anon* %1097 to i64*
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 9
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %RSI.i1970 = bitcast %union.anon* %1100 to i64*
  %1101 = load i64, i64* %RSI.i1970
  %1102 = load i64, i64* %PC.i1969
  %1103 = add i64 %1102, 7
  store i64 %1103, i64* %PC.i1969
  %1104 = sext i64 %1101 to i128
  %1105 = and i128 %1104, -18446744073709551616
  %1106 = zext i64 %1101 to i128
  %1107 = or i128 %1105, %1106
  %1108 = mul i128 632, %1107
  %1109 = trunc i128 %1108 to i64
  store i64 %1109, i64* %RSI.i1970, align 8
  %1110 = sext i64 %1109 to i128
  %1111 = icmp ne i128 %1110, %1108
  %1112 = zext i1 %1111 to i8
  %1113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1112, i8* %1113, align 1
  %1114 = trunc i128 %1108 to i32
  %1115 = and i32 %1114, 255
  %1116 = call i32 @llvm.ctpop.i32(i32 %1115)
  %1117 = trunc i32 %1116 to i8
  %1118 = and i8 %1117, 1
  %1119 = xor i8 %1118, 1
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1119, i8* %1120, align 1
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1121, align 1
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1122, align 1
  %1123 = lshr i64 %1109, 63
  %1124 = trunc i64 %1123 to i8
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1124, i8* %1125, align 1
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1112, i8* %1126, align 1
  store %struct.Memory* %loadMem_43ef92, %struct.Memory** %MEMORY
  %loadMem_43ef99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1128 = getelementptr inbounds %struct.GPR, %struct.GPR* %1127, i32 0, i32 33
  %1129 = getelementptr inbounds %struct.Reg, %struct.Reg* %1128, i32 0, i32 0
  %PC.i1966 = bitcast %union.anon* %1129 to i64*
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1131 = getelementptr inbounds %struct.GPR, %struct.GPR* %1130, i32 0, i32 7
  %1132 = getelementptr inbounds %struct.Reg, %struct.Reg* %1131, i32 0, i32 0
  %RDX.i1967 = bitcast %union.anon* %1132 to i64*
  %1133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1134 = getelementptr inbounds %struct.GPR, %struct.GPR* %1133, i32 0, i32 9
  %1135 = getelementptr inbounds %struct.Reg, %struct.Reg* %1134, i32 0, i32 0
  %RSI.i1968 = bitcast %union.anon* %1135 to i64*
  %1136 = load i64, i64* %RDX.i1967
  %1137 = load i64, i64* %RSI.i1968
  %1138 = load i64, i64* %PC.i1966
  %1139 = add i64 %1138, 3
  store i64 %1139, i64* %PC.i1966
  %1140 = add i64 %1137, %1136
  store i64 %1140, i64* %RDX.i1967, align 8
  %1141 = icmp ult i64 %1140, %1136
  %1142 = icmp ult i64 %1140, %1137
  %1143 = or i1 %1141, %1142
  %1144 = zext i1 %1143 to i8
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1144, i8* %1145, align 1
  %1146 = trunc i64 %1140 to i32
  %1147 = and i32 %1146, 255
  %1148 = call i32 @llvm.ctpop.i32(i32 %1147)
  %1149 = trunc i32 %1148 to i8
  %1150 = and i8 %1149, 1
  %1151 = xor i8 %1150, 1
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1151, i8* %1152, align 1
  %1153 = xor i64 %1137, %1136
  %1154 = xor i64 %1153, %1140
  %1155 = lshr i64 %1154, 4
  %1156 = trunc i64 %1155 to i8
  %1157 = and i8 %1156, 1
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1157, i8* %1158, align 1
  %1159 = icmp eq i64 %1140, 0
  %1160 = zext i1 %1159 to i8
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1160, i8* %1161, align 1
  %1162 = lshr i64 %1140, 63
  %1163 = trunc i64 %1162 to i8
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1163, i8* %1164, align 1
  %1165 = lshr i64 %1136, 63
  %1166 = lshr i64 %1137, 63
  %1167 = xor i64 %1162, %1165
  %1168 = xor i64 %1162, %1166
  %1169 = add i64 %1167, %1168
  %1170 = icmp eq i64 %1169, 2
  %1171 = zext i1 %1170 to i8
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1171, i8* %1172, align 1
  store %struct.Memory* %loadMem_43ef99, %struct.Memory** %MEMORY
  %loadMem_43ef9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1174 = getelementptr inbounds %struct.GPR, %struct.GPR* %1173, i32 0, i32 33
  %1175 = getelementptr inbounds %struct.Reg, %struct.Reg* %1174, i32 0, i32 0
  %PC.i1963 = bitcast %union.anon* %1175 to i64*
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1177 = getelementptr inbounds %struct.GPR, %struct.GPR* %1176, i32 0, i32 7
  %1178 = getelementptr inbounds %struct.Reg, %struct.Reg* %1177, i32 0, i32 0
  %RDX.i1964 = bitcast %union.anon* %1178 to i64*
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1180 = getelementptr inbounds %struct.GPR, %struct.GPR* %1179, i32 0, i32 15
  %1181 = getelementptr inbounds %struct.Reg, %struct.Reg* %1180, i32 0, i32 0
  %RBP.i1965 = bitcast %union.anon* %1181 to i64*
  %1182 = load i64, i64* %RBP.i1965
  %1183 = sub i64 %1182, 128
  %1184 = load i64, i64* %RDX.i1964
  %1185 = load i64, i64* %PC.i1963
  %1186 = add i64 %1185, 4
  store i64 %1186, i64* %PC.i1963
  %1187 = inttoptr i64 %1183 to i64*
  store i64 %1184, i64* %1187
  store %struct.Memory* %loadMem_43ef9c, %struct.Memory** %MEMORY
  %loadMem_43efa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 33
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %PC.i1960 = bitcast %union.anon* %1190 to i64*
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 7
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %RDX.i1961 = bitcast %union.anon* %1193 to i64*
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1195 = getelementptr inbounds %struct.GPR, %struct.GPR* %1194, i32 0, i32 15
  %1196 = getelementptr inbounds %struct.Reg, %struct.Reg* %1195, i32 0, i32 0
  %RBP.i1962 = bitcast %union.anon* %1196 to i64*
  %1197 = load i64, i64* %RBP.i1962
  %1198 = sub i64 %1197, 128
  %1199 = load i64, i64* %PC.i1960
  %1200 = add i64 %1199, 4
  store i64 %1200, i64* %PC.i1960
  %1201 = inttoptr i64 %1198 to i64*
  %1202 = load i64, i64* %1201
  store i64 %1202, i64* %RDX.i1961, align 8
  store %struct.Memory* %loadMem_43efa0, %struct.Memory** %MEMORY
  %loadMem_43efa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1204 = getelementptr inbounds %struct.GPR, %struct.GPR* %1203, i32 0, i32 33
  %1205 = getelementptr inbounds %struct.Reg, %struct.Reg* %1204, i32 0, i32 0
  %PC.i1957 = bitcast %union.anon* %1205 to i64*
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1207 = getelementptr inbounds %struct.GPR, %struct.GPR* %1206, i32 0, i32 5
  %1208 = getelementptr inbounds %struct.Reg, %struct.Reg* %1207, i32 0, i32 0
  %RCX.i1958 = bitcast %union.anon* %1208 to i64*
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 7
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %RDX.i1959 = bitcast %union.anon* %1211 to i64*
  %1212 = load i64, i64* %RDX.i1959
  %1213 = add i64 %1212, 572
  %1214 = load i64, i64* %PC.i1957
  %1215 = add i64 %1214, 6
  store i64 %1215, i64* %PC.i1957
  %1216 = inttoptr i64 %1213 to i32*
  %1217 = load i32, i32* %1216
  %1218 = zext i32 %1217 to i64
  store i64 %1218, i64* %RCX.i1958, align 8
  store %struct.Memory* %loadMem_43efa4, %struct.Memory** %MEMORY
  %loadMem_43efaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1220 = getelementptr inbounds %struct.GPR, %struct.GPR* %1219, i32 0, i32 33
  %1221 = getelementptr inbounds %struct.Reg, %struct.Reg* %1220, i32 0, i32 0
  %PC.i1954 = bitcast %union.anon* %1221 to i64*
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 5
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %ECX.i1955 = bitcast %union.anon* %1224 to i32*
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 15
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %RBP.i1956 = bitcast %union.anon* %1227 to i64*
  %1228 = load i64, i64* %RBP.i1956
  %1229 = sub i64 %1228, 132
  %1230 = load i32, i32* %ECX.i1955
  %1231 = zext i32 %1230 to i64
  %1232 = load i64, i64* %PC.i1954
  %1233 = add i64 %1232, 6
  store i64 %1233, i64* %PC.i1954
  %1234 = inttoptr i64 %1229 to i32*
  store i32 %1230, i32* %1234
  store %struct.Memory* %loadMem_43efaa, %struct.Memory** %MEMORY
  %loadMem_43efb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1236 = getelementptr inbounds %struct.GPR, %struct.GPR* %1235, i32 0, i32 33
  %1237 = getelementptr inbounds %struct.Reg, %struct.Reg* %1236, i32 0, i32 0
  %PC.i1952 = bitcast %union.anon* %1237 to i64*
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1239 = getelementptr inbounds %struct.GPR, %struct.GPR* %1238, i32 0, i32 7
  %1240 = getelementptr inbounds %struct.Reg, %struct.Reg* %1239, i32 0, i32 0
  %RDX.i1953 = bitcast %union.anon* %1240 to i64*
  %1241 = load i64, i64* %PC.i1952
  %1242 = add i64 %1241, 8
  store i64 %1242, i64* %PC.i1952
  %1243 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1243, i64* %RDX.i1953, align 8
  store %struct.Memory* %loadMem_43efb0, %struct.Memory** %MEMORY
  %loadMem_43efb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1245 = getelementptr inbounds %struct.GPR, %struct.GPR* %1244, i32 0, i32 33
  %1246 = getelementptr inbounds %struct.Reg, %struct.Reg* %1245, i32 0, i32 0
  %PC.i1950 = bitcast %union.anon* %1246 to i64*
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1248 = getelementptr inbounds %struct.GPR, %struct.GPR* %1247, i32 0, i32 7
  %1249 = getelementptr inbounds %struct.Reg, %struct.Reg* %1248, i32 0, i32 0
  %RDX.i1951 = bitcast %union.anon* %1249 to i64*
  %1250 = load i64, i64* %RDX.i1951
  %1251 = add i64 %1250, 24
  %1252 = load i64, i64* %PC.i1950
  %1253 = add i64 %1252, 4
  store i64 %1253, i64* %PC.i1950
  %1254 = inttoptr i64 %1251 to i32*
  %1255 = load i32, i32* %1254
  %1256 = sub i32 %1255, 1
  %1257 = icmp ult i32 %1255, 1
  %1258 = zext i1 %1257 to i8
  %1259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1258, i8* %1259, align 1
  %1260 = and i32 %1256, 255
  %1261 = call i32 @llvm.ctpop.i32(i32 %1260)
  %1262 = trunc i32 %1261 to i8
  %1263 = and i8 %1262, 1
  %1264 = xor i8 %1263, 1
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1264, i8* %1265, align 1
  %1266 = xor i32 %1255, 1
  %1267 = xor i32 %1266, %1256
  %1268 = lshr i32 %1267, 4
  %1269 = trunc i32 %1268 to i8
  %1270 = and i8 %1269, 1
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1270, i8* %1271, align 1
  %1272 = icmp eq i32 %1256, 0
  %1273 = zext i1 %1272 to i8
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1273, i8* %1274, align 1
  %1275 = lshr i32 %1256, 31
  %1276 = trunc i32 %1275 to i8
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1276, i8* %1277, align 1
  %1278 = lshr i32 %1255, 31
  %1279 = xor i32 %1275, %1278
  %1280 = add i32 %1279, %1278
  %1281 = icmp eq i32 %1280, 2
  %1282 = zext i1 %1281 to i8
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1282, i8* %1283, align 1
  store %struct.Memory* %loadMem_43efb8, %struct.Memory** %MEMORY
  %loadMem_43efbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 33
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %PC.i1949 = bitcast %union.anon* %1286 to i64*
  %1287 = load i64, i64* %PC.i1949
  %1288 = add i64 %1287, 13
  %1289 = load i64, i64* %PC.i1949
  %1290 = add i64 %1289, 6
  %1291 = load i64, i64* %PC.i1949
  %1292 = add i64 %1291, 6
  store i64 %1292, i64* %PC.i1949
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1294 = load i8, i8* %1293, align 1
  %1295 = icmp eq i8 %1294, 0
  %1296 = zext i1 %1295 to i8
  store i8 %1296, i8* %BRANCH_TAKEN, align 1
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1298 = select i1 %1295, i64 %1288, i64 %1290
  store i64 %1298, i64* %1297, align 8
  store %struct.Memory* %loadMem_43efbc, %struct.Memory** %MEMORY
  %loadBr_43efbc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43efbc = icmp eq i8 %loadBr_43efbc, 1
  br i1 %cmpBr_43efbc, label %block_.L_43efc9, label %block_43efc2

block_43efc2:                                     ; preds = %block_.L_43ef69
  %loadMem_43efc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1300 = getelementptr inbounds %struct.GPR, %struct.GPR* %1299, i32 0, i32 33
  %1301 = getelementptr inbounds %struct.Reg, %struct.Reg* %1300, i32 0, i32 0
  %PC.i1947 = bitcast %union.anon* %1301 to i64*
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 15
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %RBP.i1948 = bitcast %union.anon* %1304 to i64*
  %1305 = load i64, i64* %RBP.i1948
  %1306 = sub i64 %1305, 112
  %1307 = load i64, i64* %PC.i1947
  %1308 = add i64 %1307, 7
  store i64 %1308, i64* %PC.i1947
  %1309 = inttoptr i64 %1306 to i32*
  store i32 1, i32* %1309
  store %struct.Memory* %loadMem_43efc2, %struct.Memory** %MEMORY
  br label %block_.L_43efc9

block_.L_43efc9:                                  ; preds = %block_43efc2, %block_.L_43ef69
  %loadMem_43efc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 33
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %PC.i1945 = bitcast %union.anon* %1312 to i64*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 15
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %RBP.i1946 = bitcast %union.anon* %1315 to i64*
  %1316 = load i64, i64* %RBP.i1946
  %1317 = sub i64 %1316, 108
  %1318 = load i64, i64* %PC.i1945
  %1319 = add i64 %1318, 7
  store i64 %1319, i64* %PC.i1945
  %1320 = inttoptr i64 %1317 to i32*
  store i32 0, i32* %1320
  store %struct.Memory* %loadMem_43efc9, %struct.Memory** %MEMORY
  %loadMem_43efd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1322 = getelementptr inbounds %struct.GPR, %struct.GPR* %1321, i32 0, i32 33
  %1323 = getelementptr inbounds %struct.Reg, %struct.Reg* %1322, i32 0, i32 0
  %PC.i1942 = bitcast %union.anon* %1323 to i64*
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1325 = getelementptr inbounds %struct.GPR, %struct.GPR* %1324, i32 0, i32 1
  %1326 = getelementptr inbounds %struct.Reg, %struct.Reg* %1325, i32 0, i32 0
  %RAX.i1943 = bitcast %union.anon* %1326 to i64*
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 15
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %RBP.i1944 = bitcast %union.anon* %1329 to i64*
  %1330 = load i64, i64* %RBP.i1944
  %1331 = sub i64 %1330, 92
  %1332 = load i64, i64* %PC.i1942
  %1333 = add i64 %1332, 3
  store i64 %1333, i64* %PC.i1942
  %1334 = inttoptr i64 %1331 to i32*
  %1335 = load i32, i32* %1334
  %1336 = zext i32 %1335 to i64
  store i64 %1336, i64* %RAX.i1943, align 8
  store %struct.Memory* %loadMem_43efd0, %struct.Memory** %MEMORY
  %loadMem_43efd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1338 = getelementptr inbounds %struct.GPR, %struct.GPR* %1337, i32 0, i32 33
  %1339 = getelementptr inbounds %struct.Reg, %struct.Reg* %1338, i32 0, i32 0
  %PC.i1939 = bitcast %union.anon* %1339 to i64*
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1341 = getelementptr inbounds %struct.GPR, %struct.GPR* %1340, i32 0, i32 1
  %1342 = getelementptr inbounds %struct.Reg, %struct.Reg* %1341, i32 0, i32 0
  %EAX.i1940 = bitcast %union.anon* %1342 to i32*
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 15
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %RBP.i1941 = bitcast %union.anon* %1345 to i64*
  %1346 = load i64, i64* %RBP.i1941
  %1347 = sub i64 %1346, 56
  %1348 = load i32, i32* %EAX.i1940
  %1349 = zext i32 %1348 to i64
  %1350 = load i64, i64* %PC.i1939
  %1351 = add i64 %1350, 3
  store i64 %1351, i64* %PC.i1939
  %1352 = inttoptr i64 %1347 to i32*
  store i32 %1348, i32* %1352
  store %struct.Memory* %loadMem_43efd3, %struct.Memory** %MEMORY
  br label %block_.L_43efd6

block_.L_43efd6:                                  ; preds = %block_.L_43f91d, %block_.L_43efc9
  %loadMem_43efd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1354 = getelementptr inbounds %struct.GPR, %struct.GPR* %1353, i32 0, i32 33
  %1355 = getelementptr inbounds %struct.Reg, %struct.Reg* %1354, i32 0, i32 0
  %PC.i1936 = bitcast %union.anon* %1355 to i64*
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1357 = getelementptr inbounds %struct.GPR, %struct.GPR* %1356, i32 0, i32 1
  %1358 = getelementptr inbounds %struct.Reg, %struct.Reg* %1357, i32 0, i32 0
  %RAX.i1937 = bitcast %union.anon* %1358 to i64*
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 15
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %RBP.i1938 = bitcast %union.anon* %1361 to i64*
  %1362 = load i64, i64* %RBP.i1938
  %1363 = sub i64 %1362, 56
  %1364 = load i64, i64* %PC.i1936
  %1365 = add i64 %1364, 3
  store i64 %1365, i64* %PC.i1936
  %1366 = inttoptr i64 %1363 to i32*
  %1367 = load i32, i32* %1366
  %1368 = zext i32 %1367 to i64
  store i64 %1368, i64* %RAX.i1937, align 8
  store %struct.Memory* %loadMem_43efd6, %struct.Memory** %MEMORY
  %loadMem_43efd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1370 = getelementptr inbounds %struct.GPR, %struct.GPR* %1369, i32 0, i32 33
  %1371 = getelementptr inbounds %struct.Reg, %struct.Reg* %1370, i32 0, i32 0
  %PC.i1933 = bitcast %union.anon* %1371 to i64*
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1373 = getelementptr inbounds %struct.GPR, %struct.GPR* %1372, i32 0, i32 5
  %1374 = getelementptr inbounds %struct.Reg, %struct.Reg* %1373, i32 0, i32 0
  %RCX.i1934 = bitcast %union.anon* %1374 to i64*
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1376 = getelementptr inbounds %struct.GPR, %struct.GPR* %1375, i32 0, i32 15
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %RBP.i1935 = bitcast %union.anon* %1377 to i64*
  %1378 = load i64, i64* %RBP.i1935
  %1379 = sub i64 %1378, 92
  %1380 = load i64, i64* %PC.i1933
  %1381 = add i64 %1380, 3
  store i64 %1381, i64* %PC.i1933
  %1382 = inttoptr i64 %1379 to i32*
  %1383 = load i32, i32* %1382
  %1384 = zext i32 %1383 to i64
  store i64 %1384, i64* %RCX.i1934, align 8
  store %struct.Memory* %loadMem_43efd9, %struct.Memory** %MEMORY
  %loadMem_43efdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1386 = getelementptr inbounds %struct.GPR, %struct.GPR* %1385, i32 0, i32 33
  %1387 = getelementptr inbounds %struct.Reg, %struct.Reg* %1386, i32 0, i32 0
  %PC.i1931 = bitcast %union.anon* %1387 to i64*
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1389 = getelementptr inbounds %struct.GPR, %struct.GPR* %1388, i32 0, i32 5
  %1390 = getelementptr inbounds %struct.Reg, %struct.Reg* %1389, i32 0, i32 0
  %RCX.i1932 = bitcast %union.anon* %1390 to i64*
  %1391 = load i64, i64* %RCX.i1932
  %1392 = load i64, i64* %PC.i1931
  %1393 = add i64 %1392, 3
  store i64 %1393, i64* %PC.i1931
  %1394 = trunc i64 %1391 to i32
  %1395 = add i32 8, %1394
  %1396 = zext i32 %1395 to i64
  store i64 %1396, i64* %RCX.i1932, align 8
  %1397 = icmp ult i32 %1395, %1394
  %1398 = icmp ult i32 %1395, 8
  %1399 = or i1 %1397, %1398
  %1400 = zext i1 %1399 to i8
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1400, i8* %1401, align 1
  %1402 = and i32 %1395, 255
  %1403 = call i32 @llvm.ctpop.i32(i32 %1402)
  %1404 = trunc i32 %1403 to i8
  %1405 = and i8 %1404, 1
  %1406 = xor i8 %1405, 1
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1406, i8* %1407, align 1
  %1408 = xor i64 8, %1391
  %1409 = trunc i64 %1408 to i32
  %1410 = xor i32 %1409, %1395
  %1411 = lshr i32 %1410, 4
  %1412 = trunc i32 %1411 to i8
  %1413 = and i8 %1412, 1
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1413, i8* %1414, align 1
  %1415 = icmp eq i32 %1395, 0
  %1416 = zext i1 %1415 to i8
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1416, i8* %1417, align 1
  %1418 = lshr i32 %1395, 31
  %1419 = trunc i32 %1418 to i8
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1419, i8* %1420, align 1
  %1421 = lshr i32 %1394, 31
  %1422 = xor i32 %1418, %1421
  %1423 = add i32 %1422, %1418
  %1424 = icmp eq i32 %1423, 2
  %1425 = zext i1 %1424 to i8
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1425, i8* %1426, align 1
  store %struct.Memory* %loadMem_43efdc, %struct.Memory** %MEMORY
  %loadMem_43efdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 33
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %PC.i1928 = bitcast %union.anon* %1429 to i64*
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1431 = getelementptr inbounds %struct.GPR, %struct.GPR* %1430, i32 0, i32 1
  %1432 = getelementptr inbounds %struct.Reg, %struct.Reg* %1431, i32 0, i32 0
  %EAX.i1929 = bitcast %union.anon* %1432 to i32*
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1434 = getelementptr inbounds %struct.GPR, %struct.GPR* %1433, i32 0, i32 5
  %1435 = getelementptr inbounds %struct.Reg, %struct.Reg* %1434, i32 0, i32 0
  %ECX.i1930 = bitcast %union.anon* %1435 to i32*
  %1436 = load i32, i32* %EAX.i1929
  %1437 = zext i32 %1436 to i64
  %1438 = load i32, i32* %ECX.i1930
  %1439 = zext i32 %1438 to i64
  %1440 = load i64, i64* %PC.i1928
  %1441 = add i64 %1440, 2
  store i64 %1441, i64* %PC.i1928
  %1442 = sub i32 %1436, %1438
  %1443 = icmp ult i32 %1436, %1438
  %1444 = zext i1 %1443 to i8
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1444, i8* %1445, align 1
  %1446 = and i32 %1442, 255
  %1447 = call i32 @llvm.ctpop.i32(i32 %1446)
  %1448 = trunc i32 %1447 to i8
  %1449 = and i8 %1448, 1
  %1450 = xor i8 %1449, 1
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1450, i8* %1451, align 1
  %1452 = xor i64 %1439, %1437
  %1453 = trunc i64 %1452 to i32
  %1454 = xor i32 %1453, %1442
  %1455 = lshr i32 %1454, 4
  %1456 = trunc i32 %1455 to i8
  %1457 = and i8 %1456, 1
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1457, i8* %1458, align 1
  %1459 = icmp eq i32 %1442, 0
  %1460 = zext i1 %1459 to i8
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1460, i8* %1461, align 1
  %1462 = lshr i32 %1442, 31
  %1463 = trunc i32 %1462 to i8
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1463, i8* %1464, align 1
  %1465 = lshr i32 %1436, 31
  %1466 = lshr i32 %1438, 31
  %1467 = xor i32 %1466, %1465
  %1468 = xor i32 %1462, %1465
  %1469 = add i32 %1468, %1467
  %1470 = icmp eq i32 %1469, 2
  %1471 = zext i1 %1470 to i8
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1471, i8* %1472, align 1
  store %struct.Memory* %loadMem_43efdf, %struct.Memory** %MEMORY
  %loadMem_43efe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 33
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %PC.i1927 = bitcast %union.anon* %1475 to i64*
  %1476 = load i64, i64* %PC.i1927
  %1477 = add i64 %1476, 2387
  %1478 = load i64, i64* %PC.i1927
  %1479 = add i64 %1478, 6
  %1480 = load i64, i64* %PC.i1927
  %1481 = add i64 %1480, 6
  store i64 %1481, i64* %PC.i1927
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1483 = load i8, i8* %1482, align 1
  %1484 = icmp ne i8 %1483, 0
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1486 = load i8, i8* %1485, align 1
  %1487 = icmp ne i8 %1486, 0
  %1488 = xor i1 %1484, %1487
  %1489 = xor i1 %1488, true
  %1490 = zext i1 %1489 to i8
  store i8 %1490, i8* %BRANCH_TAKEN, align 1
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1492 = select i1 %1488, i64 %1479, i64 %1477
  store i64 %1492, i64* %1491, align 8
  store %struct.Memory* %loadMem_43efe1, %struct.Memory** %MEMORY
  %loadBr_43efe1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43efe1 = icmp eq i8 %loadBr_43efe1, 1
  br i1 %cmpBr_43efe1, label %block_.L_43f934, label %block_43efe7

block_43efe7:                                     ; preds = %block_.L_43efd6
  %loadMem_43efe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 33
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %PC.i1925 = bitcast %union.anon* %1495 to i64*
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1497 = getelementptr inbounds %struct.GPR, %struct.GPR* %1496, i32 0, i32 1
  %1498 = getelementptr inbounds %struct.Reg, %struct.Reg* %1497, i32 0, i32 0
  %RAX.i1926 = bitcast %union.anon* %1498 to i64*
  %1499 = load i64, i64* %PC.i1925
  %1500 = add i64 %1499, 8
  store i64 %1500, i64* %PC.i1925
  %1501 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1501, i64* %RAX.i1926, align 8
  store %struct.Memory* %loadMem_43efe7, %struct.Memory** %MEMORY
  %loadMem_43efef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 33
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %PC.i1922 = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 1
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %RAX.i1923 = bitcast %union.anon* %1507 to i64*
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 5
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %RCX.i1924 = bitcast %union.anon* %1510 to i64*
  %1511 = load i64, i64* %RAX.i1923
  %1512 = add i64 %1511, 172
  %1513 = load i64, i64* %PC.i1922
  %1514 = add i64 %1513, 6
  store i64 %1514, i64* %PC.i1922
  %1515 = inttoptr i64 %1512 to i32*
  %1516 = load i32, i32* %1515
  %1517 = zext i32 %1516 to i64
  store i64 %1517, i64* %RCX.i1924, align 8
  store %struct.Memory* %loadMem_43efef, %struct.Memory** %MEMORY
  %loadMem_43eff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1519 = getelementptr inbounds %struct.GPR, %struct.GPR* %1518, i32 0, i32 33
  %1520 = getelementptr inbounds %struct.Reg, %struct.Reg* %1519, i32 0, i32 0
  %PC.i1919 = bitcast %union.anon* %1520 to i64*
  %1521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1522 = getelementptr inbounds %struct.GPR, %struct.GPR* %1521, i32 0, i32 5
  %1523 = getelementptr inbounds %struct.Reg, %struct.Reg* %1522, i32 0, i32 0
  %RCX.i1920 = bitcast %union.anon* %1523 to i64*
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1525 = getelementptr inbounds %struct.GPR, %struct.GPR* %1524, i32 0, i32 15
  %1526 = getelementptr inbounds %struct.Reg, %struct.Reg* %1525, i32 0, i32 0
  %RBP.i1921 = bitcast %union.anon* %1526 to i64*
  %1527 = load i64, i64* %RCX.i1920
  %1528 = load i64, i64* %RBP.i1921
  %1529 = sub i64 %1528, 56
  %1530 = load i64, i64* %PC.i1919
  %1531 = add i64 %1530, 3
  store i64 %1531, i64* %PC.i1919
  %1532 = trunc i64 %1527 to i32
  %1533 = inttoptr i64 %1529 to i32*
  %1534 = load i32, i32* %1533
  %1535 = add i32 %1534, %1532
  %1536 = zext i32 %1535 to i64
  store i64 %1536, i64* %RCX.i1920, align 8
  %1537 = icmp ult i32 %1535, %1532
  %1538 = icmp ult i32 %1535, %1534
  %1539 = or i1 %1537, %1538
  %1540 = zext i1 %1539 to i8
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1540, i8* %1541, align 1
  %1542 = and i32 %1535, 255
  %1543 = call i32 @llvm.ctpop.i32(i32 %1542)
  %1544 = trunc i32 %1543 to i8
  %1545 = and i8 %1544, 1
  %1546 = xor i8 %1545, 1
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1546, i8* %1547, align 1
  %1548 = xor i32 %1534, %1532
  %1549 = xor i32 %1548, %1535
  %1550 = lshr i32 %1549, 4
  %1551 = trunc i32 %1550 to i8
  %1552 = and i8 %1551, 1
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1552, i8* %1553, align 1
  %1554 = icmp eq i32 %1535, 0
  %1555 = zext i1 %1554 to i8
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1555, i8* %1556, align 1
  %1557 = lshr i32 %1535, 31
  %1558 = trunc i32 %1557 to i8
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1558, i8* %1559, align 1
  %1560 = lshr i32 %1532, 31
  %1561 = lshr i32 %1534, 31
  %1562 = xor i32 %1557, %1560
  %1563 = xor i32 %1557, %1561
  %1564 = add i32 %1562, %1563
  %1565 = icmp eq i32 %1564, 2
  %1566 = zext i1 %1565 to i8
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1566, i8* %1567, align 1
  store %struct.Memory* %loadMem_43eff5, %struct.Memory** %MEMORY
  %loadMem_43eff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 33
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %PC.i1916 = bitcast %union.anon* %1570 to i64*
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 5
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %ECX.i1917 = bitcast %union.anon* %1573 to i32*
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1575 = getelementptr inbounds %struct.GPR, %struct.GPR* %1574, i32 0, i32 15
  %1576 = getelementptr inbounds %struct.Reg, %struct.Reg* %1575, i32 0, i32 0
  %RBP.i1918 = bitcast %union.anon* %1576 to i64*
  %1577 = load i64, i64* %RBP.i1918
  %1578 = sub i64 %1577, 64
  %1579 = load i32, i32* %ECX.i1917
  %1580 = zext i32 %1579 to i64
  %1581 = load i64, i64* %PC.i1916
  %1582 = add i64 %1581, 3
  store i64 %1582, i64* %PC.i1916
  %1583 = inttoptr i64 %1578 to i32*
  store i32 %1579, i32* %1583
  store %struct.Memory* %loadMem_43eff8, %struct.Memory** %MEMORY
  %loadMem_43effb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1585 = getelementptr inbounds %struct.GPR, %struct.GPR* %1584, i32 0, i32 33
  %1586 = getelementptr inbounds %struct.Reg, %struct.Reg* %1585, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %1586 to i64*
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 15
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %RBP.i1915 = bitcast %union.anon* %1589 to i64*
  %1590 = load i64, i64* %RBP.i1915
  %1591 = sub i64 %1590, 104
  %1592 = load i64, i64* %PC.i1914
  %1593 = add i64 %1592, 7
  store i64 %1593, i64* %PC.i1914
  %1594 = inttoptr i64 %1591 to i32*
  store i32 0, i32* %1594
  store %struct.Memory* %loadMem_43effb, %struct.Memory** %MEMORY
  %loadMem_43f002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 33
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %PC.i1911 = bitcast %union.anon* %1597 to i64*
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 5
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %RCX.i1912 = bitcast %union.anon* %1600 to i64*
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1602 = getelementptr inbounds %struct.GPR, %struct.GPR* %1601, i32 0, i32 15
  %1603 = getelementptr inbounds %struct.Reg, %struct.Reg* %1602, i32 0, i32 0
  %RBP.i1913 = bitcast %union.anon* %1603 to i64*
  %1604 = load i64, i64* %RBP.i1913
  %1605 = sub i64 %1604, 96
  %1606 = load i64, i64* %PC.i1911
  %1607 = add i64 %1606, 3
  store i64 %1607, i64* %PC.i1911
  %1608 = inttoptr i64 %1605 to i32*
  %1609 = load i32, i32* %1608
  %1610 = zext i32 %1609 to i64
  store i64 %1610, i64* %RCX.i1912, align 8
  store %struct.Memory* %loadMem_43f002, %struct.Memory** %MEMORY
  %loadMem_43f005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 33
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %PC.i1908 = bitcast %union.anon* %1613 to i64*
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 5
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %ECX.i1909 = bitcast %union.anon* %1616 to i32*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 15
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %RBP.i1910 = bitcast %union.anon* %1619 to i64*
  %1620 = load i64, i64* %RBP.i1910
  %1621 = sub i64 %1620, 60
  %1622 = load i32, i32* %ECX.i1909
  %1623 = zext i32 %1622 to i64
  %1624 = load i64, i64* %PC.i1908
  %1625 = add i64 %1624, 3
  store i64 %1625, i64* %PC.i1908
  %1626 = inttoptr i64 %1621 to i32*
  store i32 %1622, i32* %1626
  store %struct.Memory* %loadMem_43f005, %struct.Memory** %MEMORY
  br label %block_.L_43f008

block_.L_43f008:                                  ; preds = %block_.L_43f901, %block_43efe7
  %loadMem_43f008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1628 = getelementptr inbounds %struct.GPR, %struct.GPR* %1627, i32 0, i32 33
  %1629 = getelementptr inbounds %struct.Reg, %struct.Reg* %1628, i32 0, i32 0
  %PC.i1905 = bitcast %union.anon* %1629 to i64*
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1631 = getelementptr inbounds %struct.GPR, %struct.GPR* %1630, i32 0, i32 1
  %1632 = getelementptr inbounds %struct.Reg, %struct.Reg* %1631, i32 0, i32 0
  %RAX.i1906 = bitcast %union.anon* %1632 to i64*
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1634 = getelementptr inbounds %struct.GPR, %struct.GPR* %1633, i32 0, i32 15
  %1635 = getelementptr inbounds %struct.Reg, %struct.Reg* %1634, i32 0, i32 0
  %RBP.i1907 = bitcast %union.anon* %1635 to i64*
  %1636 = load i64, i64* %RBP.i1907
  %1637 = sub i64 %1636, 60
  %1638 = load i64, i64* %PC.i1905
  %1639 = add i64 %1638, 3
  store i64 %1639, i64* %PC.i1905
  %1640 = inttoptr i64 %1637 to i32*
  %1641 = load i32, i32* %1640
  %1642 = zext i32 %1641 to i64
  store i64 %1642, i64* %RAX.i1906, align 8
  store %struct.Memory* %loadMem_43f008, %struct.Memory** %MEMORY
  %loadMem_43f00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1644 = getelementptr inbounds %struct.GPR, %struct.GPR* %1643, i32 0, i32 33
  %1645 = getelementptr inbounds %struct.Reg, %struct.Reg* %1644, i32 0, i32 0
  %PC.i1902 = bitcast %union.anon* %1645 to i64*
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 5
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %RCX.i1903 = bitcast %union.anon* %1648 to i64*
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1650 = getelementptr inbounds %struct.GPR, %struct.GPR* %1649, i32 0, i32 15
  %1651 = getelementptr inbounds %struct.Reg, %struct.Reg* %1650, i32 0, i32 0
  %RBP.i1904 = bitcast %union.anon* %1651 to i64*
  %1652 = load i64, i64* %RBP.i1904
  %1653 = sub i64 %1652, 96
  %1654 = load i64, i64* %PC.i1902
  %1655 = add i64 %1654, 3
  store i64 %1655, i64* %PC.i1902
  %1656 = inttoptr i64 %1653 to i32*
  %1657 = load i32, i32* %1656
  %1658 = zext i32 %1657 to i64
  store i64 %1658, i64* %RCX.i1903, align 8
  store %struct.Memory* %loadMem_43f00b, %struct.Memory** %MEMORY
  %loadMem_43f00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 33
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %PC.i1900 = bitcast %union.anon* %1661 to i64*
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 5
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %RCX.i1901 = bitcast %union.anon* %1664 to i64*
  %1665 = load i64, i64* %RCX.i1901
  %1666 = load i64, i64* %PC.i1900
  %1667 = add i64 %1666, 3
  store i64 %1667, i64* %PC.i1900
  %1668 = trunc i64 %1665 to i32
  %1669 = add i32 8, %1668
  %1670 = zext i32 %1669 to i64
  store i64 %1670, i64* %RCX.i1901, align 8
  %1671 = icmp ult i32 %1669, %1668
  %1672 = icmp ult i32 %1669, 8
  %1673 = or i1 %1671, %1672
  %1674 = zext i1 %1673 to i8
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1674, i8* %1675, align 1
  %1676 = and i32 %1669, 255
  %1677 = call i32 @llvm.ctpop.i32(i32 %1676)
  %1678 = trunc i32 %1677 to i8
  %1679 = and i8 %1678, 1
  %1680 = xor i8 %1679, 1
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1680, i8* %1681, align 1
  %1682 = xor i64 8, %1665
  %1683 = trunc i64 %1682 to i32
  %1684 = xor i32 %1683, %1669
  %1685 = lshr i32 %1684, 4
  %1686 = trunc i32 %1685 to i8
  %1687 = and i8 %1686, 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1687, i8* %1688, align 1
  %1689 = icmp eq i32 %1669, 0
  %1690 = zext i1 %1689 to i8
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1690, i8* %1691, align 1
  %1692 = lshr i32 %1669, 31
  %1693 = trunc i32 %1692 to i8
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1693, i8* %1694, align 1
  %1695 = lshr i32 %1668, 31
  %1696 = xor i32 %1692, %1695
  %1697 = add i32 %1696, %1692
  %1698 = icmp eq i32 %1697, 2
  %1699 = zext i1 %1698 to i8
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1699, i8* %1700, align 1
  store %struct.Memory* %loadMem_43f00e, %struct.Memory** %MEMORY
  %loadMem_43f011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 33
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %PC.i1897 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 1
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %EAX.i1898 = bitcast %union.anon* %1706 to i32*
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1708 = getelementptr inbounds %struct.GPR, %struct.GPR* %1707, i32 0, i32 5
  %1709 = getelementptr inbounds %struct.Reg, %struct.Reg* %1708, i32 0, i32 0
  %ECX.i1899 = bitcast %union.anon* %1709 to i32*
  %1710 = load i32, i32* %EAX.i1898
  %1711 = zext i32 %1710 to i64
  %1712 = load i32, i32* %ECX.i1899
  %1713 = zext i32 %1712 to i64
  %1714 = load i64, i64* %PC.i1897
  %1715 = add i64 %1714, 2
  store i64 %1715, i64* %PC.i1897
  %1716 = sub i32 %1710, %1712
  %1717 = icmp ult i32 %1710, %1712
  %1718 = zext i1 %1717 to i8
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1718, i8* %1719, align 1
  %1720 = and i32 %1716, 255
  %1721 = call i32 @llvm.ctpop.i32(i32 %1720)
  %1722 = trunc i32 %1721 to i8
  %1723 = and i8 %1722, 1
  %1724 = xor i8 %1723, 1
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1724, i8* %1725, align 1
  %1726 = xor i64 %1713, %1711
  %1727 = trunc i64 %1726 to i32
  %1728 = xor i32 %1727, %1716
  %1729 = lshr i32 %1728, 4
  %1730 = trunc i32 %1729 to i8
  %1731 = and i8 %1730, 1
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1731, i8* %1732, align 1
  %1733 = icmp eq i32 %1716, 0
  %1734 = zext i1 %1733 to i8
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1734, i8* %1735, align 1
  %1736 = lshr i32 %1716, 31
  %1737 = trunc i32 %1736 to i8
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1737, i8* %1738, align 1
  %1739 = lshr i32 %1710, 31
  %1740 = lshr i32 %1712, 31
  %1741 = xor i32 %1740, %1739
  %1742 = xor i32 %1736, %1739
  %1743 = add i32 %1742, %1741
  %1744 = icmp eq i32 %1743, 2
  %1745 = zext i1 %1744 to i8
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1745, i8* %1746, align 1
  store %struct.Memory* %loadMem_43f011, %struct.Memory** %MEMORY
  %loadMem_43f013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1748 = getelementptr inbounds %struct.GPR, %struct.GPR* %1747, i32 0, i32 33
  %1749 = getelementptr inbounds %struct.Reg, %struct.Reg* %1748, i32 0, i32 0
  %PC.i1896 = bitcast %union.anon* %1749 to i64*
  %1750 = load i64, i64* %PC.i1896
  %1751 = add i64 %1750, 2309
  %1752 = load i64, i64* %PC.i1896
  %1753 = add i64 %1752, 6
  %1754 = load i64, i64* %PC.i1896
  %1755 = add i64 %1754, 6
  store i64 %1755, i64* %PC.i1896
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1757 = load i8, i8* %1756, align 1
  %1758 = icmp ne i8 %1757, 0
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1760 = load i8, i8* %1759, align 1
  %1761 = icmp ne i8 %1760, 0
  %1762 = xor i1 %1758, %1761
  %1763 = xor i1 %1762, true
  %1764 = zext i1 %1763 to i8
  store i8 %1764, i8* %BRANCH_TAKEN, align 1
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1766 = select i1 %1762, i64 %1753, i64 %1751
  store i64 %1766, i64* %1765, align 8
  store %struct.Memory* %loadMem_43f013, %struct.Memory** %MEMORY
  %loadBr_43f013 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f013 = icmp eq i8 %loadBr_43f013, 1
  br i1 %cmpBr_43f013, label %block_.L_43f918, label %block_43f019

block_43f019:                                     ; preds = %block_.L_43f008
  %loadMem_43f019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 33
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %PC.i1894 = bitcast %union.anon* %1769 to i64*
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 1
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %RAX.i1895 = bitcast %union.anon* %1772 to i64*
  %1773 = load i64, i64* %PC.i1894
  %1774 = add i64 %1773, 8
  store i64 %1774, i64* %PC.i1894
  %1775 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1775, i64* %RAX.i1895, align 8
  store %struct.Memory* %loadMem_43f019, %struct.Memory** %MEMORY
  %loadMem_43f021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 33
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %PC.i1891 = bitcast %union.anon* %1778 to i64*
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1780 = getelementptr inbounds %struct.GPR, %struct.GPR* %1779, i32 0, i32 1
  %1781 = getelementptr inbounds %struct.Reg, %struct.Reg* %1780, i32 0, i32 0
  %RAX.i1892 = bitcast %union.anon* %1781 to i64*
  %1782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1783 = getelementptr inbounds %struct.GPR, %struct.GPR* %1782, i32 0, i32 5
  %1784 = getelementptr inbounds %struct.Reg, %struct.Reg* %1783, i32 0, i32 0
  %RCX.i1893 = bitcast %union.anon* %1784 to i64*
  %1785 = load i64, i64* %RAX.i1892
  %1786 = add i64 %1785, 168
  %1787 = load i64, i64* %PC.i1891
  %1788 = add i64 %1787, 6
  store i64 %1788, i64* %PC.i1891
  %1789 = inttoptr i64 %1786 to i32*
  %1790 = load i32, i32* %1789
  %1791 = zext i32 %1790 to i64
  store i64 %1791, i64* %RCX.i1893, align 8
  store %struct.Memory* %loadMem_43f021, %struct.Memory** %MEMORY
  %loadMem_43f027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 33
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %PC.i1888 = bitcast %union.anon* %1794 to i64*
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 5
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %RCX.i1889 = bitcast %union.anon* %1797 to i64*
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1799 = getelementptr inbounds %struct.GPR, %struct.GPR* %1798, i32 0, i32 15
  %1800 = getelementptr inbounds %struct.Reg, %struct.Reg* %1799, i32 0, i32 0
  %RBP.i1890 = bitcast %union.anon* %1800 to i64*
  %1801 = load i64, i64* %RCX.i1889
  %1802 = load i64, i64* %RBP.i1890
  %1803 = sub i64 %1802, 60
  %1804 = load i64, i64* %PC.i1888
  %1805 = add i64 %1804, 3
  store i64 %1805, i64* %PC.i1888
  %1806 = trunc i64 %1801 to i32
  %1807 = inttoptr i64 %1803 to i32*
  %1808 = load i32, i32* %1807
  %1809 = add i32 %1808, %1806
  %1810 = zext i32 %1809 to i64
  store i64 %1810, i64* %RCX.i1889, align 8
  %1811 = icmp ult i32 %1809, %1806
  %1812 = icmp ult i32 %1809, %1808
  %1813 = or i1 %1811, %1812
  %1814 = zext i1 %1813 to i8
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1814, i8* %1815, align 1
  %1816 = and i32 %1809, 255
  %1817 = call i32 @llvm.ctpop.i32(i32 %1816)
  %1818 = trunc i32 %1817 to i8
  %1819 = and i8 %1818, 1
  %1820 = xor i8 %1819, 1
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1820, i8* %1821, align 1
  %1822 = xor i32 %1808, %1806
  %1823 = xor i32 %1822, %1809
  %1824 = lshr i32 %1823, 4
  %1825 = trunc i32 %1824 to i8
  %1826 = and i8 %1825, 1
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1826, i8* %1827, align 1
  %1828 = icmp eq i32 %1809, 0
  %1829 = zext i1 %1828 to i8
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1829, i8* %1830, align 1
  %1831 = lshr i32 %1809, 31
  %1832 = trunc i32 %1831 to i8
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1832, i8* %1833, align 1
  %1834 = lshr i32 %1806, 31
  %1835 = lshr i32 %1808, 31
  %1836 = xor i32 %1831, %1834
  %1837 = xor i32 %1831, %1835
  %1838 = add i32 %1836, %1837
  %1839 = icmp eq i32 %1838, 2
  %1840 = zext i1 %1839 to i8
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1840, i8* %1841, align 1
  store %struct.Memory* %loadMem_43f027, %struct.Memory** %MEMORY
  %loadMem_43f02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1843 = getelementptr inbounds %struct.GPR, %struct.GPR* %1842, i32 0, i32 33
  %1844 = getelementptr inbounds %struct.Reg, %struct.Reg* %1843, i32 0, i32 0
  %PC.i1885 = bitcast %union.anon* %1844 to i64*
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1846 = getelementptr inbounds %struct.GPR, %struct.GPR* %1845, i32 0, i32 5
  %1847 = getelementptr inbounds %struct.Reg, %struct.Reg* %1846, i32 0, i32 0
  %ECX.i1886 = bitcast %union.anon* %1847 to i32*
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1849 = getelementptr inbounds %struct.GPR, %struct.GPR* %1848, i32 0, i32 15
  %1850 = getelementptr inbounds %struct.Reg, %struct.Reg* %1849, i32 0, i32 0
  %RBP.i1887 = bitcast %union.anon* %1850 to i64*
  %1851 = load i64, i64* %RBP.i1887
  %1852 = sub i64 %1851, 68
  %1853 = load i32, i32* %ECX.i1886
  %1854 = zext i32 %1853 to i64
  %1855 = load i64, i64* %PC.i1885
  %1856 = add i64 %1855, 3
  store i64 %1856, i64* %PC.i1885
  %1857 = inttoptr i64 %1852 to i32*
  store i32 %1853, i32* %1857
  store %struct.Memory* %loadMem_43f02a, %struct.Memory** %MEMORY
  %loadMem_43f02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 33
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %PC.i1882 = bitcast %union.anon* %1860 to i64*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 5
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %RCX.i1883 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 15
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %RBP.i1884 = bitcast %union.anon* %1866 to i64*
  %1867 = load i64, i64* %RBP.i1884
  %1868 = sub i64 %1867, 60
  %1869 = load i64, i64* %PC.i1882
  %1870 = add i64 %1869, 3
  store i64 %1870, i64* %PC.i1882
  %1871 = inttoptr i64 %1868 to i32*
  %1872 = load i32, i32* %1871
  %1873 = zext i32 %1872 to i64
  store i64 %1873, i64* %RCX.i1883, align 8
  store %struct.Memory* %loadMem_43f02d, %struct.Memory** %MEMORY
  %loadMem_43f030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 33
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %PC.i1880 = bitcast %union.anon* %1876 to i64*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 5
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %RCX.i1881 = bitcast %union.anon* %1879 to i64*
  %1880 = load i64, i64* %RCX.i1881
  %1881 = load i64, i64* %PC.i1880
  %1882 = add i64 %1881, 3
  store i64 %1882, i64* %PC.i1880
  %1883 = shl i64 %1880, 32
  %1884 = ashr exact i64 %1883, 32
  %1885 = ashr i64 %1884, 1
  %1886 = lshr i64 %1885, 1
  %1887 = trunc i64 %1885 to i8
  %1888 = and i8 %1887, 1
  %1889 = trunc i64 %1886 to i32
  %1890 = and i64 %1886, 4294967295
  store i64 %1890, i64* %RCX.i1881, align 8
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1888, i8* %1891, align 1
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1893 = and i32 %1889, 255
  %1894 = call i32 @llvm.ctpop.i32(i32 %1893)
  %1895 = trunc i32 %1894 to i8
  %1896 = and i8 %1895, 1
  %1897 = xor i8 %1896, 1
  store i8 %1897, i8* %1892, align 1
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1898, align 1
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1900 = icmp eq i32 %1889, 0
  %1901 = zext i1 %1900 to i8
  store i8 %1901, i8* %1899, align 1
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1903 = lshr i32 %1889, 31
  %1904 = trunc i32 %1903 to i8
  store i8 %1904, i8* %1902, align 1
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1905, align 1
  store %struct.Memory* %loadMem_43f030, %struct.Memory** %MEMORY
  %loadMem_43f033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1907 = getelementptr inbounds %struct.GPR, %struct.GPR* %1906, i32 0, i32 33
  %1908 = getelementptr inbounds %struct.Reg, %struct.Reg* %1907, i32 0, i32 0
  %PC.i1877 = bitcast %union.anon* %1908 to i64*
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1910 = getelementptr inbounds %struct.GPR, %struct.GPR* %1909, i32 0, i32 5
  %1911 = getelementptr inbounds %struct.Reg, %struct.Reg* %1910, i32 0, i32 0
  %RCX.i1878 = bitcast %union.anon* %1911 to i64*
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1913 = getelementptr inbounds %struct.GPR, %struct.GPR* %1912, i32 0, i32 15
  %1914 = getelementptr inbounds %struct.Reg, %struct.Reg* %1913, i32 0, i32 0
  %RBP.i1879 = bitcast %union.anon* %1914 to i64*
  %1915 = load i64, i64* %RCX.i1878
  %1916 = load i64, i64* %RBP.i1879
  %1917 = sub i64 %1916, 56
  %1918 = load i64, i64* %PC.i1877
  %1919 = add i64 %1918, 3
  store i64 %1919, i64* %PC.i1877
  %1920 = trunc i64 %1915 to i32
  %1921 = inttoptr i64 %1917 to i32*
  %1922 = load i32, i32* %1921
  %1923 = add i32 %1922, %1920
  %1924 = zext i32 %1923 to i64
  store i64 %1924, i64* %RCX.i1878, align 8
  %1925 = icmp ult i32 %1923, %1920
  %1926 = icmp ult i32 %1923, %1922
  %1927 = or i1 %1925, %1926
  %1928 = zext i1 %1927 to i8
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1928, i8* %1929, align 1
  %1930 = and i32 %1923, 255
  %1931 = call i32 @llvm.ctpop.i32(i32 %1930)
  %1932 = trunc i32 %1931 to i8
  %1933 = and i8 %1932, 1
  %1934 = xor i8 %1933, 1
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1934, i8* %1935, align 1
  %1936 = xor i32 %1922, %1920
  %1937 = xor i32 %1936, %1923
  %1938 = lshr i32 %1937, 4
  %1939 = trunc i32 %1938 to i8
  %1940 = and i8 %1939, 1
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1940, i8* %1941, align 1
  %1942 = icmp eq i32 %1923, 0
  %1943 = zext i1 %1942 to i8
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1943, i8* %1944, align 1
  %1945 = lshr i32 %1923, 31
  %1946 = trunc i32 %1945 to i8
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1946, i8* %1947, align 1
  %1948 = lshr i32 %1920, 31
  %1949 = lshr i32 %1922, 31
  %1950 = xor i32 %1945, %1948
  %1951 = xor i32 %1945, %1949
  %1952 = add i32 %1950, %1951
  %1953 = icmp eq i32 %1952, 2
  %1954 = zext i1 %1953 to i8
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1954, i8* %1955, align 1
  store %struct.Memory* %loadMem_43f033, %struct.Memory** %MEMORY
  %loadMem_43f036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1957 = getelementptr inbounds %struct.GPR, %struct.GPR* %1956, i32 0, i32 33
  %1958 = getelementptr inbounds %struct.Reg, %struct.Reg* %1957, i32 0, i32 0
  %PC.i1874 = bitcast %union.anon* %1958 to i64*
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1960 = getelementptr inbounds %struct.GPR, %struct.GPR* %1959, i32 0, i32 5
  %1961 = getelementptr inbounds %struct.Reg, %struct.Reg* %1960, i32 0, i32 0
  %ECX.i1875 = bitcast %union.anon* %1961 to i32*
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1963 = getelementptr inbounds %struct.GPR, %struct.GPR* %1962, i32 0, i32 15
  %1964 = getelementptr inbounds %struct.Reg, %struct.Reg* %1963, i32 0, i32 0
  %RBP.i1876 = bitcast %union.anon* %1964 to i64*
  %1965 = load i64, i64* %RBP.i1876
  %1966 = sub i64 %1965, 84
  %1967 = load i32, i32* %ECX.i1875
  %1968 = zext i32 %1967 to i64
  %1969 = load i64, i64* %PC.i1874
  %1970 = add i64 %1969, 3
  store i64 %1970, i64* %PC.i1874
  %1971 = inttoptr i64 %1966 to i32*
  store i32 %1967, i32* %1971
  store %struct.Memory* %loadMem_43f036, %struct.Memory** %MEMORY
  %loadMem_43f039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1973 = getelementptr inbounds %struct.GPR, %struct.GPR* %1972, i32 0, i32 33
  %1974 = getelementptr inbounds %struct.Reg, %struct.Reg* %1973, i32 0, i32 0
  %PC.i1872 = bitcast %union.anon* %1974 to i64*
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1976 = getelementptr inbounds %struct.GPR, %struct.GPR* %1975, i32 0, i32 1
  %1977 = getelementptr inbounds %struct.Reg, %struct.Reg* %1976, i32 0, i32 0
  %RAX.i1873 = bitcast %union.anon* %1977 to i64*
  %1978 = load i64, i64* %PC.i1872
  %1979 = add i64 %1978, 8
  store i64 %1979, i64* %PC.i1872
  %1980 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1980, i64* %RAX.i1873, align 8
  store %struct.Memory* %loadMem_43f039, %struct.Memory** %MEMORY
  %loadMem_43f041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1982 = getelementptr inbounds %struct.GPR, %struct.GPR* %1981, i32 0, i32 33
  %1983 = getelementptr inbounds %struct.Reg, %struct.Reg* %1982, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %1983 to i64*
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1985 = getelementptr inbounds %struct.GPR, %struct.GPR* %1984, i32 0, i32 1
  %1986 = getelementptr inbounds %struct.Reg, %struct.Reg* %1985, i32 0, i32 0
  %RAX.i1871 = bitcast %union.anon* %1986 to i64*
  %1987 = load i64, i64* %RAX.i1871
  %1988 = add i64 %1987, 72724
  %1989 = load i64, i64* %PC.i1870
  %1990 = add i64 %1989, 7
  store i64 %1990, i64* %PC.i1870
  %1991 = inttoptr i64 %1988 to i32*
  %1992 = load i32, i32* %1991
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1993, align 1
  %1994 = and i32 %1992, 255
  %1995 = call i32 @llvm.ctpop.i32(i32 %1994)
  %1996 = trunc i32 %1995 to i8
  %1997 = and i8 %1996, 1
  %1998 = xor i8 %1997, 1
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1998, i8* %1999, align 1
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2000, align 1
  %2001 = icmp eq i32 %1992, 0
  %2002 = zext i1 %2001 to i8
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2002, i8* %2003, align 1
  %2004 = lshr i32 %1992, 31
  %2005 = trunc i32 %2004 to i8
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2005, i8* %2006, align 1
  %2007 = lshr i32 %1992, 31
  %2008 = xor i32 %2004, %2007
  %2009 = add i32 %2008, %2007
  %2010 = icmp eq i32 %2009, 2
  %2011 = zext i1 %2010 to i8
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2011, i8* %2012, align 1
  store %struct.Memory* %loadMem_43f041, %struct.Memory** %MEMORY
  %loadMem_43f048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 33
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %PC.i1869 = bitcast %union.anon* %2015 to i64*
  %2016 = load i64, i64* %PC.i1869
  %2017 = add i64 %2016, 418
  %2018 = load i64, i64* %PC.i1869
  %2019 = add i64 %2018, 6
  %2020 = load i64, i64* %PC.i1869
  %2021 = add i64 %2020, 6
  store i64 %2021, i64* %PC.i1869
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2023 = load i8, i8* %2022, align 1
  store i8 %2023, i8* %BRANCH_TAKEN, align 1
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2025 = icmp ne i8 %2023, 0
  %2026 = select i1 %2025, i64 %2017, i64 %2019
  store i64 %2026, i64* %2024, align 8
  store %struct.Memory* %loadMem_43f048, %struct.Memory** %MEMORY
  %loadBr_43f048 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f048 = icmp eq i8 %loadBr_43f048, 1
  br i1 %cmpBr_43f048, label %block_.L_43f1ea, label %block_43f04e

block_43f04e:                                     ; preds = %block_43f019
  %loadMem_43f04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2028 = getelementptr inbounds %struct.GPR, %struct.GPR* %2027, i32 0, i32 33
  %2029 = getelementptr inbounds %struct.Reg, %struct.Reg* %2028, i32 0, i32 0
  %PC.i1866 = bitcast %union.anon* %2029 to i64*
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 11
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %EDI.i1867 = bitcast %union.anon* %2032 to i32*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 11
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %RDI.i1868 = bitcast %union.anon* %2035 to i64*
  %2036 = load i64, i64* %RDI.i1868
  %2037 = load i32, i32* %EDI.i1867
  %2038 = zext i32 %2037 to i64
  %2039 = load i64, i64* %PC.i1866
  %2040 = add i64 %2039, 2
  store i64 %2040, i64* %PC.i1866
  %2041 = xor i64 %2038, %2036
  %2042 = trunc i64 %2041 to i32
  %2043 = and i64 %2041, 4294967295
  store i64 %2043, i64* %RDI.i1868, align 8
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2044, align 1
  %2045 = and i32 %2042, 255
  %2046 = call i32 @llvm.ctpop.i32(i32 %2045)
  %2047 = trunc i32 %2046 to i8
  %2048 = and i8 %2047, 1
  %2049 = xor i8 %2048, 1
  %2050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2049, i8* %2050, align 1
  %2051 = icmp eq i32 %2042, 0
  %2052 = zext i1 %2051 to i8
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2052, i8* %2053, align 1
  %2054 = lshr i32 %2042, 31
  %2055 = trunc i32 %2054 to i8
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2055, i8* %2056, align 1
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2057, align 1
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2058, align 1
  store %struct.Memory* %loadMem_43f04e, %struct.Memory** %MEMORY
  %loadMem_43f050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2060 = getelementptr inbounds %struct.GPR, %struct.GPR* %2059, i32 0, i32 33
  %2061 = getelementptr inbounds %struct.Reg, %struct.Reg* %2060, i32 0, i32 0
  %PC.i1863 = bitcast %union.anon* %2061 to i64*
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 9
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %RSI.i1864 = bitcast %union.anon* %2064 to i64*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 15
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %RBP.i1865 = bitcast %union.anon* %2067 to i64*
  %2068 = load i64, i64* %RBP.i1865
  %2069 = sub i64 %2068, 60
  %2070 = load i64, i64* %PC.i1863
  %2071 = add i64 %2070, 3
  store i64 %2071, i64* %PC.i1863
  %2072 = inttoptr i64 %2069 to i32*
  %2073 = load i32, i32* %2072
  %2074 = zext i32 %2073 to i64
  store i64 %2074, i64* %RSI.i1864, align 8
  store %struct.Memory* %loadMem_43f050, %struct.Memory** %MEMORY
  %loadMem_43f053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 33
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %PC.i1860 = bitcast %union.anon* %2077 to i64*
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2079 = getelementptr inbounds %struct.GPR, %struct.GPR* %2078, i32 0, i32 7
  %2080 = getelementptr inbounds %struct.Reg, %struct.Reg* %2079, i32 0, i32 0
  %RDX.i1861 = bitcast %union.anon* %2080 to i64*
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2082 = getelementptr inbounds %struct.GPR, %struct.GPR* %2081, i32 0, i32 15
  %2083 = getelementptr inbounds %struct.Reg, %struct.Reg* %2082, i32 0, i32 0
  %RBP.i1862 = bitcast %union.anon* %2083 to i64*
  %2084 = load i64, i64* %RBP.i1862
  %2085 = sub i64 %2084, 56
  %2086 = load i64, i64* %PC.i1860
  %2087 = add i64 %2086, 3
  store i64 %2087, i64* %PC.i1860
  %2088 = inttoptr i64 %2085 to i32*
  %2089 = load i32, i32* %2088
  %2090 = zext i32 %2089 to i64
  store i64 %2090, i64* %RDX.i1861, align 8
  store %struct.Memory* %loadMem_43f053, %struct.Memory** %MEMORY
  %loadMem_43f056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2092 = getelementptr inbounds %struct.GPR, %struct.GPR* %2091, i32 0, i32 33
  %2093 = getelementptr inbounds %struct.Reg, %struct.Reg* %2092, i32 0, i32 0
  %PC.i1857 = bitcast %union.anon* %2093 to i64*
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2095 = getelementptr inbounds %struct.GPR, %struct.GPR* %2094, i32 0, i32 5
  %2096 = getelementptr inbounds %struct.Reg, %struct.Reg* %2095, i32 0, i32 0
  %RCX.i1858 = bitcast %union.anon* %2096 to i64*
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2098 = getelementptr inbounds %struct.GPR, %struct.GPR* %2097, i32 0, i32 15
  %2099 = getelementptr inbounds %struct.Reg, %struct.Reg* %2098, i32 0, i32 0
  %RBP.i1859 = bitcast %union.anon* %2099 to i64*
  %2100 = load i64, i64* %RBP.i1859
  %2101 = sub i64 %2100, 38
  %2102 = load i64, i64* %PC.i1857
  %2103 = add i64 %2102, 4
  store i64 %2103, i64* %PC.i1857
  %2104 = inttoptr i64 %2101 to i16*
  %2105 = load i16, i16* %2104
  %2106 = sext i16 %2105 to i64
  %2107 = and i64 %2106, 4294967295
  store i64 %2107, i64* %RCX.i1858, align 8
  store %struct.Memory* %loadMem_43f056, %struct.Memory** %MEMORY
  %loadMem_43f05a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2109 = getelementptr inbounds %struct.GPR, %struct.GPR* %2108, i32 0, i32 33
  %2110 = getelementptr inbounds %struct.Reg, %struct.Reg* %2109, i32 0, i32 0
  %PC.i1854 = bitcast %union.anon* %2110 to i64*
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2112 = getelementptr inbounds %struct.GPR, %struct.GPR* %2111, i32 0, i32 17
  %2113 = getelementptr inbounds %struct.Reg, %struct.Reg* %2112, i32 0, i32 0
  %R8D.i1855 = bitcast %union.anon* %2113 to i32*
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2115 = getelementptr inbounds %struct.GPR, %struct.GPR* %2114, i32 0, i32 15
  %2116 = getelementptr inbounds %struct.Reg, %struct.Reg* %2115, i32 0, i32 0
  %RBP.i1856 = bitcast %union.anon* %2116 to i64*
  %2117 = bitcast i32* %R8D.i1855 to i64*
  %2118 = load i64, i64* %RBP.i1856
  %2119 = sub i64 %2118, 44
  %2120 = load i64, i64* %PC.i1854
  %2121 = add i64 %2120, 4
  store i64 %2121, i64* %PC.i1854
  %2122 = inttoptr i64 %2119 to i32*
  %2123 = load i32, i32* %2122
  %2124 = zext i32 %2123 to i64
  store i64 %2124, i64* %2117, align 8
  store %struct.Memory* %loadMem_43f05a, %struct.Memory** %MEMORY
  %loadMem_43f05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 33
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %2127 to i64*
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 19
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %R9D.i1852 = bitcast %union.anon* %2130 to i32*
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 15
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %RBP.i1853 = bitcast %union.anon* %2133 to i64*
  %2134 = bitcast i32* %R9D.i1852 to i64*
  %2135 = load i64, i64* %RBP.i1853
  %2136 = sub i64 %2135, 48
  %2137 = load i64, i64* %PC.i1851
  %2138 = add i64 %2137, 4
  store i64 %2138, i64* %PC.i1851
  %2139 = inttoptr i64 %2136 to i32*
  %2140 = load i32, i32* %2139
  %2141 = zext i32 %2140 to i64
  store i64 %2141, i64* %2134, align 8
  store %struct.Memory* %loadMem_43f05e, %struct.Memory** %MEMORY
  %loadMem_43f062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2143 = getelementptr inbounds %struct.GPR, %struct.GPR* %2142, i32 0, i32 33
  %2144 = getelementptr inbounds %struct.Reg, %struct.Reg* %2143, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %2144 to i64*
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2146 = getelementptr inbounds %struct.GPR, %struct.GPR* %2145, i32 0, i32 1
  %2147 = getelementptr inbounds %struct.Reg, %struct.Reg* %2146, i32 0, i32 0
  %AX.i1849 = bitcast %union.anon* %2147 to i16*
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 15
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %RBP.i1850 = bitcast %union.anon* %2150 to i64*
  %2151 = load i64, i64* %RBP.i1850
  %2152 = sub i64 %2151, 50
  %2153 = load i64, i64* %PC.i1848
  %2154 = add i64 %2153, 4
  store i64 %2154, i64* %PC.i1848
  %2155 = inttoptr i64 %2152 to i16*
  %2156 = load i16, i16* %2155
  store i16 %2156, i16* %AX.i1849, align 2
  store %struct.Memory* %loadMem_43f062, %struct.Memory** %MEMORY
  %loadMem_43f066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2158 = getelementptr inbounds %struct.GPR, %struct.GPR* %2157, i32 0, i32 33
  %2159 = getelementptr inbounds %struct.Reg, %struct.Reg* %2158, i32 0, i32 0
  %PC.i1845 = bitcast %union.anon* %2159 to i64*
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 1
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %AX.i1846 = bitcast %union.anon* %2162 to i16*
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 21
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %R10D.i1847 = bitcast %union.anon* %2165 to i32*
  %2166 = bitcast i32* %R10D.i1847 to i64*
  %2167 = load i16, i16* %AX.i1846
  %2168 = zext i16 %2167 to i64
  %2169 = load i64, i64* %PC.i1845
  %2170 = add i64 %2169, 4
  store i64 %2170, i64* %PC.i1845
  %2171 = trunc i64 %2168 to i32
  %2172 = shl i32 %2171, 16
  %2173 = ashr exact i32 %2172, 16
  %2174 = zext i32 %2173 to i64
  store i64 %2174, i64* %2166, align 8
  store %struct.Memory* %loadMem_43f066, %struct.Memory** %MEMORY
  %loadMem_43f06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i1842 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 21
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %R10D.i1843 = bitcast %union.anon* %2180 to i32*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 13
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %RSP.i1844 = bitcast %union.anon* %2183 to i64*
  %2184 = load i64, i64* %RSP.i1844
  %2185 = load i32, i32* %R10D.i1843
  %2186 = zext i32 %2185 to i64
  %2187 = load i64, i64* %PC.i1842
  %2188 = add i64 %2187, 4
  store i64 %2188, i64* %PC.i1842
  %2189 = inttoptr i64 %2184 to i32*
  store i32 %2185, i32* %2189
  store %struct.Memory* %loadMem_43f06a, %struct.Memory** %MEMORY
  %loadMem_43f06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 33
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %PC.i1839 = bitcast %union.anon* %2192 to i64*
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 21
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %R10D.i1840 = bitcast %union.anon* %2195 to i32*
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2197 = getelementptr inbounds %struct.GPR, %struct.GPR* %2196, i32 0, i32 15
  %2198 = getelementptr inbounds %struct.Reg, %struct.Reg* %2197, i32 0, i32 0
  %RBP.i1841 = bitcast %union.anon* %2198 to i64*
  %2199 = bitcast i32* %R10D.i1840 to i64*
  %2200 = load i64, i64* %RBP.i1841
  %2201 = sub i64 %2200, 52
  %2202 = load i64, i64* %PC.i1839
  %2203 = add i64 %2202, 5
  store i64 %2203, i64* %PC.i1839
  %2204 = inttoptr i64 %2201 to i16*
  %2205 = load i16, i16* %2204
  %2206 = sext i16 %2205 to i64
  %2207 = and i64 %2206, 4294967295
  store i64 %2207, i64* %2199, align 8
  store %struct.Memory* %loadMem_43f06e, %struct.Memory** %MEMORY
  %loadMem_43f073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2209 = getelementptr inbounds %struct.GPR, %struct.GPR* %2208, i32 0, i32 33
  %2210 = getelementptr inbounds %struct.Reg, %struct.Reg* %2209, i32 0, i32 0
  %PC.i1836 = bitcast %union.anon* %2210 to i64*
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2212 = getelementptr inbounds %struct.GPR, %struct.GPR* %2211, i32 0, i32 21
  %2213 = getelementptr inbounds %struct.Reg, %struct.Reg* %2212, i32 0, i32 0
  %R10D.i1837 = bitcast %union.anon* %2213 to i32*
  %2214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2215 = getelementptr inbounds %struct.GPR, %struct.GPR* %2214, i32 0, i32 13
  %2216 = getelementptr inbounds %struct.Reg, %struct.Reg* %2215, i32 0, i32 0
  %RSP.i1838 = bitcast %union.anon* %2216 to i64*
  %2217 = load i64, i64* %RSP.i1838
  %2218 = add i64 %2217, 8
  %2219 = load i32, i32* %R10D.i1837
  %2220 = zext i32 %2219 to i64
  %2221 = load i64, i64* %PC.i1836
  %2222 = add i64 %2221, 5
  store i64 %2222, i64* %PC.i1836
  %2223 = inttoptr i64 %2218 to i32*
  store i32 %2219, i32* %2223
  store %struct.Memory* %loadMem_43f073, %struct.Memory** %MEMORY
  %loadMem1_43f078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 33
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %PC.i1835 = bitcast %union.anon* %2226 to i64*
  %2227 = load i64, i64* %PC.i1835
  %2228 = add i64 %2227, 3144
  %2229 = load i64, i64* %PC.i1835
  %2230 = add i64 %2229, 5
  %2231 = load i64, i64* %PC.i1835
  %2232 = add i64 %2231, 5
  store i64 %2232, i64* %PC.i1835
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2234 = load i64, i64* %2233, align 8
  %2235 = add i64 %2234, -8
  %2236 = inttoptr i64 %2235 to i64*
  store i64 %2230, i64* %2236
  store i64 %2235, i64* %2233, align 8
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2228, i64* %2237, align 8
  store %struct.Memory* %loadMem1_43f078, %struct.Memory** %MEMORY
  %loadMem2_43f078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f078 = load i64, i64* %3
  %call2_43f078 = call %struct.Memory* @sub_43fcc0.ChromaPrediction4x4(%struct.State* %0, i64 %loadPC_43f078, %struct.Memory* %loadMem2_43f078)
  store %struct.Memory* %call2_43f078, %struct.Memory** %MEMORY
  %loadMem_43f07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2239 = getelementptr inbounds %struct.GPR, %struct.GPR* %2238, i32 0, i32 33
  %2240 = getelementptr inbounds %struct.Reg, %struct.Reg* %2239, i32 0, i32 0
  %PC.i1833 = bitcast %union.anon* %2240 to i64*
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2242 = getelementptr inbounds %struct.GPR, %struct.GPR* %2241, i32 0, i32 15
  %2243 = getelementptr inbounds %struct.Reg, %struct.Reg* %2242, i32 0, i32 0
  %RBP.i1834 = bitcast %union.anon* %2243 to i64*
  %2244 = load i64, i64* %RBP.i1834
  %2245 = sub i64 %2244, 76
  %2246 = load i64, i64* %PC.i1833
  %2247 = add i64 %2246, 7
  store i64 %2247, i64* %PC.i1833
  %2248 = inttoptr i64 %2245 to i32*
  store i32 0, i32* %2248
  store %struct.Memory* %loadMem_43f07d, %struct.Memory** %MEMORY
  br label %block_.L_43f084

block_.L_43f084:                                  ; preds = %block_.L_43f10a, %block_43f04e
  %loadMem_43f084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2250 = getelementptr inbounds %struct.GPR, %struct.GPR* %2249, i32 0, i32 33
  %2251 = getelementptr inbounds %struct.Reg, %struct.Reg* %2250, i32 0, i32 0
  %PC.i1831 = bitcast %union.anon* %2251 to i64*
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 15
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %RBP.i1832 = bitcast %union.anon* %2254 to i64*
  %2255 = load i64, i64* %RBP.i1832
  %2256 = sub i64 %2255, 76
  %2257 = load i64, i64* %PC.i1831
  %2258 = add i64 %2257, 4
  store i64 %2258, i64* %PC.i1831
  %2259 = inttoptr i64 %2256 to i32*
  %2260 = load i32, i32* %2259
  %2261 = sub i32 %2260, 4
  %2262 = icmp ult i32 %2260, 4
  %2263 = zext i1 %2262 to i8
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2263, i8* %2264, align 1
  %2265 = and i32 %2261, 255
  %2266 = call i32 @llvm.ctpop.i32(i32 %2265)
  %2267 = trunc i32 %2266 to i8
  %2268 = and i8 %2267, 1
  %2269 = xor i8 %2268, 1
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2269, i8* %2270, align 1
  %2271 = xor i32 %2260, 4
  %2272 = xor i32 %2271, %2261
  %2273 = lshr i32 %2272, 4
  %2274 = trunc i32 %2273 to i8
  %2275 = and i8 %2274, 1
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2275, i8* %2276, align 1
  %2277 = icmp eq i32 %2261, 0
  %2278 = zext i1 %2277 to i8
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2278, i8* %2279, align 1
  %2280 = lshr i32 %2261, 31
  %2281 = trunc i32 %2280 to i8
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2281, i8* %2282, align 1
  %2283 = lshr i32 %2260, 31
  %2284 = xor i32 %2280, %2283
  %2285 = add i32 %2284, %2283
  %2286 = icmp eq i32 %2285, 2
  %2287 = zext i1 %2286 to i8
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2287, i8* %2288, align 1
  store %struct.Memory* %loadMem_43f084, %struct.Memory** %MEMORY
  %loadMem_43f088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 33
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %PC.i1830 = bitcast %union.anon* %2291 to i64*
  %2292 = load i64, i64* %PC.i1830
  %2293 = add i64 %2292, 144
  %2294 = load i64, i64* %PC.i1830
  %2295 = add i64 %2294, 6
  %2296 = load i64, i64* %PC.i1830
  %2297 = add i64 %2296, 6
  store i64 %2297, i64* %PC.i1830
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2299 = load i8, i8* %2298, align 1
  %2300 = icmp ne i8 %2299, 0
  %2301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2302 = load i8, i8* %2301, align 1
  %2303 = icmp ne i8 %2302, 0
  %2304 = xor i1 %2300, %2303
  %2305 = xor i1 %2304, true
  %2306 = zext i1 %2305 to i8
  store i8 %2306, i8* %BRANCH_TAKEN, align 1
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2308 = select i1 %2304, i64 %2295, i64 %2293
  store i64 %2308, i64* %2307, align 8
  store %struct.Memory* %loadMem_43f088, %struct.Memory** %MEMORY
  %loadBr_43f088 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f088 = icmp eq i8 %loadBr_43f088, 1
  br i1 %cmpBr_43f088, label %block_.L_43f118, label %block_43f08e

block_43f08e:                                     ; preds = %block_.L_43f084
  %loadMem_43f08e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2310 = getelementptr inbounds %struct.GPR, %struct.GPR* %2309, i32 0, i32 33
  %2311 = getelementptr inbounds %struct.Reg, %struct.Reg* %2310, i32 0, i32 0
  %PC.i1828 = bitcast %union.anon* %2311 to i64*
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2313 = getelementptr inbounds %struct.GPR, %struct.GPR* %2312, i32 0, i32 15
  %2314 = getelementptr inbounds %struct.Reg, %struct.Reg* %2313, i32 0, i32 0
  %RBP.i1829 = bitcast %union.anon* %2314 to i64*
  %2315 = load i64, i64* %RBP.i1829
  %2316 = sub i64 %2315, 72
  %2317 = load i64, i64* %PC.i1828
  %2318 = add i64 %2317, 7
  store i64 %2318, i64* %PC.i1828
  %2319 = inttoptr i64 %2316 to i32*
  store i32 0, i32* %2319
  store %struct.Memory* %loadMem_43f08e, %struct.Memory** %MEMORY
  br label %block_.L_43f095

block_.L_43f095:                                  ; preds = %block_43f09f, %block_43f08e
  %loadMem_43f095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2321 = getelementptr inbounds %struct.GPR, %struct.GPR* %2320, i32 0, i32 33
  %2322 = getelementptr inbounds %struct.Reg, %struct.Reg* %2321, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %2322 to i64*
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 15
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %RBP.i1827 = bitcast %union.anon* %2325 to i64*
  %2326 = load i64, i64* %RBP.i1827
  %2327 = sub i64 %2326, 72
  %2328 = load i64, i64* %PC.i1826
  %2329 = add i64 %2328, 4
  store i64 %2329, i64* %PC.i1826
  %2330 = inttoptr i64 %2327 to i32*
  %2331 = load i32, i32* %2330
  %2332 = sub i32 %2331, 4
  %2333 = icmp ult i32 %2331, 4
  %2334 = zext i1 %2333 to i8
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2334, i8* %2335, align 1
  %2336 = and i32 %2332, 255
  %2337 = call i32 @llvm.ctpop.i32(i32 %2336)
  %2338 = trunc i32 %2337 to i8
  %2339 = and i8 %2338, 1
  %2340 = xor i8 %2339, 1
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2340, i8* %2341, align 1
  %2342 = xor i32 %2331, 4
  %2343 = xor i32 %2342, %2332
  %2344 = lshr i32 %2343, 4
  %2345 = trunc i32 %2344 to i8
  %2346 = and i8 %2345, 1
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2346, i8* %2347, align 1
  %2348 = icmp eq i32 %2332, 0
  %2349 = zext i1 %2348 to i8
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2349, i8* %2350, align 1
  %2351 = lshr i32 %2332, 31
  %2352 = trunc i32 %2351 to i8
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2352, i8* %2353, align 1
  %2354 = lshr i32 %2331, 31
  %2355 = xor i32 %2351, %2354
  %2356 = add i32 %2355, %2354
  %2357 = icmp eq i32 %2356, 2
  %2358 = zext i1 %2357 to i8
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2358, i8* %2359, align 1
  store %struct.Memory* %loadMem_43f095, %struct.Memory** %MEMORY
  %loadMem_43f099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 33
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %PC.i1825 = bitcast %union.anon* %2362 to i64*
  %2363 = load i64, i64* %PC.i1825
  %2364 = add i64 %2363, 108
  %2365 = load i64, i64* %PC.i1825
  %2366 = add i64 %2365, 6
  %2367 = load i64, i64* %PC.i1825
  %2368 = add i64 %2367, 6
  store i64 %2368, i64* %PC.i1825
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2370 = load i8, i8* %2369, align 1
  %2371 = icmp ne i8 %2370, 0
  %2372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2373 = load i8, i8* %2372, align 1
  %2374 = icmp ne i8 %2373, 0
  %2375 = xor i1 %2371, %2374
  %2376 = xor i1 %2375, true
  %2377 = zext i1 %2376 to i8
  store i8 %2377, i8* %BRANCH_TAKEN, align 1
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2379 = select i1 %2375, i64 %2366, i64 %2364
  store i64 %2379, i64* %2378, align 8
  store %struct.Memory* %loadMem_43f099, %struct.Memory** %MEMORY
  %loadBr_43f099 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f099 = icmp eq i8 %loadBr_43f099, 1
  br i1 %cmpBr_43f099, label %block_.L_43f105, label %block_43f09f

block_43f09f:                                     ; preds = %block_.L_43f095
  %loadMem_43f09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2381 = getelementptr inbounds %struct.GPR, %struct.GPR* %2380, i32 0, i32 33
  %2382 = getelementptr inbounds %struct.Reg, %struct.Reg* %2381, i32 0, i32 0
  %PC.i1823 = bitcast %union.anon* %2382 to i64*
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 1
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %RAX.i1824 = bitcast %union.anon* %2385 to i64*
  %2386 = load i64, i64* %PC.i1823
  %2387 = add i64 %2386, 10
  store i64 %2387, i64* %PC.i1823
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i1824, align 8
  store %struct.Memory* %loadMem_43f09f, %struct.Memory** %MEMORY
  %loadMem_43f0a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2389 = getelementptr inbounds %struct.GPR, %struct.GPR* %2388, i32 0, i32 33
  %2390 = getelementptr inbounds %struct.Reg, %struct.Reg* %2389, i32 0, i32 0
  %PC.i1821 = bitcast %union.anon* %2390 to i64*
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2392 = getelementptr inbounds %struct.GPR, %struct.GPR* %2391, i32 0, i32 1
  %2393 = getelementptr inbounds %struct.Reg, %struct.Reg* %2392, i32 0, i32 0
  %RAX.i1822 = bitcast %union.anon* %2393 to i64*
  %2394 = load i64, i64* %RAX.i1822
  %2395 = load i64, i64* %PC.i1821
  %2396 = add i64 %2395, 6
  store i64 %2396, i64* %PC.i1821
  %2397 = add i64 1024, %2394
  store i64 %2397, i64* %RAX.i1822, align 8
  %2398 = icmp ult i64 %2397, %2394
  %2399 = icmp ult i64 %2397, 1024
  %2400 = or i1 %2398, %2399
  %2401 = zext i1 %2400 to i8
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2401, i8* %2402, align 1
  %2403 = trunc i64 %2397 to i32
  %2404 = and i32 %2403, 255
  %2405 = call i32 @llvm.ctpop.i32(i32 %2404)
  %2406 = trunc i32 %2405 to i8
  %2407 = and i8 %2406, 1
  %2408 = xor i8 %2407, 1
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2408, i8* %2409, align 1
  %2410 = xor i64 1024, %2394
  %2411 = xor i64 %2410, %2397
  %2412 = lshr i64 %2411, 4
  %2413 = trunc i64 %2412 to i8
  %2414 = and i8 %2413, 1
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2414, i8* %2415, align 1
  %2416 = icmp eq i64 %2397, 0
  %2417 = zext i1 %2416 to i8
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2417, i8* %2418, align 1
  %2419 = lshr i64 %2397, 63
  %2420 = trunc i64 %2419 to i8
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2420, i8* %2421, align 1
  %2422 = lshr i64 %2394, 63
  %2423 = xor i64 %2419, %2422
  %2424 = add i64 %2423, %2419
  %2425 = icmp eq i64 %2424, 2
  %2426 = zext i1 %2425 to i8
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2426, i8* %2427, align 1
  store %struct.Memory* %loadMem_43f0a9, %struct.Memory** %MEMORY
  %loadMem_43f0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2429 = getelementptr inbounds %struct.GPR, %struct.GPR* %2428, i32 0, i32 33
  %2430 = getelementptr inbounds %struct.Reg, %struct.Reg* %2429, i32 0, i32 0
  %PC.i1819 = bitcast %union.anon* %2430 to i64*
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 5
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %RCX.i1820 = bitcast %union.anon* %2433 to i64*
  %2434 = load i64, i64* %PC.i1819
  %2435 = add i64 %2434, 8
  store i64 %2435, i64* %PC.i1819
  %2436 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2436, i64* %RCX.i1820, align 8
  store %struct.Memory* %loadMem_43f0af, %struct.Memory** %MEMORY
  %loadMem_43f0b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 33
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %PC.i1817 = bitcast %union.anon* %2439 to i64*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 5
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %RCX.i1818 = bitcast %union.anon* %2442 to i64*
  %2443 = load i64, i64* %RCX.i1818
  %2444 = load i64, i64* %PC.i1817
  %2445 = add i64 %2444, 7
  store i64 %2445, i64* %PC.i1817
  %2446 = add i64 12600, %2443
  store i64 %2446, i64* %RCX.i1818, align 8
  %2447 = icmp ult i64 %2446, %2443
  %2448 = icmp ult i64 %2446, 12600
  %2449 = or i1 %2447, %2448
  %2450 = zext i1 %2449 to i8
  %2451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2450, i8* %2451, align 1
  %2452 = trunc i64 %2446 to i32
  %2453 = and i32 %2452, 255
  %2454 = call i32 @llvm.ctpop.i32(i32 %2453)
  %2455 = trunc i32 %2454 to i8
  %2456 = and i8 %2455, 1
  %2457 = xor i8 %2456, 1
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2457, i8* %2458, align 1
  %2459 = xor i64 12600, %2443
  %2460 = xor i64 %2459, %2446
  %2461 = lshr i64 %2460, 4
  %2462 = trunc i64 %2461 to i8
  %2463 = and i8 %2462, 1
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2463, i8* %2464, align 1
  %2465 = icmp eq i64 %2446, 0
  %2466 = zext i1 %2465 to i8
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2466, i8* %2467, align 1
  %2468 = lshr i64 %2446, 63
  %2469 = trunc i64 %2468 to i8
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2469, i8* %2470, align 1
  %2471 = lshr i64 %2443, 63
  %2472 = xor i64 %2468, %2471
  %2473 = add i64 %2472, %2468
  %2474 = icmp eq i64 %2473, 2
  %2475 = zext i1 %2474 to i8
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2475, i8* %2476, align 1
  store %struct.Memory* %loadMem_43f0b7, %struct.Memory** %MEMORY
  %loadMem_43f0be = load %struct.Memory*, %struct.Memory** %MEMORY
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 33
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %PC.i1814 = bitcast %union.anon* %2479 to i64*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 7
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %RDX.i1815 = bitcast %union.anon* %2482 to i64*
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 15
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %RBP.i1816 = bitcast %union.anon* %2485 to i64*
  %2486 = load i64, i64* %RBP.i1816
  %2487 = sub i64 %2486, 72
  %2488 = load i64, i64* %PC.i1814
  %2489 = add i64 %2488, 3
  store i64 %2489, i64* %PC.i1814
  %2490 = inttoptr i64 %2487 to i32*
  %2491 = load i32, i32* %2490
  %2492 = zext i32 %2491 to i64
  store i64 %2492, i64* %RDX.i1815, align 8
  store %struct.Memory* %loadMem_43f0be, %struct.Memory** %MEMORY
  %loadMem_43f0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2494 = getelementptr inbounds %struct.GPR, %struct.GPR* %2493, i32 0, i32 33
  %2495 = getelementptr inbounds %struct.Reg, %struct.Reg* %2494, i32 0, i32 0
  %PC.i1811 = bitcast %union.anon* %2495 to i64*
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2497 = getelementptr inbounds %struct.GPR, %struct.GPR* %2496, i32 0, i32 7
  %2498 = getelementptr inbounds %struct.Reg, %struct.Reg* %2497, i32 0, i32 0
  %RDX.i1812 = bitcast %union.anon* %2498 to i64*
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2500 = getelementptr inbounds %struct.GPR, %struct.GPR* %2499, i32 0, i32 15
  %2501 = getelementptr inbounds %struct.Reg, %struct.Reg* %2500, i32 0, i32 0
  %RBP.i1813 = bitcast %union.anon* %2501 to i64*
  %2502 = load i64, i64* %RDX.i1812
  %2503 = load i64, i64* %RBP.i1813
  %2504 = sub i64 %2503, 60
  %2505 = load i64, i64* %PC.i1811
  %2506 = add i64 %2505, 3
  store i64 %2506, i64* %PC.i1811
  %2507 = trunc i64 %2502 to i32
  %2508 = inttoptr i64 %2504 to i32*
  %2509 = load i32, i32* %2508
  %2510 = add i32 %2509, %2507
  %2511 = zext i32 %2510 to i64
  store i64 %2511, i64* %RDX.i1812, align 8
  %2512 = icmp ult i32 %2510, %2507
  %2513 = icmp ult i32 %2510, %2509
  %2514 = or i1 %2512, %2513
  %2515 = zext i1 %2514 to i8
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2515, i8* %2516, align 1
  %2517 = and i32 %2510, 255
  %2518 = call i32 @llvm.ctpop.i32(i32 %2517)
  %2519 = trunc i32 %2518 to i8
  %2520 = and i8 %2519, 1
  %2521 = xor i8 %2520, 1
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2521, i8* %2522, align 1
  %2523 = xor i32 %2509, %2507
  %2524 = xor i32 %2523, %2510
  %2525 = lshr i32 %2524, 4
  %2526 = trunc i32 %2525 to i8
  %2527 = and i8 %2526, 1
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2527, i8* %2528, align 1
  %2529 = icmp eq i32 %2510, 0
  %2530 = zext i1 %2529 to i8
  %2531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2530, i8* %2531, align 1
  %2532 = lshr i32 %2510, 31
  %2533 = trunc i32 %2532 to i8
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2533, i8* %2534, align 1
  %2535 = lshr i32 %2507, 31
  %2536 = lshr i32 %2509, 31
  %2537 = xor i32 %2532, %2535
  %2538 = xor i32 %2532, %2536
  %2539 = add i32 %2537, %2538
  %2540 = icmp eq i32 %2539, 2
  %2541 = zext i1 %2540 to i8
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2541, i8* %2542, align 1
  store %struct.Memory* %loadMem_43f0c1, %struct.Memory** %MEMORY
  %loadMem_43f0c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2544 = getelementptr inbounds %struct.GPR, %struct.GPR* %2543, i32 0, i32 33
  %2545 = getelementptr inbounds %struct.Reg, %struct.Reg* %2544, i32 0, i32 0
  %PC.i1808 = bitcast %union.anon* %2545 to i64*
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2547 = getelementptr inbounds %struct.GPR, %struct.GPR* %2546, i32 0, i32 7
  %2548 = getelementptr inbounds %struct.Reg, %struct.Reg* %2547, i32 0, i32 0
  %EDX.i1809 = bitcast %union.anon* %2548 to i32*
  %2549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2550 = getelementptr inbounds %struct.GPR, %struct.GPR* %2549, i32 0, i32 9
  %2551 = getelementptr inbounds %struct.Reg, %struct.Reg* %2550, i32 0, i32 0
  %RSI.i1810 = bitcast %union.anon* %2551 to i64*
  %2552 = load i32, i32* %EDX.i1809
  %2553 = zext i32 %2552 to i64
  %2554 = load i64, i64* %PC.i1808
  %2555 = add i64 %2554, 3
  store i64 %2555, i64* %PC.i1808
  %2556 = shl i64 %2553, 32
  %2557 = ashr exact i64 %2556, 32
  store i64 %2557, i64* %RSI.i1810, align 8
  store %struct.Memory* %loadMem_43f0c4, %struct.Memory** %MEMORY
  %loadMem_43f0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2559 = getelementptr inbounds %struct.GPR, %struct.GPR* %2558, i32 0, i32 33
  %2560 = getelementptr inbounds %struct.Reg, %struct.Reg* %2559, i32 0, i32 0
  %PC.i1806 = bitcast %union.anon* %2560 to i64*
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2562 = getelementptr inbounds %struct.GPR, %struct.GPR* %2561, i32 0, i32 9
  %2563 = getelementptr inbounds %struct.Reg, %struct.Reg* %2562, i32 0, i32 0
  %RSI.i1807 = bitcast %union.anon* %2563 to i64*
  %2564 = load i64, i64* %RSI.i1807
  %2565 = load i64, i64* %PC.i1806
  %2566 = add i64 %2565, 4
  store i64 %2566, i64* %PC.i1806
  %2567 = shl i64 %2564, 4
  %2568 = icmp slt i64 %2567, 0
  %2569 = shl i64 %2567, 1
  store i64 %2569, i64* %RSI.i1807, align 8
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2571 = zext i1 %2568 to i8
  store i8 %2571, i8* %2570, align 1
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2573 = trunc i64 %2569 to i32
  %2574 = and i32 %2573, 254
  %2575 = call i32 @llvm.ctpop.i32(i32 %2574)
  %2576 = trunc i32 %2575 to i8
  %2577 = and i8 %2576, 1
  %2578 = xor i8 %2577, 1
  store i8 %2578, i8* %2572, align 1
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2579, align 1
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2581 = icmp eq i64 %2569, 0
  %2582 = zext i1 %2581 to i8
  store i8 %2582, i8* %2580, align 1
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2584 = lshr i64 %2569, 63
  %2585 = trunc i64 %2584 to i8
  store i8 %2585, i8* %2583, align 1
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2586, align 1
  store %struct.Memory* %loadMem_43f0c7, %struct.Memory** %MEMORY
  %loadMem_43f0cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2588 = getelementptr inbounds %struct.GPR, %struct.GPR* %2587, i32 0, i32 33
  %2589 = getelementptr inbounds %struct.Reg, %struct.Reg* %2588, i32 0, i32 0
  %PC.i1803 = bitcast %union.anon* %2589 to i64*
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2591 = getelementptr inbounds %struct.GPR, %struct.GPR* %2590, i32 0, i32 5
  %2592 = getelementptr inbounds %struct.Reg, %struct.Reg* %2591, i32 0, i32 0
  %RCX.i1804 = bitcast %union.anon* %2592 to i64*
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2594 = getelementptr inbounds %struct.GPR, %struct.GPR* %2593, i32 0, i32 9
  %2595 = getelementptr inbounds %struct.Reg, %struct.Reg* %2594, i32 0, i32 0
  %RSI.i1805 = bitcast %union.anon* %2595 to i64*
  %2596 = load i64, i64* %RCX.i1804
  %2597 = load i64, i64* %RSI.i1805
  %2598 = load i64, i64* %PC.i1803
  %2599 = add i64 %2598, 3
  store i64 %2599, i64* %PC.i1803
  %2600 = add i64 %2597, %2596
  store i64 %2600, i64* %RCX.i1804, align 8
  %2601 = icmp ult i64 %2600, %2596
  %2602 = icmp ult i64 %2600, %2597
  %2603 = or i1 %2601, %2602
  %2604 = zext i1 %2603 to i8
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2604, i8* %2605, align 1
  %2606 = trunc i64 %2600 to i32
  %2607 = and i32 %2606, 255
  %2608 = call i32 @llvm.ctpop.i32(i32 %2607)
  %2609 = trunc i32 %2608 to i8
  %2610 = and i8 %2609, 1
  %2611 = xor i8 %2610, 1
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2611, i8* %2612, align 1
  %2613 = xor i64 %2597, %2596
  %2614 = xor i64 %2613, %2600
  %2615 = lshr i64 %2614, 4
  %2616 = trunc i64 %2615 to i8
  %2617 = and i8 %2616, 1
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2617, i8* %2618, align 1
  %2619 = icmp eq i64 %2600, 0
  %2620 = zext i1 %2619 to i8
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2620, i8* %2621, align 1
  %2622 = lshr i64 %2600, 63
  %2623 = trunc i64 %2622 to i8
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2623, i8* %2624, align 1
  %2625 = lshr i64 %2596, 63
  %2626 = lshr i64 %2597, 63
  %2627 = xor i64 %2622, %2625
  %2628 = xor i64 %2622, %2626
  %2629 = add i64 %2627, %2628
  %2630 = icmp eq i64 %2629, 2
  %2631 = zext i1 %2630 to i8
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2631, i8* %2632, align 1
  store %struct.Memory* %loadMem_43f0cb, %struct.Memory** %MEMORY
  %loadMem_43f0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %2633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2634 = getelementptr inbounds %struct.GPR, %struct.GPR* %2633, i32 0, i32 33
  %2635 = getelementptr inbounds %struct.Reg, %struct.Reg* %2634, i32 0, i32 0
  %PC.i1800 = bitcast %union.anon* %2635 to i64*
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2637 = getelementptr inbounds %struct.GPR, %struct.GPR* %2636, i32 0, i32 7
  %2638 = getelementptr inbounds %struct.Reg, %struct.Reg* %2637, i32 0, i32 0
  %RDX.i1801 = bitcast %union.anon* %2638 to i64*
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2640 = getelementptr inbounds %struct.GPR, %struct.GPR* %2639, i32 0, i32 15
  %2641 = getelementptr inbounds %struct.Reg, %struct.Reg* %2640, i32 0, i32 0
  %RBP.i1802 = bitcast %union.anon* %2641 to i64*
  %2642 = load i64, i64* %RBP.i1802
  %2643 = sub i64 %2642, 76
  %2644 = load i64, i64* %PC.i1800
  %2645 = add i64 %2644, 3
  store i64 %2645, i64* %PC.i1800
  %2646 = inttoptr i64 %2643 to i32*
  %2647 = load i32, i32* %2646
  %2648 = zext i32 %2647 to i64
  store i64 %2648, i64* %RDX.i1801, align 8
  store %struct.Memory* %loadMem_43f0ce, %struct.Memory** %MEMORY
  %loadMem_43f0d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2650 = getelementptr inbounds %struct.GPR, %struct.GPR* %2649, i32 0, i32 33
  %2651 = getelementptr inbounds %struct.Reg, %struct.Reg* %2650, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %2651 to i64*
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2653 = getelementptr inbounds %struct.GPR, %struct.GPR* %2652, i32 0, i32 7
  %2654 = getelementptr inbounds %struct.Reg, %struct.Reg* %2653, i32 0, i32 0
  %RDX.i1798 = bitcast %union.anon* %2654 to i64*
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2656 = getelementptr inbounds %struct.GPR, %struct.GPR* %2655, i32 0, i32 15
  %2657 = getelementptr inbounds %struct.Reg, %struct.Reg* %2656, i32 0, i32 0
  %RBP.i1799 = bitcast %union.anon* %2657 to i64*
  %2658 = load i64, i64* %RDX.i1798
  %2659 = load i64, i64* %RBP.i1799
  %2660 = sub i64 %2659, 56
  %2661 = load i64, i64* %PC.i1797
  %2662 = add i64 %2661, 3
  store i64 %2662, i64* %PC.i1797
  %2663 = trunc i64 %2658 to i32
  %2664 = inttoptr i64 %2660 to i32*
  %2665 = load i32, i32* %2664
  %2666 = add i32 %2665, %2663
  %2667 = zext i32 %2666 to i64
  store i64 %2667, i64* %RDX.i1798, align 8
  %2668 = icmp ult i32 %2666, %2663
  %2669 = icmp ult i32 %2666, %2665
  %2670 = or i1 %2668, %2669
  %2671 = zext i1 %2670 to i8
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2671, i8* %2672, align 1
  %2673 = and i32 %2666, 255
  %2674 = call i32 @llvm.ctpop.i32(i32 %2673)
  %2675 = trunc i32 %2674 to i8
  %2676 = and i8 %2675, 1
  %2677 = xor i8 %2676, 1
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2677, i8* %2678, align 1
  %2679 = xor i32 %2665, %2663
  %2680 = xor i32 %2679, %2666
  %2681 = lshr i32 %2680, 4
  %2682 = trunc i32 %2681 to i8
  %2683 = and i8 %2682, 1
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2683, i8* %2684, align 1
  %2685 = icmp eq i32 %2666, 0
  %2686 = zext i1 %2685 to i8
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2686, i8* %2687, align 1
  %2688 = lshr i32 %2666, 31
  %2689 = trunc i32 %2688 to i8
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2689, i8* %2690, align 1
  %2691 = lshr i32 %2663, 31
  %2692 = lshr i32 %2665, 31
  %2693 = xor i32 %2688, %2691
  %2694 = xor i32 %2688, %2692
  %2695 = add i32 %2693, %2694
  %2696 = icmp eq i32 %2695, 2
  %2697 = zext i1 %2696 to i8
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2697, i8* %2698, align 1
  store %struct.Memory* %loadMem_43f0d1, %struct.Memory** %MEMORY
  %loadMem_43f0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 33
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %2701 to i64*
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 7
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %EDX.i1795 = bitcast %union.anon* %2704 to i32*
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2706 = getelementptr inbounds %struct.GPR, %struct.GPR* %2705, i32 0, i32 9
  %2707 = getelementptr inbounds %struct.Reg, %struct.Reg* %2706, i32 0, i32 0
  %RSI.i1796 = bitcast %union.anon* %2707 to i64*
  %2708 = load i32, i32* %EDX.i1795
  %2709 = zext i32 %2708 to i64
  %2710 = load i64, i64* %PC.i1794
  %2711 = add i64 %2710, 3
  store i64 %2711, i64* %PC.i1794
  %2712 = shl i64 %2709, 32
  %2713 = ashr exact i64 %2712, 32
  store i64 %2713, i64* %RSI.i1796, align 8
  store %struct.Memory* %loadMem_43f0d4, %struct.Memory** %MEMORY
  %loadMem_43f0d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 33
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %PC.i1790 = bitcast %union.anon* %2716 to i64*
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2718 = getelementptr inbounds %struct.GPR, %struct.GPR* %2717, i32 0, i32 5
  %2719 = getelementptr inbounds %struct.Reg, %struct.Reg* %2718, i32 0, i32 0
  %RCX.i1791 = bitcast %union.anon* %2719 to i64*
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2721 = getelementptr inbounds %struct.GPR, %struct.GPR* %2720, i32 0, i32 7
  %2722 = getelementptr inbounds %struct.Reg, %struct.Reg* %2721, i32 0, i32 0
  %RDX.i1792 = bitcast %union.anon* %2722 to i64*
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 9
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %RSI.i1793 = bitcast %union.anon* %2725 to i64*
  %2726 = load i64, i64* %RCX.i1791
  %2727 = load i64, i64* %RSI.i1793
  %2728 = mul i64 %2727, 2
  %2729 = add i64 %2728, %2726
  %2730 = load i64, i64* %PC.i1790
  %2731 = add i64 %2730, 4
  store i64 %2731, i64* %PC.i1790
  %2732 = inttoptr i64 %2729 to i16*
  %2733 = load i16, i16* %2732
  %2734 = zext i16 %2733 to i64
  store i64 %2734, i64* %RDX.i1792, align 8
  store %struct.Memory* %loadMem_43f0d7, %struct.Memory** %MEMORY
  %loadMem_43f0db = load %struct.Memory*, %struct.Memory** %MEMORY
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 33
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %PC.i1787 = bitcast %union.anon* %2737 to i64*
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2739 = getelementptr inbounds %struct.GPR, %struct.GPR* %2738, i32 0, i32 11
  %2740 = getelementptr inbounds %struct.Reg, %struct.Reg* %2739, i32 0, i32 0
  %RDI.i1788 = bitcast %union.anon* %2740 to i64*
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2742 = getelementptr inbounds %struct.GPR, %struct.GPR* %2741, i32 0, i32 15
  %2743 = getelementptr inbounds %struct.Reg, %struct.Reg* %2742, i32 0, i32 0
  %RBP.i1789 = bitcast %union.anon* %2743 to i64*
  %2744 = load i64, i64* %RBP.i1789
  %2745 = sub i64 %2744, 72
  %2746 = load i64, i64* %PC.i1787
  %2747 = add i64 %2746, 3
  store i64 %2747, i64* %PC.i1787
  %2748 = inttoptr i64 %2745 to i32*
  %2749 = load i32, i32* %2748
  %2750 = zext i32 %2749 to i64
  store i64 %2750, i64* %RDI.i1788, align 8
  store %struct.Memory* %loadMem_43f0db, %struct.Memory** %MEMORY
  %loadMem_43f0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 33
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %PC.i1784 = bitcast %union.anon* %2753 to i64*
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 11
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %RDI.i1785 = bitcast %union.anon* %2756 to i64*
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 15
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %RBP.i1786 = bitcast %union.anon* %2759 to i64*
  %2760 = load i64, i64* %RDI.i1785
  %2761 = load i64, i64* %RBP.i1786
  %2762 = sub i64 %2761, 60
  %2763 = load i64, i64* %PC.i1784
  %2764 = add i64 %2763, 3
  store i64 %2764, i64* %PC.i1784
  %2765 = trunc i64 %2760 to i32
  %2766 = inttoptr i64 %2762 to i32*
  %2767 = load i32, i32* %2766
  %2768 = add i32 %2767, %2765
  %2769 = zext i32 %2768 to i64
  store i64 %2769, i64* %RDI.i1785, align 8
  %2770 = icmp ult i32 %2768, %2765
  %2771 = icmp ult i32 %2768, %2767
  %2772 = or i1 %2770, %2771
  %2773 = zext i1 %2772 to i8
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2773, i8* %2774, align 1
  %2775 = and i32 %2768, 255
  %2776 = call i32 @llvm.ctpop.i32(i32 %2775)
  %2777 = trunc i32 %2776 to i8
  %2778 = and i8 %2777, 1
  %2779 = xor i8 %2778, 1
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2779, i8* %2780, align 1
  %2781 = xor i32 %2767, %2765
  %2782 = xor i32 %2781, %2768
  %2783 = lshr i32 %2782, 4
  %2784 = trunc i32 %2783 to i8
  %2785 = and i8 %2784, 1
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2785, i8* %2786, align 1
  %2787 = icmp eq i32 %2768, 0
  %2788 = zext i1 %2787 to i8
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2788, i8* %2789, align 1
  %2790 = lshr i32 %2768, 31
  %2791 = trunc i32 %2790 to i8
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2791, i8* %2792, align 1
  %2793 = lshr i32 %2765, 31
  %2794 = lshr i32 %2767, 31
  %2795 = xor i32 %2790, %2793
  %2796 = xor i32 %2790, %2794
  %2797 = add i32 %2795, %2796
  %2798 = icmp eq i32 %2797, 2
  %2799 = zext i1 %2798 to i8
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2799, i8* %2800, align 1
  store %struct.Memory* %loadMem_43f0de, %struct.Memory** %MEMORY
  %loadMem_43f0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2802 = getelementptr inbounds %struct.GPR, %struct.GPR* %2801, i32 0, i32 33
  %2803 = getelementptr inbounds %struct.Reg, %struct.Reg* %2802, i32 0, i32 0
  %PC.i1781 = bitcast %union.anon* %2803 to i64*
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2805 = getelementptr inbounds %struct.GPR, %struct.GPR* %2804, i32 0, i32 11
  %2806 = getelementptr inbounds %struct.Reg, %struct.Reg* %2805, i32 0, i32 0
  %EDI.i1782 = bitcast %union.anon* %2806 to i32*
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2808 = getelementptr inbounds %struct.GPR, %struct.GPR* %2807, i32 0, i32 5
  %2809 = getelementptr inbounds %struct.Reg, %struct.Reg* %2808, i32 0, i32 0
  %RCX.i1783 = bitcast %union.anon* %2809 to i64*
  %2810 = load i32, i32* %EDI.i1782
  %2811 = zext i32 %2810 to i64
  %2812 = load i64, i64* %PC.i1781
  %2813 = add i64 %2812, 3
  store i64 %2813, i64* %PC.i1781
  %2814 = shl i64 %2811, 32
  %2815 = ashr exact i64 %2814, 32
  store i64 %2815, i64* %RCX.i1783, align 8
  store %struct.Memory* %loadMem_43f0e1, %struct.Memory** %MEMORY
  %loadMem_43f0e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 33
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %PC.i1779 = bitcast %union.anon* %2818 to i64*
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 5
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %RCX.i1780 = bitcast %union.anon* %2821 to i64*
  %2822 = load i64, i64* %RCX.i1780
  %2823 = load i64, i64* %PC.i1779
  %2824 = add i64 %2823, 4
  store i64 %2824, i64* %PC.i1779
  %2825 = shl i64 %2822, 5
  %2826 = icmp slt i64 %2825, 0
  %2827 = shl i64 %2825, 1
  store i64 %2827, i64* %RCX.i1780, align 8
  %2828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2829 = zext i1 %2826 to i8
  store i8 %2829, i8* %2828, align 1
  %2830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2831 = trunc i64 %2827 to i32
  %2832 = and i32 %2831, 254
  %2833 = call i32 @llvm.ctpop.i32(i32 %2832)
  %2834 = trunc i32 %2833 to i8
  %2835 = and i8 %2834, 1
  %2836 = xor i8 %2835, 1
  store i8 %2836, i8* %2830, align 1
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2837, align 1
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2839 = icmp eq i64 %2827, 0
  %2840 = zext i1 %2839 to i8
  store i8 %2840, i8* %2838, align 1
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2842 = lshr i64 %2827, 63
  %2843 = trunc i64 %2842 to i8
  store i8 %2843, i8* %2841, align 1
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2844, align 1
  store %struct.Memory* %loadMem_43f0e4, %struct.Memory** %MEMORY
  %loadMem_43f0e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2846 = getelementptr inbounds %struct.GPR, %struct.GPR* %2845, i32 0, i32 33
  %2847 = getelementptr inbounds %struct.Reg, %struct.Reg* %2846, i32 0, i32 0
  %PC.i1776 = bitcast %union.anon* %2847 to i64*
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 1
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %RAX.i1777 = bitcast %union.anon* %2850 to i64*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 5
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %RCX.i1778 = bitcast %union.anon* %2853 to i64*
  %2854 = load i64, i64* %RAX.i1777
  %2855 = load i64, i64* %RCX.i1778
  %2856 = load i64, i64* %PC.i1776
  %2857 = add i64 %2856, 3
  store i64 %2857, i64* %PC.i1776
  %2858 = add i64 %2855, %2854
  store i64 %2858, i64* %RAX.i1777, align 8
  %2859 = icmp ult i64 %2858, %2854
  %2860 = icmp ult i64 %2858, %2855
  %2861 = or i1 %2859, %2860
  %2862 = zext i1 %2861 to i8
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2862, i8* %2863, align 1
  %2864 = trunc i64 %2858 to i32
  %2865 = and i32 %2864, 255
  %2866 = call i32 @llvm.ctpop.i32(i32 %2865)
  %2867 = trunc i32 %2866 to i8
  %2868 = and i8 %2867, 1
  %2869 = xor i8 %2868, 1
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2869, i8* %2870, align 1
  %2871 = xor i64 %2855, %2854
  %2872 = xor i64 %2871, %2858
  %2873 = lshr i64 %2872, 4
  %2874 = trunc i64 %2873 to i8
  %2875 = and i8 %2874, 1
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2875, i8* %2876, align 1
  %2877 = icmp eq i64 %2858, 0
  %2878 = zext i1 %2877 to i8
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2878, i8* %2879, align 1
  %2880 = lshr i64 %2858, 63
  %2881 = trunc i64 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2881, i8* %2882, align 1
  %2883 = lshr i64 %2854, 63
  %2884 = lshr i64 %2855, 63
  %2885 = xor i64 %2880, %2883
  %2886 = xor i64 %2880, %2884
  %2887 = add i64 %2885, %2886
  %2888 = icmp eq i64 %2887, 2
  %2889 = zext i1 %2888 to i8
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2889, i8* %2890, align 1
  store %struct.Memory* %loadMem_43f0e8, %struct.Memory** %MEMORY
  %loadMem_43f0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 33
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %PC.i1773 = bitcast %union.anon* %2893 to i64*
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 11
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %RDI.i1774 = bitcast %union.anon* %2896 to i64*
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 15
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %RBP.i1775 = bitcast %union.anon* %2899 to i64*
  %2900 = load i64, i64* %RBP.i1775
  %2901 = sub i64 %2900, 76
  %2902 = load i64, i64* %PC.i1773
  %2903 = add i64 %2902, 3
  store i64 %2903, i64* %PC.i1773
  %2904 = inttoptr i64 %2901 to i32*
  %2905 = load i32, i32* %2904
  %2906 = zext i32 %2905 to i64
  store i64 %2906, i64* %RDI.i1774, align 8
  store %struct.Memory* %loadMem_43f0eb, %struct.Memory** %MEMORY
  %loadMem_43f0ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2908 = getelementptr inbounds %struct.GPR, %struct.GPR* %2907, i32 0, i32 33
  %2909 = getelementptr inbounds %struct.Reg, %struct.Reg* %2908, i32 0, i32 0
  %PC.i1770 = bitcast %union.anon* %2909 to i64*
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 11
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %RDI.i1771 = bitcast %union.anon* %2912 to i64*
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2914 = getelementptr inbounds %struct.GPR, %struct.GPR* %2913, i32 0, i32 15
  %2915 = getelementptr inbounds %struct.Reg, %struct.Reg* %2914, i32 0, i32 0
  %RBP.i1772 = bitcast %union.anon* %2915 to i64*
  %2916 = load i64, i64* %RDI.i1771
  %2917 = load i64, i64* %RBP.i1772
  %2918 = sub i64 %2917, 56
  %2919 = load i64, i64* %PC.i1770
  %2920 = add i64 %2919, 3
  store i64 %2920, i64* %PC.i1770
  %2921 = trunc i64 %2916 to i32
  %2922 = inttoptr i64 %2918 to i32*
  %2923 = load i32, i32* %2922
  %2924 = add i32 %2923, %2921
  %2925 = zext i32 %2924 to i64
  store i64 %2925, i64* %RDI.i1771, align 8
  %2926 = icmp ult i32 %2924, %2921
  %2927 = icmp ult i32 %2924, %2923
  %2928 = or i1 %2926, %2927
  %2929 = zext i1 %2928 to i8
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2929, i8* %2930, align 1
  %2931 = and i32 %2924, 255
  %2932 = call i32 @llvm.ctpop.i32(i32 %2931)
  %2933 = trunc i32 %2932 to i8
  %2934 = and i8 %2933, 1
  %2935 = xor i8 %2934, 1
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2935, i8* %2936, align 1
  %2937 = xor i32 %2923, %2921
  %2938 = xor i32 %2937, %2924
  %2939 = lshr i32 %2938, 4
  %2940 = trunc i32 %2939 to i8
  %2941 = and i8 %2940, 1
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2941, i8* %2942, align 1
  %2943 = icmp eq i32 %2924, 0
  %2944 = zext i1 %2943 to i8
  %2945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2944, i8* %2945, align 1
  %2946 = lshr i32 %2924, 31
  %2947 = trunc i32 %2946 to i8
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2947, i8* %2948, align 1
  %2949 = lshr i32 %2921, 31
  %2950 = lshr i32 %2923, 31
  %2951 = xor i32 %2946, %2949
  %2952 = xor i32 %2946, %2950
  %2953 = add i32 %2951, %2952
  %2954 = icmp eq i32 %2953, 2
  %2955 = zext i1 %2954 to i8
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2955, i8* %2956, align 1
  store %struct.Memory* %loadMem_43f0ee, %struct.Memory** %MEMORY
  %loadMem_43f0f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 33
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %PC.i1767 = bitcast %union.anon* %2959 to i64*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 11
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %EDI.i1768 = bitcast %union.anon* %2962 to i32*
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2964 = getelementptr inbounds %struct.GPR, %struct.GPR* %2963, i32 0, i32 5
  %2965 = getelementptr inbounds %struct.Reg, %struct.Reg* %2964, i32 0, i32 0
  %RCX.i1769 = bitcast %union.anon* %2965 to i64*
  %2966 = load i32, i32* %EDI.i1768
  %2967 = zext i32 %2966 to i64
  %2968 = load i64, i64* %PC.i1767
  %2969 = add i64 %2968, 3
  store i64 %2969, i64* %PC.i1767
  %2970 = shl i64 %2967, 32
  %2971 = ashr exact i64 %2970, 32
  store i64 %2971, i64* %RCX.i1769, align 8
  store %struct.Memory* %loadMem_43f0f1, %struct.Memory** %MEMORY
  %loadMem_43f0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2973 = getelementptr inbounds %struct.GPR, %struct.GPR* %2972, i32 0, i32 33
  %2974 = getelementptr inbounds %struct.Reg, %struct.Reg* %2973, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %2974 to i64*
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2976 = getelementptr inbounds %struct.GPR, %struct.GPR* %2975, i32 0, i32 7
  %2977 = getelementptr inbounds %struct.Reg, %struct.Reg* %2976, i32 0, i32 0
  %EDX.i1764 = bitcast %union.anon* %2977 to i32*
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2979 = getelementptr inbounds %struct.GPR, %struct.GPR* %2978, i32 0, i32 1
  %2980 = getelementptr inbounds %struct.Reg, %struct.Reg* %2979, i32 0, i32 0
  %RAX.i1765 = bitcast %union.anon* %2980 to i64*
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 5
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %RCX.i1766 = bitcast %union.anon* %2983 to i64*
  %2984 = load i64, i64* %RAX.i1765
  %2985 = load i64, i64* %RCX.i1766
  %2986 = mul i64 %2985, 4
  %2987 = add i64 %2986, %2984
  %2988 = load i32, i32* %EDX.i1764
  %2989 = zext i32 %2988 to i64
  %2990 = load i64, i64* %PC.i1763
  %2991 = add i64 %2990, 3
  store i64 %2991, i64* %PC.i1763
  %2992 = inttoptr i64 %2987 to i32*
  store i32 %2988, i32* %2992
  store %struct.Memory* %loadMem_43f0f4, %struct.Memory** %MEMORY
  %loadMem_43f0f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2994 = getelementptr inbounds %struct.GPR, %struct.GPR* %2993, i32 0, i32 33
  %2995 = getelementptr inbounds %struct.Reg, %struct.Reg* %2994, i32 0, i32 0
  %PC.i1760 = bitcast %union.anon* %2995 to i64*
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2997 = getelementptr inbounds %struct.GPR, %struct.GPR* %2996, i32 0, i32 1
  %2998 = getelementptr inbounds %struct.Reg, %struct.Reg* %2997, i32 0, i32 0
  %RAX.i1761 = bitcast %union.anon* %2998 to i64*
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 15
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %RBP.i1762 = bitcast %union.anon* %3001 to i64*
  %3002 = load i64, i64* %RBP.i1762
  %3003 = sub i64 %3002, 72
  %3004 = load i64, i64* %PC.i1760
  %3005 = add i64 %3004, 3
  store i64 %3005, i64* %PC.i1760
  %3006 = inttoptr i64 %3003 to i32*
  %3007 = load i32, i32* %3006
  %3008 = zext i32 %3007 to i64
  store i64 %3008, i64* %RAX.i1761, align 8
  store %struct.Memory* %loadMem_43f0f7, %struct.Memory** %MEMORY
  %loadMem_43f0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3010 = getelementptr inbounds %struct.GPR, %struct.GPR* %3009, i32 0, i32 33
  %3011 = getelementptr inbounds %struct.Reg, %struct.Reg* %3010, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %3011 to i64*
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3013 = getelementptr inbounds %struct.GPR, %struct.GPR* %3012, i32 0, i32 1
  %3014 = getelementptr inbounds %struct.Reg, %struct.Reg* %3013, i32 0, i32 0
  %RAX.i1759 = bitcast %union.anon* %3014 to i64*
  %3015 = load i64, i64* %RAX.i1759
  %3016 = load i64, i64* %PC.i1758
  %3017 = add i64 %3016, 3
  store i64 %3017, i64* %PC.i1758
  %3018 = trunc i64 %3015 to i32
  %3019 = add i32 1, %3018
  %3020 = zext i32 %3019 to i64
  store i64 %3020, i64* %RAX.i1759, align 8
  %3021 = icmp ult i32 %3019, %3018
  %3022 = icmp ult i32 %3019, 1
  %3023 = or i1 %3021, %3022
  %3024 = zext i1 %3023 to i8
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3024, i8* %3025, align 1
  %3026 = and i32 %3019, 255
  %3027 = call i32 @llvm.ctpop.i32(i32 %3026)
  %3028 = trunc i32 %3027 to i8
  %3029 = and i8 %3028, 1
  %3030 = xor i8 %3029, 1
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3030, i8* %3031, align 1
  %3032 = xor i64 1, %3015
  %3033 = trunc i64 %3032 to i32
  %3034 = xor i32 %3033, %3019
  %3035 = lshr i32 %3034, 4
  %3036 = trunc i32 %3035 to i8
  %3037 = and i8 %3036, 1
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3037, i8* %3038, align 1
  %3039 = icmp eq i32 %3019, 0
  %3040 = zext i1 %3039 to i8
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3040, i8* %3041, align 1
  %3042 = lshr i32 %3019, 31
  %3043 = trunc i32 %3042 to i8
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3043, i8* %3044, align 1
  %3045 = lshr i32 %3018, 31
  %3046 = xor i32 %3042, %3045
  %3047 = add i32 %3046, %3042
  %3048 = icmp eq i32 %3047, 2
  %3049 = zext i1 %3048 to i8
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3049, i8* %3050, align 1
  store %struct.Memory* %loadMem_43f0fa, %struct.Memory** %MEMORY
  %loadMem_43f0fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 33
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %PC.i1755 = bitcast %union.anon* %3053 to i64*
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 1
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %EAX.i1756 = bitcast %union.anon* %3056 to i32*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 15
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %RBP.i1757 = bitcast %union.anon* %3059 to i64*
  %3060 = load i64, i64* %RBP.i1757
  %3061 = sub i64 %3060, 72
  %3062 = load i32, i32* %EAX.i1756
  %3063 = zext i32 %3062 to i64
  %3064 = load i64, i64* %PC.i1755
  %3065 = add i64 %3064, 3
  store i64 %3065, i64* %PC.i1755
  %3066 = inttoptr i64 %3061 to i32*
  store i32 %3062, i32* %3066
  store %struct.Memory* %loadMem_43f0fd, %struct.Memory** %MEMORY
  %loadMem_43f100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 33
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %PC.i1754 = bitcast %union.anon* %3069 to i64*
  %3070 = load i64, i64* %PC.i1754
  %3071 = add i64 %3070, -107
  %3072 = load i64, i64* %PC.i1754
  %3073 = add i64 %3072, 5
  store i64 %3073, i64* %PC.i1754
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3071, i64* %3074, align 8
  store %struct.Memory* %loadMem_43f100, %struct.Memory** %MEMORY
  br label %block_.L_43f095

block_.L_43f105:                                  ; preds = %block_.L_43f095
  %loadMem_43f105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 33
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %3077 to i64*
  %3078 = load i64, i64* %PC.i1753
  %3079 = add i64 %3078, 5
  %3080 = load i64, i64* %PC.i1753
  %3081 = add i64 %3080, 5
  store i64 %3081, i64* %PC.i1753
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3079, i64* %3082, align 8
  store %struct.Memory* %loadMem_43f105, %struct.Memory** %MEMORY
  br label %block_.L_43f10a

block_.L_43f10a:                                  ; preds = %block_.L_43f105
  %loadMem_43f10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 33
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %PC.i1750 = bitcast %union.anon* %3085 to i64*
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 1
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %RAX.i1751 = bitcast %union.anon* %3088 to i64*
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 15
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %RBP.i1752 = bitcast %union.anon* %3091 to i64*
  %3092 = load i64, i64* %RBP.i1752
  %3093 = sub i64 %3092, 76
  %3094 = load i64, i64* %PC.i1750
  %3095 = add i64 %3094, 3
  store i64 %3095, i64* %PC.i1750
  %3096 = inttoptr i64 %3093 to i32*
  %3097 = load i32, i32* %3096
  %3098 = zext i32 %3097 to i64
  store i64 %3098, i64* %RAX.i1751, align 8
  store %struct.Memory* %loadMem_43f10a, %struct.Memory** %MEMORY
  %loadMem_43f10d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 33
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %PC.i1748 = bitcast %union.anon* %3101 to i64*
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 1
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %RAX.i1749 = bitcast %union.anon* %3104 to i64*
  %3105 = load i64, i64* %RAX.i1749
  %3106 = load i64, i64* %PC.i1748
  %3107 = add i64 %3106, 3
  store i64 %3107, i64* %PC.i1748
  %3108 = trunc i64 %3105 to i32
  %3109 = add i32 1, %3108
  %3110 = zext i32 %3109 to i64
  store i64 %3110, i64* %RAX.i1749, align 8
  %3111 = icmp ult i32 %3109, %3108
  %3112 = icmp ult i32 %3109, 1
  %3113 = or i1 %3111, %3112
  %3114 = zext i1 %3113 to i8
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3114, i8* %3115, align 1
  %3116 = and i32 %3109, 255
  %3117 = call i32 @llvm.ctpop.i32(i32 %3116)
  %3118 = trunc i32 %3117 to i8
  %3119 = and i8 %3118, 1
  %3120 = xor i8 %3119, 1
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3120, i8* %3121, align 1
  %3122 = xor i64 1, %3105
  %3123 = trunc i64 %3122 to i32
  %3124 = xor i32 %3123, %3109
  %3125 = lshr i32 %3124, 4
  %3126 = trunc i32 %3125 to i8
  %3127 = and i8 %3126, 1
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3127, i8* %3128, align 1
  %3129 = icmp eq i32 %3109, 0
  %3130 = zext i1 %3129 to i8
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3130, i8* %3131, align 1
  %3132 = lshr i32 %3109, 31
  %3133 = trunc i32 %3132 to i8
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3133, i8* %3134, align 1
  %3135 = lshr i32 %3108, 31
  %3136 = xor i32 %3132, %3135
  %3137 = add i32 %3136, %3132
  %3138 = icmp eq i32 %3137, 2
  %3139 = zext i1 %3138 to i8
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3139, i8* %3140, align 1
  store %struct.Memory* %loadMem_43f10d, %struct.Memory** %MEMORY
  %loadMem_43f110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 33
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %PC.i1745 = bitcast %union.anon* %3143 to i64*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 1
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %EAX.i1746 = bitcast %union.anon* %3146 to i32*
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3148 = getelementptr inbounds %struct.GPR, %struct.GPR* %3147, i32 0, i32 15
  %3149 = getelementptr inbounds %struct.Reg, %struct.Reg* %3148, i32 0, i32 0
  %RBP.i1747 = bitcast %union.anon* %3149 to i64*
  %3150 = load i64, i64* %RBP.i1747
  %3151 = sub i64 %3150, 76
  %3152 = load i32, i32* %EAX.i1746
  %3153 = zext i32 %3152 to i64
  %3154 = load i64, i64* %PC.i1745
  %3155 = add i64 %3154, 3
  store i64 %3155, i64* %PC.i1745
  %3156 = inttoptr i64 %3151 to i32*
  store i32 %3152, i32* %3156
  store %struct.Memory* %loadMem_43f110, %struct.Memory** %MEMORY
  %loadMem_43f113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 33
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %3159 to i64*
  %3160 = load i64, i64* %PC.i1744
  %3161 = add i64 %3160, -143
  %3162 = load i64, i64* %PC.i1744
  %3163 = add i64 %3162, 5
  store i64 %3163, i64* %PC.i1744
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3161, i64* %3164, align 8
  store %struct.Memory* %loadMem_43f113, %struct.Memory** %MEMORY
  br label %block_.L_43f084

block_.L_43f118:                                  ; preds = %block_.L_43f084
  %loadMem_43f118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3166 = getelementptr inbounds %struct.GPR, %struct.GPR* %3165, i32 0, i32 33
  %3167 = getelementptr inbounds %struct.Reg, %struct.Reg* %3166, i32 0, i32 0
  %PC.i1742 = bitcast %union.anon* %3167 to i64*
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3169 = getelementptr inbounds %struct.GPR, %struct.GPR* %3168, i32 0, i32 11
  %3170 = getelementptr inbounds %struct.Reg, %struct.Reg* %3169, i32 0, i32 0
  %RDI.i1743 = bitcast %union.anon* %3170 to i64*
  %3171 = load i64, i64* %PC.i1742
  %3172 = add i64 %3171, 5
  store i64 %3172, i64* %PC.i1742
  store i64 1, i64* %RDI.i1743, align 8
  store %struct.Memory* %loadMem_43f118, %struct.Memory** %MEMORY
  %loadMem_43f11d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3174 = getelementptr inbounds %struct.GPR, %struct.GPR* %3173, i32 0, i32 33
  %3175 = getelementptr inbounds %struct.Reg, %struct.Reg* %3174, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %3175 to i64*
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3177 = getelementptr inbounds %struct.GPR, %struct.GPR* %3176, i32 0, i32 9
  %3178 = getelementptr inbounds %struct.Reg, %struct.Reg* %3177, i32 0, i32 0
  %RSI.i1740 = bitcast %union.anon* %3178 to i64*
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3180 = getelementptr inbounds %struct.GPR, %struct.GPR* %3179, i32 0, i32 15
  %3181 = getelementptr inbounds %struct.Reg, %struct.Reg* %3180, i32 0, i32 0
  %RBP.i1741 = bitcast %union.anon* %3181 to i64*
  %3182 = load i64, i64* %RBP.i1741
  %3183 = sub i64 %3182, 60
  %3184 = load i64, i64* %PC.i1739
  %3185 = add i64 %3184, 3
  store i64 %3185, i64* %PC.i1739
  %3186 = inttoptr i64 %3183 to i32*
  %3187 = load i32, i32* %3186
  %3188 = zext i32 %3187 to i64
  store i64 %3188, i64* %RSI.i1740, align 8
  store %struct.Memory* %loadMem_43f11d, %struct.Memory** %MEMORY
  %loadMem_43f120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3190 = getelementptr inbounds %struct.GPR, %struct.GPR* %3189, i32 0, i32 33
  %3191 = getelementptr inbounds %struct.Reg, %struct.Reg* %3190, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %3191 to i64*
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 7
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %RDX.i1737 = bitcast %union.anon* %3194 to i64*
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3196 = getelementptr inbounds %struct.GPR, %struct.GPR* %3195, i32 0, i32 15
  %3197 = getelementptr inbounds %struct.Reg, %struct.Reg* %3196, i32 0, i32 0
  %RBP.i1738 = bitcast %union.anon* %3197 to i64*
  %3198 = load i64, i64* %RBP.i1738
  %3199 = sub i64 %3198, 56
  %3200 = load i64, i64* %PC.i1736
  %3201 = add i64 %3200, 3
  store i64 %3201, i64* %PC.i1736
  %3202 = inttoptr i64 %3199 to i32*
  %3203 = load i32, i32* %3202
  %3204 = zext i32 %3203 to i64
  store i64 %3204, i64* %RDX.i1737, align 8
  store %struct.Memory* %loadMem_43f120, %struct.Memory** %MEMORY
  %loadMem_43f123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 33
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %PC.i1733 = bitcast %union.anon* %3207 to i64*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 5
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %RCX.i1734 = bitcast %union.anon* %3210 to i64*
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3212 = getelementptr inbounds %struct.GPR, %struct.GPR* %3211, i32 0, i32 15
  %3213 = getelementptr inbounds %struct.Reg, %struct.Reg* %3212, i32 0, i32 0
  %RBP.i1735 = bitcast %union.anon* %3213 to i64*
  %3214 = load i64, i64* %RBP.i1735
  %3215 = sub i64 %3214, 38
  %3216 = load i64, i64* %PC.i1733
  %3217 = add i64 %3216, 4
  store i64 %3217, i64* %PC.i1733
  %3218 = inttoptr i64 %3215 to i16*
  %3219 = load i16, i16* %3218
  %3220 = sext i16 %3219 to i64
  %3221 = and i64 %3220, 4294967295
  store i64 %3221, i64* %RCX.i1734, align 8
  store %struct.Memory* %loadMem_43f123, %struct.Memory** %MEMORY
  %loadMem_43f127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3223 = getelementptr inbounds %struct.GPR, %struct.GPR* %3222, i32 0, i32 33
  %3224 = getelementptr inbounds %struct.Reg, %struct.Reg* %3223, i32 0, i32 0
  %PC.i1730 = bitcast %union.anon* %3224 to i64*
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3226 = getelementptr inbounds %struct.GPR, %struct.GPR* %3225, i32 0, i32 17
  %3227 = getelementptr inbounds %struct.Reg, %struct.Reg* %3226, i32 0, i32 0
  %R8D.i1731 = bitcast %union.anon* %3227 to i32*
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3229 = getelementptr inbounds %struct.GPR, %struct.GPR* %3228, i32 0, i32 15
  %3230 = getelementptr inbounds %struct.Reg, %struct.Reg* %3229, i32 0, i32 0
  %RBP.i1732 = bitcast %union.anon* %3230 to i64*
  %3231 = bitcast i32* %R8D.i1731 to i64*
  %3232 = load i64, i64* %RBP.i1732
  %3233 = sub i64 %3232, 44
  %3234 = load i64, i64* %PC.i1730
  %3235 = add i64 %3234, 4
  store i64 %3235, i64* %PC.i1730
  %3236 = inttoptr i64 %3233 to i32*
  %3237 = load i32, i32* %3236
  %3238 = zext i32 %3237 to i64
  store i64 %3238, i64* %3231, align 8
  store %struct.Memory* %loadMem_43f127, %struct.Memory** %MEMORY
  %loadMem_43f12b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3240 = getelementptr inbounds %struct.GPR, %struct.GPR* %3239, i32 0, i32 33
  %3241 = getelementptr inbounds %struct.Reg, %struct.Reg* %3240, i32 0, i32 0
  %PC.i1727 = bitcast %union.anon* %3241 to i64*
  %3242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3243 = getelementptr inbounds %struct.GPR, %struct.GPR* %3242, i32 0, i32 19
  %3244 = getelementptr inbounds %struct.Reg, %struct.Reg* %3243, i32 0, i32 0
  %R9D.i1728 = bitcast %union.anon* %3244 to i32*
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3246 = getelementptr inbounds %struct.GPR, %struct.GPR* %3245, i32 0, i32 15
  %3247 = getelementptr inbounds %struct.Reg, %struct.Reg* %3246, i32 0, i32 0
  %RBP.i1729 = bitcast %union.anon* %3247 to i64*
  %3248 = bitcast i32* %R9D.i1728 to i64*
  %3249 = load i64, i64* %RBP.i1729
  %3250 = sub i64 %3249, 48
  %3251 = load i64, i64* %PC.i1727
  %3252 = add i64 %3251, 4
  store i64 %3252, i64* %PC.i1727
  %3253 = inttoptr i64 %3250 to i32*
  %3254 = load i32, i32* %3253
  %3255 = zext i32 %3254 to i64
  store i64 %3255, i64* %3248, align 8
  store %struct.Memory* %loadMem_43f12b, %struct.Memory** %MEMORY
  %loadMem_43f12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3257 = getelementptr inbounds %struct.GPR, %struct.GPR* %3256, i32 0, i32 33
  %3258 = getelementptr inbounds %struct.Reg, %struct.Reg* %3257, i32 0, i32 0
  %PC.i1724 = bitcast %union.anon* %3258 to i64*
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 1
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %AX.i1725 = bitcast %union.anon* %3261 to i16*
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 15
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %RBP.i1726 = bitcast %union.anon* %3264 to i64*
  %3265 = load i64, i64* %RBP.i1726
  %3266 = sub i64 %3265, 50
  %3267 = load i64, i64* %PC.i1724
  %3268 = add i64 %3267, 4
  store i64 %3268, i64* %PC.i1724
  %3269 = inttoptr i64 %3266 to i16*
  %3270 = load i16, i16* %3269
  store i16 %3270, i16* %AX.i1725, align 2
  store %struct.Memory* %loadMem_43f12f, %struct.Memory** %MEMORY
  %loadMem_43f133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3272 = getelementptr inbounds %struct.GPR, %struct.GPR* %3271, i32 0, i32 33
  %3273 = getelementptr inbounds %struct.Reg, %struct.Reg* %3272, i32 0, i32 0
  %PC.i1721 = bitcast %union.anon* %3273 to i64*
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3275 = getelementptr inbounds %struct.GPR, %struct.GPR* %3274, i32 0, i32 1
  %3276 = getelementptr inbounds %struct.Reg, %struct.Reg* %3275, i32 0, i32 0
  %AX.i1722 = bitcast %union.anon* %3276 to i16*
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3278 = getelementptr inbounds %struct.GPR, %struct.GPR* %3277, i32 0, i32 21
  %3279 = getelementptr inbounds %struct.Reg, %struct.Reg* %3278, i32 0, i32 0
  %R10D.i1723 = bitcast %union.anon* %3279 to i32*
  %3280 = bitcast i32* %R10D.i1723 to i64*
  %3281 = load i16, i16* %AX.i1722
  %3282 = zext i16 %3281 to i64
  %3283 = load i64, i64* %PC.i1721
  %3284 = add i64 %3283, 4
  store i64 %3284, i64* %PC.i1721
  %3285 = trunc i64 %3282 to i32
  %3286 = shl i32 %3285, 16
  %3287 = ashr exact i32 %3286, 16
  %3288 = zext i32 %3287 to i64
  store i64 %3288, i64* %3280, align 8
  store %struct.Memory* %loadMem_43f133, %struct.Memory** %MEMORY
  %loadMem_43f137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3290 = getelementptr inbounds %struct.GPR, %struct.GPR* %3289, i32 0, i32 33
  %3291 = getelementptr inbounds %struct.Reg, %struct.Reg* %3290, i32 0, i32 0
  %PC.i1718 = bitcast %union.anon* %3291 to i64*
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3293 = getelementptr inbounds %struct.GPR, %struct.GPR* %3292, i32 0, i32 21
  %3294 = getelementptr inbounds %struct.Reg, %struct.Reg* %3293, i32 0, i32 0
  %R10D.i1719 = bitcast %union.anon* %3294 to i32*
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3296 = getelementptr inbounds %struct.GPR, %struct.GPR* %3295, i32 0, i32 13
  %3297 = getelementptr inbounds %struct.Reg, %struct.Reg* %3296, i32 0, i32 0
  %RSP.i1720 = bitcast %union.anon* %3297 to i64*
  %3298 = load i64, i64* %RSP.i1720
  %3299 = load i32, i32* %R10D.i1719
  %3300 = zext i32 %3299 to i64
  %3301 = load i64, i64* %PC.i1718
  %3302 = add i64 %3301, 4
  store i64 %3302, i64* %PC.i1718
  %3303 = inttoptr i64 %3298 to i32*
  store i32 %3299, i32* %3303
  store %struct.Memory* %loadMem_43f137, %struct.Memory** %MEMORY
  %loadMem_43f13b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3305 = getelementptr inbounds %struct.GPR, %struct.GPR* %3304, i32 0, i32 33
  %3306 = getelementptr inbounds %struct.Reg, %struct.Reg* %3305, i32 0, i32 0
  %PC.i1715 = bitcast %union.anon* %3306 to i64*
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 21
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %R10D.i1716 = bitcast %union.anon* %3309 to i32*
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 15
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %RBP.i1717 = bitcast %union.anon* %3312 to i64*
  %3313 = bitcast i32* %R10D.i1716 to i64*
  %3314 = load i64, i64* %RBP.i1717
  %3315 = sub i64 %3314, 52
  %3316 = load i64, i64* %PC.i1715
  %3317 = add i64 %3316, 5
  store i64 %3317, i64* %PC.i1715
  %3318 = inttoptr i64 %3315 to i16*
  %3319 = load i16, i16* %3318
  %3320 = sext i16 %3319 to i64
  %3321 = and i64 %3320, 4294967295
  store i64 %3321, i64* %3313, align 8
  store %struct.Memory* %loadMem_43f13b, %struct.Memory** %MEMORY
  %loadMem_43f140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3323 = getelementptr inbounds %struct.GPR, %struct.GPR* %3322, i32 0, i32 33
  %3324 = getelementptr inbounds %struct.Reg, %struct.Reg* %3323, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %3324 to i64*
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 21
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %R10D.i1713 = bitcast %union.anon* %3327 to i32*
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3329 = getelementptr inbounds %struct.GPR, %struct.GPR* %3328, i32 0, i32 13
  %3330 = getelementptr inbounds %struct.Reg, %struct.Reg* %3329, i32 0, i32 0
  %RSP.i1714 = bitcast %union.anon* %3330 to i64*
  %3331 = load i64, i64* %RSP.i1714
  %3332 = add i64 %3331, 8
  %3333 = load i32, i32* %R10D.i1713
  %3334 = zext i32 %3333 to i64
  %3335 = load i64, i64* %PC.i1712
  %3336 = add i64 %3335, 5
  store i64 %3336, i64* %PC.i1712
  %3337 = inttoptr i64 %3332 to i32*
  store i32 %3333, i32* %3337
  store %struct.Memory* %loadMem_43f140, %struct.Memory** %MEMORY
  %loadMem1_43f145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3339 = getelementptr inbounds %struct.GPR, %struct.GPR* %3338, i32 0, i32 33
  %3340 = getelementptr inbounds %struct.Reg, %struct.Reg* %3339, i32 0, i32 0
  %PC.i1711 = bitcast %union.anon* %3340 to i64*
  %3341 = load i64, i64* %PC.i1711
  %3342 = add i64 %3341, 2939
  %3343 = load i64, i64* %PC.i1711
  %3344 = add i64 %3343, 5
  %3345 = load i64, i64* %PC.i1711
  %3346 = add i64 %3345, 5
  store i64 %3346, i64* %PC.i1711
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3348 = load i64, i64* %3347, align 8
  %3349 = add i64 %3348, -8
  %3350 = inttoptr i64 %3349 to i64*
  store i64 %3344, i64* %3350
  store i64 %3349, i64* %3347, align 8
  %3351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3342, i64* %3351, align 8
  store %struct.Memory* %loadMem1_43f145, %struct.Memory** %MEMORY
  %loadMem2_43f145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f145 = load i64, i64* %3
  %call2_43f145 = call %struct.Memory* @sub_43fcc0.ChromaPrediction4x4(%struct.State* %0, i64 %loadPC_43f145, %struct.Memory* %loadMem2_43f145)
  store %struct.Memory* %call2_43f145, %struct.Memory** %MEMORY
  %loadMem_43f14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 33
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %3354 to i64*
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3356 = getelementptr inbounds %struct.GPR, %struct.GPR* %3355, i32 0, i32 15
  %3357 = getelementptr inbounds %struct.Reg, %struct.Reg* %3356, i32 0, i32 0
  %RBP.i1710 = bitcast %union.anon* %3357 to i64*
  %3358 = load i64, i64* %RBP.i1710
  %3359 = sub i64 %3358, 76
  %3360 = load i64, i64* %PC.i1709
  %3361 = add i64 %3360, 7
  store i64 %3361, i64* %PC.i1709
  %3362 = inttoptr i64 %3359 to i32*
  store i32 0, i32* %3362
  store %struct.Memory* %loadMem_43f14a, %struct.Memory** %MEMORY
  br label %block_.L_43f151

block_.L_43f151:                                  ; preds = %block_.L_43f1d7, %block_.L_43f118
  %loadMem_43f151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 33
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %PC.i1707 = bitcast %union.anon* %3365 to i64*
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 15
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %RBP.i1708 = bitcast %union.anon* %3368 to i64*
  %3369 = load i64, i64* %RBP.i1708
  %3370 = sub i64 %3369, 76
  %3371 = load i64, i64* %PC.i1707
  %3372 = add i64 %3371, 4
  store i64 %3372, i64* %PC.i1707
  %3373 = inttoptr i64 %3370 to i32*
  %3374 = load i32, i32* %3373
  %3375 = sub i32 %3374, 4
  %3376 = icmp ult i32 %3374, 4
  %3377 = zext i1 %3376 to i8
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3377, i8* %3378, align 1
  %3379 = and i32 %3375, 255
  %3380 = call i32 @llvm.ctpop.i32(i32 %3379)
  %3381 = trunc i32 %3380 to i8
  %3382 = and i8 %3381, 1
  %3383 = xor i8 %3382, 1
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3383, i8* %3384, align 1
  %3385 = xor i32 %3374, 4
  %3386 = xor i32 %3385, %3375
  %3387 = lshr i32 %3386, 4
  %3388 = trunc i32 %3387 to i8
  %3389 = and i8 %3388, 1
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3389, i8* %3390, align 1
  %3391 = icmp eq i32 %3375, 0
  %3392 = zext i1 %3391 to i8
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3392, i8* %3393, align 1
  %3394 = lshr i32 %3375, 31
  %3395 = trunc i32 %3394 to i8
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3395, i8* %3396, align 1
  %3397 = lshr i32 %3374, 31
  %3398 = xor i32 %3394, %3397
  %3399 = add i32 %3398, %3397
  %3400 = icmp eq i32 %3399, 2
  %3401 = zext i1 %3400 to i8
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3401, i8* %3402, align 1
  store %struct.Memory* %loadMem_43f151, %struct.Memory** %MEMORY
  %loadMem_43f155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 33
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %3405 to i64*
  %3406 = load i64, i64* %PC.i1706
  %3407 = add i64 %3406, 144
  %3408 = load i64, i64* %PC.i1706
  %3409 = add i64 %3408, 6
  %3410 = load i64, i64* %PC.i1706
  %3411 = add i64 %3410, 6
  store i64 %3411, i64* %PC.i1706
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3413 = load i8, i8* %3412, align 1
  %3414 = icmp ne i8 %3413, 0
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3416 = load i8, i8* %3415, align 1
  %3417 = icmp ne i8 %3416, 0
  %3418 = xor i1 %3414, %3417
  %3419 = xor i1 %3418, true
  %3420 = zext i1 %3419 to i8
  store i8 %3420, i8* %BRANCH_TAKEN, align 1
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3422 = select i1 %3418, i64 %3409, i64 %3407
  store i64 %3422, i64* %3421, align 8
  store %struct.Memory* %loadMem_43f155, %struct.Memory** %MEMORY
  %loadBr_43f155 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f155 = icmp eq i8 %loadBr_43f155, 1
  br i1 %cmpBr_43f155, label %block_.L_43f1e5, label %block_43f15b

block_43f15b:                                     ; preds = %block_.L_43f151
  %loadMem_43f15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3424 = getelementptr inbounds %struct.GPR, %struct.GPR* %3423, i32 0, i32 33
  %3425 = getelementptr inbounds %struct.Reg, %struct.Reg* %3424, i32 0, i32 0
  %PC.i1704 = bitcast %union.anon* %3425 to i64*
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3427 = getelementptr inbounds %struct.GPR, %struct.GPR* %3426, i32 0, i32 15
  %3428 = getelementptr inbounds %struct.Reg, %struct.Reg* %3427, i32 0, i32 0
  %RBP.i1705 = bitcast %union.anon* %3428 to i64*
  %3429 = load i64, i64* %RBP.i1705
  %3430 = sub i64 %3429, 72
  %3431 = load i64, i64* %PC.i1704
  %3432 = add i64 %3431, 7
  store i64 %3432, i64* %PC.i1704
  %3433 = inttoptr i64 %3430 to i32*
  store i32 0, i32* %3433
  store %struct.Memory* %loadMem_43f15b, %struct.Memory** %MEMORY
  br label %block_.L_43f162

block_.L_43f162:                                  ; preds = %block_43f16c, %block_43f15b
  %loadMem_43f162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3435 = getelementptr inbounds %struct.GPR, %struct.GPR* %3434, i32 0, i32 33
  %3436 = getelementptr inbounds %struct.Reg, %struct.Reg* %3435, i32 0, i32 0
  %PC.i1702 = bitcast %union.anon* %3436 to i64*
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3438 = getelementptr inbounds %struct.GPR, %struct.GPR* %3437, i32 0, i32 15
  %3439 = getelementptr inbounds %struct.Reg, %struct.Reg* %3438, i32 0, i32 0
  %RBP.i1703 = bitcast %union.anon* %3439 to i64*
  %3440 = load i64, i64* %RBP.i1703
  %3441 = sub i64 %3440, 72
  %3442 = load i64, i64* %PC.i1702
  %3443 = add i64 %3442, 4
  store i64 %3443, i64* %PC.i1702
  %3444 = inttoptr i64 %3441 to i32*
  %3445 = load i32, i32* %3444
  %3446 = sub i32 %3445, 4
  %3447 = icmp ult i32 %3445, 4
  %3448 = zext i1 %3447 to i8
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3448, i8* %3449, align 1
  %3450 = and i32 %3446, 255
  %3451 = call i32 @llvm.ctpop.i32(i32 %3450)
  %3452 = trunc i32 %3451 to i8
  %3453 = and i8 %3452, 1
  %3454 = xor i8 %3453, 1
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3454, i8* %3455, align 1
  %3456 = xor i32 %3445, 4
  %3457 = xor i32 %3456, %3446
  %3458 = lshr i32 %3457, 4
  %3459 = trunc i32 %3458 to i8
  %3460 = and i8 %3459, 1
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3460, i8* %3461, align 1
  %3462 = icmp eq i32 %3446, 0
  %3463 = zext i1 %3462 to i8
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3463, i8* %3464, align 1
  %3465 = lshr i32 %3446, 31
  %3466 = trunc i32 %3465 to i8
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3466, i8* %3467, align 1
  %3468 = lshr i32 %3445, 31
  %3469 = xor i32 %3465, %3468
  %3470 = add i32 %3469, %3468
  %3471 = icmp eq i32 %3470, 2
  %3472 = zext i1 %3471 to i8
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3472, i8* %3473, align 1
  store %struct.Memory* %loadMem_43f162, %struct.Memory** %MEMORY
  %loadMem_43f166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 33
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %3476 to i64*
  %3477 = load i64, i64* %PC.i1701
  %3478 = add i64 %3477, 108
  %3479 = load i64, i64* %PC.i1701
  %3480 = add i64 %3479, 6
  %3481 = load i64, i64* %PC.i1701
  %3482 = add i64 %3481, 6
  store i64 %3482, i64* %PC.i1701
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3484 = load i8, i8* %3483, align 1
  %3485 = icmp ne i8 %3484, 0
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3487 = load i8, i8* %3486, align 1
  %3488 = icmp ne i8 %3487, 0
  %3489 = xor i1 %3485, %3488
  %3490 = xor i1 %3489, true
  %3491 = zext i1 %3490 to i8
  store i8 %3491, i8* %BRANCH_TAKEN, align 1
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3493 = select i1 %3489, i64 %3480, i64 %3478
  store i64 %3493, i64* %3492, align 8
  store %struct.Memory* %loadMem_43f166, %struct.Memory** %MEMORY
  %loadBr_43f166 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f166 = icmp eq i8 %loadBr_43f166, 1
  br i1 %cmpBr_43f166, label %block_.L_43f1d2, label %block_43f16c

block_43f16c:                                     ; preds = %block_.L_43f162
  %loadMem_43f16c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 33
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %3496 to i64*
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 1
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %RAX.i1700 = bitcast %union.anon* %3499 to i64*
  %3500 = load i64, i64* %PC.i1699
  %3501 = add i64 %3500, 10
  store i64 %3501, i64* %PC.i1699
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i1700, align 8
  store %struct.Memory* %loadMem_43f16c, %struct.Memory** %MEMORY
  %loadMem_43f176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 33
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %3504 to i64*
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 1
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %RAX.i1698 = bitcast %union.anon* %3507 to i64*
  %3508 = load i64, i64* %RAX.i1698
  %3509 = load i64, i64* %PC.i1697
  %3510 = add i64 %3509, 6
  store i64 %3510, i64* %PC.i1697
  %3511 = add i64 2048, %3508
  store i64 %3511, i64* %RAX.i1698, align 8
  %3512 = icmp ult i64 %3511, %3508
  %3513 = icmp ult i64 %3511, 2048
  %3514 = or i1 %3512, %3513
  %3515 = zext i1 %3514 to i8
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3515, i8* %3516, align 1
  %3517 = trunc i64 %3511 to i32
  %3518 = and i32 %3517, 255
  %3519 = call i32 @llvm.ctpop.i32(i32 %3518)
  %3520 = trunc i32 %3519 to i8
  %3521 = and i8 %3520, 1
  %3522 = xor i8 %3521, 1
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3522, i8* %3523, align 1
  %3524 = xor i64 2048, %3508
  %3525 = xor i64 %3524, %3511
  %3526 = lshr i64 %3525, 4
  %3527 = trunc i64 %3526 to i8
  %3528 = and i8 %3527, 1
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3528, i8* %3529, align 1
  %3530 = icmp eq i64 %3511, 0
  %3531 = zext i1 %3530 to i8
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3531, i8* %3532, align 1
  %3533 = lshr i64 %3511, 63
  %3534 = trunc i64 %3533 to i8
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3534, i8* %3535, align 1
  %3536 = lshr i64 %3508, 63
  %3537 = xor i64 %3533, %3536
  %3538 = add i64 %3537, %3533
  %3539 = icmp eq i64 %3538, 2
  %3540 = zext i1 %3539 to i8
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3540, i8* %3541, align 1
  store %struct.Memory* %loadMem_43f176, %struct.Memory** %MEMORY
  %loadMem_43f17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 33
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %PC.i1695 = bitcast %union.anon* %3544 to i64*
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3546 = getelementptr inbounds %struct.GPR, %struct.GPR* %3545, i32 0, i32 5
  %3547 = getelementptr inbounds %struct.Reg, %struct.Reg* %3546, i32 0, i32 0
  %RCX.i1696 = bitcast %union.anon* %3547 to i64*
  %3548 = load i64, i64* %PC.i1695
  %3549 = add i64 %3548, 8
  store i64 %3549, i64* %PC.i1695
  %3550 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3550, i64* %RCX.i1696, align 8
  store %struct.Memory* %loadMem_43f17c, %struct.Memory** %MEMORY
  %loadMem_43f184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3552 = getelementptr inbounds %struct.GPR, %struct.GPR* %3551, i32 0, i32 33
  %3553 = getelementptr inbounds %struct.Reg, %struct.Reg* %3552, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %3553 to i64*
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3555 = getelementptr inbounds %struct.GPR, %struct.GPR* %3554, i32 0, i32 5
  %3556 = getelementptr inbounds %struct.Reg, %struct.Reg* %3555, i32 0, i32 0
  %RCX.i1694 = bitcast %union.anon* %3556 to i64*
  %3557 = load i64, i64* %RCX.i1694
  %3558 = load i64, i64* %PC.i1693
  %3559 = add i64 %3558, 7
  store i64 %3559, i64* %PC.i1693
  %3560 = add i64 12600, %3557
  store i64 %3560, i64* %RCX.i1694, align 8
  %3561 = icmp ult i64 %3560, %3557
  %3562 = icmp ult i64 %3560, 12600
  %3563 = or i1 %3561, %3562
  %3564 = zext i1 %3563 to i8
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3564, i8* %3565, align 1
  %3566 = trunc i64 %3560 to i32
  %3567 = and i32 %3566, 255
  %3568 = call i32 @llvm.ctpop.i32(i32 %3567)
  %3569 = trunc i32 %3568 to i8
  %3570 = and i8 %3569, 1
  %3571 = xor i8 %3570, 1
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3571, i8* %3572, align 1
  %3573 = xor i64 12600, %3557
  %3574 = xor i64 %3573, %3560
  %3575 = lshr i64 %3574, 4
  %3576 = trunc i64 %3575 to i8
  %3577 = and i8 %3576, 1
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3577, i8* %3578, align 1
  %3579 = icmp eq i64 %3560, 0
  %3580 = zext i1 %3579 to i8
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3580, i8* %3581, align 1
  %3582 = lshr i64 %3560, 63
  %3583 = trunc i64 %3582 to i8
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3583, i8* %3584, align 1
  %3585 = lshr i64 %3557, 63
  %3586 = xor i64 %3582, %3585
  %3587 = add i64 %3586, %3582
  %3588 = icmp eq i64 %3587, 2
  %3589 = zext i1 %3588 to i8
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3589, i8* %3590, align 1
  store %struct.Memory* %loadMem_43f184, %struct.Memory** %MEMORY
  %loadMem_43f18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 33
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %PC.i1690 = bitcast %union.anon* %3593 to i64*
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 7
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %RDX.i1691 = bitcast %union.anon* %3596 to i64*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 15
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %RBP.i1692 = bitcast %union.anon* %3599 to i64*
  %3600 = load i64, i64* %RBP.i1692
  %3601 = sub i64 %3600, 72
  %3602 = load i64, i64* %PC.i1690
  %3603 = add i64 %3602, 3
  store i64 %3603, i64* %PC.i1690
  %3604 = inttoptr i64 %3601 to i32*
  %3605 = load i32, i32* %3604
  %3606 = zext i32 %3605 to i64
  store i64 %3606, i64* %RDX.i1691, align 8
  store %struct.Memory* %loadMem_43f18b, %struct.Memory** %MEMORY
  %loadMem_43f18e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3608 = getelementptr inbounds %struct.GPR, %struct.GPR* %3607, i32 0, i32 33
  %3609 = getelementptr inbounds %struct.Reg, %struct.Reg* %3608, i32 0, i32 0
  %PC.i1687 = bitcast %union.anon* %3609 to i64*
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3611 = getelementptr inbounds %struct.GPR, %struct.GPR* %3610, i32 0, i32 7
  %3612 = getelementptr inbounds %struct.Reg, %struct.Reg* %3611, i32 0, i32 0
  %RDX.i1688 = bitcast %union.anon* %3612 to i64*
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3614 = getelementptr inbounds %struct.GPR, %struct.GPR* %3613, i32 0, i32 15
  %3615 = getelementptr inbounds %struct.Reg, %struct.Reg* %3614, i32 0, i32 0
  %RBP.i1689 = bitcast %union.anon* %3615 to i64*
  %3616 = load i64, i64* %RDX.i1688
  %3617 = load i64, i64* %RBP.i1689
  %3618 = sub i64 %3617, 60
  %3619 = load i64, i64* %PC.i1687
  %3620 = add i64 %3619, 3
  store i64 %3620, i64* %PC.i1687
  %3621 = trunc i64 %3616 to i32
  %3622 = inttoptr i64 %3618 to i32*
  %3623 = load i32, i32* %3622
  %3624 = add i32 %3623, %3621
  %3625 = zext i32 %3624 to i64
  store i64 %3625, i64* %RDX.i1688, align 8
  %3626 = icmp ult i32 %3624, %3621
  %3627 = icmp ult i32 %3624, %3623
  %3628 = or i1 %3626, %3627
  %3629 = zext i1 %3628 to i8
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3629, i8* %3630, align 1
  %3631 = and i32 %3624, 255
  %3632 = call i32 @llvm.ctpop.i32(i32 %3631)
  %3633 = trunc i32 %3632 to i8
  %3634 = and i8 %3633, 1
  %3635 = xor i8 %3634, 1
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3635, i8* %3636, align 1
  %3637 = xor i32 %3623, %3621
  %3638 = xor i32 %3637, %3624
  %3639 = lshr i32 %3638, 4
  %3640 = trunc i32 %3639 to i8
  %3641 = and i8 %3640, 1
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3641, i8* %3642, align 1
  %3643 = icmp eq i32 %3624, 0
  %3644 = zext i1 %3643 to i8
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3644, i8* %3645, align 1
  %3646 = lshr i32 %3624, 31
  %3647 = trunc i32 %3646 to i8
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3647, i8* %3648, align 1
  %3649 = lshr i32 %3621, 31
  %3650 = lshr i32 %3623, 31
  %3651 = xor i32 %3646, %3649
  %3652 = xor i32 %3646, %3650
  %3653 = add i32 %3651, %3652
  %3654 = icmp eq i32 %3653, 2
  %3655 = zext i1 %3654 to i8
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3655, i8* %3656, align 1
  store %struct.Memory* %loadMem_43f18e, %struct.Memory** %MEMORY
  %loadMem_43f191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 33
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %3659 to i64*
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 7
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %EDX.i1685 = bitcast %union.anon* %3662 to i32*
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 9
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %RSI.i1686 = bitcast %union.anon* %3665 to i64*
  %3666 = load i32, i32* %EDX.i1685
  %3667 = zext i32 %3666 to i64
  %3668 = load i64, i64* %PC.i1684
  %3669 = add i64 %3668, 3
  store i64 %3669, i64* %PC.i1684
  %3670 = shl i64 %3667, 32
  %3671 = ashr exact i64 %3670, 32
  store i64 %3671, i64* %RSI.i1686, align 8
  store %struct.Memory* %loadMem_43f191, %struct.Memory** %MEMORY
  %loadMem_43f194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 33
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %PC.i1682 = bitcast %union.anon* %3674 to i64*
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3676 = getelementptr inbounds %struct.GPR, %struct.GPR* %3675, i32 0, i32 9
  %3677 = getelementptr inbounds %struct.Reg, %struct.Reg* %3676, i32 0, i32 0
  %RSI.i1683 = bitcast %union.anon* %3677 to i64*
  %3678 = load i64, i64* %RSI.i1683
  %3679 = load i64, i64* %PC.i1682
  %3680 = add i64 %3679, 4
  store i64 %3680, i64* %PC.i1682
  %3681 = shl i64 %3678, 4
  %3682 = icmp slt i64 %3681, 0
  %3683 = shl i64 %3681, 1
  store i64 %3683, i64* %RSI.i1683, align 8
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3685 = zext i1 %3682 to i8
  store i8 %3685, i8* %3684, align 1
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3687 = trunc i64 %3683 to i32
  %3688 = and i32 %3687, 254
  %3689 = call i32 @llvm.ctpop.i32(i32 %3688)
  %3690 = trunc i32 %3689 to i8
  %3691 = and i8 %3690, 1
  %3692 = xor i8 %3691, 1
  store i8 %3692, i8* %3686, align 1
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3693, align 1
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3695 = icmp eq i64 %3683, 0
  %3696 = zext i1 %3695 to i8
  store i8 %3696, i8* %3694, align 1
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3698 = lshr i64 %3683, 63
  %3699 = trunc i64 %3698 to i8
  store i8 %3699, i8* %3697, align 1
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3700, align 1
  store %struct.Memory* %loadMem_43f194, %struct.Memory** %MEMORY
  %loadMem_43f198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 33
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %PC.i1679 = bitcast %union.anon* %3703 to i64*
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 5
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %RCX.i1680 = bitcast %union.anon* %3706 to i64*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 9
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %RSI.i1681 = bitcast %union.anon* %3709 to i64*
  %3710 = load i64, i64* %RCX.i1680
  %3711 = load i64, i64* %RSI.i1681
  %3712 = load i64, i64* %PC.i1679
  %3713 = add i64 %3712, 3
  store i64 %3713, i64* %PC.i1679
  %3714 = add i64 %3711, %3710
  store i64 %3714, i64* %RCX.i1680, align 8
  %3715 = icmp ult i64 %3714, %3710
  %3716 = icmp ult i64 %3714, %3711
  %3717 = or i1 %3715, %3716
  %3718 = zext i1 %3717 to i8
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3718, i8* %3719, align 1
  %3720 = trunc i64 %3714 to i32
  %3721 = and i32 %3720, 255
  %3722 = call i32 @llvm.ctpop.i32(i32 %3721)
  %3723 = trunc i32 %3722 to i8
  %3724 = and i8 %3723, 1
  %3725 = xor i8 %3724, 1
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3725, i8* %3726, align 1
  %3727 = xor i64 %3711, %3710
  %3728 = xor i64 %3727, %3714
  %3729 = lshr i64 %3728, 4
  %3730 = trunc i64 %3729 to i8
  %3731 = and i8 %3730, 1
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3731, i8* %3732, align 1
  %3733 = icmp eq i64 %3714, 0
  %3734 = zext i1 %3733 to i8
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3734, i8* %3735, align 1
  %3736 = lshr i64 %3714, 63
  %3737 = trunc i64 %3736 to i8
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3737, i8* %3738, align 1
  %3739 = lshr i64 %3710, 63
  %3740 = lshr i64 %3711, 63
  %3741 = xor i64 %3736, %3739
  %3742 = xor i64 %3736, %3740
  %3743 = add i64 %3741, %3742
  %3744 = icmp eq i64 %3743, 2
  %3745 = zext i1 %3744 to i8
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3745, i8* %3746, align 1
  store %struct.Memory* %loadMem_43f198, %struct.Memory** %MEMORY
  %loadMem_43f19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3748 = getelementptr inbounds %struct.GPR, %struct.GPR* %3747, i32 0, i32 33
  %3749 = getelementptr inbounds %struct.Reg, %struct.Reg* %3748, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %3749 to i64*
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3751 = getelementptr inbounds %struct.GPR, %struct.GPR* %3750, i32 0, i32 7
  %3752 = getelementptr inbounds %struct.Reg, %struct.Reg* %3751, i32 0, i32 0
  %RDX.i1677 = bitcast %union.anon* %3752 to i64*
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3754 = getelementptr inbounds %struct.GPR, %struct.GPR* %3753, i32 0, i32 15
  %3755 = getelementptr inbounds %struct.Reg, %struct.Reg* %3754, i32 0, i32 0
  %RBP.i1678 = bitcast %union.anon* %3755 to i64*
  %3756 = load i64, i64* %RBP.i1678
  %3757 = sub i64 %3756, 76
  %3758 = load i64, i64* %PC.i1676
  %3759 = add i64 %3758, 3
  store i64 %3759, i64* %PC.i1676
  %3760 = inttoptr i64 %3757 to i32*
  %3761 = load i32, i32* %3760
  %3762 = zext i32 %3761 to i64
  store i64 %3762, i64* %RDX.i1677, align 8
  store %struct.Memory* %loadMem_43f19b, %struct.Memory** %MEMORY
  %loadMem_43f19e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3764 = getelementptr inbounds %struct.GPR, %struct.GPR* %3763, i32 0, i32 33
  %3765 = getelementptr inbounds %struct.Reg, %struct.Reg* %3764, i32 0, i32 0
  %PC.i1673 = bitcast %union.anon* %3765 to i64*
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3767 = getelementptr inbounds %struct.GPR, %struct.GPR* %3766, i32 0, i32 7
  %3768 = getelementptr inbounds %struct.Reg, %struct.Reg* %3767, i32 0, i32 0
  %RDX.i1674 = bitcast %union.anon* %3768 to i64*
  %3769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3770 = getelementptr inbounds %struct.GPR, %struct.GPR* %3769, i32 0, i32 15
  %3771 = getelementptr inbounds %struct.Reg, %struct.Reg* %3770, i32 0, i32 0
  %RBP.i1675 = bitcast %union.anon* %3771 to i64*
  %3772 = load i64, i64* %RDX.i1674
  %3773 = load i64, i64* %RBP.i1675
  %3774 = sub i64 %3773, 56
  %3775 = load i64, i64* %PC.i1673
  %3776 = add i64 %3775, 3
  store i64 %3776, i64* %PC.i1673
  %3777 = trunc i64 %3772 to i32
  %3778 = inttoptr i64 %3774 to i32*
  %3779 = load i32, i32* %3778
  %3780 = add i32 %3779, %3777
  %3781 = zext i32 %3780 to i64
  store i64 %3781, i64* %RDX.i1674, align 8
  %3782 = icmp ult i32 %3780, %3777
  %3783 = icmp ult i32 %3780, %3779
  %3784 = or i1 %3782, %3783
  %3785 = zext i1 %3784 to i8
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3785, i8* %3786, align 1
  %3787 = and i32 %3780, 255
  %3788 = call i32 @llvm.ctpop.i32(i32 %3787)
  %3789 = trunc i32 %3788 to i8
  %3790 = and i8 %3789, 1
  %3791 = xor i8 %3790, 1
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3791, i8* %3792, align 1
  %3793 = xor i32 %3779, %3777
  %3794 = xor i32 %3793, %3780
  %3795 = lshr i32 %3794, 4
  %3796 = trunc i32 %3795 to i8
  %3797 = and i8 %3796, 1
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3797, i8* %3798, align 1
  %3799 = icmp eq i32 %3780, 0
  %3800 = zext i1 %3799 to i8
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3800, i8* %3801, align 1
  %3802 = lshr i32 %3780, 31
  %3803 = trunc i32 %3802 to i8
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3803, i8* %3804, align 1
  %3805 = lshr i32 %3777, 31
  %3806 = lshr i32 %3779, 31
  %3807 = xor i32 %3802, %3805
  %3808 = xor i32 %3802, %3806
  %3809 = add i32 %3807, %3808
  %3810 = icmp eq i32 %3809, 2
  %3811 = zext i1 %3810 to i8
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3811, i8* %3812, align 1
  store %struct.Memory* %loadMem_43f19e, %struct.Memory** %MEMORY
  %loadMem_43f1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3814 = getelementptr inbounds %struct.GPR, %struct.GPR* %3813, i32 0, i32 33
  %3815 = getelementptr inbounds %struct.Reg, %struct.Reg* %3814, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %3815 to i64*
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3817 = getelementptr inbounds %struct.GPR, %struct.GPR* %3816, i32 0, i32 7
  %3818 = getelementptr inbounds %struct.Reg, %struct.Reg* %3817, i32 0, i32 0
  %EDX.i1671 = bitcast %union.anon* %3818 to i32*
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3820 = getelementptr inbounds %struct.GPR, %struct.GPR* %3819, i32 0, i32 9
  %3821 = getelementptr inbounds %struct.Reg, %struct.Reg* %3820, i32 0, i32 0
  %RSI.i1672 = bitcast %union.anon* %3821 to i64*
  %3822 = load i32, i32* %EDX.i1671
  %3823 = zext i32 %3822 to i64
  %3824 = load i64, i64* %PC.i1670
  %3825 = add i64 %3824, 3
  store i64 %3825, i64* %PC.i1670
  %3826 = shl i64 %3823, 32
  %3827 = ashr exact i64 %3826, 32
  store i64 %3827, i64* %RSI.i1672, align 8
  store %struct.Memory* %loadMem_43f1a1, %struct.Memory** %MEMORY
  %loadMem_43f1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3829 = getelementptr inbounds %struct.GPR, %struct.GPR* %3828, i32 0, i32 33
  %3830 = getelementptr inbounds %struct.Reg, %struct.Reg* %3829, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %3830 to i64*
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3832 = getelementptr inbounds %struct.GPR, %struct.GPR* %3831, i32 0, i32 5
  %3833 = getelementptr inbounds %struct.Reg, %struct.Reg* %3832, i32 0, i32 0
  %RCX.i1667 = bitcast %union.anon* %3833 to i64*
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3835 = getelementptr inbounds %struct.GPR, %struct.GPR* %3834, i32 0, i32 7
  %3836 = getelementptr inbounds %struct.Reg, %struct.Reg* %3835, i32 0, i32 0
  %RDX.i1668 = bitcast %union.anon* %3836 to i64*
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3838 = getelementptr inbounds %struct.GPR, %struct.GPR* %3837, i32 0, i32 9
  %3839 = getelementptr inbounds %struct.Reg, %struct.Reg* %3838, i32 0, i32 0
  %RSI.i1669 = bitcast %union.anon* %3839 to i64*
  %3840 = load i64, i64* %RCX.i1667
  %3841 = load i64, i64* %RSI.i1669
  %3842 = mul i64 %3841, 2
  %3843 = add i64 %3842, %3840
  %3844 = load i64, i64* %PC.i1666
  %3845 = add i64 %3844, 4
  store i64 %3845, i64* %PC.i1666
  %3846 = inttoptr i64 %3843 to i16*
  %3847 = load i16, i16* %3846
  %3848 = zext i16 %3847 to i64
  store i64 %3848, i64* %RDX.i1668, align 8
  store %struct.Memory* %loadMem_43f1a4, %struct.Memory** %MEMORY
  %loadMem_43f1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 33
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %PC.i1663 = bitcast %union.anon* %3851 to i64*
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3853 = getelementptr inbounds %struct.GPR, %struct.GPR* %3852, i32 0, i32 11
  %3854 = getelementptr inbounds %struct.Reg, %struct.Reg* %3853, i32 0, i32 0
  %RDI.i1664 = bitcast %union.anon* %3854 to i64*
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 15
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %RBP.i1665 = bitcast %union.anon* %3857 to i64*
  %3858 = load i64, i64* %RBP.i1665
  %3859 = sub i64 %3858, 72
  %3860 = load i64, i64* %PC.i1663
  %3861 = add i64 %3860, 3
  store i64 %3861, i64* %PC.i1663
  %3862 = inttoptr i64 %3859 to i32*
  %3863 = load i32, i32* %3862
  %3864 = zext i32 %3863 to i64
  store i64 %3864, i64* %RDI.i1664, align 8
  store %struct.Memory* %loadMem_43f1a8, %struct.Memory** %MEMORY
  %loadMem_43f1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 33
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %3867 to i64*
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3869 = getelementptr inbounds %struct.GPR, %struct.GPR* %3868, i32 0, i32 11
  %3870 = getelementptr inbounds %struct.Reg, %struct.Reg* %3869, i32 0, i32 0
  %RDI.i1661 = bitcast %union.anon* %3870 to i64*
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 15
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %RBP.i1662 = bitcast %union.anon* %3873 to i64*
  %3874 = load i64, i64* %RDI.i1661
  %3875 = load i64, i64* %RBP.i1662
  %3876 = sub i64 %3875, 60
  %3877 = load i64, i64* %PC.i1660
  %3878 = add i64 %3877, 3
  store i64 %3878, i64* %PC.i1660
  %3879 = trunc i64 %3874 to i32
  %3880 = inttoptr i64 %3876 to i32*
  %3881 = load i32, i32* %3880
  %3882 = add i32 %3881, %3879
  %3883 = zext i32 %3882 to i64
  store i64 %3883, i64* %RDI.i1661, align 8
  %3884 = icmp ult i32 %3882, %3879
  %3885 = icmp ult i32 %3882, %3881
  %3886 = or i1 %3884, %3885
  %3887 = zext i1 %3886 to i8
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3887, i8* %3888, align 1
  %3889 = and i32 %3882, 255
  %3890 = call i32 @llvm.ctpop.i32(i32 %3889)
  %3891 = trunc i32 %3890 to i8
  %3892 = and i8 %3891, 1
  %3893 = xor i8 %3892, 1
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3893, i8* %3894, align 1
  %3895 = xor i32 %3881, %3879
  %3896 = xor i32 %3895, %3882
  %3897 = lshr i32 %3896, 4
  %3898 = trunc i32 %3897 to i8
  %3899 = and i8 %3898, 1
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3899, i8* %3900, align 1
  %3901 = icmp eq i32 %3882, 0
  %3902 = zext i1 %3901 to i8
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3902, i8* %3903, align 1
  %3904 = lshr i32 %3882, 31
  %3905 = trunc i32 %3904 to i8
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3905, i8* %3906, align 1
  %3907 = lshr i32 %3879, 31
  %3908 = lshr i32 %3881, 31
  %3909 = xor i32 %3904, %3907
  %3910 = xor i32 %3904, %3908
  %3911 = add i32 %3909, %3910
  %3912 = icmp eq i32 %3911, 2
  %3913 = zext i1 %3912 to i8
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3913, i8* %3914, align 1
  store %struct.Memory* %loadMem_43f1ab, %struct.Memory** %MEMORY
  %loadMem_43f1ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 33
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %3917 to i64*
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 11
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %EDI.i1658 = bitcast %union.anon* %3920 to i32*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 5
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %RCX.i1659 = bitcast %union.anon* %3923 to i64*
  %3924 = load i32, i32* %EDI.i1658
  %3925 = zext i32 %3924 to i64
  %3926 = load i64, i64* %PC.i1657
  %3927 = add i64 %3926, 3
  store i64 %3927, i64* %PC.i1657
  %3928 = shl i64 %3925, 32
  %3929 = ashr exact i64 %3928, 32
  store i64 %3929, i64* %RCX.i1659, align 8
  store %struct.Memory* %loadMem_43f1ae, %struct.Memory** %MEMORY
  %loadMem_43f1b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3931 = getelementptr inbounds %struct.GPR, %struct.GPR* %3930, i32 0, i32 33
  %3932 = getelementptr inbounds %struct.Reg, %struct.Reg* %3931, i32 0, i32 0
  %PC.i1655 = bitcast %union.anon* %3932 to i64*
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3934 = getelementptr inbounds %struct.GPR, %struct.GPR* %3933, i32 0, i32 5
  %3935 = getelementptr inbounds %struct.Reg, %struct.Reg* %3934, i32 0, i32 0
  %RCX.i1656 = bitcast %union.anon* %3935 to i64*
  %3936 = load i64, i64* %RCX.i1656
  %3937 = load i64, i64* %PC.i1655
  %3938 = add i64 %3937, 4
  store i64 %3938, i64* %PC.i1655
  %3939 = shl i64 %3936, 5
  %3940 = icmp slt i64 %3939, 0
  %3941 = shl i64 %3939, 1
  store i64 %3941, i64* %RCX.i1656, align 8
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3943 = zext i1 %3940 to i8
  store i8 %3943, i8* %3942, align 1
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3945 = trunc i64 %3941 to i32
  %3946 = and i32 %3945, 254
  %3947 = call i32 @llvm.ctpop.i32(i32 %3946)
  %3948 = trunc i32 %3947 to i8
  %3949 = and i8 %3948, 1
  %3950 = xor i8 %3949, 1
  store i8 %3950, i8* %3944, align 1
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3951, align 1
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3953 = icmp eq i64 %3941, 0
  %3954 = zext i1 %3953 to i8
  store i8 %3954, i8* %3952, align 1
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3956 = lshr i64 %3941, 63
  %3957 = trunc i64 %3956 to i8
  store i8 %3957, i8* %3955, align 1
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3958, align 1
  store %struct.Memory* %loadMem_43f1b1, %struct.Memory** %MEMORY
  %loadMem_43f1b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 33
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %3961 to i64*
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 1
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %RAX.i1653 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 5
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %RCX.i1654 = bitcast %union.anon* %3967 to i64*
  %3968 = load i64, i64* %RAX.i1653
  %3969 = load i64, i64* %RCX.i1654
  %3970 = load i64, i64* %PC.i1652
  %3971 = add i64 %3970, 3
  store i64 %3971, i64* %PC.i1652
  %3972 = add i64 %3969, %3968
  store i64 %3972, i64* %RAX.i1653, align 8
  %3973 = icmp ult i64 %3972, %3968
  %3974 = icmp ult i64 %3972, %3969
  %3975 = or i1 %3973, %3974
  %3976 = zext i1 %3975 to i8
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3976, i8* %3977, align 1
  %3978 = trunc i64 %3972 to i32
  %3979 = and i32 %3978, 255
  %3980 = call i32 @llvm.ctpop.i32(i32 %3979)
  %3981 = trunc i32 %3980 to i8
  %3982 = and i8 %3981, 1
  %3983 = xor i8 %3982, 1
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3983, i8* %3984, align 1
  %3985 = xor i64 %3969, %3968
  %3986 = xor i64 %3985, %3972
  %3987 = lshr i64 %3986, 4
  %3988 = trunc i64 %3987 to i8
  %3989 = and i8 %3988, 1
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3989, i8* %3990, align 1
  %3991 = icmp eq i64 %3972, 0
  %3992 = zext i1 %3991 to i8
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3992, i8* %3993, align 1
  %3994 = lshr i64 %3972, 63
  %3995 = trunc i64 %3994 to i8
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3995, i8* %3996, align 1
  %3997 = lshr i64 %3968, 63
  %3998 = lshr i64 %3969, 63
  %3999 = xor i64 %3994, %3997
  %4000 = xor i64 %3994, %3998
  %4001 = add i64 %3999, %4000
  %4002 = icmp eq i64 %4001, 2
  %4003 = zext i1 %4002 to i8
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4003, i8* %4004, align 1
  store %struct.Memory* %loadMem_43f1b5, %struct.Memory** %MEMORY
  %loadMem_43f1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4006 = getelementptr inbounds %struct.GPR, %struct.GPR* %4005, i32 0, i32 33
  %4007 = getelementptr inbounds %struct.Reg, %struct.Reg* %4006, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %4007 to i64*
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4009 = getelementptr inbounds %struct.GPR, %struct.GPR* %4008, i32 0, i32 11
  %4010 = getelementptr inbounds %struct.Reg, %struct.Reg* %4009, i32 0, i32 0
  %RDI.i1650 = bitcast %union.anon* %4010 to i64*
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4012 = getelementptr inbounds %struct.GPR, %struct.GPR* %4011, i32 0, i32 15
  %4013 = getelementptr inbounds %struct.Reg, %struct.Reg* %4012, i32 0, i32 0
  %RBP.i1651 = bitcast %union.anon* %4013 to i64*
  %4014 = load i64, i64* %RBP.i1651
  %4015 = sub i64 %4014, 76
  %4016 = load i64, i64* %PC.i1649
  %4017 = add i64 %4016, 3
  store i64 %4017, i64* %PC.i1649
  %4018 = inttoptr i64 %4015 to i32*
  %4019 = load i32, i32* %4018
  %4020 = zext i32 %4019 to i64
  store i64 %4020, i64* %RDI.i1650, align 8
  store %struct.Memory* %loadMem_43f1b8, %struct.Memory** %MEMORY
  %loadMem_43f1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 33
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %4023 to i64*
  %4024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4025 = getelementptr inbounds %struct.GPR, %struct.GPR* %4024, i32 0, i32 11
  %4026 = getelementptr inbounds %struct.Reg, %struct.Reg* %4025, i32 0, i32 0
  %RDI.i1647 = bitcast %union.anon* %4026 to i64*
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4028 = getelementptr inbounds %struct.GPR, %struct.GPR* %4027, i32 0, i32 15
  %4029 = getelementptr inbounds %struct.Reg, %struct.Reg* %4028, i32 0, i32 0
  %RBP.i1648 = bitcast %union.anon* %4029 to i64*
  %4030 = load i64, i64* %RDI.i1647
  %4031 = load i64, i64* %RBP.i1648
  %4032 = sub i64 %4031, 56
  %4033 = load i64, i64* %PC.i1646
  %4034 = add i64 %4033, 3
  store i64 %4034, i64* %PC.i1646
  %4035 = trunc i64 %4030 to i32
  %4036 = inttoptr i64 %4032 to i32*
  %4037 = load i32, i32* %4036
  %4038 = add i32 %4037, %4035
  %4039 = zext i32 %4038 to i64
  store i64 %4039, i64* %RDI.i1647, align 8
  %4040 = icmp ult i32 %4038, %4035
  %4041 = icmp ult i32 %4038, %4037
  %4042 = or i1 %4040, %4041
  %4043 = zext i1 %4042 to i8
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4043, i8* %4044, align 1
  %4045 = and i32 %4038, 255
  %4046 = call i32 @llvm.ctpop.i32(i32 %4045)
  %4047 = trunc i32 %4046 to i8
  %4048 = and i8 %4047, 1
  %4049 = xor i8 %4048, 1
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4049, i8* %4050, align 1
  %4051 = xor i32 %4037, %4035
  %4052 = xor i32 %4051, %4038
  %4053 = lshr i32 %4052, 4
  %4054 = trunc i32 %4053 to i8
  %4055 = and i8 %4054, 1
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4055, i8* %4056, align 1
  %4057 = icmp eq i32 %4038, 0
  %4058 = zext i1 %4057 to i8
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4058, i8* %4059, align 1
  %4060 = lshr i32 %4038, 31
  %4061 = trunc i32 %4060 to i8
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4061, i8* %4062, align 1
  %4063 = lshr i32 %4035, 31
  %4064 = lshr i32 %4037, 31
  %4065 = xor i32 %4060, %4063
  %4066 = xor i32 %4060, %4064
  %4067 = add i32 %4065, %4066
  %4068 = icmp eq i32 %4067, 2
  %4069 = zext i1 %4068 to i8
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4069, i8* %4070, align 1
  store %struct.Memory* %loadMem_43f1bb, %struct.Memory** %MEMORY
  %loadMem_43f1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4072 = getelementptr inbounds %struct.GPR, %struct.GPR* %4071, i32 0, i32 33
  %4073 = getelementptr inbounds %struct.Reg, %struct.Reg* %4072, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %4073 to i64*
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4075 = getelementptr inbounds %struct.GPR, %struct.GPR* %4074, i32 0, i32 11
  %4076 = getelementptr inbounds %struct.Reg, %struct.Reg* %4075, i32 0, i32 0
  %EDI.i1644 = bitcast %union.anon* %4076 to i32*
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4078 = getelementptr inbounds %struct.GPR, %struct.GPR* %4077, i32 0, i32 5
  %4079 = getelementptr inbounds %struct.Reg, %struct.Reg* %4078, i32 0, i32 0
  %RCX.i1645 = bitcast %union.anon* %4079 to i64*
  %4080 = load i32, i32* %EDI.i1644
  %4081 = zext i32 %4080 to i64
  %4082 = load i64, i64* %PC.i1643
  %4083 = add i64 %4082, 3
  store i64 %4083, i64* %PC.i1643
  %4084 = shl i64 %4081, 32
  %4085 = ashr exact i64 %4084, 32
  store i64 %4085, i64* %RCX.i1645, align 8
  store %struct.Memory* %loadMem_43f1be, %struct.Memory** %MEMORY
  %loadMem_43f1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4087 = getelementptr inbounds %struct.GPR, %struct.GPR* %4086, i32 0, i32 33
  %4088 = getelementptr inbounds %struct.Reg, %struct.Reg* %4087, i32 0, i32 0
  %PC.i1639 = bitcast %union.anon* %4088 to i64*
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4090 = getelementptr inbounds %struct.GPR, %struct.GPR* %4089, i32 0, i32 7
  %4091 = getelementptr inbounds %struct.Reg, %struct.Reg* %4090, i32 0, i32 0
  %EDX.i1640 = bitcast %union.anon* %4091 to i32*
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4093 = getelementptr inbounds %struct.GPR, %struct.GPR* %4092, i32 0, i32 1
  %4094 = getelementptr inbounds %struct.Reg, %struct.Reg* %4093, i32 0, i32 0
  %RAX.i1641 = bitcast %union.anon* %4094 to i64*
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4096 = getelementptr inbounds %struct.GPR, %struct.GPR* %4095, i32 0, i32 5
  %4097 = getelementptr inbounds %struct.Reg, %struct.Reg* %4096, i32 0, i32 0
  %RCX.i1642 = bitcast %union.anon* %4097 to i64*
  %4098 = load i64, i64* %RAX.i1641
  %4099 = load i64, i64* %RCX.i1642
  %4100 = mul i64 %4099, 4
  %4101 = add i64 %4100, %4098
  %4102 = load i32, i32* %EDX.i1640
  %4103 = zext i32 %4102 to i64
  %4104 = load i64, i64* %PC.i1639
  %4105 = add i64 %4104, 3
  store i64 %4105, i64* %PC.i1639
  %4106 = inttoptr i64 %4101 to i32*
  store i32 %4102, i32* %4106
  store %struct.Memory* %loadMem_43f1c1, %struct.Memory** %MEMORY
  %loadMem_43f1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 33
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %PC.i1636 = bitcast %union.anon* %4109 to i64*
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4111 = getelementptr inbounds %struct.GPR, %struct.GPR* %4110, i32 0, i32 1
  %4112 = getelementptr inbounds %struct.Reg, %struct.Reg* %4111, i32 0, i32 0
  %RAX.i1637 = bitcast %union.anon* %4112 to i64*
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4114 = getelementptr inbounds %struct.GPR, %struct.GPR* %4113, i32 0, i32 15
  %4115 = getelementptr inbounds %struct.Reg, %struct.Reg* %4114, i32 0, i32 0
  %RBP.i1638 = bitcast %union.anon* %4115 to i64*
  %4116 = load i64, i64* %RBP.i1638
  %4117 = sub i64 %4116, 72
  %4118 = load i64, i64* %PC.i1636
  %4119 = add i64 %4118, 3
  store i64 %4119, i64* %PC.i1636
  %4120 = inttoptr i64 %4117 to i32*
  %4121 = load i32, i32* %4120
  %4122 = zext i32 %4121 to i64
  store i64 %4122, i64* %RAX.i1637, align 8
  store %struct.Memory* %loadMem_43f1c4, %struct.Memory** %MEMORY
  %loadMem_43f1c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4124 = getelementptr inbounds %struct.GPR, %struct.GPR* %4123, i32 0, i32 33
  %4125 = getelementptr inbounds %struct.Reg, %struct.Reg* %4124, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %4125 to i64*
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 1
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %RAX.i1635 = bitcast %union.anon* %4128 to i64*
  %4129 = load i64, i64* %RAX.i1635
  %4130 = load i64, i64* %PC.i1634
  %4131 = add i64 %4130, 3
  store i64 %4131, i64* %PC.i1634
  %4132 = trunc i64 %4129 to i32
  %4133 = add i32 1, %4132
  %4134 = zext i32 %4133 to i64
  store i64 %4134, i64* %RAX.i1635, align 8
  %4135 = icmp ult i32 %4133, %4132
  %4136 = icmp ult i32 %4133, 1
  %4137 = or i1 %4135, %4136
  %4138 = zext i1 %4137 to i8
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4138, i8* %4139, align 1
  %4140 = and i32 %4133, 255
  %4141 = call i32 @llvm.ctpop.i32(i32 %4140)
  %4142 = trunc i32 %4141 to i8
  %4143 = and i8 %4142, 1
  %4144 = xor i8 %4143, 1
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4144, i8* %4145, align 1
  %4146 = xor i64 1, %4129
  %4147 = trunc i64 %4146 to i32
  %4148 = xor i32 %4147, %4133
  %4149 = lshr i32 %4148, 4
  %4150 = trunc i32 %4149 to i8
  %4151 = and i8 %4150, 1
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4151, i8* %4152, align 1
  %4153 = icmp eq i32 %4133, 0
  %4154 = zext i1 %4153 to i8
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4154, i8* %4155, align 1
  %4156 = lshr i32 %4133, 31
  %4157 = trunc i32 %4156 to i8
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4157, i8* %4158, align 1
  %4159 = lshr i32 %4132, 31
  %4160 = xor i32 %4156, %4159
  %4161 = add i32 %4160, %4156
  %4162 = icmp eq i32 %4161, 2
  %4163 = zext i1 %4162 to i8
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4163, i8* %4164, align 1
  store %struct.Memory* %loadMem_43f1c7, %struct.Memory** %MEMORY
  %loadMem_43f1ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4166 = getelementptr inbounds %struct.GPR, %struct.GPR* %4165, i32 0, i32 33
  %4167 = getelementptr inbounds %struct.Reg, %struct.Reg* %4166, i32 0, i32 0
  %PC.i1631 = bitcast %union.anon* %4167 to i64*
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 1
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %EAX.i1632 = bitcast %union.anon* %4170 to i32*
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4172 = getelementptr inbounds %struct.GPR, %struct.GPR* %4171, i32 0, i32 15
  %4173 = getelementptr inbounds %struct.Reg, %struct.Reg* %4172, i32 0, i32 0
  %RBP.i1633 = bitcast %union.anon* %4173 to i64*
  %4174 = load i64, i64* %RBP.i1633
  %4175 = sub i64 %4174, 72
  %4176 = load i32, i32* %EAX.i1632
  %4177 = zext i32 %4176 to i64
  %4178 = load i64, i64* %PC.i1631
  %4179 = add i64 %4178, 3
  store i64 %4179, i64* %PC.i1631
  %4180 = inttoptr i64 %4175 to i32*
  store i32 %4176, i32* %4180
  store %struct.Memory* %loadMem_43f1ca, %struct.Memory** %MEMORY
  %loadMem_43f1cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4182 = getelementptr inbounds %struct.GPR, %struct.GPR* %4181, i32 0, i32 33
  %4183 = getelementptr inbounds %struct.Reg, %struct.Reg* %4182, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %4183 to i64*
  %4184 = load i64, i64* %PC.i1630
  %4185 = add i64 %4184, -107
  %4186 = load i64, i64* %PC.i1630
  %4187 = add i64 %4186, 5
  store i64 %4187, i64* %PC.i1630
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4185, i64* %4188, align 8
  store %struct.Memory* %loadMem_43f1cd, %struct.Memory** %MEMORY
  br label %block_.L_43f162

block_.L_43f1d2:                                  ; preds = %block_.L_43f162
  %loadMem_43f1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 33
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %4191 to i64*
  %4192 = load i64, i64* %PC.i1629
  %4193 = add i64 %4192, 5
  %4194 = load i64, i64* %PC.i1629
  %4195 = add i64 %4194, 5
  store i64 %4195, i64* %PC.i1629
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4193, i64* %4196, align 8
  store %struct.Memory* %loadMem_43f1d2, %struct.Memory** %MEMORY
  br label %block_.L_43f1d7

block_.L_43f1d7:                                  ; preds = %block_.L_43f1d2
  %loadMem_43f1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4198 = getelementptr inbounds %struct.GPR, %struct.GPR* %4197, i32 0, i32 33
  %4199 = getelementptr inbounds %struct.Reg, %struct.Reg* %4198, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %4199 to i64*
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 1
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %RAX.i1627 = bitcast %union.anon* %4202 to i64*
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 15
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %RBP.i1628 = bitcast %union.anon* %4205 to i64*
  %4206 = load i64, i64* %RBP.i1628
  %4207 = sub i64 %4206, 76
  %4208 = load i64, i64* %PC.i1626
  %4209 = add i64 %4208, 3
  store i64 %4209, i64* %PC.i1626
  %4210 = inttoptr i64 %4207 to i32*
  %4211 = load i32, i32* %4210
  %4212 = zext i32 %4211 to i64
  store i64 %4212, i64* %RAX.i1627, align 8
  store %struct.Memory* %loadMem_43f1d7, %struct.Memory** %MEMORY
  %loadMem_43f1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4214 = getelementptr inbounds %struct.GPR, %struct.GPR* %4213, i32 0, i32 33
  %4215 = getelementptr inbounds %struct.Reg, %struct.Reg* %4214, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %4215 to i64*
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4217 = getelementptr inbounds %struct.GPR, %struct.GPR* %4216, i32 0, i32 1
  %4218 = getelementptr inbounds %struct.Reg, %struct.Reg* %4217, i32 0, i32 0
  %RAX.i1625 = bitcast %union.anon* %4218 to i64*
  %4219 = load i64, i64* %RAX.i1625
  %4220 = load i64, i64* %PC.i1624
  %4221 = add i64 %4220, 3
  store i64 %4221, i64* %PC.i1624
  %4222 = trunc i64 %4219 to i32
  %4223 = add i32 1, %4222
  %4224 = zext i32 %4223 to i64
  store i64 %4224, i64* %RAX.i1625, align 8
  %4225 = icmp ult i32 %4223, %4222
  %4226 = icmp ult i32 %4223, 1
  %4227 = or i1 %4225, %4226
  %4228 = zext i1 %4227 to i8
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4228, i8* %4229, align 1
  %4230 = and i32 %4223, 255
  %4231 = call i32 @llvm.ctpop.i32(i32 %4230)
  %4232 = trunc i32 %4231 to i8
  %4233 = and i8 %4232, 1
  %4234 = xor i8 %4233, 1
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4234, i8* %4235, align 1
  %4236 = xor i64 1, %4219
  %4237 = trunc i64 %4236 to i32
  %4238 = xor i32 %4237, %4223
  %4239 = lshr i32 %4238, 4
  %4240 = trunc i32 %4239 to i8
  %4241 = and i8 %4240, 1
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4241, i8* %4242, align 1
  %4243 = icmp eq i32 %4223, 0
  %4244 = zext i1 %4243 to i8
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4244, i8* %4245, align 1
  %4246 = lshr i32 %4223, 31
  %4247 = trunc i32 %4246 to i8
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4247, i8* %4248, align 1
  %4249 = lshr i32 %4222, 31
  %4250 = xor i32 %4246, %4249
  %4251 = add i32 %4250, %4246
  %4252 = icmp eq i32 %4251, 2
  %4253 = zext i1 %4252 to i8
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4253, i8* %4254, align 1
  store %struct.Memory* %loadMem_43f1da, %struct.Memory** %MEMORY
  %loadMem_43f1dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4256 = getelementptr inbounds %struct.GPR, %struct.GPR* %4255, i32 0, i32 33
  %4257 = getelementptr inbounds %struct.Reg, %struct.Reg* %4256, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %4257 to i64*
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4259 = getelementptr inbounds %struct.GPR, %struct.GPR* %4258, i32 0, i32 1
  %4260 = getelementptr inbounds %struct.Reg, %struct.Reg* %4259, i32 0, i32 0
  %EAX.i1622 = bitcast %union.anon* %4260 to i32*
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4262 = getelementptr inbounds %struct.GPR, %struct.GPR* %4261, i32 0, i32 15
  %4263 = getelementptr inbounds %struct.Reg, %struct.Reg* %4262, i32 0, i32 0
  %RBP.i1623 = bitcast %union.anon* %4263 to i64*
  %4264 = load i64, i64* %RBP.i1623
  %4265 = sub i64 %4264, 76
  %4266 = load i32, i32* %EAX.i1622
  %4267 = zext i32 %4266 to i64
  %4268 = load i64, i64* %PC.i1621
  %4269 = add i64 %4268, 3
  store i64 %4269, i64* %PC.i1621
  %4270 = inttoptr i64 %4265 to i32*
  store i32 %4266, i32* %4270
  store %struct.Memory* %loadMem_43f1dd, %struct.Memory** %MEMORY
  %loadMem_43f1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4272 = getelementptr inbounds %struct.GPR, %struct.GPR* %4271, i32 0, i32 33
  %4273 = getelementptr inbounds %struct.Reg, %struct.Reg* %4272, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %4273 to i64*
  %4274 = load i64, i64* %PC.i1620
  %4275 = add i64 %4274, -143
  %4276 = load i64, i64* %PC.i1620
  %4277 = add i64 %4276, 5
  store i64 %4277, i64* %PC.i1620
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4275, i64* %4278, align 8
  store %struct.Memory* %loadMem_43f1e0, %struct.Memory** %MEMORY
  br label %block_.L_43f151

block_.L_43f1e5:                                  ; preds = %block_.L_43f151
  %loadMem_43f1e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 33
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %4281 to i64*
  %4282 = load i64, i64* %PC.i1619
  %4283 = add i64 %4282, 5
  %4284 = load i64, i64* %PC.i1619
  %4285 = add i64 %4284, 5
  store i64 %4285, i64* %PC.i1619
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4283, i64* %4286, align 8
  store %struct.Memory* %loadMem_43f1e5, %struct.Memory** %MEMORY
  br label %block_.L_43f1ea

block_.L_43f1ea:                                  ; preds = %block_.L_43f1e5, %block_43f019
  %loadMem_43f1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 33
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %PC.i1616 = bitcast %union.anon* %4289 to i64*
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 11
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %RDI.i1617 = bitcast %union.anon* %4292 to i64*
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 15
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %RBP.i1618 = bitcast %union.anon* %4295 to i64*
  %4296 = load i64, i64* %RBP.i1618
  %4297 = sub i64 %4296, 60
  %4298 = load i64, i64* %PC.i1616
  %4299 = add i64 %4298, 3
  store i64 %4299, i64* %PC.i1616
  %4300 = inttoptr i64 %4297 to i32*
  %4301 = load i32, i32* %4300
  %4302 = zext i32 %4301 to i64
  store i64 %4302, i64* %RDI.i1617, align 8
  store %struct.Memory* %loadMem_43f1ea, %struct.Memory** %MEMORY
  %loadMem_43f1ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4304 = getelementptr inbounds %struct.GPR, %struct.GPR* %4303, i32 0, i32 33
  %4305 = getelementptr inbounds %struct.Reg, %struct.Reg* %4304, i32 0, i32 0
  %PC.i1613 = bitcast %union.anon* %4305 to i64*
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4307 = getelementptr inbounds %struct.GPR, %struct.GPR* %4306, i32 0, i32 9
  %4308 = getelementptr inbounds %struct.Reg, %struct.Reg* %4307, i32 0, i32 0
  %RSI.i1614 = bitcast %union.anon* %4308 to i64*
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4310 = getelementptr inbounds %struct.GPR, %struct.GPR* %4309, i32 0, i32 15
  %4311 = getelementptr inbounds %struct.Reg, %struct.Reg* %4310, i32 0, i32 0
  %RBP.i1615 = bitcast %union.anon* %4311 to i64*
  %4312 = load i64, i64* %RBP.i1615
  %4313 = sub i64 %4312, 56
  %4314 = load i64, i64* %PC.i1613
  %4315 = add i64 %4314, 3
  store i64 %4315, i64* %PC.i1613
  %4316 = inttoptr i64 %4313 to i32*
  %4317 = load i32, i32* %4316
  %4318 = zext i32 %4317 to i64
  store i64 %4318, i64* %RSI.i1614, align 8
  store %struct.Memory* %loadMem_43f1ed, %struct.Memory** %MEMORY
  %loadMem_43f1f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 33
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %PC.i1610 = bitcast %union.anon* %4321 to i64*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 7
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %RDX.i1611 = bitcast %union.anon* %4324 to i64*
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 15
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %RBP.i1612 = bitcast %union.anon* %4327 to i64*
  %4328 = load i64, i64* %RBP.i1612
  %4329 = sub i64 %4328, 38
  %4330 = load i64, i64* %PC.i1610
  %4331 = add i64 %4330, 4
  store i64 %4331, i64* %PC.i1610
  %4332 = inttoptr i64 %4329 to i16*
  %4333 = load i16, i16* %4332
  %4334 = sext i16 %4333 to i64
  %4335 = and i64 %4334, 4294967295
  store i64 %4335, i64* %RDX.i1611, align 8
  store %struct.Memory* %loadMem_43f1f0, %struct.Memory** %MEMORY
  %loadMem_43f1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4337 = getelementptr inbounds %struct.GPR, %struct.GPR* %4336, i32 0, i32 33
  %4338 = getelementptr inbounds %struct.Reg, %struct.Reg* %4337, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %4338 to i64*
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 5
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %RCX.i1608 = bitcast %union.anon* %4341 to i64*
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 15
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %RBP.i1609 = bitcast %union.anon* %4344 to i64*
  %4345 = load i64, i64* %RBP.i1609
  %4346 = sub i64 %4345, 44
  %4347 = load i64, i64* %PC.i1607
  %4348 = add i64 %4347, 3
  store i64 %4348, i64* %PC.i1607
  %4349 = inttoptr i64 %4346 to i32*
  %4350 = load i32, i32* %4349
  %4351 = zext i32 %4350 to i64
  store i64 %4351, i64* %RCX.i1608, align 8
  store %struct.Memory* %loadMem_43f1f4, %struct.Memory** %MEMORY
  %loadMem_43f1f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4353 = getelementptr inbounds %struct.GPR, %struct.GPR* %4352, i32 0, i32 33
  %4354 = getelementptr inbounds %struct.Reg, %struct.Reg* %4353, i32 0, i32 0
  %PC.i1605 = bitcast %union.anon* %4354 to i64*
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 17
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %4357 to i32*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 15
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %RBP.i1606 = bitcast %union.anon* %4360 to i64*
  %4361 = bitcast i32* %R8D.i to i64*
  %4362 = load i64, i64* %RBP.i1606
  %4363 = sub i64 %4362, 48
  %4364 = load i64, i64* %PC.i1605
  %4365 = add i64 %4364, 4
  store i64 %4365, i64* %PC.i1605
  %4366 = inttoptr i64 %4363 to i32*
  %4367 = load i32, i32* %4366
  %4368 = zext i32 %4367 to i64
  store i64 %4368, i64* %4361, align 8
  store %struct.Memory* %loadMem_43f1f7, %struct.Memory** %MEMORY
  %loadMem_43f1fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4370 = getelementptr inbounds %struct.GPR, %struct.GPR* %4369, i32 0, i32 33
  %4371 = getelementptr inbounds %struct.Reg, %struct.Reg* %4370, i32 0, i32 0
  %PC.i1602 = bitcast %union.anon* %4371 to i64*
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4373 = getelementptr inbounds %struct.GPR, %struct.GPR* %4372, i32 0, i32 1
  %4374 = getelementptr inbounds %struct.Reg, %struct.Reg* %4373, i32 0, i32 0
  %AX.i1603 = bitcast %union.anon* %4374 to i16*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4376 = getelementptr inbounds %struct.GPR, %struct.GPR* %4375, i32 0, i32 15
  %4377 = getelementptr inbounds %struct.Reg, %struct.Reg* %4376, i32 0, i32 0
  %RBP.i1604 = bitcast %union.anon* %4377 to i64*
  %4378 = load i64, i64* %RBP.i1604
  %4379 = sub i64 %4378, 50
  %4380 = load i64, i64* %PC.i1602
  %4381 = add i64 %4380, 4
  store i64 %4381, i64* %PC.i1602
  %4382 = inttoptr i64 %4379 to i16*
  %4383 = load i16, i16* %4382
  store i16 %4383, i16* %AX.i1603, align 2
  store %struct.Memory* %loadMem_43f1fb, %struct.Memory** %MEMORY
  %loadMem_43f1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4385 = getelementptr inbounds %struct.GPR, %struct.GPR* %4384, i32 0, i32 33
  %4386 = getelementptr inbounds %struct.Reg, %struct.Reg* %4385, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %4386 to i64*
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4388 = getelementptr inbounds %struct.GPR, %struct.GPR* %4387, i32 0, i32 1
  %4389 = getelementptr inbounds %struct.Reg, %struct.Reg* %4388, i32 0, i32 0
  %AX.i = bitcast %union.anon* %4389 to i16*
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 19
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %4392 to i32*
  %4393 = bitcast i32* %R9D.i to i64*
  %4394 = load i16, i16* %AX.i
  %4395 = zext i16 %4394 to i64
  %4396 = load i64, i64* %PC.i1601
  %4397 = add i64 %4396, 4
  store i64 %4397, i64* %PC.i1601
  %4398 = trunc i64 %4395 to i32
  %4399 = shl i32 %4398, 16
  %4400 = ashr exact i32 %4399, 16
  %4401 = zext i32 %4400 to i64
  store i64 %4401, i64* %4393, align 8
  store %struct.Memory* %loadMem_43f1ff, %struct.Memory** %MEMORY
  %loadMem_43f203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4403 = getelementptr inbounds %struct.GPR, %struct.GPR* %4402, i32 0, i32 33
  %4404 = getelementptr inbounds %struct.Reg, %struct.Reg* %4403, i32 0, i32 0
  %PC.i1598 = bitcast %union.anon* %4404 to i64*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 21
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %R10D.i1599 = bitcast %union.anon* %4407 to i32*
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4409 = getelementptr inbounds %struct.GPR, %struct.GPR* %4408, i32 0, i32 15
  %4410 = getelementptr inbounds %struct.Reg, %struct.Reg* %4409, i32 0, i32 0
  %RBP.i1600 = bitcast %union.anon* %4410 to i64*
  %4411 = bitcast i32* %R10D.i1599 to i64*
  %4412 = load i64, i64* %RBP.i1600
  %4413 = sub i64 %4412, 52
  %4414 = load i64, i64* %PC.i1598
  %4415 = add i64 %4414, 5
  store i64 %4415, i64* %PC.i1598
  %4416 = inttoptr i64 %4413 to i16*
  %4417 = load i16, i16* %4416
  %4418 = sext i16 %4417 to i64
  %4419 = and i64 %4418, 4294967295
  store i64 %4419, i64* %4411, align 8
  store %struct.Memory* %loadMem_43f203, %struct.Memory** %MEMORY
  %loadMem_43f208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4421 = getelementptr inbounds %struct.GPR, %struct.GPR* %4420, i32 0, i32 33
  %4422 = getelementptr inbounds %struct.Reg, %struct.Reg* %4421, i32 0, i32 0
  %PC.i1595 = bitcast %union.anon* %4422 to i64*
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4424 = getelementptr inbounds %struct.GPR, %struct.GPR* %4423, i32 0, i32 21
  %4425 = getelementptr inbounds %struct.Reg, %struct.Reg* %4424, i32 0, i32 0
  %R10D.i1596 = bitcast %union.anon* %4425 to i32*
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4427 = getelementptr inbounds %struct.GPR, %struct.GPR* %4426, i32 0, i32 13
  %4428 = getelementptr inbounds %struct.Reg, %struct.Reg* %4427, i32 0, i32 0
  %RSP.i1597 = bitcast %union.anon* %4428 to i64*
  %4429 = load i64, i64* %RSP.i1597
  %4430 = load i32, i32* %R10D.i1596
  %4431 = zext i32 %4430 to i64
  %4432 = load i64, i64* %PC.i1595
  %4433 = add i64 %4432, 4
  store i64 %4433, i64* %PC.i1595
  %4434 = inttoptr i64 %4429 to i32*
  store i32 %4430, i32* %4434
  store %struct.Memory* %loadMem_43f208, %struct.Memory** %MEMORY
  %loadMem1_43f20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4436 = getelementptr inbounds %struct.GPR, %struct.GPR* %4435, i32 0, i32 33
  %4437 = getelementptr inbounds %struct.Reg, %struct.Reg* %4436, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %4437 to i64*
  %4438 = load i64, i64* %PC.i1594
  %4439 = add i64 %4438, -4860
  %4440 = load i64, i64* %PC.i1594
  %4441 = add i64 %4440, 5
  %4442 = load i64, i64* %PC.i1594
  %4443 = add i64 %4442, 5
  store i64 %4443, i64* %PC.i1594
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4445 = load i64, i64* %4444, align 8
  %4446 = add i64 %4445, -8
  %4447 = inttoptr i64 %4446 to i64*
  store i64 %4441, i64* %4447
  store i64 %4446, i64* %4444, align 8
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4439, i64* %4448, align 8
  store %struct.Memory* %loadMem1_43f20c, %struct.Memory** %MEMORY
  %loadMem2_43f20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f20c = load i64, i64* %3
  %call2_43f20c = call %struct.Memory* @sub_43df10.LumaPrediction4x4(%struct.State* %0, i64 %loadPC_43f20c, %struct.Memory* %loadMem2_43f20c)
  store %struct.Memory* %call2_43f20c, %struct.Memory** %MEMORY
  %loadMem_43f211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4450 = getelementptr inbounds %struct.GPR, %struct.GPR* %4449, i32 0, i32 33
  %4451 = getelementptr inbounds %struct.Reg, %struct.Reg* %4450, i32 0, i32 0
  %PC.i1592 = bitcast %union.anon* %4451 to i64*
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4453 = getelementptr inbounds %struct.GPR, %struct.GPR* %4452, i32 0, i32 23
  %4454 = getelementptr inbounds %struct.Reg, %struct.Reg* %4453, i32 0, i32 0
  %R11.i1593 = bitcast %union.anon* %4454 to i64*
  %4455 = load i64, i64* %PC.i1592
  %4456 = add i64 %4455, 8
  store i64 %4456, i64* %PC.i1592
  %4457 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4457, i64* %R11.i1593, align 8
  store %struct.Memory* %loadMem_43f211, %struct.Memory** %MEMORY
  %loadMem_43f219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 33
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %PC.i1590 = bitcast %union.anon* %4460 to i64*
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4462 = getelementptr inbounds %struct.GPR, %struct.GPR* %4461, i32 0, i32 23
  %4463 = getelementptr inbounds %struct.Reg, %struct.Reg* %4462, i32 0, i32 0
  %R11.i1591 = bitcast %union.anon* %4463 to i64*
  %4464 = load i64, i64* %R11.i1591
  %4465 = add i64 %4464, 72724
  %4466 = load i64, i64* %PC.i1590
  %4467 = add i64 %4466, 8
  store i64 %4467, i64* %PC.i1590
  %4468 = inttoptr i64 %4465 to i32*
  %4469 = load i32, i32* %4468
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4470, align 1
  %4471 = and i32 %4469, 255
  %4472 = call i32 @llvm.ctpop.i32(i32 %4471)
  %4473 = trunc i32 %4472 to i8
  %4474 = and i8 %4473, 1
  %4475 = xor i8 %4474, 1
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4475, i8* %4476, align 1
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4477, align 1
  %4478 = icmp eq i32 %4469, 0
  %4479 = zext i1 %4478 to i8
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4479, i8* %4480, align 1
  %4481 = lshr i32 %4469, 31
  %4482 = trunc i32 %4481 to i8
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4482, i8* %4483, align 1
  %4484 = lshr i32 %4469, 31
  %4485 = xor i32 %4481, %4484
  %4486 = add i32 %4485, %4484
  %4487 = icmp eq i32 %4486, 2
  %4488 = zext i1 %4487 to i8
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4488, i8* %4489, align 1
  store %struct.Memory* %loadMem_43f219, %struct.Memory** %MEMORY
  %loadMem_43f221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4491 = getelementptr inbounds %struct.GPR, %struct.GPR* %4490, i32 0, i32 33
  %4492 = getelementptr inbounds %struct.Reg, %struct.Reg* %4491, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %4492 to i64*
  %4493 = load i64, i64* %PC.i1589
  %4494 = add i64 %4493, 160
  %4495 = load i64, i64* %PC.i1589
  %4496 = add i64 %4495, 6
  %4497 = load i64, i64* %PC.i1589
  %4498 = add i64 %4497, 6
  store i64 %4498, i64* %PC.i1589
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4500 = load i8, i8* %4499, align 1
  store i8 %4500, i8* %BRANCH_TAKEN, align 1
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4502 = icmp ne i8 %4500, 0
  %4503 = select i1 %4502, i64 %4494, i64 %4496
  store i64 %4503, i64* %4501, align 8
  store %struct.Memory* %loadMem_43f221, %struct.Memory** %MEMORY
  %loadBr_43f221 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f221 = icmp eq i8 %loadBr_43f221, 1
  br i1 %cmpBr_43f221, label %block_.L_43f2c1, label %block_43f227

block_43f227:                                     ; preds = %block_.L_43f1ea
  %loadMem_43f227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 33
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %4506 to i64*
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 15
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %RBP.i1588 = bitcast %union.anon* %4509 to i64*
  %4510 = load i64, i64* %RBP.i1588
  %4511 = sub i64 %4510, 76
  %4512 = load i64, i64* %PC.i1587
  %4513 = add i64 %4512, 7
  store i64 %4513, i64* %PC.i1587
  %4514 = inttoptr i64 %4511 to i32*
  store i32 0, i32* %4514
  store %struct.Memory* %loadMem_43f227, %struct.Memory** %MEMORY
  br label %block_.L_43f22e

block_.L_43f22e:                                  ; preds = %block_.L_43f2ae, %block_43f227
  %loadMem_43f22e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4516 = getelementptr inbounds %struct.GPR, %struct.GPR* %4515, i32 0, i32 33
  %4517 = getelementptr inbounds %struct.Reg, %struct.Reg* %4516, i32 0, i32 0
  %PC.i1585 = bitcast %union.anon* %4517 to i64*
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4519 = getelementptr inbounds %struct.GPR, %struct.GPR* %4518, i32 0, i32 15
  %4520 = getelementptr inbounds %struct.Reg, %struct.Reg* %4519, i32 0, i32 0
  %RBP.i1586 = bitcast %union.anon* %4520 to i64*
  %4521 = load i64, i64* %RBP.i1586
  %4522 = sub i64 %4521, 76
  %4523 = load i64, i64* %PC.i1585
  %4524 = add i64 %4523, 4
  store i64 %4524, i64* %PC.i1585
  %4525 = inttoptr i64 %4522 to i32*
  %4526 = load i32, i32* %4525
  %4527 = sub i32 %4526, 4
  %4528 = icmp ult i32 %4526, 4
  %4529 = zext i1 %4528 to i8
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4529, i8* %4530, align 1
  %4531 = and i32 %4527, 255
  %4532 = call i32 @llvm.ctpop.i32(i32 %4531)
  %4533 = trunc i32 %4532 to i8
  %4534 = and i8 %4533, 1
  %4535 = xor i8 %4534, 1
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4535, i8* %4536, align 1
  %4537 = xor i32 %4526, 4
  %4538 = xor i32 %4537, %4527
  %4539 = lshr i32 %4538, 4
  %4540 = trunc i32 %4539 to i8
  %4541 = and i8 %4540, 1
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4541, i8* %4542, align 1
  %4543 = icmp eq i32 %4527, 0
  %4544 = zext i1 %4543 to i8
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4544, i8* %4545, align 1
  %4546 = lshr i32 %4527, 31
  %4547 = trunc i32 %4546 to i8
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4547, i8* %4548, align 1
  %4549 = lshr i32 %4526, 31
  %4550 = xor i32 %4546, %4549
  %4551 = add i32 %4550, %4549
  %4552 = icmp eq i32 %4551, 2
  %4553 = zext i1 %4552 to i8
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4553, i8* %4554, align 1
  store %struct.Memory* %loadMem_43f22e, %struct.Memory** %MEMORY
  %loadMem_43f232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4556 = getelementptr inbounds %struct.GPR, %struct.GPR* %4555, i32 0, i32 33
  %4557 = getelementptr inbounds %struct.Reg, %struct.Reg* %4556, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %4557 to i64*
  %4558 = load i64, i64* %PC.i1584
  %4559 = add i64 %4558, 138
  %4560 = load i64, i64* %PC.i1584
  %4561 = add i64 %4560, 6
  %4562 = load i64, i64* %PC.i1584
  %4563 = add i64 %4562, 6
  store i64 %4563, i64* %PC.i1584
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4565 = load i8, i8* %4564, align 1
  %4566 = icmp ne i8 %4565, 0
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4568 = load i8, i8* %4567, align 1
  %4569 = icmp ne i8 %4568, 0
  %4570 = xor i1 %4566, %4569
  %4571 = xor i1 %4570, true
  %4572 = zext i1 %4571 to i8
  store i8 %4572, i8* %BRANCH_TAKEN, align 1
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4574 = select i1 %4570, i64 %4561, i64 %4559
  store i64 %4574, i64* %4573, align 8
  store %struct.Memory* %loadMem_43f232, %struct.Memory** %MEMORY
  %loadBr_43f232 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f232 = icmp eq i8 %loadBr_43f232, 1
  br i1 %cmpBr_43f232, label %block_.L_43f2bc, label %block_43f238

block_43f238:                                     ; preds = %block_.L_43f22e
  %loadMem_43f238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4576 = getelementptr inbounds %struct.GPR, %struct.GPR* %4575, i32 0, i32 33
  %4577 = getelementptr inbounds %struct.Reg, %struct.Reg* %4576, i32 0, i32 0
  %PC.i1582 = bitcast %union.anon* %4577 to i64*
  %4578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4579 = getelementptr inbounds %struct.GPR, %struct.GPR* %4578, i32 0, i32 15
  %4580 = getelementptr inbounds %struct.Reg, %struct.Reg* %4579, i32 0, i32 0
  %RBP.i1583 = bitcast %union.anon* %4580 to i64*
  %4581 = load i64, i64* %RBP.i1583
  %4582 = sub i64 %4581, 72
  %4583 = load i64, i64* %PC.i1582
  %4584 = add i64 %4583, 7
  store i64 %4584, i64* %PC.i1582
  %4585 = inttoptr i64 %4582 to i32*
  store i32 0, i32* %4585
  store %struct.Memory* %loadMem_43f238, %struct.Memory** %MEMORY
  br label %block_.L_43f23f

block_.L_43f23f:                                  ; preds = %block_43f249, %block_43f238
  %loadMem_43f23f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4587 = getelementptr inbounds %struct.GPR, %struct.GPR* %4586, i32 0, i32 33
  %4588 = getelementptr inbounds %struct.Reg, %struct.Reg* %4587, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %4588 to i64*
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4590 = getelementptr inbounds %struct.GPR, %struct.GPR* %4589, i32 0, i32 15
  %4591 = getelementptr inbounds %struct.Reg, %struct.Reg* %4590, i32 0, i32 0
  %RBP.i1581 = bitcast %union.anon* %4591 to i64*
  %4592 = load i64, i64* %RBP.i1581
  %4593 = sub i64 %4592, 72
  %4594 = load i64, i64* %PC.i1580
  %4595 = add i64 %4594, 4
  store i64 %4595, i64* %PC.i1580
  %4596 = inttoptr i64 %4593 to i32*
  %4597 = load i32, i32* %4596
  %4598 = sub i32 %4597, 4
  %4599 = icmp ult i32 %4597, 4
  %4600 = zext i1 %4599 to i8
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4600, i8* %4601, align 1
  %4602 = and i32 %4598, 255
  %4603 = call i32 @llvm.ctpop.i32(i32 %4602)
  %4604 = trunc i32 %4603 to i8
  %4605 = and i8 %4604, 1
  %4606 = xor i8 %4605, 1
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4606, i8* %4607, align 1
  %4608 = xor i32 %4597, 4
  %4609 = xor i32 %4608, %4598
  %4610 = lshr i32 %4609, 4
  %4611 = trunc i32 %4610 to i8
  %4612 = and i8 %4611, 1
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4612, i8* %4613, align 1
  %4614 = icmp eq i32 %4598, 0
  %4615 = zext i1 %4614 to i8
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4615, i8* %4616, align 1
  %4617 = lshr i32 %4598, 31
  %4618 = trunc i32 %4617 to i8
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4618, i8* %4619, align 1
  %4620 = lshr i32 %4597, 31
  %4621 = xor i32 %4617, %4620
  %4622 = add i32 %4621, %4620
  %4623 = icmp eq i32 %4622, 2
  %4624 = zext i1 %4623 to i8
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4624, i8* %4625, align 1
  store %struct.Memory* %loadMem_43f23f, %struct.Memory** %MEMORY
  %loadMem_43f243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4627 = getelementptr inbounds %struct.GPR, %struct.GPR* %4626, i32 0, i32 33
  %4628 = getelementptr inbounds %struct.Reg, %struct.Reg* %4627, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %4628 to i64*
  %4629 = load i64, i64* %PC.i1579
  %4630 = add i64 %4629, 102
  %4631 = load i64, i64* %PC.i1579
  %4632 = add i64 %4631, 6
  %4633 = load i64, i64* %PC.i1579
  %4634 = add i64 %4633, 6
  store i64 %4634, i64* %PC.i1579
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4636 = load i8, i8* %4635, align 1
  %4637 = icmp ne i8 %4636, 0
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4639 = load i8, i8* %4638, align 1
  %4640 = icmp ne i8 %4639, 0
  %4641 = xor i1 %4637, %4640
  %4642 = xor i1 %4641, true
  %4643 = zext i1 %4642 to i8
  store i8 %4643, i8* %BRANCH_TAKEN, align 1
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4645 = select i1 %4641, i64 %4632, i64 %4630
  store i64 %4645, i64* %4644, align 8
  store %struct.Memory* %loadMem_43f243, %struct.Memory** %MEMORY
  %loadBr_43f243 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f243 = icmp eq i8 %loadBr_43f243, 1
  br i1 %cmpBr_43f243, label %block_.L_43f2a9, label %block_43f249

block_43f249:                                     ; preds = %block_.L_43f23f
  %loadMem_43f249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4647 = getelementptr inbounds %struct.GPR, %struct.GPR* %4646, i32 0, i32 33
  %4648 = getelementptr inbounds %struct.Reg, %struct.Reg* %4647, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %4648 to i64*
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 1
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %RAX.i1578 = bitcast %union.anon* %4651 to i64*
  %4652 = load i64, i64* %PC.i1577
  %4653 = add i64 %4652, 10
  store i64 %4653, i64* %PC.i1577
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX.i1578, align 8
  store %struct.Memory* %loadMem_43f249, %struct.Memory** %MEMORY
  %loadMem_43f253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4655 = getelementptr inbounds %struct.GPR, %struct.GPR* %4654, i32 0, i32 33
  %4656 = getelementptr inbounds %struct.Reg, %struct.Reg* %4655, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %4656 to i64*
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4658 = getelementptr inbounds %struct.GPR, %struct.GPR* %4657, i32 0, i32 5
  %4659 = getelementptr inbounds %struct.Reg, %struct.Reg* %4658, i32 0, i32 0
  %RCX.i1576 = bitcast %union.anon* %4659 to i64*
  %4660 = load i64, i64* %PC.i1575
  %4661 = add i64 %4660, 8
  store i64 %4661, i64* %PC.i1575
  %4662 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4662, i64* %RCX.i1576, align 8
  store %struct.Memory* %loadMem_43f253, %struct.Memory** %MEMORY
  %loadMem_43f25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 33
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %PC.i1573 = bitcast %union.anon* %4665 to i64*
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4667 = getelementptr inbounds %struct.GPR, %struct.GPR* %4666, i32 0, i32 5
  %4668 = getelementptr inbounds %struct.Reg, %struct.Reg* %4667, i32 0, i32 0
  %RCX.i1574 = bitcast %union.anon* %4668 to i64*
  %4669 = load i64, i64* %RCX.i1574
  %4670 = load i64, i64* %PC.i1573
  %4671 = add i64 %4670, 7
  store i64 %4671, i64* %PC.i1573
  %4672 = add i64 12600, %4669
  store i64 %4672, i64* %RCX.i1574, align 8
  %4673 = icmp ult i64 %4672, %4669
  %4674 = icmp ult i64 %4672, 12600
  %4675 = or i1 %4673, %4674
  %4676 = zext i1 %4675 to i8
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4676, i8* %4677, align 1
  %4678 = trunc i64 %4672 to i32
  %4679 = and i32 %4678, 255
  %4680 = call i32 @llvm.ctpop.i32(i32 %4679)
  %4681 = trunc i32 %4680 to i8
  %4682 = and i8 %4681, 1
  %4683 = xor i8 %4682, 1
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4683, i8* %4684, align 1
  %4685 = xor i64 12600, %4669
  %4686 = xor i64 %4685, %4672
  %4687 = lshr i64 %4686, 4
  %4688 = trunc i64 %4687 to i8
  %4689 = and i8 %4688, 1
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4689, i8* %4690, align 1
  %4691 = icmp eq i64 %4672, 0
  %4692 = zext i1 %4691 to i8
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4692, i8* %4693, align 1
  %4694 = lshr i64 %4672, 63
  %4695 = trunc i64 %4694 to i8
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4695, i8* %4696, align 1
  %4697 = lshr i64 %4669, 63
  %4698 = xor i64 %4694, %4697
  %4699 = add i64 %4698, %4694
  %4700 = icmp eq i64 %4699, 2
  %4701 = zext i1 %4700 to i8
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4701, i8* %4702, align 1
  store %struct.Memory* %loadMem_43f25b, %struct.Memory** %MEMORY
  %loadMem_43f262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4704 = getelementptr inbounds %struct.GPR, %struct.GPR* %4703, i32 0, i32 33
  %4705 = getelementptr inbounds %struct.Reg, %struct.Reg* %4704, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %4705 to i64*
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4707 = getelementptr inbounds %struct.GPR, %struct.GPR* %4706, i32 0, i32 7
  %4708 = getelementptr inbounds %struct.Reg, %struct.Reg* %4707, i32 0, i32 0
  %RDX.i1571 = bitcast %union.anon* %4708 to i64*
  %4709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4710 = getelementptr inbounds %struct.GPR, %struct.GPR* %4709, i32 0, i32 15
  %4711 = getelementptr inbounds %struct.Reg, %struct.Reg* %4710, i32 0, i32 0
  %RBP.i1572 = bitcast %union.anon* %4711 to i64*
  %4712 = load i64, i64* %RBP.i1572
  %4713 = sub i64 %4712, 72
  %4714 = load i64, i64* %PC.i1570
  %4715 = add i64 %4714, 3
  store i64 %4715, i64* %PC.i1570
  %4716 = inttoptr i64 %4713 to i32*
  %4717 = load i32, i32* %4716
  %4718 = zext i32 %4717 to i64
  store i64 %4718, i64* %RDX.i1571, align 8
  store %struct.Memory* %loadMem_43f262, %struct.Memory** %MEMORY
  %loadMem_43f265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4720 = getelementptr inbounds %struct.GPR, %struct.GPR* %4719, i32 0, i32 33
  %4721 = getelementptr inbounds %struct.Reg, %struct.Reg* %4720, i32 0, i32 0
  %PC.i1567 = bitcast %union.anon* %4721 to i64*
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4723 = getelementptr inbounds %struct.GPR, %struct.GPR* %4722, i32 0, i32 7
  %4724 = getelementptr inbounds %struct.Reg, %struct.Reg* %4723, i32 0, i32 0
  %RDX.i1568 = bitcast %union.anon* %4724 to i64*
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 15
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %RBP.i1569 = bitcast %union.anon* %4727 to i64*
  %4728 = load i64, i64* %RDX.i1568
  %4729 = load i64, i64* %RBP.i1569
  %4730 = sub i64 %4729, 60
  %4731 = load i64, i64* %PC.i1567
  %4732 = add i64 %4731, 3
  store i64 %4732, i64* %PC.i1567
  %4733 = trunc i64 %4728 to i32
  %4734 = inttoptr i64 %4730 to i32*
  %4735 = load i32, i32* %4734
  %4736 = add i32 %4735, %4733
  %4737 = zext i32 %4736 to i64
  store i64 %4737, i64* %RDX.i1568, align 8
  %4738 = icmp ult i32 %4736, %4733
  %4739 = icmp ult i32 %4736, %4735
  %4740 = or i1 %4738, %4739
  %4741 = zext i1 %4740 to i8
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4741, i8* %4742, align 1
  %4743 = and i32 %4736, 255
  %4744 = call i32 @llvm.ctpop.i32(i32 %4743)
  %4745 = trunc i32 %4744 to i8
  %4746 = and i8 %4745, 1
  %4747 = xor i8 %4746, 1
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4747, i8* %4748, align 1
  %4749 = xor i32 %4735, %4733
  %4750 = xor i32 %4749, %4736
  %4751 = lshr i32 %4750, 4
  %4752 = trunc i32 %4751 to i8
  %4753 = and i8 %4752, 1
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4753, i8* %4754, align 1
  %4755 = icmp eq i32 %4736, 0
  %4756 = zext i1 %4755 to i8
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4756, i8* %4757, align 1
  %4758 = lshr i32 %4736, 31
  %4759 = trunc i32 %4758 to i8
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4759, i8* %4760, align 1
  %4761 = lshr i32 %4733, 31
  %4762 = lshr i32 %4735, 31
  %4763 = xor i32 %4758, %4761
  %4764 = xor i32 %4758, %4762
  %4765 = add i32 %4763, %4764
  %4766 = icmp eq i32 %4765, 2
  %4767 = zext i1 %4766 to i8
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4767, i8* %4768, align 1
  store %struct.Memory* %loadMem_43f265, %struct.Memory** %MEMORY
  %loadMem_43f268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4770 = getelementptr inbounds %struct.GPR, %struct.GPR* %4769, i32 0, i32 33
  %4771 = getelementptr inbounds %struct.Reg, %struct.Reg* %4770, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %4771 to i64*
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4773 = getelementptr inbounds %struct.GPR, %struct.GPR* %4772, i32 0, i32 7
  %4774 = getelementptr inbounds %struct.Reg, %struct.Reg* %4773, i32 0, i32 0
  %EDX.i1565 = bitcast %union.anon* %4774 to i32*
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 9
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %RSI.i1566 = bitcast %union.anon* %4777 to i64*
  %4778 = load i32, i32* %EDX.i1565
  %4779 = zext i32 %4778 to i64
  %4780 = load i64, i64* %PC.i1564
  %4781 = add i64 %4780, 3
  store i64 %4781, i64* %PC.i1564
  %4782 = shl i64 %4779, 32
  %4783 = ashr exact i64 %4782, 32
  store i64 %4783, i64* %RSI.i1566, align 8
  store %struct.Memory* %loadMem_43f268, %struct.Memory** %MEMORY
  %loadMem_43f26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4785 = getelementptr inbounds %struct.GPR, %struct.GPR* %4784, i32 0, i32 33
  %4786 = getelementptr inbounds %struct.Reg, %struct.Reg* %4785, i32 0, i32 0
  %PC.i1562 = bitcast %union.anon* %4786 to i64*
  %4787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4788 = getelementptr inbounds %struct.GPR, %struct.GPR* %4787, i32 0, i32 9
  %4789 = getelementptr inbounds %struct.Reg, %struct.Reg* %4788, i32 0, i32 0
  %RSI.i1563 = bitcast %union.anon* %4789 to i64*
  %4790 = load i64, i64* %RSI.i1563
  %4791 = load i64, i64* %PC.i1562
  %4792 = add i64 %4791, 4
  store i64 %4792, i64* %PC.i1562
  %4793 = shl i64 %4790, 4
  %4794 = icmp slt i64 %4793, 0
  %4795 = shl i64 %4793, 1
  store i64 %4795, i64* %RSI.i1563, align 8
  %4796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4797 = zext i1 %4794 to i8
  store i8 %4797, i8* %4796, align 1
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4799 = trunc i64 %4795 to i32
  %4800 = and i32 %4799, 254
  %4801 = call i32 @llvm.ctpop.i32(i32 %4800)
  %4802 = trunc i32 %4801 to i8
  %4803 = and i8 %4802, 1
  %4804 = xor i8 %4803, 1
  store i8 %4804, i8* %4798, align 1
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4805, align 1
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4807 = icmp eq i64 %4795, 0
  %4808 = zext i1 %4807 to i8
  store i8 %4808, i8* %4806, align 1
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4810 = lshr i64 %4795, 63
  %4811 = trunc i64 %4810 to i8
  store i8 %4811, i8* %4809, align 1
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4812, align 1
  store %struct.Memory* %loadMem_43f26b, %struct.Memory** %MEMORY
  %loadMem_43f26f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4814 = getelementptr inbounds %struct.GPR, %struct.GPR* %4813, i32 0, i32 33
  %4815 = getelementptr inbounds %struct.Reg, %struct.Reg* %4814, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %4815 to i64*
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4817 = getelementptr inbounds %struct.GPR, %struct.GPR* %4816, i32 0, i32 5
  %4818 = getelementptr inbounds %struct.Reg, %struct.Reg* %4817, i32 0, i32 0
  %RCX.i1560 = bitcast %union.anon* %4818 to i64*
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4820 = getelementptr inbounds %struct.GPR, %struct.GPR* %4819, i32 0, i32 9
  %4821 = getelementptr inbounds %struct.Reg, %struct.Reg* %4820, i32 0, i32 0
  %RSI.i1561 = bitcast %union.anon* %4821 to i64*
  %4822 = load i64, i64* %RCX.i1560
  %4823 = load i64, i64* %RSI.i1561
  %4824 = load i64, i64* %PC.i1559
  %4825 = add i64 %4824, 3
  store i64 %4825, i64* %PC.i1559
  %4826 = add i64 %4823, %4822
  store i64 %4826, i64* %RCX.i1560, align 8
  %4827 = icmp ult i64 %4826, %4822
  %4828 = icmp ult i64 %4826, %4823
  %4829 = or i1 %4827, %4828
  %4830 = zext i1 %4829 to i8
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4830, i8* %4831, align 1
  %4832 = trunc i64 %4826 to i32
  %4833 = and i32 %4832, 255
  %4834 = call i32 @llvm.ctpop.i32(i32 %4833)
  %4835 = trunc i32 %4834 to i8
  %4836 = and i8 %4835, 1
  %4837 = xor i8 %4836, 1
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4837, i8* %4838, align 1
  %4839 = xor i64 %4823, %4822
  %4840 = xor i64 %4839, %4826
  %4841 = lshr i64 %4840, 4
  %4842 = trunc i64 %4841 to i8
  %4843 = and i8 %4842, 1
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4843, i8* %4844, align 1
  %4845 = icmp eq i64 %4826, 0
  %4846 = zext i1 %4845 to i8
  %4847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4846, i8* %4847, align 1
  %4848 = lshr i64 %4826, 63
  %4849 = trunc i64 %4848 to i8
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4849, i8* %4850, align 1
  %4851 = lshr i64 %4822, 63
  %4852 = lshr i64 %4823, 63
  %4853 = xor i64 %4848, %4851
  %4854 = xor i64 %4848, %4852
  %4855 = add i64 %4853, %4854
  %4856 = icmp eq i64 %4855, 2
  %4857 = zext i1 %4856 to i8
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4857, i8* %4858, align 1
  store %struct.Memory* %loadMem_43f26f, %struct.Memory** %MEMORY
  %loadMem_43f272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4860 = getelementptr inbounds %struct.GPR, %struct.GPR* %4859, i32 0, i32 33
  %4861 = getelementptr inbounds %struct.Reg, %struct.Reg* %4860, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %4861 to i64*
  %4862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4863 = getelementptr inbounds %struct.GPR, %struct.GPR* %4862, i32 0, i32 7
  %4864 = getelementptr inbounds %struct.Reg, %struct.Reg* %4863, i32 0, i32 0
  %RDX.i1557 = bitcast %union.anon* %4864 to i64*
  %4865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4866 = getelementptr inbounds %struct.GPR, %struct.GPR* %4865, i32 0, i32 15
  %4867 = getelementptr inbounds %struct.Reg, %struct.Reg* %4866, i32 0, i32 0
  %RBP.i1558 = bitcast %union.anon* %4867 to i64*
  %4868 = load i64, i64* %RBP.i1558
  %4869 = sub i64 %4868, 76
  %4870 = load i64, i64* %PC.i1556
  %4871 = add i64 %4870, 3
  store i64 %4871, i64* %PC.i1556
  %4872 = inttoptr i64 %4869 to i32*
  %4873 = load i32, i32* %4872
  %4874 = zext i32 %4873 to i64
  store i64 %4874, i64* %RDX.i1557, align 8
  store %struct.Memory* %loadMem_43f272, %struct.Memory** %MEMORY
  %loadMem_43f275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4876 = getelementptr inbounds %struct.GPR, %struct.GPR* %4875, i32 0, i32 33
  %4877 = getelementptr inbounds %struct.Reg, %struct.Reg* %4876, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %4877 to i64*
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4879 = getelementptr inbounds %struct.GPR, %struct.GPR* %4878, i32 0, i32 7
  %4880 = getelementptr inbounds %struct.Reg, %struct.Reg* %4879, i32 0, i32 0
  %RDX.i1554 = bitcast %union.anon* %4880 to i64*
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4882 = getelementptr inbounds %struct.GPR, %struct.GPR* %4881, i32 0, i32 15
  %4883 = getelementptr inbounds %struct.Reg, %struct.Reg* %4882, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %4883 to i64*
  %4884 = load i64, i64* %RDX.i1554
  %4885 = load i64, i64* %RBP.i1555
  %4886 = sub i64 %4885, 56
  %4887 = load i64, i64* %PC.i1553
  %4888 = add i64 %4887, 3
  store i64 %4888, i64* %PC.i1553
  %4889 = trunc i64 %4884 to i32
  %4890 = inttoptr i64 %4886 to i32*
  %4891 = load i32, i32* %4890
  %4892 = add i32 %4891, %4889
  %4893 = zext i32 %4892 to i64
  store i64 %4893, i64* %RDX.i1554, align 8
  %4894 = icmp ult i32 %4892, %4889
  %4895 = icmp ult i32 %4892, %4891
  %4896 = or i1 %4894, %4895
  %4897 = zext i1 %4896 to i8
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4897, i8* %4898, align 1
  %4899 = and i32 %4892, 255
  %4900 = call i32 @llvm.ctpop.i32(i32 %4899)
  %4901 = trunc i32 %4900 to i8
  %4902 = and i8 %4901, 1
  %4903 = xor i8 %4902, 1
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4903, i8* %4904, align 1
  %4905 = xor i32 %4891, %4889
  %4906 = xor i32 %4905, %4892
  %4907 = lshr i32 %4906, 4
  %4908 = trunc i32 %4907 to i8
  %4909 = and i8 %4908, 1
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4909, i8* %4910, align 1
  %4911 = icmp eq i32 %4892, 0
  %4912 = zext i1 %4911 to i8
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4912, i8* %4913, align 1
  %4914 = lshr i32 %4892, 31
  %4915 = trunc i32 %4914 to i8
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4915, i8* %4916, align 1
  %4917 = lshr i32 %4889, 31
  %4918 = lshr i32 %4891, 31
  %4919 = xor i32 %4914, %4917
  %4920 = xor i32 %4914, %4918
  %4921 = add i32 %4919, %4920
  %4922 = icmp eq i32 %4921, 2
  %4923 = zext i1 %4922 to i8
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4923, i8* %4924, align 1
  store %struct.Memory* %loadMem_43f275, %struct.Memory** %MEMORY
  %loadMem_43f278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4926 = getelementptr inbounds %struct.GPR, %struct.GPR* %4925, i32 0, i32 33
  %4927 = getelementptr inbounds %struct.Reg, %struct.Reg* %4926, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %4927 to i64*
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4929 = getelementptr inbounds %struct.GPR, %struct.GPR* %4928, i32 0, i32 7
  %4930 = getelementptr inbounds %struct.Reg, %struct.Reg* %4929, i32 0, i32 0
  %EDX.i1551 = bitcast %union.anon* %4930 to i32*
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 9
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %RSI.i1552 = bitcast %union.anon* %4933 to i64*
  %4934 = load i32, i32* %EDX.i1551
  %4935 = zext i32 %4934 to i64
  %4936 = load i64, i64* %PC.i1550
  %4937 = add i64 %4936, 3
  store i64 %4937, i64* %PC.i1550
  %4938 = shl i64 %4935, 32
  %4939 = ashr exact i64 %4938, 32
  store i64 %4939, i64* %RSI.i1552, align 8
  store %struct.Memory* %loadMem_43f278, %struct.Memory** %MEMORY
  %loadMem_43f27b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4941 = getelementptr inbounds %struct.GPR, %struct.GPR* %4940, i32 0, i32 33
  %4942 = getelementptr inbounds %struct.Reg, %struct.Reg* %4941, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %4942 to i64*
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 5
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %RCX.i1547 = bitcast %union.anon* %4945 to i64*
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 7
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %RDX.i1548 = bitcast %union.anon* %4948 to i64*
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 9
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %RSI.i1549 = bitcast %union.anon* %4951 to i64*
  %4952 = load i64, i64* %RCX.i1547
  %4953 = load i64, i64* %RSI.i1549
  %4954 = mul i64 %4953, 2
  %4955 = add i64 %4954, %4952
  %4956 = load i64, i64* %PC.i1546
  %4957 = add i64 %4956, 4
  store i64 %4957, i64* %PC.i1546
  %4958 = inttoptr i64 %4955 to i16*
  %4959 = load i16, i16* %4958
  %4960 = zext i16 %4959 to i64
  store i64 %4960, i64* %RDX.i1548, align 8
  store %struct.Memory* %loadMem_43f27b, %struct.Memory** %MEMORY
  %loadMem_43f27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4962 = getelementptr inbounds %struct.GPR, %struct.GPR* %4961, i32 0, i32 33
  %4963 = getelementptr inbounds %struct.Reg, %struct.Reg* %4962, i32 0, i32 0
  %PC.i1543 = bitcast %union.anon* %4963 to i64*
  %4964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4965 = getelementptr inbounds %struct.GPR, %struct.GPR* %4964, i32 0, i32 11
  %4966 = getelementptr inbounds %struct.Reg, %struct.Reg* %4965, i32 0, i32 0
  %RDI.i1544 = bitcast %union.anon* %4966 to i64*
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 15
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %RBP.i1545 = bitcast %union.anon* %4969 to i64*
  %4970 = load i64, i64* %RBP.i1545
  %4971 = sub i64 %4970, 72
  %4972 = load i64, i64* %PC.i1543
  %4973 = add i64 %4972, 3
  store i64 %4973, i64* %PC.i1543
  %4974 = inttoptr i64 %4971 to i32*
  %4975 = load i32, i32* %4974
  %4976 = zext i32 %4975 to i64
  store i64 %4976, i64* %RDI.i1544, align 8
  store %struct.Memory* %loadMem_43f27f, %struct.Memory** %MEMORY
  %loadMem_43f282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4978 = getelementptr inbounds %struct.GPR, %struct.GPR* %4977, i32 0, i32 33
  %4979 = getelementptr inbounds %struct.Reg, %struct.Reg* %4978, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %4979 to i64*
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4981 = getelementptr inbounds %struct.GPR, %struct.GPR* %4980, i32 0, i32 11
  %4982 = getelementptr inbounds %struct.Reg, %struct.Reg* %4981, i32 0, i32 0
  %RDI.i1541 = bitcast %union.anon* %4982 to i64*
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4984 = getelementptr inbounds %struct.GPR, %struct.GPR* %4983, i32 0, i32 15
  %4985 = getelementptr inbounds %struct.Reg, %struct.Reg* %4984, i32 0, i32 0
  %RBP.i1542 = bitcast %union.anon* %4985 to i64*
  %4986 = load i64, i64* %RDI.i1541
  %4987 = load i64, i64* %RBP.i1542
  %4988 = sub i64 %4987, 60
  %4989 = load i64, i64* %PC.i1540
  %4990 = add i64 %4989, 3
  store i64 %4990, i64* %PC.i1540
  %4991 = trunc i64 %4986 to i32
  %4992 = inttoptr i64 %4988 to i32*
  %4993 = load i32, i32* %4992
  %4994 = add i32 %4993, %4991
  %4995 = zext i32 %4994 to i64
  store i64 %4995, i64* %RDI.i1541, align 8
  %4996 = icmp ult i32 %4994, %4991
  %4997 = icmp ult i32 %4994, %4993
  %4998 = or i1 %4996, %4997
  %4999 = zext i1 %4998 to i8
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4999, i8* %5000, align 1
  %5001 = and i32 %4994, 255
  %5002 = call i32 @llvm.ctpop.i32(i32 %5001)
  %5003 = trunc i32 %5002 to i8
  %5004 = and i8 %5003, 1
  %5005 = xor i8 %5004, 1
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5005, i8* %5006, align 1
  %5007 = xor i32 %4993, %4991
  %5008 = xor i32 %5007, %4994
  %5009 = lshr i32 %5008, 4
  %5010 = trunc i32 %5009 to i8
  %5011 = and i8 %5010, 1
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5011, i8* %5012, align 1
  %5013 = icmp eq i32 %4994, 0
  %5014 = zext i1 %5013 to i8
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5014, i8* %5015, align 1
  %5016 = lshr i32 %4994, 31
  %5017 = trunc i32 %5016 to i8
  %5018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5017, i8* %5018, align 1
  %5019 = lshr i32 %4991, 31
  %5020 = lshr i32 %4993, 31
  %5021 = xor i32 %5016, %5019
  %5022 = xor i32 %5016, %5020
  %5023 = add i32 %5021, %5022
  %5024 = icmp eq i32 %5023, 2
  %5025 = zext i1 %5024 to i8
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5025, i8* %5026, align 1
  store %struct.Memory* %loadMem_43f282, %struct.Memory** %MEMORY
  %loadMem_43f285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5028 = getelementptr inbounds %struct.GPR, %struct.GPR* %5027, i32 0, i32 33
  %5029 = getelementptr inbounds %struct.Reg, %struct.Reg* %5028, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %5029 to i64*
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5031 = getelementptr inbounds %struct.GPR, %struct.GPR* %5030, i32 0, i32 11
  %5032 = getelementptr inbounds %struct.Reg, %struct.Reg* %5031, i32 0, i32 0
  %EDI.i1538 = bitcast %union.anon* %5032 to i32*
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5034 = getelementptr inbounds %struct.GPR, %struct.GPR* %5033, i32 0, i32 5
  %5035 = getelementptr inbounds %struct.Reg, %struct.Reg* %5034, i32 0, i32 0
  %RCX.i1539 = bitcast %union.anon* %5035 to i64*
  %5036 = load i32, i32* %EDI.i1538
  %5037 = zext i32 %5036 to i64
  %5038 = load i64, i64* %PC.i1537
  %5039 = add i64 %5038, 3
  store i64 %5039, i64* %PC.i1537
  %5040 = shl i64 %5037, 32
  %5041 = ashr exact i64 %5040, 32
  store i64 %5041, i64* %RCX.i1539, align 8
  store %struct.Memory* %loadMem_43f285, %struct.Memory** %MEMORY
  %loadMem_43f288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5043 = getelementptr inbounds %struct.GPR, %struct.GPR* %5042, i32 0, i32 33
  %5044 = getelementptr inbounds %struct.Reg, %struct.Reg* %5043, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %5044 to i64*
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 5
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %RCX.i1536 = bitcast %union.anon* %5047 to i64*
  %5048 = load i64, i64* %RCX.i1536
  %5049 = load i64, i64* %PC.i1535
  %5050 = add i64 %5049, 4
  store i64 %5050, i64* %PC.i1535
  %5051 = shl i64 %5048, 5
  %5052 = icmp slt i64 %5051, 0
  %5053 = shl i64 %5051, 1
  store i64 %5053, i64* %RCX.i1536, align 8
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5055 = zext i1 %5052 to i8
  store i8 %5055, i8* %5054, align 1
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5057 = trunc i64 %5053 to i32
  %5058 = and i32 %5057, 254
  %5059 = call i32 @llvm.ctpop.i32(i32 %5058)
  %5060 = trunc i32 %5059 to i8
  %5061 = and i8 %5060, 1
  %5062 = xor i8 %5061, 1
  store i8 %5062, i8* %5056, align 1
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5063, align 1
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5065 = icmp eq i64 %5053, 0
  %5066 = zext i1 %5065 to i8
  store i8 %5066, i8* %5064, align 1
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5068 = lshr i64 %5053, 63
  %5069 = trunc i64 %5068 to i8
  store i8 %5069, i8* %5067, align 1
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5070, align 1
  store %struct.Memory* %loadMem_43f288, %struct.Memory** %MEMORY
  %loadMem_43f28c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5072 = getelementptr inbounds %struct.GPR, %struct.GPR* %5071, i32 0, i32 33
  %5073 = getelementptr inbounds %struct.Reg, %struct.Reg* %5072, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %5073 to i64*
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5075 = getelementptr inbounds %struct.GPR, %struct.GPR* %5074, i32 0, i32 1
  %5076 = getelementptr inbounds %struct.Reg, %struct.Reg* %5075, i32 0, i32 0
  %RAX.i1533 = bitcast %union.anon* %5076 to i64*
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5078 = getelementptr inbounds %struct.GPR, %struct.GPR* %5077, i32 0, i32 5
  %5079 = getelementptr inbounds %struct.Reg, %struct.Reg* %5078, i32 0, i32 0
  %RCX.i1534 = bitcast %union.anon* %5079 to i64*
  %5080 = load i64, i64* %RAX.i1533
  %5081 = load i64, i64* %RCX.i1534
  %5082 = load i64, i64* %PC.i1532
  %5083 = add i64 %5082, 3
  store i64 %5083, i64* %PC.i1532
  %5084 = add i64 %5081, %5080
  store i64 %5084, i64* %RAX.i1533, align 8
  %5085 = icmp ult i64 %5084, %5080
  %5086 = icmp ult i64 %5084, %5081
  %5087 = or i1 %5085, %5086
  %5088 = zext i1 %5087 to i8
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5088, i8* %5089, align 1
  %5090 = trunc i64 %5084 to i32
  %5091 = and i32 %5090, 255
  %5092 = call i32 @llvm.ctpop.i32(i32 %5091)
  %5093 = trunc i32 %5092 to i8
  %5094 = and i8 %5093, 1
  %5095 = xor i8 %5094, 1
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5095, i8* %5096, align 1
  %5097 = xor i64 %5081, %5080
  %5098 = xor i64 %5097, %5084
  %5099 = lshr i64 %5098, 4
  %5100 = trunc i64 %5099 to i8
  %5101 = and i8 %5100, 1
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5101, i8* %5102, align 1
  %5103 = icmp eq i64 %5084, 0
  %5104 = zext i1 %5103 to i8
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5104, i8* %5105, align 1
  %5106 = lshr i64 %5084, 63
  %5107 = trunc i64 %5106 to i8
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5107, i8* %5108, align 1
  %5109 = lshr i64 %5080, 63
  %5110 = lshr i64 %5081, 63
  %5111 = xor i64 %5106, %5109
  %5112 = xor i64 %5106, %5110
  %5113 = add i64 %5111, %5112
  %5114 = icmp eq i64 %5113, 2
  %5115 = zext i1 %5114 to i8
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5115, i8* %5116, align 1
  store %struct.Memory* %loadMem_43f28c, %struct.Memory** %MEMORY
  %loadMem_43f28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5118 = getelementptr inbounds %struct.GPR, %struct.GPR* %5117, i32 0, i32 33
  %5119 = getelementptr inbounds %struct.Reg, %struct.Reg* %5118, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %5119 to i64*
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5121 = getelementptr inbounds %struct.GPR, %struct.GPR* %5120, i32 0, i32 11
  %5122 = getelementptr inbounds %struct.Reg, %struct.Reg* %5121, i32 0, i32 0
  %RDI.i1530 = bitcast %union.anon* %5122 to i64*
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 15
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %RBP.i1531 = bitcast %union.anon* %5125 to i64*
  %5126 = load i64, i64* %RBP.i1531
  %5127 = sub i64 %5126, 76
  %5128 = load i64, i64* %PC.i1529
  %5129 = add i64 %5128, 3
  store i64 %5129, i64* %PC.i1529
  %5130 = inttoptr i64 %5127 to i32*
  %5131 = load i32, i32* %5130
  %5132 = zext i32 %5131 to i64
  store i64 %5132, i64* %RDI.i1530, align 8
  store %struct.Memory* %loadMem_43f28f, %struct.Memory** %MEMORY
  %loadMem_43f292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5134 = getelementptr inbounds %struct.GPR, %struct.GPR* %5133, i32 0, i32 33
  %5135 = getelementptr inbounds %struct.Reg, %struct.Reg* %5134, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %5135 to i64*
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 11
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %RDI.i1527 = bitcast %union.anon* %5138 to i64*
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 15
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %RBP.i1528 = bitcast %union.anon* %5141 to i64*
  %5142 = load i64, i64* %RDI.i1527
  %5143 = load i64, i64* %RBP.i1528
  %5144 = sub i64 %5143, 56
  %5145 = load i64, i64* %PC.i1526
  %5146 = add i64 %5145, 3
  store i64 %5146, i64* %PC.i1526
  %5147 = trunc i64 %5142 to i32
  %5148 = inttoptr i64 %5144 to i32*
  %5149 = load i32, i32* %5148
  %5150 = add i32 %5149, %5147
  %5151 = zext i32 %5150 to i64
  store i64 %5151, i64* %RDI.i1527, align 8
  %5152 = icmp ult i32 %5150, %5147
  %5153 = icmp ult i32 %5150, %5149
  %5154 = or i1 %5152, %5153
  %5155 = zext i1 %5154 to i8
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5155, i8* %5156, align 1
  %5157 = and i32 %5150, 255
  %5158 = call i32 @llvm.ctpop.i32(i32 %5157)
  %5159 = trunc i32 %5158 to i8
  %5160 = and i8 %5159, 1
  %5161 = xor i8 %5160, 1
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5161, i8* %5162, align 1
  %5163 = xor i32 %5149, %5147
  %5164 = xor i32 %5163, %5150
  %5165 = lshr i32 %5164, 4
  %5166 = trunc i32 %5165 to i8
  %5167 = and i8 %5166, 1
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5167, i8* %5168, align 1
  %5169 = icmp eq i32 %5150, 0
  %5170 = zext i1 %5169 to i8
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5170, i8* %5171, align 1
  %5172 = lshr i32 %5150, 31
  %5173 = trunc i32 %5172 to i8
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5173, i8* %5174, align 1
  %5175 = lshr i32 %5147, 31
  %5176 = lshr i32 %5149, 31
  %5177 = xor i32 %5172, %5175
  %5178 = xor i32 %5172, %5176
  %5179 = add i32 %5177, %5178
  %5180 = icmp eq i32 %5179, 2
  %5181 = zext i1 %5180 to i8
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5181, i8* %5182, align 1
  store %struct.Memory* %loadMem_43f292, %struct.Memory** %MEMORY
  %loadMem_43f295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 33
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %5185 to i64*
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5187 = getelementptr inbounds %struct.GPR, %struct.GPR* %5186, i32 0, i32 11
  %5188 = getelementptr inbounds %struct.Reg, %struct.Reg* %5187, i32 0, i32 0
  %EDI.i1524 = bitcast %union.anon* %5188 to i32*
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5190 = getelementptr inbounds %struct.GPR, %struct.GPR* %5189, i32 0, i32 5
  %5191 = getelementptr inbounds %struct.Reg, %struct.Reg* %5190, i32 0, i32 0
  %RCX.i1525 = bitcast %union.anon* %5191 to i64*
  %5192 = load i32, i32* %EDI.i1524
  %5193 = zext i32 %5192 to i64
  %5194 = load i64, i64* %PC.i1523
  %5195 = add i64 %5194, 3
  store i64 %5195, i64* %PC.i1523
  %5196 = shl i64 %5193, 32
  %5197 = ashr exact i64 %5196, 32
  store i64 %5197, i64* %RCX.i1525, align 8
  store %struct.Memory* %loadMem_43f295, %struct.Memory** %MEMORY
  %loadMem_43f298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5199 = getelementptr inbounds %struct.GPR, %struct.GPR* %5198, i32 0, i32 33
  %5200 = getelementptr inbounds %struct.Reg, %struct.Reg* %5199, i32 0, i32 0
  %PC.i1519 = bitcast %union.anon* %5200 to i64*
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5202 = getelementptr inbounds %struct.GPR, %struct.GPR* %5201, i32 0, i32 7
  %5203 = getelementptr inbounds %struct.Reg, %struct.Reg* %5202, i32 0, i32 0
  %EDX.i1520 = bitcast %union.anon* %5203 to i32*
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5205 = getelementptr inbounds %struct.GPR, %struct.GPR* %5204, i32 0, i32 1
  %5206 = getelementptr inbounds %struct.Reg, %struct.Reg* %5205, i32 0, i32 0
  %RAX.i1521 = bitcast %union.anon* %5206 to i64*
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5208 = getelementptr inbounds %struct.GPR, %struct.GPR* %5207, i32 0, i32 5
  %5209 = getelementptr inbounds %struct.Reg, %struct.Reg* %5208, i32 0, i32 0
  %RCX.i1522 = bitcast %union.anon* %5209 to i64*
  %5210 = load i64, i64* %RAX.i1521
  %5211 = load i64, i64* %RCX.i1522
  %5212 = mul i64 %5211, 4
  %5213 = add i64 %5212, %5210
  %5214 = load i32, i32* %EDX.i1520
  %5215 = zext i32 %5214 to i64
  %5216 = load i64, i64* %PC.i1519
  %5217 = add i64 %5216, 3
  store i64 %5217, i64* %PC.i1519
  %5218 = inttoptr i64 %5213 to i32*
  store i32 %5214, i32* %5218
  store %struct.Memory* %loadMem_43f298, %struct.Memory** %MEMORY
  %loadMem_43f29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5220 = getelementptr inbounds %struct.GPR, %struct.GPR* %5219, i32 0, i32 33
  %5221 = getelementptr inbounds %struct.Reg, %struct.Reg* %5220, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %5221 to i64*
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5223 = getelementptr inbounds %struct.GPR, %struct.GPR* %5222, i32 0, i32 1
  %5224 = getelementptr inbounds %struct.Reg, %struct.Reg* %5223, i32 0, i32 0
  %RAX.i1517 = bitcast %union.anon* %5224 to i64*
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5226 = getelementptr inbounds %struct.GPR, %struct.GPR* %5225, i32 0, i32 15
  %5227 = getelementptr inbounds %struct.Reg, %struct.Reg* %5226, i32 0, i32 0
  %RBP.i1518 = bitcast %union.anon* %5227 to i64*
  %5228 = load i64, i64* %RBP.i1518
  %5229 = sub i64 %5228, 72
  %5230 = load i64, i64* %PC.i1516
  %5231 = add i64 %5230, 3
  store i64 %5231, i64* %PC.i1516
  %5232 = inttoptr i64 %5229 to i32*
  %5233 = load i32, i32* %5232
  %5234 = zext i32 %5233 to i64
  store i64 %5234, i64* %RAX.i1517, align 8
  store %struct.Memory* %loadMem_43f29b, %struct.Memory** %MEMORY
  %loadMem_43f29e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 33
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %PC.i1514 = bitcast %union.anon* %5237 to i64*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 1
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %RAX.i1515 = bitcast %union.anon* %5240 to i64*
  %5241 = load i64, i64* %RAX.i1515
  %5242 = load i64, i64* %PC.i1514
  %5243 = add i64 %5242, 3
  store i64 %5243, i64* %PC.i1514
  %5244 = trunc i64 %5241 to i32
  %5245 = add i32 1, %5244
  %5246 = zext i32 %5245 to i64
  store i64 %5246, i64* %RAX.i1515, align 8
  %5247 = icmp ult i32 %5245, %5244
  %5248 = icmp ult i32 %5245, 1
  %5249 = or i1 %5247, %5248
  %5250 = zext i1 %5249 to i8
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5250, i8* %5251, align 1
  %5252 = and i32 %5245, 255
  %5253 = call i32 @llvm.ctpop.i32(i32 %5252)
  %5254 = trunc i32 %5253 to i8
  %5255 = and i8 %5254, 1
  %5256 = xor i8 %5255, 1
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5256, i8* %5257, align 1
  %5258 = xor i64 1, %5241
  %5259 = trunc i64 %5258 to i32
  %5260 = xor i32 %5259, %5245
  %5261 = lshr i32 %5260, 4
  %5262 = trunc i32 %5261 to i8
  %5263 = and i8 %5262, 1
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5263, i8* %5264, align 1
  %5265 = icmp eq i32 %5245, 0
  %5266 = zext i1 %5265 to i8
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5266, i8* %5267, align 1
  %5268 = lshr i32 %5245, 31
  %5269 = trunc i32 %5268 to i8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5269, i8* %5270, align 1
  %5271 = lshr i32 %5244, 31
  %5272 = xor i32 %5268, %5271
  %5273 = add i32 %5272, %5268
  %5274 = icmp eq i32 %5273, 2
  %5275 = zext i1 %5274 to i8
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5275, i8* %5276, align 1
  store %struct.Memory* %loadMem_43f29e, %struct.Memory** %MEMORY
  %loadMem_43f2a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5278 = getelementptr inbounds %struct.GPR, %struct.GPR* %5277, i32 0, i32 33
  %5279 = getelementptr inbounds %struct.Reg, %struct.Reg* %5278, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %5279 to i64*
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5281 = getelementptr inbounds %struct.GPR, %struct.GPR* %5280, i32 0, i32 1
  %5282 = getelementptr inbounds %struct.Reg, %struct.Reg* %5281, i32 0, i32 0
  %EAX.i1512 = bitcast %union.anon* %5282 to i32*
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5284 = getelementptr inbounds %struct.GPR, %struct.GPR* %5283, i32 0, i32 15
  %5285 = getelementptr inbounds %struct.Reg, %struct.Reg* %5284, i32 0, i32 0
  %RBP.i1513 = bitcast %union.anon* %5285 to i64*
  %5286 = load i64, i64* %RBP.i1513
  %5287 = sub i64 %5286, 72
  %5288 = load i32, i32* %EAX.i1512
  %5289 = zext i32 %5288 to i64
  %5290 = load i64, i64* %PC.i1511
  %5291 = add i64 %5290, 3
  store i64 %5291, i64* %PC.i1511
  %5292 = inttoptr i64 %5287 to i32*
  store i32 %5288, i32* %5292
  store %struct.Memory* %loadMem_43f2a1, %struct.Memory** %MEMORY
  %loadMem_43f2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5294 = getelementptr inbounds %struct.GPR, %struct.GPR* %5293, i32 0, i32 33
  %5295 = getelementptr inbounds %struct.Reg, %struct.Reg* %5294, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %5295 to i64*
  %5296 = load i64, i64* %PC.i1510
  %5297 = add i64 %5296, -101
  %5298 = load i64, i64* %PC.i1510
  %5299 = add i64 %5298, 5
  store i64 %5299, i64* %PC.i1510
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5297, i64* %5300, align 8
  store %struct.Memory* %loadMem_43f2a4, %struct.Memory** %MEMORY
  br label %block_.L_43f23f

block_.L_43f2a9:                                  ; preds = %block_.L_43f23f
  %loadMem_43f2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5302 = getelementptr inbounds %struct.GPR, %struct.GPR* %5301, i32 0, i32 33
  %5303 = getelementptr inbounds %struct.Reg, %struct.Reg* %5302, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %5303 to i64*
  %5304 = load i64, i64* %PC.i1509
  %5305 = add i64 %5304, 5
  %5306 = load i64, i64* %PC.i1509
  %5307 = add i64 %5306, 5
  store i64 %5307, i64* %PC.i1509
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5305, i64* %5308, align 8
  store %struct.Memory* %loadMem_43f2a9, %struct.Memory** %MEMORY
  br label %block_.L_43f2ae

block_.L_43f2ae:                                  ; preds = %block_.L_43f2a9
  %loadMem_43f2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 33
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %5311 to i64*
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 1
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %RAX.i1507 = bitcast %union.anon* %5314 to i64*
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5316 = getelementptr inbounds %struct.GPR, %struct.GPR* %5315, i32 0, i32 15
  %5317 = getelementptr inbounds %struct.Reg, %struct.Reg* %5316, i32 0, i32 0
  %RBP.i1508 = bitcast %union.anon* %5317 to i64*
  %5318 = load i64, i64* %RBP.i1508
  %5319 = sub i64 %5318, 76
  %5320 = load i64, i64* %PC.i1506
  %5321 = add i64 %5320, 3
  store i64 %5321, i64* %PC.i1506
  %5322 = inttoptr i64 %5319 to i32*
  %5323 = load i32, i32* %5322
  %5324 = zext i32 %5323 to i64
  store i64 %5324, i64* %RAX.i1507, align 8
  store %struct.Memory* %loadMem_43f2ae, %struct.Memory** %MEMORY
  %loadMem_43f2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5326 = getelementptr inbounds %struct.GPR, %struct.GPR* %5325, i32 0, i32 33
  %5327 = getelementptr inbounds %struct.Reg, %struct.Reg* %5326, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %5327 to i64*
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5329 = getelementptr inbounds %struct.GPR, %struct.GPR* %5328, i32 0, i32 1
  %5330 = getelementptr inbounds %struct.Reg, %struct.Reg* %5329, i32 0, i32 0
  %RAX.i1505 = bitcast %union.anon* %5330 to i64*
  %5331 = load i64, i64* %RAX.i1505
  %5332 = load i64, i64* %PC.i1504
  %5333 = add i64 %5332, 3
  store i64 %5333, i64* %PC.i1504
  %5334 = trunc i64 %5331 to i32
  %5335 = add i32 1, %5334
  %5336 = zext i32 %5335 to i64
  store i64 %5336, i64* %RAX.i1505, align 8
  %5337 = icmp ult i32 %5335, %5334
  %5338 = icmp ult i32 %5335, 1
  %5339 = or i1 %5337, %5338
  %5340 = zext i1 %5339 to i8
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5340, i8* %5341, align 1
  %5342 = and i32 %5335, 255
  %5343 = call i32 @llvm.ctpop.i32(i32 %5342)
  %5344 = trunc i32 %5343 to i8
  %5345 = and i8 %5344, 1
  %5346 = xor i8 %5345, 1
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5346, i8* %5347, align 1
  %5348 = xor i64 1, %5331
  %5349 = trunc i64 %5348 to i32
  %5350 = xor i32 %5349, %5335
  %5351 = lshr i32 %5350, 4
  %5352 = trunc i32 %5351 to i8
  %5353 = and i8 %5352, 1
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5353, i8* %5354, align 1
  %5355 = icmp eq i32 %5335, 0
  %5356 = zext i1 %5355 to i8
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5356, i8* %5357, align 1
  %5358 = lshr i32 %5335, 31
  %5359 = trunc i32 %5358 to i8
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5359, i8* %5360, align 1
  %5361 = lshr i32 %5334, 31
  %5362 = xor i32 %5358, %5361
  %5363 = add i32 %5362, %5358
  %5364 = icmp eq i32 %5363, 2
  %5365 = zext i1 %5364 to i8
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5365, i8* %5366, align 1
  store %struct.Memory* %loadMem_43f2b1, %struct.Memory** %MEMORY
  %loadMem_43f2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5368 = getelementptr inbounds %struct.GPR, %struct.GPR* %5367, i32 0, i32 33
  %5369 = getelementptr inbounds %struct.Reg, %struct.Reg* %5368, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %5369 to i64*
  %5370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5371 = getelementptr inbounds %struct.GPR, %struct.GPR* %5370, i32 0, i32 1
  %5372 = getelementptr inbounds %struct.Reg, %struct.Reg* %5371, i32 0, i32 0
  %EAX.i1502 = bitcast %union.anon* %5372 to i32*
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5374 = getelementptr inbounds %struct.GPR, %struct.GPR* %5373, i32 0, i32 15
  %5375 = getelementptr inbounds %struct.Reg, %struct.Reg* %5374, i32 0, i32 0
  %RBP.i1503 = bitcast %union.anon* %5375 to i64*
  %5376 = load i64, i64* %RBP.i1503
  %5377 = sub i64 %5376, 76
  %5378 = load i32, i32* %EAX.i1502
  %5379 = zext i32 %5378 to i64
  %5380 = load i64, i64* %PC.i1501
  %5381 = add i64 %5380, 3
  store i64 %5381, i64* %PC.i1501
  %5382 = inttoptr i64 %5377 to i32*
  store i32 %5378, i32* %5382
  store %struct.Memory* %loadMem_43f2b4, %struct.Memory** %MEMORY
  %loadMem_43f2b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5384 = getelementptr inbounds %struct.GPR, %struct.GPR* %5383, i32 0, i32 33
  %5385 = getelementptr inbounds %struct.Reg, %struct.Reg* %5384, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %5385 to i64*
  %5386 = load i64, i64* %PC.i1500
  %5387 = add i64 %5386, -137
  %5388 = load i64, i64* %PC.i1500
  %5389 = add i64 %5388, 5
  store i64 %5389, i64* %PC.i1500
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5387, i64* %5390, align 8
  store %struct.Memory* %loadMem_43f2b7, %struct.Memory** %MEMORY
  br label %block_.L_43f22e

block_.L_43f2bc:                                  ; preds = %block_.L_43f22e
  %loadMem_43f2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5392 = getelementptr inbounds %struct.GPR, %struct.GPR* %5391, i32 0, i32 33
  %5393 = getelementptr inbounds %struct.Reg, %struct.Reg* %5392, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %5393 to i64*
  %5394 = load i64, i64* %PC.i1499
  %5395 = add i64 %5394, 5
  %5396 = load i64, i64* %PC.i1499
  %5397 = add i64 %5396, 5
  store i64 %5397, i64* %PC.i1499
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5395, i64* %5398, align 8
  store %struct.Memory* %loadMem_43f2bc, %struct.Memory** %MEMORY
  br label %block_.L_43f2c1

block_.L_43f2c1:                                  ; preds = %block_.L_43f2bc, %block_.L_43f1ea
  %loadMem_43f2c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5400 = getelementptr inbounds %struct.GPR, %struct.GPR* %5399, i32 0, i32 33
  %5401 = getelementptr inbounds %struct.Reg, %struct.Reg* %5400, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %5401 to i64*
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5403 = getelementptr inbounds %struct.GPR, %struct.GPR* %5402, i32 0, i32 1
  %5404 = getelementptr inbounds %struct.Reg, %struct.Reg* %5403, i32 0, i32 0
  %RAX.i1498 = bitcast %union.anon* %5404 to i64*
  %5405 = load i64, i64* %PC.i1497
  %5406 = add i64 %5405, 8
  store i64 %5406, i64* %PC.i1497
  %5407 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5407, i64* %RAX.i1498, align 8
  store %struct.Memory* %loadMem_43f2c1, %struct.Memory** %MEMORY
  %loadMem_43f2c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 33
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %5410 to i64*
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5412 = getelementptr inbounds %struct.GPR, %struct.GPR* %5411, i32 0, i32 1
  %5413 = getelementptr inbounds %struct.Reg, %struct.Reg* %5412, i32 0, i32 0
  %RAX.i1496 = bitcast %union.anon* %5413 to i64*
  %5414 = load i64, i64* %RAX.i1496
  %5415 = add i64 %5414, 72724
  %5416 = load i64, i64* %PC.i1495
  %5417 = add i64 %5416, 7
  store i64 %5417, i64* %PC.i1495
  %5418 = inttoptr i64 %5415 to i32*
  %5419 = load i32, i32* %5418
  %5420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5420, align 1
  %5421 = and i32 %5419, 255
  %5422 = call i32 @llvm.ctpop.i32(i32 %5421)
  %5423 = trunc i32 %5422 to i8
  %5424 = and i8 %5423, 1
  %5425 = xor i8 %5424, 1
  %5426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5425, i8* %5426, align 1
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5427, align 1
  %5428 = icmp eq i32 %5419, 0
  %5429 = zext i1 %5428 to i8
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5429, i8* %5430, align 1
  %5431 = lshr i32 %5419, 31
  %5432 = trunc i32 %5431 to i8
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5432, i8* %5433, align 1
  %5434 = lshr i32 %5419, 31
  %5435 = xor i32 %5431, %5434
  %5436 = add i32 %5435, %5434
  %5437 = icmp eq i32 %5436, 2
  %5438 = zext i1 %5437 to i8
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5438, i8* %5439, align 1
  store %struct.Memory* %loadMem_43f2c9, %struct.Memory** %MEMORY
  %loadMem_43f2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5441 = getelementptr inbounds %struct.GPR, %struct.GPR* %5440, i32 0, i32 33
  %5442 = getelementptr inbounds %struct.Reg, %struct.Reg* %5441, i32 0, i32 0
  %PC.i1494 = bitcast %union.anon* %5442 to i64*
  %5443 = load i64, i64* %PC.i1494
  %5444 = add i64 %5443, 541
  %5445 = load i64, i64* %PC.i1494
  %5446 = add i64 %5445, 6
  %5447 = load i64, i64* %PC.i1494
  %5448 = add i64 %5447, 6
  store i64 %5448, i64* %PC.i1494
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5450 = load i8, i8* %5449, align 1
  %5451 = icmp eq i8 %5450, 0
  %5452 = zext i1 %5451 to i8
  store i8 %5452, i8* %BRANCH_TAKEN, align 1
  %5453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5454 = select i1 %5451, i64 %5444, i64 %5446
  store i64 %5454, i64* %5453, align 8
  store %struct.Memory* %loadMem_43f2d0, %struct.Memory** %MEMORY
  %loadBr_43f2d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f2d0 = icmp eq i8 %loadBr_43f2d0, 1
  br i1 %cmpBr_43f2d0, label %block_.L_43f4ed, label %block_43f2d6

block_43f2d6:                                     ; preds = %block_.L_43f2c1
  %loadMem_43f2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 33
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %PC.i1492 = bitcast %union.anon* %5457 to i64*
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 15
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %RBP.i1493 = bitcast %union.anon* %5460 to i64*
  %5461 = load i64, i64* %RBP.i1493
  %5462 = sub i64 %5461, 132
  %5463 = load i64, i64* %PC.i1492
  %5464 = add i64 %5463, 7
  store i64 %5464, i64* %PC.i1492
  %5465 = inttoptr i64 %5462 to i32*
  %5466 = load i32, i32* %5465
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5467, align 1
  %5468 = and i32 %5466, 255
  %5469 = call i32 @llvm.ctpop.i32(i32 %5468)
  %5470 = trunc i32 %5469 to i8
  %5471 = and i8 %5470, 1
  %5472 = xor i8 %5471, 1
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5472, i8* %5473, align 1
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5474, align 1
  %5475 = icmp eq i32 %5466, 0
  %5476 = zext i1 %5475 to i8
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5476, i8* %5477, align 1
  %5478 = lshr i32 %5466, 31
  %5479 = trunc i32 %5478 to i8
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5479, i8* %5480, align 1
  %5481 = lshr i32 %5466, 31
  %5482 = xor i32 %5478, %5481
  %5483 = add i32 %5482, %5481
  %5484 = icmp eq i32 %5483, 2
  %5485 = zext i1 %5484 to i8
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5485, i8* %5486, align 1
  store %struct.Memory* %loadMem_43f2d6, %struct.Memory** %MEMORY
  %loadMem_43f2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 33
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %5489 to i64*
  %5490 = load i64, i64* %PC.i1491
  %5491 = add i64 %5490, 330
  %5492 = load i64, i64* %PC.i1491
  %5493 = add i64 %5492, 6
  %5494 = load i64, i64* %PC.i1491
  %5495 = add i64 %5494, 6
  store i64 %5495, i64* %PC.i1491
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5497 = load i8, i8* %5496, align 1
  %5498 = icmp eq i8 %5497, 0
  %5499 = zext i1 %5498 to i8
  store i8 %5499, i8* %BRANCH_TAKEN, align 1
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5501 = select i1 %5498, i64 %5491, i64 %5493
  store i64 %5501, i64* %5500, align 8
  store %struct.Memory* %loadMem_43f2dd, %struct.Memory** %MEMORY
  %loadBr_43f2dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f2dd = icmp eq i8 %loadBr_43f2dd, 1
  br i1 %cmpBr_43f2dd, label %block_.L_43f427, label %block_43f2e3

block_43f2e3:                                     ; preds = %block_43f2d6
  %loadMem_43f2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5503 = getelementptr inbounds %struct.GPR, %struct.GPR* %5502, i32 0, i32 33
  %5504 = getelementptr inbounds %struct.Reg, %struct.Reg* %5503, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %5504 to i64*
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5506 = getelementptr inbounds %struct.GPR, %struct.GPR* %5505, i32 0, i32 15
  %5507 = getelementptr inbounds %struct.Reg, %struct.Reg* %5506, i32 0, i32 0
  %RBP.i1490 = bitcast %union.anon* %5507 to i64*
  %5508 = load i64, i64* %RBP.i1490
  %5509 = sub i64 %5508, 76
  %5510 = load i64, i64* %PC.i1489
  %5511 = add i64 %5510, 7
  store i64 %5511, i64* %PC.i1489
  %5512 = inttoptr i64 %5509 to i32*
  store i32 0, i32* %5512
  store %struct.Memory* %loadMem_43f2e3, %struct.Memory** %MEMORY
  br label %block_.L_43f2ea

block_.L_43f2ea:                                  ; preds = %block_.L_43f387, %block_43f2e3
  %loadMem_43f2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 33
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %5515 to i64*
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5517 = getelementptr inbounds %struct.GPR, %struct.GPR* %5516, i32 0, i32 15
  %5518 = getelementptr inbounds %struct.Reg, %struct.Reg* %5517, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %5518 to i64*
  %5519 = load i64, i64* %RBP.i1488
  %5520 = sub i64 %5519, 76
  %5521 = load i64, i64* %PC.i1487
  %5522 = add i64 %5521, 4
  store i64 %5522, i64* %PC.i1487
  %5523 = inttoptr i64 %5520 to i32*
  %5524 = load i32, i32* %5523
  %5525 = sub i32 %5524, 4
  %5526 = icmp ult i32 %5524, 4
  %5527 = zext i1 %5526 to i8
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5527, i8* %5528, align 1
  %5529 = and i32 %5525, 255
  %5530 = call i32 @llvm.ctpop.i32(i32 %5529)
  %5531 = trunc i32 %5530 to i8
  %5532 = and i8 %5531, 1
  %5533 = xor i8 %5532, 1
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5533, i8* %5534, align 1
  %5535 = xor i32 %5524, 4
  %5536 = xor i32 %5535, %5525
  %5537 = lshr i32 %5536, 4
  %5538 = trunc i32 %5537 to i8
  %5539 = and i8 %5538, 1
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5539, i8* %5540, align 1
  %5541 = icmp eq i32 %5525, 0
  %5542 = zext i1 %5541 to i8
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5542, i8* %5543, align 1
  %5544 = lshr i32 %5525, 31
  %5545 = trunc i32 %5544 to i8
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5545, i8* %5546, align 1
  %5547 = lshr i32 %5524, 31
  %5548 = xor i32 %5544, %5547
  %5549 = add i32 %5548, %5547
  %5550 = icmp eq i32 %5549, 2
  %5551 = zext i1 %5550 to i8
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5551, i8* %5552, align 1
  store %struct.Memory* %loadMem_43f2ea, %struct.Memory** %MEMORY
  %loadMem_43f2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 33
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %5555 to i64*
  %5556 = load i64, i64* %PC.i1486
  %5557 = add i64 %5556, 167
  %5558 = load i64, i64* %PC.i1486
  %5559 = add i64 %5558, 6
  %5560 = load i64, i64* %PC.i1486
  %5561 = add i64 %5560, 6
  store i64 %5561, i64* %PC.i1486
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5563 = load i8, i8* %5562, align 1
  %5564 = icmp ne i8 %5563, 0
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5566 = load i8, i8* %5565, align 1
  %5567 = icmp ne i8 %5566, 0
  %5568 = xor i1 %5564, %5567
  %5569 = xor i1 %5568, true
  %5570 = zext i1 %5569 to i8
  store i8 %5570, i8* %BRANCH_TAKEN, align 1
  %5571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5572 = select i1 %5568, i64 %5559, i64 %5557
  store i64 %5572, i64* %5571, align 8
  store %struct.Memory* %loadMem_43f2ee, %struct.Memory** %MEMORY
  %loadBr_43f2ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f2ee = icmp eq i8 %loadBr_43f2ee, 1
  br i1 %cmpBr_43f2ee, label %block_.L_43f395, label %block_43f2f4

block_43f2f4:                                     ; preds = %block_.L_43f2ea
  %loadMem_43f2f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 33
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %5575 to i64*
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 15
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %RBP.i1485 = bitcast %union.anon* %5578 to i64*
  %5579 = load i64, i64* %RBP.i1485
  %5580 = sub i64 %5579, 72
  %5581 = load i64, i64* %PC.i1484
  %5582 = add i64 %5581, 7
  store i64 %5582, i64* %PC.i1484
  %5583 = inttoptr i64 %5580 to i32*
  store i32 0, i32* %5583
  store %struct.Memory* %loadMem_43f2f4, %struct.Memory** %MEMORY
  br label %block_.L_43f2fb

block_.L_43f2fb:                                  ; preds = %block_43f305, %block_43f2f4
  %loadMem_43f2fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5585 = getelementptr inbounds %struct.GPR, %struct.GPR* %5584, i32 0, i32 33
  %5586 = getelementptr inbounds %struct.Reg, %struct.Reg* %5585, i32 0, i32 0
  %PC.i1482 = bitcast %union.anon* %5586 to i64*
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5588 = getelementptr inbounds %struct.GPR, %struct.GPR* %5587, i32 0, i32 15
  %5589 = getelementptr inbounds %struct.Reg, %struct.Reg* %5588, i32 0, i32 0
  %RBP.i1483 = bitcast %union.anon* %5589 to i64*
  %5590 = load i64, i64* %RBP.i1483
  %5591 = sub i64 %5590, 72
  %5592 = load i64, i64* %PC.i1482
  %5593 = add i64 %5592, 4
  store i64 %5593, i64* %PC.i1482
  %5594 = inttoptr i64 %5591 to i32*
  %5595 = load i32, i32* %5594
  %5596 = sub i32 %5595, 4
  %5597 = icmp ult i32 %5595, 4
  %5598 = zext i1 %5597 to i8
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5598, i8* %5599, align 1
  %5600 = and i32 %5596, 255
  %5601 = call i32 @llvm.ctpop.i32(i32 %5600)
  %5602 = trunc i32 %5601 to i8
  %5603 = and i8 %5602, 1
  %5604 = xor i8 %5603, 1
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5604, i8* %5605, align 1
  %5606 = xor i32 %5595, 4
  %5607 = xor i32 %5606, %5596
  %5608 = lshr i32 %5607, 4
  %5609 = trunc i32 %5608 to i8
  %5610 = and i8 %5609, 1
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5610, i8* %5611, align 1
  %5612 = icmp eq i32 %5596, 0
  %5613 = zext i1 %5612 to i8
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5613, i8* %5614, align 1
  %5615 = lshr i32 %5596, 31
  %5616 = trunc i32 %5615 to i8
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5616, i8* %5617, align 1
  %5618 = lshr i32 %5595, 31
  %5619 = xor i32 %5615, %5618
  %5620 = add i32 %5619, %5618
  %5621 = icmp eq i32 %5620, 2
  %5622 = zext i1 %5621 to i8
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5622, i8* %5623, align 1
  store %struct.Memory* %loadMem_43f2fb, %struct.Memory** %MEMORY
  %loadMem_43f2ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5625 = getelementptr inbounds %struct.GPR, %struct.GPR* %5624, i32 0, i32 33
  %5626 = getelementptr inbounds %struct.Reg, %struct.Reg* %5625, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %5626 to i64*
  %5627 = load i64, i64* %PC.i1481
  %5628 = add i64 %5627, 131
  %5629 = load i64, i64* %PC.i1481
  %5630 = add i64 %5629, 6
  %5631 = load i64, i64* %PC.i1481
  %5632 = add i64 %5631, 6
  store i64 %5632, i64* %PC.i1481
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5634 = load i8, i8* %5633, align 1
  %5635 = icmp ne i8 %5634, 0
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5637 = load i8, i8* %5636, align 1
  %5638 = icmp ne i8 %5637, 0
  %5639 = xor i1 %5635, %5638
  %5640 = xor i1 %5639, true
  %5641 = zext i1 %5640 to i8
  store i8 %5641, i8* %BRANCH_TAKEN, align 1
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5643 = select i1 %5639, i64 %5630, i64 %5628
  store i64 %5643, i64* %5642, align 8
  store %struct.Memory* %loadMem_43f2ff, %struct.Memory** %MEMORY
  %loadBr_43f2ff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f2ff = icmp eq i8 %loadBr_43f2ff, 1
  br i1 %cmpBr_43f2ff, label %block_.L_43f382, label %block_43f305

block_43f305:                                     ; preds = %block_.L_43f2fb
  %loadMem_43f305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 33
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %5646 to i64*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 1
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %RAX.i1480 = bitcast %union.anon* %5649 to i64*
  %5650 = load i64, i64* %PC.i1479
  %5651 = add i64 %5650, 8
  store i64 %5651, i64* %PC.i1479
  %5652 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %5652, i64* %RAX.i1480, align 8
  store %struct.Memory* %loadMem_43f305, %struct.Memory** %MEMORY
  %loadMem_43f30d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5654 = getelementptr inbounds %struct.GPR, %struct.GPR* %5653, i32 0, i32 33
  %5655 = getelementptr inbounds %struct.Reg, %struct.Reg* %5654, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %5655 to i64*
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5657 = getelementptr inbounds %struct.GPR, %struct.GPR* %5656, i32 0, i32 5
  %5658 = getelementptr inbounds %struct.Reg, %struct.Reg* %5657, i32 0, i32 0
  %RCX.i1477 = bitcast %union.anon* %5658 to i64*
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5660 = getelementptr inbounds %struct.GPR, %struct.GPR* %5659, i32 0, i32 15
  %5661 = getelementptr inbounds %struct.Reg, %struct.Reg* %5660, i32 0, i32 0
  %RBP.i1478 = bitcast %union.anon* %5661 to i64*
  %5662 = load i64, i64* %RBP.i1478
  %5663 = sub i64 %5662, 64
  %5664 = load i64, i64* %PC.i1476
  %5665 = add i64 %5664, 3
  store i64 %5665, i64* %PC.i1476
  %5666 = inttoptr i64 %5663 to i32*
  %5667 = load i32, i32* %5666
  %5668 = zext i32 %5667 to i64
  store i64 %5668, i64* %RCX.i1477, align 8
  store %struct.Memory* %loadMem_43f30d, %struct.Memory** %MEMORY
  %loadMem_43f310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5670 = getelementptr inbounds %struct.GPR, %struct.GPR* %5669, i32 0, i32 33
  %5671 = getelementptr inbounds %struct.Reg, %struct.Reg* %5670, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %5671 to i64*
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5673 = getelementptr inbounds %struct.GPR, %struct.GPR* %5672, i32 0, i32 5
  %5674 = getelementptr inbounds %struct.Reg, %struct.Reg* %5673, i32 0, i32 0
  %RCX.i1474 = bitcast %union.anon* %5674 to i64*
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5676 = getelementptr inbounds %struct.GPR, %struct.GPR* %5675, i32 0, i32 15
  %5677 = getelementptr inbounds %struct.Reg, %struct.Reg* %5676, i32 0, i32 0
  %RBP.i1475 = bitcast %union.anon* %5677 to i64*
  %5678 = load i64, i64* %RCX.i1474
  %5679 = load i64, i64* %RBP.i1475
  %5680 = sub i64 %5679, 76
  %5681 = load i64, i64* %PC.i1473
  %5682 = add i64 %5681, 3
  store i64 %5682, i64* %PC.i1473
  %5683 = trunc i64 %5678 to i32
  %5684 = inttoptr i64 %5680 to i32*
  %5685 = load i32, i32* %5684
  %5686 = add i32 %5685, %5683
  %5687 = zext i32 %5686 to i64
  store i64 %5687, i64* %RCX.i1474, align 8
  %5688 = icmp ult i32 %5686, %5683
  %5689 = icmp ult i32 %5686, %5685
  %5690 = or i1 %5688, %5689
  %5691 = zext i1 %5690 to i8
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5691, i8* %5692, align 1
  %5693 = and i32 %5686, 255
  %5694 = call i32 @llvm.ctpop.i32(i32 %5693)
  %5695 = trunc i32 %5694 to i8
  %5696 = and i8 %5695, 1
  %5697 = xor i8 %5696, 1
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5697, i8* %5698, align 1
  %5699 = xor i32 %5685, %5683
  %5700 = xor i32 %5699, %5686
  %5701 = lshr i32 %5700, 4
  %5702 = trunc i32 %5701 to i8
  %5703 = and i8 %5702, 1
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5703, i8* %5704, align 1
  %5705 = icmp eq i32 %5686, 0
  %5706 = zext i1 %5705 to i8
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5706, i8* %5707, align 1
  %5708 = lshr i32 %5686, 31
  %5709 = trunc i32 %5708 to i8
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5709, i8* %5710, align 1
  %5711 = lshr i32 %5683, 31
  %5712 = lshr i32 %5685, 31
  %5713 = xor i32 %5708, %5711
  %5714 = xor i32 %5708, %5712
  %5715 = add i32 %5713, %5714
  %5716 = icmp eq i32 %5715, 2
  %5717 = zext i1 %5716 to i8
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5717, i8* %5718, align 1
  store %struct.Memory* %loadMem_43f310, %struct.Memory** %MEMORY
  %loadMem_43f313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5720 = getelementptr inbounds %struct.GPR, %struct.GPR* %5719, i32 0, i32 33
  %5721 = getelementptr inbounds %struct.Reg, %struct.Reg* %5720, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %5721 to i64*
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5723 = getelementptr inbounds %struct.GPR, %struct.GPR* %5722, i32 0, i32 5
  %5724 = getelementptr inbounds %struct.Reg, %struct.Reg* %5723, i32 0, i32 0
  %ECX.i1471 = bitcast %union.anon* %5724 to i32*
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5726 = getelementptr inbounds %struct.GPR, %struct.GPR* %5725, i32 0, i32 7
  %5727 = getelementptr inbounds %struct.Reg, %struct.Reg* %5726, i32 0, i32 0
  %RDX.i1472 = bitcast %union.anon* %5727 to i64*
  %5728 = load i32, i32* %ECX.i1471
  %5729 = zext i32 %5728 to i64
  %5730 = load i64, i64* %PC.i1470
  %5731 = add i64 %5730, 3
  store i64 %5731, i64* %PC.i1470
  %5732 = shl i64 %5729, 32
  %5733 = ashr exact i64 %5732, 32
  store i64 %5733, i64* %RDX.i1472, align 8
  store %struct.Memory* %loadMem_43f313, %struct.Memory** %MEMORY
  %loadMem_43f316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 33
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %5736 to i64*
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5738 = getelementptr inbounds %struct.GPR, %struct.GPR* %5737, i32 0, i32 1
  %5739 = getelementptr inbounds %struct.Reg, %struct.Reg* %5738, i32 0, i32 0
  %RAX.i1468 = bitcast %union.anon* %5739 to i64*
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5741 = getelementptr inbounds %struct.GPR, %struct.GPR* %5740, i32 0, i32 7
  %5742 = getelementptr inbounds %struct.Reg, %struct.Reg* %5741, i32 0, i32 0
  %RDX.i1469 = bitcast %union.anon* %5742 to i64*
  %5743 = load i64, i64* %RAX.i1468
  %5744 = load i64, i64* %RDX.i1469
  %5745 = mul i64 %5744, 8
  %5746 = add i64 %5745, %5743
  %5747 = load i64, i64* %PC.i1467
  %5748 = add i64 %5747, 4
  store i64 %5748, i64* %PC.i1467
  %5749 = inttoptr i64 %5746 to i64*
  %5750 = load i64, i64* %5749
  store i64 %5750, i64* %RAX.i1468, align 8
  store %struct.Memory* %loadMem_43f316, %struct.Memory** %MEMORY
  %loadMem_43f31a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5752 = getelementptr inbounds %struct.GPR, %struct.GPR* %5751, i32 0, i32 33
  %5753 = getelementptr inbounds %struct.Reg, %struct.Reg* %5752, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %5753 to i64*
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 5
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %RCX.i1465 = bitcast %union.anon* %5756 to i64*
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5758 = getelementptr inbounds %struct.GPR, %struct.GPR* %5757, i32 0, i32 15
  %5759 = getelementptr inbounds %struct.Reg, %struct.Reg* %5758, i32 0, i32 0
  %RBP.i1466 = bitcast %union.anon* %5759 to i64*
  %5760 = load i64, i64* %RBP.i1466
  %5761 = sub i64 %5760, 68
  %5762 = load i64, i64* %PC.i1464
  %5763 = add i64 %5762, 3
  store i64 %5763, i64* %PC.i1464
  %5764 = inttoptr i64 %5761 to i32*
  %5765 = load i32, i32* %5764
  %5766 = zext i32 %5765 to i64
  store i64 %5766, i64* %RCX.i1465, align 8
  store %struct.Memory* %loadMem_43f31a, %struct.Memory** %MEMORY
  %loadMem_43f31d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5768 = getelementptr inbounds %struct.GPR, %struct.GPR* %5767, i32 0, i32 33
  %5769 = getelementptr inbounds %struct.Reg, %struct.Reg* %5768, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %5769 to i64*
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 5
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %RCX.i1462 = bitcast %union.anon* %5772 to i64*
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5774 = getelementptr inbounds %struct.GPR, %struct.GPR* %5773, i32 0, i32 15
  %5775 = getelementptr inbounds %struct.Reg, %struct.Reg* %5774, i32 0, i32 0
  %RBP.i1463 = bitcast %union.anon* %5775 to i64*
  %5776 = load i64, i64* %RCX.i1462
  %5777 = load i64, i64* %RBP.i1463
  %5778 = sub i64 %5777, 72
  %5779 = load i64, i64* %PC.i1461
  %5780 = add i64 %5779, 3
  store i64 %5780, i64* %PC.i1461
  %5781 = trunc i64 %5776 to i32
  %5782 = inttoptr i64 %5778 to i32*
  %5783 = load i32, i32* %5782
  %5784 = add i32 %5783, %5781
  %5785 = zext i32 %5784 to i64
  store i64 %5785, i64* %RCX.i1462, align 8
  %5786 = icmp ult i32 %5784, %5781
  %5787 = icmp ult i32 %5784, %5783
  %5788 = or i1 %5786, %5787
  %5789 = zext i1 %5788 to i8
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5789, i8* %5790, align 1
  %5791 = and i32 %5784, 255
  %5792 = call i32 @llvm.ctpop.i32(i32 %5791)
  %5793 = trunc i32 %5792 to i8
  %5794 = and i8 %5793, 1
  %5795 = xor i8 %5794, 1
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5795, i8* %5796, align 1
  %5797 = xor i32 %5783, %5781
  %5798 = xor i32 %5797, %5784
  %5799 = lshr i32 %5798, 4
  %5800 = trunc i32 %5799 to i8
  %5801 = and i8 %5800, 1
  %5802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5801, i8* %5802, align 1
  %5803 = icmp eq i32 %5784, 0
  %5804 = zext i1 %5803 to i8
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5804, i8* %5805, align 1
  %5806 = lshr i32 %5784, 31
  %5807 = trunc i32 %5806 to i8
  %5808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5807, i8* %5808, align 1
  %5809 = lshr i32 %5781, 31
  %5810 = lshr i32 %5783, 31
  %5811 = xor i32 %5806, %5809
  %5812 = xor i32 %5806, %5810
  %5813 = add i32 %5811, %5812
  %5814 = icmp eq i32 %5813, 2
  %5815 = zext i1 %5814 to i8
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5815, i8* %5816, align 1
  store %struct.Memory* %loadMem_43f31d, %struct.Memory** %MEMORY
  %loadMem_43f320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 5
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %ECX.i1459 = bitcast %union.anon* %5822 to i32*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 7
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %RDX.i1460 = bitcast %union.anon* %5825 to i64*
  %5826 = load i32, i32* %ECX.i1459
  %5827 = zext i32 %5826 to i64
  %5828 = load i64, i64* %PC.i1458
  %5829 = add i64 %5828, 3
  store i64 %5829, i64* %PC.i1458
  %5830 = shl i64 %5827, 32
  %5831 = ashr exact i64 %5830, 32
  store i64 %5831, i64* %RDX.i1460, align 8
  store %struct.Memory* %loadMem_43f320, %struct.Memory** %MEMORY
  %loadMem_43f323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5833 = getelementptr inbounds %struct.GPR, %struct.GPR* %5832, i32 0, i32 33
  %5834 = getelementptr inbounds %struct.Reg, %struct.Reg* %5833, i32 0, i32 0
  %PC.i1454 = bitcast %union.anon* %5834 to i64*
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5836 = getelementptr inbounds %struct.GPR, %struct.GPR* %5835, i32 0, i32 1
  %5837 = getelementptr inbounds %struct.Reg, %struct.Reg* %5836, i32 0, i32 0
  %RAX.i1455 = bitcast %union.anon* %5837 to i64*
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5839 = getelementptr inbounds %struct.GPR, %struct.GPR* %5838, i32 0, i32 5
  %5840 = getelementptr inbounds %struct.Reg, %struct.Reg* %5839, i32 0, i32 0
  %RCX.i1456 = bitcast %union.anon* %5840 to i64*
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 7
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %RDX.i1457 = bitcast %union.anon* %5843 to i64*
  %5844 = load i64, i64* %RAX.i1455
  %5845 = load i64, i64* %RDX.i1457
  %5846 = mul i64 %5845, 2
  %5847 = add i64 %5846, %5844
  %5848 = load i64, i64* %PC.i1454
  %5849 = add i64 %5848, 4
  store i64 %5849, i64* %PC.i1454
  %5850 = inttoptr i64 %5847 to i16*
  %5851 = load i16, i16* %5850
  %5852 = zext i16 %5851 to i64
  store i64 %5852, i64* %RCX.i1456, align 8
  store %struct.Memory* %loadMem_43f323, %struct.Memory** %MEMORY
  %loadMem_43f327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5854 = getelementptr inbounds %struct.GPR, %struct.GPR* %5853, i32 0, i32 33
  %5855 = getelementptr inbounds %struct.Reg, %struct.Reg* %5854, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %5855 to i64*
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5857 = getelementptr inbounds %struct.GPR, %struct.GPR* %5856, i32 0, i32 1
  %5858 = getelementptr inbounds %struct.Reg, %struct.Reg* %5857, i32 0, i32 0
  %RAX.i1453 = bitcast %union.anon* %5858 to i64*
  %5859 = load i64, i64* %PC.i1452
  %5860 = add i64 %5859, 8
  store i64 %5860, i64* %PC.i1452
  %5861 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5861, i64* %RAX.i1453, align 8
  store %struct.Memory* %loadMem_43f327, %struct.Memory** %MEMORY
  %loadMem_43f32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 33
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %5864 to i64*
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 1
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %RAX.i1451 = bitcast %union.anon* %5867 to i64*
  %5868 = load i64, i64* %RAX.i1451
  %5869 = load i64, i64* %PC.i1450
  %5870 = add i64 %5869, 6
  store i64 %5870, i64* %PC.i1450
  %5871 = add i64 12600, %5868
  store i64 %5871, i64* %RAX.i1451, align 8
  %5872 = icmp ult i64 %5871, %5868
  %5873 = icmp ult i64 %5871, 12600
  %5874 = or i1 %5872, %5873
  %5875 = zext i1 %5874 to i8
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5875, i8* %5876, align 1
  %5877 = trunc i64 %5871 to i32
  %5878 = and i32 %5877, 255
  %5879 = call i32 @llvm.ctpop.i32(i32 %5878)
  %5880 = trunc i32 %5879 to i8
  %5881 = and i8 %5880, 1
  %5882 = xor i8 %5881, 1
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5882, i8* %5883, align 1
  %5884 = xor i64 12600, %5868
  %5885 = xor i64 %5884, %5871
  %5886 = lshr i64 %5885, 4
  %5887 = trunc i64 %5886 to i8
  %5888 = and i8 %5887, 1
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5888, i8* %5889, align 1
  %5890 = icmp eq i64 %5871, 0
  %5891 = zext i1 %5890 to i8
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5891, i8* %5892, align 1
  %5893 = lshr i64 %5871, 63
  %5894 = trunc i64 %5893 to i8
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5894, i8* %5895, align 1
  %5896 = lshr i64 %5868, 63
  %5897 = xor i64 %5893, %5896
  %5898 = add i64 %5897, %5893
  %5899 = icmp eq i64 %5898, 2
  %5900 = zext i1 %5899 to i8
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5900, i8* %5901, align 1
  store %struct.Memory* %loadMem_43f32f, %struct.Memory** %MEMORY
  %loadMem_43f335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5903 = getelementptr inbounds %struct.GPR, %struct.GPR* %5902, i32 0, i32 33
  %5904 = getelementptr inbounds %struct.Reg, %struct.Reg* %5903, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %5904 to i64*
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5906 = getelementptr inbounds %struct.GPR, %struct.GPR* %5905, i32 0, i32 9
  %5907 = getelementptr inbounds %struct.Reg, %struct.Reg* %5906, i32 0, i32 0
  %RSI.i1448 = bitcast %union.anon* %5907 to i64*
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 15
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %5910 to i64*
  %5911 = load i64, i64* %RBP.i1449
  %5912 = sub i64 %5911, 72
  %5913 = load i64, i64* %PC.i1447
  %5914 = add i64 %5913, 3
  store i64 %5914, i64* %PC.i1447
  %5915 = inttoptr i64 %5912 to i32*
  %5916 = load i32, i32* %5915
  %5917 = zext i32 %5916 to i64
  store i64 %5917, i64* %RSI.i1448, align 8
  store %struct.Memory* %loadMem_43f335, %struct.Memory** %MEMORY
  %loadMem_43f338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 33
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %5920 to i64*
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 9
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %RSI.i1445 = bitcast %union.anon* %5923 to i64*
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 15
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %5926 to i64*
  %5927 = load i64, i64* %RSI.i1445
  %5928 = load i64, i64* %RBP.i1446
  %5929 = sub i64 %5928, 60
  %5930 = load i64, i64* %PC.i1444
  %5931 = add i64 %5930, 3
  store i64 %5931, i64* %PC.i1444
  %5932 = trunc i64 %5927 to i32
  %5933 = inttoptr i64 %5929 to i32*
  %5934 = load i32, i32* %5933
  %5935 = add i32 %5934, %5932
  %5936 = zext i32 %5935 to i64
  store i64 %5936, i64* %RSI.i1445, align 8
  %5937 = icmp ult i32 %5935, %5932
  %5938 = icmp ult i32 %5935, %5934
  %5939 = or i1 %5937, %5938
  %5940 = zext i1 %5939 to i8
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5940, i8* %5941, align 1
  %5942 = and i32 %5935, 255
  %5943 = call i32 @llvm.ctpop.i32(i32 %5942)
  %5944 = trunc i32 %5943 to i8
  %5945 = and i8 %5944, 1
  %5946 = xor i8 %5945, 1
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5946, i8* %5947, align 1
  %5948 = xor i32 %5934, %5932
  %5949 = xor i32 %5948, %5935
  %5950 = lshr i32 %5949, 4
  %5951 = trunc i32 %5950 to i8
  %5952 = and i8 %5951, 1
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5952, i8* %5953, align 1
  %5954 = icmp eq i32 %5935, 0
  %5955 = zext i1 %5954 to i8
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5955, i8* %5956, align 1
  %5957 = lshr i32 %5935, 31
  %5958 = trunc i32 %5957 to i8
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5958, i8* %5959, align 1
  %5960 = lshr i32 %5932, 31
  %5961 = lshr i32 %5934, 31
  %5962 = xor i32 %5957, %5960
  %5963 = xor i32 %5957, %5961
  %5964 = add i32 %5962, %5963
  %5965 = icmp eq i32 %5964, 2
  %5966 = zext i1 %5965 to i8
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5966, i8* %5967, align 1
  store %struct.Memory* %loadMem_43f338, %struct.Memory** %MEMORY
  %loadMem_43f33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 33
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %5970 to i64*
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 9
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %ESI.i1442 = bitcast %union.anon* %5973 to i32*
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5975 = getelementptr inbounds %struct.GPR, %struct.GPR* %5974, i32 0, i32 7
  %5976 = getelementptr inbounds %struct.Reg, %struct.Reg* %5975, i32 0, i32 0
  %RDX.i1443 = bitcast %union.anon* %5976 to i64*
  %5977 = load i32, i32* %ESI.i1442
  %5978 = zext i32 %5977 to i64
  %5979 = load i64, i64* %PC.i1441
  %5980 = add i64 %5979, 3
  store i64 %5980, i64* %PC.i1441
  %5981 = shl i64 %5978, 32
  %5982 = ashr exact i64 %5981, 32
  store i64 %5982, i64* %RDX.i1443, align 8
  store %struct.Memory* %loadMem_43f33b, %struct.Memory** %MEMORY
  %loadMem_43f33e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 33
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %5985 to i64*
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 7
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %RDX.i1440 = bitcast %union.anon* %5988 to i64*
  %5989 = load i64, i64* %RDX.i1440
  %5990 = load i64, i64* %PC.i1439
  %5991 = add i64 %5990, 4
  store i64 %5991, i64* %PC.i1439
  %5992 = shl i64 %5989, 4
  %5993 = icmp slt i64 %5992, 0
  %5994 = shl i64 %5992, 1
  store i64 %5994, i64* %RDX.i1440, align 8
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5996 = zext i1 %5993 to i8
  store i8 %5996, i8* %5995, align 1
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5998 = trunc i64 %5994 to i32
  %5999 = and i32 %5998, 254
  %6000 = call i32 @llvm.ctpop.i32(i32 %5999)
  %6001 = trunc i32 %6000 to i8
  %6002 = and i8 %6001, 1
  %6003 = xor i8 %6002, 1
  store i8 %6003, i8* %5997, align 1
  %6004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6004, align 1
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6006 = icmp eq i64 %5994, 0
  %6007 = zext i1 %6006 to i8
  store i8 %6007, i8* %6005, align 1
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6009 = lshr i64 %5994, 63
  %6010 = trunc i64 %6009 to i8
  store i8 %6010, i8* %6008, align 1
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6011, align 1
  store %struct.Memory* %loadMem_43f33e, %struct.Memory** %MEMORY
  %loadMem_43f342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 33
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %6014 to i64*
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 1
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %RAX.i1437 = bitcast %union.anon* %6017 to i64*
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 7
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %RDX.i1438 = bitcast %union.anon* %6020 to i64*
  %6021 = load i64, i64* %RAX.i1437
  %6022 = load i64, i64* %RDX.i1438
  %6023 = load i64, i64* %PC.i1436
  %6024 = add i64 %6023, 3
  store i64 %6024, i64* %PC.i1436
  %6025 = add i64 %6022, %6021
  store i64 %6025, i64* %RAX.i1437, align 8
  %6026 = icmp ult i64 %6025, %6021
  %6027 = icmp ult i64 %6025, %6022
  %6028 = or i1 %6026, %6027
  %6029 = zext i1 %6028 to i8
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6029, i8* %6030, align 1
  %6031 = trunc i64 %6025 to i32
  %6032 = and i32 %6031, 255
  %6033 = call i32 @llvm.ctpop.i32(i32 %6032)
  %6034 = trunc i32 %6033 to i8
  %6035 = and i8 %6034, 1
  %6036 = xor i8 %6035, 1
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6036, i8* %6037, align 1
  %6038 = xor i64 %6022, %6021
  %6039 = xor i64 %6038, %6025
  %6040 = lshr i64 %6039, 4
  %6041 = trunc i64 %6040 to i8
  %6042 = and i8 %6041, 1
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6042, i8* %6043, align 1
  %6044 = icmp eq i64 %6025, 0
  %6045 = zext i1 %6044 to i8
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6045, i8* %6046, align 1
  %6047 = lshr i64 %6025, 63
  %6048 = trunc i64 %6047 to i8
  %6049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6048, i8* %6049, align 1
  %6050 = lshr i64 %6021, 63
  %6051 = lshr i64 %6022, 63
  %6052 = xor i64 %6047, %6050
  %6053 = xor i64 %6047, %6051
  %6054 = add i64 %6052, %6053
  %6055 = icmp eq i64 %6054, 2
  %6056 = zext i1 %6055 to i8
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6056, i8* %6057, align 1
  store %struct.Memory* %loadMem_43f342, %struct.Memory** %MEMORY
  %loadMem_43f345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6059 = getelementptr inbounds %struct.GPR, %struct.GPR* %6058, i32 0, i32 33
  %6060 = getelementptr inbounds %struct.Reg, %struct.Reg* %6059, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %6060 to i64*
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6062 = getelementptr inbounds %struct.GPR, %struct.GPR* %6061, i32 0, i32 9
  %6063 = getelementptr inbounds %struct.Reg, %struct.Reg* %6062, i32 0, i32 0
  %RSI.i1434 = bitcast %union.anon* %6063 to i64*
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 15
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %RBP.i1435 = bitcast %union.anon* %6066 to i64*
  %6067 = load i64, i64* %RBP.i1435
  %6068 = sub i64 %6067, 76
  %6069 = load i64, i64* %PC.i1433
  %6070 = add i64 %6069, 3
  store i64 %6070, i64* %PC.i1433
  %6071 = inttoptr i64 %6068 to i32*
  %6072 = load i32, i32* %6071
  %6073 = zext i32 %6072 to i64
  store i64 %6073, i64* %RSI.i1434, align 8
  store %struct.Memory* %loadMem_43f345, %struct.Memory** %MEMORY
  %loadMem_43f348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 33
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %6076 to i64*
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 9
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %RSI.i1431 = bitcast %union.anon* %6079 to i64*
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 15
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %RBP.i1432 = bitcast %union.anon* %6082 to i64*
  %6083 = load i64, i64* %RSI.i1431
  %6084 = load i64, i64* %RBP.i1432
  %6085 = sub i64 %6084, 56
  %6086 = load i64, i64* %PC.i1430
  %6087 = add i64 %6086, 3
  store i64 %6087, i64* %PC.i1430
  %6088 = trunc i64 %6083 to i32
  %6089 = inttoptr i64 %6085 to i32*
  %6090 = load i32, i32* %6089
  %6091 = add i32 %6090, %6088
  %6092 = zext i32 %6091 to i64
  store i64 %6092, i64* %RSI.i1431, align 8
  %6093 = icmp ult i32 %6091, %6088
  %6094 = icmp ult i32 %6091, %6090
  %6095 = or i1 %6093, %6094
  %6096 = zext i1 %6095 to i8
  %6097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6096, i8* %6097, align 1
  %6098 = and i32 %6091, 255
  %6099 = call i32 @llvm.ctpop.i32(i32 %6098)
  %6100 = trunc i32 %6099 to i8
  %6101 = and i8 %6100, 1
  %6102 = xor i8 %6101, 1
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6102, i8* %6103, align 1
  %6104 = xor i32 %6090, %6088
  %6105 = xor i32 %6104, %6091
  %6106 = lshr i32 %6105, 4
  %6107 = trunc i32 %6106 to i8
  %6108 = and i8 %6107, 1
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6108, i8* %6109, align 1
  %6110 = icmp eq i32 %6091, 0
  %6111 = zext i1 %6110 to i8
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6111, i8* %6112, align 1
  %6113 = lshr i32 %6091, 31
  %6114 = trunc i32 %6113 to i8
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6114, i8* %6115, align 1
  %6116 = lshr i32 %6088, 31
  %6117 = lshr i32 %6090, 31
  %6118 = xor i32 %6113, %6116
  %6119 = xor i32 %6113, %6117
  %6120 = add i32 %6118, %6119
  %6121 = icmp eq i32 %6120, 2
  %6122 = zext i1 %6121 to i8
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6122, i8* %6123, align 1
  store %struct.Memory* %loadMem_43f348, %struct.Memory** %MEMORY
  %loadMem_43f34b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6125 = getelementptr inbounds %struct.GPR, %struct.GPR* %6124, i32 0, i32 33
  %6126 = getelementptr inbounds %struct.Reg, %struct.Reg* %6125, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %6126 to i64*
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 9
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %ESI.i1428 = bitcast %union.anon* %6129 to i32*
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 7
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %RDX.i1429 = bitcast %union.anon* %6132 to i64*
  %6133 = load i32, i32* %ESI.i1428
  %6134 = zext i32 %6133 to i64
  %6135 = load i64, i64* %PC.i1427
  %6136 = add i64 %6135, 3
  store i64 %6136, i64* %PC.i1427
  %6137 = shl i64 %6134, 32
  %6138 = ashr exact i64 %6137, 32
  store i64 %6138, i64* %RDX.i1429, align 8
  store %struct.Memory* %loadMem_43f34b, %struct.Memory** %MEMORY
  %loadMem_43f34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6140 = getelementptr inbounds %struct.GPR, %struct.GPR* %6139, i32 0, i32 33
  %6141 = getelementptr inbounds %struct.Reg, %struct.Reg* %6140, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %6141 to i64*
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6143 = getelementptr inbounds %struct.GPR, %struct.GPR* %6142, i32 0, i32 1
  %6144 = getelementptr inbounds %struct.Reg, %struct.Reg* %6143, i32 0, i32 0
  %RAX.i1424 = bitcast %union.anon* %6144 to i64*
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 7
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %RDX.i1425 = bitcast %union.anon* %6147 to i64*
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 9
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %RSI.i1426 = bitcast %union.anon* %6150 to i64*
  %6151 = load i64, i64* %RAX.i1424
  %6152 = load i64, i64* %RDX.i1425
  %6153 = mul i64 %6152, 2
  %6154 = add i64 %6153, %6151
  %6155 = load i64, i64* %PC.i1423
  %6156 = add i64 %6155, 4
  store i64 %6156, i64* %PC.i1423
  %6157 = inttoptr i64 %6154 to i16*
  %6158 = load i16, i16* %6157
  %6159 = zext i16 %6158 to i64
  store i64 %6159, i64* %RSI.i1426, align 8
  store %struct.Memory* %loadMem_43f34e, %struct.Memory** %MEMORY
  %loadMem_43f352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6161 = getelementptr inbounds %struct.GPR, %struct.GPR* %6160, i32 0, i32 33
  %6162 = getelementptr inbounds %struct.Reg, %struct.Reg* %6161, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %6162 to i64*
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6164 = getelementptr inbounds %struct.GPR, %struct.GPR* %6163, i32 0, i32 9
  %6165 = getelementptr inbounds %struct.Reg, %struct.Reg* %6164, i32 0, i32 0
  %ESI.i1421 = bitcast %union.anon* %6165 to i32*
  %6166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6167 = getelementptr inbounds %struct.GPR, %struct.GPR* %6166, i32 0, i32 5
  %6168 = getelementptr inbounds %struct.Reg, %struct.Reg* %6167, i32 0, i32 0
  %RCX.i1422 = bitcast %union.anon* %6168 to i64*
  %6169 = load i64, i64* %RCX.i1422
  %6170 = load i32, i32* %ESI.i1421
  %6171 = zext i32 %6170 to i64
  %6172 = load i64, i64* %PC.i1420
  %6173 = add i64 %6172, 2
  store i64 %6173, i64* %PC.i1420
  %6174 = trunc i64 %6169 to i32
  %6175 = sub i32 %6174, %6170
  %6176 = zext i32 %6175 to i64
  store i64 %6176, i64* %RCX.i1422, align 8
  %6177 = icmp ult i32 %6174, %6170
  %6178 = zext i1 %6177 to i8
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6178, i8* %6179, align 1
  %6180 = and i32 %6175, 255
  %6181 = call i32 @llvm.ctpop.i32(i32 %6180)
  %6182 = trunc i32 %6181 to i8
  %6183 = and i8 %6182, 1
  %6184 = xor i8 %6183, 1
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6184, i8* %6185, align 1
  %6186 = xor i64 %6171, %6169
  %6187 = trunc i64 %6186 to i32
  %6188 = xor i32 %6187, %6175
  %6189 = lshr i32 %6188, 4
  %6190 = trunc i32 %6189 to i8
  %6191 = and i8 %6190, 1
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6191, i8* %6192, align 1
  %6193 = icmp eq i32 %6175, 0
  %6194 = zext i1 %6193 to i8
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6194, i8* %6195, align 1
  %6196 = lshr i32 %6175, 31
  %6197 = trunc i32 %6196 to i8
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6197, i8* %6198, align 1
  %6199 = lshr i32 %6174, 31
  %6200 = lshr i32 %6170, 31
  %6201 = xor i32 %6200, %6199
  %6202 = xor i32 %6196, %6199
  %6203 = add i32 %6202, %6201
  %6204 = icmp eq i32 %6203, 2
  %6205 = zext i1 %6204 to i8
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6205, i8* %6206, align 1
  store %struct.Memory* %loadMem_43f352, %struct.Memory** %MEMORY
  %loadMem_43f354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6208 = getelementptr inbounds %struct.GPR, %struct.GPR* %6207, i32 0, i32 33
  %6209 = getelementptr inbounds %struct.Reg, %struct.Reg* %6208, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %6209 to i64*
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6211 = getelementptr inbounds %struct.GPR, %struct.GPR* %6210, i32 0, i32 1
  %6212 = getelementptr inbounds %struct.Reg, %struct.Reg* %6211, i32 0, i32 0
  %RAX.i1419 = bitcast %union.anon* %6212 to i64*
  %6213 = load i64, i64* %PC.i1418
  %6214 = add i64 %6213, 8
  store i64 %6214, i64* %PC.i1418
  %6215 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6215, i64* %RAX.i1419, align 8
  store %struct.Memory* %loadMem_43f354, %struct.Memory** %MEMORY
  %loadMem_43f35c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6217 = getelementptr inbounds %struct.GPR, %struct.GPR* %6216, i32 0, i32 33
  %6218 = getelementptr inbounds %struct.Reg, %struct.Reg* %6217, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %6218 to i64*
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6220 = getelementptr inbounds %struct.GPR, %struct.GPR* %6219, i32 0, i32 1
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %RAX.i1417 = bitcast %union.anon* %6221 to i64*
  %6222 = load i64, i64* %RAX.i1417
  %6223 = load i64, i64* %PC.i1416
  %6224 = add i64 %6223, 6
  store i64 %6224, i64* %PC.i1416
  %6225 = add i64 13112, %6222
  store i64 %6225, i64* %RAX.i1417, align 8
  %6226 = icmp ult i64 %6225, %6222
  %6227 = icmp ult i64 %6225, 13112
  %6228 = or i1 %6226, %6227
  %6229 = zext i1 %6228 to i8
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6229, i8* %6230, align 1
  %6231 = trunc i64 %6225 to i32
  %6232 = and i32 %6231, 255
  %6233 = call i32 @llvm.ctpop.i32(i32 %6232)
  %6234 = trunc i32 %6233 to i8
  %6235 = and i8 %6234, 1
  %6236 = xor i8 %6235, 1
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6236, i8* %6237, align 1
  %6238 = xor i64 13112, %6222
  %6239 = xor i64 %6238, %6225
  %6240 = lshr i64 %6239, 4
  %6241 = trunc i64 %6240 to i8
  %6242 = and i8 %6241, 1
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6242, i8* %6243, align 1
  %6244 = icmp eq i64 %6225, 0
  %6245 = zext i1 %6244 to i8
  %6246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6245, i8* %6246, align 1
  %6247 = lshr i64 %6225, 63
  %6248 = trunc i64 %6247 to i8
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6248, i8* %6249, align 1
  %6250 = lshr i64 %6222, 63
  %6251 = xor i64 %6247, %6250
  %6252 = add i64 %6251, %6247
  %6253 = icmp eq i64 %6252, 2
  %6254 = zext i1 %6253 to i8
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6254, i8* %6255, align 1
  store %struct.Memory* %loadMem_43f35c, %struct.Memory** %MEMORY
  %loadMem_43f362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6257 = getelementptr inbounds %struct.GPR, %struct.GPR* %6256, i32 0, i32 33
  %6258 = getelementptr inbounds %struct.Reg, %struct.Reg* %6257, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %6258 to i64*
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6260 = getelementptr inbounds %struct.GPR, %struct.GPR* %6259, i32 0, i32 7
  %6261 = getelementptr inbounds %struct.Reg, %struct.Reg* %6260, i32 0, i32 0
  %RDX.i1414 = bitcast %union.anon* %6261 to i64*
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6263 = getelementptr inbounds %struct.GPR, %struct.GPR* %6262, i32 0, i32 15
  %6264 = getelementptr inbounds %struct.Reg, %struct.Reg* %6263, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %6264 to i64*
  %6265 = load i64, i64* %RBP.i1415
  %6266 = sub i64 %6265, 72
  %6267 = load i64, i64* %PC.i1413
  %6268 = add i64 %6267, 4
  store i64 %6268, i64* %PC.i1413
  %6269 = inttoptr i64 %6266 to i32*
  %6270 = load i32, i32* %6269
  %6271 = sext i32 %6270 to i64
  store i64 %6271, i64* %RDX.i1414, align 8
  store %struct.Memory* %loadMem_43f362, %struct.Memory** %MEMORY
  %loadMem_43f366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 33
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %6274 to i64*
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6276 = getelementptr inbounds %struct.GPR, %struct.GPR* %6275, i32 0, i32 7
  %6277 = getelementptr inbounds %struct.Reg, %struct.Reg* %6276, i32 0, i32 0
  %RDX.i1412 = bitcast %union.anon* %6277 to i64*
  %6278 = load i64, i64* %RDX.i1412
  %6279 = load i64, i64* %PC.i1411
  %6280 = add i64 %6279, 4
  store i64 %6280, i64* %PC.i1411
  %6281 = shl i64 %6278, 5
  %6282 = icmp slt i64 %6281, 0
  %6283 = shl i64 %6281, 1
  store i64 %6283, i64* %RDX.i1412, align 8
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6285 = zext i1 %6282 to i8
  store i8 %6285, i8* %6284, align 1
  %6286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6287 = trunc i64 %6283 to i32
  %6288 = and i32 %6287, 254
  %6289 = call i32 @llvm.ctpop.i32(i32 %6288)
  %6290 = trunc i32 %6289 to i8
  %6291 = and i8 %6290, 1
  %6292 = xor i8 %6291, 1
  store i8 %6292, i8* %6286, align 1
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6293, align 1
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6295 = icmp eq i64 %6283, 0
  %6296 = zext i1 %6295 to i8
  store i8 %6296, i8* %6294, align 1
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6298 = lshr i64 %6283, 63
  %6299 = trunc i64 %6298 to i8
  store i8 %6299, i8* %6297, align 1
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6300, align 1
  store %struct.Memory* %loadMem_43f366, %struct.Memory** %MEMORY
  %loadMem_43f36a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6302 = getelementptr inbounds %struct.GPR, %struct.GPR* %6301, i32 0, i32 33
  %6303 = getelementptr inbounds %struct.Reg, %struct.Reg* %6302, i32 0, i32 0
  %PC.i1408 = bitcast %union.anon* %6303 to i64*
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6305 = getelementptr inbounds %struct.GPR, %struct.GPR* %6304, i32 0, i32 1
  %6306 = getelementptr inbounds %struct.Reg, %struct.Reg* %6305, i32 0, i32 0
  %RAX.i1409 = bitcast %union.anon* %6306 to i64*
  %6307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6308 = getelementptr inbounds %struct.GPR, %struct.GPR* %6307, i32 0, i32 7
  %6309 = getelementptr inbounds %struct.Reg, %struct.Reg* %6308, i32 0, i32 0
  %RDX.i1410 = bitcast %union.anon* %6309 to i64*
  %6310 = load i64, i64* %RAX.i1409
  %6311 = load i64, i64* %RDX.i1410
  %6312 = load i64, i64* %PC.i1408
  %6313 = add i64 %6312, 3
  store i64 %6313, i64* %PC.i1408
  %6314 = add i64 %6311, %6310
  store i64 %6314, i64* %RAX.i1409, align 8
  %6315 = icmp ult i64 %6314, %6310
  %6316 = icmp ult i64 %6314, %6311
  %6317 = or i1 %6315, %6316
  %6318 = zext i1 %6317 to i8
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6318, i8* %6319, align 1
  %6320 = trunc i64 %6314 to i32
  %6321 = and i32 %6320, 255
  %6322 = call i32 @llvm.ctpop.i32(i32 %6321)
  %6323 = trunc i32 %6322 to i8
  %6324 = and i8 %6323, 1
  %6325 = xor i8 %6324, 1
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6325, i8* %6326, align 1
  %6327 = xor i64 %6311, %6310
  %6328 = xor i64 %6327, %6314
  %6329 = lshr i64 %6328, 4
  %6330 = trunc i64 %6329 to i8
  %6331 = and i8 %6330, 1
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6331, i8* %6332, align 1
  %6333 = icmp eq i64 %6314, 0
  %6334 = zext i1 %6333 to i8
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6334, i8* %6335, align 1
  %6336 = lshr i64 %6314, 63
  %6337 = trunc i64 %6336 to i8
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6337, i8* %6338, align 1
  %6339 = lshr i64 %6310, 63
  %6340 = lshr i64 %6311, 63
  %6341 = xor i64 %6336, %6339
  %6342 = xor i64 %6336, %6340
  %6343 = add i64 %6341, %6342
  %6344 = icmp eq i64 %6343, 2
  %6345 = zext i1 %6344 to i8
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6345, i8* %6346, align 1
  store %struct.Memory* %loadMem_43f36a, %struct.Memory** %MEMORY
  %loadMem_43f36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6348 = getelementptr inbounds %struct.GPR, %struct.GPR* %6347, i32 0, i32 33
  %6349 = getelementptr inbounds %struct.Reg, %struct.Reg* %6348, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %6349 to i64*
  %6350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6351 = getelementptr inbounds %struct.GPR, %struct.GPR* %6350, i32 0, i32 7
  %6352 = getelementptr inbounds %struct.Reg, %struct.Reg* %6351, i32 0, i32 0
  %RDX.i1406 = bitcast %union.anon* %6352 to i64*
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6354 = getelementptr inbounds %struct.GPR, %struct.GPR* %6353, i32 0, i32 15
  %6355 = getelementptr inbounds %struct.Reg, %struct.Reg* %6354, i32 0, i32 0
  %RBP.i1407 = bitcast %union.anon* %6355 to i64*
  %6356 = load i64, i64* %RBP.i1407
  %6357 = sub i64 %6356, 76
  %6358 = load i64, i64* %PC.i1405
  %6359 = add i64 %6358, 4
  store i64 %6359, i64* %PC.i1405
  %6360 = inttoptr i64 %6357 to i32*
  %6361 = load i32, i32* %6360
  %6362 = sext i32 %6361 to i64
  store i64 %6362, i64* %RDX.i1406, align 8
  store %struct.Memory* %loadMem_43f36d, %struct.Memory** %MEMORY
  %loadMem_43f371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6364 = getelementptr inbounds %struct.GPR, %struct.GPR* %6363, i32 0, i32 33
  %6365 = getelementptr inbounds %struct.Reg, %struct.Reg* %6364, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %6365 to i64*
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6367 = getelementptr inbounds %struct.GPR, %struct.GPR* %6366, i32 0, i32 5
  %6368 = getelementptr inbounds %struct.Reg, %struct.Reg* %6367, i32 0, i32 0
  %ECX.i1402 = bitcast %union.anon* %6368 to i32*
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 1
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %RAX.i1403 = bitcast %union.anon* %6371 to i64*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 7
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %RDX.i1404 = bitcast %union.anon* %6374 to i64*
  %6375 = load i64, i64* %RAX.i1403
  %6376 = load i64, i64* %RDX.i1404
  %6377 = mul i64 %6376, 4
  %6378 = add i64 %6377, %6375
  %6379 = load i32, i32* %ECX.i1402
  %6380 = zext i32 %6379 to i64
  %6381 = load i64, i64* %PC.i1401
  %6382 = add i64 %6381, 3
  store i64 %6382, i64* %PC.i1401
  %6383 = inttoptr i64 %6378 to i32*
  store i32 %6379, i32* %6383
  store %struct.Memory* %loadMem_43f371, %struct.Memory** %MEMORY
  %loadMem_43f374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6385 = getelementptr inbounds %struct.GPR, %struct.GPR* %6384, i32 0, i32 33
  %6386 = getelementptr inbounds %struct.Reg, %struct.Reg* %6385, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %6386 to i64*
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 1
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %RAX.i1399 = bitcast %union.anon* %6389 to i64*
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6391 = getelementptr inbounds %struct.GPR, %struct.GPR* %6390, i32 0, i32 15
  %6392 = getelementptr inbounds %struct.Reg, %struct.Reg* %6391, i32 0, i32 0
  %RBP.i1400 = bitcast %union.anon* %6392 to i64*
  %6393 = load i64, i64* %RBP.i1400
  %6394 = sub i64 %6393, 72
  %6395 = load i64, i64* %PC.i1398
  %6396 = add i64 %6395, 3
  store i64 %6396, i64* %PC.i1398
  %6397 = inttoptr i64 %6394 to i32*
  %6398 = load i32, i32* %6397
  %6399 = zext i32 %6398 to i64
  store i64 %6399, i64* %RAX.i1399, align 8
  store %struct.Memory* %loadMem_43f374, %struct.Memory** %MEMORY
  %loadMem_43f377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6401 = getelementptr inbounds %struct.GPR, %struct.GPR* %6400, i32 0, i32 33
  %6402 = getelementptr inbounds %struct.Reg, %struct.Reg* %6401, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %6402 to i64*
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6404 = getelementptr inbounds %struct.GPR, %struct.GPR* %6403, i32 0, i32 1
  %6405 = getelementptr inbounds %struct.Reg, %struct.Reg* %6404, i32 0, i32 0
  %RAX.i1397 = bitcast %union.anon* %6405 to i64*
  %6406 = load i64, i64* %RAX.i1397
  %6407 = load i64, i64* %PC.i1396
  %6408 = add i64 %6407, 3
  store i64 %6408, i64* %PC.i1396
  %6409 = trunc i64 %6406 to i32
  %6410 = add i32 1, %6409
  %6411 = zext i32 %6410 to i64
  store i64 %6411, i64* %RAX.i1397, align 8
  %6412 = icmp ult i32 %6410, %6409
  %6413 = icmp ult i32 %6410, 1
  %6414 = or i1 %6412, %6413
  %6415 = zext i1 %6414 to i8
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6415, i8* %6416, align 1
  %6417 = and i32 %6410, 255
  %6418 = call i32 @llvm.ctpop.i32(i32 %6417)
  %6419 = trunc i32 %6418 to i8
  %6420 = and i8 %6419, 1
  %6421 = xor i8 %6420, 1
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6421, i8* %6422, align 1
  %6423 = xor i64 1, %6406
  %6424 = trunc i64 %6423 to i32
  %6425 = xor i32 %6424, %6410
  %6426 = lshr i32 %6425, 4
  %6427 = trunc i32 %6426 to i8
  %6428 = and i8 %6427, 1
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6428, i8* %6429, align 1
  %6430 = icmp eq i32 %6410, 0
  %6431 = zext i1 %6430 to i8
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6431, i8* %6432, align 1
  %6433 = lshr i32 %6410, 31
  %6434 = trunc i32 %6433 to i8
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6434, i8* %6435, align 1
  %6436 = lshr i32 %6409, 31
  %6437 = xor i32 %6433, %6436
  %6438 = add i32 %6437, %6433
  %6439 = icmp eq i32 %6438, 2
  %6440 = zext i1 %6439 to i8
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6440, i8* %6441, align 1
  store %struct.Memory* %loadMem_43f377, %struct.Memory** %MEMORY
  %loadMem_43f37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6443 = getelementptr inbounds %struct.GPR, %struct.GPR* %6442, i32 0, i32 33
  %6444 = getelementptr inbounds %struct.Reg, %struct.Reg* %6443, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %6444 to i64*
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6446 = getelementptr inbounds %struct.GPR, %struct.GPR* %6445, i32 0, i32 1
  %6447 = getelementptr inbounds %struct.Reg, %struct.Reg* %6446, i32 0, i32 0
  %EAX.i1394 = bitcast %union.anon* %6447 to i32*
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 15
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %RBP.i1395 = bitcast %union.anon* %6450 to i64*
  %6451 = load i64, i64* %RBP.i1395
  %6452 = sub i64 %6451, 72
  %6453 = load i32, i32* %EAX.i1394
  %6454 = zext i32 %6453 to i64
  %6455 = load i64, i64* %PC.i1393
  %6456 = add i64 %6455, 3
  store i64 %6456, i64* %PC.i1393
  %6457 = inttoptr i64 %6452 to i32*
  store i32 %6453, i32* %6457
  store %struct.Memory* %loadMem_43f37a, %struct.Memory** %MEMORY
  %loadMem_43f37d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 33
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %6460 to i64*
  %6461 = load i64, i64* %PC.i1392
  %6462 = add i64 %6461, -130
  %6463 = load i64, i64* %PC.i1392
  %6464 = add i64 %6463, 5
  store i64 %6464, i64* %PC.i1392
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6462, i64* %6465, align 8
  store %struct.Memory* %loadMem_43f37d, %struct.Memory** %MEMORY
  br label %block_.L_43f2fb

block_.L_43f382:                                  ; preds = %block_.L_43f2fb
  %loadMem_43f382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6467 = getelementptr inbounds %struct.GPR, %struct.GPR* %6466, i32 0, i32 33
  %6468 = getelementptr inbounds %struct.Reg, %struct.Reg* %6467, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %6468 to i64*
  %6469 = load i64, i64* %PC.i1391
  %6470 = add i64 %6469, 5
  %6471 = load i64, i64* %PC.i1391
  %6472 = add i64 %6471, 5
  store i64 %6472, i64* %PC.i1391
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6470, i64* %6473, align 8
  store %struct.Memory* %loadMem_43f382, %struct.Memory** %MEMORY
  br label %block_.L_43f387

block_.L_43f387:                                  ; preds = %block_.L_43f382
  %loadMem_43f387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 33
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %6476 to i64*
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6478 = getelementptr inbounds %struct.GPR, %struct.GPR* %6477, i32 0, i32 1
  %6479 = getelementptr inbounds %struct.Reg, %struct.Reg* %6478, i32 0, i32 0
  %RAX.i1389 = bitcast %union.anon* %6479 to i64*
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6481 = getelementptr inbounds %struct.GPR, %struct.GPR* %6480, i32 0, i32 15
  %6482 = getelementptr inbounds %struct.Reg, %struct.Reg* %6481, i32 0, i32 0
  %RBP.i1390 = bitcast %union.anon* %6482 to i64*
  %6483 = load i64, i64* %RBP.i1390
  %6484 = sub i64 %6483, 76
  %6485 = load i64, i64* %PC.i1388
  %6486 = add i64 %6485, 3
  store i64 %6486, i64* %PC.i1388
  %6487 = inttoptr i64 %6484 to i32*
  %6488 = load i32, i32* %6487
  %6489 = zext i32 %6488 to i64
  store i64 %6489, i64* %RAX.i1389, align 8
  store %struct.Memory* %loadMem_43f387, %struct.Memory** %MEMORY
  %loadMem_43f38a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6491 = getelementptr inbounds %struct.GPR, %struct.GPR* %6490, i32 0, i32 33
  %6492 = getelementptr inbounds %struct.Reg, %struct.Reg* %6491, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %6492 to i64*
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6494 = getelementptr inbounds %struct.GPR, %struct.GPR* %6493, i32 0, i32 1
  %6495 = getelementptr inbounds %struct.Reg, %struct.Reg* %6494, i32 0, i32 0
  %RAX.i1387 = bitcast %union.anon* %6495 to i64*
  %6496 = load i64, i64* %RAX.i1387
  %6497 = load i64, i64* %PC.i1386
  %6498 = add i64 %6497, 3
  store i64 %6498, i64* %PC.i1386
  %6499 = trunc i64 %6496 to i32
  %6500 = add i32 1, %6499
  %6501 = zext i32 %6500 to i64
  store i64 %6501, i64* %RAX.i1387, align 8
  %6502 = icmp ult i32 %6500, %6499
  %6503 = icmp ult i32 %6500, 1
  %6504 = or i1 %6502, %6503
  %6505 = zext i1 %6504 to i8
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6505, i8* %6506, align 1
  %6507 = and i32 %6500, 255
  %6508 = call i32 @llvm.ctpop.i32(i32 %6507)
  %6509 = trunc i32 %6508 to i8
  %6510 = and i8 %6509, 1
  %6511 = xor i8 %6510, 1
  %6512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6511, i8* %6512, align 1
  %6513 = xor i64 1, %6496
  %6514 = trunc i64 %6513 to i32
  %6515 = xor i32 %6514, %6500
  %6516 = lshr i32 %6515, 4
  %6517 = trunc i32 %6516 to i8
  %6518 = and i8 %6517, 1
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6518, i8* %6519, align 1
  %6520 = icmp eq i32 %6500, 0
  %6521 = zext i1 %6520 to i8
  %6522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6521, i8* %6522, align 1
  %6523 = lshr i32 %6500, 31
  %6524 = trunc i32 %6523 to i8
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6524, i8* %6525, align 1
  %6526 = lshr i32 %6499, 31
  %6527 = xor i32 %6523, %6526
  %6528 = add i32 %6527, %6523
  %6529 = icmp eq i32 %6528, 2
  %6530 = zext i1 %6529 to i8
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6530, i8* %6531, align 1
  store %struct.Memory* %loadMem_43f38a, %struct.Memory** %MEMORY
  %loadMem_43f38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6533 = getelementptr inbounds %struct.GPR, %struct.GPR* %6532, i32 0, i32 33
  %6534 = getelementptr inbounds %struct.Reg, %struct.Reg* %6533, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %6534 to i64*
  %6535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6536 = getelementptr inbounds %struct.GPR, %struct.GPR* %6535, i32 0, i32 1
  %6537 = getelementptr inbounds %struct.Reg, %struct.Reg* %6536, i32 0, i32 0
  %EAX.i1384 = bitcast %union.anon* %6537 to i32*
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6539 = getelementptr inbounds %struct.GPR, %struct.GPR* %6538, i32 0, i32 15
  %6540 = getelementptr inbounds %struct.Reg, %struct.Reg* %6539, i32 0, i32 0
  %RBP.i1385 = bitcast %union.anon* %6540 to i64*
  %6541 = load i64, i64* %RBP.i1385
  %6542 = sub i64 %6541, 76
  %6543 = load i32, i32* %EAX.i1384
  %6544 = zext i32 %6543 to i64
  %6545 = load i64, i64* %PC.i1383
  %6546 = add i64 %6545, 3
  store i64 %6546, i64* %PC.i1383
  %6547 = inttoptr i64 %6542 to i32*
  store i32 %6543, i32* %6547
  store %struct.Memory* %loadMem_43f38d, %struct.Memory** %MEMORY
  %loadMem_43f390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6549 = getelementptr inbounds %struct.GPR, %struct.GPR* %6548, i32 0, i32 33
  %6550 = getelementptr inbounds %struct.Reg, %struct.Reg* %6549, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %6550 to i64*
  %6551 = load i64, i64* %PC.i1382
  %6552 = add i64 %6551, -166
  %6553 = load i64, i64* %PC.i1382
  %6554 = add i64 %6553, 5
  store i64 %6554, i64* %PC.i1382
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6552, i64* %6555, align 8
  store %struct.Memory* %loadMem_43f390, %struct.Memory** %MEMORY
  br label %block_.L_43f2ea

block_.L_43f395:                                  ; preds = %block_.L_43f2ea
  %loadMem_43f395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 33
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %6558 to i64*
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6560 = getelementptr inbounds %struct.GPR, %struct.GPR* %6559, i32 0, i32 1
  %6561 = getelementptr inbounds %struct.Reg, %struct.Reg* %6560, i32 0, i32 0
  %RAX.i1381 = bitcast %union.anon* %6561 to i64*
  %6562 = load i64, i64* %PC.i1380
  %6563 = add i64 %6562, 8
  store i64 %6563, i64* %PC.i1380
  %6564 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6564, i64* %RAX.i1381, align 8
  store %struct.Memory* %loadMem_43f395, %struct.Memory** %MEMORY
  %loadMem_43f39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6566 = getelementptr inbounds %struct.GPR, %struct.GPR* %6565, i32 0, i32 33
  %6567 = getelementptr inbounds %struct.Reg, %struct.Reg* %6566, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %6567 to i64*
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6569 = getelementptr inbounds %struct.GPR, %struct.GPR* %6568, i32 0, i32 1
  %6570 = getelementptr inbounds %struct.Reg, %struct.Reg* %6569, i32 0, i32 0
  %RAX.i1379 = bitcast %union.anon* %6570 to i64*
  %6571 = load i64, i64* %RAX.i1379
  %6572 = add i64 %6571, 72392
  %6573 = load i64, i64* %PC.i1378
  %6574 = add i64 %6573, 7
  store i64 %6574, i64* %PC.i1378
  %6575 = inttoptr i64 %6572 to i32*
  %6576 = load i32, i32* %6575
  %6577 = sub i32 %6576, 1
  %6578 = icmp ult i32 %6576, 1
  %6579 = zext i1 %6578 to i8
  %6580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6579, i8* %6580, align 1
  %6581 = and i32 %6577, 255
  %6582 = call i32 @llvm.ctpop.i32(i32 %6581)
  %6583 = trunc i32 %6582 to i8
  %6584 = and i8 %6583, 1
  %6585 = xor i8 %6584, 1
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6585, i8* %6586, align 1
  %6587 = xor i32 %6576, 1
  %6588 = xor i32 %6587, %6577
  %6589 = lshr i32 %6588, 4
  %6590 = trunc i32 %6589 to i8
  %6591 = and i8 %6590, 1
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6591, i8* %6592, align 1
  %6593 = icmp eq i32 %6577, 0
  %6594 = zext i1 %6593 to i8
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6594, i8* %6595, align 1
  %6596 = lshr i32 %6577, 31
  %6597 = trunc i32 %6596 to i8
  %6598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6597, i8* %6598, align 1
  %6599 = lshr i32 %6576, 31
  %6600 = xor i32 %6596, %6599
  %6601 = add i32 %6600, %6599
  %6602 = icmp eq i32 %6601, 2
  %6603 = zext i1 %6602 to i8
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6603, i8* %6604, align 1
  store %struct.Memory* %loadMem_43f39d, %struct.Memory** %MEMORY
  %loadMem_43f3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6606 = getelementptr inbounds %struct.GPR, %struct.GPR* %6605, i32 0, i32 33
  %6607 = getelementptr inbounds %struct.Reg, %struct.Reg* %6606, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %6607 to i64*
  %6608 = load i64, i64* %PC.i1377
  %6609 = add i64 %6608, 126
  %6610 = load i64, i64* %PC.i1377
  %6611 = add i64 %6610, 6
  %6612 = load i64, i64* %PC.i1377
  %6613 = add i64 %6612, 6
  store i64 %6613, i64* %PC.i1377
  %6614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6615 = load i8, i8* %6614, align 1
  store i8 %6615, i8* %BRANCH_TAKEN, align 1
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6617 = icmp ne i8 %6615, 0
  %6618 = select i1 %6617, i64 %6609, i64 %6611
  store i64 %6618, i64* %6616, align 8
  store %struct.Memory* %loadMem_43f3a4, %struct.Memory** %MEMORY
  %loadBr_43f3a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f3a4 = icmp eq i8 %loadBr_43f3a4, 1
  br i1 %cmpBr_43f3a4, label %block_.L_43f422, label %block_43f3aa

block_43f3aa:                                     ; preds = %block_.L_43f395
  %loadMem_43f3aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 33
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 15
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RBP.i1376 = bitcast %union.anon* %6624 to i64*
  %6625 = load i64, i64* %RBP.i1376
  %6626 = sub i64 %6625, 116
  %6627 = load i64, i64* %PC.i1375
  %6628 = add i64 %6627, 4
  store i64 %6628, i64* %PC.i1375
  %6629 = inttoptr i64 %6626 to i32*
  %6630 = load i32, i32* %6629
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6631, align 1
  %6632 = and i32 %6630, 255
  %6633 = call i32 @llvm.ctpop.i32(i32 %6632)
  %6634 = trunc i32 %6633 to i8
  %6635 = and i8 %6634, 1
  %6636 = xor i8 %6635, 1
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6636, i8* %6637, align 1
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6638, align 1
  %6639 = icmp eq i32 %6630, 0
  %6640 = zext i1 %6639 to i8
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6640, i8* %6641, align 1
  %6642 = lshr i32 %6630, 31
  %6643 = trunc i32 %6642 to i8
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6643, i8* %6644, align 1
  %6645 = lshr i32 %6630, 31
  %6646 = xor i32 %6642, %6645
  %6647 = add i32 %6646, %6645
  %6648 = icmp eq i32 %6647, 2
  %6649 = zext i1 %6648 to i8
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6649, i8* %6650, align 1
  store %struct.Memory* %loadMem_43f3aa, %struct.Memory** %MEMORY
  %loadMem_43f3ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6652 = getelementptr inbounds %struct.GPR, %struct.GPR* %6651, i32 0, i32 33
  %6653 = getelementptr inbounds %struct.Reg, %struct.Reg* %6652, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %6653 to i64*
  %6654 = load i64, i64* %PC.i1374
  %6655 = add i64 %6654, 116
  %6656 = load i64, i64* %PC.i1374
  %6657 = add i64 %6656, 6
  %6658 = load i64, i64* %PC.i1374
  %6659 = add i64 %6658, 6
  store i64 %6659, i64* %PC.i1374
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6661 = load i8, i8* %6660, align 1
  %6662 = icmp eq i8 %6661, 0
  %6663 = zext i1 %6662 to i8
  store i8 %6663, i8* %BRANCH_TAKEN, align 1
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6665 = select i1 %6662, i64 %6655, i64 %6657
  store i64 %6665, i64* %6664, align 8
  store %struct.Memory* %loadMem_43f3ae, %struct.Memory** %MEMORY
  %loadBr_43f3ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f3ae = icmp eq i8 %loadBr_43f3ae, 1
  br i1 %cmpBr_43f3ae, label %block_.L_43f422, label %block_43f3b4

block_43f3b4:                                     ; preds = %block_43f3aa
  %loadMem_43f3b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6667 = getelementptr inbounds %struct.GPR, %struct.GPR* %6666, i32 0, i32 33
  %6668 = getelementptr inbounds %struct.Reg, %struct.Reg* %6667, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %6668 to i64*
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6670 = getelementptr inbounds %struct.GPR, %struct.GPR* %6669, i32 0, i32 1
  %6671 = getelementptr inbounds %struct.Reg, %struct.Reg* %6670, i32 0, i32 0
  %RAX.i1373 = bitcast %union.anon* %6671 to i64*
  %6672 = load i64, i64* %PC.i1372
  %6673 = add i64 %6672, 8
  store i64 %6673, i64* %PC.i1372
  %6674 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6674, i64* %RAX.i1373, align 8
  store %struct.Memory* %loadMem_43f3b4, %struct.Memory** %MEMORY
  %loadMem_43f3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6676 = getelementptr inbounds %struct.GPR, %struct.GPR* %6675, i32 0, i32 33
  %6677 = getelementptr inbounds %struct.Reg, %struct.Reg* %6676, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %6677 to i64*
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6679 = getelementptr inbounds %struct.GPR, %struct.GPR* %6678, i32 0, i32 1
  %6680 = getelementptr inbounds %struct.Reg, %struct.Reg* %6679, i32 0, i32 0
  %RAX.i1371 = bitcast %union.anon* %6680 to i64*
  %6681 = load i64, i64* %RAX.i1371
  %6682 = add i64 %6681, 24
  %6683 = load i64, i64* %PC.i1370
  %6684 = add i64 %6683, 4
  store i64 %6684, i64* %PC.i1370
  %6685 = inttoptr i64 %6682 to i32*
  %6686 = load i32, i32* %6685
  %6687 = sub i32 %6686, 3
  %6688 = icmp ult i32 %6686, 3
  %6689 = zext i1 %6688 to i8
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6689, i8* %6690, align 1
  %6691 = and i32 %6687, 255
  %6692 = call i32 @llvm.ctpop.i32(i32 %6691)
  %6693 = trunc i32 %6692 to i8
  %6694 = and i8 %6693, 1
  %6695 = xor i8 %6694, 1
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6695, i8* %6696, align 1
  %6697 = xor i32 %6686, 3
  %6698 = xor i32 %6697, %6687
  %6699 = lshr i32 %6698, 4
  %6700 = trunc i32 %6699 to i8
  %6701 = and i8 %6700, 1
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6701, i8* %6702, align 1
  %6703 = icmp eq i32 %6687, 0
  %6704 = zext i1 %6703 to i8
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6704, i8* %6705, align 1
  %6706 = lshr i32 %6687, 31
  %6707 = trunc i32 %6706 to i8
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6707, i8* %6708, align 1
  %6709 = lshr i32 %6686, 31
  %6710 = xor i32 %6706, %6709
  %6711 = add i32 %6710, %6709
  %6712 = icmp eq i32 %6711, 2
  %6713 = zext i1 %6712 to i8
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6713, i8* %6714, align 1
  store %struct.Memory* %loadMem_43f3bc, %struct.Memory** %MEMORY
  %loadMem_43f3c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6716 = getelementptr inbounds %struct.GPR, %struct.GPR* %6715, i32 0, i32 33
  %6717 = getelementptr inbounds %struct.Reg, %struct.Reg* %6716, i32 0, i32 0
  %PC.i1369 = bitcast %union.anon* %6717 to i64*
  %6718 = load i64, i64* %PC.i1369
  %6719 = add i64 %6718, 31
  %6720 = load i64, i64* %PC.i1369
  %6721 = add i64 %6720, 6
  %6722 = load i64, i64* %PC.i1369
  %6723 = add i64 %6722, 6
  store i64 %6723, i64* %PC.i1369
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6725 = load i8, i8* %6724, align 1
  store i8 %6725, i8* %BRANCH_TAKEN, align 1
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6727 = icmp ne i8 %6725, 0
  %6728 = select i1 %6727, i64 %6719, i64 %6721
  store i64 %6728, i64* %6726, align 8
  store %struct.Memory* %loadMem_43f3c0, %struct.Memory** %MEMORY
  %loadBr_43f3c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f3c0 = icmp eq i8 %loadBr_43f3c0, 1
  br i1 %cmpBr_43f3c0, label %block_.L_43f3df, label %block_43f3c6

block_43f3c6:                                     ; preds = %block_43f3b4
  %loadMem_43f3c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 33
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %PC.i1366 = bitcast %union.anon* %6731 to i64*
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 7
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %RDX.i1367 = bitcast %union.anon* %6734 to i64*
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6736 = getelementptr inbounds %struct.GPR, %struct.GPR* %6735, i32 0, i32 15
  %6737 = getelementptr inbounds %struct.Reg, %struct.Reg* %6736, i32 0, i32 0
  %RBP.i1368 = bitcast %union.anon* %6737 to i64*
  %6738 = load i64, i64* %RBP.i1368
  %6739 = sub i64 %6738, 88
  %6740 = load i64, i64* %PC.i1366
  %6741 = add i64 %6740, 4
  store i64 %6741, i64* %PC.i1366
  store i64 %6739, i64* %RDX.i1367, align 8
  store %struct.Memory* %loadMem_43f3c6, %struct.Memory** %MEMORY
  %loadMem_43f3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6743 = getelementptr inbounds %struct.GPR, %struct.GPR* %6742, i32 0, i32 33
  %6744 = getelementptr inbounds %struct.Reg, %struct.Reg* %6743, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %6744 to i64*
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6746 = getelementptr inbounds %struct.GPR, %struct.GPR* %6745, i32 0, i32 5
  %6747 = getelementptr inbounds %struct.Reg, %struct.Reg* %6746, i32 0, i32 0
  %ECX.i1364 = bitcast %union.anon* %6747 to i32*
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6749 = getelementptr inbounds %struct.GPR, %struct.GPR* %6748, i32 0, i32 5
  %6750 = getelementptr inbounds %struct.Reg, %struct.Reg* %6749, i32 0, i32 0
  %RCX.i1365 = bitcast %union.anon* %6750 to i64*
  %6751 = load i64, i64* %RCX.i1365
  %6752 = load i32, i32* %ECX.i1364
  %6753 = zext i32 %6752 to i64
  %6754 = load i64, i64* %PC.i1363
  %6755 = add i64 %6754, 2
  store i64 %6755, i64* %PC.i1363
  %6756 = xor i64 %6753, %6751
  %6757 = trunc i64 %6756 to i32
  %6758 = and i64 %6756, 4294967295
  store i64 %6758, i64* %RCX.i1365, align 8
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6759, align 1
  %6760 = and i32 %6757, 255
  %6761 = call i32 @llvm.ctpop.i32(i32 %6760)
  %6762 = trunc i32 %6761 to i8
  %6763 = and i8 %6762, 1
  %6764 = xor i8 %6763, 1
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6764, i8* %6765, align 1
  %6766 = icmp eq i32 %6757, 0
  %6767 = zext i1 %6766 to i8
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6767, i8* %6768, align 1
  %6769 = lshr i32 %6757, 31
  %6770 = trunc i32 %6769 to i8
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6770, i8* %6771, align 1
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6772, align 1
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6773, align 1
  store %struct.Memory* %loadMem_43f3ca, %struct.Memory** %MEMORY
  %loadMem_43f3cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6775 = getelementptr inbounds %struct.GPR, %struct.GPR* %6774, i32 0, i32 33
  %6776 = getelementptr inbounds %struct.Reg, %struct.Reg* %6775, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %6776 to i64*
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6778 = getelementptr inbounds %struct.GPR, %struct.GPR* %6777, i32 0, i32 11
  %6779 = getelementptr inbounds %struct.Reg, %struct.Reg* %6778, i32 0, i32 0
  %RDI.i1361 = bitcast %union.anon* %6779 to i64*
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6781 = getelementptr inbounds %struct.GPR, %struct.GPR* %6780, i32 0, i32 15
  %6782 = getelementptr inbounds %struct.Reg, %struct.Reg* %6781, i32 0, i32 0
  %RBP.i1362 = bitcast %union.anon* %6782 to i64*
  %6783 = load i64, i64* %RBP.i1362
  %6784 = sub i64 %6783, 60
  %6785 = load i64, i64* %PC.i1360
  %6786 = add i64 %6785, 3
  store i64 %6786, i64* %PC.i1360
  %6787 = inttoptr i64 %6784 to i32*
  %6788 = load i32, i32* %6787
  %6789 = zext i32 %6788 to i64
  store i64 %6789, i64* %RDI.i1361, align 8
  store %struct.Memory* %loadMem_43f3cc, %struct.Memory** %MEMORY
  %loadMem_43f3cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 33
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %6792 to i64*
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6794 = getelementptr inbounds %struct.GPR, %struct.GPR* %6793, i32 0, i32 9
  %6795 = getelementptr inbounds %struct.Reg, %struct.Reg* %6794, i32 0, i32 0
  %RSI.i1358 = bitcast %union.anon* %6795 to i64*
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6797 = getelementptr inbounds %struct.GPR, %struct.GPR* %6796, i32 0, i32 15
  %6798 = getelementptr inbounds %struct.Reg, %struct.Reg* %6797, i32 0, i32 0
  %RBP.i1359 = bitcast %union.anon* %6798 to i64*
  %6799 = load i64, i64* %RBP.i1359
  %6800 = sub i64 %6799, 56
  %6801 = load i64, i64* %PC.i1357
  %6802 = add i64 %6801, 3
  store i64 %6802, i64* %PC.i1357
  %6803 = inttoptr i64 %6800 to i32*
  %6804 = load i32, i32* %6803
  %6805 = zext i32 %6804 to i64
  store i64 %6805, i64* %RSI.i1358, align 8
  store %struct.Memory* %loadMem_43f3cf, %struct.Memory** %MEMORY
  %loadMem1_43f3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6807 = getelementptr inbounds %struct.GPR, %struct.GPR* %6806, i32 0, i32 33
  %6808 = getelementptr inbounds %struct.Reg, %struct.Reg* %6807, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %6808 to i64*
  %6809 = load i64, i64* %PC.i1356
  %6810 = add i64 %6809, -233858
  %6811 = load i64, i64* %PC.i1356
  %6812 = add i64 %6811, 5
  %6813 = load i64, i64* %PC.i1356
  %6814 = add i64 %6813, 5
  store i64 %6814, i64* %PC.i1356
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6816 = load i64, i64* %6815, align 8
  %6817 = add i64 %6816, -8
  %6818 = inttoptr i64 %6817 to i64*
  store i64 %6812, i64* %6818
  store i64 %6817, i64* %6815, align 8
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6810, i64* %6819, align 8
  store %struct.Memory* %loadMem1_43f3d2, %struct.Memory** %MEMORY
  %loadMem2_43f3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f3d2 = load i64, i64* %3
  %call2_43f3d2 = call %struct.Memory* @sub_406250.dct_luma(%struct.State* %0, i64 %loadPC_43f3d2, %struct.Memory* %loadMem2_43f3d2)
  store %struct.Memory* %call2_43f3d2, %struct.Memory** %MEMORY
  %loadMem_43f3d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6821 = getelementptr inbounds %struct.GPR, %struct.GPR* %6820, i32 0, i32 33
  %6822 = getelementptr inbounds %struct.Reg, %struct.Reg* %6821, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %6822 to i64*
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 1
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %EAX.i1354 = bitcast %union.anon* %6825 to i32*
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 15
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %RBP.i1355 = bitcast %union.anon* %6828 to i64*
  %6829 = load i64, i64* %RBP.i1355
  %6830 = sub i64 %6829, 80
  %6831 = load i32, i32* %EAX.i1354
  %6832 = zext i32 %6831 to i64
  %6833 = load i64, i64* %PC.i1353
  %6834 = add i64 %6833, 3
  store i64 %6834, i64* %PC.i1353
  %6835 = inttoptr i64 %6830 to i32*
  store i32 %6831, i32* %6835
  store %struct.Memory* %loadMem_43f3d7, %struct.Memory** %MEMORY
  %loadMem_43f3da = load %struct.Memory*, %struct.Memory** %MEMORY
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6837 = getelementptr inbounds %struct.GPR, %struct.GPR* %6836, i32 0, i32 33
  %6838 = getelementptr inbounds %struct.Reg, %struct.Reg* %6837, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %6838 to i64*
  %6839 = load i64, i64* %PC.i1352
  %6840 = add i64 %6839, 23
  %6841 = load i64, i64* %PC.i1352
  %6842 = add i64 %6841, 5
  store i64 %6842, i64* %PC.i1352
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6840, i64* %6843, align 8
  store %struct.Memory* %loadMem_43f3da, %struct.Memory** %MEMORY
  br label %block_.L_43f3f1

block_.L_43f3df:                                  ; preds = %block_43f3b4
  %loadMem_43f3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6845 = getelementptr inbounds %struct.GPR, %struct.GPR* %6844, i32 0, i32 33
  %6846 = getelementptr inbounds %struct.Reg, %struct.Reg* %6845, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %6846 to i64*
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6848 = getelementptr inbounds %struct.GPR, %struct.GPR* %6847, i32 0, i32 7
  %6849 = getelementptr inbounds %struct.Reg, %struct.Reg* %6848, i32 0, i32 0
  %RDX.i1350 = bitcast %union.anon* %6849 to i64*
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 15
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %RBP.i1351 = bitcast %union.anon* %6852 to i64*
  %6853 = load i64, i64* %RBP.i1351
  %6854 = sub i64 %6853, 88
  %6855 = load i64, i64* %PC.i1349
  %6856 = add i64 %6855, 4
  store i64 %6856, i64* %PC.i1349
  store i64 %6854, i64* %RDX.i1350, align 8
  store %struct.Memory* %loadMem_43f3df, %struct.Memory** %MEMORY
  %loadMem_43f3e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6858 = getelementptr inbounds %struct.GPR, %struct.GPR* %6857, i32 0, i32 33
  %6859 = getelementptr inbounds %struct.Reg, %struct.Reg* %6858, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %6859 to i64*
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 11
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %RDI.i1347 = bitcast %union.anon* %6862 to i64*
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 15
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %RBP.i1348 = bitcast %union.anon* %6865 to i64*
  %6866 = load i64, i64* %RBP.i1348
  %6867 = sub i64 %6866, 60
  %6868 = load i64, i64* %PC.i1346
  %6869 = add i64 %6868, 3
  store i64 %6869, i64* %PC.i1346
  %6870 = inttoptr i64 %6867 to i32*
  %6871 = load i32, i32* %6870
  %6872 = zext i32 %6871 to i64
  store i64 %6872, i64* %RDI.i1347, align 8
  store %struct.Memory* %loadMem_43f3e3, %struct.Memory** %MEMORY
  %loadMem_43f3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6874 = getelementptr inbounds %struct.GPR, %struct.GPR* %6873, i32 0, i32 33
  %6875 = getelementptr inbounds %struct.Reg, %struct.Reg* %6874, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %6875 to i64*
  %6876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6877 = getelementptr inbounds %struct.GPR, %struct.GPR* %6876, i32 0, i32 9
  %6878 = getelementptr inbounds %struct.Reg, %struct.Reg* %6877, i32 0, i32 0
  %RSI.i1344 = bitcast %union.anon* %6878 to i64*
  %6879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6880 = getelementptr inbounds %struct.GPR, %struct.GPR* %6879, i32 0, i32 15
  %6881 = getelementptr inbounds %struct.Reg, %struct.Reg* %6880, i32 0, i32 0
  %RBP.i1345 = bitcast %union.anon* %6881 to i64*
  %6882 = load i64, i64* %RBP.i1345
  %6883 = sub i64 %6882, 56
  %6884 = load i64, i64* %PC.i1343
  %6885 = add i64 %6884, 3
  store i64 %6885, i64* %PC.i1343
  %6886 = inttoptr i64 %6883 to i32*
  %6887 = load i32, i32* %6886
  %6888 = zext i32 %6887 to i64
  store i64 %6888, i64* %RSI.i1344, align 8
  store %struct.Memory* %loadMem_43f3e6, %struct.Memory** %MEMORY
  %loadMem1_43f3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6890 = getelementptr inbounds %struct.GPR, %struct.GPR* %6889, i32 0, i32 33
  %6891 = getelementptr inbounds %struct.Reg, %struct.Reg* %6890, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %6891 to i64*
  %6892 = load i64, i64* %PC.i1342
  %6893 = add i64 %6892, -210441
  %6894 = load i64, i64* %PC.i1342
  %6895 = add i64 %6894, 5
  %6896 = load i64, i64* %PC.i1342
  %6897 = add i64 %6896, 5
  store i64 %6897, i64* %PC.i1342
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6899 = load i64, i64* %6898, align 8
  %6900 = add i64 %6899, -8
  %6901 = inttoptr i64 %6900 to i64*
  store i64 %6895, i64* %6901
  store i64 %6900, i64* %6898, align 8
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6893, i64* %6902, align 8
  store %struct.Memory* %loadMem1_43f3e9, %struct.Memory** %MEMORY
  %loadMem2_43f3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f3e9 = load i64, i64* %3
  %call2_43f3e9 = call %struct.Memory* @sub_40bde0.dct_luma_sp(%struct.State* %0, i64 %loadPC_43f3e9, %struct.Memory* %loadMem2_43f3e9)
  store %struct.Memory* %call2_43f3e9, %struct.Memory** %MEMORY
  %loadMem_43f3ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 33
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %6905 to i64*
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 1
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %EAX.i1340 = bitcast %union.anon* %6908 to i32*
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 15
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %6911 to i64*
  %6912 = load i64, i64* %RBP.i1341
  %6913 = sub i64 %6912, 80
  %6914 = load i32, i32* %EAX.i1340
  %6915 = zext i32 %6914 to i64
  %6916 = load i64, i64* %PC.i1339
  %6917 = add i64 %6916, 3
  store i64 %6917, i64* %PC.i1339
  %6918 = inttoptr i64 %6913 to i32*
  store i32 %6914, i32* %6918
  store %struct.Memory* %loadMem_43f3ee, %struct.Memory** %MEMORY
  br label %block_.L_43f3f1

block_.L_43f3f1:                                  ; preds = %block_.L_43f3df, %block_43f3c6
  %loadMem_43f3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 33
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %6921 to i64*
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6923 = getelementptr inbounds %struct.GPR, %struct.GPR* %6922, i32 0, i32 15
  %6924 = getelementptr inbounds %struct.Reg, %struct.Reg* %6923, i32 0, i32 0
  %RBP.i1338 = bitcast %union.anon* %6924 to i64*
  %6925 = load i64, i64* %RBP.i1338
  %6926 = sub i64 %6925, 80
  %6927 = load i64, i64* %PC.i1337
  %6928 = add i64 %6927, 4
  store i64 %6928, i64* %PC.i1337
  %6929 = inttoptr i64 %6926 to i32*
  %6930 = load i32, i32* %6929
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6931, align 1
  %6932 = and i32 %6930, 255
  %6933 = call i32 @llvm.ctpop.i32(i32 %6932)
  %6934 = trunc i32 %6933 to i8
  %6935 = and i8 %6934, 1
  %6936 = xor i8 %6935, 1
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6936, i8* %6937, align 1
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6938, align 1
  %6939 = icmp eq i32 %6930, 0
  %6940 = zext i1 %6939 to i8
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6940, i8* %6941, align 1
  %6942 = lshr i32 %6930, 31
  %6943 = trunc i32 %6942 to i8
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6943, i8* %6944, align 1
  %6945 = lshr i32 %6930, 31
  %6946 = xor i32 %6942, %6945
  %6947 = add i32 %6946, %6945
  %6948 = icmp eq i32 %6947, 2
  %6949 = zext i1 %6948 to i8
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6949, i8* %6950, align 1
  store %struct.Memory* %loadMem_43f3f1, %struct.Memory** %MEMORY
  %loadMem_43f3f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6952 = getelementptr inbounds %struct.GPR, %struct.GPR* %6951, i32 0, i32 33
  %6953 = getelementptr inbounds %struct.Reg, %struct.Reg* %6952, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %6953 to i64*
  %6954 = load i64, i64* %PC.i1336
  %6955 = add i64 %6954, 40
  %6956 = load i64, i64* %PC.i1336
  %6957 = add i64 %6956, 6
  %6958 = load i64, i64* %PC.i1336
  %6959 = add i64 %6958, 6
  store i64 %6959, i64* %PC.i1336
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6961 = load i8, i8* %6960, align 1
  store i8 %6961, i8* %BRANCH_TAKEN, align 1
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6963 = icmp ne i8 %6961, 0
  %6964 = select i1 %6963, i64 %6955, i64 %6957
  store i64 %6964, i64* %6962, align 8
  store %struct.Memory* %loadMem_43f3f5, %struct.Memory** %MEMORY
  %loadBr_43f3f5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f3f5 = icmp eq i8 %loadBr_43f3f5, 1
  br i1 %cmpBr_43f3f5, label %block_.L_43f41d, label %block_43f3fb

block_43f3fb:                                     ; preds = %block_.L_43f3f1
  %loadMem_43f3fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6966 = getelementptr inbounds %struct.GPR, %struct.GPR* %6965, i32 0, i32 33
  %6967 = getelementptr inbounds %struct.Reg, %struct.Reg* %6966, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %6967 to i64*
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6969 = getelementptr inbounds %struct.GPR, %struct.GPR* %6968, i32 0, i32 1
  %6970 = getelementptr inbounds %struct.Reg, %struct.Reg* %6969, i32 0, i32 0
  %RAX.i1335 = bitcast %union.anon* %6970 to i64*
  %6971 = load i64, i64* %PC.i1334
  %6972 = add i64 %6971, 5
  store i64 %6972, i64* %PC.i1334
  store i64 1, i64* %RAX.i1335, align 8
  store %struct.Memory* %loadMem_43f3fb, %struct.Memory** %MEMORY
  %loadMem_43f400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6974 = getelementptr inbounds %struct.GPR, %struct.GPR* %6973, i32 0, i32 33
  %6975 = getelementptr inbounds %struct.Reg, %struct.Reg* %6974, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %6975 to i64*
  %6976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6977 = getelementptr inbounds %struct.GPR, %struct.GPR* %6976, i32 0, i32 5
  %6978 = getelementptr inbounds %struct.Reg, %struct.Reg* %6977, i32 0, i32 0
  %RCX.i1332 = bitcast %union.anon* %6978 to i64*
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6980 = getelementptr inbounds %struct.GPR, %struct.GPR* %6979, i32 0, i32 15
  %6981 = getelementptr inbounds %struct.Reg, %struct.Reg* %6980, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %6981 to i64*
  %6982 = load i64, i64* %RBP.i1333
  %6983 = sub i64 %6982, 84
  %6984 = load i64, i64* %PC.i1331
  %6985 = add i64 %6984, 3
  store i64 %6985, i64* %PC.i1331
  %6986 = inttoptr i64 %6983 to i32*
  %6987 = load i32, i32* %6986
  %6988 = zext i32 %6987 to i64
  store i64 %6988, i64* %RCX.i1332, align 8
  store %struct.Memory* %loadMem_43f400, %struct.Memory** %MEMORY
  %loadMem_43f403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6990 = getelementptr inbounds %struct.GPR, %struct.GPR* %6989, i32 0, i32 33
  %6991 = getelementptr inbounds %struct.Reg, %struct.Reg* %6990, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %6991 to i64*
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6993 = getelementptr inbounds %struct.GPR, %struct.GPR* %6992, i32 0, i32 5
  %6994 = getelementptr inbounds %struct.Reg, %struct.Reg* %6993, i32 0, i32 0
  %6995 = bitcast %union.anon* %6994 to %struct.anon.2*
  %CL.i1328 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6995, i32 0, i32 0
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 1
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %RAX.i1329 = bitcast %union.anon* %6998 to i64*
  %6999 = load i64, i64* %RAX.i1329
  %7000 = load i8, i8* %CL.i1328
  %7001 = zext i8 %7000 to i64
  %7002 = load i64, i64* %PC.i1327
  %7003 = add i64 %7002, 2
  store i64 %7003, i64* %PC.i1327
  %7004 = trunc i64 %7001 to i5
  switch i5 %7004, label %7011 [
    i5 0, label %routine_shll__cl___eax.exit1330
    i5 1, label %7005
  ]

; <label>:7005:                                   ; preds = %block_43f3fb
  %7006 = trunc i64 %6999 to i32
  %7007 = shl i32 %7006, 1
  %7008 = icmp slt i32 %7006, 0
  %7009 = icmp slt i32 %7007, 0
  %7010 = xor i1 %7008, %7009
  br label %7020

; <label>:7011:                                   ; preds = %block_43f3fb
  %7012 = and i64 %7001, 31
  %7013 = add i64 %7012, 4294967295
  %7014 = and i64 %6999, 4294967295
  %7015 = and i64 %7013, 4294967295
  %7016 = shl i64 %7014, %7015
  %7017 = trunc i64 %7016 to i32
  %7018 = icmp slt i32 %7017, 0
  %7019 = shl i32 %7017, 1
  br label %7020

; <label>:7020:                                   ; preds = %7011, %7005
  %7021 = phi i1 [ %7008, %7005 ], [ %7018, %7011 ]
  %7022 = phi i1 [ %7010, %7005 ], [ false, %7011 ]
  %7023 = phi i32 [ %7007, %7005 ], [ %7019, %7011 ]
  %7024 = zext i32 %7023 to i64
  store i64 %7024, i64* %RAX.i1329, align 8
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7026 = zext i1 %7021 to i8
  store i8 %7026, i8* %7025, align 1
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7028 = and i32 %7023, 254
  %7029 = call i32 @llvm.ctpop.i32(i32 %7028)
  %7030 = trunc i32 %7029 to i8
  %7031 = and i8 %7030, 1
  %7032 = xor i8 %7031, 1
  store i8 %7032, i8* %7027, align 1
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7033, align 1
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7035 = icmp eq i32 %7023, 0
  %7036 = zext i1 %7035 to i8
  store i8 %7036, i8* %7034, align 1
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7038 = lshr i32 %7023, 31
  %7039 = trunc i32 %7038 to i8
  store i8 %7039, i8* %7037, align 1
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7041 = zext i1 %7022 to i8
  store i8 %7041, i8* %7040, align 1
  br label %routine_shll__cl___eax.exit1330

routine_shll__cl___eax.exit1330:                  ; preds = %block_43f3fb, %7020
  store %struct.Memory* %loadMem_43f403, %struct.Memory** %MEMORY
  %loadMem_43f405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7043 = getelementptr inbounds %struct.GPR, %struct.GPR* %7042, i32 0, i32 33
  %7044 = getelementptr inbounds %struct.Reg, %struct.Reg* %7043, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %7044 to i64*
  %7045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7046 = getelementptr inbounds %struct.GPR, %struct.GPR* %7045, i32 0, i32 1
  %7047 = getelementptr inbounds %struct.Reg, %struct.Reg* %7046, i32 0, i32 0
  %EAX.i1325 = bitcast %union.anon* %7047 to i32*
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7049 = getelementptr inbounds %struct.GPR, %struct.GPR* %7048, i32 0, i32 7
  %7050 = getelementptr inbounds %struct.Reg, %struct.Reg* %7049, i32 0, i32 0
  %RDX.i1326 = bitcast %union.anon* %7050 to i64*
  %7051 = load i32, i32* %EAX.i1325
  %7052 = zext i32 %7051 to i64
  %7053 = load i64, i64* %PC.i1324
  %7054 = add i64 %7053, 3
  store i64 %7054, i64* %PC.i1324
  %7055 = shl i64 %7052, 32
  %7056 = ashr exact i64 %7055, 32
  store i64 %7056, i64* %RDX.i1326, align 8
  store %struct.Memory* %loadMem_43f405, %struct.Memory** %MEMORY
  %loadMem_43f408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7058 = getelementptr inbounds %struct.GPR, %struct.GPR* %7057, i32 0, i32 33
  %7059 = getelementptr inbounds %struct.Reg, %struct.Reg* %7058, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %7059 to i64*
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7061 = getelementptr inbounds %struct.GPR, %struct.GPR* %7060, i32 0, i32 9
  %7062 = getelementptr inbounds %struct.Reg, %struct.Reg* %7061, i32 0, i32 0
  %RSI.i1322 = bitcast %union.anon* %7062 to i64*
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7064 = getelementptr inbounds %struct.GPR, %struct.GPR* %7063, i32 0, i32 15
  %7065 = getelementptr inbounds %struct.Reg, %struct.Reg* %7064, i32 0, i32 0
  %RBP.i1323 = bitcast %union.anon* %7065 to i64*
  %7066 = load i64, i64* %RBP.i1323
  %7067 = sub i64 %7066, 32
  %7068 = load i64, i64* %PC.i1321
  %7069 = add i64 %7068, 4
  store i64 %7069, i64* %PC.i1321
  %7070 = inttoptr i64 %7067 to i64*
  %7071 = load i64, i64* %7070
  store i64 %7071, i64* %RSI.i1322, align 8
  store %struct.Memory* %loadMem_43f408, %struct.Memory** %MEMORY
  %loadMem_43f40c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7073 = getelementptr inbounds %struct.GPR, %struct.GPR* %7072, i32 0, i32 33
  %7074 = getelementptr inbounds %struct.Reg, %struct.Reg* %7073, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %7074 to i64*
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7076 = getelementptr inbounds %struct.GPR, %struct.GPR* %7075, i32 0, i32 7
  %7077 = getelementptr inbounds %struct.Reg, %struct.Reg* %7076, i32 0, i32 0
  %RDX.i1319 = bitcast %union.anon* %7077 to i64*
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7079 = getelementptr inbounds %struct.GPR, %struct.GPR* %7078, i32 0, i32 9
  %7080 = getelementptr inbounds %struct.Reg, %struct.Reg* %7079, i32 0, i32 0
  %RSI.i1320 = bitcast %union.anon* %7080 to i64*
  %7081 = load i64, i64* %RDX.i1319
  %7082 = load i64, i64* %RSI.i1320
  %7083 = load i64, i64* %PC.i1318
  %7084 = add i64 %7083, 3
  store i64 %7084, i64* %PC.i1318
  %7085 = inttoptr i64 %7082 to i64*
  %7086 = load i64, i64* %7085
  %7087 = or i64 %7086, %7081
  store i64 %7087, i64* %RDX.i1319, align 8
  %7088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7088, align 1
  %7089 = trunc i64 %7087 to i32
  %7090 = and i32 %7089, 255
  %7091 = call i32 @llvm.ctpop.i32(i32 %7090)
  %7092 = trunc i32 %7091 to i8
  %7093 = and i8 %7092, 1
  %7094 = xor i8 %7093, 1
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7094, i8* %7095, align 1
  %7096 = icmp eq i64 %7087, 0
  %7097 = zext i1 %7096 to i8
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7097, i8* %7098, align 1
  %7099 = lshr i64 %7087, 63
  %7100 = trunc i64 %7099 to i8
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7100, i8* %7101, align 1
  %7102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7102, align 1
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7103, align 1
  store %struct.Memory* %loadMem_43f40c, %struct.Memory** %MEMORY
  %loadMem_43f40f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7105 = getelementptr inbounds %struct.GPR, %struct.GPR* %7104, i32 0, i32 33
  %7106 = getelementptr inbounds %struct.Reg, %struct.Reg* %7105, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %7106 to i64*
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 7
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %RDX.i1316 = bitcast %union.anon* %7109 to i64*
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7111 = getelementptr inbounds %struct.GPR, %struct.GPR* %7110, i32 0, i32 9
  %7112 = getelementptr inbounds %struct.Reg, %struct.Reg* %7111, i32 0, i32 0
  %RSI.i1317 = bitcast %union.anon* %7112 to i64*
  %7113 = load i64, i64* %RSI.i1317
  %7114 = load i64, i64* %RDX.i1316
  %7115 = load i64, i64* %PC.i1315
  %7116 = add i64 %7115, 3
  store i64 %7116, i64* %PC.i1315
  %7117 = inttoptr i64 %7113 to i64*
  store i64 %7114, i64* %7117
  store %struct.Memory* %loadMem_43f40f, %struct.Memory** %MEMORY
  %loadMem_43f412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 33
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %7120 to i64*
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7122 = getelementptr inbounds %struct.GPR, %struct.GPR* %7121, i32 0, i32 1
  %7123 = getelementptr inbounds %struct.Reg, %struct.Reg* %7122, i32 0, i32 0
  %RAX.i1313 = bitcast %union.anon* %7123 to i64*
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 15
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %RBP.i1314 = bitcast %union.anon* %7126 to i64*
  %7127 = load i64, i64* %RBP.i1314
  %7128 = sub i64 %7127, 100
  %7129 = load i64, i64* %PC.i1312
  %7130 = add i64 %7129, 3
  store i64 %7130, i64* %PC.i1312
  %7131 = inttoptr i64 %7128 to i32*
  %7132 = load i32, i32* %7131
  %7133 = zext i32 %7132 to i64
  store i64 %7133, i64* %RAX.i1313, align 8
  store %struct.Memory* %loadMem_43f412, %struct.Memory** %MEMORY
  %loadMem_43f415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7135 = getelementptr inbounds %struct.GPR, %struct.GPR* %7134, i32 0, i32 33
  %7136 = getelementptr inbounds %struct.Reg, %struct.Reg* %7135, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %7136 to i64*
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7138 = getelementptr inbounds %struct.GPR, %struct.GPR* %7137, i32 0, i32 7
  %7139 = getelementptr inbounds %struct.Reg, %struct.Reg* %7138, i32 0, i32 0
  %RDX.i1310 = bitcast %union.anon* %7139 to i64*
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 15
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %RBP.i1311 = bitcast %union.anon* %7142 to i64*
  %7143 = load i64, i64* %RBP.i1311
  %7144 = sub i64 %7143, 24
  %7145 = load i64, i64* %PC.i1309
  %7146 = add i64 %7145, 4
  store i64 %7146, i64* %PC.i1309
  %7147 = inttoptr i64 %7144 to i64*
  %7148 = load i64, i64* %7147
  store i64 %7148, i64* %RDX.i1310, align 8
  store %struct.Memory* %loadMem_43f415, %struct.Memory** %MEMORY
  %loadMem_43f419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 33
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %7151 to i64*
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7153 = getelementptr inbounds %struct.GPR, %struct.GPR* %7152, i32 0, i32 1
  %7154 = getelementptr inbounds %struct.Reg, %struct.Reg* %7153, i32 0, i32 0
  %RAX.i1307 = bitcast %union.anon* %7154 to i64*
  %7155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7156 = getelementptr inbounds %struct.GPR, %struct.GPR* %7155, i32 0, i32 7
  %7157 = getelementptr inbounds %struct.Reg, %struct.Reg* %7156, i32 0, i32 0
  %RDX.i1308 = bitcast %union.anon* %7157 to i64*
  %7158 = load i64, i64* %RAX.i1307
  %7159 = load i64, i64* %RDX.i1308
  %7160 = load i64, i64* %PC.i1306
  %7161 = add i64 %7160, 2
  store i64 %7161, i64* %PC.i1306
  %7162 = trunc i64 %7158 to i32
  %7163 = inttoptr i64 %7159 to i32*
  %7164 = load i32, i32* %7163
  %7165 = or i32 %7164, %7162
  %7166 = zext i32 %7165 to i64
  store i64 %7166, i64* %RAX.i1307, align 8
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7167, align 1
  %7168 = and i32 %7165, 255
  %7169 = call i32 @llvm.ctpop.i32(i32 %7168)
  %7170 = trunc i32 %7169 to i8
  %7171 = and i8 %7170, 1
  %7172 = xor i8 %7171, 1
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7172, i8* %7173, align 1
  %7174 = icmp eq i32 %7165, 0
  %7175 = zext i1 %7174 to i8
  %7176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7175, i8* %7176, align 1
  %7177 = lshr i32 %7165, 31
  %7178 = trunc i32 %7177 to i8
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7178, i8* %7179, align 1
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7180, align 1
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7181, align 1
  store %struct.Memory* %loadMem_43f419, %struct.Memory** %MEMORY
  %loadMem_43f41b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7183 = getelementptr inbounds %struct.GPR, %struct.GPR* %7182, i32 0, i32 33
  %7184 = getelementptr inbounds %struct.Reg, %struct.Reg* %7183, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %7184 to i64*
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7186 = getelementptr inbounds %struct.GPR, %struct.GPR* %7185, i32 0, i32 1
  %7187 = getelementptr inbounds %struct.Reg, %struct.Reg* %7186, i32 0, i32 0
  %EAX.i1304 = bitcast %union.anon* %7187 to i32*
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7189 = getelementptr inbounds %struct.GPR, %struct.GPR* %7188, i32 0, i32 7
  %7190 = getelementptr inbounds %struct.Reg, %struct.Reg* %7189, i32 0, i32 0
  %RDX.i1305 = bitcast %union.anon* %7190 to i64*
  %7191 = load i64, i64* %RDX.i1305
  %7192 = load i32, i32* %EAX.i1304
  %7193 = zext i32 %7192 to i64
  %7194 = load i64, i64* %PC.i1303
  %7195 = add i64 %7194, 2
  store i64 %7195, i64* %PC.i1303
  %7196 = inttoptr i64 %7191 to i32*
  store i32 %7192, i32* %7196
  store %struct.Memory* %loadMem_43f41b, %struct.Memory** %MEMORY
  br label %block_.L_43f41d

block_.L_43f41d:                                  ; preds = %routine_shll__cl___eax.exit1330, %block_.L_43f3f1
  %loadMem_43f41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7198 = getelementptr inbounds %struct.GPR, %struct.GPR* %7197, i32 0, i32 33
  %7199 = getelementptr inbounds %struct.Reg, %struct.Reg* %7198, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %7199 to i64*
  %7200 = load i64, i64* %PC.i1302
  %7201 = add i64 %7200, 5
  %7202 = load i64, i64* %PC.i1302
  %7203 = add i64 %7202, 5
  store i64 %7203, i64* %PC.i1302
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7201, i64* %7204, align 8
  store %struct.Memory* %loadMem_43f41d, %struct.Memory** %MEMORY
  br label %block_.L_43f422

block_.L_43f422:                                  ; preds = %block_.L_43f41d, %block_43f3aa, %block_.L_43f395
  %loadMem_43f422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7206 = getelementptr inbounds %struct.GPR, %struct.GPR* %7205, i32 0, i32 33
  %7207 = getelementptr inbounds %struct.Reg, %struct.Reg* %7206, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %7207 to i64*
  %7208 = load i64, i64* %PC.i1301
  %7209 = add i64 %7208, 198
  %7210 = load i64, i64* %PC.i1301
  %7211 = add i64 %7210, 5
  store i64 %7211, i64* %PC.i1301
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7209, i64* %7212, align 8
  store %struct.Memory* %loadMem_43f422, %struct.Memory** %MEMORY
  br label %block_.L_43f4e8

block_.L_43f427:                                  ; preds = %block_43f2d6
  %loadMem_43f427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 33
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %7215 to i64*
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7217 = getelementptr inbounds %struct.GPR, %struct.GPR* %7216, i32 0, i32 15
  %7218 = getelementptr inbounds %struct.Reg, %struct.Reg* %7217, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %7218 to i64*
  %7219 = load i64, i64* %RBP.i1300
  %7220 = sub i64 %7219, 76
  %7221 = load i64, i64* %PC.i1299
  %7222 = add i64 %7221, 7
  store i64 %7222, i64* %PC.i1299
  %7223 = inttoptr i64 %7220 to i32*
  store i32 0, i32* %7223
  store %struct.Memory* %loadMem_43f427, %struct.Memory** %MEMORY
  br label %block_.L_43f42e

block_.L_43f42e:                                  ; preds = %block_.L_43f4d5, %block_.L_43f427
  %loadMem_43f42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7225 = getelementptr inbounds %struct.GPR, %struct.GPR* %7224, i32 0, i32 33
  %7226 = getelementptr inbounds %struct.Reg, %struct.Reg* %7225, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %7226 to i64*
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7228 = getelementptr inbounds %struct.GPR, %struct.GPR* %7227, i32 0, i32 15
  %7229 = getelementptr inbounds %struct.Reg, %struct.Reg* %7228, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %7229 to i64*
  %7230 = load i64, i64* %RBP.i1298
  %7231 = sub i64 %7230, 76
  %7232 = load i64, i64* %PC.i1297
  %7233 = add i64 %7232, 4
  store i64 %7233, i64* %PC.i1297
  %7234 = inttoptr i64 %7231 to i32*
  %7235 = load i32, i32* %7234
  %7236 = sub i32 %7235, 4
  %7237 = icmp ult i32 %7235, 4
  %7238 = zext i1 %7237 to i8
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7238, i8* %7239, align 1
  %7240 = and i32 %7236, 255
  %7241 = call i32 @llvm.ctpop.i32(i32 %7240)
  %7242 = trunc i32 %7241 to i8
  %7243 = and i8 %7242, 1
  %7244 = xor i8 %7243, 1
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7244, i8* %7245, align 1
  %7246 = xor i32 %7235, 4
  %7247 = xor i32 %7246, %7236
  %7248 = lshr i32 %7247, 4
  %7249 = trunc i32 %7248 to i8
  %7250 = and i8 %7249, 1
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7250, i8* %7251, align 1
  %7252 = icmp eq i32 %7236, 0
  %7253 = zext i1 %7252 to i8
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7253, i8* %7254, align 1
  %7255 = lshr i32 %7236, 31
  %7256 = trunc i32 %7255 to i8
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7256, i8* %7257, align 1
  %7258 = lshr i32 %7235, 31
  %7259 = xor i32 %7255, %7258
  %7260 = add i32 %7259, %7258
  %7261 = icmp eq i32 %7260, 2
  %7262 = zext i1 %7261 to i8
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7262, i8* %7263, align 1
  store %struct.Memory* %loadMem_43f42e, %struct.Memory** %MEMORY
  %loadMem_43f432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7265 = getelementptr inbounds %struct.GPR, %struct.GPR* %7264, i32 0, i32 33
  %7266 = getelementptr inbounds %struct.Reg, %struct.Reg* %7265, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %7266 to i64*
  %7267 = load i64, i64* %PC.i1296
  %7268 = add i64 %7267, 177
  %7269 = load i64, i64* %PC.i1296
  %7270 = add i64 %7269, 6
  %7271 = load i64, i64* %PC.i1296
  %7272 = add i64 %7271, 6
  store i64 %7272, i64* %PC.i1296
  %7273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7274 = load i8, i8* %7273, align 1
  %7275 = icmp ne i8 %7274, 0
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7277 = load i8, i8* %7276, align 1
  %7278 = icmp ne i8 %7277, 0
  %7279 = xor i1 %7275, %7278
  %7280 = xor i1 %7279, true
  %7281 = zext i1 %7280 to i8
  store i8 %7281, i8* %BRANCH_TAKEN, align 1
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7283 = select i1 %7279, i64 %7270, i64 %7268
  store i64 %7283, i64* %7282, align 8
  store %struct.Memory* %loadMem_43f432, %struct.Memory** %MEMORY
  %loadBr_43f432 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f432 = icmp eq i8 %loadBr_43f432, 1
  br i1 %cmpBr_43f432, label %block_.L_43f4e3, label %block_43f438

block_43f438:                                     ; preds = %block_.L_43f42e
  %loadMem_43f438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 15
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RBP.i1295 = bitcast %union.anon* %7289 to i64*
  %7290 = load i64, i64* %RBP.i1295
  %7291 = sub i64 %7290, 72
  %7292 = load i64, i64* %PC.i1294
  %7293 = add i64 %7292, 7
  store i64 %7293, i64* %PC.i1294
  %7294 = inttoptr i64 %7291 to i32*
  store i32 0, i32* %7294
  store %struct.Memory* %loadMem_43f438, %struct.Memory** %MEMORY
  br label %block_.L_43f43f

block_.L_43f43f:                                  ; preds = %block_43f449, %block_43f438
  %loadMem_43f43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 33
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %7297 to i64*
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 15
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %RBP.i1293 = bitcast %union.anon* %7300 to i64*
  %7301 = load i64, i64* %RBP.i1293
  %7302 = sub i64 %7301, 72
  %7303 = load i64, i64* %PC.i1292
  %7304 = add i64 %7303, 4
  store i64 %7304, i64* %PC.i1292
  %7305 = inttoptr i64 %7302 to i32*
  %7306 = load i32, i32* %7305
  %7307 = sub i32 %7306, 4
  %7308 = icmp ult i32 %7306, 4
  %7309 = zext i1 %7308 to i8
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7309, i8* %7310, align 1
  %7311 = and i32 %7307, 255
  %7312 = call i32 @llvm.ctpop.i32(i32 %7311)
  %7313 = trunc i32 %7312 to i8
  %7314 = and i8 %7313, 1
  %7315 = xor i8 %7314, 1
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7315, i8* %7316, align 1
  %7317 = xor i32 %7306, 4
  %7318 = xor i32 %7317, %7307
  %7319 = lshr i32 %7318, 4
  %7320 = trunc i32 %7319 to i8
  %7321 = and i8 %7320, 1
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7321, i8* %7322, align 1
  %7323 = icmp eq i32 %7307, 0
  %7324 = zext i1 %7323 to i8
  %7325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7324, i8* %7325, align 1
  %7326 = lshr i32 %7307, 31
  %7327 = trunc i32 %7326 to i8
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7327, i8* %7328, align 1
  %7329 = lshr i32 %7306, 31
  %7330 = xor i32 %7326, %7329
  %7331 = add i32 %7330, %7329
  %7332 = icmp eq i32 %7331, 2
  %7333 = zext i1 %7332 to i8
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7333, i8* %7334, align 1
  store %struct.Memory* %loadMem_43f43f, %struct.Memory** %MEMORY
  %loadMem_43f443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 33
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %7337 to i64*
  %7338 = load i64, i64* %PC.i1291
  %7339 = add i64 %7338, 141
  %7340 = load i64, i64* %PC.i1291
  %7341 = add i64 %7340, 6
  %7342 = load i64, i64* %PC.i1291
  %7343 = add i64 %7342, 6
  store i64 %7343, i64* %PC.i1291
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7345 = load i8, i8* %7344, align 1
  %7346 = icmp ne i8 %7345, 0
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7348 = load i8, i8* %7347, align 1
  %7349 = icmp ne i8 %7348, 0
  %7350 = xor i1 %7346, %7349
  %7351 = xor i1 %7350, true
  %7352 = zext i1 %7351 to i8
  store i8 %7352, i8* %BRANCH_TAKEN, align 1
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7354 = select i1 %7350, i64 %7341, i64 %7339
  store i64 %7354, i64* %7353, align 8
  store %struct.Memory* %loadMem_43f443, %struct.Memory** %MEMORY
  %loadBr_43f443 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f443 = icmp eq i8 %loadBr_43f443, 1
  br i1 %cmpBr_43f443, label %block_.L_43f4d0, label %block_43f449

block_43f449:                                     ; preds = %block_.L_43f43f
  %loadMem_43f449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 33
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %7357 to i64*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7359 = getelementptr inbounds %struct.GPR, %struct.GPR* %7358, i32 0, i32 1
  %7360 = getelementptr inbounds %struct.Reg, %struct.Reg* %7359, i32 0, i32 0
  %RAX.i1290 = bitcast %union.anon* %7360 to i64*
  %7361 = load i64, i64* %PC.i1289
  %7362 = add i64 %7361, 8
  store i64 %7362, i64* %PC.i1289
  %7363 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %7363, i64* %RAX.i1290, align 8
  store %struct.Memory* %loadMem_43f449, %struct.Memory** %MEMORY
  %loadMem_43f451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7365 = getelementptr inbounds %struct.GPR, %struct.GPR* %7364, i32 0, i32 33
  %7366 = getelementptr inbounds %struct.Reg, %struct.Reg* %7365, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %7366 to i64*
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7368 = getelementptr inbounds %struct.GPR, %struct.GPR* %7367, i32 0, i32 5
  %7369 = getelementptr inbounds %struct.Reg, %struct.Reg* %7368, i32 0, i32 0
  %RCX.i1287 = bitcast %union.anon* %7369 to i64*
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7371 = getelementptr inbounds %struct.GPR, %struct.GPR* %7370, i32 0, i32 15
  %7372 = getelementptr inbounds %struct.Reg, %struct.Reg* %7371, i32 0, i32 0
  %RBP.i1288 = bitcast %union.anon* %7372 to i64*
  %7373 = load i64, i64* %RBP.i1288
  %7374 = sub i64 %7373, 64
  %7375 = load i64, i64* %PC.i1286
  %7376 = add i64 %7375, 3
  store i64 %7376, i64* %PC.i1286
  %7377 = inttoptr i64 %7374 to i32*
  %7378 = load i32, i32* %7377
  %7379 = zext i32 %7378 to i64
  store i64 %7379, i64* %RCX.i1287, align 8
  store %struct.Memory* %loadMem_43f451, %struct.Memory** %MEMORY
  %loadMem_43f454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7381 = getelementptr inbounds %struct.GPR, %struct.GPR* %7380, i32 0, i32 33
  %7382 = getelementptr inbounds %struct.Reg, %struct.Reg* %7381, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %7382 to i64*
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 5
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %RCX.i1284 = bitcast %union.anon* %7385 to i64*
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 15
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %RBP.i1285 = bitcast %union.anon* %7388 to i64*
  %7389 = load i64, i64* %RCX.i1284
  %7390 = load i64, i64* %RBP.i1285
  %7391 = sub i64 %7390, 76
  %7392 = load i64, i64* %PC.i1283
  %7393 = add i64 %7392, 3
  store i64 %7393, i64* %PC.i1283
  %7394 = trunc i64 %7389 to i32
  %7395 = inttoptr i64 %7391 to i32*
  %7396 = load i32, i32* %7395
  %7397 = add i32 %7396, %7394
  %7398 = zext i32 %7397 to i64
  store i64 %7398, i64* %RCX.i1284, align 8
  %7399 = icmp ult i32 %7397, %7394
  %7400 = icmp ult i32 %7397, %7396
  %7401 = or i1 %7399, %7400
  %7402 = zext i1 %7401 to i8
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7402, i8* %7403, align 1
  %7404 = and i32 %7397, 255
  %7405 = call i32 @llvm.ctpop.i32(i32 %7404)
  %7406 = trunc i32 %7405 to i8
  %7407 = and i8 %7406, 1
  %7408 = xor i8 %7407, 1
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7408, i8* %7409, align 1
  %7410 = xor i32 %7396, %7394
  %7411 = xor i32 %7410, %7397
  %7412 = lshr i32 %7411, 4
  %7413 = trunc i32 %7412 to i8
  %7414 = and i8 %7413, 1
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7414, i8* %7415, align 1
  %7416 = icmp eq i32 %7397, 0
  %7417 = zext i1 %7416 to i8
  %7418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7417, i8* %7418, align 1
  %7419 = lshr i32 %7397, 31
  %7420 = trunc i32 %7419 to i8
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7420, i8* %7421, align 1
  %7422 = lshr i32 %7394, 31
  %7423 = lshr i32 %7396, 31
  %7424 = xor i32 %7419, %7422
  %7425 = xor i32 %7419, %7423
  %7426 = add i32 %7424, %7425
  %7427 = icmp eq i32 %7426, 2
  %7428 = zext i1 %7427 to i8
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7428, i8* %7429, align 1
  store %struct.Memory* %loadMem_43f454, %struct.Memory** %MEMORY
  %loadMem_43f457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7431 = getelementptr inbounds %struct.GPR, %struct.GPR* %7430, i32 0, i32 33
  %7432 = getelementptr inbounds %struct.Reg, %struct.Reg* %7431, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %7432 to i64*
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 5
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %ECX.i1281 = bitcast %union.anon* %7435 to i32*
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 7
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %RDX.i1282 = bitcast %union.anon* %7438 to i64*
  %7439 = load i32, i32* %ECX.i1281
  %7440 = zext i32 %7439 to i64
  %7441 = load i64, i64* %PC.i1280
  %7442 = add i64 %7441, 3
  store i64 %7442, i64* %PC.i1280
  %7443 = shl i64 %7440, 32
  %7444 = ashr exact i64 %7443, 32
  store i64 %7444, i64* %RDX.i1282, align 8
  store %struct.Memory* %loadMem_43f457, %struct.Memory** %MEMORY
  %loadMem_43f45a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7446 = getelementptr inbounds %struct.GPR, %struct.GPR* %7445, i32 0, i32 33
  %7447 = getelementptr inbounds %struct.Reg, %struct.Reg* %7446, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %7447 to i64*
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7449 = getelementptr inbounds %struct.GPR, %struct.GPR* %7448, i32 0, i32 1
  %7450 = getelementptr inbounds %struct.Reg, %struct.Reg* %7449, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %7450 to i64*
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 7
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %RDX.i1279 = bitcast %union.anon* %7453 to i64*
  %7454 = load i64, i64* %RAX.i1278
  %7455 = load i64, i64* %RDX.i1279
  %7456 = mul i64 %7455, 8
  %7457 = add i64 %7456, %7454
  %7458 = load i64, i64* %PC.i1277
  %7459 = add i64 %7458, 4
  store i64 %7459, i64* %PC.i1277
  %7460 = inttoptr i64 %7457 to i64*
  %7461 = load i64, i64* %7460
  store i64 %7461, i64* %RAX.i1278, align 8
  store %struct.Memory* %loadMem_43f45a, %struct.Memory** %MEMORY
  %loadMem_43f45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 33
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %7464 to i64*
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7466 = getelementptr inbounds %struct.GPR, %struct.GPR* %7465, i32 0, i32 5
  %7467 = getelementptr inbounds %struct.Reg, %struct.Reg* %7466, i32 0, i32 0
  %RCX.i1275 = bitcast %union.anon* %7467 to i64*
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7469 = getelementptr inbounds %struct.GPR, %struct.GPR* %7468, i32 0, i32 15
  %7470 = getelementptr inbounds %struct.Reg, %struct.Reg* %7469, i32 0, i32 0
  %RBP.i1276 = bitcast %union.anon* %7470 to i64*
  %7471 = load i64, i64* %RBP.i1276
  %7472 = sub i64 %7471, 68
  %7473 = load i64, i64* %PC.i1274
  %7474 = add i64 %7473, 3
  store i64 %7474, i64* %PC.i1274
  %7475 = inttoptr i64 %7472 to i32*
  %7476 = load i32, i32* %7475
  %7477 = zext i32 %7476 to i64
  store i64 %7477, i64* %RCX.i1275, align 8
  store %struct.Memory* %loadMem_43f45e, %struct.Memory** %MEMORY
  %loadMem_43f461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7479 = getelementptr inbounds %struct.GPR, %struct.GPR* %7478, i32 0, i32 33
  %7480 = getelementptr inbounds %struct.Reg, %struct.Reg* %7479, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %7480 to i64*
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7482 = getelementptr inbounds %struct.GPR, %struct.GPR* %7481, i32 0, i32 5
  %7483 = getelementptr inbounds %struct.Reg, %struct.Reg* %7482, i32 0, i32 0
  %RCX.i1272 = bitcast %union.anon* %7483 to i64*
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7485 = getelementptr inbounds %struct.GPR, %struct.GPR* %7484, i32 0, i32 15
  %7486 = getelementptr inbounds %struct.Reg, %struct.Reg* %7485, i32 0, i32 0
  %RBP.i1273 = bitcast %union.anon* %7486 to i64*
  %7487 = load i64, i64* %RCX.i1272
  %7488 = load i64, i64* %RBP.i1273
  %7489 = sub i64 %7488, 72
  %7490 = load i64, i64* %PC.i1271
  %7491 = add i64 %7490, 3
  store i64 %7491, i64* %PC.i1271
  %7492 = trunc i64 %7487 to i32
  %7493 = inttoptr i64 %7489 to i32*
  %7494 = load i32, i32* %7493
  %7495 = add i32 %7494, %7492
  %7496 = zext i32 %7495 to i64
  store i64 %7496, i64* %RCX.i1272, align 8
  %7497 = icmp ult i32 %7495, %7492
  %7498 = icmp ult i32 %7495, %7494
  %7499 = or i1 %7497, %7498
  %7500 = zext i1 %7499 to i8
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7500, i8* %7501, align 1
  %7502 = and i32 %7495, 255
  %7503 = call i32 @llvm.ctpop.i32(i32 %7502)
  %7504 = trunc i32 %7503 to i8
  %7505 = and i8 %7504, 1
  %7506 = xor i8 %7505, 1
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7506, i8* %7507, align 1
  %7508 = xor i32 %7494, %7492
  %7509 = xor i32 %7508, %7495
  %7510 = lshr i32 %7509, 4
  %7511 = trunc i32 %7510 to i8
  %7512 = and i8 %7511, 1
  %7513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7512, i8* %7513, align 1
  %7514 = icmp eq i32 %7495, 0
  %7515 = zext i1 %7514 to i8
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7515, i8* %7516, align 1
  %7517 = lshr i32 %7495, 31
  %7518 = trunc i32 %7517 to i8
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7518, i8* %7519, align 1
  %7520 = lshr i32 %7492, 31
  %7521 = lshr i32 %7494, 31
  %7522 = xor i32 %7517, %7520
  %7523 = xor i32 %7517, %7521
  %7524 = add i32 %7522, %7523
  %7525 = icmp eq i32 %7524, 2
  %7526 = zext i1 %7525 to i8
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7526, i8* %7527, align 1
  store %struct.Memory* %loadMem_43f461, %struct.Memory** %MEMORY
  %loadMem_43f464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7529 = getelementptr inbounds %struct.GPR, %struct.GPR* %7528, i32 0, i32 33
  %7530 = getelementptr inbounds %struct.Reg, %struct.Reg* %7529, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %7530 to i64*
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7532 = getelementptr inbounds %struct.GPR, %struct.GPR* %7531, i32 0, i32 5
  %7533 = getelementptr inbounds %struct.Reg, %struct.Reg* %7532, i32 0, i32 0
  %ECX.i1269 = bitcast %union.anon* %7533 to i32*
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 7
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %RDX.i1270 = bitcast %union.anon* %7536 to i64*
  %7537 = load i32, i32* %ECX.i1269
  %7538 = zext i32 %7537 to i64
  %7539 = load i64, i64* %PC.i1268
  %7540 = add i64 %7539, 3
  store i64 %7540, i64* %PC.i1268
  %7541 = shl i64 %7538, 32
  %7542 = ashr exact i64 %7541, 32
  store i64 %7542, i64* %RDX.i1270, align 8
  store %struct.Memory* %loadMem_43f464, %struct.Memory** %MEMORY
  %loadMem_43f467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 33
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %7545 to i64*
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 1
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %RAX.i1265 = bitcast %union.anon* %7548 to i64*
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7550 = getelementptr inbounds %struct.GPR, %struct.GPR* %7549, i32 0, i32 5
  %7551 = getelementptr inbounds %struct.Reg, %struct.Reg* %7550, i32 0, i32 0
  %RCX.i1266 = bitcast %union.anon* %7551 to i64*
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7553 = getelementptr inbounds %struct.GPR, %struct.GPR* %7552, i32 0, i32 7
  %7554 = getelementptr inbounds %struct.Reg, %struct.Reg* %7553, i32 0, i32 0
  %RDX.i1267 = bitcast %union.anon* %7554 to i64*
  %7555 = load i64, i64* %RAX.i1265
  %7556 = load i64, i64* %RDX.i1267
  %7557 = mul i64 %7556, 2
  %7558 = add i64 %7557, %7555
  %7559 = load i64, i64* %PC.i1264
  %7560 = add i64 %7559, 4
  store i64 %7560, i64* %PC.i1264
  %7561 = inttoptr i64 %7558 to i16*
  %7562 = load i16, i16* %7561
  %7563 = zext i16 %7562 to i64
  store i64 %7563, i64* %RCX.i1266, align 8
  store %struct.Memory* %loadMem_43f467, %struct.Memory** %MEMORY
  %loadMem_43f46b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7565 = getelementptr inbounds %struct.GPR, %struct.GPR* %7564, i32 0, i32 33
  %7566 = getelementptr inbounds %struct.Reg, %struct.Reg* %7565, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %7566 to i64*
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7568 = getelementptr inbounds %struct.GPR, %struct.GPR* %7567, i32 0, i32 1
  %7569 = getelementptr inbounds %struct.Reg, %struct.Reg* %7568, i32 0, i32 0
  %RAX.i1263 = bitcast %union.anon* %7569 to i64*
  %7570 = load i64, i64* %PC.i1262
  %7571 = add i64 %7570, 8
  store i64 %7571, i64* %PC.i1262
  %7572 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7572, i64* %RAX.i1263, align 8
  store %struct.Memory* %loadMem_43f46b, %struct.Memory** %MEMORY
  %loadMem_43f473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7574 = getelementptr inbounds %struct.GPR, %struct.GPR* %7573, i32 0, i32 33
  %7575 = getelementptr inbounds %struct.Reg, %struct.Reg* %7574, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %7575 to i64*
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7577 = getelementptr inbounds %struct.GPR, %struct.GPR* %7576, i32 0, i32 1
  %7578 = getelementptr inbounds %struct.Reg, %struct.Reg* %7577, i32 0, i32 0
  %RAX.i1261 = bitcast %union.anon* %7578 to i64*
  %7579 = load i64, i64* %RAX.i1261
  %7580 = load i64, i64* %PC.i1260
  %7581 = add i64 %7580, 6
  store i64 %7581, i64* %PC.i1260
  %7582 = add i64 12600, %7579
  store i64 %7582, i64* %RAX.i1261, align 8
  %7583 = icmp ult i64 %7582, %7579
  %7584 = icmp ult i64 %7582, 12600
  %7585 = or i1 %7583, %7584
  %7586 = zext i1 %7585 to i8
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7586, i8* %7587, align 1
  %7588 = trunc i64 %7582 to i32
  %7589 = and i32 %7588, 255
  %7590 = call i32 @llvm.ctpop.i32(i32 %7589)
  %7591 = trunc i32 %7590 to i8
  %7592 = and i8 %7591, 1
  %7593 = xor i8 %7592, 1
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7593, i8* %7594, align 1
  %7595 = xor i64 12600, %7579
  %7596 = xor i64 %7595, %7582
  %7597 = lshr i64 %7596, 4
  %7598 = trunc i64 %7597 to i8
  %7599 = and i8 %7598, 1
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7599, i8* %7600, align 1
  %7601 = icmp eq i64 %7582, 0
  %7602 = zext i1 %7601 to i8
  %7603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7602, i8* %7603, align 1
  %7604 = lshr i64 %7582, 63
  %7605 = trunc i64 %7604 to i8
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7605, i8* %7606, align 1
  %7607 = lshr i64 %7579, 63
  %7608 = xor i64 %7604, %7607
  %7609 = add i64 %7608, %7604
  %7610 = icmp eq i64 %7609, 2
  %7611 = zext i1 %7610 to i8
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7611, i8* %7612, align 1
  store %struct.Memory* %loadMem_43f473, %struct.Memory** %MEMORY
  %loadMem_43f479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 33
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %7615 to i64*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7617 = getelementptr inbounds %struct.GPR, %struct.GPR* %7616, i32 0, i32 9
  %7618 = getelementptr inbounds %struct.Reg, %struct.Reg* %7617, i32 0, i32 0
  %RSI.i1258 = bitcast %union.anon* %7618 to i64*
  %7619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7620 = getelementptr inbounds %struct.GPR, %struct.GPR* %7619, i32 0, i32 15
  %7621 = getelementptr inbounds %struct.Reg, %struct.Reg* %7620, i32 0, i32 0
  %RBP.i1259 = bitcast %union.anon* %7621 to i64*
  %7622 = load i64, i64* %RBP.i1259
  %7623 = sub i64 %7622, 72
  %7624 = load i64, i64* %PC.i1257
  %7625 = add i64 %7624, 3
  store i64 %7625, i64* %PC.i1257
  %7626 = inttoptr i64 %7623 to i32*
  %7627 = load i32, i32* %7626
  %7628 = zext i32 %7627 to i64
  store i64 %7628, i64* %RSI.i1258, align 8
  store %struct.Memory* %loadMem_43f479, %struct.Memory** %MEMORY
  %loadMem_43f47c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7630 = getelementptr inbounds %struct.GPR, %struct.GPR* %7629, i32 0, i32 33
  %7631 = getelementptr inbounds %struct.Reg, %struct.Reg* %7630, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %7631 to i64*
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7633 = getelementptr inbounds %struct.GPR, %struct.GPR* %7632, i32 0, i32 9
  %7634 = getelementptr inbounds %struct.Reg, %struct.Reg* %7633, i32 0, i32 0
  %RSI.i1255 = bitcast %union.anon* %7634 to i64*
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7636 = getelementptr inbounds %struct.GPR, %struct.GPR* %7635, i32 0, i32 15
  %7637 = getelementptr inbounds %struct.Reg, %struct.Reg* %7636, i32 0, i32 0
  %RBP.i1256 = bitcast %union.anon* %7637 to i64*
  %7638 = load i64, i64* %RSI.i1255
  %7639 = load i64, i64* %RBP.i1256
  %7640 = sub i64 %7639, 60
  %7641 = load i64, i64* %PC.i1254
  %7642 = add i64 %7641, 3
  store i64 %7642, i64* %PC.i1254
  %7643 = trunc i64 %7638 to i32
  %7644 = inttoptr i64 %7640 to i32*
  %7645 = load i32, i32* %7644
  %7646 = add i32 %7645, %7643
  %7647 = zext i32 %7646 to i64
  store i64 %7647, i64* %RSI.i1255, align 8
  %7648 = icmp ult i32 %7646, %7643
  %7649 = icmp ult i32 %7646, %7645
  %7650 = or i1 %7648, %7649
  %7651 = zext i1 %7650 to i8
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7651, i8* %7652, align 1
  %7653 = and i32 %7646, 255
  %7654 = call i32 @llvm.ctpop.i32(i32 %7653)
  %7655 = trunc i32 %7654 to i8
  %7656 = and i8 %7655, 1
  %7657 = xor i8 %7656, 1
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7657, i8* %7658, align 1
  %7659 = xor i32 %7645, %7643
  %7660 = xor i32 %7659, %7646
  %7661 = lshr i32 %7660, 4
  %7662 = trunc i32 %7661 to i8
  %7663 = and i8 %7662, 1
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7663, i8* %7664, align 1
  %7665 = icmp eq i32 %7646, 0
  %7666 = zext i1 %7665 to i8
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7666, i8* %7667, align 1
  %7668 = lshr i32 %7646, 31
  %7669 = trunc i32 %7668 to i8
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7669, i8* %7670, align 1
  %7671 = lshr i32 %7643, 31
  %7672 = lshr i32 %7645, 31
  %7673 = xor i32 %7668, %7671
  %7674 = xor i32 %7668, %7672
  %7675 = add i32 %7673, %7674
  %7676 = icmp eq i32 %7675, 2
  %7677 = zext i1 %7676 to i8
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7677, i8* %7678, align 1
  store %struct.Memory* %loadMem_43f47c, %struct.Memory** %MEMORY
  %loadMem_43f47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7680 = getelementptr inbounds %struct.GPR, %struct.GPR* %7679, i32 0, i32 33
  %7681 = getelementptr inbounds %struct.Reg, %struct.Reg* %7680, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %7681 to i64*
  %7682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7683 = getelementptr inbounds %struct.GPR, %struct.GPR* %7682, i32 0, i32 9
  %7684 = getelementptr inbounds %struct.Reg, %struct.Reg* %7683, i32 0, i32 0
  %ESI.i1252 = bitcast %union.anon* %7684 to i32*
  %7685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7686 = getelementptr inbounds %struct.GPR, %struct.GPR* %7685, i32 0, i32 7
  %7687 = getelementptr inbounds %struct.Reg, %struct.Reg* %7686, i32 0, i32 0
  %RDX.i1253 = bitcast %union.anon* %7687 to i64*
  %7688 = load i32, i32* %ESI.i1252
  %7689 = zext i32 %7688 to i64
  %7690 = load i64, i64* %PC.i1251
  %7691 = add i64 %7690, 3
  store i64 %7691, i64* %PC.i1251
  %7692 = shl i64 %7689, 32
  %7693 = ashr exact i64 %7692, 32
  store i64 %7693, i64* %RDX.i1253, align 8
  store %struct.Memory* %loadMem_43f47f, %struct.Memory** %MEMORY
  %loadMem_43f482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7695 = getelementptr inbounds %struct.GPR, %struct.GPR* %7694, i32 0, i32 33
  %7696 = getelementptr inbounds %struct.Reg, %struct.Reg* %7695, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %7696 to i64*
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7698 = getelementptr inbounds %struct.GPR, %struct.GPR* %7697, i32 0, i32 7
  %7699 = getelementptr inbounds %struct.Reg, %struct.Reg* %7698, i32 0, i32 0
  %RDX.i1250 = bitcast %union.anon* %7699 to i64*
  %7700 = load i64, i64* %RDX.i1250
  %7701 = load i64, i64* %PC.i1249
  %7702 = add i64 %7701, 4
  store i64 %7702, i64* %PC.i1249
  %7703 = shl i64 %7700, 4
  %7704 = icmp slt i64 %7703, 0
  %7705 = shl i64 %7703, 1
  store i64 %7705, i64* %RDX.i1250, align 8
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7707 = zext i1 %7704 to i8
  store i8 %7707, i8* %7706, align 1
  %7708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7709 = trunc i64 %7705 to i32
  %7710 = and i32 %7709, 254
  %7711 = call i32 @llvm.ctpop.i32(i32 %7710)
  %7712 = trunc i32 %7711 to i8
  %7713 = and i8 %7712, 1
  %7714 = xor i8 %7713, 1
  store i8 %7714, i8* %7708, align 1
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7715, align 1
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7717 = icmp eq i64 %7705, 0
  %7718 = zext i1 %7717 to i8
  store i8 %7718, i8* %7716, align 1
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7720 = lshr i64 %7705, 63
  %7721 = trunc i64 %7720 to i8
  store i8 %7721, i8* %7719, align 1
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7722, align 1
  store %struct.Memory* %loadMem_43f482, %struct.Memory** %MEMORY
  %loadMem_43f486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7724 = getelementptr inbounds %struct.GPR, %struct.GPR* %7723, i32 0, i32 33
  %7725 = getelementptr inbounds %struct.Reg, %struct.Reg* %7724, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %7725 to i64*
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7727 = getelementptr inbounds %struct.GPR, %struct.GPR* %7726, i32 0, i32 1
  %7728 = getelementptr inbounds %struct.Reg, %struct.Reg* %7727, i32 0, i32 0
  %RAX.i1247 = bitcast %union.anon* %7728 to i64*
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 7
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %RDX.i1248 = bitcast %union.anon* %7731 to i64*
  %7732 = load i64, i64* %RAX.i1247
  %7733 = load i64, i64* %RDX.i1248
  %7734 = load i64, i64* %PC.i1246
  %7735 = add i64 %7734, 3
  store i64 %7735, i64* %PC.i1246
  %7736 = add i64 %7733, %7732
  store i64 %7736, i64* %RAX.i1247, align 8
  %7737 = icmp ult i64 %7736, %7732
  %7738 = icmp ult i64 %7736, %7733
  %7739 = or i1 %7737, %7738
  %7740 = zext i1 %7739 to i8
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7740, i8* %7741, align 1
  %7742 = trunc i64 %7736 to i32
  %7743 = and i32 %7742, 255
  %7744 = call i32 @llvm.ctpop.i32(i32 %7743)
  %7745 = trunc i32 %7744 to i8
  %7746 = and i8 %7745, 1
  %7747 = xor i8 %7746, 1
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7747, i8* %7748, align 1
  %7749 = xor i64 %7733, %7732
  %7750 = xor i64 %7749, %7736
  %7751 = lshr i64 %7750, 4
  %7752 = trunc i64 %7751 to i8
  %7753 = and i8 %7752, 1
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7753, i8* %7754, align 1
  %7755 = icmp eq i64 %7736, 0
  %7756 = zext i1 %7755 to i8
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7756, i8* %7757, align 1
  %7758 = lshr i64 %7736, 63
  %7759 = trunc i64 %7758 to i8
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7759, i8* %7760, align 1
  %7761 = lshr i64 %7732, 63
  %7762 = lshr i64 %7733, 63
  %7763 = xor i64 %7758, %7761
  %7764 = xor i64 %7758, %7762
  %7765 = add i64 %7763, %7764
  %7766 = icmp eq i64 %7765, 2
  %7767 = zext i1 %7766 to i8
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7767, i8* %7768, align 1
  store %struct.Memory* %loadMem_43f486, %struct.Memory** %MEMORY
  %loadMem_43f489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7770 = getelementptr inbounds %struct.GPR, %struct.GPR* %7769, i32 0, i32 33
  %7771 = getelementptr inbounds %struct.Reg, %struct.Reg* %7770, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %7771 to i64*
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 9
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %RSI.i1244 = bitcast %union.anon* %7774 to i64*
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 15
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %RBP.i1245 = bitcast %union.anon* %7777 to i64*
  %7778 = load i64, i64* %RBP.i1245
  %7779 = sub i64 %7778, 76
  %7780 = load i64, i64* %PC.i1243
  %7781 = add i64 %7780, 3
  store i64 %7781, i64* %PC.i1243
  %7782 = inttoptr i64 %7779 to i32*
  %7783 = load i32, i32* %7782
  %7784 = zext i32 %7783 to i64
  store i64 %7784, i64* %RSI.i1244, align 8
  store %struct.Memory* %loadMem_43f489, %struct.Memory** %MEMORY
  %loadMem_43f48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7786 = getelementptr inbounds %struct.GPR, %struct.GPR* %7785, i32 0, i32 33
  %7787 = getelementptr inbounds %struct.Reg, %struct.Reg* %7786, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %7787 to i64*
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7789 = getelementptr inbounds %struct.GPR, %struct.GPR* %7788, i32 0, i32 9
  %7790 = getelementptr inbounds %struct.Reg, %struct.Reg* %7789, i32 0, i32 0
  %RSI.i1241 = bitcast %union.anon* %7790 to i64*
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7792 = getelementptr inbounds %struct.GPR, %struct.GPR* %7791, i32 0, i32 15
  %7793 = getelementptr inbounds %struct.Reg, %struct.Reg* %7792, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %7793 to i64*
  %7794 = load i64, i64* %RSI.i1241
  %7795 = load i64, i64* %RBP.i1242
  %7796 = sub i64 %7795, 56
  %7797 = load i64, i64* %PC.i1240
  %7798 = add i64 %7797, 3
  store i64 %7798, i64* %PC.i1240
  %7799 = trunc i64 %7794 to i32
  %7800 = inttoptr i64 %7796 to i32*
  %7801 = load i32, i32* %7800
  %7802 = add i32 %7801, %7799
  %7803 = zext i32 %7802 to i64
  store i64 %7803, i64* %RSI.i1241, align 8
  %7804 = icmp ult i32 %7802, %7799
  %7805 = icmp ult i32 %7802, %7801
  %7806 = or i1 %7804, %7805
  %7807 = zext i1 %7806 to i8
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7807, i8* %7808, align 1
  %7809 = and i32 %7802, 255
  %7810 = call i32 @llvm.ctpop.i32(i32 %7809)
  %7811 = trunc i32 %7810 to i8
  %7812 = and i8 %7811, 1
  %7813 = xor i8 %7812, 1
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7813, i8* %7814, align 1
  %7815 = xor i32 %7801, %7799
  %7816 = xor i32 %7815, %7802
  %7817 = lshr i32 %7816, 4
  %7818 = trunc i32 %7817 to i8
  %7819 = and i8 %7818, 1
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7819, i8* %7820, align 1
  %7821 = icmp eq i32 %7802, 0
  %7822 = zext i1 %7821 to i8
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7822, i8* %7823, align 1
  %7824 = lshr i32 %7802, 31
  %7825 = trunc i32 %7824 to i8
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7825, i8* %7826, align 1
  %7827 = lshr i32 %7799, 31
  %7828 = lshr i32 %7801, 31
  %7829 = xor i32 %7824, %7827
  %7830 = xor i32 %7824, %7828
  %7831 = add i32 %7829, %7830
  %7832 = icmp eq i32 %7831, 2
  %7833 = zext i1 %7832 to i8
  %7834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7833, i8* %7834, align 1
  store %struct.Memory* %loadMem_43f48c, %struct.Memory** %MEMORY
  %loadMem_43f48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 33
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %7837 to i64*
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7839 = getelementptr inbounds %struct.GPR, %struct.GPR* %7838, i32 0, i32 9
  %7840 = getelementptr inbounds %struct.Reg, %struct.Reg* %7839, i32 0, i32 0
  %ESI.i1238 = bitcast %union.anon* %7840 to i32*
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7842 = getelementptr inbounds %struct.GPR, %struct.GPR* %7841, i32 0, i32 7
  %7843 = getelementptr inbounds %struct.Reg, %struct.Reg* %7842, i32 0, i32 0
  %RDX.i1239 = bitcast %union.anon* %7843 to i64*
  %7844 = load i32, i32* %ESI.i1238
  %7845 = zext i32 %7844 to i64
  %7846 = load i64, i64* %PC.i1237
  %7847 = add i64 %7846, 3
  store i64 %7847, i64* %PC.i1237
  %7848 = shl i64 %7845, 32
  %7849 = ashr exact i64 %7848, 32
  store i64 %7849, i64* %RDX.i1239, align 8
  store %struct.Memory* %loadMem_43f48f, %struct.Memory** %MEMORY
  %loadMem_43f492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7851 = getelementptr inbounds %struct.GPR, %struct.GPR* %7850, i32 0, i32 33
  %7852 = getelementptr inbounds %struct.Reg, %struct.Reg* %7851, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %7852 to i64*
  %7853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7854 = getelementptr inbounds %struct.GPR, %struct.GPR* %7853, i32 0, i32 1
  %7855 = getelementptr inbounds %struct.Reg, %struct.Reg* %7854, i32 0, i32 0
  %RAX.i1234 = bitcast %union.anon* %7855 to i64*
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7857 = getelementptr inbounds %struct.GPR, %struct.GPR* %7856, i32 0, i32 7
  %7858 = getelementptr inbounds %struct.Reg, %struct.Reg* %7857, i32 0, i32 0
  %RDX.i1235 = bitcast %union.anon* %7858 to i64*
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7860 = getelementptr inbounds %struct.GPR, %struct.GPR* %7859, i32 0, i32 9
  %7861 = getelementptr inbounds %struct.Reg, %struct.Reg* %7860, i32 0, i32 0
  %RSI.i1236 = bitcast %union.anon* %7861 to i64*
  %7862 = load i64, i64* %RAX.i1234
  %7863 = load i64, i64* %RDX.i1235
  %7864 = mul i64 %7863, 2
  %7865 = add i64 %7864, %7862
  %7866 = load i64, i64* %PC.i1233
  %7867 = add i64 %7866, 4
  store i64 %7867, i64* %PC.i1233
  %7868 = inttoptr i64 %7865 to i16*
  %7869 = load i16, i16* %7868
  %7870 = zext i16 %7869 to i64
  store i64 %7870, i64* %RSI.i1236, align 8
  store %struct.Memory* %loadMem_43f492, %struct.Memory** %MEMORY
  %loadMem_43f496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7872 = getelementptr inbounds %struct.GPR, %struct.GPR* %7871, i32 0, i32 33
  %7873 = getelementptr inbounds %struct.Reg, %struct.Reg* %7872, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %7873 to i64*
  %7874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7875 = getelementptr inbounds %struct.GPR, %struct.GPR* %7874, i32 0, i32 9
  %7876 = getelementptr inbounds %struct.Reg, %struct.Reg* %7875, i32 0, i32 0
  %ESI.i1231 = bitcast %union.anon* %7876 to i32*
  %7877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7878 = getelementptr inbounds %struct.GPR, %struct.GPR* %7877, i32 0, i32 5
  %7879 = getelementptr inbounds %struct.Reg, %struct.Reg* %7878, i32 0, i32 0
  %RCX.i1232 = bitcast %union.anon* %7879 to i64*
  %7880 = load i64, i64* %RCX.i1232
  %7881 = load i32, i32* %ESI.i1231
  %7882 = zext i32 %7881 to i64
  %7883 = load i64, i64* %PC.i1230
  %7884 = add i64 %7883, 2
  store i64 %7884, i64* %PC.i1230
  %7885 = trunc i64 %7880 to i32
  %7886 = sub i32 %7885, %7881
  %7887 = zext i32 %7886 to i64
  store i64 %7887, i64* %RCX.i1232, align 8
  %7888 = icmp ult i32 %7885, %7881
  %7889 = zext i1 %7888 to i8
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7889, i8* %7890, align 1
  %7891 = and i32 %7886, 255
  %7892 = call i32 @llvm.ctpop.i32(i32 %7891)
  %7893 = trunc i32 %7892 to i8
  %7894 = and i8 %7893, 1
  %7895 = xor i8 %7894, 1
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7895, i8* %7896, align 1
  %7897 = xor i64 %7882, %7880
  %7898 = trunc i64 %7897 to i32
  %7899 = xor i32 %7898, %7886
  %7900 = lshr i32 %7899, 4
  %7901 = trunc i32 %7900 to i8
  %7902 = and i8 %7901, 1
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7902, i8* %7903, align 1
  %7904 = icmp eq i32 %7886, 0
  %7905 = zext i1 %7904 to i8
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7905, i8* %7906, align 1
  %7907 = lshr i32 %7886, 31
  %7908 = trunc i32 %7907 to i8
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7908, i8* %7909, align 1
  %7910 = lshr i32 %7885, 31
  %7911 = lshr i32 %7881, 31
  %7912 = xor i32 %7911, %7910
  %7913 = xor i32 %7907, %7910
  %7914 = add i32 %7913, %7912
  %7915 = icmp eq i32 %7914, 2
  %7916 = zext i1 %7915 to i8
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7916, i8* %7917, align 1
  store %struct.Memory* %loadMem_43f496, %struct.Memory** %MEMORY
  %loadMem_43f498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 33
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %7920 to i64*
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 1
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %7923 to i64*
  %7924 = load i64, i64* %PC.i1228
  %7925 = add i64 %7924, 8
  store i64 %7925, i64* %PC.i1228
  %7926 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7926, i64* %RAX.i1229, align 8
  store %struct.Memory* %loadMem_43f498, %struct.Memory** %MEMORY
  %loadMem_43f4a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 33
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %7929 to i64*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 1
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %RAX.i1227 = bitcast %union.anon* %7932 to i64*
  %7933 = load i64, i64* %RAX.i1227
  %7934 = load i64, i64* %PC.i1226
  %7935 = add i64 %7934, 6
  store i64 %7935, i64* %PC.i1226
  %7936 = add i64 13112, %7933
  store i64 %7936, i64* %RAX.i1227, align 8
  %7937 = icmp ult i64 %7936, %7933
  %7938 = icmp ult i64 %7936, 13112
  %7939 = or i1 %7937, %7938
  %7940 = zext i1 %7939 to i8
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7940, i8* %7941, align 1
  %7942 = trunc i64 %7936 to i32
  %7943 = and i32 %7942, 255
  %7944 = call i32 @llvm.ctpop.i32(i32 %7943)
  %7945 = trunc i32 %7944 to i8
  %7946 = and i8 %7945, 1
  %7947 = xor i8 %7946, 1
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7947, i8* %7948, align 1
  %7949 = xor i64 13112, %7933
  %7950 = xor i64 %7949, %7936
  %7951 = lshr i64 %7950, 4
  %7952 = trunc i64 %7951 to i8
  %7953 = and i8 %7952, 1
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7953, i8* %7954, align 1
  %7955 = icmp eq i64 %7936, 0
  %7956 = zext i1 %7955 to i8
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7956, i8* %7957, align 1
  %7958 = lshr i64 %7936, 63
  %7959 = trunc i64 %7958 to i8
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7959, i8* %7960, align 1
  %7961 = lshr i64 %7933, 63
  %7962 = xor i64 %7958, %7961
  %7963 = add i64 %7962, %7958
  %7964 = icmp eq i64 %7963, 2
  %7965 = zext i1 %7964 to i8
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7965, i8* %7966, align 1
  store %struct.Memory* %loadMem_43f4a0, %struct.Memory** %MEMORY
  %loadMem_43f4a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7968 = getelementptr inbounds %struct.GPR, %struct.GPR* %7967, i32 0, i32 33
  %7969 = getelementptr inbounds %struct.Reg, %struct.Reg* %7968, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %7969 to i64*
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7971 = getelementptr inbounds %struct.GPR, %struct.GPR* %7970, i32 0, i32 9
  %7972 = getelementptr inbounds %struct.Reg, %struct.Reg* %7971, i32 0, i32 0
  %RSI.i1224 = bitcast %union.anon* %7972 to i64*
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7974 = getelementptr inbounds %struct.GPR, %struct.GPR* %7973, i32 0, i32 15
  %7975 = getelementptr inbounds %struct.Reg, %struct.Reg* %7974, i32 0, i32 0
  %RBP.i1225 = bitcast %union.anon* %7975 to i64*
  %7976 = load i64, i64* %RBP.i1225
  %7977 = sub i64 %7976, 72
  %7978 = load i64, i64* %PC.i1223
  %7979 = add i64 %7978, 3
  store i64 %7979, i64* %PC.i1223
  %7980 = inttoptr i64 %7977 to i32*
  %7981 = load i32, i32* %7980
  %7982 = zext i32 %7981 to i64
  store i64 %7982, i64* %RSI.i1224, align 8
  store %struct.Memory* %loadMem_43f4a6, %struct.Memory** %MEMORY
  %loadMem_43f4a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7984 = getelementptr inbounds %struct.GPR, %struct.GPR* %7983, i32 0, i32 33
  %7985 = getelementptr inbounds %struct.Reg, %struct.Reg* %7984, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %7985 to i64*
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 9
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %RSI.i1221 = bitcast %union.anon* %7988 to i64*
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 15
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %RBP.i1222 = bitcast %union.anon* %7991 to i64*
  %7992 = load i64, i64* %RSI.i1221
  %7993 = load i64, i64* %RBP.i1222
  %7994 = sub i64 %7993, 104
  %7995 = load i64, i64* %PC.i1220
  %7996 = add i64 %7995, 3
  store i64 %7996, i64* %PC.i1220
  %7997 = trunc i64 %7992 to i32
  %7998 = inttoptr i64 %7994 to i32*
  %7999 = load i32, i32* %7998
  %8000 = add i32 %7999, %7997
  %8001 = zext i32 %8000 to i64
  store i64 %8001, i64* %RSI.i1221, align 8
  %8002 = icmp ult i32 %8000, %7997
  %8003 = icmp ult i32 %8000, %7999
  %8004 = or i1 %8002, %8003
  %8005 = zext i1 %8004 to i8
  %8006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8005, i8* %8006, align 1
  %8007 = and i32 %8000, 255
  %8008 = call i32 @llvm.ctpop.i32(i32 %8007)
  %8009 = trunc i32 %8008 to i8
  %8010 = and i8 %8009, 1
  %8011 = xor i8 %8010, 1
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8011, i8* %8012, align 1
  %8013 = xor i32 %7999, %7997
  %8014 = xor i32 %8013, %8000
  %8015 = lshr i32 %8014, 4
  %8016 = trunc i32 %8015 to i8
  %8017 = and i8 %8016, 1
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8017, i8* %8018, align 1
  %8019 = icmp eq i32 %8000, 0
  %8020 = zext i1 %8019 to i8
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8020, i8* %8021, align 1
  %8022 = lshr i32 %8000, 31
  %8023 = trunc i32 %8022 to i8
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8023, i8* %8024, align 1
  %8025 = lshr i32 %7997, 31
  %8026 = lshr i32 %7999, 31
  %8027 = xor i32 %8022, %8025
  %8028 = xor i32 %8022, %8026
  %8029 = add i32 %8027, %8028
  %8030 = icmp eq i32 %8029, 2
  %8031 = zext i1 %8030 to i8
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8031, i8* %8032, align 1
  store %struct.Memory* %loadMem_43f4a9, %struct.Memory** %MEMORY
  %loadMem_43f4ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 33
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %8035 to i64*
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8037 = getelementptr inbounds %struct.GPR, %struct.GPR* %8036, i32 0, i32 9
  %8038 = getelementptr inbounds %struct.Reg, %struct.Reg* %8037, i32 0, i32 0
  %ESI.i1218 = bitcast %union.anon* %8038 to i32*
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8040 = getelementptr inbounds %struct.GPR, %struct.GPR* %8039, i32 0, i32 7
  %8041 = getelementptr inbounds %struct.Reg, %struct.Reg* %8040, i32 0, i32 0
  %RDX.i1219 = bitcast %union.anon* %8041 to i64*
  %8042 = load i32, i32* %ESI.i1218
  %8043 = zext i32 %8042 to i64
  %8044 = load i64, i64* %PC.i1217
  %8045 = add i64 %8044, 3
  store i64 %8045, i64* %PC.i1217
  %8046 = shl i64 %8043, 32
  %8047 = ashr exact i64 %8046, 32
  store i64 %8047, i64* %RDX.i1219, align 8
  store %struct.Memory* %loadMem_43f4ac, %struct.Memory** %MEMORY
  %loadMem_43f4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8049 = getelementptr inbounds %struct.GPR, %struct.GPR* %8048, i32 0, i32 33
  %8050 = getelementptr inbounds %struct.Reg, %struct.Reg* %8049, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %8050 to i64*
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 7
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %RDX.i1216 = bitcast %union.anon* %8053 to i64*
  %8054 = load i64, i64* %RDX.i1216
  %8055 = load i64, i64* %PC.i1215
  %8056 = add i64 %8055, 4
  store i64 %8056, i64* %PC.i1215
  %8057 = shl i64 %8054, 5
  %8058 = icmp slt i64 %8057, 0
  %8059 = shl i64 %8057, 1
  store i64 %8059, i64* %RDX.i1216, align 8
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8061 = zext i1 %8058 to i8
  store i8 %8061, i8* %8060, align 1
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8063 = trunc i64 %8059 to i32
  %8064 = and i32 %8063, 254
  %8065 = call i32 @llvm.ctpop.i32(i32 %8064)
  %8066 = trunc i32 %8065 to i8
  %8067 = and i8 %8066, 1
  %8068 = xor i8 %8067, 1
  store i8 %8068, i8* %8062, align 1
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8069, align 1
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8071 = icmp eq i64 %8059, 0
  %8072 = zext i1 %8071 to i8
  store i8 %8072, i8* %8070, align 1
  %8073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8074 = lshr i64 %8059, 63
  %8075 = trunc i64 %8074 to i8
  store i8 %8075, i8* %8073, align 1
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8076, align 1
  store %struct.Memory* %loadMem_43f4af, %struct.Memory** %MEMORY
  %loadMem_43f4b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8078 = getelementptr inbounds %struct.GPR, %struct.GPR* %8077, i32 0, i32 33
  %8079 = getelementptr inbounds %struct.Reg, %struct.Reg* %8078, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %8079 to i64*
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8081 = getelementptr inbounds %struct.GPR, %struct.GPR* %8080, i32 0, i32 1
  %8082 = getelementptr inbounds %struct.Reg, %struct.Reg* %8081, i32 0, i32 0
  %RAX.i1213 = bitcast %union.anon* %8082 to i64*
  %8083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8084 = getelementptr inbounds %struct.GPR, %struct.GPR* %8083, i32 0, i32 7
  %8085 = getelementptr inbounds %struct.Reg, %struct.Reg* %8084, i32 0, i32 0
  %RDX.i1214 = bitcast %union.anon* %8085 to i64*
  %8086 = load i64, i64* %RAX.i1213
  %8087 = load i64, i64* %RDX.i1214
  %8088 = load i64, i64* %PC.i1212
  %8089 = add i64 %8088, 3
  store i64 %8089, i64* %PC.i1212
  %8090 = add i64 %8087, %8086
  store i64 %8090, i64* %RAX.i1213, align 8
  %8091 = icmp ult i64 %8090, %8086
  %8092 = icmp ult i64 %8090, %8087
  %8093 = or i1 %8091, %8092
  %8094 = zext i1 %8093 to i8
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8094, i8* %8095, align 1
  %8096 = trunc i64 %8090 to i32
  %8097 = and i32 %8096, 255
  %8098 = call i32 @llvm.ctpop.i32(i32 %8097)
  %8099 = trunc i32 %8098 to i8
  %8100 = and i8 %8099, 1
  %8101 = xor i8 %8100, 1
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8101, i8* %8102, align 1
  %8103 = xor i64 %8087, %8086
  %8104 = xor i64 %8103, %8090
  %8105 = lshr i64 %8104, 4
  %8106 = trunc i64 %8105 to i8
  %8107 = and i8 %8106, 1
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8107, i8* %8108, align 1
  %8109 = icmp eq i64 %8090, 0
  %8110 = zext i1 %8109 to i8
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8110, i8* %8111, align 1
  %8112 = lshr i64 %8090, 63
  %8113 = trunc i64 %8112 to i8
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8113, i8* %8114, align 1
  %8115 = lshr i64 %8086, 63
  %8116 = lshr i64 %8087, 63
  %8117 = xor i64 %8112, %8115
  %8118 = xor i64 %8112, %8116
  %8119 = add i64 %8117, %8118
  %8120 = icmp eq i64 %8119, 2
  %8121 = zext i1 %8120 to i8
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8121, i8* %8122, align 1
  store %struct.Memory* %loadMem_43f4b3, %struct.Memory** %MEMORY
  %loadMem_43f4b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8124 = getelementptr inbounds %struct.GPR, %struct.GPR* %8123, i32 0, i32 33
  %8125 = getelementptr inbounds %struct.Reg, %struct.Reg* %8124, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %8125 to i64*
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8127 = getelementptr inbounds %struct.GPR, %struct.GPR* %8126, i32 0, i32 9
  %8128 = getelementptr inbounds %struct.Reg, %struct.Reg* %8127, i32 0, i32 0
  %RSI.i1210 = bitcast %union.anon* %8128 to i64*
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8130 = getelementptr inbounds %struct.GPR, %struct.GPR* %8129, i32 0, i32 15
  %8131 = getelementptr inbounds %struct.Reg, %struct.Reg* %8130, i32 0, i32 0
  %RBP.i1211 = bitcast %union.anon* %8131 to i64*
  %8132 = load i64, i64* %RBP.i1211
  %8133 = sub i64 %8132, 76
  %8134 = load i64, i64* %PC.i1209
  %8135 = add i64 %8134, 3
  store i64 %8135, i64* %PC.i1209
  %8136 = inttoptr i64 %8133 to i32*
  %8137 = load i32, i32* %8136
  %8138 = zext i32 %8137 to i64
  store i64 %8138, i64* %RSI.i1210, align 8
  store %struct.Memory* %loadMem_43f4b6, %struct.Memory** %MEMORY
  %loadMem_43f4b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8140 = getelementptr inbounds %struct.GPR, %struct.GPR* %8139, i32 0, i32 33
  %8141 = getelementptr inbounds %struct.Reg, %struct.Reg* %8140, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %8141 to i64*
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8143 = getelementptr inbounds %struct.GPR, %struct.GPR* %8142, i32 0, i32 9
  %8144 = getelementptr inbounds %struct.Reg, %struct.Reg* %8143, i32 0, i32 0
  %RSI.i1207 = bitcast %union.anon* %8144 to i64*
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8146 = getelementptr inbounds %struct.GPR, %struct.GPR* %8145, i32 0, i32 15
  %8147 = getelementptr inbounds %struct.Reg, %struct.Reg* %8146, i32 0, i32 0
  %RBP.i1208 = bitcast %union.anon* %8147 to i64*
  %8148 = load i64, i64* %RSI.i1207
  %8149 = load i64, i64* %RBP.i1208
  %8150 = sub i64 %8149, 108
  %8151 = load i64, i64* %PC.i1206
  %8152 = add i64 %8151, 3
  store i64 %8152, i64* %PC.i1206
  %8153 = trunc i64 %8148 to i32
  %8154 = inttoptr i64 %8150 to i32*
  %8155 = load i32, i32* %8154
  %8156 = add i32 %8155, %8153
  %8157 = zext i32 %8156 to i64
  store i64 %8157, i64* %RSI.i1207, align 8
  %8158 = icmp ult i32 %8156, %8153
  %8159 = icmp ult i32 %8156, %8155
  %8160 = or i1 %8158, %8159
  %8161 = zext i1 %8160 to i8
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8161, i8* %8162, align 1
  %8163 = and i32 %8156, 255
  %8164 = call i32 @llvm.ctpop.i32(i32 %8163)
  %8165 = trunc i32 %8164 to i8
  %8166 = and i8 %8165, 1
  %8167 = xor i8 %8166, 1
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8167, i8* %8168, align 1
  %8169 = xor i32 %8155, %8153
  %8170 = xor i32 %8169, %8156
  %8171 = lshr i32 %8170, 4
  %8172 = trunc i32 %8171 to i8
  %8173 = and i8 %8172, 1
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8173, i8* %8174, align 1
  %8175 = icmp eq i32 %8156, 0
  %8176 = zext i1 %8175 to i8
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8176, i8* %8177, align 1
  %8178 = lshr i32 %8156, 31
  %8179 = trunc i32 %8178 to i8
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8179, i8* %8180, align 1
  %8181 = lshr i32 %8153, 31
  %8182 = lshr i32 %8155, 31
  %8183 = xor i32 %8178, %8181
  %8184 = xor i32 %8178, %8182
  %8185 = add i32 %8183, %8184
  %8186 = icmp eq i32 %8185, 2
  %8187 = zext i1 %8186 to i8
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8187, i8* %8188, align 1
  store %struct.Memory* %loadMem_43f4b9, %struct.Memory** %MEMORY
  %loadMem_43f4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8190 = getelementptr inbounds %struct.GPR, %struct.GPR* %8189, i32 0, i32 33
  %8191 = getelementptr inbounds %struct.Reg, %struct.Reg* %8190, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %8191 to i64*
  %8192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8193 = getelementptr inbounds %struct.GPR, %struct.GPR* %8192, i32 0, i32 9
  %8194 = getelementptr inbounds %struct.Reg, %struct.Reg* %8193, i32 0, i32 0
  %ESI.i1204 = bitcast %union.anon* %8194 to i32*
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8196 = getelementptr inbounds %struct.GPR, %struct.GPR* %8195, i32 0, i32 7
  %8197 = getelementptr inbounds %struct.Reg, %struct.Reg* %8196, i32 0, i32 0
  %RDX.i1205 = bitcast %union.anon* %8197 to i64*
  %8198 = load i32, i32* %ESI.i1204
  %8199 = zext i32 %8198 to i64
  %8200 = load i64, i64* %PC.i1203
  %8201 = add i64 %8200, 3
  store i64 %8201, i64* %PC.i1203
  %8202 = shl i64 %8199, 32
  %8203 = ashr exact i64 %8202, 32
  store i64 %8203, i64* %RDX.i1205, align 8
  store %struct.Memory* %loadMem_43f4bc, %struct.Memory** %MEMORY
  %loadMem_43f4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8205 = getelementptr inbounds %struct.GPR, %struct.GPR* %8204, i32 0, i32 33
  %8206 = getelementptr inbounds %struct.Reg, %struct.Reg* %8205, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %8206 to i64*
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 5
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %ECX.i1200 = bitcast %union.anon* %8209 to i32*
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 1
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %RAX.i1201 = bitcast %union.anon* %8212 to i64*
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 7
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %RDX.i1202 = bitcast %union.anon* %8215 to i64*
  %8216 = load i64, i64* %RAX.i1201
  %8217 = load i64, i64* %RDX.i1202
  %8218 = mul i64 %8217, 4
  %8219 = add i64 %8218, %8216
  %8220 = load i32, i32* %ECX.i1200
  %8221 = zext i32 %8220 to i64
  %8222 = load i64, i64* %PC.i1199
  %8223 = add i64 %8222, 3
  store i64 %8223, i64* %PC.i1199
  %8224 = inttoptr i64 %8219 to i32*
  store i32 %8220, i32* %8224
  store %struct.Memory* %loadMem_43f4bf, %struct.Memory** %MEMORY
  %loadMem_43f4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8226 = getelementptr inbounds %struct.GPR, %struct.GPR* %8225, i32 0, i32 33
  %8227 = getelementptr inbounds %struct.Reg, %struct.Reg* %8226, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %8227 to i64*
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8229 = getelementptr inbounds %struct.GPR, %struct.GPR* %8228, i32 0, i32 1
  %8230 = getelementptr inbounds %struct.Reg, %struct.Reg* %8229, i32 0, i32 0
  %RAX.i1197 = bitcast %union.anon* %8230 to i64*
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8232 = getelementptr inbounds %struct.GPR, %struct.GPR* %8231, i32 0, i32 15
  %8233 = getelementptr inbounds %struct.Reg, %struct.Reg* %8232, i32 0, i32 0
  %RBP.i1198 = bitcast %union.anon* %8233 to i64*
  %8234 = load i64, i64* %RBP.i1198
  %8235 = sub i64 %8234, 72
  %8236 = load i64, i64* %PC.i1196
  %8237 = add i64 %8236, 3
  store i64 %8237, i64* %PC.i1196
  %8238 = inttoptr i64 %8235 to i32*
  %8239 = load i32, i32* %8238
  %8240 = zext i32 %8239 to i64
  store i64 %8240, i64* %RAX.i1197, align 8
  store %struct.Memory* %loadMem_43f4c2, %struct.Memory** %MEMORY
  %loadMem_43f4c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8242 = getelementptr inbounds %struct.GPR, %struct.GPR* %8241, i32 0, i32 33
  %8243 = getelementptr inbounds %struct.Reg, %struct.Reg* %8242, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %8243 to i64*
  %8244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8245 = getelementptr inbounds %struct.GPR, %struct.GPR* %8244, i32 0, i32 1
  %8246 = getelementptr inbounds %struct.Reg, %struct.Reg* %8245, i32 0, i32 0
  %RAX.i1195 = bitcast %union.anon* %8246 to i64*
  %8247 = load i64, i64* %RAX.i1195
  %8248 = load i64, i64* %PC.i1194
  %8249 = add i64 %8248, 3
  store i64 %8249, i64* %PC.i1194
  %8250 = trunc i64 %8247 to i32
  %8251 = add i32 1, %8250
  %8252 = zext i32 %8251 to i64
  store i64 %8252, i64* %RAX.i1195, align 8
  %8253 = icmp ult i32 %8251, %8250
  %8254 = icmp ult i32 %8251, 1
  %8255 = or i1 %8253, %8254
  %8256 = zext i1 %8255 to i8
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8256, i8* %8257, align 1
  %8258 = and i32 %8251, 255
  %8259 = call i32 @llvm.ctpop.i32(i32 %8258)
  %8260 = trunc i32 %8259 to i8
  %8261 = and i8 %8260, 1
  %8262 = xor i8 %8261, 1
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8262, i8* %8263, align 1
  %8264 = xor i64 1, %8247
  %8265 = trunc i64 %8264 to i32
  %8266 = xor i32 %8265, %8251
  %8267 = lshr i32 %8266, 4
  %8268 = trunc i32 %8267 to i8
  %8269 = and i8 %8268, 1
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8269, i8* %8270, align 1
  %8271 = icmp eq i32 %8251, 0
  %8272 = zext i1 %8271 to i8
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8272, i8* %8273, align 1
  %8274 = lshr i32 %8251, 31
  %8275 = trunc i32 %8274 to i8
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8275, i8* %8276, align 1
  %8277 = lshr i32 %8250, 31
  %8278 = xor i32 %8274, %8277
  %8279 = add i32 %8278, %8274
  %8280 = icmp eq i32 %8279, 2
  %8281 = zext i1 %8280 to i8
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8281, i8* %8282, align 1
  store %struct.Memory* %loadMem_43f4c5, %struct.Memory** %MEMORY
  %loadMem_43f4c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8284 = getelementptr inbounds %struct.GPR, %struct.GPR* %8283, i32 0, i32 33
  %8285 = getelementptr inbounds %struct.Reg, %struct.Reg* %8284, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %8285 to i64*
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8287 = getelementptr inbounds %struct.GPR, %struct.GPR* %8286, i32 0, i32 1
  %8288 = getelementptr inbounds %struct.Reg, %struct.Reg* %8287, i32 0, i32 0
  %EAX.i1192 = bitcast %union.anon* %8288 to i32*
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8290 = getelementptr inbounds %struct.GPR, %struct.GPR* %8289, i32 0, i32 15
  %8291 = getelementptr inbounds %struct.Reg, %struct.Reg* %8290, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %8291 to i64*
  %8292 = load i64, i64* %RBP.i1193
  %8293 = sub i64 %8292, 72
  %8294 = load i32, i32* %EAX.i1192
  %8295 = zext i32 %8294 to i64
  %8296 = load i64, i64* %PC.i1191
  %8297 = add i64 %8296, 3
  store i64 %8297, i64* %PC.i1191
  %8298 = inttoptr i64 %8293 to i32*
  store i32 %8294, i32* %8298
  store %struct.Memory* %loadMem_43f4c8, %struct.Memory** %MEMORY
  %loadMem_43f4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8300 = getelementptr inbounds %struct.GPR, %struct.GPR* %8299, i32 0, i32 33
  %8301 = getelementptr inbounds %struct.Reg, %struct.Reg* %8300, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %8301 to i64*
  %8302 = load i64, i64* %PC.i1190
  %8303 = add i64 %8302, -140
  %8304 = load i64, i64* %PC.i1190
  %8305 = add i64 %8304, 5
  store i64 %8305, i64* %PC.i1190
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8303, i64* %8306, align 8
  store %struct.Memory* %loadMem_43f4cb, %struct.Memory** %MEMORY
  br label %block_.L_43f43f

block_.L_43f4d0:                                  ; preds = %block_.L_43f43f
  %loadMem_43f4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8308 = getelementptr inbounds %struct.GPR, %struct.GPR* %8307, i32 0, i32 33
  %8309 = getelementptr inbounds %struct.Reg, %struct.Reg* %8308, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %8309 to i64*
  %8310 = load i64, i64* %PC.i1189
  %8311 = add i64 %8310, 5
  %8312 = load i64, i64* %PC.i1189
  %8313 = add i64 %8312, 5
  store i64 %8313, i64* %PC.i1189
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8311, i64* %8314, align 8
  store %struct.Memory* %loadMem_43f4d0, %struct.Memory** %MEMORY
  br label %block_.L_43f4d5

block_.L_43f4d5:                                  ; preds = %block_.L_43f4d0
  %loadMem_43f4d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8316 = getelementptr inbounds %struct.GPR, %struct.GPR* %8315, i32 0, i32 33
  %8317 = getelementptr inbounds %struct.Reg, %struct.Reg* %8316, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %8317 to i64*
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8319 = getelementptr inbounds %struct.GPR, %struct.GPR* %8318, i32 0, i32 1
  %8320 = getelementptr inbounds %struct.Reg, %struct.Reg* %8319, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %8320 to i64*
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8322 = getelementptr inbounds %struct.GPR, %struct.GPR* %8321, i32 0, i32 15
  %8323 = getelementptr inbounds %struct.Reg, %struct.Reg* %8322, i32 0, i32 0
  %RBP.i1188 = bitcast %union.anon* %8323 to i64*
  %8324 = load i64, i64* %RBP.i1188
  %8325 = sub i64 %8324, 76
  %8326 = load i64, i64* %PC.i1186
  %8327 = add i64 %8326, 3
  store i64 %8327, i64* %PC.i1186
  %8328 = inttoptr i64 %8325 to i32*
  %8329 = load i32, i32* %8328
  %8330 = zext i32 %8329 to i64
  store i64 %8330, i64* %RAX.i1187, align 8
  store %struct.Memory* %loadMem_43f4d5, %struct.Memory** %MEMORY
  %loadMem_43f4d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8332 = getelementptr inbounds %struct.GPR, %struct.GPR* %8331, i32 0, i32 33
  %8333 = getelementptr inbounds %struct.Reg, %struct.Reg* %8332, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %8333 to i64*
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8335 = getelementptr inbounds %struct.GPR, %struct.GPR* %8334, i32 0, i32 1
  %8336 = getelementptr inbounds %struct.Reg, %struct.Reg* %8335, i32 0, i32 0
  %RAX.i1185 = bitcast %union.anon* %8336 to i64*
  %8337 = load i64, i64* %RAX.i1185
  %8338 = load i64, i64* %PC.i1184
  %8339 = add i64 %8338, 3
  store i64 %8339, i64* %PC.i1184
  %8340 = trunc i64 %8337 to i32
  %8341 = add i32 1, %8340
  %8342 = zext i32 %8341 to i64
  store i64 %8342, i64* %RAX.i1185, align 8
  %8343 = icmp ult i32 %8341, %8340
  %8344 = icmp ult i32 %8341, 1
  %8345 = or i1 %8343, %8344
  %8346 = zext i1 %8345 to i8
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8346, i8* %8347, align 1
  %8348 = and i32 %8341, 255
  %8349 = call i32 @llvm.ctpop.i32(i32 %8348)
  %8350 = trunc i32 %8349 to i8
  %8351 = and i8 %8350, 1
  %8352 = xor i8 %8351, 1
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8352, i8* %8353, align 1
  %8354 = xor i64 1, %8337
  %8355 = trunc i64 %8354 to i32
  %8356 = xor i32 %8355, %8341
  %8357 = lshr i32 %8356, 4
  %8358 = trunc i32 %8357 to i8
  %8359 = and i8 %8358, 1
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8359, i8* %8360, align 1
  %8361 = icmp eq i32 %8341, 0
  %8362 = zext i1 %8361 to i8
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8362, i8* %8363, align 1
  %8364 = lshr i32 %8341, 31
  %8365 = trunc i32 %8364 to i8
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8365, i8* %8366, align 1
  %8367 = lshr i32 %8340, 31
  %8368 = xor i32 %8364, %8367
  %8369 = add i32 %8368, %8364
  %8370 = icmp eq i32 %8369, 2
  %8371 = zext i1 %8370 to i8
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8371, i8* %8372, align 1
  store %struct.Memory* %loadMem_43f4d8, %struct.Memory** %MEMORY
  %loadMem_43f4db = load %struct.Memory*, %struct.Memory** %MEMORY
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 33
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %8375 to i64*
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 1
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %EAX.i1182 = bitcast %union.anon* %8378 to i32*
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 15
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %RBP.i1183 = bitcast %union.anon* %8381 to i64*
  %8382 = load i64, i64* %RBP.i1183
  %8383 = sub i64 %8382, 76
  %8384 = load i32, i32* %EAX.i1182
  %8385 = zext i32 %8384 to i64
  %8386 = load i64, i64* %PC.i1181
  %8387 = add i64 %8386, 3
  store i64 %8387, i64* %PC.i1181
  %8388 = inttoptr i64 %8383 to i32*
  store i32 %8384, i32* %8388
  store %struct.Memory* %loadMem_43f4db, %struct.Memory** %MEMORY
  %loadMem_43f4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8390 = getelementptr inbounds %struct.GPR, %struct.GPR* %8389, i32 0, i32 33
  %8391 = getelementptr inbounds %struct.Reg, %struct.Reg* %8390, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %8391 to i64*
  %8392 = load i64, i64* %PC.i1180
  %8393 = add i64 %8392, -176
  %8394 = load i64, i64* %PC.i1180
  %8395 = add i64 %8394, 5
  store i64 %8395, i64* %PC.i1180
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8393, i64* %8396, align 8
  store %struct.Memory* %loadMem_43f4de, %struct.Memory** %MEMORY
  br label %block_.L_43f42e

block_.L_43f4e3:                                  ; preds = %block_.L_43f42e
  %loadMem_43f4e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8398 = getelementptr inbounds %struct.GPR, %struct.GPR* %8397, i32 0, i32 33
  %8399 = getelementptr inbounds %struct.Reg, %struct.Reg* %8398, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %8399 to i64*
  %8400 = load i64, i64* %PC.i1179
  %8401 = add i64 %8400, 5
  %8402 = load i64, i64* %PC.i1179
  %8403 = add i64 %8402, 5
  store i64 %8403, i64* %PC.i1179
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8401, i64* %8404, align 8
  store %struct.Memory* %loadMem_43f4e3, %struct.Memory** %MEMORY
  br label %block_.L_43f4e8

block_.L_43f4e8:                                  ; preds = %block_.L_43f4e3, %block_.L_43f422
  %loadMem_43f4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 33
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %8407 to i64*
  %8408 = load i64, i64* %PC.i1178
  %8409 = add i64 %8408, 1044
  %8410 = load i64, i64* %PC.i1178
  %8411 = add i64 %8410, 5
  store i64 %8411, i64* %PC.i1178
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8409, i64* %8412, align 8
  store %struct.Memory* %loadMem_43f4e8, %struct.Memory** %MEMORY
  br label %block_.L_43f8fc

block_.L_43f4ed:                                  ; preds = %block_.L_43f2c1
  %loadMem_43f4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8414 = getelementptr inbounds %struct.GPR, %struct.GPR* %8413, i32 0, i32 33
  %8415 = getelementptr inbounds %struct.Reg, %struct.Reg* %8414, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %8415 to i64*
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8417 = getelementptr inbounds %struct.GPR, %struct.GPR* %8416, i32 0, i32 15
  %8418 = getelementptr inbounds %struct.Reg, %struct.Reg* %8417, i32 0, i32 0
  %RBP.i1177 = bitcast %union.anon* %8418 to i64*
  %8419 = load i64, i64* %RBP.i1177
  %8420 = sub i64 %8419, 76
  %8421 = load i64, i64* %PC.i1176
  %8422 = add i64 %8421, 7
  store i64 %8422, i64* %PC.i1176
  %8423 = inttoptr i64 %8420 to i32*
  store i32 0, i32* %8423
  store %struct.Memory* %loadMem_43f4ed, %struct.Memory** %MEMORY
  br label %block_.L_43f4f4

block_.L_43f4f4:                                  ; preds = %block_.L_43f7c5, %block_.L_43f4ed
  %loadMem_43f4f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %8426 to i64*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 15
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %RBP.i1175 = bitcast %union.anon* %8429 to i64*
  %8430 = load i64, i64* %RBP.i1175
  %8431 = sub i64 %8430, 76
  %8432 = load i64, i64* %PC.i1174
  %8433 = add i64 %8432, 4
  store i64 %8433, i64* %PC.i1174
  %8434 = inttoptr i64 %8431 to i32*
  %8435 = load i32, i32* %8434
  %8436 = sub i32 %8435, 4
  %8437 = icmp ult i32 %8435, 4
  %8438 = zext i1 %8437 to i8
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8438, i8* %8439, align 1
  %8440 = and i32 %8436, 255
  %8441 = call i32 @llvm.ctpop.i32(i32 %8440)
  %8442 = trunc i32 %8441 to i8
  %8443 = and i8 %8442, 1
  %8444 = xor i8 %8443, 1
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8444, i8* %8445, align 1
  %8446 = xor i32 %8435, 4
  %8447 = xor i32 %8446, %8436
  %8448 = lshr i32 %8447, 4
  %8449 = trunc i32 %8448 to i8
  %8450 = and i8 %8449, 1
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8450, i8* %8451, align 1
  %8452 = icmp eq i32 %8436, 0
  %8453 = zext i1 %8452 to i8
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8453, i8* %8454, align 1
  %8455 = lshr i32 %8436, 31
  %8456 = trunc i32 %8455 to i8
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8456, i8* %8457, align 1
  %8458 = lshr i32 %8435, 31
  %8459 = xor i32 %8455, %8458
  %8460 = add i32 %8459, %8458
  %8461 = icmp eq i32 %8460, 2
  %8462 = zext i1 %8461 to i8
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8462, i8* %8463, align 1
  store %struct.Memory* %loadMem_43f4f4, %struct.Memory** %MEMORY
  %loadMem_43f4f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 33
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %8466 to i64*
  %8467 = load i64, i64* %PC.i1173
  %8468 = add i64 %8467, 731
  %8469 = load i64, i64* %PC.i1173
  %8470 = add i64 %8469, 6
  %8471 = load i64, i64* %PC.i1173
  %8472 = add i64 %8471, 6
  store i64 %8472, i64* %PC.i1173
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8474 = load i8, i8* %8473, align 1
  %8475 = icmp ne i8 %8474, 0
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8477 = load i8, i8* %8476, align 1
  %8478 = icmp ne i8 %8477, 0
  %8479 = xor i1 %8475, %8478
  %8480 = xor i1 %8479, true
  %8481 = zext i1 %8480 to i8
  store i8 %8481, i8* %BRANCH_TAKEN, align 1
  %8482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8483 = select i1 %8479, i64 %8470, i64 %8468
  store i64 %8483, i64* %8482, align 8
  store %struct.Memory* %loadMem_43f4f8, %struct.Memory** %MEMORY
  %loadBr_43f4f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f4f8 = icmp eq i8 %loadBr_43f4f8, 1
  br i1 %cmpBr_43f4f8, label %block_.L_43f7d3, label %block_43f4fe

block_43f4fe:                                     ; preds = %block_.L_43f4f4
  %loadMem_43f4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 33
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 15
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %8489 to i64*
  %8490 = load i64, i64* %RBP.i1172
  %8491 = sub i64 %8490, 72
  %8492 = load i64, i64* %PC.i1171
  %8493 = add i64 %8492, 7
  store i64 %8493, i64* %PC.i1171
  %8494 = inttoptr i64 %8491 to i32*
  store i32 0, i32* %8494
  store %struct.Memory* %loadMem_43f4fe, %struct.Memory** %MEMORY
  br label %block_.L_43f505

block_.L_43f505:                                  ; preds = %block_.L_43f7b2, %block_43f4fe
  %loadMem_43f505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8496 = getelementptr inbounds %struct.GPR, %struct.GPR* %8495, i32 0, i32 33
  %8497 = getelementptr inbounds %struct.Reg, %struct.Reg* %8496, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %8497 to i64*
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8499 = getelementptr inbounds %struct.GPR, %struct.GPR* %8498, i32 0, i32 15
  %8500 = getelementptr inbounds %struct.Reg, %struct.Reg* %8499, i32 0, i32 0
  %RBP.i1170 = bitcast %union.anon* %8500 to i64*
  %8501 = load i64, i64* %RBP.i1170
  %8502 = sub i64 %8501, 72
  %8503 = load i64, i64* %PC.i1169
  %8504 = add i64 %8503, 4
  store i64 %8504, i64* %PC.i1169
  %8505 = inttoptr i64 %8502 to i32*
  %8506 = load i32, i32* %8505
  %8507 = sub i32 %8506, 4
  %8508 = icmp ult i32 %8506, 4
  %8509 = zext i1 %8508 to i8
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8509, i8* %8510, align 1
  %8511 = and i32 %8507, 255
  %8512 = call i32 @llvm.ctpop.i32(i32 %8511)
  %8513 = trunc i32 %8512 to i8
  %8514 = and i8 %8513, 1
  %8515 = xor i8 %8514, 1
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8515, i8* %8516, align 1
  %8517 = xor i32 %8506, 4
  %8518 = xor i32 %8517, %8507
  %8519 = lshr i32 %8518, 4
  %8520 = trunc i32 %8519 to i8
  %8521 = and i8 %8520, 1
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8521, i8* %8522, align 1
  %8523 = icmp eq i32 %8507, 0
  %8524 = zext i1 %8523 to i8
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8524, i8* %8525, align 1
  %8526 = lshr i32 %8507, 31
  %8527 = trunc i32 %8526 to i8
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8527, i8* %8528, align 1
  %8529 = lshr i32 %8506, 31
  %8530 = xor i32 %8526, %8529
  %8531 = add i32 %8530, %8529
  %8532 = icmp eq i32 %8531, 2
  %8533 = zext i1 %8532 to i8
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8533, i8* %8534, align 1
  store %struct.Memory* %loadMem_43f505, %struct.Memory** %MEMORY
  %loadMem_43f509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8536 = getelementptr inbounds %struct.GPR, %struct.GPR* %8535, i32 0, i32 33
  %8537 = getelementptr inbounds %struct.Reg, %struct.Reg* %8536, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %8537 to i64*
  %8538 = load i64, i64* %PC.i1168
  %8539 = add i64 %8538, 695
  %8540 = load i64, i64* %PC.i1168
  %8541 = add i64 %8540, 6
  %8542 = load i64, i64* %PC.i1168
  %8543 = add i64 %8542, 6
  store i64 %8543, i64* %PC.i1168
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8545 = load i8, i8* %8544, align 1
  %8546 = icmp ne i8 %8545, 0
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8548 = load i8, i8* %8547, align 1
  %8549 = icmp ne i8 %8548, 0
  %8550 = xor i1 %8546, %8549
  %8551 = xor i1 %8550, true
  %8552 = zext i1 %8551 to i8
  store i8 %8552, i8* %BRANCH_TAKEN, align 1
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8554 = select i1 %8550, i64 %8541, i64 %8539
  store i64 %8554, i64* %8553, align 8
  store %struct.Memory* %loadMem_43f509, %struct.Memory** %MEMORY
  %loadBr_43f509 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f509 = icmp eq i8 %loadBr_43f509, 1
  br i1 %cmpBr_43f509, label %block_.L_43f7c0, label %block_43f50f

block_43f50f:                                     ; preds = %block_.L_43f505
  %loadMem_43f50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 33
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %8557 to i64*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8559 = getelementptr inbounds %struct.GPR, %struct.GPR* %8558, i32 0, i32 1
  %8560 = getelementptr inbounds %struct.Reg, %struct.Reg* %8559, i32 0, i32 0
  %RAX.i1167 = bitcast %union.anon* %8560 to i64*
  %8561 = load i64, i64* %PC.i1166
  %8562 = add i64 %8561, 10
  store i64 %8562, i64* %PC.i1166
  store i64 ptrtoint (%G__0x723720_type* @G__0x723720 to i64), i64* %RAX.i1167, align 8
  store %struct.Memory* %loadMem_43f50f, %struct.Memory** %MEMORY
  %loadMem_43f519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 33
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %8565 to i64*
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 5
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %RCX.i1165 = bitcast %union.anon* %8568 to i64*
  %8569 = load i64, i64* %PC.i1164
  %8570 = add i64 %8569, 10
  store i64 %8570, i64* %PC.i1164
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RCX.i1165, align 8
  store %struct.Memory* %loadMem_43f519, %struct.Memory** %MEMORY
  %loadMem_43f523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8572 = getelementptr inbounds %struct.GPR, %struct.GPR* %8571, i32 0, i32 33
  %8573 = getelementptr inbounds %struct.Reg, %struct.Reg* %8572, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %8573 to i64*
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8575 = getelementptr inbounds %struct.GPR, %struct.GPR* %8574, i32 0, i32 7
  %8576 = getelementptr inbounds %struct.Reg, %struct.Reg* %8575, i32 0, i32 0
  %RDX.i1163 = bitcast %union.anon* %8576 to i64*
  %8577 = load i64, i64* %PC.i1162
  %8578 = add i64 %8577, 10
  store i64 %8578, i64* %PC.i1162
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RDX.i1163, align 8
  store %struct.Memory* %loadMem_43f523, %struct.Memory** %MEMORY
  %loadMem_43f52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8580 = getelementptr inbounds %struct.GPR, %struct.GPR* %8579, i32 0, i32 33
  %8581 = getelementptr inbounds %struct.Reg, %struct.Reg* %8580, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %8581 to i64*
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8583 = getelementptr inbounds %struct.GPR, %struct.GPR* %8582, i32 0, i32 9
  %8584 = getelementptr inbounds %struct.Reg, %struct.Reg* %8583, i32 0, i32 0
  %RSI.i1161 = bitcast %union.anon* %8584 to i64*
  %8585 = load i64, i64* %PC.i1160
  %8586 = add i64 %8585, 10
  store i64 %8586, i64* %PC.i1160
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RSI.i1161, align 8
  store %struct.Memory* %loadMem_43f52d, %struct.Memory** %MEMORY
  %loadMem_43f537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8588 = getelementptr inbounds %struct.GPR, %struct.GPR* %8587, i32 0, i32 33
  %8589 = getelementptr inbounds %struct.Reg, %struct.Reg* %8588, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %8589 to i64*
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8591 = getelementptr inbounds %struct.GPR, %struct.GPR* %8590, i32 0, i32 9
  %8592 = getelementptr inbounds %struct.Reg, %struct.Reg* %8591, i32 0, i32 0
  %RSI.i1158 = bitcast %union.anon* %8592 to i64*
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8594 = getelementptr inbounds %struct.GPR, %struct.GPR* %8593, i32 0, i32 11
  %8595 = getelementptr inbounds %struct.Reg, %struct.Reg* %8594, i32 0, i32 0
  %RDI.i1159 = bitcast %union.anon* %8595 to i64*
  %8596 = load i64, i64* %RSI.i1158
  %8597 = load i64, i64* %PC.i1157
  %8598 = add i64 %8597, 3
  store i64 %8598, i64* %PC.i1157
  store i64 %8596, i64* %RDI.i1159, align 8
  store %struct.Memory* %loadMem_43f537, %struct.Memory** %MEMORY
  %loadMem_43f53a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8600 = getelementptr inbounds %struct.GPR, %struct.GPR* %8599, i32 0, i32 33
  %8601 = getelementptr inbounds %struct.Reg, %struct.Reg* %8600, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %8601 to i64*
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 11
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %RDI.i1156 = bitcast %union.anon* %8604 to i64*
  %8605 = load i64, i64* %RDI.i1156
  %8606 = load i64, i64* %PC.i1155
  %8607 = add i64 %8606, 7
  store i64 %8607, i64* %PC.i1155
  %8608 = add i64 2048, %8605
  store i64 %8608, i64* %RDI.i1156, align 8
  %8609 = icmp ult i64 %8608, %8605
  %8610 = icmp ult i64 %8608, 2048
  %8611 = or i1 %8609, %8610
  %8612 = zext i1 %8611 to i8
  %8613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8612, i8* %8613, align 1
  %8614 = trunc i64 %8608 to i32
  %8615 = and i32 %8614, 255
  %8616 = call i32 @llvm.ctpop.i32(i32 %8615)
  %8617 = trunc i32 %8616 to i8
  %8618 = and i8 %8617, 1
  %8619 = xor i8 %8618, 1
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8619, i8* %8620, align 1
  %8621 = xor i64 2048, %8605
  %8622 = xor i64 %8621, %8608
  %8623 = lshr i64 %8622, 4
  %8624 = trunc i64 %8623 to i8
  %8625 = and i8 %8624, 1
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8625, i8* %8626, align 1
  %8627 = icmp eq i64 %8608, 0
  %8628 = zext i1 %8627 to i8
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8628, i8* %8629, align 1
  %8630 = lshr i64 %8608, 63
  %8631 = trunc i64 %8630 to i8
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8631, i8* %8632, align 1
  %8633 = lshr i64 %8605, 63
  %8634 = xor i64 %8630, %8633
  %8635 = add i64 %8634, %8630
  %8636 = icmp eq i64 %8635, 2
  %8637 = zext i1 %8636 to i8
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8637, i8* %8638, align 1
  store %struct.Memory* %loadMem_43f53a, %struct.Memory** %MEMORY
  %loadMem_43f541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8640 = getelementptr inbounds %struct.GPR, %struct.GPR* %8639, i32 0, i32 33
  %8641 = getelementptr inbounds %struct.Reg, %struct.Reg* %8640, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %8641 to i64*
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8643 = getelementptr inbounds %struct.GPR, %struct.GPR* %8642, i32 0, i32 9
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %RSI.i1153 = bitcast %union.anon* %8644 to i64*
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8646 = getelementptr inbounds %struct.GPR, %struct.GPR* %8645, i32 0, i32 17
  %8647 = getelementptr inbounds %struct.Reg, %struct.Reg* %8646, i32 0, i32 0
  %R8.i1154 = bitcast %union.anon* %8647 to i64*
  %8648 = load i64, i64* %RSI.i1153
  %8649 = load i64, i64* %PC.i1152
  %8650 = add i64 %8649, 3
  store i64 %8650, i64* %PC.i1152
  store i64 %8648, i64* %R8.i1154, align 8
  store %struct.Memory* %loadMem_43f541, %struct.Memory** %MEMORY
  %loadMem_43f544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8652 = getelementptr inbounds %struct.GPR, %struct.GPR* %8651, i32 0, i32 33
  %8653 = getelementptr inbounds %struct.Reg, %struct.Reg* %8652, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %8653 to i64*
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8655 = getelementptr inbounds %struct.GPR, %struct.GPR* %8654, i32 0, i32 17
  %8656 = getelementptr inbounds %struct.Reg, %struct.Reg* %8655, i32 0, i32 0
  %R8.i1151 = bitcast %union.anon* %8656 to i64*
  %8657 = load i64, i64* %R8.i1151
  %8658 = load i64, i64* %PC.i1150
  %8659 = add i64 %8658, 7
  store i64 %8659, i64* %PC.i1150
  %8660 = add i64 1024, %8657
  store i64 %8660, i64* %R8.i1151, align 8
  %8661 = icmp ult i64 %8660, %8657
  %8662 = icmp ult i64 %8660, 1024
  %8663 = or i1 %8661, %8662
  %8664 = zext i1 %8663 to i8
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8664, i8* %8665, align 1
  %8666 = trunc i64 %8660 to i32
  %8667 = and i32 %8666, 255
  %8668 = call i32 @llvm.ctpop.i32(i32 %8667)
  %8669 = trunc i32 %8668 to i8
  %8670 = and i8 %8669, 1
  %8671 = xor i8 %8670, 1
  %8672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8671, i8* %8672, align 1
  %8673 = xor i64 1024, %8657
  %8674 = xor i64 %8673, %8660
  %8675 = lshr i64 %8674, 4
  %8676 = trunc i64 %8675 to i8
  %8677 = and i8 %8676, 1
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8677, i8* %8678, align 1
  %8679 = icmp eq i64 %8660, 0
  %8680 = zext i1 %8679 to i8
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8680, i8* %8681, align 1
  %8682 = lshr i64 %8660, 63
  %8683 = trunc i64 %8682 to i8
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8683, i8* %8684, align 1
  %8685 = lshr i64 %8657, 63
  %8686 = xor i64 %8682, %8685
  %8687 = add i64 %8686, %8682
  %8688 = icmp eq i64 %8687, 2
  %8689 = zext i1 %8688 to i8
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8689, i8* %8690, align 1
  store %struct.Memory* %loadMem_43f544, %struct.Memory** %MEMORY
  %loadMem_43f54b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8692 = getelementptr inbounds %struct.GPR, %struct.GPR* %8691, i32 0, i32 33
  %8693 = getelementptr inbounds %struct.Reg, %struct.Reg* %8692, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %8693 to i64*
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 19
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %R9.i1149 = bitcast %union.anon* %8696 to i64*
  %8697 = load i64, i64* %PC.i1148
  %8698 = add i64 %8697, 8
  store i64 %8698, i64* %PC.i1148
  %8699 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %8699, i64* %R9.i1149, align 8
  store %struct.Memory* %loadMem_43f54b, %struct.Memory** %MEMORY
  %loadMem_43f553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8701 = getelementptr inbounds %struct.GPR, %struct.GPR* %8700, i32 0, i32 33
  %8702 = getelementptr inbounds %struct.Reg, %struct.Reg* %8701, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %8702 to i64*
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8704 = getelementptr inbounds %struct.GPR, %struct.GPR* %8703, i32 0, i32 19
  %8705 = getelementptr inbounds %struct.Reg, %struct.Reg* %8704, i32 0, i32 0
  %R9.i1147 = bitcast %union.anon* %8705 to i64*
  %8706 = load i64, i64* %R9.i1147
  %8707 = load i64, i64* %PC.i1146
  %8708 = add i64 %8707, 3
  store i64 %8708, i64* %PC.i1146
  %8709 = inttoptr i64 %8706 to i64*
  %8710 = load i64, i64* %8709
  store i64 %8710, i64* %R9.i1147, align 8
  store %struct.Memory* %loadMem_43f553, %struct.Memory** %MEMORY
  %loadMem_43f556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 33
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %8713 to i64*
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 21
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %R10D.i1144 = bitcast %union.anon* %8716 to i32*
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8718 = getelementptr inbounds %struct.GPR, %struct.GPR* %8717, i32 0, i32 15
  %8719 = getelementptr inbounds %struct.Reg, %struct.Reg* %8718, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %8719 to i64*
  %8720 = bitcast i32* %R10D.i1144 to i64*
  %8721 = load i64, i64* %RBP.i1145
  %8722 = sub i64 %8721, 64
  %8723 = load i64, i64* %PC.i1143
  %8724 = add i64 %8723, 4
  store i64 %8724, i64* %PC.i1143
  %8725 = inttoptr i64 %8722 to i32*
  %8726 = load i32, i32* %8725
  %8727 = zext i32 %8726 to i64
  store i64 %8727, i64* %8720, align 8
  store %struct.Memory* %loadMem_43f556, %struct.Memory** %MEMORY
  %loadMem_43f55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8729 = getelementptr inbounds %struct.GPR, %struct.GPR* %8728, i32 0, i32 33
  %8730 = getelementptr inbounds %struct.Reg, %struct.Reg* %8729, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %8730 to i64*
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8732 = getelementptr inbounds %struct.GPR, %struct.GPR* %8731, i32 0, i32 21
  %8733 = getelementptr inbounds %struct.Reg, %struct.Reg* %8732, i32 0, i32 0
  %R10D.i1141 = bitcast %union.anon* %8733 to i32*
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 15
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %RBP.i1142 = bitcast %union.anon* %8736 to i64*
  %8737 = bitcast i32* %R10D.i1141 to i64*
  %8738 = load i32, i32* %R10D.i1141
  %8739 = zext i32 %8738 to i64
  %8740 = load i64, i64* %RBP.i1142
  %8741 = sub i64 %8740, 76
  %8742 = load i64, i64* %PC.i1140
  %8743 = add i64 %8742, 4
  store i64 %8743, i64* %PC.i1140
  %8744 = inttoptr i64 %8741 to i32*
  %8745 = load i32, i32* %8744
  %8746 = add i32 %8745, %8738
  %8747 = zext i32 %8746 to i64
  store i64 %8747, i64* %8737, align 8
  %8748 = icmp ult i32 %8746, %8738
  %8749 = icmp ult i32 %8746, %8745
  %8750 = or i1 %8748, %8749
  %8751 = zext i1 %8750 to i8
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8751, i8* %8752, align 1
  %8753 = and i32 %8746, 255
  %8754 = call i32 @llvm.ctpop.i32(i32 %8753)
  %8755 = trunc i32 %8754 to i8
  %8756 = and i8 %8755, 1
  %8757 = xor i8 %8756, 1
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8757, i8* %8758, align 1
  %8759 = xor i32 %8745, %8738
  %8760 = xor i32 %8759, %8746
  %8761 = lshr i32 %8760, 4
  %8762 = trunc i32 %8761 to i8
  %8763 = and i8 %8762, 1
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8763, i8* %8764, align 1
  %8765 = icmp eq i32 %8746, 0
  %8766 = zext i1 %8765 to i8
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8766, i8* %8767, align 1
  %8768 = lshr i32 %8746, 31
  %8769 = trunc i32 %8768 to i8
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8769, i8* %8770, align 1
  %8771 = lshr i32 %8738, 31
  %8772 = lshr i32 %8745, 31
  %8773 = xor i32 %8768, %8771
  %8774 = xor i32 %8768, %8772
  %8775 = add i32 %8773, %8774
  %8776 = icmp eq i32 %8775, 2
  %8777 = zext i1 %8776 to i8
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8777, i8* %8778, align 1
  store %struct.Memory* %loadMem_43f55a, %struct.Memory** %MEMORY
  %loadMem_43f55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 33
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %8781 to i64*
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8783 = getelementptr inbounds %struct.GPR, %struct.GPR* %8782, i32 0, i32 21
  %8784 = getelementptr inbounds %struct.Reg, %struct.Reg* %8783, i32 0, i32 0
  %R10D.i1138 = bitcast %union.anon* %8784 to i32*
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8786 = getelementptr inbounds %struct.GPR, %struct.GPR* %8785, i32 0, i32 23
  %8787 = getelementptr inbounds %struct.Reg, %struct.Reg* %8786, i32 0, i32 0
  %R11.i1139 = bitcast %union.anon* %8787 to i64*
  %8788 = load i32, i32* %R10D.i1138
  %8789 = zext i32 %8788 to i64
  %8790 = load i64, i64* %PC.i1137
  %8791 = add i64 %8790, 3
  store i64 %8791, i64* %PC.i1137
  %8792 = shl i64 %8789, 32
  %8793 = ashr exact i64 %8792, 32
  store i64 %8793, i64* %R11.i1139, align 8
  store %struct.Memory* %loadMem_43f55e, %struct.Memory** %MEMORY
  %loadMem_43f561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 33
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %8796 to i64*
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8798 = getelementptr inbounds %struct.GPR, %struct.GPR* %8797, i32 0, i32 19
  %8799 = getelementptr inbounds %struct.Reg, %struct.Reg* %8798, i32 0, i32 0
  %R9.i1135 = bitcast %union.anon* %8799 to i64*
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8801 = getelementptr inbounds %struct.GPR, %struct.GPR* %8800, i32 0, i32 23
  %8802 = getelementptr inbounds %struct.Reg, %struct.Reg* %8801, i32 0, i32 0
  %R11.i1136 = bitcast %union.anon* %8802 to i64*
  %8803 = load i64, i64* %R9.i1135
  %8804 = load i64, i64* %R11.i1136
  %8805 = mul i64 %8804, 8
  %8806 = add i64 %8805, %8803
  %8807 = load i64, i64* %PC.i1134
  %8808 = add i64 %8807, 4
  store i64 %8808, i64* %PC.i1134
  %8809 = inttoptr i64 %8806 to i64*
  %8810 = load i64, i64* %8809
  store i64 %8810, i64* %R9.i1135, align 8
  store %struct.Memory* %loadMem_43f561, %struct.Memory** %MEMORY
  %loadMem_43f565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8812 = getelementptr inbounds %struct.GPR, %struct.GPR* %8811, i32 0, i32 33
  %8813 = getelementptr inbounds %struct.Reg, %struct.Reg* %8812, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %8813 to i64*
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8815 = getelementptr inbounds %struct.GPR, %struct.GPR* %8814, i32 0, i32 21
  %8816 = getelementptr inbounds %struct.Reg, %struct.Reg* %8815, i32 0, i32 0
  %R10D.i1132 = bitcast %union.anon* %8816 to i32*
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8818 = getelementptr inbounds %struct.GPR, %struct.GPR* %8817, i32 0, i32 15
  %8819 = getelementptr inbounds %struct.Reg, %struct.Reg* %8818, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %8819 to i64*
  %8820 = bitcast i32* %R10D.i1132 to i64*
  %8821 = load i64, i64* %RBP.i1133
  %8822 = sub i64 %8821, 68
  %8823 = load i64, i64* %PC.i1131
  %8824 = add i64 %8823, 4
  store i64 %8824, i64* %PC.i1131
  %8825 = inttoptr i64 %8822 to i32*
  %8826 = load i32, i32* %8825
  %8827 = zext i32 %8826 to i64
  store i64 %8827, i64* %8820, align 8
  store %struct.Memory* %loadMem_43f565, %struct.Memory** %MEMORY
  %loadMem_43f569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 33
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %8830 to i64*
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8832 = getelementptr inbounds %struct.GPR, %struct.GPR* %8831, i32 0, i32 21
  %8833 = getelementptr inbounds %struct.Reg, %struct.Reg* %8832, i32 0, i32 0
  %R10D.i1129 = bitcast %union.anon* %8833 to i32*
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8835 = getelementptr inbounds %struct.GPR, %struct.GPR* %8834, i32 0, i32 15
  %8836 = getelementptr inbounds %struct.Reg, %struct.Reg* %8835, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %8836 to i64*
  %8837 = bitcast i32* %R10D.i1129 to i64*
  %8838 = load i32, i32* %R10D.i1129
  %8839 = zext i32 %8838 to i64
  %8840 = load i64, i64* %RBP.i1130
  %8841 = sub i64 %8840, 72
  %8842 = load i64, i64* %PC.i1128
  %8843 = add i64 %8842, 4
  store i64 %8843, i64* %PC.i1128
  %8844 = inttoptr i64 %8841 to i32*
  %8845 = load i32, i32* %8844
  %8846 = add i32 %8845, %8838
  %8847 = zext i32 %8846 to i64
  store i64 %8847, i64* %8837, align 8
  %8848 = icmp ult i32 %8846, %8838
  %8849 = icmp ult i32 %8846, %8845
  %8850 = or i1 %8848, %8849
  %8851 = zext i1 %8850 to i8
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8851, i8* %8852, align 1
  %8853 = and i32 %8846, 255
  %8854 = call i32 @llvm.ctpop.i32(i32 %8853)
  %8855 = trunc i32 %8854 to i8
  %8856 = and i8 %8855, 1
  %8857 = xor i8 %8856, 1
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8857, i8* %8858, align 1
  %8859 = xor i32 %8845, %8838
  %8860 = xor i32 %8859, %8846
  %8861 = lshr i32 %8860, 4
  %8862 = trunc i32 %8861 to i8
  %8863 = and i8 %8862, 1
  %8864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8863, i8* %8864, align 1
  %8865 = icmp eq i32 %8846, 0
  %8866 = zext i1 %8865 to i8
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8866, i8* %8867, align 1
  %8868 = lshr i32 %8846, 31
  %8869 = trunc i32 %8868 to i8
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8869, i8* %8870, align 1
  %8871 = lshr i32 %8838, 31
  %8872 = lshr i32 %8845, 31
  %8873 = xor i32 %8868, %8871
  %8874 = xor i32 %8868, %8872
  %8875 = add i32 %8873, %8874
  %8876 = icmp eq i32 %8875, 2
  %8877 = zext i1 %8876 to i8
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8877, i8* %8878, align 1
  store %struct.Memory* %loadMem_43f569, %struct.Memory** %MEMORY
  %loadMem_43f56d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8880 = getelementptr inbounds %struct.GPR, %struct.GPR* %8879, i32 0, i32 33
  %8881 = getelementptr inbounds %struct.Reg, %struct.Reg* %8880, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %8881 to i64*
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8883 = getelementptr inbounds %struct.GPR, %struct.GPR* %8882, i32 0, i32 21
  %8884 = getelementptr inbounds %struct.Reg, %struct.Reg* %8883, i32 0, i32 0
  %R10D.i1126 = bitcast %union.anon* %8884 to i32*
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8886 = getelementptr inbounds %struct.GPR, %struct.GPR* %8885, i32 0, i32 23
  %8887 = getelementptr inbounds %struct.Reg, %struct.Reg* %8886, i32 0, i32 0
  %R11.i1127 = bitcast %union.anon* %8887 to i64*
  %8888 = load i32, i32* %R10D.i1126
  %8889 = zext i32 %8888 to i64
  %8890 = load i64, i64* %PC.i1125
  %8891 = add i64 %8890, 3
  store i64 %8891, i64* %PC.i1125
  %8892 = shl i64 %8889, 32
  %8893 = ashr exact i64 %8892, 32
  store i64 %8893, i64* %R11.i1127, align 8
  store %struct.Memory* %loadMem_43f56d, %struct.Memory** %MEMORY
  %loadMem_43f570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8895 = getelementptr inbounds %struct.GPR, %struct.GPR* %8894, i32 0, i32 33
  %8896 = getelementptr inbounds %struct.Reg, %struct.Reg* %8895, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %8896 to i64*
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8898 = getelementptr inbounds %struct.GPR, %struct.GPR* %8897, i32 0, i32 21
  %8899 = getelementptr inbounds %struct.Reg, %struct.Reg* %8898, i32 0, i32 0
  %R10D.i1123 = bitcast %union.anon* %8899 to i32*
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8901 = getelementptr inbounds %struct.GPR, %struct.GPR* %8900, i32 0, i32 19
  %8902 = getelementptr inbounds %struct.Reg, %struct.Reg* %8901, i32 0, i32 0
  %R9.i1124 = bitcast %union.anon* %8902 to i64*
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 23
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %R11.i = bitcast %union.anon* %8905 to i64*
  %8906 = bitcast i32* %R10D.i1123 to i64*
  %8907 = load i64, i64* %R9.i1124
  %8908 = load i64, i64* %R11.i
  %8909 = mul i64 %8908, 2
  %8910 = add i64 %8909, %8907
  %8911 = load i64, i64* %PC.i1122
  %8912 = add i64 %8911, 5
  store i64 %8912, i64* %PC.i1122
  %8913 = inttoptr i64 %8910 to i16*
  %8914 = load i16, i16* %8913
  %8915 = zext i16 %8914 to i64
  store i64 %8915, i64* %8906, align 8
  store %struct.Memory* %loadMem_43f570, %struct.Memory** %MEMORY
  %loadMem_43f575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8917 = getelementptr inbounds %struct.GPR, %struct.GPR* %8916, i32 0, i32 33
  %8918 = getelementptr inbounds %struct.Reg, %struct.Reg* %8917, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %8918 to i64*
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8920 = getelementptr inbounds %struct.GPR, %struct.GPR* %8919, i32 0, i32 3
  %8921 = getelementptr inbounds %struct.Reg, %struct.Reg* %8920, i32 0, i32 0
  %RBX.i1120 = bitcast %union.anon* %8921 to i64*
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8923 = getelementptr inbounds %struct.GPR, %struct.GPR* %8922, i32 0, i32 15
  %8924 = getelementptr inbounds %struct.Reg, %struct.Reg* %8923, i32 0, i32 0
  %RBP.i1121 = bitcast %union.anon* %8924 to i64*
  %8925 = load i64, i64* %RBP.i1121
  %8926 = sub i64 %8925, 72
  %8927 = load i64, i64* %PC.i1119
  %8928 = add i64 %8927, 3
  store i64 %8928, i64* %PC.i1119
  %8929 = inttoptr i64 %8926 to i32*
  %8930 = load i32, i32* %8929
  %8931 = zext i32 %8930 to i64
  store i64 %8931, i64* %RBX.i1120, align 8
  store %struct.Memory* %loadMem_43f575, %struct.Memory** %MEMORY
  %loadMem_43f578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 33
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %8934 to i64*
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8936 = getelementptr inbounds %struct.GPR, %struct.GPR* %8935, i32 0, i32 3
  %8937 = getelementptr inbounds %struct.Reg, %struct.Reg* %8936, i32 0, i32 0
  %RBX.i1117 = bitcast %union.anon* %8937 to i64*
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8939 = getelementptr inbounds %struct.GPR, %struct.GPR* %8938, i32 0, i32 15
  %8940 = getelementptr inbounds %struct.Reg, %struct.Reg* %8939, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %8940 to i64*
  %8941 = load i64, i64* %RBX.i1117
  %8942 = load i64, i64* %RBP.i1118
  %8943 = sub i64 %8942, 60
  %8944 = load i64, i64* %PC.i1116
  %8945 = add i64 %8944, 3
  store i64 %8945, i64* %PC.i1116
  %8946 = trunc i64 %8941 to i32
  %8947 = inttoptr i64 %8943 to i32*
  %8948 = load i32, i32* %8947
  %8949 = add i32 %8948, %8946
  %8950 = zext i32 %8949 to i64
  store i64 %8950, i64* %RBX.i1117, align 8
  %8951 = icmp ult i32 %8949, %8946
  %8952 = icmp ult i32 %8949, %8948
  %8953 = or i1 %8951, %8952
  %8954 = zext i1 %8953 to i8
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8954, i8* %8955, align 1
  %8956 = and i32 %8949, 255
  %8957 = call i32 @llvm.ctpop.i32(i32 %8956)
  %8958 = trunc i32 %8957 to i8
  %8959 = and i8 %8958, 1
  %8960 = xor i8 %8959, 1
  %8961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8960, i8* %8961, align 1
  %8962 = xor i32 %8948, %8946
  %8963 = xor i32 %8962, %8949
  %8964 = lshr i32 %8963, 4
  %8965 = trunc i32 %8964 to i8
  %8966 = and i8 %8965, 1
  %8967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8966, i8* %8967, align 1
  %8968 = icmp eq i32 %8949, 0
  %8969 = zext i1 %8968 to i8
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8969, i8* %8970, align 1
  %8971 = lshr i32 %8949, 31
  %8972 = trunc i32 %8971 to i8
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8972, i8* %8973, align 1
  %8974 = lshr i32 %8946, 31
  %8975 = lshr i32 %8948, 31
  %8976 = xor i32 %8971, %8974
  %8977 = xor i32 %8971, %8975
  %8978 = add i32 %8976, %8977
  %8979 = icmp eq i32 %8978, 2
  %8980 = zext i1 %8979 to i8
  %8981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8980, i8* %8981, align 1
  store %struct.Memory* %loadMem_43f578, %struct.Memory** %MEMORY
  %loadMem_43f57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 33
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %8984 to i64*
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 3
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %EBX.i1114 = bitcast %union.anon* %8987 to i32*
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 19
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %R9.i1115 = bitcast %union.anon* %8990 to i64*
  %8991 = load i32, i32* %EBX.i1114
  %8992 = zext i32 %8991 to i64
  %8993 = load i64, i64* %PC.i1113
  %8994 = add i64 %8993, 3
  store i64 %8994, i64* %PC.i1113
  %8995 = shl i64 %8992, 32
  %8996 = ashr exact i64 %8995, 32
  store i64 %8996, i64* %R9.i1115, align 8
  store %struct.Memory* %loadMem_43f57b, %struct.Memory** %MEMORY
  %loadMem_43f57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 33
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %8999 to i64*
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 19
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %R9.i1112 = bitcast %union.anon* %9002 to i64*
  %9003 = load i64, i64* %R9.i1112
  %9004 = load i64, i64* %PC.i1111
  %9005 = add i64 %9004, 4
  store i64 %9005, i64* %PC.i1111
  %9006 = shl i64 %9003, 5
  %9007 = icmp slt i64 %9006, 0
  %9008 = shl i64 %9006, 1
  store i64 %9008, i64* %R9.i1112, align 8
  %9009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9010 = zext i1 %9007 to i8
  store i8 %9010, i8* %9009, align 1
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9012 = trunc i64 %9008 to i32
  %9013 = and i32 %9012, 254
  %9014 = call i32 @llvm.ctpop.i32(i32 %9013)
  %9015 = trunc i32 %9014 to i8
  %9016 = and i8 %9015, 1
  %9017 = xor i8 %9016, 1
  store i8 %9017, i8* %9011, align 1
  %9018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9018, align 1
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9020 = icmp eq i64 %9008, 0
  %9021 = zext i1 %9020 to i8
  store i8 %9021, i8* %9019, align 1
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9023 = lshr i64 %9008, 63
  %9024 = trunc i64 %9023 to i8
  store i8 %9024, i8* %9022, align 1
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9025, align 1
  store %struct.Memory* %loadMem_43f57e, %struct.Memory** %MEMORY
  %loadMem_43f582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 33
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %9028 to i64*
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 17
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %R8.i1109 = bitcast %union.anon* %9031 to i64*
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 19
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %R9.i1110 = bitcast %union.anon* %9034 to i64*
  %9035 = load i64, i64* %R8.i1109
  %9036 = load i64, i64* %R9.i1110
  %9037 = load i64, i64* %PC.i1108
  %9038 = add i64 %9037, 3
  store i64 %9038, i64* %PC.i1108
  %9039 = add i64 %9036, %9035
  store i64 %9039, i64* %R8.i1109, align 8
  %9040 = icmp ult i64 %9039, %9035
  %9041 = icmp ult i64 %9039, %9036
  %9042 = or i1 %9040, %9041
  %9043 = zext i1 %9042 to i8
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9043, i8* %9044, align 1
  %9045 = trunc i64 %9039 to i32
  %9046 = and i32 %9045, 255
  %9047 = call i32 @llvm.ctpop.i32(i32 %9046)
  %9048 = trunc i32 %9047 to i8
  %9049 = and i8 %9048, 1
  %9050 = xor i8 %9049, 1
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9050, i8* %9051, align 1
  %9052 = xor i64 %9036, %9035
  %9053 = xor i64 %9052, %9039
  %9054 = lshr i64 %9053, 4
  %9055 = trunc i64 %9054 to i8
  %9056 = and i8 %9055, 1
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9056, i8* %9057, align 1
  %9058 = icmp eq i64 %9039, 0
  %9059 = zext i1 %9058 to i8
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9059, i8* %9060, align 1
  %9061 = lshr i64 %9039, 63
  %9062 = trunc i64 %9061 to i8
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9062, i8* %9063, align 1
  %9064 = lshr i64 %9035, 63
  %9065 = lshr i64 %9036, 63
  %9066 = xor i64 %9061, %9064
  %9067 = xor i64 %9061, %9065
  %9068 = add i64 %9066, %9067
  %9069 = icmp eq i64 %9068, 2
  %9070 = zext i1 %9069 to i8
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9070, i8* %9071, align 1
  store %struct.Memory* %loadMem_43f582, %struct.Memory** %MEMORY
  %loadMem_43f585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9073 = getelementptr inbounds %struct.GPR, %struct.GPR* %9072, i32 0, i32 33
  %9074 = getelementptr inbounds %struct.Reg, %struct.Reg* %9073, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %9074 to i64*
  %9075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9076 = getelementptr inbounds %struct.GPR, %struct.GPR* %9075, i32 0, i32 3
  %9077 = getelementptr inbounds %struct.Reg, %struct.Reg* %9076, i32 0, i32 0
  %RBX.i1106 = bitcast %union.anon* %9077 to i64*
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 15
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %RBP.i1107 = bitcast %union.anon* %9080 to i64*
  %9081 = load i64, i64* %RBP.i1107
  %9082 = sub i64 %9081, 76
  %9083 = load i64, i64* %PC.i1105
  %9084 = add i64 %9083, 3
  store i64 %9084, i64* %PC.i1105
  %9085 = inttoptr i64 %9082 to i32*
  %9086 = load i32, i32* %9085
  %9087 = zext i32 %9086 to i64
  store i64 %9087, i64* %RBX.i1106, align 8
  store %struct.Memory* %loadMem_43f585, %struct.Memory** %MEMORY
  %loadMem_43f588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9089 = getelementptr inbounds %struct.GPR, %struct.GPR* %9088, i32 0, i32 33
  %9090 = getelementptr inbounds %struct.Reg, %struct.Reg* %9089, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %9090 to i64*
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9092 = getelementptr inbounds %struct.GPR, %struct.GPR* %9091, i32 0, i32 3
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %RBX.i1103 = bitcast %union.anon* %9093 to i64*
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9095 = getelementptr inbounds %struct.GPR, %struct.GPR* %9094, i32 0, i32 15
  %9096 = getelementptr inbounds %struct.Reg, %struct.Reg* %9095, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %9096 to i64*
  %9097 = load i64, i64* %RBX.i1103
  %9098 = load i64, i64* %RBP.i1104
  %9099 = sub i64 %9098, 56
  %9100 = load i64, i64* %PC.i1102
  %9101 = add i64 %9100, 3
  store i64 %9101, i64* %PC.i1102
  %9102 = trunc i64 %9097 to i32
  %9103 = inttoptr i64 %9099 to i32*
  %9104 = load i32, i32* %9103
  %9105 = add i32 %9104, %9102
  %9106 = zext i32 %9105 to i64
  store i64 %9106, i64* %RBX.i1103, align 8
  %9107 = icmp ult i32 %9105, %9102
  %9108 = icmp ult i32 %9105, %9104
  %9109 = or i1 %9107, %9108
  %9110 = zext i1 %9109 to i8
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9110, i8* %9111, align 1
  %9112 = and i32 %9105, 255
  %9113 = call i32 @llvm.ctpop.i32(i32 %9112)
  %9114 = trunc i32 %9113 to i8
  %9115 = and i8 %9114, 1
  %9116 = xor i8 %9115, 1
  %9117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9116, i8* %9117, align 1
  %9118 = xor i32 %9104, %9102
  %9119 = xor i32 %9118, %9105
  %9120 = lshr i32 %9119, 4
  %9121 = trunc i32 %9120 to i8
  %9122 = and i8 %9121, 1
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9122, i8* %9123, align 1
  %9124 = icmp eq i32 %9105, 0
  %9125 = zext i1 %9124 to i8
  %9126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9125, i8* %9126, align 1
  %9127 = lshr i32 %9105, 31
  %9128 = trunc i32 %9127 to i8
  %9129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9128, i8* %9129, align 1
  %9130 = lshr i32 %9102, 31
  %9131 = lshr i32 %9104, 31
  %9132 = xor i32 %9127, %9130
  %9133 = xor i32 %9127, %9131
  %9134 = add i32 %9132, %9133
  %9135 = icmp eq i32 %9134, 2
  %9136 = zext i1 %9135 to i8
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9136, i8* %9137, align 1
  store %struct.Memory* %loadMem_43f588, %struct.Memory** %MEMORY
  %loadMem_43f58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9139 = getelementptr inbounds %struct.GPR, %struct.GPR* %9138, i32 0, i32 33
  %9140 = getelementptr inbounds %struct.Reg, %struct.Reg* %9139, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %9140 to i64*
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9142 = getelementptr inbounds %struct.GPR, %struct.GPR* %9141, i32 0, i32 3
  %9143 = getelementptr inbounds %struct.Reg, %struct.Reg* %9142, i32 0, i32 0
  %EBX.i1100 = bitcast %union.anon* %9143 to i32*
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9145 = getelementptr inbounds %struct.GPR, %struct.GPR* %9144, i32 0, i32 19
  %9146 = getelementptr inbounds %struct.Reg, %struct.Reg* %9145, i32 0, i32 0
  %R9.i1101 = bitcast %union.anon* %9146 to i64*
  %9147 = load i32, i32* %EBX.i1100
  %9148 = zext i32 %9147 to i64
  %9149 = load i64, i64* %PC.i1099
  %9150 = add i64 %9149, 3
  store i64 %9150, i64* %PC.i1099
  %9151 = shl i64 %9148, 32
  %9152 = ashr exact i64 %9151, 32
  store i64 %9152, i64* %R9.i1101, align 8
  store %struct.Memory* %loadMem_43f58b, %struct.Memory** %MEMORY
  %loadMem_43f58e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9154 = getelementptr inbounds %struct.GPR, %struct.GPR* %9153, i32 0, i32 33
  %9155 = getelementptr inbounds %struct.Reg, %struct.Reg* %9154, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %9155 to i64*
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9157 = getelementptr inbounds %struct.GPR, %struct.GPR* %9156, i32 0, i32 21
  %9158 = getelementptr inbounds %struct.Reg, %struct.Reg* %9157, i32 0, i32 0
  %R10D.i1096 = bitcast %union.anon* %9158 to i32*
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9160 = getelementptr inbounds %struct.GPR, %struct.GPR* %9159, i32 0, i32 17
  %9161 = getelementptr inbounds %struct.Reg, %struct.Reg* %9160, i32 0, i32 0
  %R8.i1097 = bitcast %union.anon* %9161 to i64*
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 19
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %R9.i1098 = bitcast %union.anon* %9164 to i64*
  %9165 = bitcast i32* %R10D.i1096 to i64*
  %9166 = load i32, i32* %R10D.i1096
  %9167 = zext i32 %9166 to i64
  %9168 = load i64, i64* %R8.i1097
  %9169 = load i64, i64* %R9.i1098
  %9170 = mul i64 %9169, 4
  %9171 = add i64 %9170, %9168
  %9172 = load i64, i64* %PC.i1095
  %9173 = add i64 %9172, 4
  store i64 %9173, i64* %PC.i1095
  %9174 = inttoptr i64 %9171 to i32*
  %9175 = load i32, i32* %9174
  %9176 = sub i32 %9166, %9175
  %9177 = zext i32 %9176 to i64
  store i64 %9177, i64* %9165, align 8
  %9178 = icmp ult i32 %9166, %9175
  %9179 = zext i1 %9178 to i8
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9179, i8* %9180, align 1
  %9181 = and i32 %9176, 255
  %9182 = call i32 @llvm.ctpop.i32(i32 %9181)
  %9183 = trunc i32 %9182 to i8
  %9184 = and i8 %9183, 1
  %9185 = xor i8 %9184, 1
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9185, i8* %9186, align 1
  %9187 = xor i32 %9175, %9166
  %9188 = xor i32 %9187, %9176
  %9189 = lshr i32 %9188, 4
  %9190 = trunc i32 %9189 to i8
  %9191 = and i8 %9190, 1
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9191, i8* %9192, align 1
  %9193 = icmp eq i32 %9176, 0
  %9194 = zext i1 %9193 to i8
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9194, i8* %9195, align 1
  %9196 = lshr i32 %9176, 31
  %9197 = trunc i32 %9196 to i8
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9197, i8* %9198, align 1
  %9199 = lshr i32 %9166, 31
  %9200 = lshr i32 %9175, 31
  %9201 = xor i32 %9200, %9199
  %9202 = xor i32 %9196, %9199
  %9203 = add i32 %9202, %9201
  %9204 = icmp eq i32 %9203, 2
  %9205 = zext i1 %9204 to i8
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9205, i8* %9206, align 1
  store %struct.Memory* %loadMem_43f58e, %struct.Memory** %MEMORY
  %loadMem_43f592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9208 = getelementptr inbounds %struct.GPR, %struct.GPR* %9207, i32 0, i32 33
  %9209 = getelementptr inbounds %struct.Reg, %struct.Reg* %9208, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %9209 to i64*
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9211 = getelementptr inbounds %struct.GPR, %struct.GPR* %9210, i32 0, i32 21
  %9212 = getelementptr inbounds %struct.Reg, %struct.Reg* %9211, i32 0, i32 0
  %R10D.i1093 = bitcast %union.anon* %9212 to i32*
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9214 = getelementptr inbounds %struct.GPR, %struct.GPR* %9213, i32 0, i32 15
  %9215 = getelementptr inbounds %struct.Reg, %struct.Reg* %9214, i32 0, i32 0
  %RBP.i1094 = bitcast %union.anon* %9215 to i64*
  %9216 = load i64, i64* %RBP.i1094
  %9217 = sub i64 %9216, 144
  %9218 = load i32, i32* %R10D.i1093
  %9219 = zext i32 %9218 to i64
  %9220 = load i64, i64* %PC.i1092
  %9221 = add i64 %9220, 7
  store i64 %9221, i64* %PC.i1092
  %9222 = inttoptr i64 %9217 to i32*
  store i32 %9218, i32* %9222
  store %struct.Memory* %loadMem_43f592, %struct.Memory** %MEMORY
  %loadMem_43f599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9224 = getelementptr inbounds %struct.GPR, %struct.GPR* %9223, i32 0, i32 33
  %9225 = getelementptr inbounds %struct.Reg, %struct.Reg* %9224, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %9225 to i64*
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9227 = getelementptr inbounds %struct.GPR, %struct.GPR* %9226, i32 0, i32 17
  %9228 = getelementptr inbounds %struct.Reg, %struct.Reg* %9227, i32 0, i32 0
  %R8.i1091 = bitcast %union.anon* %9228 to i64*
  %9229 = load i64, i64* %PC.i1090
  %9230 = add i64 %9229, 8
  store i64 %9230, i64* %PC.i1090
  %9231 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %9231, i64* %R8.i1091, align 8
  store %struct.Memory* %loadMem_43f599, %struct.Memory** %MEMORY
  %loadMem_43f5a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9233 = getelementptr inbounds %struct.GPR, %struct.GPR* %9232, i32 0, i32 33
  %9234 = getelementptr inbounds %struct.Reg, %struct.Reg* %9233, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %9234 to i64*
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 21
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %R10D.i1088 = bitcast %union.anon* %9237 to i32*
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 15
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %RBP.i1089 = bitcast %union.anon* %9240 to i64*
  %9241 = bitcast i32* %R10D.i1088 to i64*
  %9242 = load i64, i64* %RBP.i1089
  %9243 = sub i64 %9242, 64
  %9244 = load i64, i64* %PC.i1087
  %9245 = add i64 %9244, 4
  store i64 %9245, i64* %PC.i1087
  %9246 = inttoptr i64 %9243 to i32*
  %9247 = load i32, i32* %9246
  %9248 = zext i32 %9247 to i64
  store i64 %9248, i64* %9241, align 8
  store %struct.Memory* %loadMem_43f5a1, %struct.Memory** %MEMORY
  %loadMem_43f5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9250 = getelementptr inbounds %struct.GPR, %struct.GPR* %9249, i32 0, i32 33
  %9251 = getelementptr inbounds %struct.Reg, %struct.Reg* %9250, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %9251 to i64*
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9253 = getelementptr inbounds %struct.GPR, %struct.GPR* %9252, i32 0, i32 21
  %9254 = getelementptr inbounds %struct.Reg, %struct.Reg* %9253, i32 0, i32 0
  %R10D.i1085 = bitcast %union.anon* %9254 to i32*
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 15
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %RBP.i1086 = bitcast %union.anon* %9257 to i64*
  %9258 = bitcast i32* %R10D.i1085 to i64*
  %9259 = load i32, i32* %R10D.i1085
  %9260 = zext i32 %9259 to i64
  %9261 = load i64, i64* %RBP.i1086
  %9262 = sub i64 %9261, 76
  %9263 = load i64, i64* %PC.i1084
  %9264 = add i64 %9263, 4
  store i64 %9264, i64* %PC.i1084
  %9265 = inttoptr i64 %9262 to i32*
  %9266 = load i32, i32* %9265
  %9267 = add i32 %9266, %9259
  %9268 = zext i32 %9267 to i64
  store i64 %9268, i64* %9258, align 8
  %9269 = icmp ult i32 %9267, %9259
  %9270 = icmp ult i32 %9267, %9266
  %9271 = or i1 %9269, %9270
  %9272 = zext i1 %9271 to i8
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9272, i8* %9273, align 1
  %9274 = and i32 %9267, 255
  %9275 = call i32 @llvm.ctpop.i32(i32 %9274)
  %9276 = trunc i32 %9275 to i8
  %9277 = and i8 %9276, 1
  %9278 = xor i8 %9277, 1
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9278, i8* %9279, align 1
  %9280 = xor i32 %9266, %9259
  %9281 = xor i32 %9280, %9267
  %9282 = lshr i32 %9281, 4
  %9283 = trunc i32 %9282 to i8
  %9284 = and i8 %9283, 1
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9284, i8* %9285, align 1
  %9286 = icmp eq i32 %9267, 0
  %9287 = zext i1 %9286 to i8
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9287, i8* %9288, align 1
  %9289 = lshr i32 %9267, 31
  %9290 = trunc i32 %9289 to i8
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9290, i8* %9291, align 1
  %9292 = lshr i32 %9259, 31
  %9293 = lshr i32 %9266, 31
  %9294 = xor i32 %9289, %9292
  %9295 = xor i32 %9289, %9293
  %9296 = add i32 %9294, %9295
  %9297 = icmp eq i32 %9296, 2
  %9298 = zext i1 %9297 to i8
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9298, i8* %9299, align 1
  store %struct.Memory* %loadMem_43f5a5, %struct.Memory** %MEMORY
  %loadMem_43f5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9301 = getelementptr inbounds %struct.GPR, %struct.GPR* %9300, i32 0, i32 33
  %9302 = getelementptr inbounds %struct.Reg, %struct.Reg* %9301, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %9302 to i64*
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9304 = getelementptr inbounds %struct.GPR, %struct.GPR* %9303, i32 0, i32 21
  %9305 = getelementptr inbounds %struct.Reg, %struct.Reg* %9304, i32 0, i32 0
  %R10D.i1082 = bitcast %union.anon* %9305 to i32*
  %9306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9307 = getelementptr inbounds %struct.GPR, %struct.GPR* %9306, i32 0, i32 19
  %9308 = getelementptr inbounds %struct.Reg, %struct.Reg* %9307, i32 0, i32 0
  %R9.i1083 = bitcast %union.anon* %9308 to i64*
  %9309 = load i32, i32* %R10D.i1082
  %9310 = zext i32 %9309 to i64
  %9311 = load i64, i64* %PC.i1081
  %9312 = add i64 %9311, 3
  store i64 %9312, i64* %PC.i1081
  %9313 = shl i64 %9310, 32
  %9314 = ashr exact i64 %9313, 32
  store i64 %9314, i64* %R9.i1083, align 8
  store %struct.Memory* %loadMem_43f5a9, %struct.Memory** %MEMORY
  %loadMem_43f5ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9316 = getelementptr inbounds %struct.GPR, %struct.GPR* %9315, i32 0, i32 33
  %9317 = getelementptr inbounds %struct.Reg, %struct.Reg* %9316, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %9317 to i64*
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9319 = getelementptr inbounds %struct.GPR, %struct.GPR* %9318, i32 0, i32 17
  %9320 = getelementptr inbounds %struct.Reg, %struct.Reg* %9319, i32 0, i32 0
  %R8.i1079 = bitcast %union.anon* %9320 to i64*
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9322 = getelementptr inbounds %struct.GPR, %struct.GPR* %9321, i32 0, i32 19
  %9323 = getelementptr inbounds %struct.Reg, %struct.Reg* %9322, i32 0, i32 0
  %R9.i1080 = bitcast %union.anon* %9323 to i64*
  %9324 = load i64, i64* %R8.i1079
  %9325 = load i64, i64* %R9.i1080
  %9326 = mul i64 %9325, 8
  %9327 = add i64 %9326, %9324
  %9328 = load i64, i64* %PC.i1078
  %9329 = add i64 %9328, 4
  store i64 %9329, i64* %PC.i1078
  %9330 = inttoptr i64 %9327 to i64*
  %9331 = load i64, i64* %9330
  store i64 %9331, i64* %R8.i1079, align 8
  store %struct.Memory* %loadMem_43f5ac, %struct.Memory** %MEMORY
  %loadMem_43f5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9333 = getelementptr inbounds %struct.GPR, %struct.GPR* %9332, i32 0, i32 33
  %9334 = getelementptr inbounds %struct.Reg, %struct.Reg* %9333, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %9334 to i64*
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9336 = getelementptr inbounds %struct.GPR, %struct.GPR* %9335, i32 0, i32 21
  %9337 = getelementptr inbounds %struct.Reg, %struct.Reg* %9336, i32 0, i32 0
  %R10D.i1076 = bitcast %union.anon* %9337 to i32*
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 15
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %9340 to i64*
  %9341 = bitcast i32* %R10D.i1076 to i64*
  %9342 = load i64, i64* %RBP.i1077
  %9343 = sub i64 %9342, 68
  %9344 = load i64, i64* %PC.i1075
  %9345 = add i64 %9344, 4
  store i64 %9345, i64* %PC.i1075
  %9346 = inttoptr i64 %9343 to i32*
  %9347 = load i32, i32* %9346
  %9348 = zext i32 %9347 to i64
  store i64 %9348, i64* %9341, align 8
  store %struct.Memory* %loadMem_43f5b0, %struct.Memory** %MEMORY
  %loadMem_43f5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9350 = getelementptr inbounds %struct.GPR, %struct.GPR* %9349, i32 0, i32 33
  %9351 = getelementptr inbounds %struct.Reg, %struct.Reg* %9350, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %9351 to i64*
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 21
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %R10D.i1073 = bitcast %union.anon* %9354 to i32*
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9356 = getelementptr inbounds %struct.GPR, %struct.GPR* %9355, i32 0, i32 15
  %9357 = getelementptr inbounds %struct.Reg, %struct.Reg* %9356, i32 0, i32 0
  %RBP.i1074 = bitcast %union.anon* %9357 to i64*
  %9358 = bitcast i32* %R10D.i1073 to i64*
  %9359 = load i32, i32* %R10D.i1073
  %9360 = zext i32 %9359 to i64
  %9361 = load i64, i64* %RBP.i1074
  %9362 = sub i64 %9361, 72
  %9363 = load i64, i64* %PC.i1072
  %9364 = add i64 %9363, 4
  store i64 %9364, i64* %PC.i1072
  %9365 = inttoptr i64 %9362 to i32*
  %9366 = load i32, i32* %9365
  %9367 = add i32 %9366, %9359
  %9368 = zext i32 %9367 to i64
  store i64 %9368, i64* %9358, align 8
  %9369 = icmp ult i32 %9367, %9359
  %9370 = icmp ult i32 %9367, %9366
  %9371 = or i1 %9369, %9370
  %9372 = zext i1 %9371 to i8
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9372, i8* %9373, align 1
  %9374 = and i32 %9367, 255
  %9375 = call i32 @llvm.ctpop.i32(i32 %9374)
  %9376 = trunc i32 %9375 to i8
  %9377 = and i8 %9376, 1
  %9378 = xor i8 %9377, 1
  %9379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9378, i8* %9379, align 1
  %9380 = xor i32 %9366, %9359
  %9381 = xor i32 %9380, %9367
  %9382 = lshr i32 %9381, 4
  %9383 = trunc i32 %9382 to i8
  %9384 = and i8 %9383, 1
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9384, i8* %9385, align 1
  %9386 = icmp eq i32 %9367, 0
  %9387 = zext i1 %9386 to i8
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9387, i8* %9388, align 1
  %9389 = lshr i32 %9367, 31
  %9390 = trunc i32 %9389 to i8
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9390, i8* %9391, align 1
  %9392 = lshr i32 %9359, 31
  %9393 = lshr i32 %9366, 31
  %9394 = xor i32 %9389, %9392
  %9395 = xor i32 %9389, %9393
  %9396 = add i32 %9394, %9395
  %9397 = icmp eq i32 %9396, 2
  %9398 = zext i1 %9397 to i8
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9398, i8* %9399, align 1
  store %struct.Memory* %loadMem_43f5b4, %struct.Memory** %MEMORY
  %loadMem_43f5b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 33
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %9402 to i64*
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 21
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %R10D.i1070 = bitcast %union.anon* %9405 to i32*
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9407 = getelementptr inbounds %struct.GPR, %struct.GPR* %9406, i32 0, i32 19
  %9408 = getelementptr inbounds %struct.Reg, %struct.Reg* %9407, i32 0, i32 0
  %R9.i1071 = bitcast %union.anon* %9408 to i64*
  %9409 = load i32, i32* %R10D.i1070
  %9410 = zext i32 %9409 to i64
  %9411 = load i64, i64* %PC.i1069
  %9412 = add i64 %9411, 3
  store i64 %9412, i64* %PC.i1069
  %9413 = shl i64 %9410, 32
  %9414 = ashr exact i64 %9413, 32
  store i64 %9414, i64* %R9.i1071, align 8
  store %struct.Memory* %loadMem_43f5b8, %struct.Memory** %MEMORY
  %loadMem_43f5bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 33
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %9417 to i64*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 21
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %R10D.i1067 = bitcast %union.anon* %9420 to i32*
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9422 = getelementptr inbounds %struct.GPR, %struct.GPR* %9421, i32 0, i32 17
  %9423 = getelementptr inbounds %struct.Reg, %struct.Reg* %9422, i32 0, i32 0
  %R8.i1068 = bitcast %union.anon* %9423 to i64*
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9425 = getelementptr inbounds %struct.GPR, %struct.GPR* %9424, i32 0, i32 19
  %9426 = getelementptr inbounds %struct.Reg, %struct.Reg* %9425, i32 0, i32 0
  %R9.i = bitcast %union.anon* %9426 to i64*
  %9427 = bitcast i32* %R10D.i1067 to i64*
  %9428 = load i64, i64* %R8.i1068
  %9429 = load i64, i64* %R9.i
  %9430 = mul i64 %9429, 2
  %9431 = add i64 %9430, %9428
  %9432 = load i64, i64* %PC.i1066
  %9433 = add i64 %9432, 5
  store i64 %9433, i64* %PC.i1066
  %9434 = inttoptr i64 %9431 to i16*
  %9435 = load i16, i16* %9434
  %9436 = zext i16 %9435 to i64
  store i64 %9436, i64* %9427, align 8
  store %struct.Memory* %loadMem_43f5bb, %struct.Memory** %MEMORY
  %loadMem_43f5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9438 = getelementptr inbounds %struct.GPR, %struct.GPR* %9437, i32 0, i32 33
  %9439 = getelementptr inbounds %struct.Reg, %struct.Reg* %9438, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %9439 to i64*
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9441 = getelementptr inbounds %struct.GPR, %struct.GPR* %9440, i32 0, i32 3
  %9442 = getelementptr inbounds %struct.Reg, %struct.Reg* %9441, i32 0, i32 0
  %RBX.i1064 = bitcast %union.anon* %9442 to i64*
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9444 = getelementptr inbounds %struct.GPR, %struct.GPR* %9443, i32 0, i32 15
  %9445 = getelementptr inbounds %struct.Reg, %struct.Reg* %9444, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %9445 to i64*
  %9446 = load i64, i64* %RBP.i1065
  %9447 = sub i64 %9446, 72
  %9448 = load i64, i64* %PC.i1063
  %9449 = add i64 %9448, 3
  store i64 %9449, i64* %PC.i1063
  %9450 = inttoptr i64 %9447 to i32*
  %9451 = load i32, i32* %9450
  %9452 = zext i32 %9451 to i64
  store i64 %9452, i64* %RBX.i1064, align 8
  store %struct.Memory* %loadMem_43f5c0, %struct.Memory** %MEMORY
  %loadMem_43f5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9454 = getelementptr inbounds %struct.GPR, %struct.GPR* %9453, i32 0, i32 33
  %9455 = getelementptr inbounds %struct.Reg, %struct.Reg* %9454, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %9455 to i64*
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9457 = getelementptr inbounds %struct.GPR, %struct.GPR* %9456, i32 0, i32 3
  %9458 = getelementptr inbounds %struct.Reg, %struct.Reg* %9457, i32 0, i32 0
  %RBX.i1061 = bitcast %union.anon* %9458 to i64*
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9460 = getelementptr inbounds %struct.GPR, %struct.GPR* %9459, i32 0, i32 15
  %9461 = getelementptr inbounds %struct.Reg, %struct.Reg* %9460, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %9461 to i64*
  %9462 = load i64, i64* %RBX.i1061
  %9463 = load i64, i64* %RBP.i1062
  %9464 = sub i64 %9463, 60
  %9465 = load i64, i64* %PC.i1060
  %9466 = add i64 %9465, 3
  store i64 %9466, i64* %PC.i1060
  %9467 = trunc i64 %9462 to i32
  %9468 = inttoptr i64 %9464 to i32*
  %9469 = load i32, i32* %9468
  %9470 = add i32 %9469, %9467
  %9471 = zext i32 %9470 to i64
  store i64 %9471, i64* %RBX.i1061, align 8
  %9472 = icmp ult i32 %9470, %9467
  %9473 = icmp ult i32 %9470, %9469
  %9474 = or i1 %9472, %9473
  %9475 = zext i1 %9474 to i8
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9475, i8* %9476, align 1
  %9477 = and i32 %9470, 255
  %9478 = call i32 @llvm.ctpop.i32(i32 %9477)
  %9479 = trunc i32 %9478 to i8
  %9480 = and i8 %9479, 1
  %9481 = xor i8 %9480, 1
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9481, i8* %9482, align 1
  %9483 = xor i32 %9469, %9467
  %9484 = xor i32 %9483, %9470
  %9485 = lshr i32 %9484, 4
  %9486 = trunc i32 %9485 to i8
  %9487 = and i8 %9486, 1
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9487, i8* %9488, align 1
  %9489 = icmp eq i32 %9470, 0
  %9490 = zext i1 %9489 to i8
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9490, i8* %9491, align 1
  %9492 = lshr i32 %9470, 31
  %9493 = trunc i32 %9492 to i8
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9493, i8* %9494, align 1
  %9495 = lshr i32 %9467, 31
  %9496 = lshr i32 %9469, 31
  %9497 = xor i32 %9492, %9495
  %9498 = xor i32 %9492, %9496
  %9499 = add i32 %9497, %9498
  %9500 = icmp eq i32 %9499, 2
  %9501 = zext i1 %9500 to i8
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9501, i8* %9502, align 1
  store %struct.Memory* %loadMem_43f5c3, %struct.Memory** %MEMORY
  %loadMem_43f5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9504 = getelementptr inbounds %struct.GPR, %struct.GPR* %9503, i32 0, i32 33
  %9505 = getelementptr inbounds %struct.Reg, %struct.Reg* %9504, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %9505 to i64*
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9507 = getelementptr inbounds %struct.GPR, %struct.GPR* %9506, i32 0, i32 3
  %9508 = getelementptr inbounds %struct.Reg, %struct.Reg* %9507, i32 0, i32 0
  %EBX.i1058 = bitcast %union.anon* %9508 to i32*
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 17
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %R8.i1059 = bitcast %union.anon* %9511 to i64*
  %9512 = load i32, i32* %EBX.i1058
  %9513 = zext i32 %9512 to i64
  %9514 = load i64, i64* %PC.i1057
  %9515 = add i64 %9514, 3
  store i64 %9515, i64* %PC.i1057
  %9516 = shl i64 %9513, 32
  %9517 = ashr exact i64 %9516, 32
  store i64 %9517, i64* %R8.i1059, align 8
  store %struct.Memory* %loadMem_43f5c6, %struct.Memory** %MEMORY
  %loadMem_43f5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9519 = getelementptr inbounds %struct.GPR, %struct.GPR* %9518, i32 0, i32 33
  %9520 = getelementptr inbounds %struct.Reg, %struct.Reg* %9519, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %9520 to i64*
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9522 = getelementptr inbounds %struct.GPR, %struct.GPR* %9521, i32 0, i32 17
  %9523 = getelementptr inbounds %struct.Reg, %struct.Reg* %9522, i32 0, i32 0
  %R8.i1056 = bitcast %union.anon* %9523 to i64*
  %9524 = load i64, i64* %R8.i1056
  %9525 = load i64, i64* %PC.i1055
  %9526 = add i64 %9525, 4
  store i64 %9526, i64* %PC.i1055
  %9527 = shl i64 %9524, 5
  %9528 = icmp slt i64 %9527, 0
  %9529 = shl i64 %9527, 1
  store i64 %9529, i64* %R8.i1056, align 8
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9531 = zext i1 %9528 to i8
  store i8 %9531, i8* %9530, align 1
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9533 = trunc i64 %9529 to i32
  %9534 = and i32 %9533, 254
  %9535 = call i32 @llvm.ctpop.i32(i32 %9534)
  %9536 = trunc i32 %9535 to i8
  %9537 = and i8 %9536, 1
  %9538 = xor i8 %9537, 1
  store i8 %9538, i8* %9532, align 1
  %9539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9539, align 1
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9541 = icmp eq i64 %9529, 0
  %9542 = zext i1 %9541 to i8
  store i8 %9542, i8* %9540, align 1
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9544 = lshr i64 %9529, 63
  %9545 = trunc i64 %9544 to i8
  store i8 %9545, i8* %9543, align 1
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9546, align 1
  store %struct.Memory* %loadMem_43f5c9, %struct.Memory** %MEMORY
  %loadMem_43f5cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 33
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %9549 to i64*
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9551 = getelementptr inbounds %struct.GPR, %struct.GPR* %9550, i32 0, i32 9
  %9552 = getelementptr inbounds %struct.Reg, %struct.Reg* %9551, i32 0, i32 0
  %RSI.i1053 = bitcast %union.anon* %9552 to i64*
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 17
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %R8.i1054 = bitcast %union.anon* %9555 to i64*
  %9556 = load i64, i64* %RSI.i1053
  %9557 = load i64, i64* %R8.i1054
  %9558 = load i64, i64* %PC.i1052
  %9559 = add i64 %9558, 3
  store i64 %9559, i64* %PC.i1052
  %9560 = add i64 %9557, %9556
  store i64 %9560, i64* %RSI.i1053, align 8
  %9561 = icmp ult i64 %9560, %9556
  %9562 = icmp ult i64 %9560, %9557
  %9563 = or i1 %9561, %9562
  %9564 = zext i1 %9563 to i8
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9564, i8* %9565, align 1
  %9566 = trunc i64 %9560 to i32
  %9567 = and i32 %9566, 255
  %9568 = call i32 @llvm.ctpop.i32(i32 %9567)
  %9569 = trunc i32 %9568 to i8
  %9570 = and i8 %9569, 1
  %9571 = xor i8 %9570, 1
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9571, i8* %9572, align 1
  %9573 = xor i64 %9557, %9556
  %9574 = xor i64 %9573, %9560
  %9575 = lshr i64 %9574, 4
  %9576 = trunc i64 %9575 to i8
  %9577 = and i8 %9576, 1
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9577, i8* %9578, align 1
  %9579 = icmp eq i64 %9560, 0
  %9580 = zext i1 %9579 to i8
  %9581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9580, i8* %9581, align 1
  %9582 = lshr i64 %9560, 63
  %9583 = trunc i64 %9582 to i8
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9583, i8* %9584, align 1
  %9585 = lshr i64 %9556, 63
  %9586 = lshr i64 %9557, 63
  %9587 = xor i64 %9582, %9585
  %9588 = xor i64 %9582, %9586
  %9589 = add i64 %9587, %9588
  %9590 = icmp eq i64 %9589, 2
  %9591 = zext i1 %9590 to i8
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9591, i8* %9592, align 1
  store %struct.Memory* %loadMem_43f5cd, %struct.Memory** %MEMORY
  %loadMem_43f5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9594 = getelementptr inbounds %struct.GPR, %struct.GPR* %9593, i32 0, i32 33
  %9595 = getelementptr inbounds %struct.Reg, %struct.Reg* %9594, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %9595 to i64*
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 3
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %RBX.i1050 = bitcast %union.anon* %9598 to i64*
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 15
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %9601 to i64*
  %9602 = load i64, i64* %RBP.i1051
  %9603 = sub i64 %9602, 76
  %9604 = load i64, i64* %PC.i1049
  %9605 = add i64 %9604, 3
  store i64 %9605, i64* %PC.i1049
  %9606 = inttoptr i64 %9603 to i32*
  %9607 = load i32, i32* %9606
  %9608 = zext i32 %9607 to i64
  store i64 %9608, i64* %RBX.i1050, align 8
  store %struct.Memory* %loadMem_43f5d0, %struct.Memory** %MEMORY
  %loadMem_43f5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9610 = getelementptr inbounds %struct.GPR, %struct.GPR* %9609, i32 0, i32 33
  %9611 = getelementptr inbounds %struct.Reg, %struct.Reg* %9610, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %9611 to i64*
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9613 = getelementptr inbounds %struct.GPR, %struct.GPR* %9612, i32 0, i32 3
  %9614 = getelementptr inbounds %struct.Reg, %struct.Reg* %9613, i32 0, i32 0
  %RBX.i1047 = bitcast %union.anon* %9614 to i64*
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9616 = getelementptr inbounds %struct.GPR, %struct.GPR* %9615, i32 0, i32 15
  %9617 = getelementptr inbounds %struct.Reg, %struct.Reg* %9616, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %9617 to i64*
  %9618 = load i64, i64* %RBX.i1047
  %9619 = load i64, i64* %RBP.i1048
  %9620 = sub i64 %9619, 56
  %9621 = load i64, i64* %PC.i1046
  %9622 = add i64 %9621, 3
  store i64 %9622, i64* %PC.i1046
  %9623 = trunc i64 %9618 to i32
  %9624 = inttoptr i64 %9620 to i32*
  %9625 = load i32, i32* %9624
  %9626 = add i32 %9625, %9623
  %9627 = zext i32 %9626 to i64
  store i64 %9627, i64* %RBX.i1047, align 8
  %9628 = icmp ult i32 %9626, %9623
  %9629 = icmp ult i32 %9626, %9625
  %9630 = or i1 %9628, %9629
  %9631 = zext i1 %9630 to i8
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9631, i8* %9632, align 1
  %9633 = and i32 %9626, 255
  %9634 = call i32 @llvm.ctpop.i32(i32 %9633)
  %9635 = trunc i32 %9634 to i8
  %9636 = and i8 %9635, 1
  %9637 = xor i8 %9636, 1
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9637, i8* %9638, align 1
  %9639 = xor i32 %9625, %9623
  %9640 = xor i32 %9639, %9626
  %9641 = lshr i32 %9640, 4
  %9642 = trunc i32 %9641 to i8
  %9643 = and i8 %9642, 1
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9643, i8* %9644, align 1
  %9645 = icmp eq i32 %9626, 0
  %9646 = zext i1 %9645 to i8
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9646, i8* %9647, align 1
  %9648 = lshr i32 %9626, 31
  %9649 = trunc i32 %9648 to i8
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9649, i8* %9650, align 1
  %9651 = lshr i32 %9623, 31
  %9652 = lshr i32 %9625, 31
  %9653 = xor i32 %9648, %9651
  %9654 = xor i32 %9648, %9652
  %9655 = add i32 %9653, %9654
  %9656 = icmp eq i32 %9655, 2
  %9657 = zext i1 %9656 to i8
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9657, i8* %9658, align 1
  store %struct.Memory* %loadMem_43f5d3, %struct.Memory** %MEMORY
  %loadMem_43f5d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9660 = getelementptr inbounds %struct.GPR, %struct.GPR* %9659, i32 0, i32 33
  %9661 = getelementptr inbounds %struct.Reg, %struct.Reg* %9660, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %9661 to i64*
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9663 = getelementptr inbounds %struct.GPR, %struct.GPR* %9662, i32 0, i32 3
  %9664 = getelementptr inbounds %struct.Reg, %struct.Reg* %9663, i32 0, i32 0
  %EBX.i1044 = bitcast %union.anon* %9664 to i32*
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9666 = getelementptr inbounds %struct.GPR, %struct.GPR* %9665, i32 0, i32 17
  %9667 = getelementptr inbounds %struct.Reg, %struct.Reg* %9666, i32 0, i32 0
  %R8.i1045 = bitcast %union.anon* %9667 to i64*
  %9668 = load i32, i32* %EBX.i1044
  %9669 = zext i32 %9668 to i64
  %9670 = load i64, i64* %PC.i1043
  %9671 = add i64 %9670, 3
  store i64 %9671, i64* %PC.i1043
  %9672 = shl i64 %9669, 32
  %9673 = ashr exact i64 %9672, 32
  store i64 %9673, i64* %R8.i1045, align 8
  store %struct.Memory* %loadMem_43f5d6, %struct.Memory** %MEMORY
  %loadMem_43f5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 33
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %9676 to i64*
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9678 = getelementptr inbounds %struct.GPR, %struct.GPR* %9677, i32 0, i32 21
  %9679 = getelementptr inbounds %struct.Reg, %struct.Reg* %9678, i32 0, i32 0
  %R10D.i1040 = bitcast %union.anon* %9679 to i32*
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9681 = getelementptr inbounds %struct.GPR, %struct.GPR* %9680, i32 0, i32 9
  %9682 = getelementptr inbounds %struct.Reg, %struct.Reg* %9681, i32 0, i32 0
  %RSI.i1041 = bitcast %union.anon* %9682 to i64*
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9684 = getelementptr inbounds %struct.GPR, %struct.GPR* %9683, i32 0, i32 17
  %9685 = getelementptr inbounds %struct.Reg, %struct.Reg* %9684, i32 0, i32 0
  %R8.i1042 = bitcast %union.anon* %9685 to i64*
  %9686 = bitcast i32* %R10D.i1040 to i64*
  %9687 = load i32, i32* %R10D.i1040
  %9688 = zext i32 %9687 to i64
  %9689 = load i64, i64* %RSI.i1041
  %9690 = load i64, i64* %R8.i1042
  %9691 = mul i64 %9690, 4
  %9692 = add i64 %9691, %9689
  %9693 = load i64, i64* %PC.i1039
  %9694 = add i64 %9693, 4
  store i64 %9694, i64* %PC.i1039
  %9695 = inttoptr i64 %9692 to i32*
  %9696 = load i32, i32* %9695
  %9697 = sub i32 %9687, %9696
  %9698 = zext i32 %9697 to i64
  store i64 %9698, i64* %9686, align 8
  %9699 = icmp ult i32 %9687, %9696
  %9700 = zext i1 %9699 to i8
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9700, i8* %9701, align 1
  %9702 = and i32 %9697, 255
  %9703 = call i32 @llvm.ctpop.i32(i32 %9702)
  %9704 = trunc i32 %9703 to i8
  %9705 = and i8 %9704, 1
  %9706 = xor i8 %9705, 1
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9706, i8* %9707, align 1
  %9708 = xor i32 %9696, %9687
  %9709 = xor i32 %9708, %9697
  %9710 = lshr i32 %9709, 4
  %9711 = trunc i32 %9710 to i8
  %9712 = and i8 %9711, 1
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9712, i8* %9713, align 1
  %9714 = icmp eq i32 %9697, 0
  %9715 = zext i1 %9714 to i8
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9715, i8* %9716, align 1
  %9717 = lshr i32 %9697, 31
  %9718 = trunc i32 %9717 to i8
  %9719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9718, i8* %9719, align 1
  %9720 = lshr i32 %9687, 31
  %9721 = lshr i32 %9696, 31
  %9722 = xor i32 %9721, %9720
  %9723 = xor i32 %9717, %9720
  %9724 = add i32 %9723, %9722
  %9725 = icmp eq i32 %9724, 2
  %9726 = zext i1 %9725 to i8
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9726, i8* %9727, align 1
  store %struct.Memory* %loadMem_43f5d9, %struct.Memory** %MEMORY
  %loadMem_43f5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 33
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %9730 to i64*
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9732 = getelementptr inbounds %struct.GPR, %struct.GPR* %9731, i32 0, i32 21
  %9733 = getelementptr inbounds %struct.Reg, %struct.Reg* %9732, i32 0, i32 0
  %R10D.i1037 = bitcast %union.anon* %9733 to i32*
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 15
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %RBP.i1038 = bitcast %union.anon* %9736 to i64*
  %9737 = load i64, i64* %RBP.i1038
  %9738 = sub i64 %9737, 140
  %9739 = load i32, i32* %R10D.i1037
  %9740 = zext i32 %9739 to i64
  %9741 = load i64, i64* %PC.i1036
  %9742 = add i64 %9741, 7
  store i64 %9742, i64* %PC.i1036
  %9743 = inttoptr i64 %9738 to i32*
  store i32 %9739, i32* %9743
  store %struct.Memory* %loadMem_43f5dd, %struct.Memory** %MEMORY
  %loadMem_43f5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 33
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %9746 to i64*
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9748 = getelementptr inbounds %struct.GPR, %struct.GPR* %9747, i32 0, i32 9
  %9749 = getelementptr inbounds %struct.Reg, %struct.Reg* %9748, i32 0, i32 0
  %RSI.i1035 = bitcast %union.anon* %9749 to i64*
  %9750 = load i64, i64* %PC.i1034
  %9751 = add i64 %9750, 8
  store i64 %9751, i64* %PC.i1034
  %9752 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %9752, i64* %RSI.i1035, align 8
  store %struct.Memory* %loadMem_43f5e4, %struct.Memory** %MEMORY
  %loadMem_43f5ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9754 = getelementptr inbounds %struct.GPR, %struct.GPR* %9753, i32 0, i32 33
  %9755 = getelementptr inbounds %struct.Reg, %struct.Reg* %9754, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %9755 to i64*
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 9
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %RSI.i1033 = bitcast %union.anon* %9758 to i64*
  %9759 = load i64, i64* %RSI.i1033
  %9760 = add i64 %9759, 8
  %9761 = load i64, i64* %PC.i1032
  %9762 = add i64 %9761, 4
  store i64 %9762, i64* %PC.i1032
  %9763 = inttoptr i64 %9760 to i64*
  %9764 = load i64, i64* %9763
  store i64 %9764, i64* %RSI.i1033, align 8
  store %struct.Memory* %loadMem_43f5ec, %struct.Memory** %MEMORY
  %loadMem_43f5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9766 = getelementptr inbounds %struct.GPR, %struct.GPR* %9765, i32 0, i32 33
  %9767 = getelementptr inbounds %struct.Reg, %struct.Reg* %9766, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %9767 to i64*
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9769 = getelementptr inbounds %struct.GPR, %struct.GPR* %9768, i32 0, i32 21
  %9770 = getelementptr inbounds %struct.Reg, %struct.Reg* %9769, i32 0, i32 0
  %R10D.i1030 = bitcast %union.anon* %9770 to i32*
  %9771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9772 = getelementptr inbounds %struct.GPR, %struct.GPR* %9771, i32 0, i32 15
  %9773 = getelementptr inbounds %struct.Reg, %struct.Reg* %9772, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %9773 to i64*
  %9774 = bitcast i32* %R10D.i1030 to i64*
  %9775 = load i64, i64* %RBP.i1031
  %9776 = sub i64 %9775, 64
  %9777 = load i64, i64* %PC.i1029
  %9778 = add i64 %9777, 4
  store i64 %9778, i64* %PC.i1029
  %9779 = inttoptr i64 %9776 to i32*
  %9780 = load i32, i32* %9779
  %9781 = zext i32 %9780 to i64
  store i64 %9781, i64* %9774, align 8
  store %struct.Memory* %loadMem_43f5f0, %struct.Memory** %MEMORY
  %loadMem_43f5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9783 = getelementptr inbounds %struct.GPR, %struct.GPR* %9782, i32 0, i32 33
  %9784 = getelementptr inbounds %struct.Reg, %struct.Reg* %9783, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %9784 to i64*
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9786 = getelementptr inbounds %struct.GPR, %struct.GPR* %9785, i32 0, i32 21
  %9787 = getelementptr inbounds %struct.Reg, %struct.Reg* %9786, i32 0, i32 0
  %R10D.i1027 = bitcast %union.anon* %9787 to i32*
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9789 = getelementptr inbounds %struct.GPR, %struct.GPR* %9788, i32 0, i32 15
  %9790 = getelementptr inbounds %struct.Reg, %struct.Reg* %9789, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %9790 to i64*
  %9791 = bitcast i32* %R10D.i1027 to i64*
  %9792 = load i32, i32* %R10D.i1027
  %9793 = zext i32 %9792 to i64
  %9794 = load i64, i64* %RBP.i1028
  %9795 = sub i64 %9794, 76
  %9796 = load i64, i64* %PC.i1026
  %9797 = add i64 %9796, 4
  store i64 %9797, i64* %PC.i1026
  %9798 = inttoptr i64 %9795 to i32*
  %9799 = load i32, i32* %9798
  %9800 = add i32 %9799, %9792
  %9801 = zext i32 %9800 to i64
  store i64 %9801, i64* %9791, align 8
  %9802 = icmp ult i32 %9800, %9792
  %9803 = icmp ult i32 %9800, %9799
  %9804 = or i1 %9802, %9803
  %9805 = zext i1 %9804 to i8
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9805, i8* %9806, align 1
  %9807 = and i32 %9800, 255
  %9808 = call i32 @llvm.ctpop.i32(i32 %9807)
  %9809 = trunc i32 %9808 to i8
  %9810 = and i8 %9809, 1
  %9811 = xor i8 %9810, 1
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9811, i8* %9812, align 1
  %9813 = xor i32 %9799, %9792
  %9814 = xor i32 %9813, %9800
  %9815 = lshr i32 %9814, 4
  %9816 = trunc i32 %9815 to i8
  %9817 = and i8 %9816, 1
  %9818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9817, i8* %9818, align 1
  %9819 = icmp eq i32 %9800, 0
  %9820 = zext i1 %9819 to i8
  %9821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9820, i8* %9821, align 1
  %9822 = lshr i32 %9800, 31
  %9823 = trunc i32 %9822 to i8
  %9824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9823, i8* %9824, align 1
  %9825 = lshr i32 %9792, 31
  %9826 = lshr i32 %9799, 31
  %9827 = xor i32 %9822, %9825
  %9828 = xor i32 %9822, %9826
  %9829 = add i32 %9827, %9828
  %9830 = icmp eq i32 %9829, 2
  %9831 = zext i1 %9830 to i8
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9831, i8* %9832, align 1
  store %struct.Memory* %loadMem_43f5f4, %struct.Memory** %MEMORY
  %loadMem_43f5f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9834 = getelementptr inbounds %struct.GPR, %struct.GPR* %9833, i32 0, i32 33
  %9835 = getelementptr inbounds %struct.Reg, %struct.Reg* %9834, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %9835 to i64*
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9837 = getelementptr inbounds %struct.GPR, %struct.GPR* %9836, i32 0, i32 21
  %9838 = getelementptr inbounds %struct.Reg, %struct.Reg* %9837, i32 0, i32 0
  %R10D.i1024 = bitcast %union.anon* %9838 to i32*
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9840 = getelementptr inbounds %struct.GPR, %struct.GPR* %9839, i32 0, i32 17
  %9841 = getelementptr inbounds %struct.Reg, %struct.Reg* %9840, i32 0, i32 0
  %R8.i1025 = bitcast %union.anon* %9841 to i64*
  %9842 = load i32, i32* %R10D.i1024
  %9843 = zext i32 %9842 to i64
  %9844 = load i64, i64* %PC.i1023
  %9845 = add i64 %9844, 3
  store i64 %9845, i64* %PC.i1023
  %9846 = shl i64 %9843, 32
  %9847 = ashr exact i64 %9846, 32
  store i64 %9847, i64* %R8.i1025, align 8
  store %struct.Memory* %loadMem_43f5f8, %struct.Memory** %MEMORY
  %loadMem_43f5fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 33
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %9850 to i64*
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9852 = getelementptr inbounds %struct.GPR, %struct.GPR* %9851, i32 0, i32 9
  %9853 = getelementptr inbounds %struct.Reg, %struct.Reg* %9852, i32 0, i32 0
  %RSI.i1021 = bitcast %union.anon* %9853 to i64*
  %9854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9855 = getelementptr inbounds %struct.GPR, %struct.GPR* %9854, i32 0, i32 17
  %9856 = getelementptr inbounds %struct.Reg, %struct.Reg* %9855, i32 0, i32 0
  %R8.i1022 = bitcast %union.anon* %9856 to i64*
  %9857 = load i64, i64* %RSI.i1021
  %9858 = load i64, i64* %R8.i1022
  %9859 = mul i64 %9858, 8
  %9860 = add i64 %9859, %9857
  %9861 = load i64, i64* %PC.i1020
  %9862 = add i64 %9861, 4
  store i64 %9862, i64* %PC.i1020
  %9863 = inttoptr i64 %9860 to i64*
  %9864 = load i64, i64* %9863
  store i64 %9864, i64* %RSI.i1021, align 8
  store %struct.Memory* %loadMem_43f5fb, %struct.Memory** %MEMORY
  %loadMem_43f5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 33
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %9867 to i64*
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9869 = getelementptr inbounds %struct.GPR, %struct.GPR* %9868, i32 0, i32 21
  %9870 = getelementptr inbounds %struct.Reg, %struct.Reg* %9869, i32 0, i32 0
  %R10D.i1018 = bitcast %union.anon* %9870 to i32*
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9872 = getelementptr inbounds %struct.GPR, %struct.GPR* %9871, i32 0, i32 15
  %9873 = getelementptr inbounds %struct.Reg, %struct.Reg* %9872, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %9873 to i64*
  %9874 = bitcast i32* %R10D.i1018 to i64*
  %9875 = load i64, i64* %RBP.i1019
  %9876 = sub i64 %9875, 68
  %9877 = load i64, i64* %PC.i1017
  %9878 = add i64 %9877, 4
  store i64 %9878, i64* %PC.i1017
  %9879 = inttoptr i64 %9876 to i32*
  %9880 = load i32, i32* %9879
  %9881 = zext i32 %9880 to i64
  store i64 %9881, i64* %9874, align 8
  store %struct.Memory* %loadMem_43f5ff, %struct.Memory** %MEMORY
  %loadMem_43f603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9883 = getelementptr inbounds %struct.GPR, %struct.GPR* %9882, i32 0, i32 33
  %9884 = getelementptr inbounds %struct.Reg, %struct.Reg* %9883, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %9884 to i64*
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9886 = getelementptr inbounds %struct.GPR, %struct.GPR* %9885, i32 0, i32 21
  %9887 = getelementptr inbounds %struct.Reg, %struct.Reg* %9886, i32 0, i32 0
  %R10D.i1015 = bitcast %union.anon* %9887 to i32*
  %9888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9889 = getelementptr inbounds %struct.GPR, %struct.GPR* %9888, i32 0, i32 15
  %9890 = getelementptr inbounds %struct.Reg, %struct.Reg* %9889, i32 0, i32 0
  %RBP.i1016 = bitcast %union.anon* %9890 to i64*
  %9891 = bitcast i32* %R10D.i1015 to i64*
  %9892 = load i32, i32* %R10D.i1015
  %9893 = zext i32 %9892 to i64
  %9894 = load i64, i64* %RBP.i1016
  %9895 = sub i64 %9894, 72
  %9896 = load i64, i64* %PC.i1014
  %9897 = add i64 %9896, 4
  store i64 %9897, i64* %PC.i1014
  %9898 = inttoptr i64 %9895 to i32*
  %9899 = load i32, i32* %9898
  %9900 = add i32 %9899, %9892
  %9901 = zext i32 %9900 to i64
  store i64 %9901, i64* %9891, align 8
  %9902 = icmp ult i32 %9900, %9892
  %9903 = icmp ult i32 %9900, %9899
  %9904 = or i1 %9902, %9903
  %9905 = zext i1 %9904 to i8
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9905, i8* %9906, align 1
  %9907 = and i32 %9900, 255
  %9908 = call i32 @llvm.ctpop.i32(i32 %9907)
  %9909 = trunc i32 %9908 to i8
  %9910 = and i8 %9909, 1
  %9911 = xor i8 %9910, 1
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9911, i8* %9912, align 1
  %9913 = xor i32 %9899, %9892
  %9914 = xor i32 %9913, %9900
  %9915 = lshr i32 %9914, 4
  %9916 = trunc i32 %9915 to i8
  %9917 = and i8 %9916, 1
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9917, i8* %9918, align 1
  %9919 = icmp eq i32 %9900, 0
  %9920 = zext i1 %9919 to i8
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9920, i8* %9921, align 1
  %9922 = lshr i32 %9900, 31
  %9923 = trunc i32 %9922 to i8
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9923, i8* %9924, align 1
  %9925 = lshr i32 %9892, 31
  %9926 = lshr i32 %9899, 31
  %9927 = xor i32 %9922, %9925
  %9928 = xor i32 %9922, %9926
  %9929 = add i32 %9927, %9928
  %9930 = icmp eq i32 %9929, 2
  %9931 = zext i1 %9930 to i8
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9931, i8* %9932, align 1
  store %struct.Memory* %loadMem_43f603, %struct.Memory** %MEMORY
  %loadMem_43f607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9934 = getelementptr inbounds %struct.GPR, %struct.GPR* %9933, i32 0, i32 33
  %9935 = getelementptr inbounds %struct.Reg, %struct.Reg* %9934, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %9935 to i64*
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9937 = getelementptr inbounds %struct.GPR, %struct.GPR* %9936, i32 0, i32 21
  %9938 = getelementptr inbounds %struct.Reg, %struct.Reg* %9937, i32 0, i32 0
  %R10D.i1012 = bitcast %union.anon* %9938 to i32*
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9940 = getelementptr inbounds %struct.GPR, %struct.GPR* %9939, i32 0, i32 17
  %9941 = getelementptr inbounds %struct.Reg, %struct.Reg* %9940, i32 0, i32 0
  %R8.i1013 = bitcast %union.anon* %9941 to i64*
  %9942 = load i32, i32* %R10D.i1012
  %9943 = zext i32 %9942 to i64
  %9944 = load i64, i64* %PC.i1011
  %9945 = add i64 %9944, 3
  store i64 %9945, i64* %PC.i1011
  %9946 = shl i64 %9943, 32
  %9947 = ashr exact i64 %9946, 32
  store i64 %9947, i64* %R8.i1013, align 8
  store %struct.Memory* %loadMem_43f607, %struct.Memory** %MEMORY
  %loadMem_43f60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9949 = getelementptr inbounds %struct.GPR, %struct.GPR* %9948, i32 0, i32 33
  %9950 = getelementptr inbounds %struct.Reg, %struct.Reg* %9949, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %9950 to i64*
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9952 = getelementptr inbounds %struct.GPR, %struct.GPR* %9951, i32 0, i32 21
  %9953 = getelementptr inbounds %struct.Reg, %struct.Reg* %9952, i32 0, i32 0
  %R10D.i1008 = bitcast %union.anon* %9953 to i32*
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9955 = getelementptr inbounds %struct.GPR, %struct.GPR* %9954, i32 0, i32 9
  %9956 = getelementptr inbounds %struct.Reg, %struct.Reg* %9955, i32 0, i32 0
  %RSI.i1009 = bitcast %union.anon* %9956 to i64*
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9958 = getelementptr inbounds %struct.GPR, %struct.GPR* %9957, i32 0, i32 17
  %9959 = getelementptr inbounds %struct.Reg, %struct.Reg* %9958, i32 0, i32 0
  %R8.i1010 = bitcast %union.anon* %9959 to i64*
  %9960 = bitcast i32* %R10D.i1008 to i64*
  %9961 = load i64, i64* %RSI.i1009
  %9962 = load i64, i64* %R8.i1010
  %9963 = mul i64 %9962, 2
  %9964 = add i64 %9963, %9961
  %9965 = load i64, i64* %PC.i1007
  %9966 = add i64 %9965, 5
  store i64 %9966, i64* %PC.i1007
  %9967 = inttoptr i64 %9964 to i16*
  %9968 = load i16, i16* %9967
  %9969 = zext i16 %9968 to i64
  store i64 %9969, i64* %9960, align 8
  store %struct.Memory* %loadMem_43f60a, %struct.Memory** %MEMORY
  %loadMem_43f60f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9971 = getelementptr inbounds %struct.GPR, %struct.GPR* %9970, i32 0, i32 33
  %9972 = getelementptr inbounds %struct.Reg, %struct.Reg* %9971, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %9972 to i64*
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9974 = getelementptr inbounds %struct.GPR, %struct.GPR* %9973, i32 0, i32 3
  %9975 = getelementptr inbounds %struct.Reg, %struct.Reg* %9974, i32 0, i32 0
  %RBX.i1005 = bitcast %union.anon* %9975 to i64*
  %9976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9977 = getelementptr inbounds %struct.GPR, %struct.GPR* %9976, i32 0, i32 15
  %9978 = getelementptr inbounds %struct.Reg, %struct.Reg* %9977, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %9978 to i64*
  %9979 = load i64, i64* %RBP.i1006
  %9980 = sub i64 %9979, 72
  %9981 = load i64, i64* %PC.i1004
  %9982 = add i64 %9981, 3
  store i64 %9982, i64* %PC.i1004
  %9983 = inttoptr i64 %9980 to i32*
  %9984 = load i32, i32* %9983
  %9985 = zext i32 %9984 to i64
  store i64 %9985, i64* %RBX.i1005, align 8
  store %struct.Memory* %loadMem_43f60f, %struct.Memory** %MEMORY
  %loadMem_43f612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9987 = getelementptr inbounds %struct.GPR, %struct.GPR* %9986, i32 0, i32 33
  %9988 = getelementptr inbounds %struct.Reg, %struct.Reg* %9987, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %9988 to i64*
  %9989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9990 = getelementptr inbounds %struct.GPR, %struct.GPR* %9989, i32 0, i32 3
  %9991 = getelementptr inbounds %struct.Reg, %struct.Reg* %9990, i32 0, i32 0
  %RBX.i1002 = bitcast %union.anon* %9991 to i64*
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9993 = getelementptr inbounds %struct.GPR, %struct.GPR* %9992, i32 0, i32 15
  %9994 = getelementptr inbounds %struct.Reg, %struct.Reg* %9993, i32 0, i32 0
  %RBP.i1003 = bitcast %union.anon* %9994 to i64*
  %9995 = load i64, i64* %RBX.i1002
  %9996 = load i64, i64* %RBP.i1003
  %9997 = sub i64 %9996, 60
  %9998 = load i64, i64* %PC.i1001
  %9999 = add i64 %9998, 3
  store i64 %9999, i64* %PC.i1001
  %10000 = trunc i64 %9995 to i32
  %10001 = inttoptr i64 %9997 to i32*
  %10002 = load i32, i32* %10001
  %10003 = add i32 %10002, %10000
  %10004 = zext i32 %10003 to i64
  store i64 %10004, i64* %RBX.i1002, align 8
  %10005 = icmp ult i32 %10003, %10000
  %10006 = icmp ult i32 %10003, %10002
  %10007 = or i1 %10005, %10006
  %10008 = zext i1 %10007 to i8
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10008, i8* %10009, align 1
  %10010 = and i32 %10003, 255
  %10011 = call i32 @llvm.ctpop.i32(i32 %10010)
  %10012 = trunc i32 %10011 to i8
  %10013 = and i8 %10012, 1
  %10014 = xor i8 %10013, 1
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10014, i8* %10015, align 1
  %10016 = xor i32 %10002, %10000
  %10017 = xor i32 %10016, %10003
  %10018 = lshr i32 %10017, 4
  %10019 = trunc i32 %10018 to i8
  %10020 = and i8 %10019, 1
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10020, i8* %10021, align 1
  %10022 = icmp eq i32 %10003, 0
  %10023 = zext i1 %10022 to i8
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10023, i8* %10024, align 1
  %10025 = lshr i32 %10003, 31
  %10026 = trunc i32 %10025 to i8
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10026, i8* %10027, align 1
  %10028 = lshr i32 %10000, 31
  %10029 = lshr i32 %10002, 31
  %10030 = xor i32 %10025, %10028
  %10031 = xor i32 %10025, %10029
  %10032 = add i32 %10030, %10031
  %10033 = icmp eq i32 %10032, 2
  %10034 = zext i1 %10033 to i8
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10034, i8* %10035, align 1
  store %struct.Memory* %loadMem_43f612, %struct.Memory** %MEMORY
  %loadMem_43f615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10037 = getelementptr inbounds %struct.GPR, %struct.GPR* %10036, i32 0, i32 33
  %10038 = getelementptr inbounds %struct.Reg, %struct.Reg* %10037, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %10038 to i64*
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10040 = getelementptr inbounds %struct.GPR, %struct.GPR* %10039, i32 0, i32 3
  %10041 = getelementptr inbounds %struct.Reg, %struct.Reg* %10040, i32 0, i32 0
  %EBX.i999 = bitcast %union.anon* %10041 to i32*
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10043 = getelementptr inbounds %struct.GPR, %struct.GPR* %10042, i32 0, i32 9
  %10044 = getelementptr inbounds %struct.Reg, %struct.Reg* %10043, i32 0, i32 0
  %RSI.i1000 = bitcast %union.anon* %10044 to i64*
  %10045 = load i32, i32* %EBX.i999
  %10046 = zext i32 %10045 to i64
  %10047 = load i64, i64* %PC.i998
  %10048 = add i64 %10047, 3
  store i64 %10048, i64* %PC.i998
  %10049 = shl i64 %10046, 32
  %10050 = ashr exact i64 %10049, 32
  store i64 %10050, i64* %RSI.i1000, align 8
  store %struct.Memory* %loadMem_43f615, %struct.Memory** %MEMORY
  %loadMem_43f618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10052 = getelementptr inbounds %struct.GPR, %struct.GPR* %10051, i32 0, i32 33
  %10053 = getelementptr inbounds %struct.Reg, %struct.Reg* %10052, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %10053 to i64*
  %10054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10055 = getelementptr inbounds %struct.GPR, %struct.GPR* %10054, i32 0, i32 9
  %10056 = getelementptr inbounds %struct.Reg, %struct.Reg* %10055, i32 0, i32 0
  %RSI.i997 = bitcast %union.anon* %10056 to i64*
  %10057 = load i64, i64* %RSI.i997
  %10058 = load i64, i64* %PC.i996
  %10059 = add i64 %10058, 4
  store i64 %10059, i64* %PC.i996
  %10060 = shl i64 %10057, 5
  %10061 = icmp slt i64 %10060, 0
  %10062 = shl i64 %10060, 1
  store i64 %10062, i64* %RSI.i997, align 8
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10064 = zext i1 %10061 to i8
  store i8 %10064, i8* %10063, align 1
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10066 = trunc i64 %10062 to i32
  %10067 = and i32 %10066, 254
  %10068 = call i32 @llvm.ctpop.i32(i32 %10067)
  %10069 = trunc i32 %10068 to i8
  %10070 = and i8 %10069, 1
  %10071 = xor i8 %10070, 1
  store i8 %10071, i8* %10065, align 1
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10072, align 1
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10074 = icmp eq i64 %10062, 0
  %10075 = zext i1 %10074 to i8
  store i8 %10075, i8* %10073, align 1
  %10076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10077 = lshr i64 %10062, 63
  %10078 = trunc i64 %10077 to i8
  store i8 %10078, i8* %10076, align 1
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10079, align 1
  store %struct.Memory* %loadMem_43f618, %struct.Memory** %MEMORY
  %loadMem_43f61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10081 = getelementptr inbounds %struct.GPR, %struct.GPR* %10080, i32 0, i32 33
  %10082 = getelementptr inbounds %struct.Reg, %struct.Reg* %10081, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %10082 to i64*
  %10083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10084 = getelementptr inbounds %struct.GPR, %struct.GPR* %10083, i32 0, i32 9
  %10085 = getelementptr inbounds %struct.Reg, %struct.Reg* %10084, i32 0, i32 0
  %RSI.i994 = bitcast %union.anon* %10085 to i64*
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 11
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %RDI.i995 = bitcast %union.anon* %10088 to i64*
  %10089 = load i64, i64* %RDI.i995
  %10090 = load i64, i64* %RSI.i994
  %10091 = load i64, i64* %PC.i993
  %10092 = add i64 %10091, 3
  store i64 %10092, i64* %PC.i993
  %10093 = add i64 %10090, %10089
  store i64 %10093, i64* %RDI.i995, align 8
  %10094 = icmp ult i64 %10093, %10089
  %10095 = icmp ult i64 %10093, %10090
  %10096 = or i1 %10094, %10095
  %10097 = zext i1 %10096 to i8
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10097, i8* %10098, align 1
  %10099 = trunc i64 %10093 to i32
  %10100 = and i32 %10099, 255
  %10101 = call i32 @llvm.ctpop.i32(i32 %10100)
  %10102 = trunc i32 %10101 to i8
  %10103 = and i8 %10102, 1
  %10104 = xor i8 %10103, 1
  %10105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10104, i8* %10105, align 1
  %10106 = xor i64 %10090, %10089
  %10107 = xor i64 %10106, %10093
  %10108 = lshr i64 %10107, 4
  %10109 = trunc i64 %10108 to i8
  %10110 = and i8 %10109, 1
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10110, i8* %10111, align 1
  %10112 = icmp eq i64 %10093, 0
  %10113 = zext i1 %10112 to i8
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10113, i8* %10114, align 1
  %10115 = lshr i64 %10093, 63
  %10116 = trunc i64 %10115 to i8
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10116, i8* %10117, align 1
  %10118 = lshr i64 %10089, 63
  %10119 = lshr i64 %10090, 63
  %10120 = xor i64 %10115, %10118
  %10121 = xor i64 %10115, %10119
  %10122 = add i64 %10120, %10121
  %10123 = icmp eq i64 %10122, 2
  %10124 = zext i1 %10123 to i8
  %10125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10124, i8* %10125, align 1
  store %struct.Memory* %loadMem_43f61c, %struct.Memory** %MEMORY
  %loadMem_43f61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10127 = getelementptr inbounds %struct.GPR, %struct.GPR* %10126, i32 0, i32 33
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %10128 to i64*
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10130 = getelementptr inbounds %struct.GPR, %struct.GPR* %10129, i32 0, i32 3
  %10131 = getelementptr inbounds %struct.Reg, %struct.Reg* %10130, i32 0, i32 0
  %RBX.i991 = bitcast %union.anon* %10131 to i64*
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10133 = getelementptr inbounds %struct.GPR, %struct.GPR* %10132, i32 0, i32 15
  %10134 = getelementptr inbounds %struct.Reg, %struct.Reg* %10133, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %10134 to i64*
  %10135 = load i64, i64* %RBP.i992
  %10136 = sub i64 %10135, 76
  %10137 = load i64, i64* %PC.i990
  %10138 = add i64 %10137, 3
  store i64 %10138, i64* %PC.i990
  %10139 = inttoptr i64 %10136 to i32*
  %10140 = load i32, i32* %10139
  %10141 = zext i32 %10140 to i64
  store i64 %10141, i64* %RBX.i991, align 8
  store %struct.Memory* %loadMem_43f61f, %struct.Memory** %MEMORY
  %loadMem_43f622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10143 = getelementptr inbounds %struct.GPR, %struct.GPR* %10142, i32 0, i32 33
  %10144 = getelementptr inbounds %struct.Reg, %struct.Reg* %10143, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %10144 to i64*
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10146 = getelementptr inbounds %struct.GPR, %struct.GPR* %10145, i32 0, i32 3
  %10147 = getelementptr inbounds %struct.Reg, %struct.Reg* %10146, i32 0, i32 0
  %RBX.i988 = bitcast %union.anon* %10147 to i64*
  %10148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10149 = getelementptr inbounds %struct.GPR, %struct.GPR* %10148, i32 0, i32 15
  %10150 = getelementptr inbounds %struct.Reg, %struct.Reg* %10149, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %10150 to i64*
  %10151 = load i64, i64* %RBX.i988
  %10152 = load i64, i64* %RBP.i989
  %10153 = sub i64 %10152, 56
  %10154 = load i64, i64* %PC.i987
  %10155 = add i64 %10154, 3
  store i64 %10155, i64* %PC.i987
  %10156 = trunc i64 %10151 to i32
  %10157 = inttoptr i64 %10153 to i32*
  %10158 = load i32, i32* %10157
  %10159 = add i32 %10158, %10156
  %10160 = zext i32 %10159 to i64
  store i64 %10160, i64* %RBX.i988, align 8
  %10161 = icmp ult i32 %10159, %10156
  %10162 = icmp ult i32 %10159, %10158
  %10163 = or i1 %10161, %10162
  %10164 = zext i1 %10163 to i8
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10164, i8* %10165, align 1
  %10166 = and i32 %10159, 255
  %10167 = call i32 @llvm.ctpop.i32(i32 %10166)
  %10168 = trunc i32 %10167 to i8
  %10169 = and i8 %10168, 1
  %10170 = xor i8 %10169, 1
  %10171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10170, i8* %10171, align 1
  %10172 = xor i32 %10158, %10156
  %10173 = xor i32 %10172, %10159
  %10174 = lshr i32 %10173, 4
  %10175 = trunc i32 %10174 to i8
  %10176 = and i8 %10175, 1
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10176, i8* %10177, align 1
  %10178 = icmp eq i32 %10159, 0
  %10179 = zext i1 %10178 to i8
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10179, i8* %10180, align 1
  %10181 = lshr i32 %10159, 31
  %10182 = trunc i32 %10181 to i8
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10182, i8* %10183, align 1
  %10184 = lshr i32 %10156, 31
  %10185 = lshr i32 %10158, 31
  %10186 = xor i32 %10181, %10184
  %10187 = xor i32 %10181, %10185
  %10188 = add i32 %10186, %10187
  %10189 = icmp eq i32 %10188, 2
  %10190 = zext i1 %10189 to i8
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10190, i8* %10191, align 1
  store %struct.Memory* %loadMem_43f622, %struct.Memory** %MEMORY
  %loadMem_43f625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 33
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %10194 to i64*
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10196 = getelementptr inbounds %struct.GPR, %struct.GPR* %10195, i32 0, i32 3
  %10197 = getelementptr inbounds %struct.Reg, %struct.Reg* %10196, i32 0, i32 0
  %EBX.i985 = bitcast %union.anon* %10197 to i32*
  %10198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10199 = getelementptr inbounds %struct.GPR, %struct.GPR* %10198, i32 0, i32 9
  %10200 = getelementptr inbounds %struct.Reg, %struct.Reg* %10199, i32 0, i32 0
  %RSI.i986 = bitcast %union.anon* %10200 to i64*
  %10201 = load i32, i32* %EBX.i985
  %10202 = zext i32 %10201 to i64
  %10203 = load i64, i64* %PC.i984
  %10204 = add i64 %10203, 3
  store i64 %10204, i64* %PC.i984
  %10205 = shl i64 %10202, 32
  %10206 = ashr exact i64 %10205, 32
  store i64 %10206, i64* %RSI.i986, align 8
  store %struct.Memory* %loadMem_43f625, %struct.Memory** %MEMORY
  %loadMem_43f628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10208 = getelementptr inbounds %struct.GPR, %struct.GPR* %10207, i32 0, i32 33
  %10209 = getelementptr inbounds %struct.Reg, %struct.Reg* %10208, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %10209 to i64*
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10211 = getelementptr inbounds %struct.GPR, %struct.GPR* %10210, i32 0, i32 21
  %10212 = getelementptr inbounds %struct.Reg, %struct.Reg* %10211, i32 0, i32 0
  %R10D.i981 = bitcast %union.anon* %10212 to i32*
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10214 = getelementptr inbounds %struct.GPR, %struct.GPR* %10213, i32 0, i32 9
  %10215 = getelementptr inbounds %struct.Reg, %struct.Reg* %10214, i32 0, i32 0
  %RSI.i982 = bitcast %union.anon* %10215 to i64*
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10217 = getelementptr inbounds %struct.GPR, %struct.GPR* %10216, i32 0, i32 11
  %10218 = getelementptr inbounds %struct.Reg, %struct.Reg* %10217, i32 0, i32 0
  %RDI.i983 = bitcast %union.anon* %10218 to i64*
  %10219 = bitcast i32* %R10D.i981 to i64*
  %10220 = load i32, i32* %R10D.i981
  %10221 = zext i32 %10220 to i64
  %10222 = load i64, i64* %RDI.i983
  %10223 = load i64, i64* %RSI.i982
  %10224 = mul i64 %10223, 4
  %10225 = add i64 %10224, %10222
  %10226 = load i64, i64* %PC.i980
  %10227 = add i64 %10226, 4
  store i64 %10227, i64* %PC.i980
  %10228 = inttoptr i64 %10225 to i32*
  %10229 = load i32, i32* %10228
  %10230 = sub i32 %10220, %10229
  %10231 = zext i32 %10230 to i64
  store i64 %10231, i64* %10219, align 8
  %10232 = icmp ult i32 %10220, %10229
  %10233 = zext i1 %10232 to i8
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10233, i8* %10234, align 1
  %10235 = and i32 %10230, 255
  %10236 = call i32 @llvm.ctpop.i32(i32 %10235)
  %10237 = trunc i32 %10236 to i8
  %10238 = and i8 %10237, 1
  %10239 = xor i8 %10238, 1
  %10240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10239, i8* %10240, align 1
  %10241 = xor i32 %10229, %10220
  %10242 = xor i32 %10241, %10230
  %10243 = lshr i32 %10242, 4
  %10244 = trunc i32 %10243 to i8
  %10245 = and i8 %10244, 1
  %10246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10245, i8* %10246, align 1
  %10247 = icmp eq i32 %10230, 0
  %10248 = zext i1 %10247 to i8
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10248, i8* %10249, align 1
  %10250 = lshr i32 %10230, 31
  %10251 = trunc i32 %10250 to i8
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10251, i8* %10252, align 1
  %10253 = lshr i32 %10220, 31
  %10254 = lshr i32 %10229, 31
  %10255 = xor i32 %10254, %10253
  %10256 = xor i32 %10250, %10253
  %10257 = add i32 %10256, %10255
  %10258 = icmp eq i32 %10257, 2
  %10259 = zext i1 %10258 to i8
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10259, i8* %10260, align 1
  store %struct.Memory* %loadMem_43f628, %struct.Memory** %MEMORY
  %loadMem_43f62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10262 = getelementptr inbounds %struct.GPR, %struct.GPR* %10261, i32 0, i32 33
  %10263 = getelementptr inbounds %struct.Reg, %struct.Reg* %10262, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %10263 to i64*
  %10264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10265 = getelementptr inbounds %struct.GPR, %struct.GPR* %10264, i32 0, i32 21
  %10266 = getelementptr inbounds %struct.Reg, %struct.Reg* %10265, i32 0, i32 0
  %R10D.i978 = bitcast %union.anon* %10266 to i32*
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10268 = getelementptr inbounds %struct.GPR, %struct.GPR* %10267, i32 0, i32 15
  %10269 = getelementptr inbounds %struct.Reg, %struct.Reg* %10268, i32 0, i32 0
  %RBP.i979 = bitcast %union.anon* %10269 to i64*
  %10270 = load i64, i64* %RBP.i979
  %10271 = sub i64 %10270, 136
  %10272 = load i32, i32* %R10D.i978
  %10273 = zext i32 %10272 to i64
  %10274 = load i64, i64* %PC.i977
  %10275 = add i64 %10274, 7
  store i64 %10275, i64* %PC.i977
  %10276 = inttoptr i64 %10271 to i32*
  store i32 %10272, i32* %10276
  store %struct.Memory* %loadMem_43f62c, %struct.Memory** %MEMORY
  %loadMem_43f633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10278 = getelementptr inbounds %struct.GPR, %struct.GPR* %10277, i32 0, i32 33
  %10279 = getelementptr inbounds %struct.Reg, %struct.Reg* %10278, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %10279 to i64*
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10281 = getelementptr inbounds %struct.GPR, %struct.GPR* %10280, i32 0, i32 21
  %10282 = getelementptr inbounds %struct.Reg, %struct.Reg* %10281, i32 0, i32 0
  %R10D.i975 = bitcast %union.anon* %10282 to i32*
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10284 = getelementptr inbounds %struct.GPR, %struct.GPR* %10283, i32 0, i32 15
  %10285 = getelementptr inbounds %struct.Reg, %struct.Reg* %10284, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %10285 to i64*
  %10286 = bitcast i32* %R10D.i975 to i64*
  %10287 = load i64, i64* %RBP.i976
  %10288 = sub i64 %10287, 136
  %10289 = load i64, i64* %PC.i974
  %10290 = add i64 %10289, 7
  store i64 %10290, i64* %PC.i974
  %10291 = inttoptr i64 %10288 to i32*
  %10292 = load i32, i32* %10291
  %10293 = zext i32 %10292 to i64
  store i64 %10293, i64* %10286, align 8
  store %struct.Memory* %loadMem_43f633, %struct.Memory** %MEMORY
  %loadMem_43f63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10295 = getelementptr inbounds %struct.GPR, %struct.GPR* %10294, i32 0, i32 33
  %10296 = getelementptr inbounds %struct.Reg, %struct.Reg* %10295, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %10296 to i64*
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 21
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %R10D.i972 = bitcast %union.anon* %10299 to i32*
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10301 = getelementptr inbounds %struct.GPR, %struct.GPR* %10300, i32 0, i32 15
  %10302 = getelementptr inbounds %struct.Reg, %struct.Reg* %10301, i32 0, i32 0
  %RBP.i973 = bitcast %union.anon* %10302 to i64*
  %10303 = bitcast i32* %R10D.i972 to i64*
  %10304 = load i32, i32* %R10D.i972
  %10305 = zext i32 %10304 to i64
  %10306 = load i64, i64* %RBP.i973
  %10307 = sub i64 %10306, 144
  %10308 = load i64, i64* %PC.i971
  %10309 = add i64 %10308, 7
  store i64 %10309, i64* %PC.i971
  %10310 = inttoptr i64 %10307 to i32*
  %10311 = load i32, i32* %10310
  %10312 = sub i32 %10304, %10311
  %10313 = zext i32 %10312 to i64
  store i64 %10313, i64* %10303, align 8
  %10314 = icmp ult i32 %10304, %10311
  %10315 = zext i1 %10314 to i8
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10315, i8* %10316, align 1
  %10317 = and i32 %10312, 255
  %10318 = call i32 @llvm.ctpop.i32(i32 %10317)
  %10319 = trunc i32 %10318 to i8
  %10320 = and i8 %10319, 1
  %10321 = xor i8 %10320, 1
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10321, i8* %10322, align 1
  %10323 = xor i32 %10311, %10304
  %10324 = xor i32 %10323, %10312
  %10325 = lshr i32 %10324, 4
  %10326 = trunc i32 %10325 to i8
  %10327 = and i8 %10326, 1
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10327, i8* %10328, align 1
  %10329 = icmp eq i32 %10312, 0
  %10330 = zext i1 %10329 to i8
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10330, i8* %10331, align 1
  %10332 = lshr i32 %10312, 31
  %10333 = trunc i32 %10332 to i8
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10333, i8* %10334, align 1
  %10335 = lshr i32 %10304, 31
  %10336 = lshr i32 %10311, 31
  %10337 = xor i32 %10336, %10335
  %10338 = xor i32 %10332, %10335
  %10339 = add i32 %10338, %10337
  %10340 = icmp eq i32 %10339, 2
  %10341 = zext i1 %10340 to i8
  %10342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10341, i8* %10342, align 1
  store %struct.Memory* %loadMem_43f63a, %struct.Memory** %MEMORY
  %loadMem_43f641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10344 = getelementptr inbounds %struct.GPR, %struct.GPR* %10343, i32 0, i32 33
  %10345 = getelementptr inbounds %struct.Reg, %struct.Reg* %10344, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %10345 to i64*
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10347 = getelementptr inbounds %struct.GPR, %struct.GPR* %10346, i32 0, i32 3
  %10348 = getelementptr inbounds %struct.Reg, %struct.Reg* %10347, i32 0, i32 0
  %RBX.i969 = bitcast %union.anon* %10348 to i64*
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10350 = getelementptr inbounds %struct.GPR, %struct.GPR* %10349, i32 0, i32 15
  %10351 = getelementptr inbounds %struct.Reg, %struct.Reg* %10350, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %10351 to i64*
  %10352 = load i64, i64* %RBP.i970
  %10353 = sub i64 %10352, 72
  %10354 = load i64, i64* %PC.i968
  %10355 = add i64 %10354, 3
  store i64 %10355, i64* %PC.i968
  %10356 = inttoptr i64 %10353 to i32*
  %10357 = load i32, i32* %10356
  %10358 = zext i32 %10357 to i64
  store i64 %10358, i64* %RBX.i969, align 8
  store %struct.Memory* %loadMem_43f641, %struct.Memory** %MEMORY
  %loadMem_43f644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10360 = getelementptr inbounds %struct.GPR, %struct.GPR* %10359, i32 0, i32 33
  %10361 = getelementptr inbounds %struct.Reg, %struct.Reg* %10360, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %10361 to i64*
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 3
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %RBX.i966 = bitcast %union.anon* %10364 to i64*
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 15
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %10367 to i64*
  %10368 = load i64, i64* %RBX.i966
  %10369 = load i64, i64* %RBP.i967
  %10370 = sub i64 %10369, 60
  %10371 = load i64, i64* %PC.i965
  %10372 = add i64 %10371, 3
  store i64 %10372, i64* %PC.i965
  %10373 = trunc i64 %10368 to i32
  %10374 = inttoptr i64 %10370 to i32*
  %10375 = load i32, i32* %10374
  %10376 = add i32 %10375, %10373
  %10377 = zext i32 %10376 to i64
  store i64 %10377, i64* %RBX.i966, align 8
  %10378 = icmp ult i32 %10376, %10373
  %10379 = icmp ult i32 %10376, %10375
  %10380 = or i1 %10378, %10379
  %10381 = zext i1 %10380 to i8
  %10382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10381, i8* %10382, align 1
  %10383 = and i32 %10376, 255
  %10384 = call i32 @llvm.ctpop.i32(i32 %10383)
  %10385 = trunc i32 %10384 to i8
  %10386 = and i8 %10385, 1
  %10387 = xor i8 %10386, 1
  %10388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10387, i8* %10388, align 1
  %10389 = xor i32 %10375, %10373
  %10390 = xor i32 %10389, %10376
  %10391 = lshr i32 %10390, 4
  %10392 = trunc i32 %10391 to i8
  %10393 = and i8 %10392, 1
  %10394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10393, i8* %10394, align 1
  %10395 = icmp eq i32 %10376, 0
  %10396 = zext i1 %10395 to i8
  %10397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10396, i8* %10397, align 1
  %10398 = lshr i32 %10376, 31
  %10399 = trunc i32 %10398 to i8
  %10400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10399, i8* %10400, align 1
  %10401 = lshr i32 %10373, 31
  %10402 = lshr i32 %10375, 31
  %10403 = xor i32 %10398, %10401
  %10404 = xor i32 %10398, %10402
  %10405 = add i32 %10403, %10404
  %10406 = icmp eq i32 %10405, 2
  %10407 = zext i1 %10406 to i8
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10407, i8* %10408, align 1
  store %struct.Memory* %loadMem_43f644, %struct.Memory** %MEMORY
  %loadMem_43f647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 33
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %10411 to i64*
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10413 = getelementptr inbounds %struct.GPR, %struct.GPR* %10412, i32 0, i32 3
  %10414 = getelementptr inbounds %struct.Reg, %struct.Reg* %10413, i32 0, i32 0
  %EBX.i963 = bitcast %union.anon* %10414 to i32*
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 9
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %RSI.i964 = bitcast %union.anon* %10417 to i64*
  %10418 = load i32, i32* %EBX.i963
  %10419 = zext i32 %10418 to i64
  %10420 = load i64, i64* %PC.i962
  %10421 = add i64 %10420, 3
  store i64 %10421, i64* %PC.i962
  %10422 = shl i64 %10419, 32
  %10423 = ashr exact i64 %10422, 32
  store i64 %10423, i64* %RSI.i964, align 8
  store %struct.Memory* %loadMem_43f647, %struct.Memory** %MEMORY
  %loadMem_43f64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 33
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %10426 to i64*
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10428 = getelementptr inbounds %struct.GPR, %struct.GPR* %10427, i32 0, i32 9
  %10429 = getelementptr inbounds %struct.Reg, %struct.Reg* %10428, i32 0, i32 0
  %RSI.i961 = bitcast %union.anon* %10429 to i64*
  %10430 = load i64, i64* %RSI.i961
  %10431 = load i64, i64* %PC.i960
  %10432 = add i64 %10431, 4
  store i64 %10432, i64* %PC.i960
  %10433 = shl i64 %10430, 5
  %10434 = icmp slt i64 %10433, 0
  %10435 = shl i64 %10433, 1
  store i64 %10435, i64* %RSI.i961, align 8
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10437 = zext i1 %10434 to i8
  store i8 %10437, i8* %10436, align 1
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10439 = trunc i64 %10435 to i32
  %10440 = and i32 %10439, 254
  %10441 = call i32 @llvm.ctpop.i32(i32 %10440)
  %10442 = trunc i32 %10441 to i8
  %10443 = and i8 %10442, 1
  %10444 = xor i8 %10443, 1
  store i8 %10444, i8* %10438, align 1
  %10445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10445, align 1
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10447 = icmp eq i64 %10435, 0
  %10448 = zext i1 %10447 to i8
  store i8 %10448, i8* %10446, align 1
  %10449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10450 = lshr i64 %10435, 63
  %10451 = trunc i64 %10450 to i8
  store i8 %10451, i8* %10449, align 1
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10452, align 1
  store %struct.Memory* %loadMem_43f64a, %struct.Memory** %MEMORY
  %loadMem_43f64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10454 = getelementptr inbounds %struct.GPR, %struct.GPR* %10453, i32 0, i32 33
  %10455 = getelementptr inbounds %struct.Reg, %struct.Reg* %10454, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %10455 to i64*
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10457 = getelementptr inbounds %struct.GPR, %struct.GPR* %10456, i32 0, i32 7
  %10458 = getelementptr inbounds %struct.Reg, %struct.Reg* %10457, i32 0, i32 0
  %RDX.i958 = bitcast %union.anon* %10458 to i64*
  %10459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10460 = getelementptr inbounds %struct.GPR, %struct.GPR* %10459, i32 0, i32 11
  %10461 = getelementptr inbounds %struct.Reg, %struct.Reg* %10460, i32 0, i32 0
  %RDI.i959 = bitcast %union.anon* %10461 to i64*
  %10462 = load i64, i64* %RDX.i958
  %10463 = load i64, i64* %PC.i957
  %10464 = add i64 %10463, 3
  store i64 %10464, i64* %PC.i957
  store i64 %10462, i64* %RDI.i959, align 8
  store %struct.Memory* %loadMem_43f64e, %struct.Memory** %MEMORY
  %loadMem_43f651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10466 = getelementptr inbounds %struct.GPR, %struct.GPR* %10465, i32 0, i32 33
  %10467 = getelementptr inbounds %struct.Reg, %struct.Reg* %10466, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %10467 to i64*
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10469 = getelementptr inbounds %struct.GPR, %struct.GPR* %10468, i32 0, i32 9
  %10470 = getelementptr inbounds %struct.Reg, %struct.Reg* %10469, i32 0, i32 0
  %RSI.i955 = bitcast %union.anon* %10470 to i64*
  %10471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10472 = getelementptr inbounds %struct.GPR, %struct.GPR* %10471, i32 0, i32 11
  %10473 = getelementptr inbounds %struct.Reg, %struct.Reg* %10472, i32 0, i32 0
  %RDI.i956 = bitcast %union.anon* %10473 to i64*
  %10474 = load i64, i64* %RDI.i956
  %10475 = load i64, i64* %RSI.i955
  %10476 = load i64, i64* %PC.i954
  %10477 = add i64 %10476, 3
  store i64 %10477, i64* %PC.i954
  %10478 = add i64 %10475, %10474
  store i64 %10478, i64* %RDI.i956, align 8
  %10479 = icmp ult i64 %10478, %10474
  %10480 = icmp ult i64 %10478, %10475
  %10481 = or i1 %10479, %10480
  %10482 = zext i1 %10481 to i8
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10482, i8* %10483, align 1
  %10484 = trunc i64 %10478 to i32
  %10485 = and i32 %10484, 255
  %10486 = call i32 @llvm.ctpop.i32(i32 %10485)
  %10487 = trunc i32 %10486 to i8
  %10488 = and i8 %10487, 1
  %10489 = xor i8 %10488, 1
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10489, i8* %10490, align 1
  %10491 = xor i64 %10475, %10474
  %10492 = xor i64 %10491, %10478
  %10493 = lshr i64 %10492, 4
  %10494 = trunc i64 %10493 to i8
  %10495 = and i8 %10494, 1
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10495, i8* %10496, align 1
  %10497 = icmp eq i64 %10478, 0
  %10498 = zext i1 %10497 to i8
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10498, i8* %10499, align 1
  %10500 = lshr i64 %10478, 63
  %10501 = trunc i64 %10500 to i8
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10501, i8* %10502, align 1
  %10503 = lshr i64 %10474, 63
  %10504 = lshr i64 %10475, 63
  %10505 = xor i64 %10500, %10503
  %10506 = xor i64 %10500, %10504
  %10507 = add i64 %10505, %10506
  %10508 = icmp eq i64 %10507, 2
  %10509 = zext i1 %10508 to i8
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10509, i8* %10510, align 1
  store %struct.Memory* %loadMem_43f651, %struct.Memory** %MEMORY
  %loadMem_43f654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10512 = getelementptr inbounds %struct.GPR, %struct.GPR* %10511, i32 0, i32 33
  %10513 = getelementptr inbounds %struct.Reg, %struct.Reg* %10512, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %10513 to i64*
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10515 = getelementptr inbounds %struct.GPR, %struct.GPR* %10514, i32 0, i32 3
  %10516 = getelementptr inbounds %struct.Reg, %struct.Reg* %10515, i32 0, i32 0
  %RBX.i952 = bitcast %union.anon* %10516 to i64*
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10518 = getelementptr inbounds %struct.GPR, %struct.GPR* %10517, i32 0, i32 15
  %10519 = getelementptr inbounds %struct.Reg, %struct.Reg* %10518, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %10519 to i64*
  %10520 = load i64, i64* %RBP.i953
  %10521 = sub i64 %10520, 76
  %10522 = load i64, i64* %PC.i951
  %10523 = add i64 %10522, 3
  store i64 %10523, i64* %PC.i951
  %10524 = inttoptr i64 %10521 to i32*
  %10525 = load i32, i32* %10524
  %10526 = zext i32 %10525 to i64
  store i64 %10526, i64* %RBX.i952, align 8
  store %struct.Memory* %loadMem_43f654, %struct.Memory** %MEMORY
  %loadMem_43f657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10528 = getelementptr inbounds %struct.GPR, %struct.GPR* %10527, i32 0, i32 33
  %10529 = getelementptr inbounds %struct.Reg, %struct.Reg* %10528, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %10529 to i64*
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 3
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %RBX.i949 = bitcast %union.anon* %10532 to i64*
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 15
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %10535 to i64*
  %10536 = load i64, i64* %RBX.i949
  %10537 = load i64, i64* %RBP.i950
  %10538 = sub i64 %10537, 56
  %10539 = load i64, i64* %PC.i948
  %10540 = add i64 %10539, 3
  store i64 %10540, i64* %PC.i948
  %10541 = trunc i64 %10536 to i32
  %10542 = inttoptr i64 %10538 to i32*
  %10543 = load i32, i32* %10542
  %10544 = add i32 %10543, %10541
  %10545 = zext i32 %10544 to i64
  store i64 %10545, i64* %RBX.i949, align 8
  %10546 = icmp ult i32 %10544, %10541
  %10547 = icmp ult i32 %10544, %10543
  %10548 = or i1 %10546, %10547
  %10549 = zext i1 %10548 to i8
  %10550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10549, i8* %10550, align 1
  %10551 = and i32 %10544, 255
  %10552 = call i32 @llvm.ctpop.i32(i32 %10551)
  %10553 = trunc i32 %10552 to i8
  %10554 = and i8 %10553, 1
  %10555 = xor i8 %10554, 1
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10555, i8* %10556, align 1
  %10557 = xor i32 %10543, %10541
  %10558 = xor i32 %10557, %10544
  %10559 = lshr i32 %10558, 4
  %10560 = trunc i32 %10559 to i8
  %10561 = and i8 %10560, 1
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10561, i8* %10562, align 1
  %10563 = icmp eq i32 %10544, 0
  %10564 = zext i1 %10563 to i8
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10564, i8* %10565, align 1
  %10566 = lshr i32 %10544, 31
  %10567 = trunc i32 %10566 to i8
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10567, i8* %10568, align 1
  %10569 = lshr i32 %10541, 31
  %10570 = lshr i32 %10543, 31
  %10571 = xor i32 %10566, %10569
  %10572 = xor i32 %10566, %10570
  %10573 = add i32 %10571, %10572
  %10574 = icmp eq i32 %10573, 2
  %10575 = zext i1 %10574 to i8
  %10576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10575, i8* %10576, align 1
  store %struct.Memory* %loadMem_43f657, %struct.Memory** %MEMORY
  %loadMem_43f65a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10578 = getelementptr inbounds %struct.GPR, %struct.GPR* %10577, i32 0, i32 33
  %10579 = getelementptr inbounds %struct.Reg, %struct.Reg* %10578, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %10579 to i64*
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10581 = getelementptr inbounds %struct.GPR, %struct.GPR* %10580, i32 0, i32 3
  %10582 = getelementptr inbounds %struct.Reg, %struct.Reg* %10581, i32 0, i32 0
  %EBX.i946 = bitcast %union.anon* %10582 to i32*
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10584 = getelementptr inbounds %struct.GPR, %struct.GPR* %10583, i32 0, i32 9
  %10585 = getelementptr inbounds %struct.Reg, %struct.Reg* %10584, i32 0, i32 0
  %RSI.i947 = bitcast %union.anon* %10585 to i64*
  %10586 = load i32, i32* %EBX.i946
  %10587 = zext i32 %10586 to i64
  %10588 = load i64, i64* %PC.i945
  %10589 = add i64 %10588, 3
  store i64 %10589, i64* %PC.i945
  %10590 = shl i64 %10587, 32
  %10591 = ashr exact i64 %10590, 32
  store i64 %10591, i64* %RSI.i947, align 8
  store %struct.Memory* %loadMem_43f65a, %struct.Memory** %MEMORY
  %loadMem_43f65d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 33
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %10594 to i64*
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 21
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %R10D.i942 = bitcast %union.anon* %10597 to i32*
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10599 = getelementptr inbounds %struct.GPR, %struct.GPR* %10598, i32 0, i32 9
  %10600 = getelementptr inbounds %struct.Reg, %struct.Reg* %10599, i32 0, i32 0
  %RSI.i943 = bitcast %union.anon* %10600 to i64*
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10602 = getelementptr inbounds %struct.GPR, %struct.GPR* %10601, i32 0, i32 11
  %10603 = getelementptr inbounds %struct.Reg, %struct.Reg* %10602, i32 0, i32 0
  %RDI.i944 = bitcast %union.anon* %10603 to i64*
  %10604 = load i64, i64* %RDI.i944
  %10605 = load i64, i64* %RSI.i943
  %10606 = mul i64 %10605, 4
  %10607 = add i64 %10606, %10604
  %10608 = load i32, i32* %R10D.i942
  %10609 = zext i32 %10608 to i64
  %10610 = load i64, i64* %PC.i941
  %10611 = add i64 %10610, 4
  store i64 %10611, i64* %PC.i941
  %10612 = inttoptr i64 %10607 to i32*
  store i32 %10608, i32* %10612
  store %struct.Memory* %loadMem_43f65d, %struct.Memory** %MEMORY
  %loadMem_43f661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 33
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 21
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %R10D.i939 = bitcast %union.anon* %10618 to i32*
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10620 = getelementptr inbounds %struct.GPR, %struct.GPR* %10619, i32 0, i32 15
  %10621 = getelementptr inbounds %struct.Reg, %struct.Reg* %10620, i32 0, i32 0
  %RBP.i940 = bitcast %union.anon* %10621 to i64*
  %10622 = bitcast i32* %R10D.i939 to i64*
  %10623 = load i64, i64* %RBP.i940
  %10624 = sub i64 %10623, 144
  %10625 = load i64, i64* %PC.i938
  %10626 = add i64 %10625, 7
  store i64 %10626, i64* %PC.i938
  %10627 = inttoptr i64 %10624 to i32*
  %10628 = load i32, i32* %10627
  %10629 = zext i32 %10628 to i64
  store i64 %10629, i64* %10622, align 8
  store %struct.Memory* %loadMem_43f661, %struct.Memory** %MEMORY
  %loadMem_43f668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10631 = getelementptr inbounds %struct.GPR, %struct.GPR* %10630, i32 0, i32 33
  %10632 = getelementptr inbounds %struct.Reg, %struct.Reg* %10631, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %10632 to i64*
  %10633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10634 = getelementptr inbounds %struct.GPR, %struct.GPR* %10633, i32 0, i32 3
  %10635 = getelementptr inbounds %struct.Reg, %struct.Reg* %10634, i32 0, i32 0
  %RBX.i936 = bitcast %union.anon* %10635 to i64*
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10637 = getelementptr inbounds %struct.GPR, %struct.GPR* %10636, i32 0, i32 15
  %10638 = getelementptr inbounds %struct.Reg, %struct.Reg* %10637, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %10638 to i64*
  %10639 = load i64, i64* %RBP.i937
  %10640 = sub i64 %10639, 72
  %10641 = load i64, i64* %PC.i935
  %10642 = add i64 %10641, 3
  store i64 %10642, i64* %PC.i935
  %10643 = inttoptr i64 %10640 to i32*
  %10644 = load i32, i32* %10643
  %10645 = zext i32 %10644 to i64
  store i64 %10645, i64* %RBX.i936, align 8
  store %struct.Memory* %loadMem_43f668, %struct.Memory** %MEMORY
  %loadMem_43f66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 33
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %10648 to i64*
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 3
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %RBX.i933 = bitcast %union.anon* %10651 to i64*
  %10652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10653 = getelementptr inbounds %struct.GPR, %struct.GPR* %10652, i32 0, i32 15
  %10654 = getelementptr inbounds %struct.Reg, %struct.Reg* %10653, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %10654 to i64*
  %10655 = load i64, i64* %RBX.i933
  %10656 = load i64, i64* %RBP.i934
  %10657 = sub i64 %10656, 60
  %10658 = load i64, i64* %PC.i932
  %10659 = add i64 %10658, 3
  store i64 %10659, i64* %PC.i932
  %10660 = trunc i64 %10655 to i32
  %10661 = inttoptr i64 %10657 to i32*
  %10662 = load i32, i32* %10661
  %10663 = add i32 %10662, %10660
  %10664 = zext i32 %10663 to i64
  store i64 %10664, i64* %RBX.i933, align 8
  %10665 = icmp ult i32 %10663, %10660
  %10666 = icmp ult i32 %10663, %10662
  %10667 = or i1 %10665, %10666
  %10668 = zext i1 %10667 to i8
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10668, i8* %10669, align 1
  %10670 = and i32 %10663, 255
  %10671 = call i32 @llvm.ctpop.i32(i32 %10670)
  %10672 = trunc i32 %10671 to i8
  %10673 = and i8 %10672, 1
  %10674 = xor i8 %10673, 1
  %10675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10674, i8* %10675, align 1
  %10676 = xor i32 %10662, %10660
  %10677 = xor i32 %10676, %10663
  %10678 = lshr i32 %10677, 4
  %10679 = trunc i32 %10678 to i8
  %10680 = and i8 %10679, 1
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10680, i8* %10681, align 1
  %10682 = icmp eq i32 %10663, 0
  %10683 = zext i1 %10682 to i8
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10683, i8* %10684, align 1
  %10685 = lshr i32 %10663, 31
  %10686 = trunc i32 %10685 to i8
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10686, i8* %10687, align 1
  %10688 = lshr i32 %10660, 31
  %10689 = lshr i32 %10662, 31
  %10690 = xor i32 %10685, %10688
  %10691 = xor i32 %10685, %10689
  %10692 = add i32 %10690, %10691
  %10693 = icmp eq i32 %10692, 2
  %10694 = zext i1 %10693 to i8
  %10695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10694, i8* %10695, align 1
  store %struct.Memory* %loadMem_43f66b, %struct.Memory** %MEMORY
  %loadMem_43f66e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10697 = getelementptr inbounds %struct.GPR, %struct.GPR* %10696, i32 0, i32 33
  %10698 = getelementptr inbounds %struct.Reg, %struct.Reg* %10697, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %10698 to i64*
  %10699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10700 = getelementptr inbounds %struct.GPR, %struct.GPR* %10699, i32 0, i32 3
  %10701 = getelementptr inbounds %struct.Reg, %struct.Reg* %10700, i32 0, i32 0
  %EBX.i930 = bitcast %union.anon* %10701 to i32*
  %10702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10703 = getelementptr inbounds %struct.GPR, %struct.GPR* %10702, i32 0, i32 9
  %10704 = getelementptr inbounds %struct.Reg, %struct.Reg* %10703, i32 0, i32 0
  %RSI.i931 = bitcast %union.anon* %10704 to i64*
  %10705 = load i32, i32* %EBX.i930
  %10706 = zext i32 %10705 to i64
  %10707 = load i64, i64* %PC.i929
  %10708 = add i64 %10707, 3
  store i64 %10708, i64* %PC.i929
  %10709 = shl i64 %10706, 32
  %10710 = ashr exact i64 %10709, 32
  store i64 %10710, i64* %RSI.i931, align 8
  store %struct.Memory* %loadMem_43f66e, %struct.Memory** %MEMORY
  %loadMem_43f671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10712 = getelementptr inbounds %struct.GPR, %struct.GPR* %10711, i32 0, i32 33
  %10713 = getelementptr inbounds %struct.Reg, %struct.Reg* %10712, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %10713 to i64*
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10715 = getelementptr inbounds %struct.GPR, %struct.GPR* %10714, i32 0, i32 9
  %10716 = getelementptr inbounds %struct.Reg, %struct.Reg* %10715, i32 0, i32 0
  %RSI.i928 = bitcast %union.anon* %10716 to i64*
  %10717 = load i64, i64* %RSI.i928
  %10718 = load i64, i64* %PC.i927
  %10719 = add i64 %10718, 4
  store i64 %10719, i64* %PC.i927
  %10720 = shl i64 %10717, 5
  %10721 = icmp slt i64 %10720, 0
  %10722 = shl i64 %10720, 1
  store i64 %10722, i64* %RSI.i928, align 8
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10724 = zext i1 %10721 to i8
  store i8 %10724, i8* %10723, align 1
  %10725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10726 = trunc i64 %10722 to i32
  %10727 = and i32 %10726, 254
  %10728 = call i32 @llvm.ctpop.i32(i32 %10727)
  %10729 = trunc i32 %10728 to i8
  %10730 = and i8 %10729, 1
  %10731 = xor i8 %10730, 1
  store i8 %10731, i8* %10725, align 1
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10732, align 1
  %10733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10734 = icmp eq i64 %10722, 0
  %10735 = zext i1 %10734 to i8
  store i8 %10735, i8* %10733, align 1
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10737 = lshr i64 %10722, 63
  %10738 = trunc i64 %10737 to i8
  store i8 %10738, i8* %10736, align 1
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10739, align 1
  store %struct.Memory* %loadMem_43f671, %struct.Memory** %MEMORY
  %loadMem_43f675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10741 = getelementptr inbounds %struct.GPR, %struct.GPR* %10740, i32 0, i32 33
  %10742 = getelementptr inbounds %struct.Reg, %struct.Reg* %10741, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %10742 to i64*
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10744 = getelementptr inbounds %struct.GPR, %struct.GPR* %10743, i32 0, i32 7
  %10745 = getelementptr inbounds %struct.Reg, %struct.Reg* %10744, i32 0, i32 0
  %RDX.i925 = bitcast %union.anon* %10745 to i64*
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10747 = getelementptr inbounds %struct.GPR, %struct.GPR* %10746, i32 0, i32 9
  %10748 = getelementptr inbounds %struct.Reg, %struct.Reg* %10747, i32 0, i32 0
  %RSI.i926 = bitcast %union.anon* %10748 to i64*
  %10749 = load i64, i64* %RDX.i925
  %10750 = load i64, i64* %RSI.i926
  %10751 = load i64, i64* %PC.i924
  %10752 = add i64 %10751, 3
  store i64 %10752, i64* %PC.i924
  %10753 = add i64 %10750, %10749
  store i64 %10753, i64* %RDX.i925, align 8
  %10754 = icmp ult i64 %10753, %10749
  %10755 = icmp ult i64 %10753, %10750
  %10756 = or i1 %10754, %10755
  %10757 = zext i1 %10756 to i8
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10757, i8* %10758, align 1
  %10759 = trunc i64 %10753 to i32
  %10760 = and i32 %10759, 255
  %10761 = call i32 @llvm.ctpop.i32(i32 %10760)
  %10762 = trunc i32 %10761 to i8
  %10763 = and i8 %10762, 1
  %10764 = xor i8 %10763, 1
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10764, i8* %10765, align 1
  %10766 = xor i64 %10750, %10749
  %10767 = xor i64 %10766, %10753
  %10768 = lshr i64 %10767, 4
  %10769 = trunc i64 %10768 to i8
  %10770 = and i8 %10769, 1
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10770, i8* %10771, align 1
  %10772 = icmp eq i64 %10753, 0
  %10773 = zext i1 %10772 to i8
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10773, i8* %10774, align 1
  %10775 = lshr i64 %10753, 63
  %10776 = trunc i64 %10775 to i8
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10776, i8* %10777, align 1
  %10778 = lshr i64 %10749, 63
  %10779 = lshr i64 %10750, 63
  %10780 = xor i64 %10775, %10778
  %10781 = xor i64 %10775, %10779
  %10782 = add i64 %10780, %10781
  %10783 = icmp eq i64 %10782, 2
  %10784 = zext i1 %10783 to i8
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10784, i8* %10785, align 1
  store %struct.Memory* %loadMem_43f675, %struct.Memory** %MEMORY
  %loadMem_43f678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 33
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %10788 to i64*
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10790 = getelementptr inbounds %struct.GPR, %struct.GPR* %10789, i32 0, i32 3
  %10791 = getelementptr inbounds %struct.Reg, %struct.Reg* %10790, i32 0, i32 0
  %RBX.i922 = bitcast %union.anon* %10791 to i64*
  %10792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10793 = getelementptr inbounds %struct.GPR, %struct.GPR* %10792, i32 0, i32 15
  %10794 = getelementptr inbounds %struct.Reg, %struct.Reg* %10793, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %10794 to i64*
  %10795 = load i64, i64* %RBP.i923
  %10796 = sub i64 %10795, 76
  %10797 = load i64, i64* %PC.i921
  %10798 = add i64 %10797, 3
  store i64 %10798, i64* %PC.i921
  %10799 = inttoptr i64 %10796 to i32*
  %10800 = load i32, i32* %10799
  %10801 = zext i32 %10800 to i64
  store i64 %10801, i64* %RBX.i922, align 8
  store %struct.Memory* %loadMem_43f678, %struct.Memory** %MEMORY
  %loadMem_43f67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10803 = getelementptr inbounds %struct.GPR, %struct.GPR* %10802, i32 0, i32 33
  %10804 = getelementptr inbounds %struct.Reg, %struct.Reg* %10803, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %10804 to i64*
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10806 = getelementptr inbounds %struct.GPR, %struct.GPR* %10805, i32 0, i32 3
  %10807 = getelementptr inbounds %struct.Reg, %struct.Reg* %10806, i32 0, i32 0
  %RBX.i919 = bitcast %union.anon* %10807 to i64*
  %10808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10809 = getelementptr inbounds %struct.GPR, %struct.GPR* %10808, i32 0, i32 15
  %10810 = getelementptr inbounds %struct.Reg, %struct.Reg* %10809, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %10810 to i64*
  %10811 = load i64, i64* %RBX.i919
  %10812 = load i64, i64* %RBP.i920
  %10813 = sub i64 %10812, 56
  %10814 = load i64, i64* %PC.i918
  %10815 = add i64 %10814, 3
  store i64 %10815, i64* %PC.i918
  %10816 = trunc i64 %10811 to i32
  %10817 = inttoptr i64 %10813 to i32*
  %10818 = load i32, i32* %10817
  %10819 = add i32 %10818, %10816
  %10820 = zext i32 %10819 to i64
  store i64 %10820, i64* %RBX.i919, align 8
  %10821 = icmp ult i32 %10819, %10816
  %10822 = icmp ult i32 %10819, %10818
  %10823 = or i1 %10821, %10822
  %10824 = zext i1 %10823 to i8
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10824, i8* %10825, align 1
  %10826 = and i32 %10819, 255
  %10827 = call i32 @llvm.ctpop.i32(i32 %10826)
  %10828 = trunc i32 %10827 to i8
  %10829 = and i8 %10828, 1
  %10830 = xor i8 %10829, 1
  %10831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10830, i8* %10831, align 1
  %10832 = xor i32 %10818, %10816
  %10833 = xor i32 %10832, %10819
  %10834 = lshr i32 %10833, 4
  %10835 = trunc i32 %10834 to i8
  %10836 = and i8 %10835, 1
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10836, i8* %10837, align 1
  %10838 = icmp eq i32 %10819, 0
  %10839 = zext i1 %10838 to i8
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10839, i8* %10840, align 1
  %10841 = lshr i32 %10819, 31
  %10842 = trunc i32 %10841 to i8
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10842, i8* %10843, align 1
  %10844 = lshr i32 %10816, 31
  %10845 = lshr i32 %10818, 31
  %10846 = xor i32 %10841, %10844
  %10847 = xor i32 %10841, %10845
  %10848 = add i32 %10846, %10847
  %10849 = icmp eq i32 %10848, 2
  %10850 = zext i1 %10849 to i8
  %10851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10850, i8* %10851, align 1
  store %struct.Memory* %loadMem_43f67b, %struct.Memory** %MEMORY
  %loadMem_43f67e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10853 = getelementptr inbounds %struct.GPR, %struct.GPR* %10852, i32 0, i32 33
  %10854 = getelementptr inbounds %struct.Reg, %struct.Reg* %10853, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %10854 to i64*
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10856 = getelementptr inbounds %struct.GPR, %struct.GPR* %10855, i32 0, i32 3
  %10857 = getelementptr inbounds %struct.Reg, %struct.Reg* %10856, i32 0, i32 0
  %EBX.i916 = bitcast %union.anon* %10857 to i32*
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10859 = getelementptr inbounds %struct.GPR, %struct.GPR* %10858, i32 0, i32 9
  %10860 = getelementptr inbounds %struct.Reg, %struct.Reg* %10859, i32 0, i32 0
  %RSI.i917 = bitcast %union.anon* %10860 to i64*
  %10861 = load i32, i32* %EBX.i916
  %10862 = zext i32 %10861 to i64
  %10863 = load i64, i64* %PC.i915
  %10864 = add i64 %10863, 3
  store i64 %10864, i64* %PC.i915
  %10865 = shl i64 %10862, 32
  %10866 = ashr exact i64 %10865, 32
  store i64 %10866, i64* %RSI.i917, align 8
  store %struct.Memory* %loadMem_43f67e, %struct.Memory** %MEMORY
  %loadMem_43f681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10868 = getelementptr inbounds %struct.GPR, %struct.GPR* %10867, i32 0, i32 33
  %10869 = getelementptr inbounds %struct.Reg, %struct.Reg* %10868, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %10869 to i64*
  %10870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10871 = getelementptr inbounds %struct.GPR, %struct.GPR* %10870, i32 0, i32 3
  %10872 = getelementptr inbounds %struct.Reg, %struct.Reg* %10871, i32 0, i32 0
  %RBX.i912 = bitcast %union.anon* %10872 to i64*
  %10873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10874 = getelementptr inbounds %struct.GPR, %struct.GPR* %10873, i32 0, i32 7
  %10875 = getelementptr inbounds %struct.Reg, %struct.Reg* %10874, i32 0, i32 0
  %RDX.i913 = bitcast %union.anon* %10875 to i64*
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10877 = getelementptr inbounds %struct.GPR, %struct.GPR* %10876, i32 0, i32 9
  %10878 = getelementptr inbounds %struct.Reg, %struct.Reg* %10877, i32 0, i32 0
  %RSI.i914 = bitcast %union.anon* %10878 to i64*
  %10879 = load i64, i64* %RDX.i913
  %10880 = load i64, i64* %RSI.i914
  %10881 = mul i64 %10880, 4
  %10882 = add i64 %10881, %10879
  %10883 = load i64, i64* %PC.i911
  %10884 = add i64 %10883, 3
  store i64 %10884, i64* %PC.i911
  %10885 = inttoptr i64 %10882 to i32*
  %10886 = load i32, i32* %10885
  %10887 = zext i32 %10886 to i64
  store i64 %10887, i64* %RBX.i912, align 8
  store %struct.Memory* %loadMem_43f681, %struct.Memory** %MEMORY
  %loadMem_43f684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10889 = getelementptr inbounds %struct.GPR, %struct.GPR* %10888, i32 0, i32 33
  %10890 = getelementptr inbounds %struct.Reg, %struct.Reg* %10889, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %10890 to i64*
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10892 = getelementptr inbounds %struct.GPR, %struct.GPR* %10891, i32 0, i32 3
  %10893 = getelementptr inbounds %struct.Reg, %struct.Reg* %10892, i32 0, i32 0
  %RBX.i910 = bitcast %union.anon* %10893 to i64*
  %10894 = load i64, i64* %RBX.i910
  %10895 = load i64, i64* %PC.i909
  %10896 = add i64 %10895, 2
  store i64 %10896, i64* %PC.i909
  %10897 = shl i64 %10894, 32
  %10898 = ashr i64 %10897, 33
  %10899 = trunc i64 %10894 to i8
  %10900 = and i8 %10899, 1
  %10901 = trunc i64 %10898 to i32
  %10902 = and i64 %10898, 4294967295
  store i64 %10902, i64* %RBX.i910, align 8
  %10903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10900, i8* %10903, align 1
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10905 = and i32 %10901, 255
  %10906 = call i32 @llvm.ctpop.i32(i32 %10905)
  %10907 = trunc i32 %10906 to i8
  %10908 = and i8 %10907, 1
  %10909 = xor i8 %10908, 1
  store i8 %10909, i8* %10904, align 1
  %10910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10910, align 1
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10912 = icmp eq i32 %10901, 0
  %10913 = zext i1 %10912 to i8
  store i8 %10913, i8* %10911, align 1
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10915 = lshr i32 %10901, 31
  %10916 = trunc i32 %10915 to i8
  store i8 %10916, i8* %10914, align 1
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10917, align 1
  store %struct.Memory* %loadMem_43f684, %struct.Memory** %MEMORY
  %loadMem_43f687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10919 = getelementptr inbounds %struct.GPR, %struct.GPR* %10918, i32 0, i32 33
  %10920 = getelementptr inbounds %struct.Reg, %struct.Reg* %10919, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %10920 to i64*
  %10921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10922 = getelementptr inbounds %struct.GPR, %struct.GPR* %10921, i32 0, i32 3
  %10923 = getelementptr inbounds %struct.Reg, %struct.Reg* %10922, i32 0, i32 0
  %EBX.i907 = bitcast %union.anon* %10923 to i32*
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10925 = getelementptr inbounds %struct.GPR, %struct.GPR* %10924, i32 0, i32 21
  %10926 = getelementptr inbounds %struct.Reg, %struct.Reg* %10925, i32 0, i32 0
  %R10D.i908 = bitcast %union.anon* %10926 to i32*
  %10927 = bitcast i32* %R10D.i908 to i64*
  %10928 = load i32, i32* %R10D.i908
  %10929 = zext i32 %10928 to i64
  %10930 = load i32, i32* %EBX.i907
  %10931 = zext i32 %10930 to i64
  %10932 = load i64, i64* %PC.i906
  %10933 = add i64 %10932, 3
  store i64 %10933, i64* %PC.i906
  %10934 = add i32 %10930, %10928
  %10935 = zext i32 %10934 to i64
  store i64 %10935, i64* %10927, align 8
  %10936 = icmp ult i32 %10934, %10928
  %10937 = icmp ult i32 %10934, %10930
  %10938 = or i1 %10936, %10937
  %10939 = zext i1 %10938 to i8
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10939, i8* %10940, align 1
  %10941 = and i32 %10934, 255
  %10942 = call i32 @llvm.ctpop.i32(i32 %10941)
  %10943 = trunc i32 %10942 to i8
  %10944 = and i8 %10943, 1
  %10945 = xor i8 %10944, 1
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10945, i8* %10946, align 1
  %10947 = xor i64 %10931, %10929
  %10948 = trunc i64 %10947 to i32
  %10949 = xor i32 %10948, %10934
  %10950 = lshr i32 %10949, 4
  %10951 = trunc i32 %10950 to i8
  %10952 = and i8 %10951, 1
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10952, i8* %10953, align 1
  %10954 = icmp eq i32 %10934, 0
  %10955 = zext i1 %10954 to i8
  %10956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10955, i8* %10956, align 1
  %10957 = lshr i32 %10934, 31
  %10958 = trunc i32 %10957 to i8
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10958, i8* %10959, align 1
  %10960 = lshr i32 %10928, 31
  %10961 = lshr i32 %10930, 31
  %10962 = xor i32 %10957, %10960
  %10963 = xor i32 %10957, %10961
  %10964 = add i32 %10962, %10963
  %10965 = icmp eq i32 %10964, 2
  %10966 = zext i1 %10965 to i8
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10966, i8* %10967, align 1
  store %struct.Memory* %loadMem_43f687, %struct.Memory** %MEMORY
  %loadMem_43f68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10969 = getelementptr inbounds %struct.GPR, %struct.GPR* %10968, i32 0, i32 33
  %10970 = getelementptr inbounds %struct.Reg, %struct.Reg* %10969, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %10970 to i64*
  %10971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10972 = getelementptr inbounds %struct.GPR, %struct.GPR* %10971, i32 0, i32 21
  %10973 = getelementptr inbounds %struct.Reg, %struct.Reg* %10972, i32 0, i32 0
  %R10D.i904 = bitcast %union.anon* %10973 to i32*
  %10974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10975 = getelementptr inbounds %struct.GPR, %struct.GPR* %10974, i32 0, i32 15
  %10976 = getelementptr inbounds %struct.Reg, %struct.Reg* %10975, i32 0, i32 0
  %RBP.i905 = bitcast %union.anon* %10976 to i64*
  %10977 = load i64, i64* %RBP.i905
  %10978 = sub i64 %10977, 148
  %10979 = load i32, i32* %R10D.i904
  %10980 = zext i32 %10979 to i64
  %10981 = load i64, i64* %PC.i903
  %10982 = add i64 %10981, 7
  store i64 %10982, i64* %PC.i903
  %10983 = inttoptr i64 %10978 to i32*
  store i32 %10979, i32* %10983
  store %struct.Memory* %loadMem_43f68a, %struct.Memory** %MEMORY
  %loadMem_43f691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10985 = getelementptr inbounds %struct.GPR, %struct.GPR* %10984, i32 0, i32 33
  %10986 = getelementptr inbounds %struct.Reg, %struct.Reg* %10985, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %10986 to i64*
  %10987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10988 = getelementptr inbounds %struct.GPR, %struct.GPR* %10987, i32 0, i32 21
  %10989 = getelementptr inbounds %struct.Reg, %struct.Reg* %10988, i32 0, i32 0
  %R10D.i901 = bitcast %union.anon* %10989 to i32*
  %10990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10991 = getelementptr inbounds %struct.GPR, %struct.GPR* %10990, i32 0, i32 15
  %10992 = getelementptr inbounds %struct.Reg, %struct.Reg* %10991, i32 0, i32 0
  %RBP.i902 = bitcast %union.anon* %10992 to i64*
  %10993 = bitcast i32* %R10D.i901 to i64*
  %10994 = load i64, i64* %RBP.i902
  %10995 = sub i64 %10994, 140
  %10996 = load i64, i64* %PC.i900
  %10997 = add i64 %10996, 7
  store i64 %10997, i64* %PC.i900
  %10998 = inttoptr i64 %10995 to i32*
  %10999 = load i32, i32* %10998
  %11000 = zext i32 %10999 to i64
  store i64 %11000, i64* %10993, align 8
  store %struct.Memory* %loadMem_43f691, %struct.Memory** %MEMORY
  %loadMem_43f698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11002 = getelementptr inbounds %struct.GPR, %struct.GPR* %11001, i32 0, i32 33
  %11003 = getelementptr inbounds %struct.Reg, %struct.Reg* %11002, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %11003 to i64*
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11005 = getelementptr inbounds %struct.GPR, %struct.GPR* %11004, i32 0, i32 21
  %11006 = getelementptr inbounds %struct.Reg, %struct.Reg* %11005, i32 0, i32 0
  %R10D.i898 = bitcast %union.anon* %11006 to i32*
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11008 = getelementptr inbounds %struct.GPR, %struct.GPR* %11007, i32 0, i32 15
  %11009 = getelementptr inbounds %struct.Reg, %struct.Reg* %11008, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %11009 to i64*
  %11010 = bitcast i32* %R10D.i898 to i64*
  %11011 = load i32, i32* %R10D.i898
  %11012 = zext i32 %11011 to i64
  %11013 = load i64, i64* %RBP.i899
  %11014 = sub i64 %11013, 148
  %11015 = load i64, i64* %PC.i897
  %11016 = add i64 %11015, 7
  store i64 %11016, i64* %PC.i897
  %11017 = inttoptr i64 %11014 to i32*
  %11018 = load i32, i32* %11017
  %11019 = sub i32 %11011, %11018
  %11020 = zext i32 %11019 to i64
  store i64 %11020, i64* %11010, align 8
  %11021 = icmp ult i32 %11011, %11018
  %11022 = zext i1 %11021 to i8
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11022, i8* %11023, align 1
  %11024 = and i32 %11019, 255
  %11025 = call i32 @llvm.ctpop.i32(i32 %11024)
  %11026 = trunc i32 %11025 to i8
  %11027 = and i8 %11026, 1
  %11028 = xor i8 %11027, 1
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11028, i8* %11029, align 1
  %11030 = xor i32 %11018, %11011
  %11031 = xor i32 %11030, %11019
  %11032 = lshr i32 %11031, 4
  %11033 = trunc i32 %11032 to i8
  %11034 = and i8 %11033, 1
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11034, i8* %11035, align 1
  %11036 = icmp eq i32 %11019, 0
  %11037 = zext i1 %11036 to i8
  %11038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11037, i8* %11038, align 1
  %11039 = lshr i32 %11019, 31
  %11040 = trunc i32 %11039 to i8
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11040, i8* %11041, align 1
  %11042 = lshr i32 %11011, 31
  %11043 = lshr i32 %11018, 31
  %11044 = xor i32 %11043, %11042
  %11045 = xor i32 %11039, %11042
  %11046 = add i32 %11045, %11044
  %11047 = icmp eq i32 %11046, 2
  %11048 = zext i1 %11047 to i8
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11048, i8* %11049, align 1
  store %struct.Memory* %loadMem_43f698, %struct.Memory** %MEMORY
  %loadMem_43f69f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11051 = getelementptr inbounds %struct.GPR, %struct.GPR* %11050, i32 0, i32 33
  %11052 = getelementptr inbounds %struct.Reg, %struct.Reg* %11051, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %11052 to i64*
  %11053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11054 = getelementptr inbounds %struct.GPR, %struct.GPR* %11053, i32 0, i32 3
  %11055 = getelementptr inbounds %struct.Reg, %struct.Reg* %11054, i32 0, i32 0
  %RBX.i895 = bitcast %union.anon* %11055 to i64*
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11057 = getelementptr inbounds %struct.GPR, %struct.GPR* %11056, i32 0, i32 15
  %11058 = getelementptr inbounds %struct.Reg, %struct.Reg* %11057, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %11058 to i64*
  %11059 = load i64, i64* %RBP.i896
  %11060 = sub i64 %11059, 72
  %11061 = load i64, i64* %PC.i894
  %11062 = add i64 %11061, 3
  store i64 %11062, i64* %PC.i894
  %11063 = inttoptr i64 %11060 to i32*
  %11064 = load i32, i32* %11063
  %11065 = zext i32 %11064 to i64
  store i64 %11065, i64* %RBX.i895, align 8
  store %struct.Memory* %loadMem_43f69f, %struct.Memory** %MEMORY
  %loadMem_43f6a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11067 = getelementptr inbounds %struct.GPR, %struct.GPR* %11066, i32 0, i32 33
  %11068 = getelementptr inbounds %struct.Reg, %struct.Reg* %11067, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %11068 to i64*
  %11069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11070 = getelementptr inbounds %struct.GPR, %struct.GPR* %11069, i32 0, i32 3
  %11071 = getelementptr inbounds %struct.Reg, %struct.Reg* %11070, i32 0, i32 0
  %RBX.i892 = bitcast %union.anon* %11071 to i64*
  %11072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11073 = getelementptr inbounds %struct.GPR, %struct.GPR* %11072, i32 0, i32 15
  %11074 = getelementptr inbounds %struct.Reg, %struct.Reg* %11073, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %11074 to i64*
  %11075 = load i64, i64* %RBX.i892
  %11076 = load i64, i64* %RBP.i893
  %11077 = sub i64 %11076, 60
  %11078 = load i64, i64* %PC.i891
  %11079 = add i64 %11078, 3
  store i64 %11079, i64* %PC.i891
  %11080 = trunc i64 %11075 to i32
  %11081 = inttoptr i64 %11077 to i32*
  %11082 = load i32, i32* %11081
  %11083 = add i32 %11082, %11080
  %11084 = zext i32 %11083 to i64
  store i64 %11084, i64* %RBX.i892, align 8
  %11085 = icmp ult i32 %11083, %11080
  %11086 = icmp ult i32 %11083, %11082
  %11087 = or i1 %11085, %11086
  %11088 = zext i1 %11087 to i8
  %11089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11088, i8* %11089, align 1
  %11090 = and i32 %11083, 255
  %11091 = call i32 @llvm.ctpop.i32(i32 %11090)
  %11092 = trunc i32 %11091 to i8
  %11093 = and i8 %11092, 1
  %11094 = xor i8 %11093, 1
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11094, i8* %11095, align 1
  %11096 = xor i32 %11082, %11080
  %11097 = xor i32 %11096, %11083
  %11098 = lshr i32 %11097, 4
  %11099 = trunc i32 %11098 to i8
  %11100 = and i8 %11099, 1
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11100, i8* %11101, align 1
  %11102 = icmp eq i32 %11083, 0
  %11103 = zext i1 %11102 to i8
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11103, i8* %11104, align 1
  %11105 = lshr i32 %11083, 31
  %11106 = trunc i32 %11105 to i8
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11106, i8* %11107, align 1
  %11108 = lshr i32 %11080, 31
  %11109 = lshr i32 %11082, 31
  %11110 = xor i32 %11105, %11108
  %11111 = xor i32 %11105, %11109
  %11112 = add i32 %11110, %11111
  %11113 = icmp eq i32 %11112, 2
  %11114 = zext i1 %11113 to i8
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11114, i8* %11115, align 1
  store %struct.Memory* %loadMem_43f6a2, %struct.Memory** %MEMORY
  %loadMem_43f6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11117 = getelementptr inbounds %struct.GPR, %struct.GPR* %11116, i32 0, i32 33
  %11118 = getelementptr inbounds %struct.Reg, %struct.Reg* %11117, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %11118 to i64*
  %11119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11120 = getelementptr inbounds %struct.GPR, %struct.GPR* %11119, i32 0, i32 3
  %11121 = getelementptr inbounds %struct.Reg, %struct.Reg* %11120, i32 0, i32 0
  %EBX.i889 = bitcast %union.anon* %11121 to i32*
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11123 = getelementptr inbounds %struct.GPR, %struct.GPR* %11122, i32 0, i32 7
  %11124 = getelementptr inbounds %struct.Reg, %struct.Reg* %11123, i32 0, i32 0
  %RDX.i890 = bitcast %union.anon* %11124 to i64*
  %11125 = load i32, i32* %EBX.i889
  %11126 = zext i32 %11125 to i64
  %11127 = load i64, i64* %PC.i888
  %11128 = add i64 %11127, 3
  store i64 %11128, i64* %PC.i888
  %11129 = shl i64 %11126, 32
  %11130 = ashr exact i64 %11129, 32
  store i64 %11130, i64* %RDX.i890, align 8
  store %struct.Memory* %loadMem_43f6a5, %struct.Memory** %MEMORY
  %loadMem_43f6a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11132 = getelementptr inbounds %struct.GPR, %struct.GPR* %11131, i32 0, i32 33
  %11133 = getelementptr inbounds %struct.Reg, %struct.Reg* %11132, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %11133 to i64*
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11135 = getelementptr inbounds %struct.GPR, %struct.GPR* %11134, i32 0, i32 7
  %11136 = getelementptr inbounds %struct.Reg, %struct.Reg* %11135, i32 0, i32 0
  %RDX.i887 = bitcast %union.anon* %11136 to i64*
  %11137 = load i64, i64* %RDX.i887
  %11138 = load i64, i64* %PC.i886
  %11139 = add i64 %11138, 4
  store i64 %11139, i64* %PC.i886
  %11140 = shl i64 %11137, 5
  %11141 = icmp slt i64 %11140, 0
  %11142 = shl i64 %11140, 1
  store i64 %11142, i64* %RDX.i887, align 8
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11144 = zext i1 %11141 to i8
  store i8 %11144, i8* %11143, align 1
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11146 = trunc i64 %11142 to i32
  %11147 = and i32 %11146, 254
  %11148 = call i32 @llvm.ctpop.i32(i32 %11147)
  %11149 = trunc i32 %11148 to i8
  %11150 = and i8 %11149, 1
  %11151 = xor i8 %11150, 1
  store i8 %11151, i8* %11145, align 1
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11152, align 1
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11154 = icmp eq i64 %11142, 0
  %11155 = zext i1 %11154 to i8
  store i8 %11155, i8* %11153, align 1
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11157 = lshr i64 %11142, 63
  %11158 = trunc i64 %11157 to i8
  store i8 %11158, i8* %11156, align 1
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11159, align 1
  store %struct.Memory* %loadMem_43f6a8, %struct.Memory** %MEMORY
  %loadMem_43f6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11161 = getelementptr inbounds %struct.GPR, %struct.GPR* %11160, i32 0, i32 33
  %11162 = getelementptr inbounds %struct.Reg, %struct.Reg* %11161, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %11162 to i64*
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11164 = getelementptr inbounds %struct.GPR, %struct.GPR* %11163, i32 0, i32 5
  %11165 = getelementptr inbounds %struct.Reg, %struct.Reg* %11164, i32 0, i32 0
  %RCX.i884 = bitcast %union.anon* %11165 to i64*
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11167 = getelementptr inbounds %struct.GPR, %struct.GPR* %11166, i32 0, i32 9
  %11168 = getelementptr inbounds %struct.Reg, %struct.Reg* %11167, i32 0, i32 0
  %RSI.i885 = bitcast %union.anon* %11168 to i64*
  %11169 = load i64, i64* %RCX.i884
  %11170 = load i64, i64* %PC.i883
  %11171 = add i64 %11170, 3
  store i64 %11171, i64* %PC.i883
  store i64 %11169, i64* %RSI.i885, align 8
  store %struct.Memory* %loadMem_43f6ac, %struct.Memory** %MEMORY
  %loadMem_43f6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11173 = getelementptr inbounds %struct.GPR, %struct.GPR* %11172, i32 0, i32 33
  %11174 = getelementptr inbounds %struct.Reg, %struct.Reg* %11173, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %11174 to i64*
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11176 = getelementptr inbounds %struct.GPR, %struct.GPR* %11175, i32 0, i32 7
  %11177 = getelementptr inbounds %struct.Reg, %struct.Reg* %11176, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %11177 to i64*
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11179 = getelementptr inbounds %struct.GPR, %struct.GPR* %11178, i32 0, i32 9
  %11180 = getelementptr inbounds %struct.Reg, %struct.Reg* %11179, i32 0, i32 0
  %RSI.i882 = bitcast %union.anon* %11180 to i64*
  %11181 = load i64, i64* %RSI.i882
  %11182 = load i64, i64* %RDX.i881
  %11183 = load i64, i64* %PC.i880
  %11184 = add i64 %11183, 3
  store i64 %11184, i64* %PC.i880
  %11185 = add i64 %11182, %11181
  store i64 %11185, i64* %RSI.i882, align 8
  %11186 = icmp ult i64 %11185, %11181
  %11187 = icmp ult i64 %11185, %11182
  %11188 = or i1 %11186, %11187
  %11189 = zext i1 %11188 to i8
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11189, i8* %11190, align 1
  %11191 = trunc i64 %11185 to i32
  %11192 = and i32 %11191, 255
  %11193 = call i32 @llvm.ctpop.i32(i32 %11192)
  %11194 = trunc i32 %11193 to i8
  %11195 = and i8 %11194, 1
  %11196 = xor i8 %11195, 1
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11196, i8* %11197, align 1
  %11198 = xor i64 %11182, %11181
  %11199 = xor i64 %11198, %11185
  %11200 = lshr i64 %11199, 4
  %11201 = trunc i64 %11200 to i8
  %11202 = and i8 %11201, 1
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11202, i8* %11203, align 1
  %11204 = icmp eq i64 %11185, 0
  %11205 = zext i1 %11204 to i8
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11205, i8* %11206, align 1
  %11207 = lshr i64 %11185, 63
  %11208 = trunc i64 %11207 to i8
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11208, i8* %11209, align 1
  %11210 = lshr i64 %11181, 63
  %11211 = lshr i64 %11182, 63
  %11212 = xor i64 %11207, %11210
  %11213 = xor i64 %11207, %11211
  %11214 = add i64 %11212, %11213
  %11215 = icmp eq i64 %11214, 2
  %11216 = zext i1 %11215 to i8
  %11217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11216, i8* %11217, align 1
  store %struct.Memory* %loadMem_43f6af, %struct.Memory** %MEMORY
  %loadMem_43f6b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11219 = getelementptr inbounds %struct.GPR, %struct.GPR* %11218, i32 0, i32 33
  %11220 = getelementptr inbounds %struct.Reg, %struct.Reg* %11219, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %11220 to i64*
  %11221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11222 = getelementptr inbounds %struct.GPR, %struct.GPR* %11221, i32 0, i32 3
  %11223 = getelementptr inbounds %struct.Reg, %struct.Reg* %11222, i32 0, i32 0
  %RBX.i878 = bitcast %union.anon* %11223 to i64*
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11225 = getelementptr inbounds %struct.GPR, %struct.GPR* %11224, i32 0, i32 15
  %11226 = getelementptr inbounds %struct.Reg, %struct.Reg* %11225, i32 0, i32 0
  %RBP.i879 = bitcast %union.anon* %11226 to i64*
  %11227 = load i64, i64* %RBP.i879
  %11228 = sub i64 %11227, 76
  %11229 = load i64, i64* %PC.i877
  %11230 = add i64 %11229, 3
  store i64 %11230, i64* %PC.i877
  %11231 = inttoptr i64 %11228 to i32*
  %11232 = load i32, i32* %11231
  %11233 = zext i32 %11232 to i64
  store i64 %11233, i64* %RBX.i878, align 8
  store %struct.Memory* %loadMem_43f6b2, %struct.Memory** %MEMORY
  %loadMem_43f6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11235 = getelementptr inbounds %struct.GPR, %struct.GPR* %11234, i32 0, i32 33
  %11236 = getelementptr inbounds %struct.Reg, %struct.Reg* %11235, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %11236 to i64*
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11238 = getelementptr inbounds %struct.GPR, %struct.GPR* %11237, i32 0, i32 3
  %11239 = getelementptr inbounds %struct.Reg, %struct.Reg* %11238, i32 0, i32 0
  %RBX.i875 = bitcast %union.anon* %11239 to i64*
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11241 = getelementptr inbounds %struct.GPR, %struct.GPR* %11240, i32 0, i32 15
  %11242 = getelementptr inbounds %struct.Reg, %struct.Reg* %11241, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %11242 to i64*
  %11243 = load i64, i64* %RBX.i875
  %11244 = load i64, i64* %RBP.i876
  %11245 = sub i64 %11244, 56
  %11246 = load i64, i64* %PC.i874
  %11247 = add i64 %11246, 3
  store i64 %11247, i64* %PC.i874
  %11248 = trunc i64 %11243 to i32
  %11249 = inttoptr i64 %11245 to i32*
  %11250 = load i32, i32* %11249
  %11251 = add i32 %11250, %11248
  %11252 = zext i32 %11251 to i64
  store i64 %11252, i64* %RBX.i875, align 8
  %11253 = icmp ult i32 %11251, %11248
  %11254 = icmp ult i32 %11251, %11250
  %11255 = or i1 %11253, %11254
  %11256 = zext i1 %11255 to i8
  %11257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11256, i8* %11257, align 1
  %11258 = and i32 %11251, 255
  %11259 = call i32 @llvm.ctpop.i32(i32 %11258)
  %11260 = trunc i32 %11259 to i8
  %11261 = and i8 %11260, 1
  %11262 = xor i8 %11261, 1
  %11263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11262, i8* %11263, align 1
  %11264 = xor i32 %11250, %11248
  %11265 = xor i32 %11264, %11251
  %11266 = lshr i32 %11265, 4
  %11267 = trunc i32 %11266 to i8
  %11268 = and i8 %11267, 1
  %11269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11268, i8* %11269, align 1
  %11270 = icmp eq i32 %11251, 0
  %11271 = zext i1 %11270 to i8
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11271, i8* %11272, align 1
  %11273 = lshr i32 %11251, 31
  %11274 = trunc i32 %11273 to i8
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11274, i8* %11275, align 1
  %11276 = lshr i32 %11248, 31
  %11277 = lshr i32 %11250, 31
  %11278 = xor i32 %11273, %11276
  %11279 = xor i32 %11273, %11277
  %11280 = add i32 %11278, %11279
  %11281 = icmp eq i32 %11280, 2
  %11282 = zext i1 %11281 to i8
  %11283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11282, i8* %11283, align 1
  store %struct.Memory* %loadMem_43f6b5, %struct.Memory** %MEMORY
  %loadMem_43f6b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11285 = getelementptr inbounds %struct.GPR, %struct.GPR* %11284, i32 0, i32 33
  %11286 = getelementptr inbounds %struct.Reg, %struct.Reg* %11285, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %11286 to i64*
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11288 = getelementptr inbounds %struct.GPR, %struct.GPR* %11287, i32 0, i32 3
  %11289 = getelementptr inbounds %struct.Reg, %struct.Reg* %11288, i32 0, i32 0
  %EBX.i872 = bitcast %union.anon* %11289 to i32*
  %11290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11291 = getelementptr inbounds %struct.GPR, %struct.GPR* %11290, i32 0, i32 7
  %11292 = getelementptr inbounds %struct.Reg, %struct.Reg* %11291, i32 0, i32 0
  %RDX.i873 = bitcast %union.anon* %11292 to i64*
  %11293 = load i32, i32* %EBX.i872
  %11294 = zext i32 %11293 to i64
  %11295 = load i64, i64* %PC.i871
  %11296 = add i64 %11295, 3
  store i64 %11296, i64* %PC.i871
  %11297 = shl i64 %11294, 32
  %11298 = ashr exact i64 %11297, 32
  store i64 %11298, i64* %RDX.i873, align 8
  store %struct.Memory* %loadMem_43f6b8, %struct.Memory** %MEMORY
  %loadMem_43f6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11300 = getelementptr inbounds %struct.GPR, %struct.GPR* %11299, i32 0, i32 33
  %11301 = getelementptr inbounds %struct.Reg, %struct.Reg* %11300, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %11301 to i64*
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11303 = getelementptr inbounds %struct.GPR, %struct.GPR* %11302, i32 0, i32 21
  %11304 = getelementptr inbounds %struct.Reg, %struct.Reg* %11303, i32 0, i32 0
  %R10D.i868 = bitcast %union.anon* %11304 to i32*
  %11305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11306 = getelementptr inbounds %struct.GPR, %struct.GPR* %11305, i32 0, i32 7
  %11307 = getelementptr inbounds %struct.Reg, %struct.Reg* %11306, i32 0, i32 0
  %RDX.i869 = bitcast %union.anon* %11307 to i64*
  %11308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11309 = getelementptr inbounds %struct.GPR, %struct.GPR* %11308, i32 0, i32 9
  %11310 = getelementptr inbounds %struct.Reg, %struct.Reg* %11309, i32 0, i32 0
  %RSI.i870 = bitcast %union.anon* %11310 to i64*
  %11311 = load i64, i64* %RSI.i870
  %11312 = load i64, i64* %RDX.i869
  %11313 = mul i64 %11312, 4
  %11314 = add i64 %11313, %11311
  %11315 = load i32, i32* %R10D.i868
  %11316 = zext i32 %11315 to i64
  %11317 = load i64, i64* %PC.i867
  %11318 = add i64 %11317, 4
  store i64 %11318, i64* %PC.i867
  %11319 = inttoptr i64 %11314 to i32*
  store i32 %11315, i32* %11319
  store %struct.Memory* %loadMem_43f6bb, %struct.Memory** %MEMORY
  %loadMem_43f6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11321 = getelementptr inbounds %struct.GPR, %struct.GPR* %11320, i32 0, i32 33
  %11322 = getelementptr inbounds %struct.Reg, %struct.Reg* %11321, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %11322 to i64*
  %11323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11324 = getelementptr inbounds %struct.GPR, %struct.GPR* %11323, i32 0, i32 21
  %11325 = getelementptr inbounds %struct.Reg, %struct.Reg* %11324, i32 0, i32 0
  %R10D.i865 = bitcast %union.anon* %11325 to i32*
  %11326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11327 = getelementptr inbounds %struct.GPR, %struct.GPR* %11326, i32 0, i32 15
  %11328 = getelementptr inbounds %struct.Reg, %struct.Reg* %11327, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %11328 to i64*
  %11329 = bitcast i32* %R10D.i865 to i64*
  %11330 = load i64, i64* %RBP.i866
  %11331 = sub i64 %11330, 148
  %11332 = load i64, i64* %PC.i864
  %11333 = add i64 %11332, 7
  store i64 %11333, i64* %PC.i864
  %11334 = inttoptr i64 %11331 to i32*
  %11335 = load i32, i32* %11334
  %11336 = zext i32 %11335 to i64
  store i64 %11336, i64* %11329, align 8
  store %struct.Memory* %loadMem_43f6bf, %struct.Memory** %MEMORY
  %loadMem_43f6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11338 = getelementptr inbounds %struct.GPR, %struct.GPR* %11337, i32 0, i32 33
  %11339 = getelementptr inbounds %struct.Reg, %struct.Reg* %11338, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %11339 to i64*
  %11340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11341 = getelementptr inbounds %struct.GPR, %struct.GPR* %11340, i32 0, i32 3
  %11342 = getelementptr inbounds %struct.Reg, %struct.Reg* %11341, i32 0, i32 0
  %RBX.i862 = bitcast %union.anon* %11342 to i64*
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11344 = getelementptr inbounds %struct.GPR, %struct.GPR* %11343, i32 0, i32 15
  %11345 = getelementptr inbounds %struct.Reg, %struct.Reg* %11344, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %11345 to i64*
  %11346 = load i64, i64* %RBP.i863
  %11347 = sub i64 %11346, 72
  %11348 = load i64, i64* %PC.i861
  %11349 = add i64 %11348, 3
  store i64 %11349, i64* %PC.i861
  %11350 = inttoptr i64 %11347 to i32*
  %11351 = load i32, i32* %11350
  %11352 = zext i32 %11351 to i64
  store i64 %11352, i64* %RBX.i862, align 8
  store %struct.Memory* %loadMem_43f6c6, %struct.Memory** %MEMORY
  %loadMem_43f6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11354 = getelementptr inbounds %struct.GPR, %struct.GPR* %11353, i32 0, i32 33
  %11355 = getelementptr inbounds %struct.Reg, %struct.Reg* %11354, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %11355 to i64*
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11357 = getelementptr inbounds %struct.GPR, %struct.GPR* %11356, i32 0, i32 3
  %11358 = getelementptr inbounds %struct.Reg, %struct.Reg* %11357, i32 0, i32 0
  %RBX.i859 = bitcast %union.anon* %11358 to i64*
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11360 = getelementptr inbounds %struct.GPR, %struct.GPR* %11359, i32 0, i32 15
  %11361 = getelementptr inbounds %struct.Reg, %struct.Reg* %11360, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %11361 to i64*
  %11362 = load i64, i64* %RBX.i859
  %11363 = load i64, i64* %RBP.i860
  %11364 = sub i64 %11363, 60
  %11365 = load i64, i64* %PC.i858
  %11366 = add i64 %11365, 3
  store i64 %11366, i64* %PC.i858
  %11367 = trunc i64 %11362 to i32
  %11368 = inttoptr i64 %11364 to i32*
  %11369 = load i32, i32* %11368
  %11370 = add i32 %11369, %11367
  %11371 = zext i32 %11370 to i64
  store i64 %11371, i64* %RBX.i859, align 8
  %11372 = icmp ult i32 %11370, %11367
  %11373 = icmp ult i32 %11370, %11369
  %11374 = or i1 %11372, %11373
  %11375 = zext i1 %11374 to i8
  %11376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11375, i8* %11376, align 1
  %11377 = and i32 %11370, 255
  %11378 = call i32 @llvm.ctpop.i32(i32 %11377)
  %11379 = trunc i32 %11378 to i8
  %11380 = and i8 %11379, 1
  %11381 = xor i8 %11380, 1
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11381, i8* %11382, align 1
  %11383 = xor i32 %11369, %11367
  %11384 = xor i32 %11383, %11370
  %11385 = lshr i32 %11384, 4
  %11386 = trunc i32 %11385 to i8
  %11387 = and i8 %11386, 1
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11387, i8* %11388, align 1
  %11389 = icmp eq i32 %11370, 0
  %11390 = zext i1 %11389 to i8
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11390, i8* %11391, align 1
  %11392 = lshr i32 %11370, 31
  %11393 = trunc i32 %11392 to i8
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11393, i8* %11394, align 1
  %11395 = lshr i32 %11367, 31
  %11396 = lshr i32 %11369, 31
  %11397 = xor i32 %11392, %11395
  %11398 = xor i32 %11392, %11396
  %11399 = add i32 %11397, %11398
  %11400 = icmp eq i32 %11399, 2
  %11401 = zext i1 %11400 to i8
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11401, i8* %11402, align 1
  store %struct.Memory* %loadMem_43f6c9, %struct.Memory** %MEMORY
  %loadMem_43f6cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11404 = getelementptr inbounds %struct.GPR, %struct.GPR* %11403, i32 0, i32 33
  %11405 = getelementptr inbounds %struct.Reg, %struct.Reg* %11404, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %11405 to i64*
  %11406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11407 = getelementptr inbounds %struct.GPR, %struct.GPR* %11406, i32 0, i32 3
  %11408 = getelementptr inbounds %struct.Reg, %struct.Reg* %11407, i32 0, i32 0
  %EBX.i856 = bitcast %union.anon* %11408 to i32*
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11410 = getelementptr inbounds %struct.GPR, %struct.GPR* %11409, i32 0, i32 7
  %11411 = getelementptr inbounds %struct.Reg, %struct.Reg* %11410, i32 0, i32 0
  %RDX.i857 = bitcast %union.anon* %11411 to i64*
  %11412 = load i32, i32* %EBX.i856
  %11413 = zext i32 %11412 to i64
  %11414 = load i64, i64* %PC.i855
  %11415 = add i64 %11414, 3
  store i64 %11415, i64* %PC.i855
  %11416 = shl i64 %11413, 32
  %11417 = ashr exact i64 %11416, 32
  store i64 %11417, i64* %RDX.i857, align 8
  store %struct.Memory* %loadMem_43f6cc, %struct.Memory** %MEMORY
  %loadMem_43f6cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11419 = getelementptr inbounds %struct.GPR, %struct.GPR* %11418, i32 0, i32 33
  %11420 = getelementptr inbounds %struct.Reg, %struct.Reg* %11419, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %11420 to i64*
  %11421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11422 = getelementptr inbounds %struct.GPR, %struct.GPR* %11421, i32 0, i32 7
  %11423 = getelementptr inbounds %struct.Reg, %struct.Reg* %11422, i32 0, i32 0
  %RDX.i854 = bitcast %union.anon* %11423 to i64*
  %11424 = load i64, i64* %RDX.i854
  %11425 = load i64, i64* %PC.i853
  %11426 = add i64 %11425, 4
  store i64 %11426, i64* %PC.i853
  %11427 = shl i64 %11424, 5
  %11428 = icmp slt i64 %11427, 0
  %11429 = shl i64 %11427, 1
  store i64 %11429, i64* %RDX.i854, align 8
  %11430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11431 = zext i1 %11428 to i8
  store i8 %11431, i8* %11430, align 1
  %11432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11433 = trunc i64 %11429 to i32
  %11434 = and i32 %11433, 254
  %11435 = call i32 @llvm.ctpop.i32(i32 %11434)
  %11436 = trunc i32 %11435 to i8
  %11437 = and i8 %11436, 1
  %11438 = xor i8 %11437, 1
  store i8 %11438, i8* %11432, align 1
  %11439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11439, align 1
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11441 = icmp eq i64 %11429, 0
  %11442 = zext i1 %11441 to i8
  store i8 %11442, i8* %11440, align 1
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11444 = lshr i64 %11429, 63
  %11445 = trunc i64 %11444 to i8
  store i8 %11445, i8* %11443, align 1
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11446, align 1
  store %struct.Memory* %loadMem_43f6cf, %struct.Memory** %MEMORY
  %loadMem_43f6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11448 = getelementptr inbounds %struct.GPR, %struct.GPR* %11447, i32 0, i32 33
  %11449 = getelementptr inbounds %struct.Reg, %struct.Reg* %11448, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %11449 to i64*
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11451 = getelementptr inbounds %struct.GPR, %struct.GPR* %11450, i32 0, i32 5
  %11452 = getelementptr inbounds %struct.Reg, %struct.Reg* %11451, i32 0, i32 0
  %RCX.i851 = bitcast %union.anon* %11452 to i64*
  %11453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11454 = getelementptr inbounds %struct.GPR, %struct.GPR* %11453, i32 0, i32 7
  %11455 = getelementptr inbounds %struct.Reg, %struct.Reg* %11454, i32 0, i32 0
  %RDX.i852 = bitcast %union.anon* %11455 to i64*
  %11456 = load i64, i64* %RCX.i851
  %11457 = load i64, i64* %RDX.i852
  %11458 = load i64, i64* %PC.i850
  %11459 = add i64 %11458, 3
  store i64 %11459, i64* %PC.i850
  %11460 = add i64 %11457, %11456
  store i64 %11460, i64* %RCX.i851, align 8
  %11461 = icmp ult i64 %11460, %11456
  %11462 = icmp ult i64 %11460, %11457
  %11463 = or i1 %11461, %11462
  %11464 = zext i1 %11463 to i8
  %11465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11464, i8* %11465, align 1
  %11466 = trunc i64 %11460 to i32
  %11467 = and i32 %11466, 255
  %11468 = call i32 @llvm.ctpop.i32(i32 %11467)
  %11469 = trunc i32 %11468 to i8
  %11470 = and i8 %11469, 1
  %11471 = xor i8 %11470, 1
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11471, i8* %11472, align 1
  %11473 = xor i64 %11457, %11456
  %11474 = xor i64 %11473, %11460
  %11475 = lshr i64 %11474, 4
  %11476 = trunc i64 %11475 to i8
  %11477 = and i8 %11476, 1
  %11478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11477, i8* %11478, align 1
  %11479 = icmp eq i64 %11460, 0
  %11480 = zext i1 %11479 to i8
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11480, i8* %11481, align 1
  %11482 = lshr i64 %11460, 63
  %11483 = trunc i64 %11482 to i8
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11483, i8* %11484, align 1
  %11485 = lshr i64 %11456, 63
  %11486 = lshr i64 %11457, 63
  %11487 = xor i64 %11482, %11485
  %11488 = xor i64 %11482, %11486
  %11489 = add i64 %11487, %11488
  %11490 = icmp eq i64 %11489, 2
  %11491 = zext i1 %11490 to i8
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11491, i8* %11492, align 1
  store %struct.Memory* %loadMem_43f6d3, %struct.Memory** %MEMORY
  %loadMem_43f6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11494 = getelementptr inbounds %struct.GPR, %struct.GPR* %11493, i32 0, i32 33
  %11495 = getelementptr inbounds %struct.Reg, %struct.Reg* %11494, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %11495 to i64*
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11497 = getelementptr inbounds %struct.GPR, %struct.GPR* %11496, i32 0, i32 3
  %11498 = getelementptr inbounds %struct.Reg, %struct.Reg* %11497, i32 0, i32 0
  %RBX.i848 = bitcast %union.anon* %11498 to i64*
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11500 = getelementptr inbounds %struct.GPR, %struct.GPR* %11499, i32 0, i32 15
  %11501 = getelementptr inbounds %struct.Reg, %struct.Reg* %11500, i32 0, i32 0
  %RBP.i849 = bitcast %union.anon* %11501 to i64*
  %11502 = load i64, i64* %RBP.i849
  %11503 = sub i64 %11502, 76
  %11504 = load i64, i64* %PC.i847
  %11505 = add i64 %11504, 3
  store i64 %11505, i64* %PC.i847
  %11506 = inttoptr i64 %11503 to i32*
  %11507 = load i32, i32* %11506
  %11508 = zext i32 %11507 to i64
  store i64 %11508, i64* %RBX.i848, align 8
  store %struct.Memory* %loadMem_43f6d6, %struct.Memory** %MEMORY
  %loadMem_43f6d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11510 = getelementptr inbounds %struct.GPR, %struct.GPR* %11509, i32 0, i32 33
  %11511 = getelementptr inbounds %struct.Reg, %struct.Reg* %11510, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %11511 to i64*
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11513 = getelementptr inbounds %struct.GPR, %struct.GPR* %11512, i32 0, i32 3
  %11514 = getelementptr inbounds %struct.Reg, %struct.Reg* %11513, i32 0, i32 0
  %RBX.i845 = bitcast %union.anon* %11514 to i64*
  %11515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11516 = getelementptr inbounds %struct.GPR, %struct.GPR* %11515, i32 0, i32 15
  %11517 = getelementptr inbounds %struct.Reg, %struct.Reg* %11516, i32 0, i32 0
  %RBP.i846 = bitcast %union.anon* %11517 to i64*
  %11518 = load i64, i64* %RBX.i845
  %11519 = load i64, i64* %RBP.i846
  %11520 = sub i64 %11519, 56
  %11521 = load i64, i64* %PC.i844
  %11522 = add i64 %11521, 3
  store i64 %11522, i64* %PC.i844
  %11523 = trunc i64 %11518 to i32
  %11524 = inttoptr i64 %11520 to i32*
  %11525 = load i32, i32* %11524
  %11526 = add i32 %11525, %11523
  %11527 = zext i32 %11526 to i64
  store i64 %11527, i64* %RBX.i845, align 8
  %11528 = icmp ult i32 %11526, %11523
  %11529 = icmp ult i32 %11526, %11525
  %11530 = or i1 %11528, %11529
  %11531 = zext i1 %11530 to i8
  %11532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11531, i8* %11532, align 1
  %11533 = and i32 %11526, 255
  %11534 = call i32 @llvm.ctpop.i32(i32 %11533)
  %11535 = trunc i32 %11534 to i8
  %11536 = and i8 %11535, 1
  %11537 = xor i8 %11536, 1
  %11538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11537, i8* %11538, align 1
  %11539 = xor i32 %11525, %11523
  %11540 = xor i32 %11539, %11526
  %11541 = lshr i32 %11540, 4
  %11542 = trunc i32 %11541 to i8
  %11543 = and i8 %11542, 1
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11543, i8* %11544, align 1
  %11545 = icmp eq i32 %11526, 0
  %11546 = zext i1 %11545 to i8
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11546, i8* %11547, align 1
  %11548 = lshr i32 %11526, 31
  %11549 = trunc i32 %11548 to i8
  %11550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11549, i8* %11550, align 1
  %11551 = lshr i32 %11523, 31
  %11552 = lshr i32 %11525, 31
  %11553 = xor i32 %11548, %11551
  %11554 = xor i32 %11548, %11552
  %11555 = add i32 %11553, %11554
  %11556 = icmp eq i32 %11555, 2
  %11557 = zext i1 %11556 to i8
  %11558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11557, i8* %11558, align 1
  store %struct.Memory* %loadMem_43f6d9, %struct.Memory** %MEMORY
  %loadMem_43f6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11560 = getelementptr inbounds %struct.GPR, %struct.GPR* %11559, i32 0, i32 33
  %11561 = getelementptr inbounds %struct.Reg, %struct.Reg* %11560, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %11561 to i64*
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11563 = getelementptr inbounds %struct.GPR, %struct.GPR* %11562, i32 0, i32 3
  %11564 = getelementptr inbounds %struct.Reg, %struct.Reg* %11563, i32 0, i32 0
  %EBX.i842 = bitcast %union.anon* %11564 to i32*
  %11565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11566 = getelementptr inbounds %struct.GPR, %struct.GPR* %11565, i32 0, i32 7
  %11567 = getelementptr inbounds %struct.Reg, %struct.Reg* %11566, i32 0, i32 0
  %RDX.i843 = bitcast %union.anon* %11567 to i64*
  %11568 = load i32, i32* %EBX.i842
  %11569 = zext i32 %11568 to i64
  %11570 = load i64, i64* %PC.i841
  %11571 = add i64 %11570, 3
  store i64 %11571, i64* %PC.i841
  %11572 = shl i64 %11569, 32
  %11573 = ashr exact i64 %11572, 32
  store i64 %11573, i64* %RDX.i843, align 8
  store %struct.Memory* %loadMem_43f6dc, %struct.Memory** %MEMORY
  %loadMem_43f6df = load %struct.Memory*, %struct.Memory** %MEMORY
  %11574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11575 = getelementptr inbounds %struct.GPR, %struct.GPR* %11574, i32 0, i32 33
  %11576 = getelementptr inbounds %struct.Reg, %struct.Reg* %11575, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %11576 to i64*
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11578 = getelementptr inbounds %struct.GPR, %struct.GPR* %11577, i32 0, i32 3
  %11579 = getelementptr inbounds %struct.Reg, %struct.Reg* %11578, i32 0, i32 0
  %RBX.i838 = bitcast %union.anon* %11579 to i64*
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11581 = getelementptr inbounds %struct.GPR, %struct.GPR* %11580, i32 0, i32 5
  %11582 = getelementptr inbounds %struct.Reg, %struct.Reg* %11581, i32 0, i32 0
  %RCX.i839 = bitcast %union.anon* %11582 to i64*
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11584 = getelementptr inbounds %struct.GPR, %struct.GPR* %11583, i32 0, i32 7
  %11585 = getelementptr inbounds %struct.Reg, %struct.Reg* %11584, i32 0, i32 0
  %RDX.i840 = bitcast %union.anon* %11585 to i64*
  %11586 = load i64, i64* %RCX.i839
  %11587 = load i64, i64* %RDX.i840
  %11588 = mul i64 %11587, 4
  %11589 = add i64 %11588, %11586
  %11590 = load i64, i64* %PC.i837
  %11591 = add i64 %11590, 3
  store i64 %11591, i64* %PC.i837
  %11592 = inttoptr i64 %11589 to i32*
  %11593 = load i32, i32* %11592
  %11594 = zext i32 %11593 to i64
  store i64 %11594, i64* %RBX.i838, align 8
  store %struct.Memory* %loadMem_43f6df, %struct.Memory** %MEMORY
  %loadMem_43f6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11596 = getelementptr inbounds %struct.GPR, %struct.GPR* %11595, i32 0, i32 33
  %11597 = getelementptr inbounds %struct.Reg, %struct.Reg* %11596, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %11597 to i64*
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11599 = getelementptr inbounds %struct.GPR, %struct.GPR* %11598, i32 0, i32 3
  %11600 = getelementptr inbounds %struct.Reg, %struct.Reg* %11599, i32 0, i32 0
  %RBX.i836 = bitcast %union.anon* %11600 to i64*
  %11601 = load i64, i64* %RBX.i836
  %11602 = load i64, i64* %PC.i835
  %11603 = add i64 %11602, 2
  store i64 %11603, i64* %PC.i835
  %11604 = shl i64 %11601, 32
  %11605 = ashr i64 %11604, 33
  %11606 = trunc i64 %11601 to i8
  %11607 = and i8 %11606, 1
  %11608 = trunc i64 %11605 to i32
  %11609 = and i64 %11605, 4294967295
  store i64 %11609, i64* %RBX.i836, align 8
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11607, i8* %11610, align 1
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11612 = and i32 %11608, 255
  %11613 = call i32 @llvm.ctpop.i32(i32 %11612)
  %11614 = trunc i32 %11613 to i8
  %11615 = and i8 %11614, 1
  %11616 = xor i8 %11615, 1
  store i8 %11616, i8* %11611, align 1
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11617, align 1
  %11618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11619 = icmp eq i32 %11608, 0
  %11620 = zext i1 %11619 to i8
  store i8 %11620, i8* %11618, align 1
  %11621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11622 = lshr i32 %11608, 31
  %11623 = trunc i32 %11622 to i8
  store i8 %11623, i8* %11621, align 1
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11624, align 1
  store %struct.Memory* %loadMem_43f6e2, %struct.Memory** %MEMORY
  %loadMem_43f6e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11626 = getelementptr inbounds %struct.GPR, %struct.GPR* %11625, i32 0, i32 33
  %11627 = getelementptr inbounds %struct.Reg, %struct.Reg* %11626, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %11627 to i64*
  %11628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11629 = getelementptr inbounds %struct.GPR, %struct.GPR* %11628, i32 0, i32 3
  %11630 = getelementptr inbounds %struct.Reg, %struct.Reg* %11629, i32 0, i32 0
  %EBX.i833 = bitcast %union.anon* %11630 to i32*
  %11631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11632 = getelementptr inbounds %struct.GPR, %struct.GPR* %11631, i32 0, i32 21
  %11633 = getelementptr inbounds %struct.Reg, %struct.Reg* %11632, i32 0, i32 0
  %R10D.i834 = bitcast %union.anon* %11633 to i32*
  %11634 = bitcast i32* %R10D.i834 to i64*
  %11635 = load i32, i32* %R10D.i834
  %11636 = zext i32 %11635 to i64
  %11637 = load i32, i32* %EBX.i833
  %11638 = zext i32 %11637 to i64
  %11639 = load i64, i64* %PC.i832
  %11640 = add i64 %11639, 3
  store i64 %11640, i64* %PC.i832
  %11641 = add i32 %11637, %11635
  %11642 = zext i32 %11641 to i64
  store i64 %11642, i64* %11634, align 8
  %11643 = icmp ult i32 %11641, %11635
  %11644 = icmp ult i32 %11641, %11637
  %11645 = or i1 %11643, %11644
  %11646 = zext i1 %11645 to i8
  %11647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11646, i8* %11647, align 1
  %11648 = and i32 %11641, 255
  %11649 = call i32 @llvm.ctpop.i32(i32 %11648)
  %11650 = trunc i32 %11649 to i8
  %11651 = and i8 %11650, 1
  %11652 = xor i8 %11651, 1
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11652, i8* %11653, align 1
  %11654 = xor i64 %11638, %11636
  %11655 = trunc i64 %11654 to i32
  %11656 = xor i32 %11655, %11641
  %11657 = lshr i32 %11656, 4
  %11658 = trunc i32 %11657 to i8
  %11659 = and i8 %11658, 1
  %11660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11659, i8* %11660, align 1
  %11661 = icmp eq i32 %11641, 0
  %11662 = zext i1 %11661 to i8
  %11663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11662, i8* %11663, align 1
  %11664 = lshr i32 %11641, 31
  %11665 = trunc i32 %11664 to i8
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11665, i8* %11666, align 1
  %11667 = lshr i32 %11635, 31
  %11668 = lshr i32 %11637, 31
  %11669 = xor i32 %11664, %11667
  %11670 = xor i32 %11664, %11668
  %11671 = add i32 %11669, %11670
  %11672 = icmp eq i32 %11671, 2
  %11673 = zext i1 %11672 to i8
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11673, i8* %11674, align 1
  store %struct.Memory* %loadMem_43f6e5, %struct.Memory** %MEMORY
  %loadMem_43f6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11676 = getelementptr inbounds %struct.GPR, %struct.GPR* %11675, i32 0, i32 33
  %11677 = getelementptr inbounds %struct.Reg, %struct.Reg* %11676, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %11677 to i64*
  %11678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11679 = getelementptr inbounds %struct.GPR, %struct.GPR* %11678, i32 0, i32 3
  %11680 = getelementptr inbounds %struct.Reg, %struct.Reg* %11679, i32 0, i32 0
  %RBX.i830 = bitcast %union.anon* %11680 to i64*
  %11681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11682 = getelementptr inbounds %struct.GPR, %struct.GPR* %11681, i32 0, i32 15
  %11683 = getelementptr inbounds %struct.Reg, %struct.Reg* %11682, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %11683 to i64*
  %11684 = load i64, i64* %RBP.i831
  %11685 = sub i64 %11684, 72
  %11686 = load i64, i64* %PC.i829
  %11687 = add i64 %11686, 3
  store i64 %11687, i64* %PC.i829
  %11688 = inttoptr i64 %11685 to i32*
  %11689 = load i32, i32* %11688
  %11690 = zext i32 %11689 to i64
  store i64 %11690, i64* %RBX.i830, align 8
  store %struct.Memory* %loadMem_43f6e8, %struct.Memory** %MEMORY
  %loadMem_43f6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11692 = getelementptr inbounds %struct.GPR, %struct.GPR* %11691, i32 0, i32 33
  %11693 = getelementptr inbounds %struct.Reg, %struct.Reg* %11692, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %11693 to i64*
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11695 = getelementptr inbounds %struct.GPR, %struct.GPR* %11694, i32 0, i32 3
  %11696 = getelementptr inbounds %struct.Reg, %struct.Reg* %11695, i32 0, i32 0
  %RBX.i827 = bitcast %union.anon* %11696 to i64*
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11698 = getelementptr inbounds %struct.GPR, %struct.GPR* %11697, i32 0, i32 15
  %11699 = getelementptr inbounds %struct.Reg, %struct.Reg* %11698, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %11699 to i64*
  %11700 = load i64, i64* %RBX.i827
  %11701 = load i64, i64* %RBP.i828
  %11702 = sub i64 %11701, 60
  %11703 = load i64, i64* %PC.i826
  %11704 = add i64 %11703, 3
  store i64 %11704, i64* %PC.i826
  %11705 = trunc i64 %11700 to i32
  %11706 = inttoptr i64 %11702 to i32*
  %11707 = load i32, i32* %11706
  %11708 = add i32 %11707, %11705
  %11709 = zext i32 %11708 to i64
  store i64 %11709, i64* %RBX.i827, align 8
  %11710 = icmp ult i32 %11708, %11705
  %11711 = icmp ult i32 %11708, %11707
  %11712 = or i1 %11710, %11711
  %11713 = zext i1 %11712 to i8
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11713, i8* %11714, align 1
  %11715 = and i32 %11708, 255
  %11716 = call i32 @llvm.ctpop.i32(i32 %11715)
  %11717 = trunc i32 %11716 to i8
  %11718 = and i8 %11717, 1
  %11719 = xor i8 %11718, 1
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11719, i8* %11720, align 1
  %11721 = xor i32 %11707, %11705
  %11722 = xor i32 %11721, %11708
  %11723 = lshr i32 %11722, 4
  %11724 = trunc i32 %11723 to i8
  %11725 = and i8 %11724, 1
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11725, i8* %11726, align 1
  %11727 = icmp eq i32 %11708, 0
  %11728 = zext i1 %11727 to i8
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11728, i8* %11729, align 1
  %11730 = lshr i32 %11708, 31
  %11731 = trunc i32 %11730 to i8
  %11732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11731, i8* %11732, align 1
  %11733 = lshr i32 %11705, 31
  %11734 = lshr i32 %11707, 31
  %11735 = xor i32 %11730, %11733
  %11736 = xor i32 %11730, %11734
  %11737 = add i32 %11735, %11736
  %11738 = icmp eq i32 %11737, 2
  %11739 = zext i1 %11738 to i8
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11739, i8* %11740, align 1
  store %struct.Memory* %loadMem_43f6eb, %struct.Memory** %MEMORY
  %loadMem_43f6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11742 = getelementptr inbounds %struct.GPR, %struct.GPR* %11741, i32 0, i32 33
  %11743 = getelementptr inbounds %struct.Reg, %struct.Reg* %11742, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %11743 to i64*
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 3
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %EBX.i824 = bitcast %union.anon* %11746 to i32*
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11748 = getelementptr inbounds %struct.GPR, %struct.GPR* %11747, i32 0, i32 5
  %11749 = getelementptr inbounds %struct.Reg, %struct.Reg* %11748, i32 0, i32 0
  %RCX.i825 = bitcast %union.anon* %11749 to i64*
  %11750 = load i32, i32* %EBX.i824
  %11751 = zext i32 %11750 to i64
  %11752 = load i64, i64* %PC.i823
  %11753 = add i64 %11752, 3
  store i64 %11753, i64* %PC.i823
  %11754 = shl i64 %11751, 32
  %11755 = ashr exact i64 %11754, 32
  store i64 %11755, i64* %RCX.i825, align 8
  store %struct.Memory* %loadMem_43f6ee, %struct.Memory** %MEMORY
  %loadMem_43f6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11757 = getelementptr inbounds %struct.GPR, %struct.GPR* %11756, i32 0, i32 33
  %11758 = getelementptr inbounds %struct.Reg, %struct.Reg* %11757, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %11758 to i64*
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11760 = getelementptr inbounds %struct.GPR, %struct.GPR* %11759, i32 0, i32 5
  %11761 = getelementptr inbounds %struct.Reg, %struct.Reg* %11760, i32 0, i32 0
  %RCX.i822 = bitcast %union.anon* %11761 to i64*
  %11762 = load i64, i64* %RCX.i822
  %11763 = load i64, i64* %PC.i821
  %11764 = add i64 %11763, 4
  store i64 %11764, i64* %PC.i821
  %11765 = shl i64 %11762, 5
  %11766 = icmp slt i64 %11765, 0
  %11767 = shl i64 %11765, 1
  store i64 %11767, i64* %RCX.i822, align 8
  %11768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11769 = zext i1 %11766 to i8
  store i8 %11769, i8* %11768, align 1
  %11770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11771 = trunc i64 %11767 to i32
  %11772 = and i32 %11771, 254
  %11773 = call i32 @llvm.ctpop.i32(i32 %11772)
  %11774 = trunc i32 %11773 to i8
  %11775 = and i8 %11774, 1
  %11776 = xor i8 %11775, 1
  store i8 %11776, i8* %11770, align 1
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11777, align 1
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11779 = icmp eq i64 %11767, 0
  %11780 = zext i1 %11779 to i8
  store i8 %11780, i8* %11778, align 1
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11782 = lshr i64 %11767, 63
  %11783 = trunc i64 %11782 to i8
  store i8 %11783, i8* %11781, align 1
  %11784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11784, align 1
  store %struct.Memory* %loadMem_43f6f1, %struct.Memory** %MEMORY
  %loadMem_43f6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11786 = getelementptr inbounds %struct.GPR, %struct.GPR* %11785, i32 0, i32 33
  %11787 = getelementptr inbounds %struct.Reg, %struct.Reg* %11786, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %11787 to i64*
  %11788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11789 = getelementptr inbounds %struct.GPR, %struct.GPR* %11788, i32 0, i32 1
  %11790 = getelementptr inbounds %struct.Reg, %struct.Reg* %11789, i32 0, i32 0
  %RAX.i819 = bitcast %union.anon* %11790 to i64*
  %11791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11792 = getelementptr inbounds %struct.GPR, %struct.GPR* %11791, i32 0, i32 5
  %11793 = getelementptr inbounds %struct.Reg, %struct.Reg* %11792, i32 0, i32 0
  %RCX.i820 = bitcast %union.anon* %11793 to i64*
  %11794 = load i64, i64* %RAX.i819
  %11795 = load i64, i64* %RCX.i820
  %11796 = load i64, i64* %PC.i818
  %11797 = add i64 %11796, 3
  store i64 %11797, i64* %PC.i818
  %11798 = add i64 %11795, %11794
  store i64 %11798, i64* %RAX.i819, align 8
  %11799 = icmp ult i64 %11798, %11794
  %11800 = icmp ult i64 %11798, %11795
  %11801 = or i1 %11799, %11800
  %11802 = zext i1 %11801 to i8
  %11803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11802, i8* %11803, align 1
  %11804 = trunc i64 %11798 to i32
  %11805 = and i32 %11804, 255
  %11806 = call i32 @llvm.ctpop.i32(i32 %11805)
  %11807 = trunc i32 %11806 to i8
  %11808 = and i8 %11807, 1
  %11809 = xor i8 %11808, 1
  %11810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11809, i8* %11810, align 1
  %11811 = xor i64 %11795, %11794
  %11812 = xor i64 %11811, %11798
  %11813 = lshr i64 %11812, 4
  %11814 = trunc i64 %11813 to i8
  %11815 = and i8 %11814, 1
  %11816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11815, i8* %11816, align 1
  %11817 = icmp eq i64 %11798, 0
  %11818 = zext i1 %11817 to i8
  %11819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11818, i8* %11819, align 1
  %11820 = lshr i64 %11798, 63
  %11821 = trunc i64 %11820 to i8
  %11822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11821, i8* %11822, align 1
  %11823 = lshr i64 %11794, 63
  %11824 = lshr i64 %11795, 63
  %11825 = xor i64 %11820, %11823
  %11826 = xor i64 %11820, %11824
  %11827 = add i64 %11825, %11826
  %11828 = icmp eq i64 %11827, 2
  %11829 = zext i1 %11828 to i8
  %11830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11829, i8* %11830, align 1
  store %struct.Memory* %loadMem_43f6f5, %struct.Memory** %MEMORY
  %loadMem_43f6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11832 = getelementptr inbounds %struct.GPR, %struct.GPR* %11831, i32 0, i32 33
  %11833 = getelementptr inbounds %struct.Reg, %struct.Reg* %11832, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %11833 to i64*
  %11834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11835 = getelementptr inbounds %struct.GPR, %struct.GPR* %11834, i32 0, i32 3
  %11836 = getelementptr inbounds %struct.Reg, %struct.Reg* %11835, i32 0, i32 0
  %RBX.i816 = bitcast %union.anon* %11836 to i64*
  %11837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11838 = getelementptr inbounds %struct.GPR, %struct.GPR* %11837, i32 0, i32 15
  %11839 = getelementptr inbounds %struct.Reg, %struct.Reg* %11838, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %11839 to i64*
  %11840 = load i64, i64* %RBP.i817
  %11841 = sub i64 %11840, 76
  %11842 = load i64, i64* %PC.i815
  %11843 = add i64 %11842, 3
  store i64 %11843, i64* %PC.i815
  %11844 = inttoptr i64 %11841 to i32*
  %11845 = load i32, i32* %11844
  %11846 = zext i32 %11845 to i64
  store i64 %11846, i64* %RBX.i816, align 8
  store %struct.Memory* %loadMem_43f6f8, %struct.Memory** %MEMORY
  %loadMem_43f6fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11848 = getelementptr inbounds %struct.GPR, %struct.GPR* %11847, i32 0, i32 33
  %11849 = getelementptr inbounds %struct.Reg, %struct.Reg* %11848, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %11849 to i64*
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11851 = getelementptr inbounds %struct.GPR, %struct.GPR* %11850, i32 0, i32 3
  %11852 = getelementptr inbounds %struct.Reg, %struct.Reg* %11851, i32 0, i32 0
  %RBX.i813 = bitcast %union.anon* %11852 to i64*
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11854 = getelementptr inbounds %struct.GPR, %struct.GPR* %11853, i32 0, i32 15
  %11855 = getelementptr inbounds %struct.Reg, %struct.Reg* %11854, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %11855 to i64*
  %11856 = load i64, i64* %RBX.i813
  %11857 = load i64, i64* %RBP.i814
  %11858 = sub i64 %11857, 56
  %11859 = load i64, i64* %PC.i812
  %11860 = add i64 %11859, 3
  store i64 %11860, i64* %PC.i812
  %11861 = trunc i64 %11856 to i32
  %11862 = inttoptr i64 %11858 to i32*
  %11863 = load i32, i32* %11862
  %11864 = add i32 %11863, %11861
  %11865 = zext i32 %11864 to i64
  store i64 %11865, i64* %RBX.i813, align 8
  %11866 = icmp ult i32 %11864, %11861
  %11867 = icmp ult i32 %11864, %11863
  %11868 = or i1 %11866, %11867
  %11869 = zext i1 %11868 to i8
  %11870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11869, i8* %11870, align 1
  %11871 = and i32 %11864, 255
  %11872 = call i32 @llvm.ctpop.i32(i32 %11871)
  %11873 = trunc i32 %11872 to i8
  %11874 = and i8 %11873, 1
  %11875 = xor i8 %11874, 1
  %11876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11875, i8* %11876, align 1
  %11877 = xor i32 %11863, %11861
  %11878 = xor i32 %11877, %11864
  %11879 = lshr i32 %11878, 4
  %11880 = trunc i32 %11879 to i8
  %11881 = and i8 %11880, 1
  %11882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11881, i8* %11882, align 1
  %11883 = icmp eq i32 %11864, 0
  %11884 = zext i1 %11883 to i8
  %11885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11884, i8* %11885, align 1
  %11886 = lshr i32 %11864, 31
  %11887 = trunc i32 %11886 to i8
  %11888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11887, i8* %11888, align 1
  %11889 = lshr i32 %11861, 31
  %11890 = lshr i32 %11863, 31
  %11891 = xor i32 %11886, %11889
  %11892 = xor i32 %11886, %11890
  %11893 = add i32 %11891, %11892
  %11894 = icmp eq i32 %11893, 2
  %11895 = zext i1 %11894 to i8
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11895, i8* %11896, align 1
  store %struct.Memory* %loadMem_43f6fb, %struct.Memory** %MEMORY
  %loadMem_43f6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11898 = getelementptr inbounds %struct.GPR, %struct.GPR* %11897, i32 0, i32 33
  %11899 = getelementptr inbounds %struct.Reg, %struct.Reg* %11898, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %11899 to i64*
  %11900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11901 = getelementptr inbounds %struct.GPR, %struct.GPR* %11900, i32 0, i32 3
  %11902 = getelementptr inbounds %struct.Reg, %struct.Reg* %11901, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %11902 to i32*
  %11903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11904 = getelementptr inbounds %struct.GPR, %struct.GPR* %11903, i32 0, i32 5
  %11905 = getelementptr inbounds %struct.Reg, %struct.Reg* %11904, i32 0, i32 0
  %RCX.i811 = bitcast %union.anon* %11905 to i64*
  %11906 = load i32, i32* %EBX.i
  %11907 = zext i32 %11906 to i64
  %11908 = load i64, i64* %PC.i810
  %11909 = add i64 %11908, 3
  store i64 %11909, i64* %PC.i810
  %11910 = shl i64 %11907, 32
  %11911 = ashr exact i64 %11910, 32
  store i64 %11911, i64* %RCX.i811, align 8
  store %struct.Memory* %loadMem_43f6fe, %struct.Memory** %MEMORY
  %loadMem_43f701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11913 = getelementptr inbounds %struct.GPR, %struct.GPR* %11912, i32 0, i32 33
  %11914 = getelementptr inbounds %struct.Reg, %struct.Reg* %11913, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %11914 to i64*
  %11915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11916 = getelementptr inbounds %struct.GPR, %struct.GPR* %11915, i32 0, i32 21
  %11917 = getelementptr inbounds %struct.Reg, %struct.Reg* %11916, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %11917 to i32*
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11919 = getelementptr inbounds %struct.GPR, %struct.GPR* %11918, i32 0, i32 1
  %11920 = getelementptr inbounds %struct.Reg, %struct.Reg* %11919, i32 0, i32 0
  %RAX.i808 = bitcast %union.anon* %11920 to i64*
  %11921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11922 = getelementptr inbounds %struct.GPR, %struct.GPR* %11921, i32 0, i32 5
  %11923 = getelementptr inbounds %struct.Reg, %struct.Reg* %11922, i32 0, i32 0
  %RCX.i809 = bitcast %union.anon* %11923 to i64*
  %11924 = load i64, i64* %RAX.i808
  %11925 = load i64, i64* %RCX.i809
  %11926 = mul i64 %11925, 4
  %11927 = add i64 %11926, %11924
  %11928 = load i32, i32* %R10D.i
  %11929 = zext i32 %11928 to i64
  %11930 = load i64, i64* %PC.i807
  %11931 = add i64 %11930, 4
  store i64 %11931, i64* %PC.i807
  %11932 = inttoptr i64 %11927 to i32*
  store i32 %11928, i32* %11932
  store %struct.Memory* %loadMem_43f701, %struct.Memory** %MEMORY
  %loadMem_43f705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11934 = getelementptr inbounds %struct.GPR, %struct.GPR* %11933, i32 0, i32 33
  %11935 = getelementptr inbounds %struct.Reg, %struct.Reg* %11934, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %11935 to i64*
  %11936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11937 = getelementptr inbounds %struct.GPR, %struct.GPR* %11936, i32 0, i32 15
  %11938 = getelementptr inbounds %struct.Reg, %struct.Reg* %11937, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %11938 to i64*
  %11939 = load i64, i64* %RBP.i806
  %11940 = sub i64 %11939, 132
  %11941 = load i64, i64* %PC.i805
  %11942 = add i64 %11941, 7
  store i64 %11942, i64* %PC.i805
  %11943 = inttoptr i64 %11940 to i32*
  %11944 = load i32, i32* %11943
  %11945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11945, align 1
  %11946 = and i32 %11944, 255
  %11947 = call i32 @llvm.ctpop.i32(i32 %11946)
  %11948 = trunc i32 %11947 to i8
  %11949 = and i8 %11948, 1
  %11950 = xor i8 %11949, 1
  %11951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11950, i8* %11951, align 1
  %11952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11952, align 1
  %11953 = icmp eq i32 %11944, 0
  %11954 = zext i1 %11953 to i8
  %11955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11954, i8* %11955, align 1
  %11956 = lshr i32 %11944, 31
  %11957 = trunc i32 %11956 to i8
  %11958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11957, i8* %11958, align 1
  %11959 = lshr i32 %11944, 31
  %11960 = xor i32 %11956, %11959
  %11961 = add i32 %11960, %11959
  %11962 = icmp eq i32 %11961, 2
  %11963 = zext i1 %11962 to i8
  %11964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11963, i8* %11964, align 1
  store %struct.Memory* %loadMem_43f705, %struct.Memory** %MEMORY
  %loadMem_43f70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11966 = getelementptr inbounds %struct.GPR, %struct.GPR* %11965, i32 0, i32 33
  %11967 = getelementptr inbounds %struct.Reg, %struct.Reg* %11966, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %11967 to i64*
  %11968 = load i64, i64* %PC.i804
  %11969 = add i64 %11968, 81
  %11970 = load i64, i64* %PC.i804
  %11971 = add i64 %11970, 6
  %11972 = load i64, i64* %PC.i804
  %11973 = add i64 %11972, 6
  store i64 %11973, i64* %PC.i804
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11975 = load i8, i8* %11974, align 1
  %11976 = icmp eq i8 %11975, 0
  %11977 = zext i1 %11976 to i8
  store i8 %11977, i8* %BRANCH_TAKEN, align 1
  %11978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11979 = select i1 %11976, i64 %11969, i64 %11971
  store i64 %11979, i64* %11978, align 8
  store %struct.Memory* %loadMem_43f70c, %struct.Memory** %MEMORY
  %loadBr_43f70c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f70c = icmp eq i8 %loadBr_43f70c, 1
  br i1 %cmpBr_43f70c, label %block_.L_43f75d, label %block_43f712

block_43f712:                                     ; preds = %block_43f50f
  %loadMem_43f712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11981 = getelementptr inbounds %struct.GPR, %struct.GPR* %11980, i32 0, i32 33
  %11982 = getelementptr inbounds %struct.Reg, %struct.Reg* %11981, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %11982 to i64*
  %11983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11984 = getelementptr inbounds %struct.GPR, %struct.GPR* %11983, i32 0, i32 1
  %11985 = getelementptr inbounds %struct.Reg, %struct.Reg* %11984, i32 0, i32 0
  %RAX.i803 = bitcast %union.anon* %11985 to i64*
  %11986 = load i64, i64* %PC.i802
  %11987 = add i64 %11986, 10
  store i64 %11987, i64* %PC.i802
  store i64 ptrtoint (%G__0x723720_type* @G__0x723720 to i64), i64* %RAX.i803, align 8
  store %struct.Memory* %loadMem_43f712, %struct.Memory** %MEMORY
  %loadMem_43f71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11989 = getelementptr inbounds %struct.GPR, %struct.GPR* %11988, i32 0, i32 33
  %11990 = getelementptr inbounds %struct.Reg, %struct.Reg* %11989, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %11990 to i64*
  %11991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11992 = getelementptr inbounds %struct.GPR, %struct.GPR* %11991, i32 0, i32 5
  %11993 = getelementptr inbounds %struct.Reg, %struct.Reg* %11992, i32 0, i32 0
  %RCX.i800 = bitcast %union.anon* %11993 to i64*
  %11994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11995 = getelementptr inbounds %struct.GPR, %struct.GPR* %11994, i32 0, i32 15
  %11996 = getelementptr inbounds %struct.Reg, %struct.Reg* %11995, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %11996 to i64*
  %11997 = load i64, i64* %RBP.i801
  %11998 = sub i64 %11997, 72
  %11999 = load i64, i64* %PC.i799
  %12000 = add i64 %11999, 3
  store i64 %12000, i64* %PC.i799
  %12001 = inttoptr i64 %11998 to i32*
  %12002 = load i32, i32* %12001
  %12003 = zext i32 %12002 to i64
  store i64 %12003, i64* %RCX.i800, align 8
  store %struct.Memory* %loadMem_43f71c, %struct.Memory** %MEMORY
  %loadMem_43f71f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12005 = getelementptr inbounds %struct.GPR, %struct.GPR* %12004, i32 0, i32 33
  %12006 = getelementptr inbounds %struct.Reg, %struct.Reg* %12005, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %12006 to i64*
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12008 = getelementptr inbounds %struct.GPR, %struct.GPR* %12007, i32 0, i32 5
  %12009 = getelementptr inbounds %struct.Reg, %struct.Reg* %12008, i32 0, i32 0
  %RCX.i797 = bitcast %union.anon* %12009 to i64*
  %12010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12011 = getelementptr inbounds %struct.GPR, %struct.GPR* %12010, i32 0, i32 15
  %12012 = getelementptr inbounds %struct.Reg, %struct.Reg* %12011, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %12012 to i64*
  %12013 = load i64, i64* %RCX.i797
  %12014 = load i64, i64* %RBP.i798
  %12015 = sub i64 %12014, 60
  %12016 = load i64, i64* %PC.i796
  %12017 = add i64 %12016, 3
  store i64 %12017, i64* %PC.i796
  %12018 = trunc i64 %12013 to i32
  %12019 = inttoptr i64 %12015 to i32*
  %12020 = load i32, i32* %12019
  %12021 = add i32 %12020, %12018
  %12022 = zext i32 %12021 to i64
  store i64 %12022, i64* %RCX.i797, align 8
  %12023 = icmp ult i32 %12021, %12018
  %12024 = icmp ult i32 %12021, %12020
  %12025 = or i1 %12023, %12024
  %12026 = zext i1 %12025 to i8
  %12027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12026, i8* %12027, align 1
  %12028 = and i32 %12021, 255
  %12029 = call i32 @llvm.ctpop.i32(i32 %12028)
  %12030 = trunc i32 %12029 to i8
  %12031 = and i8 %12030, 1
  %12032 = xor i8 %12031, 1
  %12033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12032, i8* %12033, align 1
  %12034 = xor i32 %12020, %12018
  %12035 = xor i32 %12034, %12021
  %12036 = lshr i32 %12035, 4
  %12037 = trunc i32 %12036 to i8
  %12038 = and i8 %12037, 1
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12038, i8* %12039, align 1
  %12040 = icmp eq i32 %12021, 0
  %12041 = zext i1 %12040 to i8
  %12042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12041, i8* %12042, align 1
  %12043 = lshr i32 %12021, 31
  %12044 = trunc i32 %12043 to i8
  %12045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12044, i8* %12045, align 1
  %12046 = lshr i32 %12018, 31
  %12047 = lshr i32 %12020, 31
  %12048 = xor i32 %12043, %12046
  %12049 = xor i32 %12043, %12047
  %12050 = add i32 %12048, %12049
  %12051 = icmp eq i32 %12050, 2
  %12052 = zext i1 %12051 to i8
  %12053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12052, i8* %12053, align 1
  store %struct.Memory* %loadMem_43f71f, %struct.Memory** %MEMORY
  %loadMem_43f722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12055 = getelementptr inbounds %struct.GPR, %struct.GPR* %12054, i32 0, i32 33
  %12056 = getelementptr inbounds %struct.Reg, %struct.Reg* %12055, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %12056 to i64*
  %12057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12058 = getelementptr inbounds %struct.GPR, %struct.GPR* %12057, i32 0, i32 5
  %12059 = getelementptr inbounds %struct.Reg, %struct.Reg* %12058, i32 0, i32 0
  %ECX.i794 = bitcast %union.anon* %12059 to i32*
  %12060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12061 = getelementptr inbounds %struct.GPR, %struct.GPR* %12060, i32 0, i32 7
  %12062 = getelementptr inbounds %struct.Reg, %struct.Reg* %12061, i32 0, i32 0
  %RDX.i795 = bitcast %union.anon* %12062 to i64*
  %12063 = load i32, i32* %ECX.i794
  %12064 = zext i32 %12063 to i64
  %12065 = load i64, i64* %PC.i793
  %12066 = add i64 %12065, 3
  store i64 %12066, i64* %PC.i793
  %12067 = shl i64 %12064, 32
  %12068 = ashr exact i64 %12067, 32
  store i64 %12068, i64* %RDX.i795, align 8
  store %struct.Memory* %loadMem_43f722, %struct.Memory** %MEMORY
  %loadMem_43f725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12070 = getelementptr inbounds %struct.GPR, %struct.GPR* %12069, i32 0, i32 33
  %12071 = getelementptr inbounds %struct.Reg, %struct.Reg* %12070, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %12071 to i64*
  %12072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12073 = getelementptr inbounds %struct.GPR, %struct.GPR* %12072, i32 0, i32 7
  %12074 = getelementptr inbounds %struct.Reg, %struct.Reg* %12073, i32 0, i32 0
  %RDX.i792 = bitcast %union.anon* %12074 to i64*
  %12075 = load i64, i64* %RDX.i792
  %12076 = load i64, i64* %PC.i791
  %12077 = add i64 %12076, 4
  store i64 %12077, i64* %PC.i791
  %12078 = shl i64 %12075, 5
  %12079 = icmp slt i64 %12078, 0
  %12080 = shl i64 %12078, 1
  store i64 %12080, i64* %RDX.i792, align 8
  %12081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12082 = zext i1 %12079 to i8
  store i8 %12082, i8* %12081, align 1
  %12083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12084 = trunc i64 %12080 to i32
  %12085 = and i32 %12084, 254
  %12086 = call i32 @llvm.ctpop.i32(i32 %12085)
  %12087 = trunc i32 %12086 to i8
  %12088 = and i8 %12087, 1
  %12089 = xor i8 %12088, 1
  store i8 %12089, i8* %12083, align 1
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12090, align 1
  %12091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12092 = icmp eq i64 %12080, 0
  %12093 = zext i1 %12092 to i8
  store i8 %12093, i8* %12091, align 1
  %12094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12095 = lshr i64 %12080, 63
  %12096 = trunc i64 %12095 to i8
  store i8 %12096, i8* %12094, align 1
  %12097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12097, align 1
  store %struct.Memory* %loadMem_43f725, %struct.Memory** %MEMORY
  %loadMem_43f729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12099 = getelementptr inbounds %struct.GPR, %struct.GPR* %12098, i32 0, i32 33
  %12100 = getelementptr inbounds %struct.Reg, %struct.Reg* %12099, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %12100 to i64*
  %12101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12102 = getelementptr inbounds %struct.GPR, %struct.GPR* %12101, i32 0, i32 1
  %12103 = getelementptr inbounds %struct.Reg, %struct.Reg* %12102, i32 0, i32 0
  %RAX.i789 = bitcast %union.anon* %12103 to i64*
  %12104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12105 = getelementptr inbounds %struct.GPR, %struct.GPR* %12104, i32 0, i32 7
  %12106 = getelementptr inbounds %struct.Reg, %struct.Reg* %12105, i32 0, i32 0
  %RDX.i790 = bitcast %union.anon* %12106 to i64*
  %12107 = load i64, i64* %RAX.i789
  %12108 = load i64, i64* %RDX.i790
  %12109 = load i64, i64* %PC.i788
  %12110 = add i64 %12109, 3
  store i64 %12110, i64* %PC.i788
  %12111 = add i64 %12108, %12107
  store i64 %12111, i64* %RAX.i789, align 8
  %12112 = icmp ult i64 %12111, %12107
  %12113 = icmp ult i64 %12111, %12108
  %12114 = or i1 %12112, %12113
  %12115 = zext i1 %12114 to i8
  %12116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12115, i8* %12116, align 1
  %12117 = trunc i64 %12111 to i32
  %12118 = and i32 %12117, 255
  %12119 = call i32 @llvm.ctpop.i32(i32 %12118)
  %12120 = trunc i32 %12119 to i8
  %12121 = and i8 %12120, 1
  %12122 = xor i8 %12121, 1
  %12123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12122, i8* %12123, align 1
  %12124 = xor i64 %12108, %12107
  %12125 = xor i64 %12124, %12111
  %12126 = lshr i64 %12125, 4
  %12127 = trunc i64 %12126 to i8
  %12128 = and i8 %12127, 1
  %12129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12128, i8* %12129, align 1
  %12130 = icmp eq i64 %12111, 0
  %12131 = zext i1 %12130 to i8
  %12132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12131, i8* %12132, align 1
  %12133 = lshr i64 %12111, 63
  %12134 = trunc i64 %12133 to i8
  %12135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12134, i8* %12135, align 1
  %12136 = lshr i64 %12107, 63
  %12137 = lshr i64 %12108, 63
  %12138 = xor i64 %12133, %12136
  %12139 = xor i64 %12133, %12137
  %12140 = add i64 %12138, %12139
  %12141 = icmp eq i64 %12140, 2
  %12142 = zext i1 %12141 to i8
  %12143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12142, i8* %12143, align 1
  store %struct.Memory* %loadMem_43f729, %struct.Memory** %MEMORY
  %loadMem_43f72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12145 = getelementptr inbounds %struct.GPR, %struct.GPR* %12144, i32 0, i32 33
  %12146 = getelementptr inbounds %struct.Reg, %struct.Reg* %12145, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %12146 to i64*
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12148 = getelementptr inbounds %struct.GPR, %struct.GPR* %12147, i32 0, i32 5
  %12149 = getelementptr inbounds %struct.Reg, %struct.Reg* %12148, i32 0, i32 0
  %RCX.i786 = bitcast %union.anon* %12149 to i64*
  %12150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12151 = getelementptr inbounds %struct.GPR, %struct.GPR* %12150, i32 0, i32 15
  %12152 = getelementptr inbounds %struct.Reg, %struct.Reg* %12151, i32 0, i32 0
  %RBP.i787 = bitcast %union.anon* %12152 to i64*
  %12153 = load i64, i64* %RBP.i787
  %12154 = sub i64 %12153, 76
  %12155 = load i64, i64* %PC.i785
  %12156 = add i64 %12155, 3
  store i64 %12156, i64* %PC.i785
  %12157 = inttoptr i64 %12154 to i32*
  %12158 = load i32, i32* %12157
  %12159 = zext i32 %12158 to i64
  store i64 %12159, i64* %RCX.i786, align 8
  store %struct.Memory* %loadMem_43f72c, %struct.Memory** %MEMORY
  %loadMem_43f72f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12161 = getelementptr inbounds %struct.GPR, %struct.GPR* %12160, i32 0, i32 33
  %12162 = getelementptr inbounds %struct.Reg, %struct.Reg* %12161, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %12162 to i64*
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12164 = getelementptr inbounds %struct.GPR, %struct.GPR* %12163, i32 0, i32 5
  %12165 = getelementptr inbounds %struct.Reg, %struct.Reg* %12164, i32 0, i32 0
  %RCX.i783 = bitcast %union.anon* %12165 to i64*
  %12166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12167 = getelementptr inbounds %struct.GPR, %struct.GPR* %12166, i32 0, i32 15
  %12168 = getelementptr inbounds %struct.Reg, %struct.Reg* %12167, i32 0, i32 0
  %RBP.i784 = bitcast %union.anon* %12168 to i64*
  %12169 = load i64, i64* %RCX.i783
  %12170 = load i64, i64* %RBP.i784
  %12171 = sub i64 %12170, 56
  %12172 = load i64, i64* %PC.i782
  %12173 = add i64 %12172, 3
  store i64 %12173, i64* %PC.i782
  %12174 = trunc i64 %12169 to i32
  %12175 = inttoptr i64 %12171 to i32*
  %12176 = load i32, i32* %12175
  %12177 = add i32 %12176, %12174
  %12178 = zext i32 %12177 to i64
  store i64 %12178, i64* %RCX.i783, align 8
  %12179 = icmp ult i32 %12177, %12174
  %12180 = icmp ult i32 %12177, %12176
  %12181 = or i1 %12179, %12180
  %12182 = zext i1 %12181 to i8
  %12183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12182, i8* %12183, align 1
  %12184 = and i32 %12177, 255
  %12185 = call i32 @llvm.ctpop.i32(i32 %12184)
  %12186 = trunc i32 %12185 to i8
  %12187 = and i8 %12186, 1
  %12188 = xor i8 %12187, 1
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12188, i8* %12189, align 1
  %12190 = xor i32 %12176, %12174
  %12191 = xor i32 %12190, %12177
  %12192 = lshr i32 %12191, 4
  %12193 = trunc i32 %12192 to i8
  %12194 = and i8 %12193, 1
  %12195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12194, i8* %12195, align 1
  %12196 = icmp eq i32 %12177, 0
  %12197 = zext i1 %12196 to i8
  %12198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12197, i8* %12198, align 1
  %12199 = lshr i32 %12177, 31
  %12200 = trunc i32 %12199 to i8
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12200, i8* %12201, align 1
  %12202 = lshr i32 %12174, 31
  %12203 = lshr i32 %12176, 31
  %12204 = xor i32 %12199, %12202
  %12205 = xor i32 %12199, %12203
  %12206 = add i32 %12204, %12205
  %12207 = icmp eq i32 %12206, 2
  %12208 = zext i1 %12207 to i8
  %12209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12208, i8* %12209, align 1
  store %struct.Memory* %loadMem_43f72f, %struct.Memory** %MEMORY
  %loadMem_43f732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12211 = getelementptr inbounds %struct.GPR, %struct.GPR* %12210, i32 0, i32 33
  %12212 = getelementptr inbounds %struct.Reg, %struct.Reg* %12211, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %12212 to i64*
  %12213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12214 = getelementptr inbounds %struct.GPR, %struct.GPR* %12213, i32 0, i32 5
  %12215 = getelementptr inbounds %struct.Reg, %struct.Reg* %12214, i32 0, i32 0
  %ECX.i780 = bitcast %union.anon* %12215 to i32*
  %12216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12217 = getelementptr inbounds %struct.GPR, %struct.GPR* %12216, i32 0, i32 7
  %12218 = getelementptr inbounds %struct.Reg, %struct.Reg* %12217, i32 0, i32 0
  %RDX.i781 = bitcast %union.anon* %12218 to i64*
  %12219 = load i32, i32* %ECX.i780
  %12220 = zext i32 %12219 to i64
  %12221 = load i64, i64* %PC.i779
  %12222 = add i64 %12221, 3
  store i64 %12222, i64* %PC.i779
  %12223 = shl i64 %12220, 32
  %12224 = ashr exact i64 %12223, 32
  store i64 %12224, i64* %RDX.i781, align 8
  store %struct.Memory* %loadMem_43f732, %struct.Memory** %MEMORY
  %loadMem_43f735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12226 = getelementptr inbounds %struct.GPR, %struct.GPR* %12225, i32 0, i32 33
  %12227 = getelementptr inbounds %struct.Reg, %struct.Reg* %12226, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %12227 to i64*
  %12228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12229 = getelementptr inbounds %struct.GPR, %struct.GPR* %12228, i32 0, i32 1
  %12230 = getelementptr inbounds %struct.Reg, %struct.Reg* %12229, i32 0, i32 0
  %RAX.i776 = bitcast %union.anon* %12230 to i64*
  %12231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12232 = getelementptr inbounds %struct.GPR, %struct.GPR* %12231, i32 0, i32 5
  %12233 = getelementptr inbounds %struct.Reg, %struct.Reg* %12232, i32 0, i32 0
  %RCX.i777 = bitcast %union.anon* %12233 to i64*
  %12234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12235 = getelementptr inbounds %struct.GPR, %struct.GPR* %12234, i32 0, i32 7
  %12236 = getelementptr inbounds %struct.Reg, %struct.Reg* %12235, i32 0, i32 0
  %RDX.i778 = bitcast %union.anon* %12236 to i64*
  %12237 = load i64, i64* %RAX.i776
  %12238 = load i64, i64* %RDX.i778
  %12239 = mul i64 %12238, 4
  %12240 = add i64 %12239, %12237
  %12241 = load i64, i64* %PC.i775
  %12242 = add i64 %12241, 3
  store i64 %12242, i64* %PC.i775
  %12243 = inttoptr i64 %12240 to i32*
  %12244 = load i32, i32* %12243
  %12245 = zext i32 %12244 to i64
  store i64 %12245, i64* %RCX.i777, align 8
  store %struct.Memory* %loadMem_43f735, %struct.Memory** %MEMORY
  %loadMem_43f738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12247 = getelementptr inbounds %struct.GPR, %struct.GPR* %12246, i32 0, i32 33
  %12248 = getelementptr inbounds %struct.Reg, %struct.Reg* %12247, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %12248 to i64*
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12250 = getelementptr inbounds %struct.GPR, %struct.GPR* %12249, i32 0, i32 1
  %12251 = getelementptr inbounds %struct.Reg, %struct.Reg* %12250, i32 0, i32 0
  %RAX.i774 = bitcast %union.anon* %12251 to i64*
  %12252 = load i64, i64* %PC.i773
  %12253 = add i64 %12252, 8
  store i64 %12253, i64* %PC.i773
  %12254 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12254, i64* %RAX.i774, align 8
  store %struct.Memory* %loadMem_43f738, %struct.Memory** %MEMORY
  %loadMem_43f740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12256 = getelementptr inbounds %struct.GPR, %struct.GPR* %12255, i32 0, i32 33
  %12257 = getelementptr inbounds %struct.Reg, %struct.Reg* %12256, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %12257 to i64*
  %12258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12259 = getelementptr inbounds %struct.GPR, %struct.GPR* %12258, i32 0, i32 1
  %12260 = getelementptr inbounds %struct.Reg, %struct.Reg* %12259, i32 0, i32 0
  %RAX.i772 = bitcast %union.anon* %12260 to i64*
  %12261 = load i64, i64* %RAX.i772
  %12262 = load i64, i64* %PC.i771
  %12263 = add i64 %12262, 6
  store i64 %12263, i64* %PC.i771
  %12264 = add i64 13112, %12261
  store i64 %12264, i64* %RAX.i772, align 8
  %12265 = icmp ult i64 %12264, %12261
  %12266 = icmp ult i64 %12264, 13112
  %12267 = or i1 %12265, %12266
  %12268 = zext i1 %12267 to i8
  %12269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12268, i8* %12269, align 1
  %12270 = trunc i64 %12264 to i32
  %12271 = and i32 %12270, 255
  %12272 = call i32 @llvm.ctpop.i32(i32 %12271)
  %12273 = trunc i32 %12272 to i8
  %12274 = and i8 %12273, 1
  %12275 = xor i8 %12274, 1
  %12276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12275, i8* %12276, align 1
  %12277 = xor i64 13112, %12261
  %12278 = xor i64 %12277, %12264
  %12279 = lshr i64 %12278, 4
  %12280 = trunc i64 %12279 to i8
  %12281 = and i8 %12280, 1
  %12282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12281, i8* %12282, align 1
  %12283 = icmp eq i64 %12264, 0
  %12284 = zext i1 %12283 to i8
  %12285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12284, i8* %12285, align 1
  %12286 = lshr i64 %12264, 63
  %12287 = trunc i64 %12286 to i8
  %12288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12287, i8* %12288, align 1
  %12289 = lshr i64 %12261, 63
  %12290 = xor i64 %12286, %12289
  %12291 = add i64 %12290, %12286
  %12292 = icmp eq i64 %12291, 2
  %12293 = zext i1 %12292 to i8
  %12294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12293, i8* %12294, align 1
  store %struct.Memory* %loadMem_43f740, %struct.Memory** %MEMORY
  %loadMem_43f746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12296 = getelementptr inbounds %struct.GPR, %struct.GPR* %12295, i32 0, i32 33
  %12297 = getelementptr inbounds %struct.Reg, %struct.Reg* %12296, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %12297 to i64*
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12299 = getelementptr inbounds %struct.GPR, %struct.GPR* %12298, i32 0, i32 7
  %12300 = getelementptr inbounds %struct.Reg, %struct.Reg* %12299, i32 0, i32 0
  %RDX.i769 = bitcast %union.anon* %12300 to i64*
  %12301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12302 = getelementptr inbounds %struct.GPR, %struct.GPR* %12301, i32 0, i32 15
  %12303 = getelementptr inbounds %struct.Reg, %struct.Reg* %12302, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %12303 to i64*
  %12304 = load i64, i64* %RBP.i770
  %12305 = sub i64 %12304, 72
  %12306 = load i64, i64* %PC.i768
  %12307 = add i64 %12306, 4
  store i64 %12307, i64* %PC.i768
  %12308 = inttoptr i64 %12305 to i32*
  %12309 = load i32, i32* %12308
  %12310 = sext i32 %12309 to i64
  store i64 %12310, i64* %RDX.i769, align 8
  store %struct.Memory* %loadMem_43f746, %struct.Memory** %MEMORY
  %loadMem_43f74a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12312 = getelementptr inbounds %struct.GPR, %struct.GPR* %12311, i32 0, i32 33
  %12313 = getelementptr inbounds %struct.Reg, %struct.Reg* %12312, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %12313 to i64*
  %12314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12315 = getelementptr inbounds %struct.GPR, %struct.GPR* %12314, i32 0, i32 7
  %12316 = getelementptr inbounds %struct.Reg, %struct.Reg* %12315, i32 0, i32 0
  %RDX.i767 = bitcast %union.anon* %12316 to i64*
  %12317 = load i64, i64* %RDX.i767
  %12318 = load i64, i64* %PC.i766
  %12319 = add i64 %12318, 4
  store i64 %12319, i64* %PC.i766
  %12320 = shl i64 %12317, 5
  %12321 = icmp slt i64 %12320, 0
  %12322 = shl i64 %12320, 1
  store i64 %12322, i64* %RDX.i767, align 8
  %12323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12324 = zext i1 %12321 to i8
  store i8 %12324, i8* %12323, align 1
  %12325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12326 = trunc i64 %12322 to i32
  %12327 = and i32 %12326, 254
  %12328 = call i32 @llvm.ctpop.i32(i32 %12327)
  %12329 = trunc i32 %12328 to i8
  %12330 = and i8 %12329, 1
  %12331 = xor i8 %12330, 1
  store i8 %12331, i8* %12325, align 1
  %12332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12332, align 1
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12334 = icmp eq i64 %12322, 0
  %12335 = zext i1 %12334 to i8
  store i8 %12335, i8* %12333, align 1
  %12336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12337 = lshr i64 %12322, 63
  %12338 = trunc i64 %12337 to i8
  store i8 %12338, i8* %12336, align 1
  %12339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12339, align 1
  store %struct.Memory* %loadMem_43f74a, %struct.Memory** %MEMORY
  %loadMem_43f74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12341 = getelementptr inbounds %struct.GPR, %struct.GPR* %12340, i32 0, i32 33
  %12342 = getelementptr inbounds %struct.Reg, %struct.Reg* %12341, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %12342 to i64*
  %12343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12344 = getelementptr inbounds %struct.GPR, %struct.GPR* %12343, i32 0, i32 1
  %12345 = getelementptr inbounds %struct.Reg, %struct.Reg* %12344, i32 0, i32 0
  %RAX.i764 = bitcast %union.anon* %12345 to i64*
  %12346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12347 = getelementptr inbounds %struct.GPR, %struct.GPR* %12346, i32 0, i32 7
  %12348 = getelementptr inbounds %struct.Reg, %struct.Reg* %12347, i32 0, i32 0
  %RDX.i765 = bitcast %union.anon* %12348 to i64*
  %12349 = load i64, i64* %RAX.i764
  %12350 = load i64, i64* %RDX.i765
  %12351 = load i64, i64* %PC.i763
  %12352 = add i64 %12351, 3
  store i64 %12352, i64* %PC.i763
  %12353 = add i64 %12350, %12349
  store i64 %12353, i64* %RAX.i764, align 8
  %12354 = icmp ult i64 %12353, %12349
  %12355 = icmp ult i64 %12353, %12350
  %12356 = or i1 %12354, %12355
  %12357 = zext i1 %12356 to i8
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12357, i8* %12358, align 1
  %12359 = trunc i64 %12353 to i32
  %12360 = and i32 %12359, 255
  %12361 = call i32 @llvm.ctpop.i32(i32 %12360)
  %12362 = trunc i32 %12361 to i8
  %12363 = and i8 %12362, 1
  %12364 = xor i8 %12363, 1
  %12365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12364, i8* %12365, align 1
  %12366 = xor i64 %12350, %12349
  %12367 = xor i64 %12366, %12353
  %12368 = lshr i64 %12367, 4
  %12369 = trunc i64 %12368 to i8
  %12370 = and i8 %12369, 1
  %12371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12370, i8* %12371, align 1
  %12372 = icmp eq i64 %12353, 0
  %12373 = zext i1 %12372 to i8
  %12374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12373, i8* %12374, align 1
  %12375 = lshr i64 %12353, 63
  %12376 = trunc i64 %12375 to i8
  %12377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12376, i8* %12377, align 1
  %12378 = lshr i64 %12349, 63
  %12379 = lshr i64 %12350, 63
  %12380 = xor i64 %12375, %12378
  %12381 = xor i64 %12375, %12379
  %12382 = add i64 %12380, %12381
  %12383 = icmp eq i64 %12382, 2
  %12384 = zext i1 %12383 to i8
  %12385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12384, i8* %12385, align 1
  store %struct.Memory* %loadMem_43f74e, %struct.Memory** %MEMORY
  %loadMem_43f751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12387 = getelementptr inbounds %struct.GPR, %struct.GPR* %12386, i32 0, i32 33
  %12388 = getelementptr inbounds %struct.Reg, %struct.Reg* %12387, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %12388 to i64*
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12390 = getelementptr inbounds %struct.GPR, %struct.GPR* %12389, i32 0, i32 7
  %12391 = getelementptr inbounds %struct.Reg, %struct.Reg* %12390, i32 0, i32 0
  %RDX.i761 = bitcast %union.anon* %12391 to i64*
  %12392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12393 = getelementptr inbounds %struct.GPR, %struct.GPR* %12392, i32 0, i32 15
  %12394 = getelementptr inbounds %struct.Reg, %struct.Reg* %12393, i32 0, i32 0
  %RBP.i762 = bitcast %union.anon* %12394 to i64*
  %12395 = load i64, i64* %RBP.i762
  %12396 = sub i64 %12395, 76
  %12397 = load i64, i64* %PC.i760
  %12398 = add i64 %12397, 4
  store i64 %12398, i64* %PC.i760
  %12399 = inttoptr i64 %12396 to i32*
  %12400 = load i32, i32* %12399
  %12401 = sext i32 %12400 to i64
  store i64 %12401, i64* %RDX.i761, align 8
  store %struct.Memory* %loadMem_43f751, %struct.Memory** %MEMORY
  %loadMem_43f755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12403 = getelementptr inbounds %struct.GPR, %struct.GPR* %12402, i32 0, i32 33
  %12404 = getelementptr inbounds %struct.Reg, %struct.Reg* %12403, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %12404 to i64*
  %12405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12406 = getelementptr inbounds %struct.GPR, %struct.GPR* %12405, i32 0, i32 5
  %12407 = getelementptr inbounds %struct.Reg, %struct.Reg* %12406, i32 0, i32 0
  %ECX.i757 = bitcast %union.anon* %12407 to i32*
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 1
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %12410 to i64*
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 7
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %RDX.i759 = bitcast %union.anon* %12413 to i64*
  %12414 = load i64, i64* %RAX.i758
  %12415 = load i64, i64* %RDX.i759
  %12416 = mul i64 %12415, 4
  %12417 = add i64 %12416, %12414
  %12418 = load i32, i32* %ECX.i757
  %12419 = zext i32 %12418 to i64
  %12420 = load i64, i64* %PC.i756
  %12421 = add i64 %12420, 3
  store i64 %12421, i64* %PC.i756
  %12422 = inttoptr i64 %12417 to i32*
  store i32 %12418, i32* %12422
  store %struct.Memory* %loadMem_43f755, %struct.Memory** %MEMORY
  %loadMem_43f758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 33
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %12425 to i64*
  %12426 = load i64, i64* %PC.i755
  %12427 = add i64 %12426, 85
  %12428 = load i64, i64* %PC.i755
  %12429 = add i64 %12428, 5
  store i64 %12429, i64* %PC.i755
  %12430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12427, i64* %12430, align 8
  store %struct.Memory* %loadMem_43f758, %struct.Memory** %MEMORY
  br label %block_.L_43f7ad

block_.L_43f75d:                                  ; preds = %block_43f50f
  %loadMem_43f75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12432 = getelementptr inbounds %struct.GPR, %struct.GPR* %12431, i32 0, i32 33
  %12433 = getelementptr inbounds %struct.Reg, %struct.Reg* %12432, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %12433 to i64*
  %12434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12435 = getelementptr inbounds %struct.GPR, %struct.GPR* %12434, i32 0, i32 1
  %12436 = getelementptr inbounds %struct.Reg, %struct.Reg* %12435, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %12436 to i64*
  %12437 = load i64, i64* %PC.i753
  %12438 = add i64 %12437, 10
  store i64 %12438, i64* %PC.i753
  store i64 ptrtoint (%G__0x723720_type* @G__0x723720 to i64), i64* %RAX.i754, align 8
  store %struct.Memory* %loadMem_43f75d, %struct.Memory** %MEMORY
  %loadMem_43f767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12440 = getelementptr inbounds %struct.GPR, %struct.GPR* %12439, i32 0, i32 33
  %12441 = getelementptr inbounds %struct.Reg, %struct.Reg* %12440, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %12441 to i64*
  %12442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12443 = getelementptr inbounds %struct.GPR, %struct.GPR* %12442, i32 0, i32 5
  %12444 = getelementptr inbounds %struct.Reg, %struct.Reg* %12443, i32 0, i32 0
  %RCX.i751 = bitcast %union.anon* %12444 to i64*
  %12445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12446 = getelementptr inbounds %struct.GPR, %struct.GPR* %12445, i32 0, i32 15
  %12447 = getelementptr inbounds %struct.Reg, %struct.Reg* %12446, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %12447 to i64*
  %12448 = load i64, i64* %RBP.i752
  %12449 = sub i64 %12448, 72
  %12450 = load i64, i64* %PC.i750
  %12451 = add i64 %12450, 3
  store i64 %12451, i64* %PC.i750
  %12452 = inttoptr i64 %12449 to i32*
  %12453 = load i32, i32* %12452
  %12454 = zext i32 %12453 to i64
  store i64 %12454, i64* %RCX.i751, align 8
  store %struct.Memory* %loadMem_43f767, %struct.Memory** %MEMORY
  %loadMem_43f76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12456 = getelementptr inbounds %struct.GPR, %struct.GPR* %12455, i32 0, i32 33
  %12457 = getelementptr inbounds %struct.Reg, %struct.Reg* %12456, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %12457 to i64*
  %12458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12459 = getelementptr inbounds %struct.GPR, %struct.GPR* %12458, i32 0, i32 5
  %12460 = getelementptr inbounds %struct.Reg, %struct.Reg* %12459, i32 0, i32 0
  %RCX.i748 = bitcast %union.anon* %12460 to i64*
  %12461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12462 = getelementptr inbounds %struct.GPR, %struct.GPR* %12461, i32 0, i32 15
  %12463 = getelementptr inbounds %struct.Reg, %struct.Reg* %12462, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %12463 to i64*
  %12464 = load i64, i64* %RCX.i748
  %12465 = load i64, i64* %RBP.i749
  %12466 = sub i64 %12465, 60
  %12467 = load i64, i64* %PC.i747
  %12468 = add i64 %12467, 3
  store i64 %12468, i64* %PC.i747
  %12469 = trunc i64 %12464 to i32
  %12470 = inttoptr i64 %12466 to i32*
  %12471 = load i32, i32* %12470
  %12472 = add i32 %12471, %12469
  %12473 = zext i32 %12472 to i64
  store i64 %12473, i64* %RCX.i748, align 8
  %12474 = icmp ult i32 %12472, %12469
  %12475 = icmp ult i32 %12472, %12471
  %12476 = or i1 %12474, %12475
  %12477 = zext i1 %12476 to i8
  %12478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12477, i8* %12478, align 1
  %12479 = and i32 %12472, 255
  %12480 = call i32 @llvm.ctpop.i32(i32 %12479)
  %12481 = trunc i32 %12480 to i8
  %12482 = and i8 %12481, 1
  %12483 = xor i8 %12482, 1
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12483, i8* %12484, align 1
  %12485 = xor i32 %12471, %12469
  %12486 = xor i32 %12485, %12472
  %12487 = lshr i32 %12486, 4
  %12488 = trunc i32 %12487 to i8
  %12489 = and i8 %12488, 1
  %12490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12489, i8* %12490, align 1
  %12491 = icmp eq i32 %12472, 0
  %12492 = zext i1 %12491 to i8
  %12493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12492, i8* %12493, align 1
  %12494 = lshr i32 %12472, 31
  %12495 = trunc i32 %12494 to i8
  %12496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12495, i8* %12496, align 1
  %12497 = lshr i32 %12469, 31
  %12498 = lshr i32 %12471, 31
  %12499 = xor i32 %12494, %12497
  %12500 = xor i32 %12494, %12498
  %12501 = add i32 %12499, %12500
  %12502 = icmp eq i32 %12501, 2
  %12503 = zext i1 %12502 to i8
  %12504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12503, i8* %12504, align 1
  store %struct.Memory* %loadMem_43f76a, %struct.Memory** %MEMORY
  %loadMem_43f76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12506 = getelementptr inbounds %struct.GPR, %struct.GPR* %12505, i32 0, i32 33
  %12507 = getelementptr inbounds %struct.Reg, %struct.Reg* %12506, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %12507 to i64*
  %12508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12509 = getelementptr inbounds %struct.GPR, %struct.GPR* %12508, i32 0, i32 5
  %12510 = getelementptr inbounds %struct.Reg, %struct.Reg* %12509, i32 0, i32 0
  %ECX.i745 = bitcast %union.anon* %12510 to i32*
  %12511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12512 = getelementptr inbounds %struct.GPR, %struct.GPR* %12511, i32 0, i32 7
  %12513 = getelementptr inbounds %struct.Reg, %struct.Reg* %12512, i32 0, i32 0
  %RDX.i746 = bitcast %union.anon* %12513 to i64*
  %12514 = load i32, i32* %ECX.i745
  %12515 = zext i32 %12514 to i64
  %12516 = load i64, i64* %PC.i744
  %12517 = add i64 %12516, 3
  store i64 %12517, i64* %PC.i744
  %12518 = shl i64 %12515, 32
  %12519 = ashr exact i64 %12518, 32
  store i64 %12519, i64* %RDX.i746, align 8
  store %struct.Memory* %loadMem_43f76d, %struct.Memory** %MEMORY
  %loadMem_43f770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12521 = getelementptr inbounds %struct.GPR, %struct.GPR* %12520, i32 0, i32 33
  %12522 = getelementptr inbounds %struct.Reg, %struct.Reg* %12521, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %12522 to i64*
  %12523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12524 = getelementptr inbounds %struct.GPR, %struct.GPR* %12523, i32 0, i32 7
  %12525 = getelementptr inbounds %struct.Reg, %struct.Reg* %12524, i32 0, i32 0
  %RDX.i743 = bitcast %union.anon* %12525 to i64*
  %12526 = load i64, i64* %RDX.i743
  %12527 = load i64, i64* %PC.i742
  %12528 = add i64 %12527, 4
  store i64 %12528, i64* %PC.i742
  %12529 = shl i64 %12526, 5
  %12530 = icmp slt i64 %12529, 0
  %12531 = shl i64 %12529, 1
  store i64 %12531, i64* %RDX.i743, align 8
  %12532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12533 = zext i1 %12530 to i8
  store i8 %12533, i8* %12532, align 1
  %12534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12535 = trunc i64 %12531 to i32
  %12536 = and i32 %12535, 254
  %12537 = call i32 @llvm.ctpop.i32(i32 %12536)
  %12538 = trunc i32 %12537 to i8
  %12539 = and i8 %12538, 1
  %12540 = xor i8 %12539, 1
  store i8 %12540, i8* %12534, align 1
  %12541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12541, align 1
  %12542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12543 = icmp eq i64 %12531, 0
  %12544 = zext i1 %12543 to i8
  store i8 %12544, i8* %12542, align 1
  %12545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12546 = lshr i64 %12531, 63
  %12547 = trunc i64 %12546 to i8
  store i8 %12547, i8* %12545, align 1
  %12548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12548, align 1
  store %struct.Memory* %loadMem_43f770, %struct.Memory** %MEMORY
  %loadMem_43f774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12550 = getelementptr inbounds %struct.GPR, %struct.GPR* %12549, i32 0, i32 33
  %12551 = getelementptr inbounds %struct.Reg, %struct.Reg* %12550, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %12551 to i64*
  %12552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12553 = getelementptr inbounds %struct.GPR, %struct.GPR* %12552, i32 0, i32 1
  %12554 = getelementptr inbounds %struct.Reg, %struct.Reg* %12553, i32 0, i32 0
  %RAX.i740 = bitcast %union.anon* %12554 to i64*
  %12555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12556 = getelementptr inbounds %struct.GPR, %struct.GPR* %12555, i32 0, i32 7
  %12557 = getelementptr inbounds %struct.Reg, %struct.Reg* %12556, i32 0, i32 0
  %RDX.i741 = bitcast %union.anon* %12557 to i64*
  %12558 = load i64, i64* %RAX.i740
  %12559 = load i64, i64* %RDX.i741
  %12560 = load i64, i64* %PC.i739
  %12561 = add i64 %12560, 3
  store i64 %12561, i64* %PC.i739
  %12562 = add i64 %12559, %12558
  store i64 %12562, i64* %RAX.i740, align 8
  %12563 = icmp ult i64 %12562, %12558
  %12564 = icmp ult i64 %12562, %12559
  %12565 = or i1 %12563, %12564
  %12566 = zext i1 %12565 to i8
  %12567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12566, i8* %12567, align 1
  %12568 = trunc i64 %12562 to i32
  %12569 = and i32 %12568, 255
  %12570 = call i32 @llvm.ctpop.i32(i32 %12569)
  %12571 = trunc i32 %12570 to i8
  %12572 = and i8 %12571, 1
  %12573 = xor i8 %12572, 1
  %12574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12573, i8* %12574, align 1
  %12575 = xor i64 %12559, %12558
  %12576 = xor i64 %12575, %12562
  %12577 = lshr i64 %12576, 4
  %12578 = trunc i64 %12577 to i8
  %12579 = and i8 %12578, 1
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12579, i8* %12580, align 1
  %12581 = icmp eq i64 %12562, 0
  %12582 = zext i1 %12581 to i8
  %12583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12582, i8* %12583, align 1
  %12584 = lshr i64 %12562, 63
  %12585 = trunc i64 %12584 to i8
  %12586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12585, i8* %12586, align 1
  %12587 = lshr i64 %12558, 63
  %12588 = lshr i64 %12559, 63
  %12589 = xor i64 %12584, %12587
  %12590 = xor i64 %12584, %12588
  %12591 = add i64 %12589, %12590
  %12592 = icmp eq i64 %12591, 2
  %12593 = zext i1 %12592 to i8
  %12594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12593, i8* %12594, align 1
  store %struct.Memory* %loadMem_43f774, %struct.Memory** %MEMORY
  %loadMem_43f777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12596 = getelementptr inbounds %struct.GPR, %struct.GPR* %12595, i32 0, i32 33
  %12597 = getelementptr inbounds %struct.Reg, %struct.Reg* %12596, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %12597 to i64*
  %12598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12599 = getelementptr inbounds %struct.GPR, %struct.GPR* %12598, i32 0, i32 5
  %12600 = getelementptr inbounds %struct.Reg, %struct.Reg* %12599, i32 0, i32 0
  %RCX.i737 = bitcast %union.anon* %12600 to i64*
  %12601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12602 = getelementptr inbounds %struct.GPR, %struct.GPR* %12601, i32 0, i32 15
  %12603 = getelementptr inbounds %struct.Reg, %struct.Reg* %12602, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %12603 to i64*
  %12604 = load i64, i64* %RBP.i738
  %12605 = sub i64 %12604, 76
  %12606 = load i64, i64* %PC.i736
  %12607 = add i64 %12606, 3
  store i64 %12607, i64* %PC.i736
  %12608 = inttoptr i64 %12605 to i32*
  %12609 = load i32, i32* %12608
  %12610 = zext i32 %12609 to i64
  store i64 %12610, i64* %RCX.i737, align 8
  store %struct.Memory* %loadMem_43f777, %struct.Memory** %MEMORY
  %loadMem_43f77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12612 = getelementptr inbounds %struct.GPR, %struct.GPR* %12611, i32 0, i32 33
  %12613 = getelementptr inbounds %struct.Reg, %struct.Reg* %12612, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %12613 to i64*
  %12614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12615 = getelementptr inbounds %struct.GPR, %struct.GPR* %12614, i32 0, i32 5
  %12616 = getelementptr inbounds %struct.Reg, %struct.Reg* %12615, i32 0, i32 0
  %RCX.i734 = bitcast %union.anon* %12616 to i64*
  %12617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12618 = getelementptr inbounds %struct.GPR, %struct.GPR* %12617, i32 0, i32 15
  %12619 = getelementptr inbounds %struct.Reg, %struct.Reg* %12618, i32 0, i32 0
  %RBP.i735 = bitcast %union.anon* %12619 to i64*
  %12620 = load i64, i64* %RCX.i734
  %12621 = load i64, i64* %RBP.i735
  %12622 = sub i64 %12621, 56
  %12623 = load i64, i64* %PC.i733
  %12624 = add i64 %12623, 3
  store i64 %12624, i64* %PC.i733
  %12625 = trunc i64 %12620 to i32
  %12626 = inttoptr i64 %12622 to i32*
  %12627 = load i32, i32* %12626
  %12628 = add i32 %12627, %12625
  %12629 = zext i32 %12628 to i64
  store i64 %12629, i64* %RCX.i734, align 8
  %12630 = icmp ult i32 %12628, %12625
  %12631 = icmp ult i32 %12628, %12627
  %12632 = or i1 %12630, %12631
  %12633 = zext i1 %12632 to i8
  %12634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12633, i8* %12634, align 1
  %12635 = and i32 %12628, 255
  %12636 = call i32 @llvm.ctpop.i32(i32 %12635)
  %12637 = trunc i32 %12636 to i8
  %12638 = and i8 %12637, 1
  %12639 = xor i8 %12638, 1
  %12640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12639, i8* %12640, align 1
  %12641 = xor i32 %12627, %12625
  %12642 = xor i32 %12641, %12628
  %12643 = lshr i32 %12642, 4
  %12644 = trunc i32 %12643 to i8
  %12645 = and i8 %12644, 1
  %12646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12645, i8* %12646, align 1
  %12647 = icmp eq i32 %12628, 0
  %12648 = zext i1 %12647 to i8
  %12649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12648, i8* %12649, align 1
  %12650 = lshr i32 %12628, 31
  %12651 = trunc i32 %12650 to i8
  %12652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12651, i8* %12652, align 1
  %12653 = lshr i32 %12625, 31
  %12654 = lshr i32 %12627, 31
  %12655 = xor i32 %12650, %12653
  %12656 = xor i32 %12650, %12654
  %12657 = add i32 %12655, %12656
  %12658 = icmp eq i32 %12657, 2
  %12659 = zext i1 %12658 to i8
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12659, i8* %12660, align 1
  store %struct.Memory* %loadMem_43f77a, %struct.Memory** %MEMORY
  %loadMem_43f77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12662 = getelementptr inbounds %struct.GPR, %struct.GPR* %12661, i32 0, i32 33
  %12663 = getelementptr inbounds %struct.Reg, %struct.Reg* %12662, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %12663 to i64*
  %12664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12665 = getelementptr inbounds %struct.GPR, %struct.GPR* %12664, i32 0, i32 5
  %12666 = getelementptr inbounds %struct.Reg, %struct.Reg* %12665, i32 0, i32 0
  %ECX.i731 = bitcast %union.anon* %12666 to i32*
  %12667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12668 = getelementptr inbounds %struct.GPR, %struct.GPR* %12667, i32 0, i32 7
  %12669 = getelementptr inbounds %struct.Reg, %struct.Reg* %12668, i32 0, i32 0
  %RDX.i732 = bitcast %union.anon* %12669 to i64*
  %12670 = load i32, i32* %ECX.i731
  %12671 = zext i32 %12670 to i64
  %12672 = load i64, i64* %PC.i730
  %12673 = add i64 %12672, 3
  store i64 %12673, i64* %PC.i730
  %12674 = shl i64 %12671, 32
  %12675 = ashr exact i64 %12674, 32
  store i64 %12675, i64* %RDX.i732, align 8
  store %struct.Memory* %loadMem_43f77d, %struct.Memory** %MEMORY
  %loadMem_43f780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12677 = getelementptr inbounds %struct.GPR, %struct.GPR* %12676, i32 0, i32 33
  %12678 = getelementptr inbounds %struct.Reg, %struct.Reg* %12677, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %12678 to i64*
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12680 = getelementptr inbounds %struct.GPR, %struct.GPR* %12679, i32 0, i32 1
  %12681 = getelementptr inbounds %struct.Reg, %struct.Reg* %12680, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %12681 to i64*
  %12682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12683 = getelementptr inbounds %struct.GPR, %struct.GPR* %12682, i32 0, i32 5
  %12684 = getelementptr inbounds %struct.Reg, %struct.Reg* %12683, i32 0, i32 0
  %RCX.i728 = bitcast %union.anon* %12684 to i64*
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12686 = getelementptr inbounds %struct.GPR, %struct.GPR* %12685, i32 0, i32 7
  %12687 = getelementptr inbounds %struct.Reg, %struct.Reg* %12686, i32 0, i32 0
  %RDX.i729 = bitcast %union.anon* %12687 to i64*
  %12688 = load i64, i64* %RAX.i727
  %12689 = load i64, i64* %RDX.i729
  %12690 = mul i64 %12689, 4
  %12691 = add i64 %12690, %12688
  %12692 = load i64, i64* %PC.i726
  %12693 = add i64 %12692, 3
  store i64 %12693, i64* %PC.i726
  %12694 = inttoptr i64 %12691 to i32*
  %12695 = load i32, i32* %12694
  %12696 = zext i32 %12695 to i64
  store i64 %12696, i64* %RCX.i728, align 8
  store %struct.Memory* %loadMem_43f780, %struct.Memory** %MEMORY
  %loadMem_43f783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12698 = getelementptr inbounds %struct.GPR, %struct.GPR* %12697, i32 0, i32 33
  %12699 = getelementptr inbounds %struct.Reg, %struct.Reg* %12698, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %12699 to i64*
  %12700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12701 = getelementptr inbounds %struct.GPR, %struct.GPR* %12700, i32 0, i32 1
  %12702 = getelementptr inbounds %struct.Reg, %struct.Reg* %12701, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %12702 to i64*
  %12703 = load i64, i64* %PC.i724
  %12704 = add i64 %12703, 8
  store i64 %12704, i64* %PC.i724
  %12705 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12705, i64* %RAX.i725, align 8
  store %struct.Memory* %loadMem_43f783, %struct.Memory** %MEMORY
  %loadMem_43f78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12707 = getelementptr inbounds %struct.GPR, %struct.GPR* %12706, i32 0, i32 33
  %12708 = getelementptr inbounds %struct.Reg, %struct.Reg* %12707, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %12708 to i64*
  %12709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12710 = getelementptr inbounds %struct.GPR, %struct.GPR* %12709, i32 0, i32 1
  %12711 = getelementptr inbounds %struct.Reg, %struct.Reg* %12710, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %12711 to i64*
  %12712 = load i64, i64* %RAX.i723
  %12713 = load i64, i64* %PC.i722
  %12714 = add i64 %12713, 6
  store i64 %12714, i64* %PC.i722
  %12715 = add i64 13112, %12712
  store i64 %12715, i64* %RAX.i723, align 8
  %12716 = icmp ult i64 %12715, %12712
  %12717 = icmp ult i64 %12715, 13112
  %12718 = or i1 %12716, %12717
  %12719 = zext i1 %12718 to i8
  %12720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12719, i8* %12720, align 1
  %12721 = trunc i64 %12715 to i32
  %12722 = and i32 %12721, 255
  %12723 = call i32 @llvm.ctpop.i32(i32 %12722)
  %12724 = trunc i32 %12723 to i8
  %12725 = and i8 %12724, 1
  %12726 = xor i8 %12725, 1
  %12727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12726, i8* %12727, align 1
  %12728 = xor i64 13112, %12712
  %12729 = xor i64 %12728, %12715
  %12730 = lshr i64 %12729, 4
  %12731 = trunc i64 %12730 to i8
  %12732 = and i8 %12731, 1
  %12733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12732, i8* %12733, align 1
  %12734 = icmp eq i64 %12715, 0
  %12735 = zext i1 %12734 to i8
  %12736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12735, i8* %12736, align 1
  %12737 = lshr i64 %12715, 63
  %12738 = trunc i64 %12737 to i8
  %12739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12738, i8* %12739, align 1
  %12740 = lshr i64 %12712, 63
  %12741 = xor i64 %12737, %12740
  %12742 = add i64 %12741, %12737
  %12743 = icmp eq i64 %12742, 2
  %12744 = zext i1 %12743 to i8
  %12745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12744, i8* %12745, align 1
  store %struct.Memory* %loadMem_43f78b, %struct.Memory** %MEMORY
  %loadMem_43f791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12747 = getelementptr inbounds %struct.GPR, %struct.GPR* %12746, i32 0, i32 33
  %12748 = getelementptr inbounds %struct.Reg, %struct.Reg* %12747, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %12748 to i64*
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12750 = getelementptr inbounds %struct.GPR, %struct.GPR* %12749, i32 0, i32 9
  %12751 = getelementptr inbounds %struct.Reg, %struct.Reg* %12750, i32 0, i32 0
  %RSI.i720 = bitcast %union.anon* %12751 to i64*
  %12752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12753 = getelementptr inbounds %struct.GPR, %struct.GPR* %12752, i32 0, i32 15
  %12754 = getelementptr inbounds %struct.Reg, %struct.Reg* %12753, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %12754 to i64*
  %12755 = load i64, i64* %RBP.i721
  %12756 = sub i64 %12755, 72
  %12757 = load i64, i64* %PC.i719
  %12758 = add i64 %12757, 3
  store i64 %12758, i64* %PC.i719
  %12759 = inttoptr i64 %12756 to i32*
  %12760 = load i32, i32* %12759
  %12761 = zext i32 %12760 to i64
  store i64 %12761, i64* %RSI.i720, align 8
  store %struct.Memory* %loadMem_43f791, %struct.Memory** %MEMORY
  %loadMem_43f794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12763 = getelementptr inbounds %struct.GPR, %struct.GPR* %12762, i32 0, i32 33
  %12764 = getelementptr inbounds %struct.Reg, %struct.Reg* %12763, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %12764 to i64*
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12766 = getelementptr inbounds %struct.GPR, %struct.GPR* %12765, i32 0, i32 9
  %12767 = getelementptr inbounds %struct.Reg, %struct.Reg* %12766, i32 0, i32 0
  %RSI.i717 = bitcast %union.anon* %12767 to i64*
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12769 = getelementptr inbounds %struct.GPR, %struct.GPR* %12768, i32 0, i32 15
  %12770 = getelementptr inbounds %struct.Reg, %struct.Reg* %12769, i32 0, i32 0
  %RBP.i718 = bitcast %union.anon* %12770 to i64*
  %12771 = load i64, i64* %RSI.i717
  %12772 = load i64, i64* %RBP.i718
  %12773 = sub i64 %12772, 104
  %12774 = load i64, i64* %PC.i716
  %12775 = add i64 %12774, 3
  store i64 %12775, i64* %PC.i716
  %12776 = trunc i64 %12771 to i32
  %12777 = inttoptr i64 %12773 to i32*
  %12778 = load i32, i32* %12777
  %12779 = add i32 %12778, %12776
  %12780 = zext i32 %12779 to i64
  store i64 %12780, i64* %RSI.i717, align 8
  %12781 = icmp ult i32 %12779, %12776
  %12782 = icmp ult i32 %12779, %12778
  %12783 = or i1 %12781, %12782
  %12784 = zext i1 %12783 to i8
  %12785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12784, i8* %12785, align 1
  %12786 = and i32 %12779, 255
  %12787 = call i32 @llvm.ctpop.i32(i32 %12786)
  %12788 = trunc i32 %12787 to i8
  %12789 = and i8 %12788, 1
  %12790 = xor i8 %12789, 1
  %12791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12790, i8* %12791, align 1
  %12792 = xor i32 %12778, %12776
  %12793 = xor i32 %12792, %12779
  %12794 = lshr i32 %12793, 4
  %12795 = trunc i32 %12794 to i8
  %12796 = and i8 %12795, 1
  %12797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12796, i8* %12797, align 1
  %12798 = icmp eq i32 %12779, 0
  %12799 = zext i1 %12798 to i8
  %12800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12799, i8* %12800, align 1
  %12801 = lshr i32 %12779, 31
  %12802 = trunc i32 %12801 to i8
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12802, i8* %12803, align 1
  %12804 = lshr i32 %12776, 31
  %12805 = lshr i32 %12778, 31
  %12806 = xor i32 %12801, %12804
  %12807 = xor i32 %12801, %12805
  %12808 = add i32 %12806, %12807
  %12809 = icmp eq i32 %12808, 2
  %12810 = zext i1 %12809 to i8
  %12811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12810, i8* %12811, align 1
  store %struct.Memory* %loadMem_43f794, %struct.Memory** %MEMORY
  %loadMem_43f797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12813 = getelementptr inbounds %struct.GPR, %struct.GPR* %12812, i32 0, i32 33
  %12814 = getelementptr inbounds %struct.Reg, %struct.Reg* %12813, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %12814 to i64*
  %12815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12816 = getelementptr inbounds %struct.GPR, %struct.GPR* %12815, i32 0, i32 9
  %12817 = getelementptr inbounds %struct.Reg, %struct.Reg* %12816, i32 0, i32 0
  %ESI.i714 = bitcast %union.anon* %12817 to i32*
  %12818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12819 = getelementptr inbounds %struct.GPR, %struct.GPR* %12818, i32 0, i32 7
  %12820 = getelementptr inbounds %struct.Reg, %struct.Reg* %12819, i32 0, i32 0
  %RDX.i715 = bitcast %union.anon* %12820 to i64*
  %12821 = load i32, i32* %ESI.i714
  %12822 = zext i32 %12821 to i64
  %12823 = load i64, i64* %PC.i713
  %12824 = add i64 %12823, 3
  store i64 %12824, i64* %PC.i713
  %12825 = shl i64 %12822, 32
  %12826 = ashr exact i64 %12825, 32
  store i64 %12826, i64* %RDX.i715, align 8
  store %struct.Memory* %loadMem_43f797, %struct.Memory** %MEMORY
  %loadMem_43f79a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12828 = getelementptr inbounds %struct.GPR, %struct.GPR* %12827, i32 0, i32 33
  %12829 = getelementptr inbounds %struct.Reg, %struct.Reg* %12828, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %12829 to i64*
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12831 = getelementptr inbounds %struct.GPR, %struct.GPR* %12830, i32 0, i32 7
  %12832 = getelementptr inbounds %struct.Reg, %struct.Reg* %12831, i32 0, i32 0
  %RDX.i712 = bitcast %union.anon* %12832 to i64*
  %12833 = load i64, i64* %RDX.i712
  %12834 = load i64, i64* %PC.i711
  %12835 = add i64 %12834, 4
  store i64 %12835, i64* %PC.i711
  %12836 = shl i64 %12833, 5
  %12837 = icmp slt i64 %12836, 0
  %12838 = shl i64 %12836, 1
  store i64 %12838, i64* %RDX.i712, align 8
  %12839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12840 = zext i1 %12837 to i8
  store i8 %12840, i8* %12839, align 1
  %12841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12842 = trunc i64 %12838 to i32
  %12843 = and i32 %12842, 254
  %12844 = call i32 @llvm.ctpop.i32(i32 %12843)
  %12845 = trunc i32 %12844 to i8
  %12846 = and i8 %12845, 1
  %12847 = xor i8 %12846, 1
  store i8 %12847, i8* %12841, align 1
  %12848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12848, align 1
  %12849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12850 = icmp eq i64 %12838, 0
  %12851 = zext i1 %12850 to i8
  store i8 %12851, i8* %12849, align 1
  %12852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12853 = lshr i64 %12838, 63
  %12854 = trunc i64 %12853 to i8
  store i8 %12854, i8* %12852, align 1
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12855, align 1
  store %struct.Memory* %loadMem_43f79a, %struct.Memory** %MEMORY
  %loadMem_43f79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12857 = getelementptr inbounds %struct.GPR, %struct.GPR* %12856, i32 0, i32 33
  %12858 = getelementptr inbounds %struct.Reg, %struct.Reg* %12857, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %12858 to i64*
  %12859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12860 = getelementptr inbounds %struct.GPR, %struct.GPR* %12859, i32 0, i32 1
  %12861 = getelementptr inbounds %struct.Reg, %struct.Reg* %12860, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %12861 to i64*
  %12862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12863 = getelementptr inbounds %struct.GPR, %struct.GPR* %12862, i32 0, i32 7
  %12864 = getelementptr inbounds %struct.Reg, %struct.Reg* %12863, i32 0, i32 0
  %RDX.i710 = bitcast %union.anon* %12864 to i64*
  %12865 = load i64, i64* %RAX.i709
  %12866 = load i64, i64* %RDX.i710
  %12867 = load i64, i64* %PC.i708
  %12868 = add i64 %12867, 3
  store i64 %12868, i64* %PC.i708
  %12869 = add i64 %12866, %12865
  store i64 %12869, i64* %RAX.i709, align 8
  %12870 = icmp ult i64 %12869, %12865
  %12871 = icmp ult i64 %12869, %12866
  %12872 = or i1 %12870, %12871
  %12873 = zext i1 %12872 to i8
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12873, i8* %12874, align 1
  %12875 = trunc i64 %12869 to i32
  %12876 = and i32 %12875, 255
  %12877 = call i32 @llvm.ctpop.i32(i32 %12876)
  %12878 = trunc i32 %12877 to i8
  %12879 = and i8 %12878, 1
  %12880 = xor i8 %12879, 1
  %12881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12880, i8* %12881, align 1
  %12882 = xor i64 %12866, %12865
  %12883 = xor i64 %12882, %12869
  %12884 = lshr i64 %12883, 4
  %12885 = trunc i64 %12884 to i8
  %12886 = and i8 %12885, 1
  %12887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12886, i8* %12887, align 1
  %12888 = icmp eq i64 %12869, 0
  %12889 = zext i1 %12888 to i8
  %12890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12889, i8* %12890, align 1
  %12891 = lshr i64 %12869, 63
  %12892 = trunc i64 %12891 to i8
  %12893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12892, i8* %12893, align 1
  %12894 = lshr i64 %12865, 63
  %12895 = lshr i64 %12866, 63
  %12896 = xor i64 %12891, %12894
  %12897 = xor i64 %12891, %12895
  %12898 = add i64 %12896, %12897
  %12899 = icmp eq i64 %12898, 2
  %12900 = zext i1 %12899 to i8
  %12901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12900, i8* %12901, align 1
  store %struct.Memory* %loadMem_43f79e, %struct.Memory** %MEMORY
  %loadMem_43f7a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12903 = getelementptr inbounds %struct.GPR, %struct.GPR* %12902, i32 0, i32 33
  %12904 = getelementptr inbounds %struct.Reg, %struct.Reg* %12903, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %12904 to i64*
  %12905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12906 = getelementptr inbounds %struct.GPR, %struct.GPR* %12905, i32 0, i32 9
  %12907 = getelementptr inbounds %struct.Reg, %struct.Reg* %12906, i32 0, i32 0
  %RSI.i706 = bitcast %union.anon* %12907 to i64*
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12909 = getelementptr inbounds %struct.GPR, %struct.GPR* %12908, i32 0, i32 15
  %12910 = getelementptr inbounds %struct.Reg, %struct.Reg* %12909, i32 0, i32 0
  %RBP.i707 = bitcast %union.anon* %12910 to i64*
  %12911 = load i64, i64* %RBP.i707
  %12912 = sub i64 %12911, 76
  %12913 = load i64, i64* %PC.i705
  %12914 = add i64 %12913, 3
  store i64 %12914, i64* %PC.i705
  %12915 = inttoptr i64 %12912 to i32*
  %12916 = load i32, i32* %12915
  %12917 = zext i32 %12916 to i64
  store i64 %12917, i64* %RSI.i706, align 8
  store %struct.Memory* %loadMem_43f7a1, %struct.Memory** %MEMORY
  %loadMem_43f7a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12919 = getelementptr inbounds %struct.GPR, %struct.GPR* %12918, i32 0, i32 33
  %12920 = getelementptr inbounds %struct.Reg, %struct.Reg* %12919, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %12920 to i64*
  %12921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12922 = getelementptr inbounds %struct.GPR, %struct.GPR* %12921, i32 0, i32 9
  %12923 = getelementptr inbounds %struct.Reg, %struct.Reg* %12922, i32 0, i32 0
  %RSI.i703 = bitcast %union.anon* %12923 to i64*
  %12924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12925 = getelementptr inbounds %struct.GPR, %struct.GPR* %12924, i32 0, i32 15
  %12926 = getelementptr inbounds %struct.Reg, %struct.Reg* %12925, i32 0, i32 0
  %RBP.i704 = bitcast %union.anon* %12926 to i64*
  %12927 = load i64, i64* %RSI.i703
  %12928 = load i64, i64* %RBP.i704
  %12929 = sub i64 %12928, 108
  %12930 = load i64, i64* %PC.i702
  %12931 = add i64 %12930, 3
  store i64 %12931, i64* %PC.i702
  %12932 = trunc i64 %12927 to i32
  %12933 = inttoptr i64 %12929 to i32*
  %12934 = load i32, i32* %12933
  %12935 = add i32 %12934, %12932
  %12936 = zext i32 %12935 to i64
  store i64 %12936, i64* %RSI.i703, align 8
  %12937 = icmp ult i32 %12935, %12932
  %12938 = icmp ult i32 %12935, %12934
  %12939 = or i1 %12937, %12938
  %12940 = zext i1 %12939 to i8
  %12941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12940, i8* %12941, align 1
  %12942 = and i32 %12935, 255
  %12943 = call i32 @llvm.ctpop.i32(i32 %12942)
  %12944 = trunc i32 %12943 to i8
  %12945 = and i8 %12944, 1
  %12946 = xor i8 %12945, 1
  %12947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12946, i8* %12947, align 1
  %12948 = xor i32 %12934, %12932
  %12949 = xor i32 %12948, %12935
  %12950 = lshr i32 %12949, 4
  %12951 = trunc i32 %12950 to i8
  %12952 = and i8 %12951, 1
  %12953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12952, i8* %12953, align 1
  %12954 = icmp eq i32 %12935, 0
  %12955 = zext i1 %12954 to i8
  %12956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12955, i8* %12956, align 1
  %12957 = lshr i32 %12935, 31
  %12958 = trunc i32 %12957 to i8
  %12959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12958, i8* %12959, align 1
  %12960 = lshr i32 %12932, 31
  %12961 = lshr i32 %12934, 31
  %12962 = xor i32 %12957, %12960
  %12963 = xor i32 %12957, %12961
  %12964 = add i32 %12962, %12963
  %12965 = icmp eq i32 %12964, 2
  %12966 = zext i1 %12965 to i8
  %12967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12966, i8* %12967, align 1
  store %struct.Memory* %loadMem_43f7a4, %struct.Memory** %MEMORY
  %loadMem_43f7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12969 = getelementptr inbounds %struct.GPR, %struct.GPR* %12968, i32 0, i32 33
  %12970 = getelementptr inbounds %struct.Reg, %struct.Reg* %12969, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %12970 to i64*
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12972 = getelementptr inbounds %struct.GPR, %struct.GPR* %12971, i32 0, i32 9
  %12973 = getelementptr inbounds %struct.Reg, %struct.Reg* %12972, i32 0, i32 0
  %ESI.i700 = bitcast %union.anon* %12973 to i32*
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12975 = getelementptr inbounds %struct.GPR, %struct.GPR* %12974, i32 0, i32 7
  %12976 = getelementptr inbounds %struct.Reg, %struct.Reg* %12975, i32 0, i32 0
  %RDX.i701 = bitcast %union.anon* %12976 to i64*
  %12977 = load i32, i32* %ESI.i700
  %12978 = zext i32 %12977 to i64
  %12979 = load i64, i64* %PC.i699
  %12980 = add i64 %12979, 3
  store i64 %12980, i64* %PC.i699
  %12981 = shl i64 %12978, 32
  %12982 = ashr exact i64 %12981, 32
  store i64 %12982, i64* %RDX.i701, align 8
  store %struct.Memory* %loadMem_43f7a7, %struct.Memory** %MEMORY
  %loadMem_43f7aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12984 = getelementptr inbounds %struct.GPR, %struct.GPR* %12983, i32 0, i32 33
  %12985 = getelementptr inbounds %struct.Reg, %struct.Reg* %12984, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %12985 to i64*
  %12986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12987 = getelementptr inbounds %struct.GPR, %struct.GPR* %12986, i32 0, i32 5
  %12988 = getelementptr inbounds %struct.Reg, %struct.Reg* %12987, i32 0, i32 0
  %ECX.i696 = bitcast %union.anon* %12988 to i32*
  %12989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12990 = getelementptr inbounds %struct.GPR, %struct.GPR* %12989, i32 0, i32 1
  %12991 = getelementptr inbounds %struct.Reg, %struct.Reg* %12990, i32 0, i32 0
  %RAX.i697 = bitcast %union.anon* %12991 to i64*
  %12992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12993 = getelementptr inbounds %struct.GPR, %struct.GPR* %12992, i32 0, i32 7
  %12994 = getelementptr inbounds %struct.Reg, %struct.Reg* %12993, i32 0, i32 0
  %RDX.i698 = bitcast %union.anon* %12994 to i64*
  %12995 = load i64, i64* %RAX.i697
  %12996 = load i64, i64* %RDX.i698
  %12997 = mul i64 %12996, 4
  %12998 = add i64 %12997, %12995
  %12999 = load i32, i32* %ECX.i696
  %13000 = zext i32 %12999 to i64
  %13001 = load i64, i64* %PC.i695
  %13002 = add i64 %13001, 3
  store i64 %13002, i64* %PC.i695
  %13003 = inttoptr i64 %12998 to i32*
  store i32 %12999, i32* %13003
  store %struct.Memory* %loadMem_43f7aa, %struct.Memory** %MEMORY
  br label %block_.L_43f7ad

block_.L_43f7ad:                                  ; preds = %block_.L_43f75d, %block_43f712
  %loadMem_43f7ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13005 = getelementptr inbounds %struct.GPR, %struct.GPR* %13004, i32 0, i32 33
  %13006 = getelementptr inbounds %struct.Reg, %struct.Reg* %13005, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %13006 to i64*
  %13007 = load i64, i64* %PC.i694
  %13008 = add i64 %13007, 5
  %13009 = load i64, i64* %PC.i694
  %13010 = add i64 %13009, 5
  store i64 %13010, i64* %PC.i694
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13008, i64* %13011, align 8
  store %struct.Memory* %loadMem_43f7ad, %struct.Memory** %MEMORY
  br label %block_.L_43f7b2

block_.L_43f7b2:                                  ; preds = %block_.L_43f7ad
  %loadMem_43f7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13013 = getelementptr inbounds %struct.GPR, %struct.GPR* %13012, i32 0, i32 33
  %13014 = getelementptr inbounds %struct.Reg, %struct.Reg* %13013, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %13014 to i64*
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13016 = getelementptr inbounds %struct.GPR, %struct.GPR* %13015, i32 0, i32 1
  %13017 = getelementptr inbounds %struct.Reg, %struct.Reg* %13016, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %13017 to i64*
  %13018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13019 = getelementptr inbounds %struct.GPR, %struct.GPR* %13018, i32 0, i32 15
  %13020 = getelementptr inbounds %struct.Reg, %struct.Reg* %13019, i32 0, i32 0
  %RBP.i693 = bitcast %union.anon* %13020 to i64*
  %13021 = load i64, i64* %RBP.i693
  %13022 = sub i64 %13021, 72
  %13023 = load i64, i64* %PC.i691
  %13024 = add i64 %13023, 3
  store i64 %13024, i64* %PC.i691
  %13025 = inttoptr i64 %13022 to i32*
  %13026 = load i32, i32* %13025
  %13027 = zext i32 %13026 to i64
  store i64 %13027, i64* %RAX.i692, align 8
  store %struct.Memory* %loadMem_43f7b2, %struct.Memory** %MEMORY
  %loadMem_43f7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13029 = getelementptr inbounds %struct.GPR, %struct.GPR* %13028, i32 0, i32 33
  %13030 = getelementptr inbounds %struct.Reg, %struct.Reg* %13029, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %13030 to i64*
  %13031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13032 = getelementptr inbounds %struct.GPR, %struct.GPR* %13031, i32 0, i32 1
  %13033 = getelementptr inbounds %struct.Reg, %struct.Reg* %13032, i32 0, i32 0
  %RAX.i690 = bitcast %union.anon* %13033 to i64*
  %13034 = load i64, i64* %RAX.i690
  %13035 = load i64, i64* %PC.i689
  %13036 = add i64 %13035, 3
  store i64 %13036, i64* %PC.i689
  %13037 = trunc i64 %13034 to i32
  %13038 = add i32 1, %13037
  %13039 = zext i32 %13038 to i64
  store i64 %13039, i64* %RAX.i690, align 8
  %13040 = icmp ult i32 %13038, %13037
  %13041 = icmp ult i32 %13038, 1
  %13042 = or i1 %13040, %13041
  %13043 = zext i1 %13042 to i8
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13043, i8* %13044, align 1
  %13045 = and i32 %13038, 255
  %13046 = call i32 @llvm.ctpop.i32(i32 %13045)
  %13047 = trunc i32 %13046 to i8
  %13048 = and i8 %13047, 1
  %13049 = xor i8 %13048, 1
  %13050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13049, i8* %13050, align 1
  %13051 = xor i64 1, %13034
  %13052 = trunc i64 %13051 to i32
  %13053 = xor i32 %13052, %13038
  %13054 = lshr i32 %13053, 4
  %13055 = trunc i32 %13054 to i8
  %13056 = and i8 %13055, 1
  %13057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13056, i8* %13057, align 1
  %13058 = icmp eq i32 %13038, 0
  %13059 = zext i1 %13058 to i8
  %13060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13059, i8* %13060, align 1
  %13061 = lshr i32 %13038, 31
  %13062 = trunc i32 %13061 to i8
  %13063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13062, i8* %13063, align 1
  %13064 = lshr i32 %13037, 31
  %13065 = xor i32 %13061, %13064
  %13066 = add i32 %13065, %13061
  %13067 = icmp eq i32 %13066, 2
  %13068 = zext i1 %13067 to i8
  %13069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13068, i8* %13069, align 1
  store %struct.Memory* %loadMem_43f7b5, %struct.Memory** %MEMORY
  %loadMem_43f7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13071 = getelementptr inbounds %struct.GPR, %struct.GPR* %13070, i32 0, i32 33
  %13072 = getelementptr inbounds %struct.Reg, %struct.Reg* %13071, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %13072 to i64*
  %13073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13074 = getelementptr inbounds %struct.GPR, %struct.GPR* %13073, i32 0, i32 1
  %13075 = getelementptr inbounds %struct.Reg, %struct.Reg* %13074, i32 0, i32 0
  %EAX.i687 = bitcast %union.anon* %13075 to i32*
  %13076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13077 = getelementptr inbounds %struct.GPR, %struct.GPR* %13076, i32 0, i32 15
  %13078 = getelementptr inbounds %struct.Reg, %struct.Reg* %13077, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %13078 to i64*
  %13079 = load i64, i64* %RBP.i688
  %13080 = sub i64 %13079, 72
  %13081 = load i32, i32* %EAX.i687
  %13082 = zext i32 %13081 to i64
  %13083 = load i64, i64* %PC.i686
  %13084 = add i64 %13083, 3
  store i64 %13084, i64* %PC.i686
  %13085 = inttoptr i64 %13080 to i32*
  store i32 %13081, i32* %13085
  store %struct.Memory* %loadMem_43f7b8, %struct.Memory** %MEMORY
  %loadMem_43f7bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13087 = getelementptr inbounds %struct.GPR, %struct.GPR* %13086, i32 0, i32 33
  %13088 = getelementptr inbounds %struct.Reg, %struct.Reg* %13087, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %13088 to i64*
  %13089 = load i64, i64* %PC.i685
  %13090 = add i64 %13089, -694
  %13091 = load i64, i64* %PC.i685
  %13092 = add i64 %13091, 5
  store i64 %13092, i64* %PC.i685
  %13093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13090, i64* %13093, align 8
  store %struct.Memory* %loadMem_43f7bb, %struct.Memory** %MEMORY
  br label %block_.L_43f505

block_.L_43f7c0:                                  ; preds = %block_.L_43f505
  %loadMem_43f7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13095 = getelementptr inbounds %struct.GPR, %struct.GPR* %13094, i32 0, i32 33
  %13096 = getelementptr inbounds %struct.Reg, %struct.Reg* %13095, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %13096 to i64*
  %13097 = load i64, i64* %PC.i684
  %13098 = add i64 %13097, 5
  %13099 = load i64, i64* %PC.i684
  %13100 = add i64 %13099, 5
  store i64 %13100, i64* %PC.i684
  %13101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13098, i64* %13101, align 8
  store %struct.Memory* %loadMem_43f7c0, %struct.Memory** %MEMORY
  br label %block_.L_43f7c5

block_.L_43f7c5:                                  ; preds = %block_.L_43f7c0
  %loadMem_43f7c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 33
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %13104 to i64*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 1
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %RAX.i682 = bitcast %union.anon* %13107 to i64*
  %13108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13109 = getelementptr inbounds %struct.GPR, %struct.GPR* %13108, i32 0, i32 15
  %13110 = getelementptr inbounds %struct.Reg, %struct.Reg* %13109, i32 0, i32 0
  %RBP.i683 = bitcast %union.anon* %13110 to i64*
  %13111 = load i64, i64* %RBP.i683
  %13112 = sub i64 %13111, 76
  %13113 = load i64, i64* %PC.i681
  %13114 = add i64 %13113, 3
  store i64 %13114, i64* %PC.i681
  %13115 = inttoptr i64 %13112 to i32*
  %13116 = load i32, i32* %13115
  %13117 = zext i32 %13116 to i64
  store i64 %13117, i64* %RAX.i682, align 8
  store %struct.Memory* %loadMem_43f7c5, %struct.Memory** %MEMORY
  %loadMem_43f7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13119 = getelementptr inbounds %struct.GPR, %struct.GPR* %13118, i32 0, i32 33
  %13120 = getelementptr inbounds %struct.Reg, %struct.Reg* %13119, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %13120 to i64*
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13122 = getelementptr inbounds %struct.GPR, %struct.GPR* %13121, i32 0, i32 1
  %13123 = getelementptr inbounds %struct.Reg, %struct.Reg* %13122, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %13123 to i64*
  %13124 = load i64, i64* %RAX.i680
  %13125 = load i64, i64* %PC.i679
  %13126 = add i64 %13125, 3
  store i64 %13126, i64* %PC.i679
  %13127 = trunc i64 %13124 to i32
  %13128 = add i32 1, %13127
  %13129 = zext i32 %13128 to i64
  store i64 %13129, i64* %RAX.i680, align 8
  %13130 = icmp ult i32 %13128, %13127
  %13131 = icmp ult i32 %13128, 1
  %13132 = or i1 %13130, %13131
  %13133 = zext i1 %13132 to i8
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13133, i8* %13134, align 1
  %13135 = and i32 %13128, 255
  %13136 = call i32 @llvm.ctpop.i32(i32 %13135)
  %13137 = trunc i32 %13136 to i8
  %13138 = and i8 %13137, 1
  %13139 = xor i8 %13138, 1
  %13140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13139, i8* %13140, align 1
  %13141 = xor i64 1, %13124
  %13142 = trunc i64 %13141 to i32
  %13143 = xor i32 %13142, %13128
  %13144 = lshr i32 %13143, 4
  %13145 = trunc i32 %13144 to i8
  %13146 = and i8 %13145, 1
  %13147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13146, i8* %13147, align 1
  %13148 = icmp eq i32 %13128, 0
  %13149 = zext i1 %13148 to i8
  %13150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13149, i8* %13150, align 1
  %13151 = lshr i32 %13128, 31
  %13152 = trunc i32 %13151 to i8
  %13153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13152, i8* %13153, align 1
  %13154 = lshr i32 %13127, 31
  %13155 = xor i32 %13151, %13154
  %13156 = add i32 %13155, %13151
  %13157 = icmp eq i32 %13156, 2
  %13158 = zext i1 %13157 to i8
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13158, i8* %13159, align 1
  store %struct.Memory* %loadMem_43f7c8, %struct.Memory** %MEMORY
  %loadMem_43f7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13161 = getelementptr inbounds %struct.GPR, %struct.GPR* %13160, i32 0, i32 33
  %13162 = getelementptr inbounds %struct.Reg, %struct.Reg* %13161, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %13162 to i64*
  %13163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13164 = getelementptr inbounds %struct.GPR, %struct.GPR* %13163, i32 0, i32 1
  %13165 = getelementptr inbounds %struct.Reg, %struct.Reg* %13164, i32 0, i32 0
  %EAX.i677 = bitcast %union.anon* %13165 to i32*
  %13166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13167 = getelementptr inbounds %struct.GPR, %struct.GPR* %13166, i32 0, i32 15
  %13168 = getelementptr inbounds %struct.Reg, %struct.Reg* %13167, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %13168 to i64*
  %13169 = load i64, i64* %RBP.i678
  %13170 = sub i64 %13169, 76
  %13171 = load i32, i32* %EAX.i677
  %13172 = zext i32 %13171 to i64
  %13173 = load i64, i64* %PC.i676
  %13174 = add i64 %13173, 3
  store i64 %13174, i64* %PC.i676
  %13175 = inttoptr i64 %13170 to i32*
  store i32 %13171, i32* %13175
  store %struct.Memory* %loadMem_43f7cb, %struct.Memory** %MEMORY
  %loadMem_43f7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %13176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13177 = getelementptr inbounds %struct.GPR, %struct.GPR* %13176, i32 0, i32 33
  %13178 = getelementptr inbounds %struct.Reg, %struct.Reg* %13177, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %13178 to i64*
  %13179 = load i64, i64* %PC.i675
  %13180 = add i64 %13179, -730
  %13181 = load i64, i64* %PC.i675
  %13182 = add i64 %13181, 5
  store i64 %13182, i64* %PC.i675
  %13183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13180, i64* %13183, align 8
  store %struct.Memory* %loadMem_43f7ce, %struct.Memory** %MEMORY
  br label %block_.L_43f4f4

block_.L_43f7d3:                                  ; preds = %block_.L_43f4f4
  %loadMem_43f7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13185 = getelementptr inbounds %struct.GPR, %struct.GPR* %13184, i32 0, i32 33
  %13186 = getelementptr inbounds %struct.Reg, %struct.Reg* %13185, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %13186 to i64*
  %13187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13188 = getelementptr inbounds %struct.GPR, %struct.GPR* %13187, i32 0, i32 1
  %13189 = getelementptr inbounds %struct.Reg, %struct.Reg* %13188, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %13189 to i64*
  %13190 = load i64, i64* %PC.i673
  %13191 = add i64 %13190, 8
  store i64 %13191, i64* %PC.i673
  %13192 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13192, i64* %RAX.i674, align 8
  store %struct.Memory* %loadMem_43f7d3, %struct.Memory** %MEMORY
  %loadMem_43f7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %13193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13194 = getelementptr inbounds %struct.GPR, %struct.GPR* %13193, i32 0, i32 33
  %13195 = getelementptr inbounds %struct.Reg, %struct.Reg* %13194, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %13195 to i64*
  %13196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13197 = getelementptr inbounds %struct.GPR, %struct.GPR* %13196, i32 0, i32 1
  %13198 = getelementptr inbounds %struct.Reg, %struct.Reg* %13197, i32 0, i32 0
  %RAX.i672 = bitcast %union.anon* %13198 to i64*
  %13199 = load i64, i64* %RAX.i672
  %13200 = add i64 %13199, 72392
  %13201 = load i64, i64* %PC.i671
  %13202 = add i64 %13201, 7
  store i64 %13202, i64* %PC.i671
  %13203 = inttoptr i64 %13200 to i32*
  %13204 = load i32, i32* %13203
  %13205 = sub i32 %13204, 1
  %13206 = icmp ult i32 %13204, 1
  %13207 = zext i1 %13206 to i8
  %13208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13207, i8* %13208, align 1
  %13209 = and i32 %13205, 255
  %13210 = call i32 @llvm.ctpop.i32(i32 %13209)
  %13211 = trunc i32 %13210 to i8
  %13212 = and i8 %13211, 1
  %13213 = xor i8 %13212, 1
  %13214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13213, i8* %13214, align 1
  %13215 = xor i32 %13204, 1
  %13216 = xor i32 %13215, %13205
  %13217 = lshr i32 %13216, 4
  %13218 = trunc i32 %13217 to i8
  %13219 = and i8 %13218, 1
  %13220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13219, i8* %13220, align 1
  %13221 = icmp eq i32 %13205, 0
  %13222 = zext i1 %13221 to i8
  %13223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13222, i8* %13223, align 1
  %13224 = lshr i32 %13205, 31
  %13225 = trunc i32 %13224 to i8
  %13226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13225, i8* %13226, align 1
  %13227 = lshr i32 %13204, 31
  %13228 = xor i32 %13224, %13227
  %13229 = add i32 %13228, %13227
  %13230 = icmp eq i32 %13229, 2
  %13231 = zext i1 %13230 to i8
  %13232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13231, i8* %13232, align 1
  store %struct.Memory* %loadMem_43f7db, %struct.Memory** %MEMORY
  %loadMem_43f7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13234 = getelementptr inbounds %struct.GPR, %struct.GPR* %13233, i32 0, i32 33
  %13235 = getelementptr inbounds %struct.Reg, %struct.Reg* %13234, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %13235 to i64*
  %13236 = load i64, i64* %PC.i670
  %13237 = add i64 %13236, 277
  %13238 = load i64, i64* %PC.i670
  %13239 = add i64 %13238, 6
  %13240 = load i64, i64* %PC.i670
  %13241 = add i64 %13240, 6
  store i64 %13241, i64* %PC.i670
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13243 = load i8, i8* %13242, align 1
  store i8 %13243, i8* %BRANCH_TAKEN, align 1
  %13244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13245 = icmp ne i8 %13243, 0
  %13246 = select i1 %13245, i64 %13237, i64 %13239
  store i64 %13246, i64* %13244, align 8
  store %struct.Memory* %loadMem_43f7e2, %struct.Memory** %MEMORY
  %loadBr_43f7e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f7e2 = icmp eq i8 %loadBr_43f7e2, 1
  br i1 %cmpBr_43f7e2, label %block_.L_43f8f7, label %block_43f7e8

block_43f7e8:                                     ; preds = %block_.L_43f7d3
  %loadMem_43f7e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13248 = getelementptr inbounds %struct.GPR, %struct.GPR* %13247, i32 0, i32 33
  %13249 = getelementptr inbounds %struct.Reg, %struct.Reg* %13248, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %13249 to i64*
  %13250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13251 = getelementptr inbounds %struct.GPR, %struct.GPR* %13250, i32 0, i32 15
  %13252 = getelementptr inbounds %struct.Reg, %struct.Reg* %13251, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %13252 to i64*
  %13253 = load i64, i64* %RBP.i669
  %13254 = sub i64 %13253, 116
  %13255 = load i64, i64* %PC.i668
  %13256 = add i64 %13255, 4
  store i64 %13256, i64* %PC.i668
  %13257 = inttoptr i64 %13254 to i32*
  %13258 = load i32, i32* %13257
  %13259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13259, align 1
  %13260 = and i32 %13258, 255
  %13261 = call i32 @llvm.ctpop.i32(i32 %13260)
  %13262 = trunc i32 %13261 to i8
  %13263 = and i8 %13262, 1
  %13264 = xor i8 %13263, 1
  %13265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13264, i8* %13265, align 1
  %13266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13266, align 1
  %13267 = icmp eq i32 %13258, 0
  %13268 = zext i1 %13267 to i8
  %13269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13268, i8* %13269, align 1
  %13270 = lshr i32 %13258, 31
  %13271 = trunc i32 %13270 to i8
  %13272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13271, i8* %13272, align 1
  %13273 = lshr i32 %13258, 31
  %13274 = xor i32 %13270, %13273
  %13275 = add i32 %13274, %13273
  %13276 = icmp eq i32 %13275, 2
  %13277 = zext i1 %13276 to i8
  %13278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13277, i8* %13278, align 1
  store %struct.Memory* %loadMem_43f7e8, %struct.Memory** %MEMORY
  %loadMem_43f7ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13280 = getelementptr inbounds %struct.GPR, %struct.GPR* %13279, i32 0, i32 33
  %13281 = getelementptr inbounds %struct.Reg, %struct.Reg* %13280, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %13281 to i64*
  %13282 = load i64, i64* %PC.i667
  %13283 = add i64 %13282, 267
  %13284 = load i64, i64* %PC.i667
  %13285 = add i64 %13284, 6
  %13286 = load i64, i64* %PC.i667
  %13287 = add i64 %13286, 6
  store i64 %13287, i64* %PC.i667
  %13288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13289 = load i8, i8* %13288, align 1
  %13290 = icmp eq i8 %13289, 0
  %13291 = zext i1 %13290 to i8
  store i8 %13291, i8* %BRANCH_TAKEN, align 1
  %13292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13293 = select i1 %13290, i64 %13283, i64 %13285
  store i64 %13293, i64* %13292, align 8
  store %struct.Memory* %loadMem_43f7ec, %struct.Memory** %MEMORY
  %loadBr_43f7ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f7ec = icmp eq i8 %loadBr_43f7ec, 1
  br i1 %cmpBr_43f7ec, label %block_.L_43f8f7, label %block_43f7f2

block_43f7f2:                                     ; preds = %block_43f7e8
  %loadMem_43f7f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13295 = getelementptr inbounds %struct.GPR, %struct.GPR* %13294, i32 0, i32 33
  %13296 = getelementptr inbounds %struct.Reg, %struct.Reg* %13295, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %13296 to i64*
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13298 = getelementptr inbounds %struct.GPR, %struct.GPR* %13297, i32 0, i32 15
  %13299 = getelementptr inbounds %struct.Reg, %struct.Reg* %13298, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %13299 to i64*
  %13300 = load i64, i64* %RBP.i666
  %13301 = sub i64 %13300, 132
  %13302 = load i64, i64* %PC.i665
  %13303 = add i64 %13302, 7
  store i64 %13303, i64* %PC.i665
  %13304 = inttoptr i64 %13301 to i32*
  %13305 = load i32, i32* %13304
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13306, align 1
  %13307 = and i32 %13305, 255
  %13308 = call i32 @llvm.ctpop.i32(i32 %13307)
  %13309 = trunc i32 %13308 to i8
  %13310 = and i8 %13309, 1
  %13311 = xor i8 %13310, 1
  %13312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13311, i8* %13312, align 1
  %13313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13313, align 1
  %13314 = icmp eq i32 %13305, 0
  %13315 = zext i1 %13314 to i8
  %13316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13315, i8* %13316, align 1
  %13317 = lshr i32 %13305, 31
  %13318 = trunc i32 %13317 to i8
  %13319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13318, i8* %13319, align 1
  %13320 = lshr i32 %13305, 31
  %13321 = xor i32 %13317, %13320
  %13322 = add i32 %13321, %13320
  %13323 = icmp eq i32 %13322, 2
  %13324 = zext i1 %13323 to i8
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13324, i8* %13325, align 1
  store %struct.Memory* %loadMem_43f7f2, %struct.Memory** %MEMORY
  %loadMem_43f7f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13327 = getelementptr inbounds %struct.GPR, %struct.GPR* %13326, i32 0, i32 33
  %13328 = getelementptr inbounds %struct.Reg, %struct.Reg* %13327, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %13328 to i64*
  %13329 = load i64, i64* %PC.i664
  %13330 = add i64 %13329, 254
  %13331 = load i64, i64* %PC.i664
  %13332 = add i64 %13331, 6
  %13333 = load i64, i64* %PC.i664
  %13334 = add i64 %13333, 6
  store i64 %13334, i64* %PC.i664
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13336 = load i8, i8* %13335, align 1
  %13337 = icmp eq i8 %13336, 0
  %13338 = zext i1 %13337 to i8
  store i8 %13338, i8* %BRANCH_TAKEN, align 1
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13340 = select i1 %13337, i64 %13330, i64 %13332
  store i64 %13340, i64* %13339, align 8
  store %struct.Memory* %loadMem_43f7f9, %struct.Memory** %MEMORY
  %loadBr_43f7f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f7f9 = icmp eq i8 %loadBr_43f7f9, 1
  br i1 %cmpBr_43f7f9, label %block_.L_43f8f7, label %block_43f7ff

block_43f7ff:                                     ; preds = %block_43f7f2
  %loadMem_43f7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %13341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13342 = getelementptr inbounds %struct.GPR, %struct.GPR* %13341, i32 0, i32 33
  %13343 = getelementptr inbounds %struct.Reg, %struct.Reg* %13342, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %13343 to i64*
  %13344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13345 = getelementptr inbounds %struct.GPR, %struct.GPR* %13344, i32 0, i32 1
  %13346 = getelementptr inbounds %struct.Reg, %struct.Reg* %13345, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %13346 to i64*
  %13347 = load i64, i64* %PC.i662
  %13348 = add i64 %13347, 8
  store i64 %13348, i64* %PC.i662
  %13349 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13349, i64* %RAX.i663, align 8
  store %struct.Memory* %loadMem_43f7ff, %struct.Memory** %MEMORY
  %loadMem_43f807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13351 = getelementptr inbounds %struct.GPR, %struct.GPR* %13350, i32 0, i32 33
  %13352 = getelementptr inbounds %struct.Reg, %struct.Reg* %13351, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %13352 to i64*
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13354 = getelementptr inbounds %struct.GPR, %struct.GPR* %13353, i32 0, i32 1
  %13355 = getelementptr inbounds %struct.Reg, %struct.Reg* %13354, i32 0, i32 0
  %RAX.i661 = bitcast %union.anon* %13355 to i64*
  %13356 = load i64, i64* %RAX.i661
  %13357 = add i64 %13356, 24
  %13358 = load i64, i64* %PC.i660
  %13359 = add i64 %13358, 4
  store i64 %13359, i64* %PC.i660
  %13360 = inttoptr i64 %13357 to i32*
  %13361 = load i32, i32* %13360
  %13362 = sub i32 %13361, 3
  %13363 = icmp ult i32 %13361, 3
  %13364 = zext i1 %13363 to i8
  %13365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13364, i8* %13365, align 1
  %13366 = and i32 %13362, 255
  %13367 = call i32 @llvm.ctpop.i32(i32 %13366)
  %13368 = trunc i32 %13367 to i8
  %13369 = and i8 %13368, 1
  %13370 = xor i8 %13369, 1
  %13371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13370, i8* %13371, align 1
  %13372 = xor i32 %13361, 3
  %13373 = xor i32 %13372, %13362
  %13374 = lshr i32 %13373, 4
  %13375 = trunc i32 %13374 to i8
  %13376 = and i8 %13375, 1
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13376, i8* %13377, align 1
  %13378 = icmp eq i32 %13362, 0
  %13379 = zext i1 %13378 to i8
  %13380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13379, i8* %13380, align 1
  %13381 = lshr i32 %13362, 31
  %13382 = trunc i32 %13381 to i8
  %13383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13382, i8* %13383, align 1
  %13384 = lshr i32 %13361, 31
  %13385 = xor i32 %13381, %13384
  %13386 = add i32 %13385, %13384
  %13387 = icmp eq i32 %13386, 2
  %13388 = zext i1 %13387 to i8
  %13389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13388, i8* %13389, align 1
  store %struct.Memory* %loadMem_43f807, %struct.Memory** %MEMORY
  %loadMem_43f80b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13391 = getelementptr inbounds %struct.GPR, %struct.GPR* %13390, i32 0, i32 33
  %13392 = getelementptr inbounds %struct.Reg, %struct.Reg* %13391, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %13392 to i64*
  %13393 = load i64, i64* %PC.i659
  %13394 = add i64 %13393, 31
  %13395 = load i64, i64* %PC.i659
  %13396 = add i64 %13395, 6
  %13397 = load i64, i64* %PC.i659
  %13398 = add i64 %13397, 6
  store i64 %13398, i64* %PC.i659
  %13399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13400 = load i8, i8* %13399, align 1
  store i8 %13400, i8* %BRANCH_TAKEN, align 1
  %13401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13402 = icmp ne i8 %13400, 0
  %13403 = select i1 %13402, i64 %13394, i64 %13396
  store i64 %13403, i64* %13401, align 8
  store %struct.Memory* %loadMem_43f80b, %struct.Memory** %MEMORY
  %loadBr_43f80b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f80b = icmp eq i8 %loadBr_43f80b, 1
  br i1 %cmpBr_43f80b, label %block_.L_43f82a, label %block_43f811

block_43f811:                                     ; preds = %block_43f7ff
  %loadMem_43f811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13405 = getelementptr inbounds %struct.GPR, %struct.GPR* %13404, i32 0, i32 33
  %13406 = getelementptr inbounds %struct.Reg, %struct.Reg* %13405, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %13406 to i64*
  %13407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13408 = getelementptr inbounds %struct.GPR, %struct.GPR* %13407, i32 0, i32 7
  %13409 = getelementptr inbounds %struct.Reg, %struct.Reg* %13408, i32 0, i32 0
  %RDX.i657 = bitcast %union.anon* %13409 to i64*
  %13410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13411 = getelementptr inbounds %struct.GPR, %struct.GPR* %13410, i32 0, i32 15
  %13412 = getelementptr inbounds %struct.Reg, %struct.Reg* %13411, i32 0, i32 0
  %RBP.i658 = bitcast %union.anon* %13412 to i64*
  %13413 = load i64, i64* %RBP.i658
  %13414 = sub i64 %13413, 88
  %13415 = load i64, i64* %PC.i656
  %13416 = add i64 %13415, 4
  store i64 %13416, i64* %PC.i656
  store i64 %13414, i64* %RDX.i657, align 8
  store %struct.Memory* %loadMem_43f811, %struct.Memory** %MEMORY
  %loadMem_43f815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13418 = getelementptr inbounds %struct.GPR, %struct.GPR* %13417, i32 0, i32 33
  %13419 = getelementptr inbounds %struct.Reg, %struct.Reg* %13418, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %13419 to i64*
  %13420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13421 = getelementptr inbounds %struct.GPR, %struct.GPR* %13420, i32 0, i32 5
  %13422 = getelementptr inbounds %struct.Reg, %struct.Reg* %13421, i32 0, i32 0
  %ECX.i654 = bitcast %union.anon* %13422 to i32*
  %13423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13424 = getelementptr inbounds %struct.GPR, %struct.GPR* %13423, i32 0, i32 5
  %13425 = getelementptr inbounds %struct.Reg, %struct.Reg* %13424, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %13425 to i64*
  %13426 = load i64, i64* %RCX.i655
  %13427 = load i32, i32* %ECX.i654
  %13428 = zext i32 %13427 to i64
  %13429 = load i64, i64* %PC.i653
  %13430 = add i64 %13429, 2
  store i64 %13430, i64* %PC.i653
  %13431 = xor i64 %13428, %13426
  %13432 = trunc i64 %13431 to i32
  %13433 = and i64 %13431, 4294967295
  store i64 %13433, i64* %RCX.i655, align 8
  %13434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13434, align 1
  %13435 = and i32 %13432, 255
  %13436 = call i32 @llvm.ctpop.i32(i32 %13435)
  %13437 = trunc i32 %13436 to i8
  %13438 = and i8 %13437, 1
  %13439 = xor i8 %13438, 1
  %13440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13439, i8* %13440, align 1
  %13441 = icmp eq i32 %13432, 0
  %13442 = zext i1 %13441 to i8
  %13443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13442, i8* %13443, align 1
  %13444 = lshr i32 %13432, 31
  %13445 = trunc i32 %13444 to i8
  %13446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13445, i8* %13446, align 1
  %13447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13447, align 1
  %13448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13448, align 1
  store %struct.Memory* %loadMem_43f815, %struct.Memory** %MEMORY
  %loadMem_43f817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13450 = getelementptr inbounds %struct.GPR, %struct.GPR* %13449, i32 0, i32 33
  %13451 = getelementptr inbounds %struct.Reg, %struct.Reg* %13450, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %13451 to i64*
  %13452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13453 = getelementptr inbounds %struct.GPR, %struct.GPR* %13452, i32 0, i32 11
  %13454 = getelementptr inbounds %struct.Reg, %struct.Reg* %13453, i32 0, i32 0
  %RDI.i651 = bitcast %union.anon* %13454 to i64*
  %13455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13456 = getelementptr inbounds %struct.GPR, %struct.GPR* %13455, i32 0, i32 15
  %13457 = getelementptr inbounds %struct.Reg, %struct.Reg* %13456, i32 0, i32 0
  %RBP.i652 = bitcast %union.anon* %13457 to i64*
  %13458 = load i64, i64* %RBP.i652
  %13459 = sub i64 %13458, 60
  %13460 = load i64, i64* %PC.i650
  %13461 = add i64 %13460, 3
  store i64 %13461, i64* %PC.i650
  %13462 = inttoptr i64 %13459 to i32*
  %13463 = load i32, i32* %13462
  %13464 = zext i32 %13463 to i64
  store i64 %13464, i64* %RDI.i651, align 8
  store %struct.Memory* %loadMem_43f817, %struct.Memory** %MEMORY
  %loadMem_43f81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13466 = getelementptr inbounds %struct.GPR, %struct.GPR* %13465, i32 0, i32 33
  %13467 = getelementptr inbounds %struct.Reg, %struct.Reg* %13466, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %13467 to i64*
  %13468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13469 = getelementptr inbounds %struct.GPR, %struct.GPR* %13468, i32 0, i32 9
  %13470 = getelementptr inbounds %struct.Reg, %struct.Reg* %13469, i32 0, i32 0
  %RSI.i648 = bitcast %union.anon* %13470 to i64*
  %13471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13472 = getelementptr inbounds %struct.GPR, %struct.GPR* %13471, i32 0, i32 15
  %13473 = getelementptr inbounds %struct.Reg, %struct.Reg* %13472, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %13473 to i64*
  %13474 = load i64, i64* %RBP.i649
  %13475 = sub i64 %13474, 56
  %13476 = load i64, i64* %PC.i647
  %13477 = add i64 %13476, 3
  store i64 %13477, i64* %PC.i647
  %13478 = inttoptr i64 %13475 to i32*
  %13479 = load i32, i32* %13478
  %13480 = zext i32 %13479 to i64
  store i64 %13480, i64* %RSI.i648, align 8
  store %struct.Memory* %loadMem_43f81a, %struct.Memory** %MEMORY
  %loadMem1_43f81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13482 = getelementptr inbounds %struct.GPR, %struct.GPR* %13481, i32 0, i32 33
  %13483 = getelementptr inbounds %struct.Reg, %struct.Reg* %13482, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %13483 to i64*
  %13484 = load i64, i64* %PC.i646
  %13485 = add i64 %13484, -234957
  %13486 = load i64, i64* %PC.i646
  %13487 = add i64 %13486, 5
  %13488 = load i64, i64* %PC.i646
  %13489 = add i64 %13488, 5
  store i64 %13489, i64* %PC.i646
  %13490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13491 = load i64, i64* %13490, align 8
  %13492 = add i64 %13491, -8
  %13493 = inttoptr i64 %13492 to i64*
  store i64 %13487, i64* %13493
  store i64 %13492, i64* %13490, align 8
  %13494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13485, i64* %13494, align 8
  store %struct.Memory* %loadMem1_43f81d, %struct.Memory** %MEMORY
  %loadMem2_43f81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f81d = load i64, i64* %3
  %call2_43f81d = call %struct.Memory* @sub_406250.dct_luma(%struct.State* %0, i64 %loadPC_43f81d, %struct.Memory* %loadMem2_43f81d)
  store %struct.Memory* %call2_43f81d, %struct.Memory** %MEMORY
  %loadMem_43f822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13496 = getelementptr inbounds %struct.GPR, %struct.GPR* %13495, i32 0, i32 33
  %13497 = getelementptr inbounds %struct.Reg, %struct.Reg* %13496, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %13497 to i64*
  %13498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13499 = getelementptr inbounds %struct.GPR, %struct.GPR* %13498, i32 0, i32 1
  %13500 = getelementptr inbounds %struct.Reg, %struct.Reg* %13499, i32 0, i32 0
  %EAX.i644 = bitcast %union.anon* %13500 to i32*
  %13501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13502 = getelementptr inbounds %struct.GPR, %struct.GPR* %13501, i32 0, i32 15
  %13503 = getelementptr inbounds %struct.Reg, %struct.Reg* %13502, i32 0, i32 0
  %RBP.i645 = bitcast %union.anon* %13503 to i64*
  %13504 = load i64, i64* %RBP.i645
  %13505 = sub i64 %13504, 80
  %13506 = load i32, i32* %EAX.i644
  %13507 = zext i32 %13506 to i64
  %13508 = load i64, i64* %PC.i643
  %13509 = add i64 %13508, 3
  store i64 %13509, i64* %PC.i643
  %13510 = inttoptr i64 %13505 to i32*
  store i32 %13506, i32* %13510
  store %struct.Memory* %loadMem_43f822, %struct.Memory** %MEMORY
  %loadMem_43f825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13512 = getelementptr inbounds %struct.GPR, %struct.GPR* %13511, i32 0, i32 33
  %13513 = getelementptr inbounds %struct.Reg, %struct.Reg* %13512, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %13513 to i64*
  %13514 = load i64, i64* %PC.i642
  %13515 = add i64 %13514, 23
  %13516 = load i64, i64* %PC.i642
  %13517 = add i64 %13516, 5
  store i64 %13517, i64* %PC.i642
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13515, i64* %13518, align 8
  store %struct.Memory* %loadMem_43f825, %struct.Memory** %MEMORY
  br label %block_.L_43f83c

block_.L_43f82a:                                  ; preds = %block_43f7ff
  %loadMem_43f82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13520 = getelementptr inbounds %struct.GPR, %struct.GPR* %13519, i32 0, i32 33
  %13521 = getelementptr inbounds %struct.Reg, %struct.Reg* %13520, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %13521 to i64*
  %13522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13523 = getelementptr inbounds %struct.GPR, %struct.GPR* %13522, i32 0, i32 7
  %13524 = getelementptr inbounds %struct.Reg, %struct.Reg* %13523, i32 0, i32 0
  %RDX.i640 = bitcast %union.anon* %13524 to i64*
  %13525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13526 = getelementptr inbounds %struct.GPR, %struct.GPR* %13525, i32 0, i32 15
  %13527 = getelementptr inbounds %struct.Reg, %struct.Reg* %13526, i32 0, i32 0
  %RBP.i641 = bitcast %union.anon* %13527 to i64*
  %13528 = load i64, i64* %RBP.i641
  %13529 = sub i64 %13528, 88
  %13530 = load i64, i64* %PC.i639
  %13531 = add i64 %13530, 4
  store i64 %13531, i64* %PC.i639
  store i64 %13529, i64* %RDX.i640, align 8
  store %struct.Memory* %loadMem_43f82a, %struct.Memory** %MEMORY
  %loadMem_43f82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13533 = getelementptr inbounds %struct.GPR, %struct.GPR* %13532, i32 0, i32 33
  %13534 = getelementptr inbounds %struct.Reg, %struct.Reg* %13533, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %13534 to i64*
  %13535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13536 = getelementptr inbounds %struct.GPR, %struct.GPR* %13535, i32 0, i32 11
  %13537 = getelementptr inbounds %struct.Reg, %struct.Reg* %13536, i32 0, i32 0
  %RDI.i637 = bitcast %union.anon* %13537 to i64*
  %13538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13539 = getelementptr inbounds %struct.GPR, %struct.GPR* %13538, i32 0, i32 15
  %13540 = getelementptr inbounds %struct.Reg, %struct.Reg* %13539, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %13540 to i64*
  %13541 = load i64, i64* %RBP.i638
  %13542 = sub i64 %13541, 60
  %13543 = load i64, i64* %PC.i636
  %13544 = add i64 %13543, 3
  store i64 %13544, i64* %PC.i636
  %13545 = inttoptr i64 %13542 to i32*
  %13546 = load i32, i32* %13545
  %13547 = zext i32 %13546 to i64
  store i64 %13547, i64* %RDI.i637, align 8
  store %struct.Memory* %loadMem_43f82e, %struct.Memory** %MEMORY
  %loadMem_43f831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13549 = getelementptr inbounds %struct.GPR, %struct.GPR* %13548, i32 0, i32 33
  %13550 = getelementptr inbounds %struct.Reg, %struct.Reg* %13549, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %13550 to i64*
  %13551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13552 = getelementptr inbounds %struct.GPR, %struct.GPR* %13551, i32 0, i32 9
  %13553 = getelementptr inbounds %struct.Reg, %struct.Reg* %13552, i32 0, i32 0
  %RSI.i634 = bitcast %union.anon* %13553 to i64*
  %13554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13555 = getelementptr inbounds %struct.GPR, %struct.GPR* %13554, i32 0, i32 15
  %13556 = getelementptr inbounds %struct.Reg, %struct.Reg* %13555, i32 0, i32 0
  %RBP.i635 = bitcast %union.anon* %13556 to i64*
  %13557 = load i64, i64* %RBP.i635
  %13558 = sub i64 %13557, 56
  %13559 = load i64, i64* %PC.i633
  %13560 = add i64 %13559, 3
  store i64 %13560, i64* %PC.i633
  %13561 = inttoptr i64 %13558 to i32*
  %13562 = load i32, i32* %13561
  %13563 = zext i32 %13562 to i64
  store i64 %13563, i64* %RSI.i634, align 8
  store %struct.Memory* %loadMem_43f831, %struct.Memory** %MEMORY
  %loadMem1_43f834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13565 = getelementptr inbounds %struct.GPR, %struct.GPR* %13564, i32 0, i32 33
  %13566 = getelementptr inbounds %struct.Reg, %struct.Reg* %13565, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %13566 to i64*
  %13567 = load i64, i64* %PC.i632
  %13568 = add i64 %13567, -211540
  %13569 = load i64, i64* %PC.i632
  %13570 = add i64 %13569, 5
  %13571 = load i64, i64* %PC.i632
  %13572 = add i64 %13571, 5
  store i64 %13572, i64* %PC.i632
  %13573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13574 = load i64, i64* %13573, align 8
  %13575 = add i64 %13574, -8
  %13576 = inttoptr i64 %13575 to i64*
  store i64 %13570, i64* %13576
  store i64 %13575, i64* %13573, align 8
  %13577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13568, i64* %13577, align 8
  store %struct.Memory* %loadMem1_43f834, %struct.Memory** %MEMORY
  %loadMem2_43f834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f834 = load i64, i64* %3
  %call2_43f834 = call %struct.Memory* @sub_40bde0.dct_luma_sp(%struct.State* %0, i64 %loadPC_43f834, %struct.Memory* %loadMem2_43f834)
  store %struct.Memory* %call2_43f834, %struct.Memory** %MEMORY
  %loadMem_43f839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13579 = getelementptr inbounds %struct.GPR, %struct.GPR* %13578, i32 0, i32 33
  %13580 = getelementptr inbounds %struct.Reg, %struct.Reg* %13579, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %13580 to i64*
  %13581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13582 = getelementptr inbounds %struct.GPR, %struct.GPR* %13581, i32 0, i32 1
  %13583 = getelementptr inbounds %struct.Reg, %struct.Reg* %13582, i32 0, i32 0
  %EAX.i630 = bitcast %union.anon* %13583 to i32*
  %13584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13585 = getelementptr inbounds %struct.GPR, %struct.GPR* %13584, i32 0, i32 15
  %13586 = getelementptr inbounds %struct.Reg, %struct.Reg* %13585, i32 0, i32 0
  %RBP.i631 = bitcast %union.anon* %13586 to i64*
  %13587 = load i64, i64* %RBP.i631
  %13588 = sub i64 %13587, 80
  %13589 = load i32, i32* %EAX.i630
  %13590 = zext i32 %13589 to i64
  %13591 = load i64, i64* %PC.i629
  %13592 = add i64 %13591, 3
  store i64 %13592, i64* %PC.i629
  %13593 = inttoptr i64 %13588 to i32*
  store i32 %13589, i32* %13593
  store %struct.Memory* %loadMem_43f839, %struct.Memory** %MEMORY
  br label %block_.L_43f83c

block_.L_43f83c:                                  ; preds = %block_.L_43f82a, %block_43f811
  %loadMem_43f83c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13595 = getelementptr inbounds %struct.GPR, %struct.GPR* %13594, i32 0, i32 33
  %13596 = getelementptr inbounds %struct.Reg, %struct.Reg* %13595, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %13596 to i64*
  %13597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13598 = getelementptr inbounds %struct.GPR, %struct.GPR* %13597, i32 0, i32 15
  %13599 = getelementptr inbounds %struct.Reg, %struct.Reg* %13598, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %13599 to i64*
  %13600 = load i64, i64* %RBP.i628
  %13601 = sub i64 %13600, 76
  %13602 = load i64, i64* %PC.i627
  %13603 = add i64 %13602, 7
  store i64 %13603, i64* %PC.i627
  %13604 = inttoptr i64 %13601 to i32*
  store i32 0, i32* %13604
  store %struct.Memory* %loadMem_43f83c, %struct.Memory** %MEMORY
  br label %block_.L_43f843

block_.L_43f843:                                  ; preds = %block_.L_43f8b8, %block_.L_43f83c
  %loadMem_43f843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13606 = getelementptr inbounds %struct.GPR, %struct.GPR* %13605, i32 0, i32 33
  %13607 = getelementptr inbounds %struct.Reg, %struct.Reg* %13606, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %13607 to i64*
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13609 = getelementptr inbounds %struct.GPR, %struct.GPR* %13608, i32 0, i32 15
  %13610 = getelementptr inbounds %struct.Reg, %struct.Reg* %13609, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %13610 to i64*
  %13611 = load i64, i64* %RBP.i626
  %13612 = sub i64 %13611, 76
  %13613 = load i64, i64* %PC.i625
  %13614 = add i64 %13613, 4
  store i64 %13614, i64* %PC.i625
  %13615 = inttoptr i64 %13612 to i32*
  %13616 = load i32, i32* %13615
  %13617 = sub i32 %13616, 4
  %13618 = icmp ult i32 %13616, 4
  %13619 = zext i1 %13618 to i8
  %13620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13619, i8* %13620, align 1
  %13621 = and i32 %13617, 255
  %13622 = call i32 @llvm.ctpop.i32(i32 %13621)
  %13623 = trunc i32 %13622 to i8
  %13624 = and i8 %13623, 1
  %13625 = xor i8 %13624, 1
  %13626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13625, i8* %13626, align 1
  %13627 = xor i32 %13616, 4
  %13628 = xor i32 %13627, %13617
  %13629 = lshr i32 %13628, 4
  %13630 = trunc i32 %13629 to i8
  %13631 = and i8 %13630, 1
  %13632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13631, i8* %13632, align 1
  %13633 = icmp eq i32 %13617, 0
  %13634 = zext i1 %13633 to i8
  %13635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13634, i8* %13635, align 1
  %13636 = lshr i32 %13617, 31
  %13637 = trunc i32 %13636 to i8
  %13638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13637, i8* %13638, align 1
  %13639 = lshr i32 %13616, 31
  %13640 = xor i32 %13636, %13639
  %13641 = add i32 %13640, %13639
  %13642 = icmp eq i32 %13641, 2
  %13643 = zext i1 %13642 to i8
  %13644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13643, i8* %13644, align 1
  store %struct.Memory* %loadMem_43f843, %struct.Memory** %MEMORY
  %loadMem_43f847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13646 = getelementptr inbounds %struct.GPR, %struct.GPR* %13645, i32 0, i32 33
  %13647 = getelementptr inbounds %struct.Reg, %struct.Reg* %13646, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %13647 to i64*
  %13648 = load i64, i64* %PC.i624
  %13649 = add i64 %13648, 127
  %13650 = load i64, i64* %PC.i624
  %13651 = add i64 %13650, 6
  %13652 = load i64, i64* %PC.i624
  %13653 = add i64 %13652, 6
  store i64 %13653, i64* %PC.i624
  %13654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13655 = load i8, i8* %13654, align 1
  %13656 = icmp ne i8 %13655, 0
  %13657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13658 = load i8, i8* %13657, align 1
  %13659 = icmp ne i8 %13658, 0
  %13660 = xor i1 %13656, %13659
  %13661 = xor i1 %13660, true
  %13662 = zext i1 %13661 to i8
  store i8 %13662, i8* %BRANCH_TAKEN, align 1
  %13663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13664 = select i1 %13660, i64 %13651, i64 %13649
  store i64 %13664, i64* %13663, align 8
  store %struct.Memory* %loadMem_43f847, %struct.Memory** %MEMORY
  %loadBr_43f847 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f847 = icmp eq i8 %loadBr_43f847, 1
  br i1 %cmpBr_43f847, label %block_.L_43f8c6, label %block_43f84d

block_43f84d:                                     ; preds = %block_.L_43f843
  %loadMem_43f84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13666 = getelementptr inbounds %struct.GPR, %struct.GPR* %13665, i32 0, i32 33
  %13667 = getelementptr inbounds %struct.Reg, %struct.Reg* %13666, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %13667 to i64*
  %13668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13669 = getelementptr inbounds %struct.GPR, %struct.GPR* %13668, i32 0, i32 15
  %13670 = getelementptr inbounds %struct.Reg, %struct.Reg* %13669, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %13670 to i64*
  %13671 = load i64, i64* %RBP.i623
  %13672 = sub i64 %13671, 72
  %13673 = load i64, i64* %PC.i622
  %13674 = add i64 %13673, 7
  store i64 %13674, i64* %PC.i622
  %13675 = inttoptr i64 %13672 to i32*
  store i32 0, i32* %13675
  store %struct.Memory* %loadMem_43f84d, %struct.Memory** %MEMORY
  br label %block_.L_43f854

block_.L_43f854:                                  ; preds = %block_43f85e, %block_43f84d
  %loadMem_43f854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13677 = getelementptr inbounds %struct.GPR, %struct.GPR* %13676, i32 0, i32 33
  %13678 = getelementptr inbounds %struct.Reg, %struct.Reg* %13677, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %13678 to i64*
  %13679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13680 = getelementptr inbounds %struct.GPR, %struct.GPR* %13679, i32 0, i32 15
  %13681 = getelementptr inbounds %struct.Reg, %struct.Reg* %13680, i32 0, i32 0
  %RBP.i621 = bitcast %union.anon* %13681 to i64*
  %13682 = load i64, i64* %RBP.i621
  %13683 = sub i64 %13682, 72
  %13684 = load i64, i64* %PC.i620
  %13685 = add i64 %13684, 4
  store i64 %13685, i64* %PC.i620
  %13686 = inttoptr i64 %13683 to i32*
  %13687 = load i32, i32* %13686
  %13688 = sub i32 %13687, 4
  %13689 = icmp ult i32 %13687, 4
  %13690 = zext i1 %13689 to i8
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13690, i8* %13691, align 1
  %13692 = and i32 %13688, 255
  %13693 = call i32 @llvm.ctpop.i32(i32 %13692)
  %13694 = trunc i32 %13693 to i8
  %13695 = and i8 %13694, 1
  %13696 = xor i8 %13695, 1
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13696, i8* %13697, align 1
  %13698 = xor i32 %13687, 4
  %13699 = xor i32 %13698, %13688
  %13700 = lshr i32 %13699, 4
  %13701 = trunc i32 %13700 to i8
  %13702 = and i8 %13701, 1
  %13703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13702, i8* %13703, align 1
  %13704 = icmp eq i32 %13688, 0
  %13705 = zext i1 %13704 to i8
  %13706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13705, i8* %13706, align 1
  %13707 = lshr i32 %13688, 31
  %13708 = trunc i32 %13707 to i8
  %13709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13708, i8* %13709, align 1
  %13710 = lshr i32 %13687, 31
  %13711 = xor i32 %13707, %13710
  %13712 = add i32 %13711, %13710
  %13713 = icmp eq i32 %13712, 2
  %13714 = zext i1 %13713 to i8
  %13715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13714, i8* %13715, align 1
  store %struct.Memory* %loadMem_43f854, %struct.Memory** %MEMORY
  %loadMem_43f858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13717 = getelementptr inbounds %struct.GPR, %struct.GPR* %13716, i32 0, i32 33
  %13718 = getelementptr inbounds %struct.Reg, %struct.Reg* %13717, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %13718 to i64*
  %13719 = load i64, i64* %PC.i619
  %13720 = add i64 %13719, 91
  %13721 = load i64, i64* %PC.i619
  %13722 = add i64 %13721, 6
  %13723 = load i64, i64* %PC.i619
  %13724 = add i64 %13723, 6
  store i64 %13724, i64* %PC.i619
  %13725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13726 = load i8, i8* %13725, align 1
  %13727 = icmp ne i8 %13726, 0
  %13728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13729 = load i8, i8* %13728, align 1
  %13730 = icmp ne i8 %13729, 0
  %13731 = xor i1 %13727, %13730
  %13732 = xor i1 %13731, true
  %13733 = zext i1 %13732 to i8
  store i8 %13733, i8* %BRANCH_TAKEN, align 1
  %13734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13735 = select i1 %13731, i64 %13722, i64 %13720
  store i64 %13735, i64* %13734, align 8
  store %struct.Memory* %loadMem_43f858, %struct.Memory** %MEMORY
  %loadBr_43f858 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f858 = icmp eq i8 %loadBr_43f858, 1
  br i1 %cmpBr_43f858, label %block_.L_43f8b3, label %block_43f85e

block_43f85e:                                     ; preds = %block_.L_43f854
  %loadMem_43f85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13737 = getelementptr inbounds %struct.GPR, %struct.GPR* %13736, i32 0, i32 33
  %13738 = getelementptr inbounds %struct.Reg, %struct.Reg* %13737, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %13738 to i64*
  %13739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13740 = getelementptr inbounds %struct.GPR, %struct.GPR* %13739, i32 0, i32 1
  %13741 = getelementptr inbounds %struct.Reg, %struct.Reg* %13740, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %13741 to i64*
  %13742 = load i64, i64* %PC.i617
  %13743 = add i64 %13742, 10
  store i64 %13743, i64* %PC.i617
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RAX.i618, align 8
  store %struct.Memory* %loadMem_43f85e, %struct.Memory** %MEMORY
  %loadMem_43f868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13745 = getelementptr inbounds %struct.GPR, %struct.GPR* %13744, i32 0, i32 33
  %13746 = getelementptr inbounds %struct.Reg, %struct.Reg* %13745, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %13746 to i64*
  %13747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13748 = getelementptr inbounds %struct.GPR, %struct.GPR* %13747, i32 0, i32 5
  %13749 = getelementptr inbounds %struct.Reg, %struct.Reg* %13748, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %13749 to i64*
  %13750 = load i64, i64* %PC.i615
  %13751 = add i64 %13750, 8
  store i64 %13751, i64* %PC.i615
  %13752 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13752, i64* %RCX.i616, align 8
  store %struct.Memory* %loadMem_43f868, %struct.Memory** %MEMORY
  %loadMem_43f870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13754 = getelementptr inbounds %struct.GPR, %struct.GPR* %13753, i32 0, i32 33
  %13755 = getelementptr inbounds %struct.Reg, %struct.Reg* %13754, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %13755 to i64*
  %13756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13757 = getelementptr inbounds %struct.GPR, %struct.GPR* %13756, i32 0, i32 5
  %13758 = getelementptr inbounds %struct.Reg, %struct.Reg* %13757, i32 0, i32 0
  %RCX.i614 = bitcast %union.anon* %13758 to i64*
  %13759 = load i64, i64* %RCX.i614
  %13760 = load i64, i64* %PC.i613
  %13761 = add i64 %13760, 7
  store i64 %13761, i64* %PC.i613
  %13762 = add i64 13112, %13759
  store i64 %13762, i64* %RCX.i614, align 8
  %13763 = icmp ult i64 %13762, %13759
  %13764 = icmp ult i64 %13762, 13112
  %13765 = or i1 %13763, %13764
  %13766 = zext i1 %13765 to i8
  %13767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13766, i8* %13767, align 1
  %13768 = trunc i64 %13762 to i32
  %13769 = and i32 %13768, 255
  %13770 = call i32 @llvm.ctpop.i32(i32 %13769)
  %13771 = trunc i32 %13770 to i8
  %13772 = and i8 %13771, 1
  %13773 = xor i8 %13772, 1
  %13774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13773, i8* %13774, align 1
  %13775 = xor i64 13112, %13759
  %13776 = xor i64 %13775, %13762
  %13777 = lshr i64 %13776, 4
  %13778 = trunc i64 %13777 to i8
  %13779 = and i8 %13778, 1
  %13780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13779, i8* %13780, align 1
  %13781 = icmp eq i64 %13762, 0
  %13782 = zext i1 %13781 to i8
  %13783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13782, i8* %13783, align 1
  %13784 = lshr i64 %13762, 63
  %13785 = trunc i64 %13784 to i8
  %13786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13785, i8* %13786, align 1
  %13787 = lshr i64 %13759, 63
  %13788 = xor i64 %13784, %13787
  %13789 = add i64 %13788, %13784
  %13790 = icmp eq i64 %13789, 2
  %13791 = zext i1 %13790 to i8
  %13792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13791, i8* %13792, align 1
  store %struct.Memory* %loadMem_43f870, %struct.Memory** %MEMORY
  %loadMem_43f877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13794 = getelementptr inbounds %struct.GPR, %struct.GPR* %13793, i32 0, i32 33
  %13795 = getelementptr inbounds %struct.Reg, %struct.Reg* %13794, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %13795 to i64*
  %13796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13797 = getelementptr inbounds %struct.GPR, %struct.GPR* %13796, i32 0, i32 7
  %13798 = getelementptr inbounds %struct.Reg, %struct.Reg* %13797, i32 0, i32 0
  %RDX.i611 = bitcast %union.anon* %13798 to i64*
  %13799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13800 = getelementptr inbounds %struct.GPR, %struct.GPR* %13799, i32 0, i32 15
  %13801 = getelementptr inbounds %struct.Reg, %struct.Reg* %13800, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %13801 to i64*
  %13802 = load i64, i64* %RBP.i612
  %13803 = sub i64 %13802, 72
  %13804 = load i64, i64* %PC.i610
  %13805 = add i64 %13804, 4
  store i64 %13805, i64* %PC.i610
  %13806 = inttoptr i64 %13803 to i32*
  %13807 = load i32, i32* %13806
  %13808 = sext i32 %13807 to i64
  store i64 %13808, i64* %RDX.i611, align 8
  store %struct.Memory* %loadMem_43f877, %struct.Memory** %MEMORY
  %loadMem_43f87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13810 = getelementptr inbounds %struct.GPR, %struct.GPR* %13809, i32 0, i32 33
  %13811 = getelementptr inbounds %struct.Reg, %struct.Reg* %13810, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %13811 to i64*
  %13812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13813 = getelementptr inbounds %struct.GPR, %struct.GPR* %13812, i32 0, i32 7
  %13814 = getelementptr inbounds %struct.Reg, %struct.Reg* %13813, i32 0, i32 0
  %RDX.i609 = bitcast %union.anon* %13814 to i64*
  %13815 = load i64, i64* %RDX.i609
  %13816 = load i64, i64* %PC.i608
  %13817 = add i64 %13816, 4
  store i64 %13817, i64* %PC.i608
  %13818 = shl i64 %13815, 5
  %13819 = icmp slt i64 %13818, 0
  %13820 = shl i64 %13818, 1
  store i64 %13820, i64* %RDX.i609, align 8
  %13821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13822 = zext i1 %13819 to i8
  store i8 %13822, i8* %13821, align 1
  %13823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13824 = trunc i64 %13820 to i32
  %13825 = and i32 %13824, 254
  %13826 = call i32 @llvm.ctpop.i32(i32 %13825)
  %13827 = trunc i32 %13826 to i8
  %13828 = and i8 %13827, 1
  %13829 = xor i8 %13828, 1
  store i8 %13829, i8* %13823, align 1
  %13830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13830, align 1
  %13831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13832 = icmp eq i64 %13820, 0
  %13833 = zext i1 %13832 to i8
  store i8 %13833, i8* %13831, align 1
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13835 = lshr i64 %13820, 63
  %13836 = trunc i64 %13835 to i8
  store i8 %13836, i8* %13834, align 1
  %13837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13837, align 1
  store %struct.Memory* %loadMem_43f87b, %struct.Memory** %MEMORY
  %loadMem_43f87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13839 = getelementptr inbounds %struct.GPR, %struct.GPR* %13838, i32 0, i32 33
  %13840 = getelementptr inbounds %struct.Reg, %struct.Reg* %13839, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %13840 to i64*
  %13841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13842 = getelementptr inbounds %struct.GPR, %struct.GPR* %13841, i32 0, i32 5
  %13843 = getelementptr inbounds %struct.Reg, %struct.Reg* %13842, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %13843 to i64*
  %13844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13845 = getelementptr inbounds %struct.GPR, %struct.GPR* %13844, i32 0, i32 7
  %13846 = getelementptr inbounds %struct.Reg, %struct.Reg* %13845, i32 0, i32 0
  %RDX.i607 = bitcast %union.anon* %13846 to i64*
  %13847 = load i64, i64* %RCX.i606
  %13848 = load i64, i64* %RDX.i607
  %13849 = load i64, i64* %PC.i605
  %13850 = add i64 %13849, 3
  store i64 %13850, i64* %PC.i605
  %13851 = add i64 %13848, %13847
  store i64 %13851, i64* %RCX.i606, align 8
  %13852 = icmp ult i64 %13851, %13847
  %13853 = icmp ult i64 %13851, %13848
  %13854 = or i1 %13852, %13853
  %13855 = zext i1 %13854 to i8
  %13856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13855, i8* %13856, align 1
  %13857 = trunc i64 %13851 to i32
  %13858 = and i32 %13857, 255
  %13859 = call i32 @llvm.ctpop.i32(i32 %13858)
  %13860 = trunc i32 %13859 to i8
  %13861 = and i8 %13860, 1
  %13862 = xor i8 %13861, 1
  %13863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13862, i8* %13863, align 1
  %13864 = xor i64 %13848, %13847
  %13865 = xor i64 %13864, %13851
  %13866 = lshr i64 %13865, 4
  %13867 = trunc i64 %13866 to i8
  %13868 = and i8 %13867, 1
  %13869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13868, i8* %13869, align 1
  %13870 = icmp eq i64 %13851, 0
  %13871 = zext i1 %13870 to i8
  %13872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13871, i8* %13872, align 1
  %13873 = lshr i64 %13851, 63
  %13874 = trunc i64 %13873 to i8
  %13875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13874, i8* %13875, align 1
  %13876 = lshr i64 %13847, 63
  %13877 = lshr i64 %13848, 63
  %13878 = xor i64 %13873, %13876
  %13879 = xor i64 %13873, %13877
  %13880 = add i64 %13878, %13879
  %13881 = icmp eq i64 %13880, 2
  %13882 = zext i1 %13881 to i8
  %13883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13882, i8* %13883, align 1
  store %struct.Memory* %loadMem_43f87f, %struct.Memory** %MEMORY
  %loadMem_43f882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13885 = getelementptr inbounds %struct.GPR, %struct.GPR* %13884, i32 0, i32 33
  %13886 = getelementptr inbounds %struct.Reg, %struct.Reg* %13885, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %13886 to i64*
  %13887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13888 = getelementptr inbounds %struct.GPR, %struct.GPR* %13887, i32 0, i32 7
  %13889 = getelementptr inbounds %struct.Reg, %struct.Reg* %13888, i32 0, i32 0
  %RDX.i603 = bitcast %union.anon* %13889 to i64*
  %13890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13891 = getelementptr inbounds %struct.GPR, %struct.GPR* %13890, i32 0, i32 15
  %13892 = getelementptr inbounds %struct.Reg, %struct.Reg* %13891, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %13892 to i64*
  %13893 = load i64, i64* %RBP.i604
  %13894 = sub i64 %13893, 76
  %13895 = load i64, i64* %PC.i602
  %13896 = add i64 %13895, 4
  store i64 %13896, i64* %PC.i602
  %13897 = inttoptr i64 %13894 to i32*
  %13898 = load i32, i32* %13897
  %13899 = sext i32 %13898 to i64
  store i64 %13899, i64* %RDX.i603, align 8
  store %struct.Memory* %loadMem_43f882, %struct.Memory** %MEMORY
  %loadMem_43f886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13901 = getelementptr inbounds %struct.GPR, %struct.GPR* %13900, i32 0, i32 33
  %13902 = getelementptr inbounds %struct.Reg, %struct.Reg* %13901, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %13902 to i64*
  %13903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13904 = getelementptr inbounds %struct.GPR, %struct.GPR* %13903, i32 0, i32 5
  %13905 = getelementptr inbounds %struct.Reg, %struct.Reg* %13904, i32 0, i32 0
  %RCX.i599 = bitcast %union.anon* %13905 to i64*
  %13906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13907 = getelementptr inbounds %struct.GPR, %struct.GPR* %13906, i32 0, i32 7
  %13908 = getelementptr inbounds %struct.Reg, %struct.Reg* %13907, i32 0, i32 0
  %RDX.i600 = bitcast %union.anon* %13908 to i64*
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 9
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %RSI.i601 = bitcast %union.anon* %13911 to i64*
  %13912 = load i64, i64* %RCX.i599
  %13913 = load i64, i64* %RDX.i600
  %13914 = mul i64 %13913, 4
  %13915 = add i64 %13914, %13912
  %13916 = load i64, i64* %PC.i598
  %13917 = add i64 %13916, 3
  store i64 %13917, i64* %PC.i598
  %13918 = inttoptr i64 %13915 to i32*
  %13919 = load i32, i32* %13918
  %13920 = zext i32 %13919 to i64
  store i64 %13920, i64* %RSI.i601, align 8
  store %struct.Memory* %loadMem_43f886, %struct.Memory** %MEMORY
  %loadMem_43f889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13922 = getelementptr inbounds %struct.GPR, %struct.GPR* %13921, i32 0, i32 33
  %13923 = getelementptr inbounds %struct.Reg, %struct.Reg* %13922, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %13923 to i64*
  %13924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13925 = getelementptr inbounds %struct.GPR, %struct.GPR* %13924, i32 0, i32 11
  %13926 = getelementptr inbounds %struct.Reg, %struct.Reg* %13925, i32 0, i32 0
  %RDI.i596 = bitcast %union.anon* %13926 to i64*
  %13927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13928 = getelementptr inbounds %struct.GPR, %struct.GPR* %13927, i32 0, i32 15
  %13929 = getelementptr inbounds %struct.Reg, %struct.Reg* %13928, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %13929 to i64*
  %13930 = load i64, i64* %RBP.i597
  %13931 = sub i64 %13930, 72
  %13932 = load i64, i64* %PC.i595
  %13933 = add i64 %13932, 3
  store i64 %13933, i64* %PC.i595
  %13934 = inttoptr i64 %13931 to i32*
  %13935 = load i32, i32* %13934
  %13936 = zext i32 %13935 to i64
  store i64 %13936, i64* %RDI.i596, align 8
  store %struct.Memory* %loadMem_43f889, %struct.Memory** %MEMORY
  %loadMem_43f88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13938 = getelementptr inbounds %struct.GPR, %struct.GPR* %13937, i32 0, i32 33
  %13939 = getelementptr inbounds %struct.Reg, %struct.Reg* %13938, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %13939 to i64*
  %13940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13941 = getelementptr inbounds %struct.GPR, %struct.GPR* %13940, i32 0, i32 11
  %13942 = getelementptr inbounds %struct.Reg, %struct.Reg* %13941, i32 0, i32 0
  %RDI.i593 = bitcast %union.anon* %13942 to i64*
  %13943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13944 = getelementptr inbounds %struct.GPR, %struct.GPR* %13943, i32 0, i32 15
  %13945 = getelementptr inbounds %struct.Reg, %struct.Reg* %13944, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %13945 to i64*
  %13946 = load i64, i64* %RDI.i593
  %13947 = load i64, i64* %RBP.i594
  %13948 = sub i64 %13947, 60
  %13949 = load i64, i64* %PC.i592
  %13950 = add i64 %13949, 3
  store i64 %13950, i64* %PC.i592
  %13951 = trunc i64 %13946 to i32
  %13952 = inttoptr i64 %13948 to i32*
  %13953 = load i32, i32* %13952
  %13954 = add i32 %13953, %13951
  %13955 = zext i32 %13954 to i64
  store i64 %13955, i64* %RDI.i593, align 8
  %13956 = icmp ult i32 %13954, %13951
  %13957 = icmp ult i32 %13954, %13953
  %13958 = or i1 %13956, %13957
  %13959 = zext i1 %13958 to i8
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13959, i8* %13960, align 1
  %13961 = and i32 %13954, 255
  %13962 = call i32 @llvm.ctpop.i32(i32 %13961)
  %13963 = trunc i32 %13962 to i8
  %13964 = and i8 %13963, 1
  %13965 = xor i8 %13964, 1
  %13966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13965, i8* %13966, align 1
  %13967 = xor i32 %13953, %13951
  %13968 = xor i32 %13967, %13954
  %13969 = lshr i32 %13968, 4
  %13970 = trunc i32 %13969 to i8
  %13971 = and i8 %13970, 1
  %13972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13971, i8* %13972, align 1
  %13973 = icmp eq i32 %13954, 0
  %13974 = zext i1 %13973 to i8
  %13975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13974, i8* %13975, align 1
  %13976 = lshr i32 %13954, 31
  %13977 = trunc i32 %13976 to i8
  %13978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13977, i8* %13978, align 1
  %13979 = lshr i32 %13951, 31
  %13980 = lshr i32 %13953, 31
  %13981 = xor i32 %13976, %13979
  %13982 = xor i32 %13976, %13980
  %13983 = add i32 %13981, %13982
  %13984 = icmp eq i32 %13983, 2
  %13985 = zext i1 %13984 to i8
  %13986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13985, i8* %13986, align 1
  store %struct.Memory* %loadMem_43f88c, %struct.Memory** %MEMORY
  %loadMem_43f88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13988 = getelementptr inbounds %struct.GPR, %struct.GPR* %13987, i32 0, i32 33
  %13989 = getelementptr inbounds %struct.Reg, %struct.Reg* %13988, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %13989 to i64*
  %13990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13991 = getelementptr inbounds %struct.GPR, %struct.GPR* %13990, i32 0, i32 11
  %13992 = getelementptr inbounds %struct.Reg, %struct.Reg* %13991, i32 0, i32 0
  %EDI.i590 = bitcast %union.anon* %13992 to i32*
  %13993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13994 = getelementptr inbounds %struct.GPR, %struct.GPR* %13993, i32 0, i32 5
  %13995 = getelementptr inbounds %struct.Reg, %struct.Reg* %13994, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %13995 to i64*
  %13996 = load i32, i32* %EDI.i590
  %13997 = zext i32 %13996 to i64
  %13998 = load i64, i64* %PC.i589
  %13999 = add i64 %13998, 3
  store i64 %13999, i64* %PC.i589
  %14000 = shl i64 %13997, 32
  %14001 = ashr exact i64 %14000, 32
  store i64 %14001, i64* %RCX.i591, align 8
  store %struct.Memory* %loadMem_43f88f, %struct.Memory** %MEMORY
  %loadMem_43f892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14003 = getelementptr inbounds %struct.GPR, %struct.GPR* %14002, i32 0, i32 33
  %14004 = getelementptr inbounds %struct.Reg, %struct.Reg* %14003, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %14004 to i64*
  %14005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14006 = getelementptr inbounds %struct.GPR, %struct.GPR* %14005, i32 0, i32 5
  %14007 = getelementptr inbounds %struct.Reg, %struct.Reg* %14006, i32 0, i32 0
  %RCX.i588 = bitcast %union.anon* %14007 to i64*
  %14008 = load i64, i64* %RCX.i588
  %14009 = load i64, i64* %PC.i587
  %14010 = add i64 %14009, 4
  store i64 %14010, i64* %PC.i587
  %14011 = shl i64 %14008, 5
  %14012 = icmp slt i64 %14011, 0
  %14013 = shl i64 %14011, 1
  store i64 %14013, i64* %RCX.i588, align 8
  %14014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14015 = zext i1 %14012 to i8
  store i8 %14015, i8* %14014, align 1
  %14016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14017 = trunc i64 %14013 to i32
  %14018 = and i32 %14017, 254
  %14019 = call i32 @llvm.ctpop.i32(i32 %14018)
  %14020 = trunc i32 %14019 to i8
  %14021 = and i8 %14020, 1
  %14022 = xor i8 %14021, 1
  store i8 %14022, i8* %14016, align 1
  %14023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14023, align 1
  %14024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14025 = icmp eq i64 %14013, 0
  %14026 = zext i1 %14025 to i8
  store i8 %14026, i8* %14024, align 1
  %14027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14028 = lshr i64 %14013, 63
  %14029 = trunc i64 %14028 to i8
  store i8 %14029, i8* %14027, align 1
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14030, align 1
  store %struct.Memory* %loadMem_43f892, %struct.Memory** %MEMORY
  %loadMem_43f896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14032 = getelementptr inbounds %struct.GPR, %struct.GPR* %14031, i32 0, i32 33
  %14033 = getelementptr inbounds %struct.Reg, %struct.Reg* %14032, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %14033 to i64*
  %14034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14035 = getelementptr inbounds %struct.GPR, %struct.GPR* %14034, i32 0, i32 1
  %14036 = getelementptr inbounds %struct.Reg, %struct.Reg* %14035, i32 0, i32 0
  %RAX.i585 = bitcast %union.anon* %14036 to i64*
  %14037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14038 = getelementptr inbounds %struct.GPR, %struct.GPR* %14037, i32 0, i32 5
  %14039 = getelementptr inbounds %struct.Reg, %struct.Reg* %14038, i32 0, i32 0
  %RCX.i586 = bitcast %union.anon* %14039 to i64*
  %14040 = load i64, i64* %RAX.i585
  %14041 = load i64, i64* %RCX.i586
  %14042 = load i64, i64* %PC.i584
  %14043 = add i64 %14042, 3
  store i64 %14043, i64* %PC.i584
  %14044 = add i64 %14041, %14040
  store i64 %14044, i64* %RAX.i585, align 8
  %14045 = icmp ult i64 %14044, %14040
  %14046 = icmp ult i64 %14044, %14041
  %14047 = or i1 %14045, %14046
  %14048 = zext i1 %14047 to i8
  %14049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14048, i8* %14049, align 1
  %14050 = trunc i64 %14044 to i32
  %14051 = and i32 %14050, 255
  %14052 = call i32 @llvm.ctpop.i32(i32 %14051)
  %14053 = trunc i32 %14052 to i8
  %14054 = and i8 %14053, 1
  %14055 = xor i8 %14054, 1
  %14056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14055, i8* %14056, align 1
  %14057 = xor i64 %14041, %14040
  %14058 = xor i64 %14057, %14044
  %14059 = lshr i64 %14058, 4
  %14060 = trunc i64 %14059 to i8
  %14061 = and i8 %14060, 1
  %14062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14061, i8* %14062, align 1
  %14063 = icmp eq i64 %14044, 0
  %14064 = zext i1 %14063 to i8
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14064, i8* %14065, align 1
  %14066 = lshr i64 %14044, 63
  %14067 = trunc i64 %14066 to i8
  %14068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14067, i8* %14068, align 1
  %14069 = lshr i64 %14040, 63
  %14070 = lshr i64 %14041, 63
  %14071 = xor i64 %14066, %14069
  %14072 = xor i64 %14066, %14070
  %14073 = add i64 %14071, %14072
  %14074 = icmp eq i64 %14073, 2
  %14075 = zext i1 %14074 to i8
  %14076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14075, i8* %14076, align 1
  store %struct.Memory* %loadMem_43f896, %struct.Memory** %MEMORY
  %loadMem_43f899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14078 = getelementptr inbounds %struct.GPR, %struct.GPR* %14077, i32 0, i32 33
  %14079 = getelementptr inbounds %struct.Reg, %struct.Reg* %14078, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %14079 to i64*
  %14080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14081 = getelementptr inbounds %struct.GPR, %struct.GPR* %14080, i32 0, i32 11
  %14082 = getelementptr inbounds %struct.Reg, %struct.Reg* %14081, i32 0, i32 0
  %RDI.i582 = bitcast %union.anon* %14082 to i64*
  %14083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14084 = getelementptr inbounds %struct.GPR, %struct.GPR* %14083, i32 0, i32 15
  %14085 = getelementptr inbounds %struct.Reg, %struct.Reg* %14084, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %14085 to i64*
  %14086 = load i64, i64* %RBP.i583
  %14087 = sub i64 %14086, 76
  %14088 = load i64, i64* %PC.i581
  %14089 = add i64 %14088, 3
  store i64 %14089, i64* %PC.i581
  %14090 = inttoptr i64 %14087 to i32*
  %14091 = load i32, i32* %14090
  %14092 = zext i32 %14091 to i64
  store i64 %14092, i64* %RDI.i582, align 8
  store %struct.Memory* %loadMem_43f899, %struct.Memory** %MEMORY
  %loadMem_43f89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14094 = getelementptr inbounds %struct.GPR, %struct.GPR* %14093, i32 0, i32 33
  %14095 = getelementptr inbounds %struct.Reg, %struct.Reg* %14094, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %14095 to i64*
  %14096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14097 = getelementptr inbounds %struct.GPR, %struct.GPR* %14096, i32 0, i32 11
  %14098 = getelementptr inbounds %struct.Reg, %struct.Reg* %14097, i32 0, i32 0
  %RDI.i579 = bitcast %union.anon* %14098 to i64*
  %14099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14100 = getelementptr inbounds %struct.GPR, %struct.GPR* %14099, i32 0, i32 15
  %14101 = getelementptr inbounds %struct.Reg, %struct.Reg* %14100, i32 0, i32 0
  %RBP.i580 = bitcast %union.anon* %14101 to i64*
  %14102 = load i64, i64* %RDI.i579
  %14103 = load i64, i64* %RBP.i580
  %14104 = sub i64 %14103, 56
  %14105 = load i64, i64* %PC.i578
  %14106 = add i64 %14105, 3
  store i64 %14106, i64* %PC.i578
  %14107 = trunc i64 %14102 to i32
  %14108 = inttoptr i64 %14104 to i32*
  %14109 = load i32, i32* %14108
  %14110 = add i32 %14109, %14107
  %14111 = zext i32 %14110 to i64
  store i64 %14111, i64* %RDI.i579, align 8
  %14112 = icmp ult i32 %14110, %14107
  %14113 = icmp ult i32 %14110, %14109
  %14114 = or i1 %14112, %14113
  %14115 = zext i1 %14114 to i8
  %14116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14115, i8* %14116, align 1
  %14117 = and i32 %14110, 255
  %14118 = call i32 @llvm.ctpop.i32(i32 %14117)
  %14119 = trunc i32 %14118 to i8
  %14120 = and i8 %14119, 1
  %14121 = xor i8 %14120, 1
  %14122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14121, i8* %14122, align 1
  %14123 = xor i32 %14109, %14107
  %14124 = xor i32 %14123, %14110
  %14125 = lshr i32 %14124, 4
  %14126 = trunc i32 %14125 to i8
  %14127 = and i8 %14126, 1
  %14128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14127, i8* %14128, align 1
  %14129 = icmp eq i32 %14110, 0
  %14130 = zext i1 %14129 to i8
  %14131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14130, i8* %14131, align 1
  %14132 = lshr i32 %14110, 31
  %14133 = trunc i32 %14132 to i8
  %14134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14133, i8* %14134, align 1
  %14135 = lshr i32 %14107, 31
  %14136 = lshr i32 %14109, 31
  %14137 = xor i32 %14132, %14135
  %14138 = xor i32 %14132, %14136
  %14139 = add i32 %14137, %14138
  %14140 = icmp eq i32 %14139, 2
  %14141 = zext i1 %14140 to i8
  %14142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14141, i8* %14142, align 1
  store %struct.Memory* %loadMem_43f89c, %struct.Memory** %MEMORY
  %loadMem_43f89f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14144 = getelementptr inbounds %struct.GPR, %struct.GPR* %14143, i32 0, i32 33
  %14145 = getelementptr inbounds %struct.Reg, %struct.Reg* %14144, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %14145 to i64*
  %14146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14147 = getelementptr inbounds %struct.GPR, %struct.GPR* %14146, i32 0, i32 11
  %14148 = getelementptr inbounds %struct.Reg, %struct.Reg* %14147, i32 0, i32 0
  %EDI.i576 = bitcast %union.anon* %14148 to i32*
  %14149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14150 = getelementptr inbounds %struct.GPR, %struct.GPR* %14149, i32 0, i32 5
  %14151 = getelementptr inbounds %struct.Reg, %struct.Reg* %14150, i32 0, i32 0
  %RCX.i577 = bitcast %union.anon* %14151 to i64*
  %14152 = load i32, i32* %EDI.i576
  %14153 = zext i32 %14152 to i64
  %14154 = load i64, i64* %PC.i575
  %14155 = add i64 %14154, 3
  store i64 %14155, i64* %PC.i575
  %14156 = shl i64 %14153, 32
  %14157 = ashr exact i64 %14156, 32
  store i64 %14157, i64* %RCX.i577, align 8
  store %struct.Memory* %loadMem_43f89f, %struct.Memory** %MEMORY
  %loadMem_43f8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14159 = getelementptr inbounds %struct.GPR, %struct.GPR* %14158, i32 0, i32 33
  %14160 = getelementptr inbounds %struct.Reg, %struct.Reg* %14159, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %14160 to i64*
  %14161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14162 = getelementptr inbounds %struct.GPR, %struct.GPR* %14161, i32 0, i32 9
  %14163 = getelementptr inbounds %struct.Reg, %struct.Reg* %14162, i32 0, i32 0
  %ESI.i572 = bitcast %union.anon* %14163 to i32*
  %14164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14165 = getelementptr inbounds %struct.GPR, %struct.GPR* %14164, i32 0, i32 1
  %14166 = getelementptr inbounds %struct.Reg, %struct.Reg* %14165, i32 0, i32 0
  %RAX.i573 = bitcast %union.anon* %14166 to i64*
  %14167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14168 = getelementptr inbounds %struct.GPR, %struct.GPR* %14167, i32 0, i32 5
  %14169 = getelementptr inbounds %struct.Reg, %struct.Reg* %14168, i32 0, i32 0
  %RCX.i574 = bitcast %union.anon* %14169 to i64*
  %14170 = load i64, i64* %RAX.i573
  %14171 = load i64, i64* %RCX.i574
  %14172 = mul i64 %14171, 4
  %14173 = add i64 %14172, %14170
  %14174 = load i32, i32* %ESI.i572
  %14175 = zext i32 %14174 to i64
  %14176 = load i64, i64* %PC.i571
  %14177 = add i64 %14176, 3
  store i64 %14177, i64* %PC.i571
  %14178 = inttoptr i64 %14173 to i32*
  store i32 %14174, i32* %14178
  store %struct.Memory* %loadMem_43f8a2, %struct.Memory** %MEMORY
  %loadMem_43f8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14180 = getelementptr inbounds %struct.GPR, %struct.GPR* %14179, i32 0, i32 33
  %14181 = getelementptr inbounds %struct.Reg, %struct.Reg* %14180, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %14181 to i64*
  %14182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14183 = getelementptr inbounds %struct.GPR, %struct.GPR* %14182, i32 0, i32 1
  %14184 = getelementptr inbounds %struct.Reg, %struct.Reg* %14183, i32 0, i32 0
  %RAX.i569 = bitcast %union.anon* %14184 to i64*
  %14185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14186 = getelementptr inbounds %struct.GPR, %struct.GPR* %14185, i32 0, i32 15
  %14187 = getelementptr inbounds %struct.Reg, %struct.Reg* %14186, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %14187 to i64*
  %14188 = load i64, i64* %RBP.i570
  %14189 = sub i64 %14188, 72
  %14190 = load i64, i64* %PC.i568
  %14191 = add i64 %14190, 3
  store i64 %14191, i64* %PC.i568
  %14192 = inttoptr i64 %14189 to i32*
  %14193 = load i32, i32* %14192
  %14194 = zext i32 %14193 to i64
  store i64 %14194, i64* %RAX.i569, align 8
  store %struct.Memory* %loadMem_43f8a5, %struct.Memory** %MEMORY
  %loadMem_43f8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14196 = getelementptr inbounds %struct.GPR, %struct.GPR* %14195, i32 0, i32 33
  %14197 = getelementptr inbounds %struct.Reg, %struct.Reg* %14196, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %14197 to i64*
  %14198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14199 = getelementptr inbounds %struct.GPR, %struct.GPR* %14198, i32 0, i32 1
  %14200 = getelementptr inbounds %struct.Reg, %struct.Reg* %14199, i32 0, i32 0
  %RAX.i567 = bitcast %union.anon* %14200 to i64*
  %14201 = load i64, i64* %RAX.i567
  %14202 = load i64, i64* %PC.i566
  %14203 = add i64 %14202, 3
  store i64 %14203, i64* %PC.i566
  %14204 = trunc i64 %14201 to i32
  %14205 = add i32 1, %14204
  %14206 = zext i32 %14205 to i64
  store i64 %14206, i64* %RAX.i567, align 8
  %14207 = icmp ult i32 %14205, %14204
  %14208 = icmp ult i32 %14205, 1
  %14209 = or i1 %14207, %14208
  %14210 = zext i1 %14209 to i8
  %14211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14210, i8* %14211, align 1
  %14212 = and i32 %14205, 255
  %14213 = call i32 @llvm.ctpop.i32(i32 %14212)
  %14214 = trunc i32 %14213 to i8
  %14215 = and i8 %14214, 1
  %14216 = xor i8 %14215, 1
  %14217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14216, i8* %14217, align 1
  %14218 = xor i64 1, %14201
  %14219 = trunc i64 %14218 to i32
  %14220 = xor i32 %14219, %14205
  %14221 = lshr i32 %14220, 4
  %14222 = trunc i32 %14221 to i8
  %14223 = and i8 %14222, 1
  %14224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14223, i8* %14224, align 1
  %14225 = icmp eq i32 %14205, 0
  %14226 = zext i1 %14225 to i8
  %14227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14226, i8* %14227, align 1
  %14228 = lshr i32 %14205, 31
  %14229 = trunc i32 %14228 to i8
  %14230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14229, i8* %14230, align 1
  %14231 = lshr i32 %14204, 31
  %14232 = xor i32 %14228, %14231
  %14233 = add i32 %14232, %14228
  %14234 = icmp eq i32 %14233, 2
  %14235 = zext i1 %14234 to i8
  %14236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14235, i8* %14236, align 1
  store %struct.Memory* %loadMem_43f8a8, %struct.Memory** %MEMORY
  %loadMem_43f8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %14237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14238 = getelementptr inbounds %struct.GPR, %struct.GPR* %14237, i32 0, i32 33
  %14239 = getelementptr inbounds %struct.Reg, %struct.Reg* %14238, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %14239 to i64*
  %14240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14241 = getelementptr inbounds %struct.GPR, %struct.GPR* %14240, i32 0, i32 1
  %14242 = getelementptr inbounds %struct.Reg, %struct.Reg* %14241, i32 0, i32 0
  %EAX.i564 = bitcast %union.anon* %14242 to i32*
  %14243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14244 = getelementptr inbounds %struct.GPR, %struct.GPR* %14243, i32 0, i32 15
  %14245 = getelementptr inbounds %struct.Reg, %struct.Reg* %14244, i32 0, i32 0
  %RBP.i565 = bitcast %union.anon* %14245 to i64*
  %14246 = load i64, i64* %RBP.i565
  %14247 = sub i64 %14246, 72
  %14248 = load i32, i32* %EAX.i564
  %14249 = zext i32 %14248 to i64
  %14250 = load i64, i64* %PC.i563
  %14251 = add i64 %14250, 3
  store i64 %14251, i64* %PC.i563
  %14252 = inttoptr i64 %14247 to i32*
  store i32 %14248, i32* %14252
  store %struct.Memory* %loadMem_43f8ab, %struct.Memory** %MEMORY
  %loadMem_43f8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %14253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14254 = getelementptr inbounds %struct.GPR, %struct.GPR* %14253, i32 0, i32 33
  %14255 = getelementptr inbounds %struct.Reg, %struct.Reg* %14254, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %14255 to i64*
  %14256 = load i64, i64* %PC.i562
  %14257 = add i64 %14256, -90
  %14258 = load i64, i64* %PC.i562
  %14259 = add i64 %14258, 5
  store i64 %14259, i64* %PC.i562
  %14260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14257, i64* %14260, align 8
  store %struct.Memory* %loadMem_43f8ae, %struct.Memory** %MEMORY
  br label %block_.L_43f854

block_.L_43f8b3:                                  ; preds = %block_.L_43f854
  %loadMem_43f8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14262 = getelementptr inbounds %struct.GPR, %struct.GPR* %14261, i32 0, i32 33
  %14263 = getelementptr inbounds %struct.Reg, %struct.Reg* %14262, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %14263 to i64*
  %14264 = load i64, i64* %PC.i561
  %14265 = add i64 %14264, 5
  %14266 = load i64, i64* %PC.i561
  %14267 = add i64 %14266, 5
  store i64 %14267, i64* %PC.i561
  %14268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14265, i64* %14268, align 8
  store %struct.Memory* %loadMem_43f8b3, %struct.Memory** %MEMORY
  br label %block_.L_43f8b8

block_.L_43f8b8:                                  ; preds = %block_.L_43f8b3
  %loadMem_43f8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14270 = getelementptr inbounds %struct.GPR, %struct.GPR* %14269, i32 0, i32 33
  %14271 = getelementptr inbounds %struct.Reg, %struct.Reg* %14270, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %14271 to i64*
  %14272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14273 = getelementptr inbounds %struct.GPR, %struct.GPR* %14272, i32 0, i32 1
  %14274 = getelementptr inbounds %struct.Reg, %struct.Reg* %14273, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %14274 to i64*
  %14275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14276 = getelementptr inbounds %struct.GPR, %struct.GPR* %14275, i32 0, i32 15
  %14277 = getelementptr inbounds %struct.Reg, %struct.Reg* %14276, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %14277 to i64*
  %14278 = load i64, i64* %RBP.i560
  %14279 = sub i64 %14278, 76
  %14280 = load i64, i64* %PC.i558
  %14281 = add i64 %14280, 3
  store i64 %14281, i64* %PC.i558
  %14282 = inttoptr i64 %14279 to i32*
  %14283 = load i32, i32* %14282
  %14284 = zext i32 %14283 to i64
  store i64 %14284, i64* %RAX.i559, align 8
  store %struct.Memory* %loadMem_43f8b8, %struct.Memory** %MEMORY
  %loadMem_43f8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14286 = getelementptr inbounds %struct.GPR, %struct.GPR* %14285, i32 0, i32 33
  %14287 = getelementptr inbounds %struct.Reg, %struct.Reg* %14286, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %14287 to i64*
  %14288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14289 = getelementptr inbounds %struct.GPR, %struct.GPR* %14288, i32 0, i32 1
  %14290 = getelementptr inbounds %struct.Reg, %struct.Reg* %14289, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %14290 to i64*
  %14291 = load i64, i64* %RAX.i557
  %14292 = load i64, i64* %PC.i556
  %14293 = add i64 %14292, 3
  store i64 %14293, i64* %PC.i556
  %14294 = trunc i64 %14291 to i32
  %14295 = add i32 1, %14294
  %14296 = zext i32 %14295 to i64
  store i64 %14296, i64* %RAX.i557, align 8
  %14297 = icmp ult i32 %14295, %14294
  %14298 = icmp ult i32 %14295, 1
  %14299 = or i1 %14297, %14298
  %14300 = zext i1 %14299 to i8
  %14301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14300, i8* %14301, align 1
  %14302 = and i32 %14295, 255
  %14303 = call i32 @llvm.ctpop.i32(i32 %14302)
  %14304 = trunc i32 %14303 to i8
  %14305 = and i8 %14304, 1
  %14306 = xor i8 %14305, 1
  %14307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14306, i8* %14307, align 1
  %14308 = xor i64 1, %14291
  %14309 = trunc i64 %14308 to i32
  %14310 = xor i32 %14309, %14295
  %14311 = lshr i32 %14310, 4
  %14312 = trunc i32 %14311 to i8
  %14313 = and i8 %14312, 1
  %14314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14313, i8* %14314, align 1
  %14315 = icmp eq i32 %14295, 0
  %14316 = zext i1 %14315 to i8
  %14317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14316, i8* %14317, align 1
  %14318 = lshr i32 %14295, 31
  %14319 = trunc i32 %14318 to i8
  %14320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14319, i8* %14320, align 1
  %14321 = lshr i32 %14294, 31
  %14322 = xor i32 %14318, %14321
  %14323 = add i32 %14322, %14318
  %14324 = icmp eq i32 %14323, 2
  %14325 = zext i1 %14324 to i8
  %14326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14325, i8* %14326, align 1
  store %struct.Memory* %loadMem_43f8bb, %struct.Memory** %MEMORY
  %loadMem_43f8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %14327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14328 = getelementptr inbounds %struct.GPR, %struct.GPR* %14327, i32 0, i32 33
  %14329 = getelementptr inbounds %struct.Reg, %struct.Reg* %14328, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %14329 to i64*
  %14330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14331 = getelementptr inbounds %struct.GPR, %struct.GPR* %14330, i32 0, i32 1
  %14332 = getelementptr inbounds %struct.Reg, %struct.Reg* %14331, i32 0, i32 0
  %EAX.i554 = bitcast %union.anon* %14332 to i32*
  %14333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14334 = getelementptr inbounds %struct.GPR, %struct.GPR* %14333, i32 0, i32 15
  %14335 = getelementptr inbounds %struct.Reg, %struct.Reg* %14334, i32 0, i32 0
  %RBP.i555 = bitcast %union.anon* %14335 to i64*
  %14336 = load i64, i64* %RBP.i555
  %14337 = sub i64 %14336, 76
  %14338 = load i32, i32* %EAX.i554
  %14339 = zext i32 %14338 to i64
  %14340 = load i64, i64* %PC.i553
  %14341 = add i64 %14340, 3
  store i64 %14341, i64* %PC.i553
  %14342 = inttoptr i64 %14337 to i32*
  store i32 %14338, i32* %14342
  store %struct.Memory* %loadMem_43f8be, %struct.Memory** %MEMORY
  %loadMem_43f8c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14344 = getelementptr inbounds %struct.GPR, %struct.GPR* %14343, i32 0, i32 33
  %14345 = getelementptr inbounds %struct.Reg, %struct.Reg* %14344, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %14345 to i64*
  %14346 = load i64, i64* %PC.i552
  %14347 = add i64 %14346, -126
  %14348 = load i64, i64* %PC.i552
  %14349 = add i64 %14348, 5
  store i64 %14349, i64* %PC.i552
  %14350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14347, i64* %14350, align 8
  store %struct.Memory* %loadMem_43f8c1, %struct.Memory** %MEMORY
  br label %block_.L_43f843

block_.L_43f8c6:                                  ; preds = %block_.L_43f843
  %loadMem_43f8c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14352 = getelementptr inbounds %struct.GPR, %struct.GPR* %14351, i32 0, i32 33
  %14353 = getelementptr inbounds %struct.Reg, %struct.Reg* %14352, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %14353 to i64*
  %14354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14355 = getelementptr inbounds %struct.GPR, %struct.GPR* %14354, i32 0, i32 15
  %14356 = getelementptr inbounds %struct.Reg, %struct.Reg* %14355, i32 0, i32 0
  %RBP.i551 = bitcast %union.anon* %14356 to i64*
  %14357 = load i64, i64* %RBP.i551
  %14358 = sub i64 %14357, 80
  %14359 = load i64, i64* %PC.i550
  %14360 = add i64 %14359, 4
  store i64 %14360, i64* %PC.i550
  %14361 = inttoptr i64 %14358 to i32*
  %14362 = load i32, i32* %14361
  %14363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14363, align 1
  %14364 = and i32 %14362, 255
  %14365 = call i32 @llvm.ctpop.i32(i32 %14364)
  %14366 = trunc i32 %14365 to i8
  %14367 = and i8 %14366, 1
  %14368 = xor i8 %14367, 1
  %14369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14368, i8* %14369, align 1
  %14370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14370, align 1
  %14371 = icmp eq i32 %14362, 0
  %14372 = zext i1 %14371 to i8
  %14373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14372, i8* %14373, align 1
  %14374 = lshr i32 %14362, 31
  %14375 = trunc i32 %14374 to i8
  %14376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14375, i8* %14376, align 1
  %14377 = lshr i32 %14362, 31
  %14378 = xor i32 %14374, %14377
  %14379 = add i32 %14378, %14377
  %14380 = icmp eq i32 %14379, 2
  %14381 = zext i1 %14380 to i8
  %14382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14381, i8* %14382, align 1
  store %struct.Memory* %loadMem_43f8c6, %struct.Memory** %MEMORY
  %loadMem_43f8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %14383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14384 = getelementptr inbounds %struct.GPR, %struct.GPR* %14383, i32 0, i32 33
  %14385 = getelementptr inbounds %struct.Reg, %struct.Reg* %14384, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %14385 to i64*
  %14386 = load i64, i64* %PC.i549
  %14387 = add i64 %14386, 40
  %14388 = load i64, i64* %PC.i549
  %14389 = add i64 %14388, 6
  %14390 = load i64, i64* %PC.i549
  %14391 = add i64 %14390, 6
  store i64 %14391, i64* %PC.i549
  %14392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14393 = load i8, i8* %14392, align 1
  store i8 %14393, i8* %BRANCH_TAKEN, align 1
  %14394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14395 = icmp ne i8 %14393, 0
  %14396 = select i1 %14395, i64 %14387, i64 %14389
  store i64 %14396, i64* %14394, align 8
  store %struct.Memory* %loadMem_43f8ca, %struct.Memory** %MEMORY
  %loadBr_43f8ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f8ca = icmp eq i8 %loadBr_43f8ca, 1
  br i1 %cmpBr_43f8ca, label %block_.L_43f8f2, label %block_43f8d0

block_43f8d0:                                     ; preds = %block_.L_43f8c6
  %loadMem_43f8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14398 = getelementptr inbounds %struct.GPR, %struct.GPR* %14397, i32 0, i32 33
  %14399 = getelementptr inbounds %struct.Reg, %struct.Reg* %14398, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %14399 to i64*
  %14400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14401 = getelementptr inbounds %struct.GPR, %struct.GPR* %14400, i32 0, i32 1
  %14402 = getelementptr inbounds %struct.Reg, %struct.Reg* %14401, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %14402 to i64*
  %14403 = load i64, i64* %PC.i547
  %14404 = add i64 %14403, 5
  store i64 %14404, i64* %PC.i547
  store i64 1, i64* %RAX.i548, align 8
  store %struct.Memory* %loadMem_43f8d0, %struct.Memory** %MEMORY
  %loadMem_43f8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14406 = getelementptr inbounds %struct.GPR, %struct.GPR* %14405, i32 0, i32 33
  %14407 = getelementptr inbounds %struct.Reg, %struct.Reg* %14406, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %14407 to i64*
  %14408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14409 = getelementptr inbounds %struct.GPR, %struct.GPR* %14408, i32 0, i32 5
  %14410 = getelementptr inbounds %struct.Reg, %struct.Reg* %14409, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %14410 to i64*
  %14411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14412 = getelementptr inbounds %struct.GPR, %struct.GPR* %14411, i32 0, i32 15
  %14413 = getelementptr inbounds %struct.Reg, %struct.Reg* %14412, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %14413 to i64*
  %14414 = load i64, i64* %RBP.i546
  %14415 = sub i64 %14414, 84
  %14416 = load i64, i64* %PC.i544
  %14417 = add i64 %14416, 3
  store i64 %14417, i64* %PC.i544
  %14418 = inttoptr i64 %14415 to i32*
  %14419 = load i32, i32* %14418
  %14420 = zext i32 %14419 to i64
  store i64 %14420, i64* %RCX.i545, align 8
  store %struct.Memory* %loadMem_43f8d5, %struct.Memory** %MEMORY
  %loadMem_43f8d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14422 = getelementptr inbounds %struct.GPR, %struct.GPR* %14421, i32 0, i32 33
  %14423 = getelementptr inbounds %struct.Reg, %struct.Reg* %14422, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %14423 to i64*
  %14424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14425 = getelementptr inbounds %struct.GPR, %struct.GPR* %14424, i32 0, i32 5
  %14426 = getelementptr inbounds %struct.Reg, %struct.Reg* %14425, i32 0, i32 0
  %14427 = bitcast %union.anon* %14426 to %struct.anon.2*
  %CL.i542 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14427, i32 0, i32 0
  %14428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14429 = getelementptr inbounds %struct.GPR, %struct.GPR* %14428, i32 0, i32 1
  %14430 = getelementptr inbounds %struct.Reg, %struct.Reg* %14429, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %14430 to i64*
  %14431 = load i64, i64* %RAX.i543
  %14432 = load i8, i8* %CL.i542
  %14433 = zext i8 %14432 to i64
  %14434 = load i64, i64* %PC.i541
  %14435 = add i64 %14434, 2
  store i64 %14435, i64* %PC.i541
  %14436 = trunc i64 %14433 to i5
  switch i5 %14436, label %14443 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %14437
  ]

; <label>:14437:                                  ; preds = %block_43f8d0
  %14438 = trunc i64 %14431 to i32
  %14439 = shl i32 %14438, 1
  %14440 = icmp slt i32 %14438, 0
  %14441 = icmp slt i32 %14439, 0
  %14442 = xor i1 %14440, %14441
  br label %14452

; <label>:14443:                                  ; preds = %block_43f8d0
  %14444 = and i64 %14433, 31
  %14445 = add i64 %14444, 4294967295
  %14446 = and i64 %14431, 4294967295
  %14447 = and i64 %14445, 4294967295
  %14448 = shl i64 %14446, %14447
  %14449 = trunc i64 %14448 to i32
  %14450 = icmp slt i32 %14449, 0
  %14451 = shl i32 %14449, 1
  br label %14452

; <label>:14452:                                  ; preds = %14443, %14437
  %14453 = phi i1 [ %14440, %14437 ], [ %14450, %14443 ]
  %14454 = phi i1 [ %14442, %14437 ], [ false, %14443 ]
  %14455 = phi i32 [ %14439, %14437 ], [ %14451, %14443 ]
  %14456 = zext i32 %14455 to i64
  store i64 %14456, i64* %RAX.i543, align 8
  %14457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14458 = zext i1 %14453 to i8
  store i8 %14458, i8* %14457, align 1
  %14459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14460 = and i32 %14455, 254
  %14461 = call i32 @llvm.ctpop.i32(i32 %14460)
  %14462 = trunc i32 %14461 to i8
  %14463 = and i8 %14462, 1
  %14464 = xor i8 %14463, 1
  store i8 %14464, i8* %14459, align 1
  %14465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14465, align 1
  %14466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14467 = icmp eq i32 %14455, 0
  %14468 = zext i1 %14467 to i8
  store i8 %14468, i8* %14466, align 1
  %14469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14470 = lshr i32 %14455, 31
  %14471 = trunc i32 %14470 to i8
  store i8 %14471, i8* %14469, align 1
  %14472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14473 = zext i1 %14454 to i8
  store i8 %14473, i8* %14472, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %block_43f8d0, %14452
  store %struct.Memory* %loadMem_43f8d8, %struct.Memory** %MEMORY
  %loadMem_43f8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %14474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14475 = getelementptr inbounds %struct.GPR, %struct.GPR* %14474, i32 0, i32 33
  %14476 = getelementptr inbounds %struct.Reg, %struct.Reg* %14475, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %14476 to i64*
  %14477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14478 = getelementptr inbounds %struct.GPR, %struct.GPR* %14477, i32 0, i32 1
  %14479 = getelementptr inbounds %struct.Reg, %struct.Reg* %14478, i32 0, i32 0
  %EAX.i539 = bitcast %union.anon* %14479 to i32*
  %14480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14481 = getelementptr inbounds %struct.GPR, %struct.GPR* %14480, i32 0, i32 7
  %14482 = getelementptr inbounds %struct.Reg, %struct.Reg* %14481, i32 0, i32 0
  %RDX.i540 = bitcast %union.anon* %14482 to i64*
  %14483 = load i32, i32* %EAX.i539
  %14484 = zext i32 %14483 to i64
  %14485 = load i64, i64* %PC.i538
  %14486 = add i64 %14485, 3
  store i64 %14486, i64* %PC.i538
  %14487 = shl i64 %14484, 32
  %14488 = ashr exact i64 %14487, 32
  store i64 %14488, i64* %RDX.i540, align 8
  store %struct.Memory* %loadMem_43f8da, %struct.Memory** %MEMORY
  %loadMem_43f8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14490 = getelementptr inbounds %struct.GPR, %struct.GPR* %14489, i32 0, i32 33
  %14491 = getelementptr inbounds %struct.Reg, %struct.Reg* %14490, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %14491 to i64*
  %14492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14493 = getelementptr inbounds %struct.GPR, %struct.GPR* %14492, i32 0, i32 9
  %14494 = getelementptr inbounds %struct.Reg, %struct.Reg* %14493, i32 0, i32 0
  %RSI.i536 = bitcast %union.anon* %14494 to i64*
  %14495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14496 = getelementptr inbounds %struct.GPR, %struct.GPR* %14495, i32 0, i32 15
  %14497 = getelementptr inbounds %struct.Reg, %struct.Reg* %14496, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %14497 to i64*
  %14498 = load i64, i64* %RBP.i537
  %14499 = sub i64 %14498, 32
  %14500 = load i64, i64* %PC.i535
  %14501 = add i64 %14500, 4
  store i64 %14501, i64* %PC.i535
  %14502 = inttoptr i64 %14499 to i64*
  %14503 = load i64, i64* %14502
  store i64 %14503, i64* %RSI.i536, align 8
  store %struct.Memory* %loadMem_43f8dd, %struct.Memory** %MEMORY
  %loadMem_43f8e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14505 = getelementptr inbounds %struct.GPR, %struct.GPR* %14504, i32 0, i32 33
  %14506 = getelementptr inbounds %struct.Reg, %struct.Reg* %14505, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %14506 to i64*
  %14507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14508 = getelementptr inbounds %struct.GPR, %struct.GPR* %14507, i32 0, i32 7
  %14509 = getelementptr inbounds %struct.Reg, %struct.Reg* %14508, i32 0, i32 0
  %RDX.i533 = bitcast %union.anon* %14509 to i64*
  %14510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14511 = getelementptr inbounds %struct.GPR, %struct.GPR* %14510, i32 0, i32 9
  %14512 = getelementptr inbounds %struct.Reg, %struct.Reg* %14511, i32 0, i32 0
  %RSI.i534 = bitcast %union.anon* %14512 to i64*
  %14513 = load i64, i64* %RDX.i533
  %14514 = load i64, i64* %RSI.i534
  %14515 = load i64, i64* %PC.i532
  %14516 = add i64 %14515, 3
  store i64 %14516, i64* %PC.i532
  %14517 = inttoptr i64 %14514 to i64*
  %14518 = load i64, i64* %14517
  %14519 = or i64 %14518, %14513
  store i64 %14519, i64* %RDX.i533, align 8
  %14520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14520, align 1
  %14521 = trunc i64 %14519 to i32
  %14522 = and i32 %14521, 255
  %14523 = call i32 @llvm.ctpop.i32(i32 %14522)
  %14524 = trunc i32 %14523 to i8
  %14525 = and i8 %14524, 1
  %14526 = xor i8 %14525, 1
  %14527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14526, i8* %14527, align 1
  %14528 = icmp eq i64 %14519, 0
  %14529 = zext i1 %14528 to i8
  %14530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14529, i8* %14530, align 1
  %14531 = lshr i64 %14519, 63
  %14532 = trunc i64 %14531 to i8
  %14533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14532, i8* %14533, align 1
  %14534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14534, align 1
  %14535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14535, align 1
  store %struct.Memory* %loadMem_43f8e1, %struct.Memory** %MEMORY
  %loadMem_43f8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14537 = getelementptr inbounds %struct.GPR, %struct.GPR* %14536, i32 0, i32 33
  %14538 = getelementptr inbounds %struct.Reg, %struct.Reg* %14537, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %14538 to i64*
  %14539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14540 = getelementptr inbounds %struct.GPR, %struct.GPR* %14539, i32 0, i32 7
  %14541 = getelementptr inbounds %struct.Reg, %struct.Reg* %14540, i32 0, i32 0
  %RDX.i530 = bitcast %union.anon* %14541 to i64*
  %14542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14543 = getelementptr inbounds %struct.GPR, %struct.GPR* %14542, i32 0, i32 9
  %14544 = getelementptr inbounds %struct.Reg, %struct.Reg* %14543, i32 0, i32 0
  %RSI.i531 = bitcast %union.anon* %14544 to i64*
  %14545 = load i64, i64* %RSI.i531
  %14546 = load i64, i64* %RDX.i530
  %14547 = load i64, i64* %PC.i529
  %14548 = add i64 %14547, 3
  store i64 %14548, i64* %PC.i529
  %14549 = inttoptr i64 %14545 to i64*
  store i64 %14546, i64* %14549
  store %struct.Memory* %loadMem_43f8e4, %struct.Memory** %MEMORY
  %loadMem_43f8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14551 = getelementptr inbounds %struct.GPR, %struct.GPR* %14550, i32 0, i32 33
  %14552 = getelementptr inbounds %struct.Reg, %struct.Reg* %14551, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %14552 to i64*
  %14553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14554 = getelementptr inbounds %struct.GPR, %struct.GPR* %14553, i32 0, i32 1
  %14555 = getelementptr inbounds %struct.Reg, %struct.Reg* %14554, i32 0, i32 0
  %RAX.i527 = bitcast %union.anon* %14555 to i64*
  %14556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14557 = getelementptr inbounds %struct.GPR, %struct.GPR* %14556, i32 0, i32 15
  %14558 = getelementptr inbounds %struct.Reg, %struct.Reg* %14557, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %14558 to i64*
  %14559 = load i64, i64* %RBP.i528
  %14560 = sub i64 %14559, 100
  %14561 = load i64, i64* %PC.i526
  %14562 = add i64 %14561, 3
  store i64 %14562, i64* %PC.i526
  %14563 = inttoptr i64 %14560 to i32*
  %14564 = load i32, i32* %14563
  %14565 = zext i32 %14564 to i64
  store i64 %14565, i64* %RAX.i527, align 8
  store %struct.Memory* %loadMem_43f8e7, %struct.Memory** %MEMORY
  %loadMem_43f8ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %14566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14567 = getelementptr inbounds %struct.GPR, %struct.GPR* %14566, i32 0, i32 33
  %14568 = getelementptr inbounds %struct.Reg, %struct.Reg* %14567, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %14568 to i64*
  %14569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14570 = getelementptr inbounds %struct.GPR, %struct.GPR* %14569, i32 0, i32 7
  %14571 = getelementptr inbounds %struct.Reg, %struct.Reg* %14570, i32 0, i32 0
  %RDX.i524 = bitcast %union.anon* %14571 to i64*
  %14572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14573 = getelementptr inbounds %struct.GPR, %struct.GPR* %14572, i32 0, i32 15
  %14574 = getelementptr inbounds %struct.Reg, %struct.Reg* %14573, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %14574 to i64*
  %14575 = load i64, i64* %RBP.i525
  %14576 = sub i64 %14575, 24
  %14577 = load i64, i64* %PC.i523
  %14578 = add i64 %14577, 4
  store i64 %14578, i64* %PC.i523
  %14579 = inttoptr i64 %14576 to i64*
  %14580 = load i64, i64* %14579
  store i64 %14580, i64* %RDX.i524, align 8
  store %struct.Memory* %loadMem_43f8ea, %struct.Memory** %MEMORY
  %loadMem_43f8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %14581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14582 = getelementptr inbounds %struct.GPR, %struct.GPR* %14581, i32 0, i32 33
  %14583 = getelementptr inbounds %struct.Reg, %struct.Reg* %14582, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %14583 to i64*
  %14584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14585 = getelementptr inbounds %struct.GPR, %struct.GPR* %14584, i32 0, i32 1
  %14586 = getelementptr inbounds %struct.Reg, %struct.Reg* %14585, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %14586 to i64*
  %14587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14588 = getelementptr inbounds %struct.GPR, %struct.GPR* %14587, i32 0, i32 7
  %14589 = getelementptr inbounds %struct.Reg, %struct.Reg* %14588, i32 0, i32 0
  %RDX.i522 = bitcast %union.anon* %14589 to i64*
  %14590 = load i64, i64* %RAX.i521
  %14591 = load i64, i64* %RDX.i522
  %14592 = load i64, i64* %PC.i520
  %14593 = add i64 %14592, 2
  store i64 %14593, i64* %PC.i520
  %14594 = trunc i64 %14590 to i32
  %14595 = inttoptr i64 %14591 to i32*
  %14596 = load i32, i32* %14595
  %14597 = or i32 %14596, %14594
  %14598 = zext i32 %14597 to i64
  store i64 %14598, i64* %RAX.i521, align 8
  %14599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14599, align 1
  %14600 = and i32 %14597, 255
  %14601 = call i32 @llvm.ctpop.i32(i32 %14600)
  %14602 = trunc i32 %14601 to i8
  %14603 = and i8 %14602, 1
  %14604 = xor i8 %14603, 1
  %14605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14604, i8* %14605, align 1
  %14606 = icmp eq i32 %14597, 0
  %14607 = zext i1 %14606 to i8
  %14608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14607, i8* %14608, align 1
  %14609 = lshr i32 %14597, 31
  %14610 = trunc i32 %14609 to i8
  %14611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14610, i8* %14611, align 1
  %14612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14612, align 1
  %14613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14613, align 1
  store %struct.Memory* %loadMem_43f8ee, %struct.Memory** %MEMORY
  %loadMem_43f8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14615 = getelementptr inbounds %struct.GPR, %struct.GPR* %14614, i32 0, i32 33
  %14616 = getelementptr inbounds %struct.Reg, %struct.Reg* %14615, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %14616 to i64*
  %14617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14618 = getelementptr inbounds %struct.GPR, %struct.GPR* %14617, i32 0, i32 1
  %14619 = getelementptr inbounds %struct.Reg, %struct.Reg* %14618, i32 0, i32 0
  %EAX.i518 = bitcast %union.anon* %14619 to i32*
  %14620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14621 = getelementptr inbounds %struct.GPR, %struct.GPR* %14620, i32 0, i32 7
  %14622 = getelementptr inbounds %struct.Reg, %struct.Reg* %14621, i32 0, i32 0
  %RDX.i519 = bitcast %union.anon* %14622 to i64*
  %14623 = load i64, i64* %RDX.i519
  %14624 = load i32, i32* %EAX.i518
  %14625 = zext i32 %14624 to i64
  %14626 = load i64, i64* %PC.i517
  %14627 = add i64 %14626, 2
  store i64 %14627, i64* %PC.i517
  %14628 = inttoptr i64 %14623 to i32*
  store i32 %14624, i32* %14628
  store %struct.Memory* %loadMem_43f8f0, %struct.Memory** %MEMORY
  br label %block_.L_43f8f2

block_.L_43f8f2:                                  ; preds = %routine_shll__cl___eax.exit, %block_.L_43f8c6
  %loadMem_43f8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14630 = getelementptr inbounds %struct.GPR, %struct.GPR* %14629, i32 0, i32 33
  %14631 = getelementptr inbounds %struct.Reg, %struct.Reg* %14630, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %14631 to i64*
  %14632 = load i64, i64* %PC.i516
  %14633 = add i64 %14632, 5
  %14634 = load i64, i64* %PC.i516
  %14635 = add i64 %14634, 5
  store i64 %14635, i64* %PC.i516
  %14636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14633, i64* %14636, align 8
  store %struct.Memory* %loadMem_43f8f2, %struct.Memory** %MEMORY
  br label %block_.L_43f8f7

block_.L_43f8f7:                                  ; preds = %block_.L_43f8f2, %block_43f7f2, %block_43f7e8, %block_.L_43f7d3
  %loadMem_43f8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14638 = getelementptr inbounds %struct.GPR, %struct.GPR* %14637, i32 0, i32 33
  %14639 = getelementptr inbounds %struct.Reg, %struct.Reg* %14638, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %14639 to i64*
  %14640 = load i64, i64* %PC.i515
  %14641 = add i64 %14640, 5
  %14642 = load i64, i64* %PC.i515
  %14643 = add i64 %14642, 5
  store i64 %14643, i64* %PC.i515
  %14644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14641, i64* %14644, align 8
  store %struct.Memory* %loadMem_43f8f7, %struct.Memory** %MEMORY
  br label %block_.L_43f8fc

block_.L_43f8fc:                                  ; preds = %block_.L_43f8f7, %block_.L_43f4e8
  %loadMem_43f8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14646 = getelementptr inbounds %struct.GPR, %struct.GPR* %14645, i32 0, i32 33
  %14647 = getelementptr inbounds %struct.Reg, %struct.Reg* %14646, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %14647 to i64*
  %14648 = load i64, i64* %PC.i514
  %14649 = add i64 %14648, 5
  %14650 = load i64, i64* %PC.i514
  %14651 = add i64 %14650, 5
  store i64 %14651, i64* %PC.i514
  %14652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14649, i64* %14652, align 8
  store %struct.Memory* %loadMem_43f8fc, %struct.Memory** %MEMORY
  br label %block_.L_43f901

block_.L_43f901:                                  ; preds = %block_.L_43f8fc
  %loadMem_43f901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14654 = getelementptr inbounds %struct.GPR, %struct.GPR* %14653, i32 0, i32 33
  %14655 = getelementptr inbounds %struct.Reg, %struct.Reg* %14654, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %14655 to i64*
  %14656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14657 = getelementptr inbounds %struct.GPR, %struct.GPR* %14656, i32 0, i32 1
  %14658 = getelementptr inbounds %struct.Reg, %struct.Reg* %14657, i32 0, i32 0
  %RAX.i512 = bitcast %union.anon* %14658 to i64*
  %14659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14660 = getelementptr inbounds %struct.GPR, %struct.GPR* %14659, i32 0, i32 15
  %14661 = getelementptr inbounds %struct.Reg, %struct.Reg* %14660, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %14661 to i64*
  %14662 = load i64, i64* %RBP.i513
  %14663 = sub i64 %14662, 104
  %14664 = load i64, i64* %PC.i511
  %14665 = add i64 %14664, 3
  store i64 %14665, i64* %PC.i511
  %14666 = inttoptr i64 %14663 to i32*
  %14667 = load i32, i32* %14666
  %14668 = zext i32 %14667 to i64
  store i64 %14668, i64* %RAX.i512, align 8
  store %struct.Memory* %loadMem_43f901, %struct.Memory** %MEMORY
  %loadMem_43f904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14670 = getelementptr inbounds %struct.GPR, %struct.GPR* %14669, i32 0, i32 33
  %14671 = getelementptr inbounds %struct.Reg, %struct.Reg* %14670, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %14671 to i64*
  %14672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14673 = getelementptr inbounds %struct.GPR, %struct.GPR* %14672, i32 0, i32 1
  %14674 = getelementptr inbounds %struct.Reg, %struct.Reg* %14673, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %14674 to i64*
  %14675 = load i64, i64* %RAX.i510
  %14676 = load i64, i64* %PC.i509
  %14677 = add i64 %14676, 3
  store i64 %14677, i64* %PC.i509
  %14678 = trunc i64 %14675 to i32
  %14679 = add i32 4, %14678
  %14680 = zext i32 %14679 to i64
  store i64 %14680, i64* %RAX.i510, align 8
  %14681 = icmp ult i32 %14679, %14678
  %14682 = icmp ult i32 %14679, 4
  %14683 = or i1 %14681, %14682
  %14684 = zext i1 %14683 to i8
  %14685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14684, i8* %14685, align 1
  %14686 = and i32 %14679, 255
  %14687 = call i32 @llvm.ctpop.i32(i32 %14686)
  %14688 = trunc i32 %14687 to i8
  %14689 = and i8 %14688, 1
  %14690 = xor i8 %14689, 1
  %14691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14690, i8* %14691, align 1
  %14692 = xor i64 4, %14675
  %14693 = trunc i64 %14692 to i32
  %14694 = xor i32 %14693, %14679
  %14695 = lshr i32 %14694, 4
  %14696 = trunc i32 %14695 to i8
  %14697 = and i8 %14696, 1
  %14698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14697, i8* %14698, align 1
  %14699 = icmp eq i32 %14679, 0
  %14700 = zext i1 %14699 to i8
  %14701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14700, i8* %14701, align 1
  %14702 = lshr i32 %14679, 31
  %14703 = trunc i32 %14702 to i8
  %14704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14703, i8* %14704, align 1
  %14705 = lshr i32 %14678, 31
  %14706 = xor i32 %14702, %14705
  %14707 = add i32 %14706, %14702
  %14708 = icmp eq i32 %14707, 2
  %14709 = zext i1 %14708 to i8
  %14710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14709, i8* %14710, align 1
  store %struct.Memory* %loadMem_43f904, %struct.Memory** %MEMORY
  %loadMem_43f907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14712 = getelementptr inbounds %struct.GPR, %struct.GPR* %14711, i32 0, i32 33
  %14713 = getelementptr inbounds %struct.Reg, %struct.Reg* %14712, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %14713 to i64*
  %14714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14715 = getelementptr inbounds %struct.GPR, %struct.GPR* %14714, i32 0, i32 1
  %14716 = getelementptr inbounds %struct.Reg, %struct.Reg* %14715, i32 0, i32 0
  %EAX.i507 = bitcast %union.anon* %14716 to i32*
  %14717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14718 = getelementptr inbounds %struct.GPR, %struct.GPR* %14717, i32 0, i32 15
  %14719 = getelementptr inbounds %struct.Reg, %struct.Reg* %14718, i32 0, i32 0
  %RBP.i508 = bitcast %union.anon* %14719 to i64*
  %14720 = load i64, i64* %RBP.i508
  %14721 = sub i64 %14720, 104
  %14722 = load i32, i32* %EAX.i507
  %14723 = zext i32 %14722 to i64
  %14724 = load i64, i64* %PC.i506
  %14725 = add i64 %14724, 3
  store i64 %14725, i64* %PC.i506
  %14726 = inttoptr i64 %14721 to i32*
  store i32 %14722, i32* %14726
  store %struct.Memory* %loadMem_43f907, %struct.Memory** %MEMORY
  %loadMem_43f90a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14728 = getelementptr inbounds %struct.GPR, %struct.GPR* %14727, i32 0, i32 33
  %14729 = getelementptr inbounds %struct.Reg, %struct.Reg* %14728, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %14729 to i64*
  %14730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14731 = getelementptr inbounds %struct.GPR, %struct.GPR* %14730, i32 0, i32 1
  %14732 = getelementptr inbounds %struct.Reg, %struct.Reg* %14731, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %14732 to i64*
  %14733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14734 = getelementptr inbounds %struct.GPR, %struct.GPR* %14733, i32 0, i32 15
  %14735 = getelementptr inbounds %struct.Reg, %struct.Reg* %14734, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %14735 to i64*
  %14736 = load i64, i64* %RBP.i505
  %14737 = sub i64 %14736, 60
  %14738 = load i64, i64* %PC.i503
  %14739 = add i64 %14738, 3
  store i64 %14739, i64* %PC.i503
  %14740 = inttoptr i64 %14737 to i32*
  %14741 = load i32, i32* %14740
  %14742 = zext i32 %14741 to i64
  store i64 %14742, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_43f90a, %struct.Memory** %MEMORY
  %loadMem_43f90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14744 = getelementptr inbounds %struct.GPR, %struct.GPR* %14743, i32 0, i32 33
  %14745 = getelementptr inbounds %struct.Reg, %struct.Reg* %14744, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %14745 to i64*
  %14746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14747 = getelementptr inbounds %struct.GPR, %struct.GPR* %14746, i32 0, i32 1
  %14748 = getelementptr inbounds %struct.Reg, %struct.Reg* %14747, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %14748 to i64*
  %14749 = load i64, i64* %RAX.i502
  %14750 = load i64, i64* %PC.i501
  %14751 = add i64 %14750, 3
  store i64 %14751, i64* %PC.i501
  %14752 = trunc i64 %14749 to i32
  %14753 = add i32 4, %14752
  %14754 = zext i32 %14753 to i64
  store i64 %14754, i64* %RAX.i502, align 8
  %14755 = icmp ult i32 %14753, %14752
  %14756 = icmp ult i32 %14753, 4
  %14757 = or i1 %14755, %14756
  %14758 = zext i1 %14757 to i8
  %14759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14758, i8* %14759, align 1
  %14760 = and i32 %14753, 255
  %14761 = call i32 @llvm.ctpop.i32(i32 %14760)
  %14762 = trunc i32 %14761 to i8
  %14763 = and i8 %14762, 1
  %14764 = xor i8 %14763, 1
  %14765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14764, i8* %14765, align 1
  %14766 = xor i64 4, %14749
  %14767 = trunc i64 %14766 to i32
  %14768 = xor i32 %14767, %14753
  %14769 = lshr i32 %14768, 4
  %14770 = trunc i32 %14769 to i8
  %14771 = and i8 %14770, 1
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14771, i8* %14772, align 1
  %14773 = icmp eq i32 %14753, 0
  %14774 = zext i1 %14773 to i8
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14774, i8* %14775, align 1
  %14776 = lshr i32 %14753, 31
  %14777 = trunc i32 %14776 to i8
  %14778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14777, i8* %14778, align 1
  %14779 = lshr i32 %14752, 31
  %14780 = xor i32 %14776, %14779
  %14781 = add i32 %14780, %14776
  %14782 = icmp eq i32 %14781, 2
  %14783 = zext i1 %14782 to i8
  %14784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14783, i8* %14784, align 1
  store %struct.Memory* %loadMem_43f90d, %struct.Memory** %MEMORY
  %loadMem_43f910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14786 = getelementptr inbounds %struct.GPR, %struct.GPR* %14785, i32 0, i32 33
  %14787 = getelementptr inbounds %struct.Reg, %struct.Reg* %14786, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %14787 to i64*
  %14788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14789 = getelementptr inbounds %struct.GPR, %struct.GPR* %14788, i32 0, i32 1
  %14790 = getelementptr inbounds %struct.Reg, %struct.Reg* %14789, i32 0, i32 0
  %EAX.i499 = bitcast %union.anon* %14790 to i32*
  %14791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14792 = getelementptr inbounds %struct.GPR, %struct.GPR* %14791, i32 0, i32 15
  %14793 = getelementptr inbounds %struct.Reg, %struct.Reg* %14792, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %14793 to i64*
  %14794 = load i64, i64* %RBP.i500
  %14795 = sub i64 %14794, 60
  %14796 = load i32, i32* %EAX.i499
  %14797 = zext i32 %14796 to i64
  %14798 = load i64, i64* %PC.i498
  %14799 = add i64 %14798, 3
  store i64 %14799, i64* %PC.i498
  %14800 = inttoptr i64 %14795 to i32*
  store i32 %14796, i32* %14800
  store %struct.Memory* %loadMem_43f910, %struct.Memory** %MEMORY
  %loadMem_43f913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14802 = getelementptr inbounds %struct.GPR, %struct.GPR* %14801, i32 0, i32 33
  %14803 = getelementptr inbounds %struct.Reg, %struct.Reg* %14802, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %14803 to i64*
  %14804 = load i64, i64* %PC.i497
  %14805 = add i64 %14804, -2315
  %14806 = load i64, i64* %PC.i497
  %14807 = add i64 %14806, 5
  store i64 %14807, i64* %PC.i497
  %14808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14805, i64* %14808, align 8
  store %struct.Memory* %loadMem_43f913, %struct.Memory** %MEMORY
  br label %block_.L_43f008

block_.L_43f918:                                  ; preds = %block_.L_43f008
  %loadMem_43f918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14810 = getelementptr inbounds %struct.GPR, %struct.GPR* %14809, i32 0, i32 33
  %14811 = getelementptr inbounds %struct.Reg, %struct.Reg* %14810, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %14811 to i64*
  %14812 = load i64, i64* %PC.i496
  %14813 = add i64 %14812, 5
  %14814 = load i64, i64* %PC.i496
  %14815 = add i64 %14814, 5
  store i64 %14815, i64* %PC.i496
  %14816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14813, i64* %14816, align 8
  store %struct.Memory* %loadMem_43f918, %struct.Memory** %MEMORY
  br label %block_.L_43f91d

block_.L_43f91d:                                  ; preds = %block_.L_43f918
  %loadMem_43f91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14818 = getelementptr inbounds %struct.GPR, %struct.GPR* %14817, i32 0, i32 33
  %14819 = getelementptr inbounds %struct.Reg, %struct.Reg* %14818, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %14819 to i64*
  %14820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14821 = getelementptr inbounds %struct.GPR, %struct.GPR* %14820, i32 0, i32 1
  %14822 = getelementptr inbounds %struct.Reg, %struct.Reg* %14821, i32 0, i32 0
  %RAX.i494 = bitcast %union.anon* %14822 to i64*
  %14823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14824 = getelementptr inbounds %struct.GPR, %struct.GPR* %14823, i32 0, i32 15
  %14825 = getelementptr inbounds %struct.Reg, %struct.Reg* %14824, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %14825 to i64*
  %14826 = load i64, i64* %RBP.i495
  %14827 = sub i64 %14826, 108
  %14828 = load i64, i64* %PC.i493
  %14829 = add i64 %14828, 3
  store i64 %14829, i64* %PC.i493
  %14830 = inttoptr i64 %14827 to i32*
  %14831 = load i32, i32* %14830
  %14832 = zext i32 %14831 to i64
  store i64 %14832, i64* %RAX.i494, align 8
  store %struct.Memory* %loadMem_43f91d, %struct.Memory** %MEMORY
  %loadMem_43f920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14834 = getelementptr inbounds %struct.GPR, %struct.GPR* %14833, i32 0, i32 33
  %14835 = getelementptr inbounds %struct.Reg, %struct.Reg* %14834, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %14835 to i64*
  %14836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14837 = getelementptr inbounds %struct.GPR, %struct.GPR* %14836, i32 0, i32 1
  %14838 = getelementptr inbounds %struct.Reg, %struct.Reg* %14837, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %14838 to i64*
  %14839 = load i64, i64* %RAX.i492
  %14840 = load i64, i64* %PC.i491
  %14841 = add i64 %14840, 3
  store i64 %14841, i64* %PC.i491
  %14842 = trunc i64 %14839 to i32
  %14843 = add i32 4, %14842
  %14844 = zext i32 %14843 to i64
  store i64 %14844, i64* %RAX.i492, align 8
  %14845 = icmp ult i32 %14843, %14842
  %14846 = icmp ult i32 %14843, 4
  %14847 = or i1 %14845, %14846
  %14848 = zext i1 %14847 to i8
  %14849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14848, i8* %14849, align 1
  %14850 = and i32 %14843, 255
  %14851 = call i32 @llvm.ctpop.i32(i32 %14850)
  %14852 = trunc i32 %14851 to i8
  %14853 = and i8 %14852, 1
  %14854 = xor i8 %14853, 1
  %14855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14854, i8* %14855, align 1
  %14856 = xor i64 4, %14839
  %14857 = trunc i64 %14856 to i32
  %14858 = xor i32 %14857, %14843
  %14859 = lshr i32 %14858, 4
  %14860 = trunc i32 %14859 to i8
  %14861 = and i8 %14860, 1
  %14862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14861, i8* %14862, align 1
  %14863 = icmp eq i32 %14843, 0
  %14864 = zext i1 %14863 to i8
  %14865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14864, i8* %14865, align 1
  %14866 = lshr i32 %14843, 31
  %14867 = trunc i32 %14866 to i8
  %14868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14867, i8* %14868, align 1
  %14869 = lshr i32 %14842, 31
  %14870 = xor i32 %14866, %14869
  %14871 = add i32 %14870, %14866
  %14872 = icmp eq i32 %14871, 2
  %14873 = zext i1 %14872 to i8
  %14874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14873, i8* %14874, align 1
  store %struct.Memory* %loadMem_43f920, %struct.Memory** %MEMORY
  %loadMem_43f923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14876 = getelementptr inbounds %struct.GPR, %struct.GPR* %14875, i32 0, i32 33
  %14877 = getelementptr inbounds %struct.Reg, %struct.Reg* %14876, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %14877 to i64*
  %14878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14879 = getelementptr inbounds %struct.GPR, %struct.GPR* %14878, i32 0, i32 1
  %14880 = getelementptr inbounds %struct.Reg, %struct.Reg* %14879, i32 0, i32 0
  %EAX.i489 = bitcast %union.anon* %14880 to i32*
  %14881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14882 = getelementptr inbounds %struct.GPR, %struct.GPR* %14881, i32 0, i32 15
  %14883 = getelementptr inbounds %struct.Reg, %struct.Reg* %14882, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %14883 to i64*
  %14884 = load i64, i64* %RBP.i490
  %14885 = sub i64 %14884, 108
  %14886 = load i32, i32* %EAX.i489
  %14887 = zext i32 %14886 to i64
  %14888 = load i64, i64* %PC.i488
  %14889 = add i64 %14888, 3
  store i64 %14889, i64* %PC.i488
  %14890 = inttoptr i64 %14885 to i32*
  store i32 %14886, i32* %14890
  store %struct.Memory* %loadMem_43f923, %struct.Memory** %MEMORY
  %loadMem_43f926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14892 = getelementptr inbounds %struct.GPR, %struct.GPR* %14891, i32 0, i32 33
  %14893 = getelementptr inbounds %struct.Reg, %struct.Reg* %14892, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %14893 to i64*
  %14894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14895 = getelementptr inbounds %struct.GPR, %struct.GPR* %14894, i32 0, i32 1
  %14896 = getelementptr inbounds %struct.Reg, %struct.Reg* %14895, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %14896 to i64*
  %14897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14898 = getelementptr inbounds %struct.GPR, %struct.GPR* %14897, i32 0, i32 15
  %14899 = getelementptr inbounds %struct.Reg, %struct.Reg* %14898, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %14899 to i64*
  %14900 = load i64, i64* %RBP.i487
  %14901 = sub i64 %14900, 56
  %14902 = load i64, i64* %PC.i485
  %14903 = add i64 %14902, 3
  store i64 %14903, i64* %PC.i485
  %14904 = inttoptr i64 %14901 to i32*
  %14905 = load i32, i32* %14904
  %14906 = zext i32 %14905 to i64
  store i64 %14906, i64* %RAX.i486, align 8
  store %struct.Memory* %loadMem_43f926, %struct.Memory** %MEMORY
  %loadMem_43f929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14908 = getelementptr inbounds %struct.GPR, %struct.GPR* %14907, i32 0, i32 33
  %14909 = getelementptr inbounds %struct.Reg, %struct.Reg* %14908, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %14909 to i64*
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14911 = getelementptr inbounds %struct.GPR, %struct.GPR* %14910, i32 0, i32 1
  %14912 = getelementptr inbounds %struct.Reg, %struct.Reg* %14911, i32 0, i32 0
  %RAX.i484 = bitcast %union.anon* %14912 to i64*
  %14913 = load i64, i64* %RAX.i484
  %14914 = load i64, i64* %PC.i483
  %14915 = add i64 %14914, 3
  store i64 %14915, i64* %PC.i483
  %14916 = trunc i64 %14913 to i32
  %14917 = add i32 4, %14916
  %14918 = zext i32 %14917 to i64
  store i64 %14918, i64* %RAX.i484, align 8
  %14919 = icmp ult i32 %14917, %14916
  %14920 = icmp ult i32 %14917, 4
  %14921 = or i1 %14919, %14920
  %14922 = zext i1 %14921 to i8
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14922, i8* %14923, align 1
  %14924 = and i32 %14917, 255
  %14925 = call i32 @llvm.ctpop.i32(i32 %14924)
  %14926 = trunc i32 %14925 to i8
  %14927 = and i8 %14926, 1
  %14928 = xor i8 %14927, 1
  %14929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14928, i8* %14929, align 1
  %14930 = xor i64 4, %14913
  %14931 = trunc i64 %14930 to i32
  %14932 = xor i32 %14931, %14917
  %14933 = lshr i32 %14932, 4
  %14934 = trunc i32 %14933 to i8
  %14935 = and i8 %14934, 1
  %14936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14935, i8* %14936, align 1
  %14937 = icmp eq i32 %14917, 0
  %14938 = zext i1 %14937 to i8
  %14939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14938, i8* %14939, align 1
  %14940 = lshr i32 %14917, 31
  %14941 = trunc i32 %14940 to i8
  %14942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14941, i8* %14942, align 1
  %14943 = lshr i32 %14916, 31
  %14944 = xor i32 %14940, %14943
  %14945 = add i32 %14944, %14940
  %14946 = icmp eq i32 %14945, 2
  %14947 = zext i1 %14946 to i8
  %14948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14947, i8* %14948, align 1
  store %struct.Memory* %loadMem_43f929, %struct.Memory** %MEMORY
  %loadMem_43f92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14950 = getelementptr inbounds %struct.GPR, %struct.GPR* %14949, i32 0, i32 33
  %14951 = getelementptr inbounds %struct.Reg, %struct.Reg* %14950, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %14951 to i64*
  %14952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14953 = getelementptr inbounds %struct.GPR, %struct.GPR* %14952, i32 0, i32 1
  %14954 = getelementptr inbounds %struct.Reg, %struct.Reg* %14953, i32 0, i32 0
  %EAX.i481 = bitcast %union.anon* %14954 to i32*
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14956 = getelementptr inbounds %struct.GPR, %struct.GPR* %14955, i32 0, i32 15
  %14957 = getelementptr inbounds %struct.Reg, %struct.Reg* %14956, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %14957 to i64*
  %14958 = load i64, i64* %RBP.i482
  %14959 = sub i64 %14958, 56
  %14960 = load i32, i32* %EAX.i481
  %14961 = zext i32 %14960 to i64
  %14962 = load i64, i64* %PC.i480
  %14963 = add i64 %14962, 3
  store i64 %14963, i64* %PC.i480
  %14964 = inttoptr i64 %14959 to i32*
  store i32 %14960, i32* %14964
  store %struct.Memory* %loadMem_43f92c, %struct.Memory** %MEMORY
  %loadMem_43f92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14966 = getelementptr inbounds %struct.GPR, %struct.GPR* %14965, i32 0, i32 33
  %14967 = getelementptr inbounds %struct.Reg, %struct.Reg* %14966, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %14967 to i64*
  %14968 = load i64, i64* %PC.i479
  %14969 = add i64 %14968, -2393
  %14970 = load i64, i64* %PC.i479
  %14971 = add i64 %14970, 5
  store i64 %14971, i64* %PC.i479
  %14972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14969, i64* %14972, align 8
  store %struct.Memory* %loadMem_43f92f, %struct.Memory** %MEMORY
  br label %block_.L_43efd6

block_.L_43f934:                                  ; preds = %block_.L_43efd6
  %loadMem_43f934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14974 = getelementptr inbounds %struct.GPR, %struct.GPR* %14973, i32 0, i32 33
  %14975 = getelementptr inbounds %struct.Reg, %struct.Reg* %14974, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %14975 to i64*
  %14976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14977 = getelementptr inbounds %struct.GPR, %struct.GPR* %14976, i32 0, i32 15
  %14978 = getelementptr inbounds %struct.Reg, %struct.Reg* %14977, i32 0, i32 0
  %RBP.i478 = bitcast %union.anon* %14978 to i64*
  %14979 = load i64, i64* %RBP.i478
  %14980 = sub i64 %14979, 132
  %14981 = load i64, i64* %PC.i477
  %14982 = add i64 %14981, 7
  store i64 %14982, i64* %PC.i477
  %14983 = inttoptr i64 %14980 to i32*
  %14984 = load i32, i32* %14983
  %14985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14985, align 1
  %14986 = and i32 %14984, 255
  %14987 = call i32 @llvm.ctpop.i32(i32 %14986)
  %14988 = trunc i32 %14987 to i8
  %14989 = and i8 %14988, 1
  %14990 = xor i8 %14989, 1
  %14991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14990, i8* %14991, align 1
  %14992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14992, align 1
  %14993 = icmp eq i32 %14984, 0
  %14994 = zext i1 %14993 to i8
  %14995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14994, i8* %14995, align 1
  %14996 = lshr i32 %14984, 31
  %14997 = trunc i32 %14996 to i8
  %14998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14997, i8* %14998, align 1
  %14999 = lshr i32 %14984, 31
  %15000 = xor i32 %14996, %14999
  %15001 = add i32 %15000, %14999
  %15002 = icmp eq i32 %15001, 2
  %15003 = zext i1 %15002 to i8
  %15004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15003, i8* %15004, align 1
  store %struct.Memory* %loadMem_43f934, %struct.Memory** %MEMORY
  %loadMem_43f93b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15006 = getelementptr inbounds %struct.GPR, %struct.GPR* %15005, i32 0, i32 33
  %15007 = getelementptr inbounds %struct.Reg, %struct.Reg* %15006, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %15007 to i64*
  %15008 = load i64, i64* %PC.i476
  %15009 = add i64 %15008, 335
  %15010 = load i64, i64* %PC.i476
  %15011 = add i64 %15010, 6
  %15012 = load i64, i64* %PC.i476
  %15013 = add i64 %15012, 6
  store i64 %15013, i64* %PC.i476
  %15014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15015 = load i8, i8* %15014, align 1
  store i8 %15015, i8* %BRANCH_TAKEN, align 1
  %15016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15017 = icmp ne i8 %15015, 0
  %15018 = select i1 %15017, i64 %15009, i64 %15011
  store i64 %15018, i64* %15016, align 8
  store %struct.Memory* %loadMem_43f93b, %struct.Memory** %MEMORY
  %loadBr_43f93b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f93b = icmp eq i8 %loadBr_43f93b, 1
  br i1 %cmpBr_43f93b, label %block_.L_43fa8a, label %block_43f941

block_43f941:                                     ; preds = %block_.L_43f934
  %loadMem_43f941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15020 = getelementptr inbounds %struct.GPR, %struct.GPR* %15019, i32 0, i32 33
  %15021 = getelementptr inbounds %struct.Reg, %struct.Reg* %15020, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %15021 to i64*
  %15022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15023 = getelementptr inbounds %struct.GPR, %struct.GPR* %15022, i32 0, i32 1
  %15024 = getelementptr inbounds %struct.Reg, %struct.Reg* %15023, i32 0, i32 0
  %RAX.i475 = bitcast %union.anon* %15024 to i64*
  %15025 = load i64, i64* %PC.i474
  %15026 = add i64 %15025, 8
  store i64 %15026, i64* %PC.i474
  %15027 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15027, i64* %RAX.i475, align 8
  store %struct.Memory* %loadMem_43f941, %struct.Memory** %MEMORY
  %loadMem_43f949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15029 = getelementptr inbounds %struct.GPR, %struct.GPR* %15028, i32 0, i32 33
  %15030 = getelementptr inbounds %struct.Reg, %struct.Reg* %15029, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %15030 to i64*
  %15031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15032 = getelementptr inbounds %struct.GPR, %struct.GPR* %15031, i32 0, i32 1
  %15033 = getelementptr inbounds %struct.Reg, %struct.Reg* %15032, i32 0, i32 0
  %RAX.i473 = bitcast %union.anon* %15033 to i64*
  %15034 = load i64, i64* %RAX.i473
  %15035 = add i64 %15034, 72392
  %15036 = load i64, i64* %PC.i472
  %15037 = add i64 %15036, 7
  store i64 %15037, i64* %PC.i472
  %15038 = inttoptr i64 %15035 to i32*
  %15039 = load i32, i32* %15038
  %15040 = sub i32 %15039, 1
  %15041 = icmp ult i32 %15039, 1
  %15042 = zext i1 %15041 to i8
  %15043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15042, i8* %15043, align 1
  %15044 = and i32 %15040, 255
  %15045 = call i32 @llvm.ctpop.i32(i32 %15044)
  %15046 = trunc i32 %15045 to i8
  %15047 = and i8 %15046, 1
  %15048 = xor i8 %15047, 1
  %15049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15048, i8* %15049, align 1
  %15050 = xor i32 %15039, 1
  %15051 = xor i32 %15050, %15040
  %15052 = lshr i32 %15051, 4
  %15053 = trunc i32 %15052 to i8
  %15054 = and i8 %15053, 1
  %15055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15054, i8* %15055, align 1
  %15056 = icmp eq i32 %15040, 0
  %15057 = zext i1 %15056 to i8
  %15058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15057, i8* %15058, align 1
  %15059 = lshr i32 %15040, 31
  %15060 = trunc i32 %15059 to i8
  %15061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15060, i8* %15061, align 1
  %15062 = lshr i32 %15039, 31
  %15063 = xor i32 %15059, %15062
  %15064 = add i32 %15063, %15062
  %15065 = icmp eq i32 %15064, 2
  %15066 = zext i1 %15065 to i8
  %15067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15066, i8* %15067, align 1
  store %struct.Memory* %loadMem_43f949, %struct.Memory** %MEMORY
  %loadMem_43f950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15069 = getelementptr inbounds %struct.GPR, %struct.GPR* %15068, i32 0, i32 33
  %15070 = getelementptr inbounds %struct.Reg, %struct.Reg* %15069, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %15070 to i64*
  %15071 = load i64, i64* %PC.i471
  %15072 = add i64 %15071, 309
  %15073 = load i64, i64* %PC.i471
  %15074 = add i64 %15073, 6
  %15075 = load i64, i64* %PC.i471
  %15076 = add i64 %15075, 6
  store i64 %15076, i64* %PC.i471
  %15077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15078 = load i8, i8* %15077, align 1
  store i8 %15078, i8* %BRANCH_TAKEN, align 1
  %15079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15080 = icmp ne i8 %15078, 0
  %15081 = select i1 %15080, i64 %15072, i64 %15074
  store i64 %15081, i64* %15079, align 8
  store %struct.Memory* %loadMem_43f950, %struct.Memory** %MEMORY
  %loadBr_43f950 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f950 = icmp eq i8 %loadBr_43f950, 1
  br i1 %cmpBr_43f950, label %block_.L_43fa85, label %block_43f956

block_43f956:                                     ; preds = %block_43f941
  %loadMem_43f956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15083 = getelementptr inbounds %struct.GPR, %struct.GPR* %15082, i32 0, i32 33
  %15084 = getelementptr inbounds %struct.Reg, %struct.Reg* %15083, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %15084 to i64*
  %15085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15086 = getelementptr inbounds %struct.GPR, %struct.GPR* %15085, i32 0, i32 15
  %15087 = getelementptr inbounds %struct.Reg, %struct.Reg* %15086, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %15087 to i64*
  %15088 = load i64, i64* %RBP.i470
  %15089 = sub i64 %15088, 116
  %15090 = load i64, i64* %PC.i469
  %15091 = add i64 %15090, 4
  store i64 %15091, i64* %PC.i469
  %15092 = inttoptr i64 %15089 to i32*
  %15093 = load i32, i32* %15092
  %15094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15094, align 1
  %15095 = and i32 %15093, 255
  %15096 = call i32 @llvm.ctpop.i32(i32 %15095)
  %15097 = trunc i32 %15096 to i8
  %15098 = and i8 %15097, 1
  %15099 = xor i8 %15098, 1
  %15100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15099, i8* %15100, align 1
  %15101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15101, align 1
  %15102 = icmp eq i32 %15093, 0
  %15103 = zext i1 %15102 to i8
  %15104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15103, i8* %15104, align 1
  %15105 = lshr i32 %15093, 31
  %15106 = trunc i32 %15105 to i8
  %15107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15106, i8* %15107, align 1
  %15108 = lshr i32 %15093, 31
  %15109 = xor i32 %15105, %15108
  %15110 = add i32 %15109, %15108
  %15111 = icmp eq i32 %15110, 2
  %15112 = zext i1 %15111 to i8
  %15113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15112, i8* %15113, align 1
  store %struct.Memory* %loadMem_43f956, %struct.Memory** %MEMORY
  %loadMem_43f95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15115 = getelementptr inbounds %struct.GPR, %struct.GPR* %15114, i32 0, i32 33
  %15116 = getelementptr inbounds %struct.Reg, %struct.Reg* %15115, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %15116 to i64*
  %15117 = load i64, i64* %PC.i468
  %15118 = add i64 %15117, 299
  %15119 = load i64, i64* %PC.i468
  %15120 = add i64 %15119, 6
  %15121 = load i64, i64* %PC.i468
  %15122 = add i64 %15121, 6
  store i64 %15122, i64* %PC.i468
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15124 = load i8, i8* %15123, align 1
  %15125 = icmp eq i8 %15124, 0
  %15126 = zext i1 %15125 to i8
  store i8 %15126, i8* %BRANCH_TAKEN, align 1
  %15127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15128 = select i1 %15125, i64 %15118, i64 %15120
  store i64 %15128, i64* %15127, align 8
  store %struct.Memory* %loadMem_43f95a, %struct.Memory** %MEMORY
  %loadBr_43f95a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f95a = icmp eq i8 %loadBr_43f95a, 1
  br i1 %cmpBr_43f95a, label %block_.L_43fa85, label %block_43f960

block_43f960:                                     ; preds = %block_43f956
  %loadMem_43f960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15130 = getelementptr inbounds %struct.GPR, %struct.GPR* %15129, i32 0, i32 33
  %15131 = getelementptr inbounds %struct.Reg, %struct.Reg* %15130, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %15131 to i64*
  %15132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15133 = getelementptr inbounds %struct.GPR, %struct.GPR* %15132, i32 0, i32 1
  %15134 = getelementptr inbounds %struct.Reg, %struct.Reg* %15133, i32 0, i32 0
  %RAX.i467 = bitcast %union.anon* %15134 to i64*
  %15135 = load i64, i64* %PC.i466
  %15136 = add i64 %15135, 8
  store i64 %15136, i64* %PC.i466
  %15137 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15137, i64* %RAX.i467, align 8
  store %struct.Memory* %loadMem_43f960, %struct.Memory** %MEMORY
  %loadMem_43f968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15139 = getelementptr inbounds %struct.GPR, %struct.GPR* %15138, i32 0, i32 33
  %15140 = getelementptr inbounds %struct.Reg, %struct.Reg* %15139, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %15140 to i64*
  %15141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15142 = getelementptr inbounds %struct.GPR, %struct.GPR* %15141, i32 0, i32 1
  %15143 = getelementptr inbounds %struct.Reg, %struct.Reg* %15142, i32 0, i32 0
  %RAX.i465 = bitcast %union.anon* %15143 to i64*
  %15144 = load i64, i64* %RAX.i465
  %15145 = add i64 %15144, 24
  %15146 = load i64, i64* %PC.i464
  %15147 = add i64 %15146, 4
  store i64 %15147, i64* %PC.i464
  %15148 = inttoptr i64 %15145 to i32*
  %15149 = load i32, i32* %15148
  %15150 = sub i32 %15149, 3
  %15151 = icmp ult i32 %15149, 3
  %15152 = zext i1 %15151 to i8
  %15153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15152, i8* %15153, align 1
  %15154 = and i32 %15150, 255
  %15155 = call i32 @llvm.ctpop.i32(i32 %15154)
  %15156 = trunc i32 %15155 to i8
  %15157 = and i8 %15156, 1
  %15158 = xor i8 %15157, 1
  %15159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15158, i8* %15159, align 1
  %15160 = xor i32 %15149, 3
  %15161 = xor i32 %15160, %15150
  %15162 = lshr i32 %15161, 4
  %15163 = trunc i32 %15162 to i8
  %15164 = and i8 %15163, 1
  %15165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15164, i8* %15165, align 1
  %15166 = icmp eq i32 %15150, 0
  %15167 = zext i1 %15166 to i8
  %15168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15167, i8* %15168, align 1
  %15169 = lshr i32 %15150, 31
  %15170 = trunc i32 %15169 to i8
  %15171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15170, i8* %15171, align 1
  %15172 = lshr i32 %15149, 31
  %15173 = xor i32 %15169, %15172
  %15174 = add i32 %15173, %15172
  %15175 = icmp eq i32 %15174, 2
  %15176 = zext i1 %15175 to i8
  %15177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15176, i8* %15177, align 1
  store %struct.Memory* %loadMem_43f968, %struct.Memory** %MEMORY
  %loadMem_43f96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15179 = getelementptr inbounds %struct.GPR, %struct.GPR* %15178, i32 0, i32 33
  %15180 = getelementptr inbounds %struct.Reg, %struct.Reg* %15179, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %15180 to i64*
  %15181 = load i64, i64* %PC.i463
  %15182 = add i64 %15181, 23
  %15183 = load i64, i64* %PC.i463
  %15184 = add i64 %15183, 6
  %15185 = load i64, i64* %PC.i463
  %15186 = add i64 %15185, 6
  store i64 %15186, i64* %PC.i463
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15188 = load i8, i8* %15187, align 1
  store i8 %15188, i8* %BRANCH_TAKEN, align 1
  %15189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15190 = icmp ne i8 %15188, 0
  %15191 = select i1 %15190, i64 %15182, i64 %15184
  store i64 %15191, i64* %15189, align 8
  store %struct.Memory* %loadMem_43f96c, %struct.Memory** %MEMORY
  %loadBr_43f96c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f96c = icmp eq i8 %loadBr_43f96c, 1
  br i1 %cmpBr_43f96c, label %block_.L_43f983, label %block_43f972

block_43f972:                                     ; preds = %block_43f960
  %loadMem_43f972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15193 = getelementptr inbounds %struct.GPR, %struct.GPR* %15192, i32 0, i32 33
  %15194 = getelementptr inbounds %struct.Reg, %struct.Reg* %15193, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %15194 to i64*
  %15195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15196 = getelementptr inbounds %struct.GPR, %struct.GPR* %15195, i32 0, i32 9
  %15197 = getelementptr inbounds %struct.Reg, %struct.Reg* %15196, i32 0, i32 0
  %RSI.i461 = bitcast %union.anon* %15197 to i64*
  %15198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15199 = getelementptr inbounds %struct.GPR, %struct.GPR* %15198, i32 0, i32 15
  %15200 = getelementptr inbounds %struct.Reg, %struct.Reg* %15199, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %15200 to i64*
  %15201 = load i64, i64* %RBP.i462
  %15202 = sub i64 %15201, 88
  %15203 = load i64, i64* %PC.i460
  %15204 = add i64 %15203, 4
  store i64 %15204, i64* %PC.i460
  store i64 %15202, i64* %RSI.i461, align 8
  store %struct.Memory* %loadMem_43f972, %struct.Memory** %MEMORY
  %loadMem_43f976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15206 = getelementptr inbounds %struct.GPR, %struct.GPR* %15205, i32 0, i32 33
  %15207 = getelementptr inbounds %struct.Reg, %struct.Reg* %15206, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %15207 to i64*
  %15208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15209 = getelementptr inbounds %struct.GPR, %struct.GPR* %15208, i32 0, i32 7
  %15210 = getelementptr inbounds %struct.Reg, %struct.Reg* %15209, i32 0, i32 0
  %EDX.i458 = bitcast %union.anon* %15210 to i32*
  %15211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15212 = getelementptr inbounds %struct.GPR, %struct.GPR* %15211, i32 0, i32 7
  %15213 = getelementptr inbounds %struct.Reg, %struct.Reg* %15212, i32 0, i32 0
  %RDX.i459 = bitcast %union.anon* %15213 to i64*
  %15214 = load i64, i64* %RDX.i459
  %15215 = load i32, i32* %EDX.i458
  %15216 = zext i32 %15215 to i64
  %15217 = load i64, i64* %PC.i457
  %15218 = add i64 %15217, 2
  store i64 %15218, i64* %PC.i457
  %15219 = xor i64 %15216, %15214
  %15220 = trunc i64 %15219 to i32
  %15221 = and i64 %15219, 4294967295
  store i64 %15221, i64* %RDX.i459, align 8
  %15222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15222, align 1
  %15223 = and i32 %15220, 255
  %15224 = call i32 @llvm.ctpop.i32(i32 %15223)
  %15225 = trunc i32 %15224 to i8
  %15226 = and i8 %15225, 1
  %15227 = xor i8 %15226, 1
  %15228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15227, i8* %15228, align 1
  %15229 = icmp eq i32 %15220, 0
  %15230 = zext i1 %15229 to i8
  %15231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15230, i8* %15231, align 1
  %15232 = lshr i32 %15220, 31
  %15233 = trunc i32 %15232 to i8
  %15234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15233, i8* %15234, align 1
  %15235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15235, align 1
  %15236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15236, align 1
  store %struct.Memory* %loadMem_43f976, %struct.Memory** %MEMORY
  %loadMem_43f978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15238 = getelementptr inbounds %struct.GPR, %struct.GPR* %15237, i32 0, i32 33
  %15239 = getelementptr inbounds %struct.Reg, %struct.Reg* %15238, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %15239 to i64*
  %15240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15241 = getelementptr inbounds %struct.GPR, %struct.GPR* %15240, i32 0, i32 11
  %15242 = getelementptr inbounds %struct.Reg, %struct.Reg* %15241, i32 0, i32 0
  %RDI.i455 = bitcast %union.anon* %15242 to i64*
  %15243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15244 = getelementptr inbounds %struct.GPR, %struct.GPR* %15243, i32 0, i32 15
  %15245 = getelementptr inbounds %struct.Reg, %struct.Reg* %15244, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %15245 to i64*
  %15246 = load i64, i64* %RBP.i456
  %15247 = sub i64 %15246, 36
  %15248 = load i64, i64* %PC.i454
  %15249 = add i64 %15248, 3
  store i64 %15249, i64* %PC.i454
  %15250 = inttoptr i64 %15247 to i32*
  %15251 = load i32, i32* %15250
  %15252 = zext i32 %15251 to i64
  store i64 %15252, i64* %RDI.i455, align 8
  store %struct.Memory* %loadMem_43f978, %struct.Memory** %MEMORY
  %loadMem1_43f97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15254 = getelementptr inbounds %struct.GPR, %struct.GPR* %15253, i32 0, i32 33
  %15255 = getelementptr inbounds %struct.Reg, %struct.Reg* %15254, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %15255 to i64*
  %15256 = load i64, i64* %PC.i453
  %15257 = add i64 %15256, 437701
  %15258 = load i64, i64* %PC.i453
  %15259 = add i64 %15258, 5
  %15260 = load i64, i64* %PC.i453
  %15261 = add i64 %15260, 5
  store i64 %15261, i64* %PC.i453
  %15262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15263 = load i64, i64* %15262, align 8
  %15264 = add i64 %15263, -8
  %15265 = inttoptr i64 %15264 to i64*
  store i64 %15259, i64* %15265
  store i64 %15264, i64* %15262, align 8
  %15266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15257, i64* %15266, align 8
  store %struct.Memory* %loadMem1_43f97b, %struct.Memory** %MEMORY
  %loadMem2_43f97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f97b = load i64, i64* %3
  %call2_43f97b = call %struct.Memory* @sub_4aa740.dct_luma8x8(%struct.State* %0, i64 %loadPC_43f97b, %struct.Memory* %loadMem2_43f97b)
  store %struct.Memory* %call2_43f97b, %struct.Memory** %MEMORY
  %loadMem_43f980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15268 = getelementptr inbounds %struct.GPR, %struct.GPR* %15267, i32 0, i32 33
  %15269 = getelementptr inbounds %struct.Reg, %struct.Reg* %15268, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %15269 to i64*
  %15270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15271 = getelementptr inbounds %struct.GPR, %struct.GPR* %15270, i32 0, i32 1
  %15272 = getelementptr inbounds %struct.Reg, %struct.Reg* %15271, i32 0, i32 0
  %EAX.i451 = bitcast %union.anon* %15272 to i32*
  %15273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15274 = getelementptr inbounds %struct.GPR, %struct.GPR* %15273, i32 0, i32 15
  %15275 = getelementptr inbounds %struct.Reg, %struct.Reg* %15274, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %15275 to i64*
  %15276 = load i64, i64* %RBP.i452
  %15277 = sub i64 %15276, 80
  %15278 = load i32, i32* %EAX.i451
  %15279 = zext i32 %15278 to i64
  %15280 = load i64, i64* %PC.i450
  %15281 = add i64 %15280, 3
  store i64 %15281, i64* %PC.i450
  %15282 = inttoptr i64 %15277 to i32*
  store i32 %15278, i32* %15282
  store %struct.Memory* %loadMem_43f980, %struct.Memory** %MEMORY
  br label %block_.L_43f983

block_.L_43f983:                                  ; preds = %block_43f972, %block_43f960
  %loadMem_43f983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15284 = getelementptr inbounds %struct.GPR, %struct.GPR* %15283, i32 0, i32 33
  %15285 = getelementptr inbounds %struct.Reg, %struct.Reg* %15284, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %15285 to i64*
  %15286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15287 = getelementptr inbounds %struct.GPR, %struct.GPR* %15286, i32 0, i32 1
  %15288 = getelementptr inbounds %struct.Reg, %struct.Reg* %15287, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %15288 to i64*
  %15289 = load i64, i64* %PC.i448
  %15290 = add i64 %15289, 8
  store i64 %15290, i64* %PC.i448
  %15291 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15291, i64* %RAX.i449, align 8
  store %struct.Memory* %loadMem_43f983, %struct.Memory** %MEMORY
  %loadMem_43f98b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15293 = getelementptr inbounds %struct.GPR, %struct.GPR* %15292, i32 0, i32 33
  %15294 = getelementptr inbounds %struct.Reg, %struct.Reg* %15293, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %15294 to i64*
  %15295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15296 = getelementptr inbounds %struct.GPR, %struct.GPR* %15295, i32 0, i32 1
  %15297 = getelementptr inbounds %struct.Reg, %struct.Reg* %15296, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %15297 to i64*
  %15298 = load i64, i64* %RAX.i447
  %15299 = add i64 %15298, 72724
  %15300 = load i64, i64* %PC.i446
  %15301 = add i64 %15300, 7
  store i64 %15301, i64* %PC.i446
  %15302 = inttoptr i64 %15299 to i32*
  %15303 = load i32, i32* %15302
  %15304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15304, align 1
  %15305 = and i32 %15303, 255
  %15306 = call i32 @llvm.ctpop.i32(i32 %15305)
  %15307 = trunc i32 %15306 to i8
  %15308 = and i8 %15307, 1
  %15309 = xor i8 %15308, 1
  %15310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15309, i8* %15310, align 1
  %15311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15311, align 1
  %15312 = icmp eq i32 %15303, 0
  %15313 = zext i1 %15312 to i8
  %15314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15313, i8* %15314, align 1
  %15315 = lshr i32 %15303, 31
  %15316 = trunc i32 %15315 to i8
  %15317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15316, i8* %15317, align 1
  %15318 = lshr i32 %15303, 31
  %15319 = xor i32 %15315, %15318
  %15320 = add i32 %15319, %15318
  %15321 = icmp eq i32 %15320, 2
  %15322 = zext i1 %15321 to i8
  %15323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15322, i8* %15323, align 1
  store %struct.Memory* %loadMem_43f98b, %struct.Memory** %MEMORY
  %loadMem_43f992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15325 = getelementptr inbounds %struct.GPR, %struct.GPR* %15324, i32 0, i32 33
  %15326 = getelementptr inbounds %struct.Reg, %struct.Reg* %15325, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %15326 to i64*
  %15327 = load i64, i64* %PC.i445
  %15328 = add i64 %15327, 149
  %15329 = load i64, i64* %PC.i445
  %15330 = add i64 %15329, 6
  %15331 = load i64, i64* %PC.i445
  %15332 = add i64 %15331, 6
  store i64 %15332, i64* %PC.i445
  %15333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15334 = load i8, i8* %15333, align 1
  store i8 %15334, i8* %BRANCH_TAKEN, align 1
  %15335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15336 = icmp ne i8 %15334, 0
  %15337 = select i1 %15336, i64 %15328, i64 %15330
  store i64 %15337, i64* %15335, align 8
  store %struct.Memory* %loadMem_43f992, %struct.Memory** %MEMORY
  %loadBr_43f992 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f992 = icmp eq i8 %loadBr_43f992, 1
  br i1 %cmpBr_43f992, label %block_.L_43fa27, label %block_43f998

block_43f998:                                     ; preds = %block_.L_43f983
  %loadMem_43f998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15339 = getelementptr inbounds %struct.GPR, %struct.GPR* %15338, i32 0, i32 33
  %15340 = getelementptr inbounds %struct.Reg, %struct.Reg* %15339, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %15340 to i64*
  %15341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15342 = getelementptr inbounds %struct.GPR, %struct.GPR* %15341, i32 0, i32 15
  %15343 = getelementptr inbounds %struct.Reg, %struct.Reg* %15342, i32 0, i32 0
  %RBP.i444 = bitcast %union.anon* %15343 to i64*
  %15344 = load i64, i64* %RBP.i444
  %15345 = sub i64 %15344, 76
  %15346 = load i64, i64* %PC.i443
  %15347 = add i64 %15346, 7
  store i64 %15347, i64* %PC.i443
  %15348 = inttoptr i64 %15345 to i32*
  store i32 0, i32* %15348
  store %struct.Memory* %loadMem_43f998, %struct.Memory** %MEMORY
  br label %block_.L_43f99f

block_.L_43f99f:                                  ; preds = %block_.L_43fa14, %block_43f998
  %loadMem_43f99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15350 = getelementptr inbounds %struct.GPR, %struct.GPR* %15349, i32 0, i32 33
  %15351 = getelementptr inbounds %struct.Reg, %struct.Reg* %15350, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %15351 to i64*
  %15352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15353 = getelementptr inbounds %struct.GPR, %struct.GPR* %15352, i32 0, i32 15
  %15354 = getelementptr inbounds %struct.Reg, %struct.Reg* %15353, i32 0, i32 0
  %RBP.i442 = bitcast %union.anon* %15354 to i64*
  %15355 = load i64, i64* %RBP.i442
  %15356 = sub i64 %15355, 76
  %15357 = load i64, i64* %PC.i441
  %15358 = add i64 %15357, 4
  store i64 %15358, i64* %PC.i441
  %15359 = inttoptr i64 %15356 to i32*
  %15360 = load i32, i32* %15359
  %15361 = sub i32 %15360, 8
  %15362 = icmp ult i32 %15360, 8
  %15363 = zext i1 %15362 to i8
  %15364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15363, i8* %15364, align 1
  %15365 = and i32 %15361, 255
  %15366 = call i32 @llvm.ctpop.i32(i32 %15365)
  %15367 = trunc i32 %15366 to i8
  %15368 = and i8 %15367, 1
  %15369 = xor i8 %15368, 1
  %15370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15369, i8* %15370, align 1
  %15371 = xor i32 %15360, 8
  %15372 = xor i32 %15371, %15361
  %15373 = lshr i32 %15372, 4
  %15374 = trunc i32 %15373 to i8
  %15375 = and i8 %15374, 1
  %15376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15375, i8* %15376, align 1
  %15377 = icmp eq i32 %15361, 0
  %15378 = zext i1 %15377 to i8
  %15379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15378, i8* %15379, align 1
  %15380 = lshr i32 %15361, 31
  %15381 = trunc i32 %15380 to i8
  %15382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15381, i8* %15382, align 1
  %15383 = lshr i32 %15360, 31
  %15384 = xor i32 %15380, %15383
  %15385 = add i32 %15384, %15383
  %15386 = icmp eq i32 %15385, 2
  %15387 = zext i1 %15386 to i8
  %15388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15387, i8* %15388, align 1
  store %struct.Memory* %loadMem_43f99f, %struct.Memory** %MEMORY
  %loadMem_43f9a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15390 = getelementptr inbounds %struct.GPR, %struct.GPR* %15389, i32 0, i32 33
  %15391 = getelementptr inbounds %struct.Reg, %struct.Reg* %15390, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %15391 to i64*
  %15392 = load i64, i64* %PC.i440
  %15393 = add i64 %15392, 127
  %15394 = load i64, i64* %PC.i440
  %15395 = add i64 %15394, 6
  %15396 = load i64, i64* %PC.i440
  %15397 = add i64 %15396, 6
  store i64 %15397, i64* %PC.i440
  %15398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15399 = load i8, i8* %15398, align 1
  %15400 = icmp ne i8 %15399, 0
  %15401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15402 = load i8, i8* %15401, align 1
  %15403 = icmp ne i8 %15402, 0
  %15404 = xor i1 %15400, %15403
  %15405 = xor i1 %15404, true
  %15406 = zext i1 %15405 to i8
  store i8 %15406, i8* %BRANCH_TAKEN, align 1
  %15407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15408 = select i1 %15404, i64 %15395, i64 %15393
  store i64 %15408, i64* %15407, align 8
  store %struct.Memory* %loadMem_43f9a3, %struct.Memory** %MEMORY
  %loadBr_43f9a3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f9a3 = icmp eq i8 %loadBr_43f9a3, 1
  br i1 %cmpBr_43f9a3, label %block_.L_43fa22, label %block_43f9a9

block_43f9a9:                                     ; preds = %block_.L_43f99f
  %loadMem_43f9a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15410 = getelementptr inbounds %struct.GPR, %struct.GPR* %15409, i32 0, i32 33
  %15411 = getelementptr inbounds %struct.Reg, %struct.Reg* %15410, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %15411 to i64*
  %15412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15413 = getelementptr inbounds %struct.GPR, %struct.GPR* %15412, i32 0, i32 15
  %15414 = getelementptr inbounds %struct.Reg, %struct.Reg* %15413, i32 0, i32 0
  %RBP.i439 = bitcast %union.anon* %15414 to i64*
  %15415 = load i64, i64* %RBP.i439
  %15416 = sub i64 %15415, 72
  %15417 = load i64, i64* %PC.i438
  %15418 = add i64 %15417, 7
  store i64 %15418, i64* %PC.i438
  %15419 = inttoptr i64 %15416 to i32*
  store i32 0, i32* %15419
  store %struct.Memory* %loadMem_43f9a9, %struct.Memory** %MEMORY
  br label %block_.L_43f9b0

block_.L_43f9b0:                                  ; preds = %block_43f9ba, %block_43f9a9
  %loadMem_43f9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15421 = getelementptr inbounds %struct.GPR, %struct.GPR* %15420, i32 0, i32 33
  %15422 = getelementptr inbounds %struct.Reg, %struct.Reg* %15421, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %15422 to i64*
  %15423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15424 = getelementptr inbounds %struct.GPR, %struct.GPR* %15423, i32 0, i32 15
  %15425 = getelementptr inbounds %struct.Reg, %struct.Reg* %15424, i32 0, i32 0
  %RBP.i437 = bitcast %union.anon* %15425 to i64*
  %15426 = load i64, i64* %RBP.i437
  %15427 = sub i64 %15426, 72
  %15428 = load i64, i64* %PC.i436
  %15429 = add i64 %15428, 4
  store i64 %15429, i64* %PC.i436
  %15430 = inttoptr i64 %15427 to i32*
  %15431 = load i32, i32* %15430
  %15432 = sub i32 %15431, 8
  %15433 = icmp ult i32 %15431, 8
  %15434 = zext i1 %15433 to i8
  %15435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15434, i8* %15435, align 1
  %15436 = and i32 %15432, 255
  %15437 = call i32 @llvm.ctpop.i32(i32 %15436)
  %15438 = trunc i32 %15437 to i8
  %15439 = and i8 %15438, 1
  %15440 = xor i8 %15439, 1
  %15441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15440, i8* %15441, align 1
  %15442 = xor i32 %15431, 8
  %15443 = xor i32 %15442, %15432
  %15444 = lshr i32 %15443, 4
  %15445 = trunc i32 %15444 to i8
  %15446 = and i8 %15445, 1
  %15447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15446, i8* %15447, align 1
  %15448 = icmp eq i32 %15432, 0
  %15449 = zext i1 %15448 to i8
  %15450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15449, i8* %15450, align 1
  %15451 = lshr i32 %15432, 31
  %15452 = trunc i32 %15451 to i8
  %15453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15452, i8* %15453, align 1
  %15454 = lshr i32 %15431, 31
  %15455 = xor i32 %15451, %15454
  %15456 = add i32 %15455, %15454
  %15457 = icmp eq i32 %15456, 2
  %15458 = zext i1 %15457 to i8
  %15459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15458, i8* %15459, align 1
  store %struct.Memory* %loadMem_43f9b0, %struct.Memory** %MEMORY
  %loadMem_43f9b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15461 = getelementptr inbounds %struct.GPR, %struct.GPR* %15460, i32 0, i32 33
  %15462 = getelementptr inbounds %struct.Reg, %struct.Reg* %15461, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %15462 to i64*
  %15463 = load i64, i64* %PC.i435
  %15464 = add i64 %15463, 91
  %15465 = load i64, i64* %PC.i435
  %15466 = add i64 %15465, 6
  %15467 = load i64, i64* %PC.i435
  %15468 = add i64 %15467, 6
  store i64 %15468, i64* %PC.i435
  %15469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15470 = load i8, i8* %15469, align 1
  %15471 = icmp ne i8 %15470, 0
  %15472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15473 = load i8, i8* %15472, align 1
  %15474 = icmp ne i8 %15473, 0
  %15475 = xor i1 %15471, %15474
  %15476 = xor i1 %15475, true
  %15477 = zext i1 %15476 to i8
  store i8 %15477, i8* %BRANCH_TAKEN, align 1
  %15478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15479 = select i1 %15475, i64 %15466, i64 %15464
  store i64 %15479, i64* %15478, align 8
  store %struct.Memory* %loadMem_43f9b4, %struct.Memory** %MEMORY
  %loadBr_43f9b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f9b4 = icmp eq i8 %loadBr_43f9b4, 1
  br i1 %cmpBr_43f9b4, label %block_.L_43fa0f, label %block_43f9ba

block_43f9ba:                                     ; preds = %block_.L_43f9b0
  %loadMem_43f9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %15480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15481 = getelementptr inbounds %struct.GPR, %struct.GPR* %15480, i32 0, i32 33
  %15482 = getelementptr inbounds %struct.Reg, %struct.Reg* %15481, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %15482 to i64*
  %15483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15484 = getelementptr inbounds %struct.GPR, %struct.GPR* %15483, i32 0, i32 1
  %15485 = getelementptr inbounds %struct.Reg, %struct.Reg* %15484, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %15485 to i64*
  %15486 = load i64, i64* %PC.i433
  %15487 = add i64 %15486, 10
  store i64 %15487, i64* %PC.i433
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RAX.i434, align 8
  store %struct.Memory* %loadMem_43f9ba, %struct.Memory** %MEMORY
  %loadMem_43f9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15489 = getelementptr inbounds %struct.GPR, %struct.GPR* %15488, i32 0, i32 33
  %15490 = getelementptr inbounds %struct.Reg, %struct.Reg* %15489, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %15490 to i64*
  %15491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15492 = getelementptr inbounds %struct.GPR, %struct.GPR* %15491, i32 0, i32 5
  %15493 = getelementptr inbounds %struct.Reg, %struct.Reg* %15492, i32 0, i32 0
  %RCX.i432 = bitcast %union.anon* %15493 to i64*
  %15494 = load i64, i64* %PC.i431
  %15495 = add i64 %15494, 8
  store i64 %15495, i64* %PC.i431
  %15496 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15496, i64* %RCX.i432, align 8
  store %struct.Memory* %loadMem_43f9c4, %struct.Memory** %MEMORY
  %loadMem_43f9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15498 = getelementptr inbounds %struct.GPR, %struct.GPR* %15497, i32 0, i32 33
  %15499 = getelementptr inbounds %struct.Reg, %struct.Reg* %15498, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %15499 to i64*
  %15500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15501 = getelementptr inbounds %struct.GPR, %struct.GPR* %15500, i32 0, i32 5
  %15502 = getelementptr inbounds %struct.Reg, %struct.Reg* %15501, i32 0, i32 0
  %RCX.i430 = bitcast %union.anon* %15502 to i64*
  %15503 = load i64, i64* %RCX.i430
  %15504 = load i64, i64* %PC.i429
  %15505 = add i64 %15504, 7
  store i64 %15505, i64* %PC.i429
  %15506 = add i64 13112, %15503
  store i64 %15506, i64* %RCX.i430, align 8
  %15507 = icmp ult i64 %15506, %15503
  %15508 = icmp ult i64 %15506, 13112
  %15509 = or i1 %15507, %15508
  %15510 = zext i1 %15509 to i8
  %15511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15510, i8* %15511, align 1
  %15512 = trunc i64 %15506 to i32
  %15513 = and i32 %15512, 255
  %15514 = call i32 @llvm.ctpop.i32(i32 %15513)
  %15515 = trunc i32 %15514 to i8
  %15516 = and i8 %15515, 1
  %15517 = xor i8 %15516, 1
  %15518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15517, i8* %15518, align 1
  %15519 = xor i64 13112, %15503
  %15520 = xor i64 %15519, %15506
  %15521 = lshr i64 %15520, 4
  %15522 = trunc i64 %15521 to i8
  %15523 = and i8 %15522, 1
  %15524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15523, i8* %15524, align 1
  %15525 = icmp eq i64 %15506, 0
  %15526 = zext i1 %15525 to i8
  %15527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15526, i8* %15527, align 1
  %15528 = lshr i64 %15506, 63
  %15529 = trunc i64 %15528 to i8
  %15530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15529, i8* %15530, align 1
  %15531 = lshr i64 %15503, 63
  %15532 = xor i64 %15528, %15531
  %15533 = add i64 %15532, %15528
  %15534 = icmp eq i64 %15533, 2
  %15535 = zext i1 %15534 to i8
  %15536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15535, i8* %15536, align 1
  store %struct.Memory* %loadMem_43f9cc, %struct.Memory** %MEMORY
  %loadMem_43f9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15538 = getelementptr inbounds %struct.GPR, %struct.GPR* %15537, i32 0, i32 33
  %15539 = getelementptr inbounds %struct.Reg, %struct.Reg* %15538, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %15539 to i64*
  %15540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15541 = getelementptr inbounds %struct.GPR, %struct.GPR* %15540, i32 0, i32 7
  %15542 = getelementptr inbounds %struct.Reg, %struct.Reg* %15541, i32 0, i32 0
  %RDX.i427 = bitcast %union.anon* %15542 to i64*
  %15543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15544 = getelementptr inbounds %struct.GPR, %struct.GPR* %15543, i32 0, i32 15
  %15545 = getelementptr inbounds %struct.Reg, %struct.Reg* %15544, i32 0, i32 0
  %RBP.i428 = bitcast %union.anon* %15545 to i64*
  %15546 = load i64, i64* %RBP.i428
  %15547 = sub i64 %15546, 72
  %15548 = load i64, i64* %PC.i426
  %15549 = add i64 %15548, 4
  store i64 %15549, i64* %PC.i426
  %15550 = inttoptr i64 %15547 to i32*
  %15551 = load i32, i32* %15550
  %15552 = sext i32 %15551 to i64
  store i64 %15552, i64* %RDX.i427, align 8
  store %struct.Memory* %loadMem_43f9d3, %struct.Memory** %MEMORY
  %loadMem_43f9d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15554 = getelementptr inbounds %struct.GPR, %struct.GPR* %15553, i32 0, i32 33
  %15555 = getelementptr inbounds %struct.Reg, %struct.Reg* %15554, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %15555 to i64*
  %15556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15557 = getelementptr inbounds %struct.GPR, %struct.GPR* %15556, i32 0, i32 7
  %15558 = getelementptr inbounds %struct.Reg, %struct.Reg* %15557, i32 0, i32 0
  %RDX.i425 = bitcast %union.anon* %15558 to i64*
  %15559 = load i64, i64* %RDX.i425
  %15560 = load i64, i64* %PC.i424
  %15561 = add i64 %15560, 4
  store i64 %15561, i64* %PC.i424
  %15562 = shl i64 %15559, 5
  %15563 = icmp slt i64 %15562, 0
  %15564 = shl i64 %15562, 1
  store i64 %15564, i64* %RDX.i425, align 8
  %15565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15566 = zext i1 %15563 to i8
  store i8 %15566, i8* %15565, align 1
  %15567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15568 = trunc i64 %15564 to i32
  %15569 = and i32 %15568, 254
  %15570 = call i32 @llvm.ctpop.i32(i32 %15569)
  %15571 = trunc i32 %15570 to i8
  %15572 = and i8 %15571, 1
  %15573 = xor i8 %15572, 1
  store i8 %15573, i8* %15567, align 1
  %15574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15574, align 1
  %15575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15576 = icmp eq i64 %15564, 0
  %15577 = zext i1 %15576 to i8
  store i8 %15577, i8* %15575, align 1
  %15578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15579 = lshr i64 %15564, 63
  %15580 = trunc i64 %15579 to i8
  store i8 %15580, i8* %15578, align 1
  %15581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15581, align 1
  store %struct.Memory* %loadMem_43f9d7, %struct.Memory** %MEMORY
  %loadMem_43f9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %15582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15583 = getelementptr inbounds %struct.GPR, %struct.GPR* %15582, i32 0, i32 33
  %15584 = getelementptr inbounds %struct.Reg, %struct.Reg* %15583, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %15584 to i64*
  %15585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15586 = getelementptr inbounds %struct.GPR, %struct.GPR* %15585, i32 0, i32 5
  %15587 = getelementptr inbounds %struct.Reg, %struct.Reg* %15586, i32 0, i32 0
  %RCX.i422 = bitcast %union.anon* %15587 to i64*
  %15588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15589 = getelementptr inbounds %struct.GPR, %struct.GPR* %15588, i32 0, i32 7
  %15590 = getelementptr inbounds %struct.Reg, %struct.Reg* %15589, i32 0, i32 0
  %RDX.i423 = bitcast %union.anon* %15590 to i64*
  %15591 = load i64, i64* %RCX.i422
  %15592 = load i64, i64* %RDX.i423
  %15593 = load i64, i64* %PC.i421
  %15594 = add i64 %15593, 3
  store i64 %15594, i64* %PC.i421
  %15595 = add i64 %15592, %15591
  store i64 %15595, i64* %RCX.i422, align 8
  %15596 = icmp ult i64 %15595, %15591
  %15597 = icmp ult i64 %15595, %15592
  %15598 = or i1 %15596, %15597
  %15599 = zext i1 %15598 to i8
  %15600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15599, i8* %15600, align 1
  %15601 = trunc i64 %15595 to i32
  %15602 = and i32 %15601, 255
  %15603 = call i32 @llvm.ctpop.i32(i32 %15602)
  %15604 = trunc i32 %15603 to i8
  %15605 = and i8 %15604, 1
  %15606 = xor i8 %15605, 1
  %15607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15606, i8* %15607, align 1
  %15608 = xor i64 %15592, %15591
  %15609 = xor i64 %15608, %15595
  %15610 = lshr i64 %15609, 4
  %15611 = trunc i64 %15610 to i8
  %15612 = and i8 %15611, 1
  %15613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15612, i8* %15613, align 1
  %15614 = icmp eq i64 %15595, 0
  %15615 = zext i1 %15614 to i8
  %15616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15615, i8* %15616, align 1
  %15617 = lshr i64 %15595, 63
  %15618 = trunc i64 %15617 to i8
  %15619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15618, i8* %15619, align 1
  %15620 = lshr i64 %15591, 63
  %15621 = lshr i64 %15592, 63
  %15622 = xor i64 %15617, %15620
  %15623 = xor i64 %15617, %15621
  %15624 = add i64 %15622, %15623
  %15625 = icmp eq i64 %15624, 2
  %15626 = zext i1 %15625 to i8
  %15627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15626, i8* %15627, align 1
  store %struct.Memory* %loadMem_43f9db, %struct.Memory** %MEMORY
  %loadMem_43f9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %15628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15629 = getelementptr inbounds %struct.GPR, %struct.GPR* %15628, i32 0, i32 33
  %15630 = getelementptr inbounds %struct.Reg, %struct.Reg* %15629, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %15630 to i64*
  %15631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15632 = getelementptr inbounds %struct.GPR, %struct.GPR* %15631, i32 0, i32 7
  %15633 = getelementptr inbounds %struct.Reg, %struct.Reg* %15632, i32 0, i32 0
  %RDX.i419 = bitcast %union.anon* %15633 to i64*
  %15634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15635 = getelementptr inbounds %struct.GPR, %struct.GPR* %15634, i32 0, i32 15
  %15636 = getelementptr inbounds %struct.Reg, %struct.Reg* %15635, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %15636 to i64*
  %15637 = load i64, i64* %RBP.i420
  %15638 = sub i64 %15637, 76
  %15639 = load i64, i64* %PC.i418
  %15640 = add i64 %15639, 4
  store i64 %15640, i64* %PC.i418
  %15641 = inttoptr i64 %15638 to i32*
  %15642 = load i32, i32* %15641
  %15643 = sext i32 %15642 to i64
  store i64 %15643, i64* %RDX.i419, align 8
  store %struct.Memory* %loadMem_43f9de, %struct.Memory** %MEMORY
  %loadMem_43f9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15645 = getelementptr inbounds %struct.GPR, %struct.GPR* %15644, i32 0, i32 33
  %15646 = getelementptr inbounds %struct.Reg, %struct.Reg* %15645, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %15646 to i64*
  %15647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15648 = getelementptr inbounds %struct.GPR, %struct.GPR* %15647, i32 0, i32 5
  %15649 = getelementptr inbounds %struct.Reg, %struct.Reg* %15648, i32 0, i32 0
  %RCX.i415 = bitcast %union.anon* %15649 to i64*
  %15650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15651 = getelementptr inbounds %struct.GPR, %struct.GPR* %15650, i32 0, i32 7
  %15652 = getelementptr inbounds %struct.Reg, %struct.Reg* %15651, i32 0, i32 0
  %RDX.i416 = bitcast %union.anon* %15652 to i64*
  %15653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15654 = getelementptr inbounds %struct.GPR, %struct.GPR* %15653, i32 0, i32 9
  %15655 = getelementptr inbounds %struct.Reg, %struct.Reg* %15654, i32 0, i32 0
  %RSI.i417 = bitcast %union.anon* %15655 to i64*
  %15656 = load i64, i64* %RCX.i415
  %15657 = load i64, i64* %RDX.i416
  %15658 = mul i64 %15657, 4
  %15659 = add i64 %15658, %15656
  %15660 = load i64, i64* %PC.i414
  %15661 = add i64 %15660, 3
  store i64 %15661, i64* %PC.i414
  %15662 = inttoptr i64 %15659 to i32*
  %15663 = load i32, i32* %15662
  %15664 = zext i32 %15663 to i64
  store i64 %15664, i64* %RSI.i417, align 8
  store %struct.Memory* %loadMem_43f9e2, %struct.Memory** %MEMORY
  %loadMem_43f9e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15666 = getelementptr inbounds %struct.GPR, %struct.GPR* %15665, i32 0, i32 33
  %15667 = getelementptr inbounds %struct.Reg, %struct.Reg* %15666, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %15667 to i64*
  %15668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15669 = getelementptr inbounds %struct.GPR, %struct.GPR* %15668, i32 0, i32 11
  %15670 = getelementptr inbounds %struct.Reg, %struct.Reg* %15669, i32 0, i32 0
  %RDI.i412 = bitcast %union.anon* %15670 to i64*
  %15671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15672 = getelementptr inbounds %struct.GPR, %struct.GPR* %15671, i32 0, i32 15
  %15673 = getelementptr inbounds %struct.Reg, %struct.Reg* %15672, i32 0, i32 0
  %RBP.i413 = bitcast %union.anon* %15673 to i64*
  %15674 = load i64, i64* %RBP.i413
  %15675 = sub i64 %15674, 96
  %15676 = load i64, i64* %PC.i411
  %15677 = add i64 %15676, 3
  store i64 %15677, i64* %PC.i411
  %15678 = inttoptr i64 %15675 to i32*
  %15679 = load i32, i32* %15678
  %15680 = zext i32 %15679 to i64
  store i64 %15680, i64* %RDI.i412, align 8
  store %struct.Memory* %loadMem_43f9e5, %struct.Memory** %MEMORY
  %loadMem_43f9e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15682 = getelementptr inbounds %struct.GPR, %struct.GPR* %15681, i32 0, i32 33
  %15683 = getelementptr inbounds %struct.Reg, %struct.Reg* %15682, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %15683 to i64*
  %15684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15685 = getelementptr inbounds %struct.GPR, %struct.GPR* %15684, i32 0, i32 11
  %15686 = getelementptr inbounds %struct.Reg, %struct.Reg* %15685, i32 0, i32 0
  %RDI.i409 = bitcast %union.anon* %15686 to i64*
  %15687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15688 = getelementptr inbounds %struct.GPR, %struct.GPR* %15687, i32 0, i32 15
  %15689 = getelementptr inbounds %struct.Reg, %struct.Reg* %15688, i32 0, i32 0
  %RBP.i410 = bitcast %union.anon* %15689 to i64*
  %15690 = load i64, i64* %RDI.i409
  %15691 = load i64, i64* %RBP.i410
  %15692 = sub i64 %15691, 72
  %15693 = load i64, i64* %PC.i408
  %15694 = add i64 %15693, 3
  store i64 %15694, i64* %PC.i408
  %15695 = trunc i64 %15690 to i32
  %15696 = inttoptr i64 %15692 to i32*
  %15697 = load i32, i32* %15696
  %15698 = add i32 %15697, %15695
  %15699 = zext i32 %15698 to i64
  store i64 %15699, i64* %RDI.i409, align 8
  %15700 = icmp ult i32 %15698, %15695
  %15701 = icmp ult i32 %15698, %15697
  %15702 = or i1 %15700, %15701
  %15703 = zext i1 %15702 to i8
  %15704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15703, i8* %15704, align 1
  %15705 = and i32 %15698, 255
  %15706 = call i32 @llvm.ctpop.i32(i32 %15705)
  %15707 = trunc i32 %15706 to i8
  %15708 = and i8 %15707, 1
  %15709 = xor i8 %15708, 1
  %15710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15709, i8* %15710, align 1
  %15711 = xor i32 %15697, %15695
  %15712 = xor i32 %15711, %15698
  %15713 = lshr i32 %15712, 4
  %15714 = trunc i32 %15713 to i8
  %15715 = and i8 %15714, 1
  %15716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15715, i8* %15716, align 1
  %15717 = icmp eq i32 %15698, 0
  %15718 = zext i1 %15717 to i8
  %15719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15718, i8* %15719, align 1
  %15720 = lshr i32 %15698, 31
  %15721 = trunc i32 %15720 to i8
  %15722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15721, i8* %15722, align 1
  %15723 = lshr i32 %15695, 31
  %15724 = lshr i32 %15697, 31
  %15725 = xor i32 %15720, %15723
  %15726 = xor i32 %15720, %15724
  %15727 = add i32 %15725, %15726
  %15728 = icmp eq i32 %15727, 2
  %15729 = zext i1 %15728 to i8
  %15730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15729, i8* %15730, align 1
  store %struct.Memory* %loadMem_43f9e8, %struct.Memory** %MEMORY
  %loadMem_43f9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15732 = getelementptr inbounds %struct.GPR, %struct.GPR* %15731, i32 0, i32 33
  %15733 = getelementptr inbounds %struct.Reg, %struct.Reg* %15732, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %15733 to i64*
  %15734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15735 = getelementptr inbounds %struct.GPR, %struct.GPR* %15734, i32 0, i32 11
  %15736 = getelementptr inbounds %struct.Reg, %struct.Reg* %15735, i32 0, i32 0
  %EDI.i406 = bitcast %union.anon* %15736 to i32*
  %15737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15738 = getelementptr inbounds %struct.GPR, %struct.GPR* %15737, i32 0, i32 5
  %15739 = getelementptr inbounds %struct.Reg, %struct.Reg* %15738, i32 0, i32 0
  %RCX.i407 = bitcast %union.anon* %15739 to i64*
  %15740 = load i32, i32* %EDI.i406
  %15741 = zext i32 %15740 to i64
  %15742 = load i64, i64* %PC.i405
  %15743 = add i64 %15742, 3
  store i64 %15743, i64* %PC.i405
  %15744 = shl i64 %15741, 32
  %15745 = ashr exact i64 %15744, 32
  store i64 %15745, i64* %RCX.i407, align 8
  store %struct.Memory* %loadMem_43f9eb, %struct.Memory** %MEMORY
  %loadMem_43f9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %15746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15747 = getelementptr inbounds %struct.GPR, %struct.GPR* %15746, i32 0, i32 33
  %15748 = getelementptr inbounds %struct.Reg, %struct.Reg* %15747, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %15748 to i64*
  %15749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15750 = getelementptr inbounds %struct.GPR, %struct.GPR* %15749, i32 0, i32 5
  %15751 = getelementptr inbounds %struct.Reg, %struct.Reg* %15750, i32 0, i32 0
  %RCX.i404 = bitcast %union.anon* %15751 to i64*
  %15752 = load i64, i64* %RCX.i404
  %15753 = load i64, i64* %PC.i403
  %15754 = add i64 %15753, 4
  store i64 %15754, i64* %PC.i403
  %15755 = shl i64 %15752, 5
  %15756 = icmp slt i64 %15755, 0
  %15757 = shl i64 %15755, 1
  store i64 %15757, i64* %RCX.i404, align 8
  %15758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15759 = zext i1 %15756 to i8
  store i8 %15759, i8* %15758, align 1
  %15760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15761 = trunc i64 %15757 to i32
  %15762 = and i32 %15761, 254
  %15763 = call i32 @llvm.ctpop.i32(i32 %15762)
  %15764 = trunc i32 %15763 to i8
  %15765 = and i8 %15764, 1
  %15766 = xor i8 %15765, 1
  store i8 %15766, i8* %15760, align 1
  %15767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15767, align 1
  %15768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15769 = icmp eq i64 %15757, 0
  %15770 = zext i1 %15769 to i8
  store i8 %15770, i8* %15768, align 1
  %15771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15772 = lshr i64 %15757, 63
  %15773 = trunc i64 %15772 to i8
  store i8 %15773, i8* %15771, align 1
  %15774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15774, align 1
  store %struct.Memory* %loadMem_43f9ee, %struct.Memory** %MEMORY
  %loadMem_43f9f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15776 = getelementptr inbounds %struct.GPR, %struct.GPR* %15775, i32 0, i32 33
  %15777 = getelementptr inbounds %struct.Reg, %struct.Reg* %15776, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %15777 to i64*
  %15778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15779 = getelementptr inbounds %struct.GPR, %struct.GPR* %15778, i32 0, i32 1
  %15780 = getelementptr inbounds %struct.Reg, %struct.Reg* %15779, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %15780 to i64*
  %15781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15782 = getelementptr inbounds %struct.GPR, %struct.GPR* %15781, i32 0, i32 5
  %15783 = getelementptr inbounds %struct.Reg, %struct.Reg* %15782, i32 0, i32 0
  %RCX.i402 = bitcast %union.anon* %15783 to i64*
  %15784 = load i64, i64* %RAX.i401
  %15785 = load i64, i64* %RCX.i402
  %15786 = load i64, i64* %PC.i400
  %15787 = add i64 %15786, 3
  store i64 %15787, i64* %PC.i400
  %15788 = add i64 %15785, %15784
  store i64 %15788, i64* %RAX.i401, align 8
  %15789 = icmp ult i64 %15788, %15784
  %15790 = icmp ult i64 %15788, %15785
  %15791 = or i1 %15789, %15790
  %15792 = zext i1 %15791 to i8
  %15793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15792, i8* %15793, align 1
  %15794 = trunc i64 %15788 to i32
  %15795 = and i32 %15794, 255
  %15796 = call i32 @llvm.ctpop.i32(i32 %15795)
  %15797 = trunc i32 %15796 to i8
  %15798 = and i8 %15797, 1
  %15799 = xor i8 %15798, 1
  %15800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15799, i8* %15800, align 1
  %15801 = xor i64 %15785, %15784
  %15802 = xor i64 %15801, %15788
  %15803 = lshr i64 %15802, 4
  %15804 = trunc i64 %15803 to i8
  %15805 = and i8 %15804, 1
  %15806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15805, i8* %15806, align 1
  %15807 = icmp eq i64 %15788, 0
  %15808 = zext i1 %15807 to i8
  %15809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15808, i8* %15809, align 1
  %15810 = lshr i64 %15788, 63
  %15811 = trunc i64 %15810 to i8
  %15812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15811, i8* %15812, align 1
  %15813 = lshr i64 %15784, 63
  %15814 = lshr i64 %15785, 63
  %15815 = xor i64 %15810, %15813
  %15816 = xor i64 %15810, %15814
  %15817 = add i64 %15815, %15816
  %15818 = icmp eq i64 %15817, 2
  %15819 = zext i1 %15818 to i8
  %15820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15819, i8* %15820, align 1
  store %struct.Memory* %loadMem_43f9f2, %struct.Memory** %MEMORY
  %loadMem_43f9f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15822 = getelementptr inbounds %struct.GPR, %struct.GPR* %15821, i32 0, i32 33
  %15823 = getelementptr inbounds %struct.Reg, %struct.Reg* %15822, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %15823 to i64*
  %15824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15825 = getelementptr inbounds %struct.GPR, %struct.GPR* %15824, i32 0, i32 11
  %15826 = getelementptr inbounds %struct.Reg, %struct.Reg* %15825, i32 0, i32 0
  %RDI.i398 = bitcast %union.anon* %15826 to i64*
  %15827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15828 = getelementptr inbounds %struct.GPR, %struct.GPR* %15827, i32 0, i32 15
  %15829 = getelementptr inbounds %struct.Reg, %struct.Reg* %15828, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %15829 to i64*
  %15830 = load i64, i64* %RBP.i399
  %15831 = sub i64 %15830, 92
  %15832 = load i64, i64* %PC.i397
  %15833 = add i64 %15832, 3
  store i64 %15833, i64* %PC.i397
  %15834 = inttoptr i64 %15831 to i32*
  %15835 = load i32, i32* %15834
  %15836 = zext i32 %15835 to i64
  store i64 %15836, i64* %RDI.i398, align 8
  store %struct.Memory* %loadMem_43f9f5, %struct.Memory** %MEMORY
  %loadMem_43f9f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15838 = getelementptr inbounds %struct.GPR, %struct.GPR* %15837, i32 0, i32 33
  %15839 = getelementptr inbounds %struct.Reg, %struct.Reg* %15838, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %15839 to i64*
  %15840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15841 = getelementptr inbounds %struct.GPR, %struct.GPR* %15840, i32 0, i32 11
  %15842 = getelementptr inbounds %struct.Reg, %struct.Reg* %15841, i32 0, i32 0
  %RDI.i395 = bitcast %union.anon* %15842 to i64*
  %15843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15844 = getelementptr inbounds %struct.GPR, %struct.GPR* %15843, i32 0, i32 15
  %15845 = getelementptr inbounds %struct.Reg, %struct.Reg* %15844, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %15845 to i64*
  %15846 = load i64, i64* %RDI.i395
  %15847 = load i64, i64* %RBP.i396
  %15848 = sub i64 %15847, 76
  %15849 = load i64, i64* %PC.i394
  %15850 = add i64 %15849, 3
  store i64 %15850, i64* %PC.i394
  %15851 = trunc i64 %15846 to i32
  %15852 = inttoptr i64 %15848 to i32*
  %15853 = load i32, i32* %15852
  %15854 = add i32 %15853, %15851
  %15855 = zext i32 %15854 to i64
  store i64 %15855, i64* %RDI.i395, align 8
  %15856 = icmp ult i32 %15854, %15851
  %15857 = icmp ult i32 %15854, %15853
  %15858 = or i1 %15856, %15857
  %15859 = zext i1 %15858 to i8
  %15860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15859, i8* %15860, align 1
  %15861 = and i32 %15854, 255
  %15862 = call i32 @llvm.ctpop.i32(i32 %15861)
  %15863 = trunc i32 %15862 to i8
  %15864 = and i8 %15863, 1
  %15865 = xor i8 %15864, 1
  %15866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15865, i8* %15866, align 1
  %15867 = xor i32 %15853, %15851
  %15868 = xor i32 %15867, %15854
  %15869 = lshr i32 %15868, 4
  %15870 = trunc i32 %15869 to i8
  %15871 = and i8 %15870, 1
  %15872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15871, i8* %15872, align 1
  %15873 = icmp eq i32 %15854, 0
  %15874 = zext i1 %15873 to i8
  %15875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15874, i8* %15875, align 1
  %15876 = lshr i32 %15854, 31
  %15877 = trunc i32 %15876 to i8
  %15878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15877, i8* %15878, align 1
  %15879 = lshr i32 %15851, 31
  %15880 = lshr i32 %15853, 31
  %15881 = xor i32 %15876, %15879
  %15882 = xor i32 %15876, %15880
  %15883 = add i32 %15881, %15882
  %15884 = icmp eq i32 %15883, 2
  %15885 = zext i1 %15884 to i8
  %15886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15885, i8* %15886, align 1
  store %struct.Memory* %loadMem_43f9f8, %struct.Memory** %MEMORY
  %loadMem_43f9fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15888 = getelementptr inbounds %struct.GPR, %struct.GPR* %15887, i32 0, i32 33
  %15889 = getelementptr inbounds %struct.Reg, %struct.Reg* %15888, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %15889 to i64*
  %15890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15891 = getelementptr inbounds %struct.GPR, %struct.GPR* %15890, i32 0, i32 11
  %15892 = getelementptr inbounds %struct.Reg, %struct.Reg* %15891, i32 0, i32 0
  %EDI.i392 = bitcast %union.anon* %15892 to i32*
  %15893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15894 = getelementptr inbounds %struct.GPR, %struct.GPR* %15893, i32 0, i32 5
  %15895 = getelementptr inbounds %struct.Reg, %struct.Reg* %15894, i32 0, i32 0
  %RCX.i393 = bitcast %union.anon* %15895 to i64*
  %15896 = load i32, i32* %EDI.i392
  %15897 = zext i32 %15896 to i64
  %15898 = load i64, i64* %PC.i391
  %15899 = add i64 %15898, 3
  store i64 %15899, i64* %PC.i391
  %15900 = shl i64 %15897, 32
  %15901 = ashr exact i64 %15900, 32
  store i64 %15901, i64* %RCX.i393, align 8
  store %struct.Memory* %loadMem_43f9fb, %struct.Memory** %MEMORY
  %loadMem_43f9fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %15902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15903 = getelementptr inbounds %struct.GPR, %struct.GPR* %15902, i32 0, i32 33
  %15904 = getelementptr inbounds %struct.Reg, %struct.Reg* %15903, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %15904 to i64*
  %15905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15906 = getelementptr inbounds %struct.GPR, %struct.GPR* %15905, i32 0, i32 9
  %15907 = getelementptr inbounds %struct.Reg, %struct.Reg* %15906, i32 0, i32 0
  %ESI.i388 = bitcast %union.anon* %15907 to i32*
  %15908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15909 = getelementptr inbounds %struct.GPR, %struct.GPR* %15908, i32 0, i32 1
  %15910 = getelementptr inbounds %struct.Reg, %struct.Reg* %15909, i32 0, i32 0
  %RAX.i389 = bitcast %union.anon* %15910 to i64*
  %15911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15912 = getelementptr inbounds %struct.GPR, %struct.GPR* %15911, i32 0, i32 5
  %15913 = getelementptr inbounds %struct.Reg, %struct.Reg* %15912, i32 0, i32 0
  %RCX.i390 = bitcast %union.anon* %15913 to i64*
  %15914 = load i64, i64* %RAX.i389
  %15915 = load i64, i64* %RCX.i390
  %15916 = mul i64 %15915, 4
  %15917 = add i64 %15916, %15914
  %15918 = load i32, i32* %ESI.i388
  %15919 = zext i32 %15918 to i64
  %15920 = load i64, i64* %PC.i387
  %15921 = add i64 %15920, 3
  store i64 %15921, i64* %PC.i387
  %15922 = inttoptr i64 %15917 to i32*
  store i32 %15918, i32* %15922
  store %struct.Memory* %loadMem_43f9fe, %struct.Memory** %MEMORY
  %loadMem_43fa01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15924 = getelementptr inbounds %struct.GPR, %struct.GPR* %15923, i32 0, i32 33
  %15925 = getelementptr inbounds %struct.Reg, %struct.Reg* %15924, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %15925 to i64*
  %15926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15927 = getelementptr inbounds %struct.GPR, %struct.GPR* %15926, i32 0, i32 1
  %15928 = getelementptr inbounds %struct.Reg, %struct.Reg* %15927, i32 0, i32 0
  %RAX.i385 = bitcast %union.anon* %15928 to i64*
  %15929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15930 = getelementptr inbounds %struct.GPR, %struct.GPR* %15929, i32 0, i32 15
  %15931 = getelementptr inbounds %struct.Reg, %struct.Reg* %15930, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %15931 to i64*
  %15932 = load i64, i64* %RBP.i386
  %15933 = sub i64 %15932, 72
  %15934 = load i64, i64* %PC.i384
  %15935 = add i64 %15934, 3
  store i64 %15935, i64* %PC.i384
  %15936 = inttoptr i64 %15933 to i32*
  %15937 = load i32, i32* %15936
  %15938 = zext i32 %15937 to i64
  store i64 %15938, i64* %RAX.i385, align 8
  store %struct.Memory* %loadMem_43fa01, %struct.Memory** %MEMORY
  %loadMem_43fa04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15940 = getelementptr inbounds %struct.GPR, %struct.GPR* %15939, i32 0, i32 33
  %15941 = getelementptr inbounds %struct.Reg, %struct.Reg* %15940, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %15941 to i64*
  %15942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15943 = getelementptr inbounds %struct.GPR, %struct.GPR* %15942, i32 0, i32 1
  %15944 = getelementptr inbounds %struct.Reg, %struct.Reg* %15943, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %15944 to i64*
  %15945 = load i64, i64* %RAX.i383
  %15946 = load i64, i64* %PC.i382
  %15947 = add i64 %15946, 3
  store i64 %15947, i64* %PC.i382
  %15948 = trunc i64 %15945 to i32
  %15949 = add i32 1, %15948
  %15950 = zext i32 %15949 to i64
  store i64 %15950, i64* %RAX.i383, align 8
  %15951 = icmp ult i32 %15949, %15948
  %15952 = icmp ult i32 %15949, 1
  %15953 = or i1 %15951, %15952
  %15954 = zext i1 %15953 to i8
  %15955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15954, i8* %15955, align 1
  %15956 = and i32 %15949, 255
  %15957 = call i32 @llvm.ctpop.i32(i32 %15956)
  %15958 = trunc i32 %15957 to i8
  %15959 = and i8 %15958, 1
  %15960 = xor i8 %15959, 1
  %15961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15960, i8* %15961, align 1
  %15962 = xor i64 1, %15945
  %15963 = trunc i64 %15962 to i32
  %15964 = xor i32 %15963, %15949
  %15965 = lshr i32 %15964, 4
  %15966 = trunc i32 %15965 to i8
  %15967 = and i8 %15966, 1
  %15968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15967, i8* %15968, align 1
  %15969 = icmp eq i32 %15949, 0
  %15970 = zext i1 %15969 to i8
  %15971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15970, i8* %15971, align 1
  %15972 = lshr i32 %15949, 31
  %15973 = trunc i32 %15972 to i8
  %15974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15973, i8* %15974, align 1
  %15975 = lshr i32 %15948, 31
  %15976 = xor i32 %15972, %15975
  %15977 = add i32 %15976, %15972
  %15978 = icmp eq i32 %15977, 2
  %15979 = zext i1 %15978 to i8
  %15980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15979, i8* %15980, align 1
  store %struct.Memory* %loadMem_43fa04, %struct.Memory** %MEMORY
  %loadMem_43fa07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15982 = getelementptr inbounds %struct.GPR, %struct.GPR* %15981, i32 0, i32 33
  %15983 = getelementptr inbounds %struct.Reg, %struct.Reg* %15982, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %15983 to i64*
  %15984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15985 = getelementptr inbounds %struct.GPR, %struct.GPR* %15984, i32 0, i32 1
  %15986 = getelementptr inbounds %struct.Reg, %struct.Reg* %15985, i32 0, i32 0
  %EAX.i380 = bitcast %union.anon* %15986 to i32*
  %15987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15988 = getelementptr inbounds %struct.GPR, %struct.GPR* %15987, i32 0, i32 15
  %15989 = getelementptr inbounds %struct.Reg, %struct.Reg* %15988, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %15989 to i64*
  %15990 = load i64, i64* %RBP.i381
  %15991 = sub i64 %15990, 72
  %15992 = load i32, i32* %EAX.i380
  %15993 = zext i32 %15992 to i64
  %15994 = load i64, i64* %PC.i379
  %15995 = add i64 %15994, 3
  store i64 %15995, i64* %PC.i379
  %15996 = inttoptr i64 %15991 to i32*
  store i32 %15992, i32* %15996
  store %struct.Memory* %loadMem_43fa07, %struct.Memory** %MEMORY
  %loadMem_43fa0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15998 = getelementptr inbounds %struct.GPR, %struct.GPR* %15997, i32 0, i32 33
  %15999 = getelementptr inbounds %struct.Reg, %struct.Reg* %15998, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %15999 to i64*
  %16000 = load i64, i64* %PC.i378
  %16001 = add i64 %16000, -90
  %16002 = load i64, i64* %PC.i378
  %16003 = add i64 %16002, 5
  store i64 %16003, i64* %PC.i378
  %16004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16001, i64* %16004, align 8
  store %struct.Memory* %loadMem_43fa0a, %struct.Memory** %MEMORY
  br label %block_.L_43f9b0

block_.L_43fa0f:                                  ; preds = %block_.L_43f9b0
  %loadMem_43fa0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16006 = getelementptr inbounds %struct.GPR, %struct.GPR* %16005, i32 0, i32 33
  %16007 = getelementptr inbounds %struct.Reg, %struct.Reg* %16006, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %16007 to i64*
  %16008 = load i64, i64* %PC.i377
  %16009 = add i64 %16008, 5
  %16010 = load i64, i64* %PC.i377
  %16011 = add i64 %16010, 5
  store i64 %16011, i64* %PC.i377
  %16012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16009, i64* %16012, align 8
  store %struct.Memory* %loadMem_43fa0f, %struct.Memory** %MEMORY
  br label %block_.L_43fa14

block_.L_43fa14:                                  ; preds = %block_.L_43fa0f
  %loadMem_43fa14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16014 = getelementptr inbounds %struct.GPR, %struct.GPR* %16013, i32 0, i32 33
  %16015 = getelementptr inbounds %struct.Reg, %struct.Reg* %16014, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %16015 to i64*
  %16016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16017 = getelementptr inbounds %struct.GPR, %struct.GPR* %16016, i32 0, i32 1
  %16018 = getelementptr inbounds %struct.Reg, %struct.Reg* %16017, i32 0, i32 0
  %RAX.i375 = bitcast %union.anon* %16018 to i64*
  %16019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16020 = getelementptr inbounds %struct.GPR, %struct.GPR* %16019, i32 0, i32 15
  %16021 = getelementptr inbounds %struct.Reg, %struct.Reg* %16020, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %16021 to i64*
  %16022 = load i64, i64* %RBP.i376
  %16023 = sub i64 %16022, 76
  %16024 = load i64, i64* %PC.i374
  %16025 = add i64 %16024, 3
  store i64 %16025, i64* %PC.i374
  %16026 = inttoptr i64 %16023 to i32*
  %16027 = load i32, i32* %16026
  %16028 = zext i32 %16027 to i64
  store i64 %16028, i64* %RAX.i375, align 8
  store %struct.Memory* %loadMem_43fa14, %struct.Memory** %MEMORY
  %loadMem_43fa17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16030 = getelementptr inbounds %struct.GPR, %struct.GPR* %16029, i32 0, i32 33
  %16031 = getelementptr inbounds %struct.Reg, %struct.Reg* %16030, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %16031 to i64*
  %16032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16033 = getelementptr inbounds %struct.GPR, %struct.GPR* %16032, i32 0, i32 1
  %16034 = getelementptr inbounds %struct.Reg, %struct.Reg* %16033, i32 0, i32 0
  %RAX.i373 = bitcast %union.anon* %16034 to i64*
  %16035 = load i64, i64* %RAX.i373
  %16036 = load i64, i64* %PC.i372
  %16037 = add i64 %16036, 3
  store i64 %16037, i64* %PC.i372
  %16038 = trunc i64 %16035 to i32
  %16039 = add i32 1, %16038
  %16040 = zext i32 %16039 to i64
  store i64 %16040, i64* %RAX.i373, align 8
  %16041 = icmp ult i32 %16039, %16038
  %16042 = icmp ult i32 %16039, 1
  %16043 = or i1 %16041, %16042
  %16044 = zext i1 %16043 to i8
  %16045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16044, i8* %16045, align 1
  %16046 = and i32 %16039, 255
  %16047 = call i32 @llvm.ctpop.i32(i32 %16046)
  %16048 = trunc i32 %16047 to i8
  %16049 = and i8 %16048, 1
  %16050 = xor i8 %16049, 1
  %16051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16050, i8* %16051, align 1
  %16052 = xor i64 1, %16035
  %16053 = trunc i64 %16052 to i32
  %16054 = xor i32 %16053, %16039
  %16055 = lshr i32 %16054, 4
  %16056 = trunc i32 %16055 to i8
  %16057 = and i8 %16056, 1
  %16058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16057, i8* %16058, align 1
  %16059 = icmp eq i32 %16039, 0
  %16060 = zext i1 %16059 to i8
  %16061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16060, i8* %16061, align 1
  %16062 = lshr i32 %16039, 31
  %16063 = trunc i32 %16062 to i8
  %16064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16063, i8* %16064, align 1
  %16065 = lshr i32 %16038, 31
  %16066 = xor i32 %16062, %16065
  %16067 = add i32 %16066, %16062
  %16068 = icmp eq i32 %16067, 2
  %16069 = zext i1 %16068 to i8
  %16070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16069, i8* %16070, align 1
  store %struct.Memory* %loadMem_43fa17, %struct.Memory** %MEMORY
  %loadMem_43fa1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16072 = getelementptr inbounds %struct.GPR, %struct.GPR* %16071, i32 0, i32 33
  %16073 = getelementptr inbounds %struct.Reg, %struct.Reg* %16072, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %16073 to i64*
  %16074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16075 = getelementptr inbounds %struct.GPR, %struct.GPR* %16074, i32 0, i32 1
  %16076 = getelementptr inbounds %struct.Reg, %struct.Reg* %16075, i32 0, i32 0
  %EAX.i370 = bitcast %union.anon* %16076 to i32*
  %16077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16078 = getelementptr inbounds %struct.GPR, %struct.GPR* %16077, i32 0, i32 15
  %16079 = getelementptr inbounds %struct.Reg, %struct.Reg* %16078, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %16079 to i64*
  %16080 = load i64, i64* %RBP.i371
  %16081 = sub i64 %16080, 76
  %16082 = load i32, i32* %EAX.i370
  %16083 = zext i32 %16082 to i64
  %16084 = load i64, i64* %PC.i369
  %16085 = add i64 %16084, 3
  store i64 %16085, i64* %PC.i369
  %16086 = inttoptr i64 %16081 to i32*
  store i32 %16082, i32* %16086
  store %struct.Memory* %loadMem_43fa1a, %struct.Memory** %MEMORY
  %loadMem_43fa1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16088 = getelementptr inbounds %struct.GPR, %struct.GPR* %16087, i32 0, i32 33
  %16089 = getelementptr inbounds %struct.Reg, %struct.Reg* %16088, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %16089 to i64*
  %16090 = load i64, i64* %PC.i368
  %16091 = add i64 %16090, -126
  %16092 = load i64, i64* %PC.i368
  %16093 = add i64 %16092, 5
  store i64 %16093, i64* %PC.i368
  %16094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16091, i64* %16094, align 8
  store %struct.Memory* %loadMem_43fa1d, %struct.Memory** %MEMORY
  br label %block_.L_43f99f

block_.L_43fa22:                                  ; preds = %block_.L_43f99f
  %loadMem_43fa22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16096 = getelementptr inbounds %struct.GPR, %struct.GPR* %16095, i32 0, i32 33
  %16097 = getelementptr inbounds %struct.Reg, %struct.Reg* %16096, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %16097 to i64*
  %16098 = load i64, i64* %PC.i367
  %16099 = add i64 %16098, 5
  %16100 = load i64, i64* %PC.i367
  %16101 = add i64 %16100, 5
  store i64 %16101, i64* %PC.i367
  %16102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16099, i64* %16102, align 8
  store %struct.Memory* %loadMem_43fa22, %struct.Memory** %MEMORY
  br label %block_.L_43fa27

block_.L_43fa27:                                  ; preds = %block_.L_43fa22, %block_.L_43f983
  %loadMem_43fa27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16104 = getelementptr inbounds %struct.GPR, %struct.GPR* %16103, i32 0, i32 33
  %16105 = getelementptr inbounds %struct.Reg, %struct.Reg* %16104, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %16105 to i64*
  %16106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16107 = getelementptr inbounds %struct.GPR, %struct.GPR* %16106, i32 0, i32 15
  %16108 = getelementptr inbounds %struct.Reg, %struct.Reg* %16107, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %16108 to i64*
  %16109 = load i64, i64* %RBP.i366
  %16110 = sub i64 %16109, 80
  %16111 = load i64, i64* %PC.i365
  %16112 = add i64 %16111, 4
  store i64 %16112, i64* %PC.i365
  %16113 = inttoptr i64 %16110 to i32*
  %16114 = load i32, i32* %16113
  %16115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16115, align 1
  %16116 = and i32 %16114, 255
  %16117 = call i32 @llvm.ctpop.i32(i32 %16116)
  %16118 = trunc i32 %16117 to i8
  %16119 = and i8 %16118, 1
  %16120 = xor i8 %16119, 1
  %16121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16120, i8* %16121, align 1
  %16122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16122, align 1
  %16123 = icmp eq i32 %16114, 0
  %16124 = zext i1 %16123 to i8
  %16125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16124, i8* %16125, align 1
  %16126 = lshr i32 %16114, 31
  %16127 = trunc i32 %16126 to i8
  %16128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16127, i8* %16128, align 1
  %16129 = lshr i32 %16114, 31
  %16130 = xor i32 %16126, %16129
  %16131 = add i32 %16130, %16129
  %16132 = icmp eq i32 %16131, 2
  %16133 = zext i1 %16132 to i8
  %16134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16133, i8* %16134, align 1
  store %struct.Memory* %loadMem_43fa27, %struct.Memory** %MEMORY
  %loadMem_43fa2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16136 = getelementptr inbounds %struct.GPR, %struct.GPR* %16135, i32 0, i32 33
  %16137 = getelementptr inbounds %struct.Reg, %struct.Reg* %16136, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %16137 to i64*
  %16138 = load i64, i64* %PC.i364
  %16139 = add i64 %16138, 85
  %16140 = load i64, i64* %PC.i364
  %16141 = add i64 %16140, 6
  %16142 = load i64, i64* %PC.i364
  %16143 = add i64 %16142, 6
  store i64 %16143, i64* %PC.i364
  %16144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16145 = load i8, i8* %16144, align 1
  store i8 %16145, i8* %BRANCH_TAKEN, align 1
  %16146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16147 = icmp ne i8 %16145, 0
  %16148 = select i1 %16147, i64 %16139, i64 %16141
  store i64 %16148, i64* %16146, align 8
  store %struct.Memory* %loadMem_43fa2b, %struct.Memory** %MEMORY
  %loadBr_43fa2b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fa2b = icmp eq i8 %loadBr_43fa2b, 1
  br i1 %cmpBr_43fa2b, label %block_.L_43fa80, label %block_43fa31

block_43fa31:                                     ; preds = %block_.L_43fa27
  %loadMem_43fa31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16150 = getelementptr inbounds %struct.GPR, %struct.GPR* %16149, i32 0, i32 33
  %16151 = getelementptr inbounds %struct.Reg, %struct.Reg* %16150, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %16151 to i64*
  %16152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16153 = getelementptr inbounds %struct.GPR, %struct.GPR* %16152, i32 0, i32 1
  %16154 = getelementptr inbounds %struct.Reg, %struct.Reg* %16153, i32 0, i32 0
  %RAX.i363 = bitcast %union.anon* %16154 to i64*
  %16155 = load i64, i64* %PC.i362
  %16156 = add i64 %16155, 5
  store i64 %16156, i64* %PC.i362
  store i64 51, i64* %RAX.i363, align 8
  store %struct.Memory* %loadMem_43fa31, %struct.Memory** %MEMORY
  %loadMem_43fa36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16158 = getelementptr inbounds %struct.GPR, %struct.GPR* %16157, i32 0, i32 33
  %16159 = getelementptr inbounds %struct.Reg, %struct.Reg* %16158, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %16159 to i64*
  %16160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16161 = getelementptr inbounds %struct.GPR, %struct.GPR* %16160, i32 0, i32 5
  %16162 = getelementptr inbounds %struct.Reg, %struct.Reg* %16161, i32 0, i32 0
  %RCX.i361 = bitcast %union.anon* %16162 to i64*
  %16163 = load i64, i64* %PC.i360
  %16164 = add i64 %16163, 5
  store i64 %16164, i64* %PC.i360
  store i64 2, i64* %RCX.i361, align 8
  store %struct.Memory* %loadMem_43fa36, %struct.Memory** %MEMORY
  %loadMem_43fa3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16166 = getelementptr inbounds %struct.GPR, %struct.GPR* %16165, i32 0, i32 33
  %16167 = getelementptr inbounds %struct.Reg, %struct.Reg* %16166, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %16167 to i64*
  %16168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16169 = getelementptr inbounds %struct.GPR, %struct.GPR* %16168, i32 0, i32 7
  %16170 = getelementptr inbounds %struct.Reg, %struct.Reg* %16169, i32 0, i32 0
  %RDX.i358 = bitcast %union.anon* %16170 to i64*
  %16171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16172 = getelementptr inbounds %struct.GPR, %struct.GPR* %16171, i32 0, i32 15
  %16173 = getelementptr inbounds %struct.Reg, %struct.Reg* %16172, i32 0, i32 0
  %RBP.i359 = bitcast %union.anon* %16173 to i64*
  %16174 = load i64, i64* %RBP.i359
  %16175 = sub i64 %16174, 36
  %16176 = load i64, i64* %PC.i357
  %16177 = add i64 %16176, 3
  store i64 %16177, i64* %PC.i357
  %16178 = inttoptr i64 %16175 to i32*
  %16179 = load i32, i32* %16178
  %16180 = zext i32 %16179 to i64
  store i64 %16180, i64* %RDX.i358, align 8
  store %struct.Memory* %loadMem_43fa3b, %struct.Memory** %MEMORY
  %loadMem_43fa3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16182 = getelementptr inbounds %struct.GPR, %struct.GPR* %16181, i32 0, i32 33
  %16183 = getelementptr inbounds %struct.Reg, %struct.Reg* %16182, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %16183 to i64*
  %16184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16185 = getelementptr inbounds %struct.GPR, %struct.GPR* %16184, i32 0, i32 7
  %16186 = getelementptr inbounds %struct.Reg, %struct.Reg* %16185, i32 0, i32 0
  %RDX.i356 = bitcast %union.anon* %16186 to i64*
  %16187 = load i64, i64* %RDX.i356
  %16188 = load i64, i64* %PC.i355
  %16189 = add i64 %16188, 3
  store i64 %16189, i64* %PC.i355
  %16190 = and i64 %16187, 4294967295
  %16191 = shl i64 %16190, 1
  %16192 = trunc i64 %16191 to i32
  %16193 = icmp slt i32 %16192, 0
  %16194 = shl i32 %16192, 1
  %16195 = zext i32 %16194 to i64
  store i64 %16195, i64* %RDX.i356, align 8
  %16196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16197 = zext i1 %16193 to i8
  store i8 %16197, i8* %16196, align 1
  %16198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16199 = and i32 %16194, 254
  %16200 = call i32 @llvm.ctpop.i32(i32 %16199)
  %16201 = trunc i32 %16200 to i8
  %16202 = and i8 %16201, 1
  %16203 = xor i8 %16202, 1
  store i8 %16203, i8* %16198, align 1
  %16204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16204, align 1
  %16205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16206 = icmp eq i32 %16194, 0
  %16207 = zext i1 %16206 to i8
  store i8 %16207, i8* %16205, align 1
  %16208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16209 = lshr i32 %16194, 31
  %16210 = trunc i32 %16209 to i8
  store i8 %16210, i8* %16208, align 1
  %16211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16211, align 1
  store %struct.Memory* %loadMem_43fa3e, %struct.Memory** %MEMORY
  %loadMem_43fa41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16213 = getelementptr inbounds %struct.GPR, %struct.GPR* %16212, i32 0, i32 33
  %16214 = getelementptr inbounds %struct.Reg, %struct.Reg* %16213, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %16214 to i64*
  %16215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16216 = getelementptr inbounds %struct.GPR, %struct.GPR* %16215, i32 0, i32 9
  %16217 = getelementptr inbounds %struct.Reg, %struct.Reg* %16216, i32 0, i32 0
  %RSI.i353 = bitcast %union.anon* %16217 to i64*
  %16218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16219 = getelementptr inbounds %struct.GPR, %struct.GPR* %16218, i32 0, i32 15
  %16220 = getelementptr inbounds %struct.Reg, %struct.Reg* %16219, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %16220 to i64*
  %16221 = load i64, i64* %RBP.i354
  %16222 = sub i64 %16221, 36
  %16223 = load i64, i64* %PC.i352
  %16224 = add i64 %16223, 3
  store i64 %16224, i64* %PC.i352
  %16225 = inttoptr i64 %16222 to i32*
  %16226 = load i32, i32* %16225
  %16227 = zext i32 %16226 to i64
  store i64 %16227, i64* %RSI.i353, align 8
  store %struct.Memory* %loadMem_43fa41, %struct.Memory** %MEMORY
  %loadMem_43fa44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16229 = getelementptr inbounds %struct.GPR, %struct.GPR* %16228, i32 0, i32 33
  %16230 = getelementptr inbounds %struct.Reg, %struct.Reg* %16229, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %16230 to i64*
  %16231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16232 = getelementptr inbounds %struct.GPR, %struct.GPR* %16231, i32 0, i32 1
  %16233 = getelementptr inbounds %struct.Reg, %struct.Reg* %16232, i32 0, i32 0
  %EAX.i350 = bitcast %union.anon* %16233 to i32*
  %16234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16235 = getelementptr inbounds %struct.GPR, %struct.GPR* %16234, i32 0, i32 15
  %16236 = getelementptr inbounds %struct.Reg, %struct.Reg* %16235, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %16236 to i64*
  %16237 = load i64, i64* %RBP.i351
  %16238 = sub i64 %16237, 160
  %16239 = load i32, i32* %EAX.i350
  %16240 = zext i32 %16239 to i64
  %16241 = load i64, i64* %PC.i349
  %16242 = add i64 %16241, 6
  store i64 %16242, i64* %PC.i349
  %16243 = inttoptr i64 %16238 to i32*
  store i32 %16239, i32* %16243
  store %struct.Memory* %loadMem_43fa44, %struct.Memory** %MEMORY
  %loadMem_43fa4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16245 = getelementptr inbounds %struct.GPR, %struct.GPR* %16244, i32 0, i32 33
  %16246 = getelementptr inbounds %struct.Reg, %struct.Reg* %16245, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %16246 to i64*
  %16247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16248 = getelementptr inbounds %struct.GPR, %struct.GPR* %16247, i32 0, i32 9
  %16249 = getelementptr inbounds %struct.Reg, %struct.Reg* %16248, i32 0, i32 0
  %ESI.i347 = bitcast %union.anon* %16249 to i32*
  %16250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16251 = getelementptr inbounds %struct.GPR, %struct.GPR* %16250, i32 0, i32 1
  %16252 = getelementptr inbounds %struct.Reg, %struct.Reg* %16251, i32 0, i32 0
  %RAX.i348 = bitcast %union.anon* %16252 to i64*
  %16253 = load i32, i32* %ESI.i347
  %16254 = zext i32 %16253 to i64
  %16255 = load i64, i64* %PC.i346
  %16256 = add i64 %16255, 2
  store i64 %16256, i64* %PC.i346
  %16257 = and i64 %16254, 4294967295
  store i64 %16257, i64* %RAX.i348, align 8
  store %struct.Memory* %loadMem_43fa4a, %struct.Memory** %MEMORY
  %loadMem_43fa4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16259 = getelementptr inbounds %struct.GPR, %struct.GPR* %16258, i32 0, i32 33
  %16260 = getelementptr inbounds %struct.Reg, %struct.Reg* %16259, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %16260 to i64*
  %16261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16262 = getelementptr inbounds %struct.GPR, %struct.GPR* %16261, i32 0, i32 7
  %16263 = getelementptr inbounds %struct.Reg, %struct.Reg* %16262, i32 0, i32 0
  %EDX.i344 = bitcast %union.anon* %16263 to i32*
  %16264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16265 = getelementptr inbounds %struct.GPR, %struct.GPR* %16264, i32 0, i32 15
  %16266 = getelementptr inbounds %struct.Reg, %struct.Reg* %16265, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %16266 to i64*
  %16267 = load i64, i64* %RBP.i345
  %16268 = sub i64 %16267, 164
  %16269 = load i32, i32* %EDX.i344
  %16270 = zext i32 %16269 to i64
  %16271 = load i64, i64* %PC.i343
  %16272 = add i64 %16271, 6
  store i64 %16272, i64* %PC.i343
  %16273 = inttoptr i64 %16268 to i32*
  store i32 %16269, i32* %16273
  store %struct.Memory* %loadMem_43fa4c, %struct.Memory** %MEMORY
  %loadMem_43fa52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16275 = getelementptr inbounds %struct.GPR, %struct.GPR* %16274, i32 0, i32 33
  %16276 = getelementptr inbounds %struct.Reg, %struct.Reg* %16275, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %16276 to i64*
  %16277 = load i64, i64* %PC.i342
  %16278 = add i64 %16277, 1
  store i64 %16278, i64* %PC.i342
  %16279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %16280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %16281 = bitcast %union.anon* %16280 to i32*
  %16282 = load i32, i32* %16281, align 8
  %16283 = sext i32 %16282 to i64
  %16284 = lshr i64 %16283, 32
  store i64 %16284, i64* %16279, align 8
  store %struct.Memory* %loadMem_43fa52, %struct.Memory** %MEMORY
  %loadMem_43fa53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16286 = getelementptr inbounds %struct.GPR, %struct.GPR* %16285, i32 0, i32 33
  %16287 = getelementptr inbounds %struct.Reg, %struct.Reg* %16286, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %16287 to i64*
  %16288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16289 = getelementptr inbounds %struct.GPR, %struct.GPR* %16288, i32 0, i32 5
  %16290 = getelementptr inbounds %struct.Reg, %struct.Reg* %16289, i32 0, i32 0
  %ECX.i338 = bitcast %union.anon* %16290 to i32*
  %16291 = load i32, i32* %ECX.i338
  %16292 = zext i32 %16291 to i64
  %16293 = load i64, i64* %PC.i337
  %16294 = add i64 %16293, 2
  store i64 %16294, i64* %PC.i337
  %16295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %16296 = bitcast %union.anon* %16295 to i32*
  %16297 = load i32, i32* %16296, align 8
  %16298 = zext i32 %16297 to i64
  %16299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %16300 = bitcast %union.anon* %16299 to i32*
  %16301 = load i32, i32* %16300, align 8
  %16302 = zext i32 %16301 to i64
  %16303 = shl i64 %16292, 32
  %16304 = ashr exact i64 %16303, 32
  %16305 = shl i64 %16302, 32
  %16306 = or i64 %16305, %16298
  %16307 = sdiv i64 %16306, %16304
  %16308 = shl i64 %16307, 32
  %16309 = ashr exact i64 %16308, 32
  %16310 = icmp eq i64 %16307, %16309
  br i1 %16310, label %16315, label %16311

; <label>:16311:                                  ; preds = %block_43fa31
  %16312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16313 = load i64, i64* %16312, align 8
  %16314 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %16313, %struct.Memory* %loadMem_43fa53)
  br label %routine_idivl__ecx.exit339

; <label>:16315:                                  ; preds = %block_43fa31
  %16316 = srem i64 %16306, %16304
  %16317 = getelementptr inbounds %union.anon, %union.anon* %16295, i64 0, i32 0
  %16318 = and i64 %16307, 4294967295
  store i64 %16318, i64* %16317, align 8
  %16319 = getelementptr inbounds %union.anon, %union.anon* %16299, i64 0, i32 0
  %16320 = and i64 %16316, 4294967295
  store i64 %16320, i64* %16319, align 8
  %16321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16321, align 1
  %16322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %16322, align 1
  %16323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16323, align 1
  %16324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16324, align 1
  %16325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16325, align 1
  %16326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16326, align 1
  br label %routine_idivl__ecx.exit339

routine_idivl__ecx.exit339:                       ; preds = %16311, %16315
  %16327 = phi %struct.Memory* [ %16314, %16311 ], [ %loadMem_43fa53, %16315 ]
  store %struct.Memory* %16327, %struct.Memory** %MEMORY
  %loadMem_43fa55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16329 = getelementptr inbounds %struct.GPR, %struct.GPR* %16328, i32 0, i32 33
  %16330 = getelementptr inbounds %struct.Reg, %struct.Reg* %16329, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %16330 to i64*
  %16331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16332 = getelementptr inbounds %struct.GPR, %struct.GPR* %16331, i32 0, i32 7
  %16333 = getelementptr inbounds %struct.Reg, %struct.Reg* %16332, i32 0, i32 0
  %RDX.i336 = bitcast %union.anon* %16333 to i64*
  %16334 = load i64, i64* %RDX.i336
  %16335 = load i64, i64* %PC.i335
  %16336 = add i64 %16335, 2
  store i64 %16336, i64* %PC.i335
  %16337 = trunc i64 %16334 to i32
  %16338 = shl i32 %16337, 1
  %16339 = icmp slt i32 %16337, 0
  %16340 = icmp slt i32 %16338, 0
  %16341 = xor i1 %16339, %16340
  %16342 = zext i32 %16338 to i64
  store i64 %16342, i64* %RDX.i336, align 8
  %16343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16344 = zext i1 %16339 to i8
  store i8 %16344, i8* %16343, align 1
  %16345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16346 = and i32 %16338, 254
  %16347 = call i32 @llvm.ctpop.i32(i32 %16346)
  %16348 = trunc i32 %16347 to i8
  %16349 = and i8 %16348, 1
  %16350 = xor i8 %16349, 1
  store i8 %16350, i8* %16345, align 1
  %16351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16351, align 1
  %16352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16353 = icmp eq i32 %16338, 0
  %16354 = zext i1 %16353 to i8
  store i8 %16354, i8* %16352, align 1
  %16355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16356 = lshr i32 %16338, 31
  %16357 = trunc i32 %16356 to i8
  store i8 %16357, i8* %16355, align 1
  %16358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16359 = zext i1 %16341 to i8
  store i8 %16359, i8* %16358, align 1
  store %struct.Memory* %loadMem_43fa55, %struct.Memory** %MEMORY
  %loadMem_43fa58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16361 = getelementptr inbounds %struct.GPR, %struct.GPR* %16360, i32 0, i32 33
  %16362 = getelementptr inbounds %struct.Reg, %struct.Reg* %16361, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %16362 to i64*
  %16363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16364 = getelementptr inbounds %struct.GPR, %struct.GPR* %16363, i32 0, i32 5
  %16365 = getelementptr inbounds %struct.Reg, %struct.Reg* %16364, i32 0, i32 0
  %RCX.i333 = bitcast %union.anon* %16365 to i64*
  %16366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16367 = getelementptr inbounds %struct.GPR, %struct.GPR* %16366, i32 0, i32 15
  %16368 = getelementptr inbounds %struct.Reg, %struct.Reg* %16367, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %16368 to i64*
  %16369 = load i64, i64* %RBP.i334
  %16370 = sub i64 %16369, 164
  %16371 = load i64, i64* %PC.i332
  %16372 = add i64 %16371, 6
  store i64 %16372, i64* %PC.i332
  %16373 = inttoptr i64 %16370 to i32*
  %16374 = load i32, i32* %16373
  %16375 = zext i32 %16374 to i64
  store i64 %16375, i64* %RCX.i333, align 8
  store %struct.Memory* %loadMem_43fa58, %struct.Memory** %MEMORY
  %loadMem_43fa5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16377 = getelementptr inbounds %struct.GPR, %struct.GPR* %16376, i32 0, i32 33
  %16378 = getelementptr inbounds %struct.Reg, %struct.Reg* %16377, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %16378 to i64*
  %16379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16380 = getelementptr inbounds %struct.GPR, %struct.GPR* %16379, i32 0, i32 7
  %16381 = getelementptr inbounds %struct.Reg, %struct.Reg* %16380, i32 0, i32 0
  %EDX.i330 = bitcast %union.anon* %16381 to i32*
  %16382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16383 = getelementptr inbounds %struct.GPR, %struct.GPR* %16382, i32 0, i32 5
  %16384 = getelementptr inbounds %struct.Reg, %struct.Reg* %16383, i32 0, i32 0
  %RCX.i331 = bitcast %union.anon* %16384 to i64*
  %16385 = load i64, i64* %RCX.i331
  %16386 = load i32, i32* %EDX.i330
  %16387 = zext i32 %16386 to i64
  %16388 = load i64, i64* %PC.i329
  %16389 = add i64 %16388, 2
  store i64 %16389, i64* %PC.i329
  %16390 = trunc i64 %16385 to i32
  %16391 = sub i32 %16390, %16386
  %16392 = zext i32 %16391 to i64
  store i64 %16392, i64* %RCX.i331, align 8
  %16393 = icmp ult i32 %16390, %16386
  %16394 = zext i1 %16393 to i8
  %16395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16394, i8* %16395, align 1
  %16396 = and i32 %16391, 255
  %16397 = call i32 @llvm.ctpop.i32(i32 %16396)
  %16398 = trunc i32 %16397 to i8
  %16399 = and i8 %16398, 1
  %16400 = xor i8 %16399, 1
  %16401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16400, i8* %16401, align 1
  %16402 = xor i64 %16387, %16385
  %16403 = trunc i64 %16402 to i32
  %16404 = xor i32 %16403, %16391
  %16405 = lshr i32 %16404, 4
  %16406 = trunc i32 %16405 to i8
  %16407 = and i8 %16406, 1
  %16408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16407, i8* %16408, align 1
  %16409 = icmp eq i32 %16391, 0
  %16410 = zext i1 %16409 to i8
  %16411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16410, i8* %16411, align 1
  %16412 = lshr i32 %16391, 31
  %16413 = trunc i32 %16412 to i8
  %16414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16413, i8* %16414, align 1
  %16415 = lshr i32 %16390, 31
  %16416 = lshr i32 %16386, 31
  %16417 = xor i32 %16416, %16415
  %16418 = xor i32 %16412, %16415
  %16419 = add i32 %16418, %16417
  %16420 = icmp eq i32 %16419, 2
  %16421 = zext i1 %16420 to i8
  %16422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16421, i8* %16422, align 1
  store %struct.Memory* %loadMem_43fa5e, %struct.Memory** %MEMORY
  %loadMem_43fa60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16424 = getelementptr inbounds %struct.GPR, %struct.GPR* %16423, i32 0, i32 33
  %16425 = getelementptr inbounds %struct.Reg, %struct.Reg* %16424, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %16425 to i64*
  %16426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16427 = getelementptr inbounds %struct.GPR, %struct.GPR* %16426, i32 0, i32 7
  %16428 = getelementptr inbounds %struct.Reg, %struct.Reg* %16427, i32 0, i32 0
  %RDX.i327 = bitcast %union.anon* %16428 to i64*
  %16429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16430 = getelementptr inbounds %struct.GPR, %struct.GPR* %16429, i32 0, i32 15
  %16431 = getelementptr inbounds %struct.Reg, %struct.Reg* %16430, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %16431 to i64*
  %16432 = load i64, i64* %RBP.i328
  %16433 = sub i64 %16432, 160
  %16434 = load i64, i64* %PC.i326
  %16435 = add i64 %16434, 6
  store i64 %16435, i64* %PC.i326
  %16436 = inttoptr i64 %16433 to i32*
  %16437 = load i32, i32* %16436
  %16438 = zext i32 %16437 to i64
  store i64 %16438, i64* %RDX.i327, align 8
  store %struct.Memory* %loadMem_43fa60, %struct.Memory** %MEMORY
  %loadMem_43fa66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16440 = getelementptr inbounds %struct.GPR, %struct.GPR* %16439, i32 0, i32 33
  %16441 = getelementptr inbounds %struct.Reg, %struct.Reg* %16440, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %16441 to i64*
  %16442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16443 = getelementptr inbounds %struct.GPR, %struct.GPR* %16442, i32 0, i32 5
  %16444 = getelementptr inbounds %struct.Reg, %struct.Reg* %16443, i32 0, i32 0
  %16445 = bitcast %union.anon* %16444 to %struct.anon.2*
  %CL.i323 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %16445, i32 0, i32 0
  %16446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16447 = getelementptr inbounds %struct.GPR, %struct.GPR* %16446, i32 0, i32 7
  %16448 = getelementptr inbounds %struct.Reg, %struct.Reg* %16447, i32 0, i32 0
  %RDX.i324 = bitcast %union.anon* %16448 to i64*
  %16449 = load i64, i64* %RDX.i324
  %16450 = load i8, i8* %CL.i323
  %16451 = zext i8 %16450 to i64
  %16452 = load i64, i64* %PC.i322
  %16453 = add i64 %16452, 2
  store i64 %16453, i64* %PC.i322
  %16454 = trunc i64 %16451 to i5
  switch i5 %16454, label %16461 [
    i5 0, label %routine_shll__cl___edx.exit325
    i5 1, label %16455
  ]

; <label>:16455:                                  ; preds = %routine_idivl__ecx.exit339
  %16456 = trunc i64 %16449 to i32
  %16457 = shl i32 %16456, 1
  %16458 = icmp slt i32 %16456, 0
  %16459 = icmp slt i32 %16457, 0
  %16460 = xor i1 %16458, %16459
  br label %16470

; <label>:16461:                                  ; preds = %routine_idivl__ecx.exit339
  %16462 = and i64 %16451, 31
  %16463 = add i64 %16462, 4294967295
  %16464 = and i64 %16449, 4294967295
  %16465 = and i64 %16463, 4294967295
  %16466 = shl i64 %16464, %16465
  %16467 = trunc i64 %16466 to i32
  %16468 = icmp slt i32 %16467, 0
  %16469 = shl i32 %16467, 1
  br label %16470

; <label>:16470:                                  ; preds = %16461, %16455
  %16471 = phi i1 [ %16458, %16455 ], [ %16468, %16461 ]
  %16472 = phi i1 [ %16460, %16455 ], [ false, %16461 ]
  %16473 = phi i32 [ %16457, %16455 ], [ %16469, %16461 ]
  %16474 = zext i32 %16473 to i64
  store i64 %16474, i64* %RDX.i324, align 8
  %16475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16476 = zext i1 %16471 to i8
  store i8 %16476, i8* %16475, align 1
  %16477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16478 = and i32 %16473, 254
  %16479 = call i32 @llvm.ctpop.i32(i32 %16478)
  %16480 = trunc i32 %16479 to i8
  %16481 = and i8 %16480, 1
  %16482 = xor i8 %16481, 1
  store i8 %16482, i8* %16477, align 1
  %16483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16483, align 1
  %16484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16485 = icmp eq i32 %16473, 0
  %16486 = zext i1 %16485 to i8
  store i8 %16486, i8* %16484, align 1
  %16487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16488 = lshr i32 %16473, 31
  %16489 = trunc i32 %16488 to i8
  store i8 %16489, i8* %16487, align 1
  %16490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16491 = zext i1 %16472 to i8
  store i8 %16491, i8* %16490, align 1
  br label %routine_shll__cl___edx.exit325

routine_shll__cl___edx.exit325:                   ; preds = %routine_idivl__ecx.exit339, %16470
  store %struct.Memory* %loadMem_43fa66, %struct.Memory** %MEMORY
  %loadMem_43fa68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16493 = getelementptr inbounds %struct.GPR, %struct.GPR* %16492, i32 0, i32 33
  %16494 = getelementptr inbounds %struct.Reg, %struct.Reg* %16493, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %16494 to i64*
  %16495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16496 = getelementptr inbounds %struct.GPR, %struct.GPR* %16495, i32 0, i32 7
  %16497 = getelementptr inbounds %struct.Reg, %struct.Reg* %16496, i32 0, i32 0
  %EDX.i320 = bitcast %union.anon* %16497 to i32*
  %16498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16499 = getelementptr inbounds %struct.GPR, %struct.GPR* %16498, i32 0, i32 11
  %16500 = getelementptr inbounds %struct.Reg, %struct.Reg* %16499, i32 0, i32 0
  %RDI.i321 = bitcast %union.anon* %16500 to i64*
  %16501 = load i32, i32* %EDX.i320
  %16502 = zext i32 %16501 to i64
  %16503 = load i64, i64* %PC.i319
  %16504 = add i64 %16503, 3
  store i64 %16504, i64* %PC.i319
  %16505 = shl i64 %16502, 32
  %16506 = ashr exact i64 %16505, 32
  store i64 %16506, i64* %RDI.i321, align 8
  store %struct.Memory* %loadMem_43fa68, %struct.Memory** %MEMORY
  %loadMem_43fa6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16508 = getelementptr inbounds %struct.GPR, %struct.GPR* %16507, i32 0, i32 33
  %16509 = getelementptr inbounds %struct.Reg, %struct.Reg* %16508, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %16509 to i64*
  %16510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16511 = getelementptr inbounds %struct.GPR, %struct.GPR* %16510, i32 0, i32 15
  %16512 = getelementptr inbounds %struct.Reg, %struct.Reg* %16511, i32 0, i32 0
  %RBP.i317 = bitcast %union.anon* %16512 to i64*
  %16513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16514 = getelementptr inbounds %struct.GPR, %struct.GPR* %16513, i32 0, i32 17
  %16515 = getelementptr inbounds %struct.Reg, %struct.Reg* %16514, i32 0, i32 0
  %R8.i318 = bitcast %union.anon* %16515 to i64*
  %16516 = load i64, i64* %RBP.i317
  %16517 = sub i64 %16516, 32
  %16518 = load i64, i64* %PC.i316
  %16519 = add i64 %16518, 4
  store i64 %16519, i64* %PC.i316
  %16520 = inttoptr i64 %16517 to i64*
  %16521 = load i64, i64* %16520
  store i64 %16521, i64* %R8.i318, align 8
  store %struct.Memory* %loadMem_43fa6b, %struct.Memory** %MEMORY
  %loadMem_43fa6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16523 = getelementptr inbounds %struct.GPR, %struct.GPR* %16522, i32 0, i32 33
  %16524 = getelementptr inbounds %struct.Reg, %struct.Reg* %16523, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %16524 to i64*
  %16525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16526 = getelementptr inbounds %struct.GPR, %struct.GPR* %16525, i32 0, i32 11
  %16527 = getelementptr inbounds %struct.Reg, %struct.Reg* %16526, i32 0, i32 0
  %RDI.i314 = bitcast %union.anon* %16527 to i64*
  %16528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16529 = getelementptr inbounds %struct.GPR, %struct.GPR* %16528, i32 0, i32 17
  %16530 = getelementptr inbounds %struct.Reg, %struct.Reg* %16529, i32 0, i32 0
  %R8.i315 = bitcast %union.anon* %16530 to i64*
  %16531 = load i64, i64* %RDI.i314
  %16532 = load i64, i64* %R8.i315
  %16533 = load i64, i64* %PC.i313
  %16534 = add i64 %16533, 3
  store i64 %16534, i64* %PC.i313
  %16535 = inttoptr i64 %16532 to i64*
  %16536 = load i64, i64* %16535
  %16537 = or i64 %16536, %16531
  store i64 %16537, i64* %RDI.i314, align 8
  %16538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16538, align 1
  %16539 = trunc i64 %16537 to i32
  %16540 = and i32 %16539, 255
  %16541 = call i32 @llvm.ctpop.i32(i32 %16540)
  %16542 = trunc i32 %16541 to i8
  %16543 = and i8 %16542, 1
  %16544 = xor i8 %16543, 1
  %16545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16544, i8* %16545, align 1
  %16546 = icmp eq i64 %16537, 0
  %16547 = zext i1 %16546 to i8
  %16548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16547, i8* %16548, align 1
  %16549 = lshr i64 %16537, 63
  %16550 = trunc i64 %16549 to i8
  %16551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16550, i8* %16551, align 1
  %16552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16552, align 1
  %16553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16553, align 1
  store %struct.Memory* %loadMem_43fa6f, %struct.Memory** %MEMORY
  %loadMem_43fa72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16555 = getelementptr inbounds %struct.GPR, %struct.GPR* %16554, i32 0, i32 33
  %16556 = getelementptr inbounds %struct.Reg, %struct.Reg* %16555, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %16556 to i64*
  %16557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16558 = getelementptr inbounds %struct.GPR, %struct.GPR* %16557, i32 0, i32 11
  %16559 = getelementptr inbounds %struct.Reg, %struct.Reg* %16558, i32 0, i32 0
  %RDI.i311 = bitcast %union.anon* %16559 to i64*
  %16560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16561 = getelementptr inbounds %struct.GPR, %struct.GPR* %16560, i32 0, i32 17
  %16562 = getelementptr inbounds %struct.Reg, %struct.Reg* %16561, i32 0, i32 0
  %R8.i312 = bitcast %union.anon* %16562 to i64*
  %16563 = load i64, i64* %R8.i312
  %16564 = load i64, i64* %RDI.i311
  %16565 = load i64, i64* %PC.i310
  %16566 = add i64 %16565, 3
  store i64 %16566, i64* %PC.i310
  %16567 = inttoptr i64 %16563 to i64*
  store i64 %16564, i64* %16567
  store %struct.Memory* %loadMem_43fa72, %struct.Memory** %MEMORY
  %loadMem_43fa75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16569 = getelementptr inbounds %struct.GPR, %struct.GPR* %16568, i32 0, i32 33
  %16570 = getelementptr inbounds %struct.Reg, %struct.Reg* %16569, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %16570 to i64*
  %16571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16572 = getelementptr inbounds %struct.GPR, %struct.GPR* %16571, i32 0, i32 7
  %16573 = getelementptr inbounds %struct.Reg, %struct.Reg* %16572, i32 0, i32 0
  %RDX.i308 = bitcast %union.anon* %16573 to i64*
  %16574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16575 = getelementptr inbounds %struct.GPR, %struct.GPR* %16574, i32 0, i32 15
  %16576 = getelementptr inbounds %struct.Reg, %struct.Reg* %16575, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %16576 to i64*
  %16577 = load i64, i64* %RBP.i309
  %16578 = sub i64 %16577, 100
  %16579 = load i64, i64* %PC.i307
  %16580 = add i64 %16579, 3
  store i64 %16580, i64* %PC.i307
  %16581 = inttoptr i64 %16578 to i32*
  %16582 = load i32, i32* %16581
  %16583 = zext i32 %16582 to i64
  store i64 %16583, i64* %RDX.i308, align 8
  store %struct.Memory* %loadMem_43fa75, %struct.Memory** %MEMORY
  %loadMem_43fa78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16585 = getelementptr inbounds %struct.GPR, %struct.GPR* %16584, i32 0, i32 33
  %16586 = getelementptr inbounds %struct.Reg, %struct.Reg* %16585, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %16586 to i64*
  %16587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16588 = getelementptr inbounds %struct.GPR, %struct.GPR* %16587, i32 0, i32 11
  %16589 = getelementptr inbounds %struct.Reg, %struct.Reg* %16588, i32 0, i32 0
  %RDI.i305 = bitcast %union.anon* %16589 to i64*
  %16590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16591 = getelementptr inbounds %struct.GPR, %struct.GPR* %16590, i32 0, i32 15
  %16592 = getelementptr inbounds %struct.Reg, %struct.Reg* %16591, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %16592 to i64*
  %16593 = load i64, i64* %RBP.i306
  %16594 = sub i64 %16593, 24
  %16595 = load i64, i64* %PC.i304
  %16596 = add i64 %16595, 4
  store i64 %16596, i64* %PC.i304
  %16597 = inttoptr i64 %16594 to i64*
  %16598 = load i64, i64* %16597
  store i64 %16598, i64* %RDI.i305, align 8
  store %struct.Memory* %loadMem_43fa78, %struct.Memory** %MEMORY
  %loadMem_43fa7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16600 = getelementptr inbounds %struct.GPR, %struct.GPR* %16599, i32 0, i32 33
  %16601 = getelementptr inbounds %struct.Reg, %struct.Reg* %16600, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %16601 to i64*
  %16602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16603 = getelementptr inbounds %struct.GPR, %struct.GPR* %16602, i32 0, i32 7
  %16604 = getelementptr inbounds %struct.Reg, %struct.Reg* %16603, i32 0, i32 0
  %RDX.i302 = bitcast %union.anon* %16604 to i64*
  %16605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16606 = getelementptr inbounds %struct.GPR, %struct.GPR* %16605, i32 0, i32 11
  %16607 = getelementptr inbounds %struct.Reg, %struct.Reg* %16606, i32 0, i32 0
  %RDI.i303 = bitcast %union.anon* %16607 to i64*
  %16608 = load i64, i64* %RDX.i302
  %16609 = load i64, i64* %RDI.i303
  %16610 = load i64, i64* %PC.i301
  %16611 = add i64 %16610, 2
  store i64 %16611, i64* %PC.i301
  %16612 = trunc i64 %16608 to i32
  %16613 = inttoptr i64 %16609 to i32*
  %16614 = load i32, i32* %16613
  %16615 = or i32 %16614, %16612
  %16616 = zext i32 %16615 to i64
  store i64 %16616, i64* %RDX.i302, align 8
  %16617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16617, align 1
  %16618 = and i32 %16615, 255
  %16619 = call i32 @llvm.ctpop.i32(i32 %16618)
  %16620 = trunc i32 %16619 to i8
  %16621 = and i8 %16620, 1
  %16622 = xor i8 %16621, 1
  %16623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16622, i8* %16623, align 1
  %16624 = icmp eq i32 %16615, 0
  %16625 = zext i1 %16624 to i8
  %16626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16625, i8* %16626, align 1
  %16627 = lshr i32 %16615, 31
  %16628 = trunc i32 %16627 to i8
  %16629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16628, i8* %16629, align 1
  %16630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16630, align 1
  %16631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16631, align 1
  store %struct.Memory* %loadMem_43fa7c, %struct.Memory** %MEMORY
  %loadMem_43fa7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16633 = getelementptr inbounds %struct.GPR, %struct.GPR* %16632, i32 0, i32 33
  %16634 = getelementptr inbounds %struct.Reg, %struct.Reg* %16633, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %16634 to i64*
  %16635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16636 = getelementptr inbounds %struct.GPR, %struct.GPR* %16635, i32 0, i32 7
  %16637 = getelementptr inbounds %struct.Reg, %struct.Reg* %16636, i32 0, i32 0
  %EDX.i299 = bitcast %union.anon* %16637 to i32*
  %16638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16639 = getelementptr inbounds %struct.GPR, %struct.GPR* %16638, i32 0, i32 11
  %16640 = getelementptr inbounds %struct.Reg, %struct.Reg* %16639, i32 0, i32 0
  %RDI.i300 = bitcast %union.anon* %16640 to i64*
  %16641 = load i64, i64* %RDI.i300
  %16642 = load i32, i32* %EDX.i299
  %16643 = zext i32 %16642 to i64
  %16644 = load i64, i64* %PC.i298
  %16645 = add i64 %16644, 2
  store i64 %16645, i64* %PC.i298
  %16646 = inttoptr i64 %16641 to i32*
  store i32 %16642, i32* %16646
  store %struct.Memory* %loadMem_43fa7e, %struct.Memory** %MEMORY
  br label %block_.L_43fa80

block_.L_43fa80:                                  ; preds = %routine_shll__cl___edx.exit325, %block_.L_43fa27
  %loadMem_43fa80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16648 = getelementptr inbounds %struct.GPR, %struct.GPR* %16647, i32 0, i32 33
  %16649 = getelementptr inbounds %struct.Reg, %struct.Reg* %16648, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %16649 to i64*
  %16650 = load i64, i64* %PC.i297
  %16651 = add i64 %16650, 5
  %16652 = load i64, i64* %PC.i297
  %16653 = add i64 %16652, 5
  store i64 %16653, i64* %PC.i297
  %16654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16651, i64* %16654, align 8
  store %struct.Memory* %loadMem_43fa80, %struct.Memory** %MEMORY
  br label %block_.L_43fa85

block_.L_43fa85:                                  ; preds = %block_.L_43fa80, %block_43f956, %block_43f941
  %loadMem_43fa85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16656 = getelementptr inbounds %struct.GPR, %struct.GPR* %16655, i32 0, i32 33
  %16657 = getelementptr inbounds %struct.Reg, %struct.Reg* %16656, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %16657 to i64*
  %16658 = load i64, i64* %PC.i296
  %16659 = add i64 %16658, 5
  %16660 = load i64, i64* %PC.i296
  %16661 = add i64 %16660, 5
  store i64 %16661, i64* %PC.i296
  %16662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16659, i64* %16662, align 8
  store %struct.Memory* %loadMem_43fa85, %struct.Memory** %MEMORY
  br label %block_.L_43fa8a

block_.L_43fa8a:                                  ; preds = %block_.L_43fa85, %block_.L_43f934
  %loadMem_43fa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16664 = getelementptr inbounds %struct.GPR, %struct.GPR* %16663, i32 0, i32 33
  %16665 = getelementptr inbounds %struct.Reg, %struct.Reg* %16664, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %16665 to i64*
  %16666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16667 = getelementptr inbounds %struct.GPR, %struct.GPR* %16666, i32 0, i32 1
  %16668 = getelementptr inbounds %struct.Reg, %struct.Reg* %16667, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %16668 to i64*
  %16669 = load i64, i64* %PC.i294
  %16670 = add i64 %16669, 8
  store i64 %16670, i64* %PC.i294
  %16671 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16671, i64* %RAX.i295, align 8
  store %struct.Memory* %loadMem_43fa8a, %struct.Memory** %MEMORY
  %loadMem_43fa92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16673 = getelementptr inbounds %struct.GPR, %struct.GPR* %16672, i32 0, i32 33
  %16674 = getelementptr inbounds %struct.Reg, %struct.Reg* %16673, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %16674 to i64*
  %16675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16676 = getelementptr inbounds %struct.GPR, %struct.GPR* %16675, i32 0, i32 1
  %16677 = getelementptr inbounds %struct.Reg, %struct.Reg* %16676, i32 0, i32 0
  %RAX.i293 = bitcast %union.anon* %16677 to i64*
  %16678 = load i64, i64* %RAX.i293
  %16679 = add i64 %16678, 72392
  %16680 = load i64, i64* %PC.i292
  %16681 = add i64 %16680, 7
  store i64 %16681, i64* %PC.i292
  %16682 = inttoptr i64 %16679 to i32*
  %16683 = load i32, i32* %16682
  %16684 = sub i32 %16683, 1
  %16685 = icmp ult i32 %16683, 1
  %16686 = zext i1 %16685 to i8
  %16687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16686, i8* %16687, align 1
  %16688 = and i32 %16684, 255
  %16689 = call i32 @llvm.ctpop.i32(i32 %16688)
  %16690 = trunc i32 %16689 to i8
  %16691 = and i8 %16690, 1
  %16692 = xor i8 %16691, 1
  %16693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16692, i8* %16693, align 1
  %16694 = xor i32 %16683, 1
  %16695 = xor i32 %16694, %16684
  %16696 = lshr i32 %16695, 4
  %16697 = trunc i32 %16696 to i8
  %16698 = and i8 %16697, 1
  %16699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16698, i8* %16699, align 1
  %16700 = icmp eq i32 %16684, 0
  %16701 = zext i1 %16700 to i8
  %16702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16701, i8* %16702, align 1
  %16703 = lshr i32 %16684, 31
  %16704 = trunc i32 %16703 to i8
  %16705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16704, i8* %16705, align 1
  %16706 = lshr i32 %16683, 31
  %16707 = xor i32 %16703, %16706
  %16708 = add i32 %16707, %16706
  %16709 = icmp eq i32 %16708, 2
  %16710 = zext i1 %16709 to i8
  %16711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16710, i8* %16711, align 1
  store %struct.Memory* %loadMem_43fa92, %struct.Memory** %MEMORY
  %loadMem_43fa99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16713 = getelementptr inbounds %struct.GPR, %struct.GPR* %16712, i32 0, i32 33
  %16714 = getelementptr inbounds %struct.Reg, %struct.Reg* %16713, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %16714 to i64*
  %16715 = load i64, i64* %PC.i291
  %16716 = add i64 %16715, 531
  %16717 = load i64, i64* %PC.i291
  %16718 = add i64 %16717, 6
  %16719 = load i64, i64* %PC.i291
  %16720 = add i64 %16719, 6
  store i64 %16720, i64* %PC.i291
  %16721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16722 = load i8, i8* %16721, align 1
  store i8 %16722, i8* %BRANCH_TAKEN, align 1
  %16723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16724 = icmp ne i8 %16722, 0
  %16725 = select i1 %16724, i64 %16716, i64 %16718
  store i64 %16725, i64* %16723, align 8
  store %struct.Memory* %loadMem_43fa99, %struct.Memory** %MEMORY
  %loadBr_43fa99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fa99 = icmp eq i8 %loadBr_43fa99, 1
  br i1 %cmpBr_43fa99, label %block_.L_43fcac, label %block_43fa9f

block_43fa9f:                                     ; preds = %block_.L_43fa8a
  %loadMem_43fa9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16727 = getelementptr inbounds %struct.GPR, %struct.GPR* %16726, i32 0, i32 33
  %16728 = getelementptr inbounds %struct.Reg, %struct.Reg* %16727, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %16728 to i64*
  %16729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16730 = getelementptr inbounds %struct.GPR, %struct.GPR* %16729, i32 0, i32 15
  %16731 = getelementptr inbounds %struct.Reg, %struct.Reg* %16730, i32 0, i32 0
  %RBP.i290 = bitcast %union.anon* %16731 to i64*
  %16732 = load i64, i64* %RBP.i290
  %16733 = sub i64 %16732, 116
  %16734 = load i64, i64* %PC.i289
  %16735 = add i64 %16734, 4
  store i64 %16735, i64* %PC.i289
  %16736 = inttoptr i64 %16733 to i32*
  %16737 = load i32, i32* %16736
  %16738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16738, align 1
  %16739 = and i32 %16737, 255
  %16740 = call i32 @llvm.ctpop.i32(i32 %16739)
  %16741 = trunc i32 %16740 to i8
  %16742 = and i8 %16741, 1
  %16743 = xor i8 %16742, 1
  %16744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16743, i8* %16744, align 1
  %16745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16745, align 1
  %16746 = icmp eq i32 %16737, 0
  %16747 = zext i1 %16746 to i8
  %16748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16747, i8* %16748, align 1
  %16749 = lshr i32 %16737, 31
  %16750 = trunc i32 %16749 to i8
  %16751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16750, i8* %16751, align 1
  %16752 = lshr i32 %16737, 31
  %16753 = xor i32 %16749, %16752
  %16754 = add i32 %16753, %16752
  %16755 = icmp eq i32 %16754, 2
  %16756 = zext i1 %16755 to i8
  %16757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16756, i8* %16757, align 1
  store %struct.Memory* %loadMem_43fa9f, %struct.Memory** %MEMORY
  %loadMem_43faa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16759 = getelementptr inbounds %struct.GPR, %struct.GPR* %16758, i32 0, i32 33
  %16760 = getelementptr inbounds %struct.Reg, %struct.Reg* %16759, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %16760 to i64*
  %16761 = load i64, i64* %PC.i288
  %16762 = add i64 %16761, 521
  %16763 = load i64, i64* %PC.i288
  %16764 = add i64 %16763, 6
  %16765 = load i64, i64* %PC.i288
  %16766 = add i64 %16765, 6
  store i64 %16766, i64* %PC.i288
  %16767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16768 = load i8, i8* %16767, align 1
  %16769 = icmp eq i8 %16768, 0
  %16770 = zext i1 %16769 to i8
  store i8 %16770, i8* %BRANCH_TAKEN, align 1
  %16771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16772 = select i1 %16769, i64 %16762, i64 %16764
  store i64 %16772, i64* %16771, align 8
  store %struct.Memory* %loadMem_43faa3, %struct.Memory** %MEMORY
  %loadBr_43faa3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43faa3 = icmp eq i8 %loadBr_43faa3, 1
  br i1 %cmpBr_43faa3, label %block_.L_43fcac, label %block_43faa9

block_43faa9:                                     ; preds = %block_43fa9f
  %loadMem_43faa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16774 = getelementptr inbounds %struct.GPR, %struct.GPR* %16773, i32 0, i32 33
  %16775 = getelementptr inbounds %struct.Reg, %struct.Reg* %16774, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %16775 to i64*
  %16776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16777 = getelementptr inbounds %struct.GPR, %struct.GPR* %16776, i32 0, i32 15
  %16778 = getelementptr inbounds %struct.Reg, %struct.Reg* %16777, i32 0, i32 0
  %RBP.i287 = bitcast %union.anon* %16778 to i64*
  %16779 = load i64, i64* %RBP.i287
  %16780 = sub i64 %16779, 88
  %16781 = load i64, i64* %PC.i286
  %16782 = add i64 %16781, 4
  store i64 %16782, i64* %PC.i286
  %16783 = inttoptr i64 %16780 to i32*
  %16784 = load i32, i32* %16783
  %16785 = sub i32 %16784, 4
  %16786 = icmp ult i32 %16784, 4
  %16787 = zext i1 %16786 to i8
  %16788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16787, i8* %16788, align 1
  %16789 = and i32 %16785, 255
  %16790 = call i32 @llvm.ctpop.i32(i32 %16789)
  %16791 = trunc i32 %16790 to i8
  %16792 = and i8 %16791, 1
  %16793 = xor i8 %16792, 1
  %16794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16793, i8* %16794, align 1
  %16795 = xor i32 %16784, 4
  %16796 = xor i32 %16795, %16785
  %16797 = lshr i32 %16796, 4
  %16798 = trunc i32 %16797 to i8
  %16799 = and i8 %16798, 1
  %16800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16799, i8* %16800, align 1
  %16801 = icmp eq i32 %16785, 0
  %16802 = zext i1 %16801 to i8
  %16803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16802, i8* %16803, align 1
  %16804 = lshr i32 %16785, 31
  %16805 = trunc i32 %16804 to i8
  %16806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16805, i8* %16806, align 1
  %16807 = lshr i32 %16784, 31
  %16808 = xor i32 %16804, %16807
  %16809 = add i32 %16808, %16807
  %16810 = icmp eq i32 %16809, 2
  %16811 = zext i1 %16810 to i8
  %16812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16811, i8* %16812, align 1
  store %struct.Memory* %loadMem_43faa9, %struct.Memory** %MEMORY
  %loadMem_43faad = load %struct.Memory*, %struct.Memory** %MEMORY
  %16813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16814 = getelementptr inbounds %struct.GPR, %struct.GPR* %16813, i32 0, i32 33
  %16815 = getelementptr inbounds %struct.Reg, %struct.Reg* %16814, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %16815 to i64*
  %16816 = load i64, i64* %PC.i285
  %16817 = add i64 %16816, 511
  %16818 = load i64, i64* %PC.i285
  %16819 = add i64 %16818, 6
  %16820 = load i64, i64* %PC.i285
  %16821 = add i64 %16820, 6
  store i64 %16821, i64* %PC.i285
  %16822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16823 = load i8, i8* %16822, align 1
  %16824 = icmp eq i8 %16823, 0
  %16825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16826 = load i8, i8* %16825, align 1
  %16827 = icmp ne i8 %16826, 0
  %16828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16829 = load i8, i8* %16828, align 1
  %16830 = icmp ne i8 %16829, 0
  %16831 = xor i1 %16827, %16830
  %16832 = xor i1 %16831, true
  %16833 = and i1 %16824, %16832
  %16834 = zext i1 %16833 to i8
  store i8 %16834, i8* %BRANCH_TAKEN, align 1
  %16835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16836 = select i1 %16833, i64 %16817, i64 %16819
  store i64 %16836, i64* %16835, align 8
  store %struct.Memory* %loadMem_43faad, %struct.Memory** %MEMORY
  %loadBr_43faad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43faad = icmp eq i8 %loadBr_43faad, 1
  br i1 %cmpBr_43faad, label %block_.L_43fcac, label %block_43fab3

block_43fab3:                                     ; preds = %block_43faa9
  %loadMem_43fab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16838 = getelementptr inbounds %struct.GPR, %struct.GPR* %16837, i32 0, i32 33
  %16839 = getelementptr inbounds %struct.Reg, %struct.Reg* %16838, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %16839 to i64*
  %16840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16841 = getelementptr inbounds %struct.GPR, %struct.GPR* %16840, i32 0, i32 1
  %16842 = getelementptr inbounds %struct.Reg, %struct.Reg* %16841, i32 0, i32 0
  %RAX.i284 = bitcast %union.anon* %16842 to i64*
  %16843 = load i64, i64* %PC.i283
  %16844 = add i64 %16843, 8
  store i64 %16844, i64* %PC.i283
  %16845 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16845, i64* %RAX.i284, align 8
  store %struct.Memory* %loadMem_43fab3, %struct.Memory** %MEMORY
  %loadMem_43fabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16847 = getelementptr inbounds %struct.GPR, %struct.GPR* %16846, i32 0, i32 33
  %16848 = getelementptr inbounds %struct.Reg, %struct.Reg* %16847, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %16848 to i64*
  %16849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16850 = getelementptr inbounds %struct.GPR, %struct.GPR* %16849, i32 0, i32 1
  %16851 = getelementptr inbounds %struct.Reg, %struct.Reg* %16850, i32 0, i32 0
  %RAX.i281 = bitcast %union.anon* %16851 to i64*
  %16852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16853 = getelementptr inbounds %struct.GPR, %struct.GPR* %16852, i32 0, i32 5
  %16854 = getelementptr inbounds %struct.Reg, %struct.Reg* %16853, i32 0, i32 0
  %RCX.i282 = bitcast %union.anon* %16854 to i64*
  %16855 = load i64, i64* %RAX.i281
  %16856 = add i64 %16855, 40
  %16857 = load i64, i64* %PC.i280
  %16858 = add i64 %16857, 3
  store i64 %16858, i64* %PC.i280
  %16859 = inttoptr i64 %16856 to i32*
  %16860 = load i32, i32* %16859
  %16861 = zext i32 %16860 to i64
  store i64 %16861, i64* %RCX.i282, align 8
  store %struct.Memory* %loadMem_43fabb, %struct.Memory** %MEMORY
  %loadMem_43fabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %16862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16863 = getelementptr inbounds %struct.GPR, %struct.GPR* %16862, i32 0, i32 33
  %16864 = getelementptr inbounds %struct.Reg, %struct.Reg* %16863, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %16864 to i64*
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16866 = getelementptr inbounds %struct.GPR, %struct.GPR* %16865, i32 0, i32 1
  %16867 = getelementptr inbounds %struct.Reg, %struct.Reg* %16866, i32 0, i32 0
  %RAX.i279 = bitcast %union.anon* %16867 to i64*
  %16868 = load i64, i64* %PC.i278
  %16869 = add i64 %16868, 8
  store i64 %16869, i64* %PC.i278
  %16870 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16870, i64* %RAX.i279, align 8
  store %struct.Memory* %loadMem_43fabe, %struct.Memory** %MEMORY
  %loadMem_43fac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16872 = getelementptr inbounds %struct.GPR, %struct.GPR* %16871, i32 0, i32 33
  %16873 = getelementptr inbounds %struct.Reg, %struct.Reg* %16872, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %16873 to i64*
  %16874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16875 = getelementptr inbounds %struct.GPR, %struct.GPR* %16874, i32 0, i32 1
  %16876 = getelementptr inbounds %struct.Reg, %struct.Reg* %16875, i32 0, i32 0
  %RAX.i276 = bitcast %union.anon* %16876 to i64*
  %16877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16878 = getelementptr inbounds %struct.GPR, %struct.GPR* %16877, i32 0, i32 5
  %16879 = getelementptr inbounds %struct.Reg, %struct.Reg* %16878, i32 0, i32 0
  %RCX.i277 = bitcast %union.anon* %16879 to i64*
  %16880 = load i64, i64* %RCX.i277
  %16881 = load i64, i64* %RAX.i276
  %16882 = add i64 %16881, 72668
  %16883 = load i64, i64* %PC.i275
  %16884 = add i64 %16883, 6
  store i64 %16884, i64* %PC.i275
  %16885 = trunc i64 %16880 to i32
  %16886 = inttoptr i64 %16882 to i32*
  %16887 = load i32, i32* %16886
  %16888 = add i32 %16887, %16885
  %16889 = zext i32 %16888 to i64
  store i64 %16889, i64* %RCX.i277, align 8
  %16890 = icmp ult i32 %16888, %16885
  %16891 = icmp ult i32 %16888, %16887
  %16892 = or i1 %16890, %16891
  %16893 = zext i1 %16892 to i8
  %16894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16893, i8* %16894, align 1
  %16895 = and i32 %16888, 255
  %16896 = call i32 @llvm.ctpop.i32(i32 %16895)
  %16897 = trunc i32 %16896 to i8
  %16898 = and i8 %16897, 1
  %16899 = xor i8 %16898, 1
  %16900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16899, i8* %16900, align 1
  %16901 = xor i32 %16887, %16885
  %16902 = xor i32 %16901, %16888
  %16903 = lshr i32 %16902, 4
  %16904 = trunc i32 %16903 to i8
  %16905 = and i8 %16904, 1
  %16906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16905, i8* %16906, align 1
  %16907 = icmp eq i32 %16888, 0
  %16908 = zext i1 %16907 to i8
  %16909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16908, i8* %16909, align 1
  %16910 = lshr i32 %16888, 31
  %16911 = trunc i32 %16910 to i8
  %16912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16911, i8* %16912, align 1
  %16913 = lshr i32 %16885, 31
  %16914 = lshr i32 %16887, 31
  %16915 = xor i32 %16910, %16913
  %16916 = xor i32 %16910, %16914
  %16917 = add i32 %16915, %16916
  %16918 = icmp eq i32 %16917, 2
  %16919 = zext i1 %16918 to i8
  %16920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16919, i8* %16920, align 1
  store %struct.Memory* %loadMem_43fac6, %struct.Memory** %MEMORY
  %loadMem_43facc = load %struct.Memory*, %struct.Memory** %MEMORY
  %16921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16922 = getelementptr inbounds %struct.GPR, %struct.GPR* %16921, i32 0, i32 33
  %16923 = getelementptr inbounds %struct.Reg, %struct.Reg* %16922, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %16923 to i64*
  %16924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16925 = getelementptr inbounds %struct.GPR, %struct.GPR* %16924, i32 0, i32 5
  %16926 = getelementptr inbounds %struct.Reg, %struct.Reg* %16925, i32 0, i32 0
  %ECX.i274 = bitcast %union.anon* %16926 to i32*
  %16927 = load i32, i32* %ECX.i274
  %16928 = zext i32 %16927 to i64
  %16929 = load i64, i64* %PC.i273
  %16930 = add i64 %16929, 3
  store i64 %16930, i64* %PC.i273
  %16931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16931, align 1
  %16932 = and i32 %16927, 255
  %16933 = call i32 @llvm.ctpop.i32(i32 %16932)
  %16934 = trunc i32 %16933 to i8
  %16935 = and i8 %16934, 1
  %16936 = xor i8 %16935, 1
  %16937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16936, i8* %16937, align 1
  %16938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16938, align 1
  %16939 = icmp eq i32 %16927, 0
  %16940 = zext i1 %16939 to i8
  %16941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16940, i8* %16941, align 1
  %16942 = lshr i32 %16927, 31
  %16943 = trunc i32 %16942 to i8
  %16944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16943, i8* %16944, align 1
  %16945 = lshr i32 %16927, 31
  %16946 = xor i32 %16942, %16945
  %16947 = add i32 %16946, %16945
  %16948 = icmp eq i32 %16947, 2
  %16949 = zext i1 %16948 to i8
  %16950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16949, i8* %16950, align 1
  store %struct.Memory* %loadMem_43facc, %struct.Memory** %MEMORY
  %loadMem_43facf = load %struct.Memory*, %struct.Memory** %MEMORY
  %16951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16952 = getelementptr inbounds %struct.GPR, %struct.GPR* %16951, i32 0, i32 33
  %16953 = getelementptr inbounds %struct.Reg, %struct.Reg* %16952, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %16953 to i64*
  %16954 = load i64, i64* %PC.i272
  %16955 = add i64 %16954, 27
  %16956 = load i64, i64* %PC.i272
  %16957 = add i64 %16956, 6
  %16958 = load i64, i64* %PC.i272
  %16959 = add i64 %16958, 6
  store i64 %16959, i64* %PC.i272
  %16960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16961 = load i8, i8* %16960, align 1
  %16962 = icmp eq i8 %16961, 0
  %16963 = zext i1 %16962 to i8
  store i8 %16963, i8* %BRANCH_TAKEN, align 1
  %16964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16965 = select i1 %16962, i64 %16955, i64 %16957
  store i64 %16965, i64* %16964, align 8
  store %struct.Memory* %loadMem_43facf, %struct.Memory** %MEMORY
  %loadBr_43facf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43facf = icmp eq i8 %loadBr_43facf, 1
  br i1 %cmpBr_43facf, label %block_.L_43faea, label %block_43fad5

block_43fad5:                                     ; preds = %block_43fab3
  %loadMem_43fad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16967 = getelementptr inbounds %struct.GPR, %struct.GPR* %16966, i32 0, i32 33
  %16968 = getelementptr inbounds %struct.Reg, %struct.Reg* %16967, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %16968 to i64*
  %16969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16970 = getelementptr inbounds %struct.GPR, %struct.GPR* %16969, i32 0, i32 1
  %16971 = getelementptr inbounds %struct.Reg, %struct.Reg* %16970, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %16971 to i64*
  %16972 = load i64, i64* %PC.i270
  %16973 = add i64 %16972, 8
  store i64 %16973, i64* %PC.i270
  %16974 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16974, i64* %RAX.i271, align 8
  store %struct.Memory* %loadMem_43fad5, %struct.Memory** %MEMORY
  %loadMem_43fadd = load %struct.Memory*, %struct.Memory** %MEMORY
  %16975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16976 = getelementptr inbounds %struct.GPR, %struct.GPR* %16975, i32 0, i32 33
  %16977 = getelementptr inbounds %struct.Reg, %struct.Reg* %16976, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %16977 to i64*
  %16978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16979 = getelementptr inbounds %struct.GPR, %struct.GPR* %16978, i32 0, i32 1
  %16980 = getelementptr inbounds %struct.Reg, %struct.Reg* %16979, i32 0, i32 0
  %RAX.i269 = bitcast %union.anon* %16980 to i64*
  %16981 = load i64, i64* %RAX.i269
  %16982 = add i64 %16981, 72704
  %16983 = load i64, i64* %PC.i268
  %16984 = add i64 %16983, 7
  store i64 %16984, i64* %PC.i268
  %16985 = inttoptr i64 %16982 to i32*
  %16986 = load i32, i32* %16985
  %16987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16987, align 1
  %16988 = and i32 %16986, 255
  %16989 = call i32 @llvm.ctpop.i32(i32 %16988)
  %16990 = trunc i32 %16989 to i8
  %16991 = and i8 %16990, 1
  %16992 = xor i8 %16991, 1
  %16993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16992, i8* %16993, align 1
  %16994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16994, align 1
  %16995 = icmp eq i32 %16986, 0
  %16996 = zext i1 %16995 to i8
  %16997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16996, i8* %16997, align 1
  %16998 = lshr i32 %16986, 31
  %16999 = trunc i32 %16998 to i8
  %17000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16999, i8* %17000, align 1
  %17001 = lshr i32 %16986, 31
  %17002 = xor i32 %16998, %17001
  %17003 = add i32 %17002, %17001
  %17004 = icmp eq i32 %17003, 2
  %17005 = zext i1 %17004 to i8
  %17006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17005, i8* %17006, align 1
  store %struct.Memory* %loadMem_43fadd, %struct.Memory** %MEMORY
  %loadMem_43fae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17008 = getelementptr inbounds %struct.GPR, %struct.GPR* %17007, i32 0, i32 33
  %17009 = getelementptr inbounds %struct.Reg, %struct.Reg* %17008, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %17009 to i64*
  %17010 = load i64, i64* %PC.i267
  %17011 = add i64 %17010, 456
  %17012 = load i64, i64* %PC.i267
  %17013 = add i64 %17012, 6
  %17014 = load i64, i64* %PC.i267
  %17015 = add i64 %17014, 6
  store i64 %17015, i64* %PC.i267
  %17016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17017 = load i8, i8* %17016, align 1
  %17018 = icmp eq i8 %17017, 0
  %17019 = zext i1 %17018 to i8
  store i8 %17019, i8* %BRANCH_TAKEN, align 1
  %17020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17021 = select i1 %17018, i64 %17011, i64 %17013
  store i64 %17021, i64* %17020, align 8
  store %struct.Memory* %loadMem_43fae4, %struct.Memory** %MEMORY
  %loadBr_43fae4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fae4 = icmp eq i8 %loadBr_43fae4, 1
  br i1 %cmpBr_43fae4, label %block_.L_43fcac, label %block_.L_43faea

block_.L_43faea:                                  ; preds = %block_43fad5, %block_43fab3
  %loadMem_43faea = load %struct.Memory*, %struct.Memory** %MEMORY
  %17022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17023 = getelementptr inbounds %struct.GPR, %struct.GPR* %17022, i32 0, i32 33
  %17024 = getelementptr inbounds %struct.Reg, %struct.Reg* %17023, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %17024 to i64*
  %17025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17026 = getelementptr inbounds %struct.GPR, %struct.GPR* %17025, i32 0, i32 1
  %17027 = getelementptr inbounds %struct.Reg, %struct.Reg* %17026, i32 0, i32 0
  %RAX.i266 = bitcast %union.anon* %17027 to i64*
  %17028 = load i64, i64* %PC.i265
  %17029 = add i64 %17028, 5
  store i64 %17029, i64* %PC.i265
  store i64 51, i64* %RAX.i266, align 8
  store %struct.Memory* %loadMem_43faea, %struct.Memory** %MEMORY
  %loadMem_43faef = load %struct.Memory*, %struct.Memory** %MEMORY
  %17030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17031 = getelementptr inbounds %struct.GPR, %struct.GPR* %17030, i32 0, i32 33
  %17032 = getelementptr inbounds %struct.Reg, %struct.Reg* %17031, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %17032 to i64*
  %17033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17034 = getelementptr inbounds %struct.GPR, %struct.GPR* %17033, i32 0, i32 5
  %17035 = getelementptr inbounds %struct.Reg, %struct.Reg* %17034, i32 0, i32 0
  %RCX.i264 = bitcast %union.anon* %17035 to i64*
  %17036 = load i64, i64* %PC.i263
  %17037 = add i64 %17036, 5
  store i64 %17037, i64* %PC.i263
  store i64 2, i64* %RCX.i264, align 8
  store %struct.Memory* %loadMem_43faef, %struct.Memory** %MEMORY
  %loadMem_43faf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17039 = getelementptr inbounds %struct.GPR, %struct.GPR* %17038, i32 0, i32 33
  %17040 = getelementptr inbounds %struct.Reg, %struct.Reg* %17039, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %17040 to i64*
  %17041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17042 = getelementptr inbounds %struct.GPR, %struct.GPR* %17041, i32 0, i32 7
  %17043 = getelementptr inbounds %struct.Reg, %struct.Reg* %17042, i32 0, i32 0
  %RDX.i262 = bitcast %union.anon* %17043 to i64*
  %17044 = load i64, i64* %PC.i261
  %17045 = add i64 %17044, 5
  store i64 %17045, i64* %PC.i261
  store i64 63, i64* %RDX.i262, align 8
  store %struct.Memory* %loadMem_43faf4, %struct.Memory** %MEMORY
  %loadMem_43faf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17047 = getelementptr inbounds %struct.GPR, %struct.GPR* %17046, i32 0, i32 33
  %17048 = getelementptr inbounds %struct.Reg, %struct.Reg* %17047, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %17048 to i64*
  %17049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17050 = getelementptr inbounds %struct.GPR, %struct.GPR* %17049, i32 0, i32 15
  %17051 = getelementptr inbounds %struct.Reg, %struct.Reg* %17050, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %17051 to i64*
  %17052 = load i64, i64* %RBP.i260
  %17053 = sub i64 %17052, 88
  %17054 = load i64, i64* %PC.i259
  %17055 = add i64 %17054, 7
  store i64 %17055, i64* %PC.i259
  %17056 = inttoptr i64 %17053 to i32*
  store i32 0, i32* %17056
  store %struct.Memory* %loadMem_43faf9, %struct.Memory** %MEMORY
  %loadMem_43fb00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17058 = getelementptr inbounds %struct.GPR, %struct.GPR* %17057, i32 0, i32 33
  %17059 = getelementptr inbounds %struct.Reg, %struct.Reg* %17058, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %17059 to i64*
  %17060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17061 = getelementptr inbounds %struct.GPR, %struct.GPR* %17060, i32 0, i32 7
  %17062 = getelementptr inbounds %struct.Reg, %struct.Reg* %17061, i32 0, i32 0
  %RDX.i257 = bitcast %union.anon* %17062 to i64*
  %17063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17064 = getelementptr inbounds %struct.GPR, %struct.GPR* %17063, i32 0, i32 15
  %17065 = getelementptr inbounds %struct.Reg, %struct.Reg* %17064, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %17065 to i64*
  %17066 = load i64, i64* %RDX.i257
  %17067 = load i64, i64* %RBP.i258
  %17068 = sub i64 %17067, 100
  %17069 = load i64, i64* %PC.i256
  %17070 = add i64 %17069, 3
  store i64 %17070, i64* %PC.i256
  %17071 = trunc i64 %17066 to i32
  %17072 = inttoptr i64 %17068 to i32*
  %17073 = load i32, i32* %17072
  %17074 = sub i32 %17071, %17073
  %17075 = zext i32 %17074 to i64
  store i64 %17075, i64* %RDX.i257, align 8
  %17076 = icmp ult i32 %17071, %17073
  %17077 = zext i1 %17076 to i8
  %17078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17077, i8* %17078, align 1
  %17079 = and i32 %17074, 255
  %17080 = call i32 @llvm.ctpop.i32(i32 %17079)
  %17081 = trunc i32 %17080 to i8
  %17082 = and i8 %17081, 1
  %17083 = xor i8 %17082, 1
  %17084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17083, i8* %17084, align 1
  %17085 = xor i32 %17073, %17071
  %17086 = xor i32 %17085, %17074
  %17087 = lshr i32 %17086, 4
  %17088 = trunc i32 %17087 to i8
  %17089 = and i8 %17088, 1
  %17090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17089, i8* %17090, align 1
  %17091 = icmp eq i32 %17074, 0
  %17092 = zext i1 %17091 to i8
  %17093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17092, i8* %17093, align 1
  %17094 = lshr i32 %17074, 31
  %17095 = trunc i32 %17094 to i8
  %17096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17095, i8* %17096, align 1
  %17097 = lshr i32 %17071, 31
  %17098 = lshr i32 %17073, 31
  %17099 = xor i32 %17098, %17097
  %17100 = xor i32 %17094, %17097
  %17101 = add i32 %17100, %17099
  %17102 = icmp eq i32 %17101, 2
  %17103 = zext i1 %17102 to i8
  %17104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17103, i8* %17104, align 1
  store %struct.Memory* %loadMem_43fb00, %struct.Memory** %MEMORY
  %loadMem_43fb03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17106 = getelementptr inbounds %struct.GPR, %struct.GPR* %17105, i32 0, i32 33
  %17107 = getelementptr inbounds %struct.Reg, %struct.Reg* %17106, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %17107 to i64*
  %17108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17109 = getelementptr inbounds %struct.GPR, %struct.GPR* %17108, i32 0, i32 9
  %17110 = getelementptr inbounds %struct.Reg, %struct.Reg* %17109, i32 0, i32 0
  %RSI.i254 = bitcast %union.anon* %17110 to i64*
  %17111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17112 = getelementptr inbounds %struct.GPR, %struct.GPR* %17111, i32 0, i32 15
  %17113 = getelementptr inbounds %struct.Reg, %struct.Reg* %17112, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %17113 to i64*
  %17114 = load i64, i64* %RBP.i255
  %17115 = sub i64 %17114, 24
  %17116 = load i64, i64* %PC.i253
  %17117 = add i64 %17116, 4
  store i64 %17117, i64* %PC.i253
  %17118 = inttoptr i64 %17115 to i64*
  %17119 = load i64, i64* %17118
  store i64 %17119, i64* %RSI.i254, align 8
  store %struct.Memory* %loadMem_43fb03, %struct.Memory** %MEMORY
  %loadMem_43fb07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17121 = getelementptr inbounds %struct.GPR, %struct.GPR* %17120, i32 0, i32 33
  %17122 = getelementptr inbounds %struct.Reg, %struct.Reg* %17121, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %17122 to i64*
  %17123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17124 = getelementptr inbounds %struct.GPR, %struct.GPR* %17123, i32 0, i32 7
  %17125 = getelementptr inbounds %struct.Reg, %struct.Reg* %17124, i32 0, i32 0
  %RDX.i251 = bitcast %union.anon* %17125 to i64*
  %17126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17127 = getelementptr inbounds %struct.GPR, %struct.GPR* %17126, i32 0, i32 9
  %17128 = getelementptr inbounds %struct.Reg, %struct.Reg* %17127, i32 0, i32 0
  %RSI.i252 = bitcast %union.anon* %17128 to i64*
  %17129 = load i64, i64* %RDX.i251
  %17130 = load i64, i64* %RSI.i252
  %17131 = load i64, i64* %PC.i250
  %17132 = add i64 %17131, 2
  store i64 %17132, i64* %PC.i250
  %17133 = trunc i64 %17129 to i32
  %17134 = inttoptr i64 %17130 to i32*
  %17135 = load i32, i32* %17134
  %17136 = and i32 %17135, %17133
  %17137 = zext i32 %17136 to i64
  store i64 %17137, i64* %RDX.i251, align 8
  %17138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17138, align 1
  %17139 = and i32 %17136, 255
  %17140 = call i32 @llvm.ctpop.i32(i32 %17139)
  %17141 = trunc i32 %17140 to i8
  %17142 = and i8 %17141, 1
  %17143 = xor i8 %17142, 1
  %17144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17143, i8* %17144, align 1
  %17145 = icmp eq i32 %17136, 0
  %17146 = zext i1 %17145 to i8
  %17147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17146, i8* %17147, align 1
  %17148 = lshr i32 %17136, 31
  %17149 = trunc i32 %17148 to i8
  %17150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17149, i8* %17150, align 1
  %17151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17151, align 1
  %17152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17152, align 1
  store %struct.Memory* %loadMem_43fb07, %struct.Memory** %MEMORY
  %loadMem_43fb09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17154 = getelementptr inbounds %struct.GPR, %struct.GPR* %17153, i32 0, i32 33
  %17155 = getelementptr inbounds %struct.Reg, %struct.Reg* %17154, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %17155 to i64*
  %17156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17157 = getelementptr inbounds %struct.GPR, %struct.GPR* %17156, i32 0, i32 7
  %17158 = getelementptr inbounds %struct.Reg, %struct.Reg* %17157, i32 0, i32 0
  %EDX.i248 = bitcast %union.anon* %17158 to i32*
  %17159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17160 = getelementptr inbounds %struct.GPR, %struct.GPR* %17159, i32 0, i32 9
  %17161 = getelementptr inbounds %struct.Reg, %struct.Reg* %17160, i32 0, i32 0
  %RSI.i249 = bitcast %union.anon* %17161 to i64*
  %17162 = load i64, i64* %RSI.i249
  %17163 = load i32, i32* %EDX.i248
  %17164 = zext i32 %17163 to i64
  %17165 = load i64, i64* %PC.i247
  %17166 = add i64 %17165, 2
  store i64 %17166, i64* %PC.i247
  %17167 = inttoptr i64 %17162 to i32*
  store i32 %17163, i32* %17167
  store %struct.Memory* %loadMem_43fb09, %struct.Memory** %MEMORY
  %loadMem_43fb0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17169 = getelementptr inbounds %struct.GPR, %struct.GPR* %17168, i32 0, i32 33
  %17170 = getelementptr inbounds %struct.Reg, %struct.Reg* %17169, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %17170 to i64*
  %17171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17172 = getelementptr inbounds %struct.GPR, %struct.GPR* %17171, i32 0, i32 7
  %17173 = getelementptr inbounds %struct.Reg, %struct.Reg* %17172, i32 0, i32 0
  %RDX.i245 = bitcast %union.anon* %17173 to i64*
  %17174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17175 = getelementptr inbounds %struct.GPR, %struct.GPR* %17174, i32 0, i32 15
  %17176 = getelementptr inbounds %struct.Reg, %struct.Reg* %17175, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %17176 to i64*
  %17177 = load i64, i64* %RBP.i246
  %17178 = sub i64 %17177, 36
  %17179 = load i64, i64* %PC.i244
  %17180 = add i64 %17179, 3
  store i64 %17180, i64* %PC.i244
  %17181 = inttoptr i64 %17178 to i32*
  %17182 = load i32, i32* %17181
  %17183 = zext i32 %17182 to i64
  store i64 %17183, i64* %RDX.i245, align 8
  store %struct.Memory* %loadMem_43fb0b, %struct.Memory** %MEMORY
  %loadMem_43fb0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17185 = getelementptr inbounds %struct.GPR, %struct.GPR* %17184, i32 0, i32 33
  %17186 = getelementptr inbounds %struct.Reg, %struct.Reg* %17185, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %17186 to i64*
  %17187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17188 = getelementptr inbounds %struct.GPR, %struct.GPR* %17187, i32 0, i32 7
  %17189 = getelementptr inbounds %struct.Reg, %struct.Reg* %17188, i32 0, i32 0
  %RDX.i243 = bitcast %union.anon* %17189 to i64*
  %17190 = load i64, i64* %RDX.i243
  %17191 = load i64, i64* %PC.i242
  %17192 = add i64 %17191, 3
  store i64 %17192, i64* %PC.i242
  %17193 = and i64 %17190, 4294967295
  %17194 = shl i64 %17193, 1
  %17195 = trunc i64 %17194 to i32
  %17196 = icmp slt i32 %17195, 0
  %17197 = shl i32 %17195, 1
  %17198 = zext i32 %17197 to i64
  store i64 %17198, i64* %RDX.i243, align 8
  %17199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17200 = zext i1 %17196 to i8
  store i8 %17200, i8* %17199, align 1
  %17201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17202 = and i32 %17197, 254
  %17203 = call i32 @llvm.ctpop.i32(i32 %17202)
  %17204 = trunc i32 %17203 to i8
  %17205 = and i8 %17204, 1
  %17206 = xor i8 %17205, 1
  store i8 %17206, i8* %17201, align 1
  %17207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17207, align 1
  %17208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17209 = icmp eq i32 %17197, 0
  %17210 = zext i1 %17209 to i8
  store i8 %17210, i8* %17208, align 1
  %17211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17212 = lshr i32 %17197, 31
  %17213 = trunc i32 %17212 to i8
  store i8 %17213, i8* %17211, align 1
  %17214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17214, align 1
  store %struct.Memory* %loadMem_43fb0e, %struct.Memory** %MEMORY
  %loadMem_43fb11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17216 = getelementptr inbounds %struct.GPR, %struct.GPR* %17215, i32 0, i32 33
  %17217 = getelementptr inbounds %struct.Reg, %struct.Reg* %17216, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %17217 to i64*
  %17218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17219 = getelementptr inbounds %struct.GPR, %struct.GPR* %17218, i32 0, i32 11
  %17220 = getelementptr inbounds %struct.Reg, %struct.Reg* %17219, i32 0, i32 0
  %RDI.i240 = bitcast %union.anon* %17220 to i64*
  %17221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17222 = getelementptr inbounds %struct.GPR, %struct.GPR* %17221, i32 0, i32 15
  %17223 = getelementptr inbounds %struct.Reg, %struct.Reg* %17222, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %17223 to i64*
  %17224 = load i64, i64* %RBP.i241
  %17225 = sub i64 %17224, 36
  %17226 = load i64, i64* %PC.i239
  %17227 = add i64 %17226, 3
  store i64 %17227, i64* %PC.i239
  %17228 = inttoptr i64 %17225 to i32*
  %17229 = load i32, i32* %17228
  %17230 = zext i32 %17229 to i64
  store i64 %17230, i64* %RDI.i240, align 8
  store %struct.Memory* %loadMem_43fb11, %struct.Memory** %MEMORY
  %loadMem_43fb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17232 = getelementptr inbounds %struct.GPR, %struct.GPR* %17231, i32 0, i32 33
  %17233 = getelementptr inbounds %struct.Reg, %struct.Reg* %17232, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %17233 to i64*
  %17234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17235 = getelementptr inbounds %struct.GPR, %struct.GPR* %17234, i32 0, i32 1
  %17236 = getelementptr inbounds %struct.Reg, %struct.Reg* %17235, i32 0, i32 0
  %EAX.i237 = bitcast %union.anon* %17236 to i32*
  %17237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17238 = getelementptr inbounds %struct.GPR, %struct.GPR* %17237, i32 0, i32 15
  %17239 = getelementptr inbounds %struct.Reg, %struct.Reg* %17238, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %17239 to i64*
  %17240 = load i64, i64* %RBP.i238
  %17241 = sub i64 %17240, 168
  %17242 = load i32, i32* %EAX.i237
  %17243 = zext i32 %17242 to i64
  %17244 = load i64, i64* %PC.i236
  %17245 = add i64 %17244, 6
  store i64 %17245, i64* %PC.i236
  %17246 = inttoptr i64 %17241 to i32*
  store i32 %17242, i32* %17246
  store %struct.Memory* %loadMem_43fb14, %struct.Memory** %MEMORY
  %loadMem_43fb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17248 = getelementptr inbounds %struct.GPR, %struct.GPR* %17247, i32 0, i32 33
  %17249 = getelementptr inbounds %struct.Reg, %struct.Reg* %17248, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %17249 to i64*
  %17250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17251 = getelementptr inbounds %struct.GPR, %struct.GPR* %17250, i32 0, i32 11
  %17252 = getelementptr inbounds %struct.Reg, %struct.Reg* %17251, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %17252 to i32*
  %17253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17254 = getelementptr inbounds %struct.GPR, %struct.GPR* %17253, i32 0, i32 1
  %17255 = getelementptr inbounds %struct.Reg, %struct.Reg* %17254, i32 0, i32 0
  %RAX.i235 = bitcast %union.anon* %17255 to i64*
  %17256 = load i32, i32* %EDI.i
  %17257 = zext i32 %17256 to i64
  %17258 = load i64, i64* %PC.i234
  %17259 = add i64 %17258, 2
  store i64 %17259, i64* %PC.i234
  %17260 = and i64 %17257, 4294967295
  store i64 %17260, i64* %RAX.i235, align 8
  store %struct.Memory* %loadMem_43fb1a, %struct.Memory** %MEMORY
  %loadMem_43fb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17262 = getelementptr inbounds %struct.GPR, %struct.GPR* %17261, i32 0, i32 33
  %17263 = getelementptr inbounds %struct.Reg, %struct.Reg* %17262, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %17263 to i64*
  %17264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17265 = getelementptr inbounds %struct.GPR, %struct.GPR* %17264, i32 0, i32 7
  %17266 = getelementptr inbounds %struct.Reg, %struct.Reg* %17265, i32 0, i32 0
  %EDX.i232 = bitcast %union.anon* %17266 to i32*
  %17267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17268 = getelementptr inbounds %struct.GPR, %struct.GPR* %17267, i32 0, i32 15
  %17269 = getelementptr inbounds %struct.Reg, %struct.Reg* %17268, i32 0, i32 0
  %RBP.i233 = bitcast %union.anon* %17269 to i64*
  %17270 = load i64, i64* %RBP.i233
  %17271 = sub i64 %17270, 172
  %17272 = load i32, i32* %EDX.i232
  %17273 = zext i32 %17272 to i64
  %17274 = load i64, i64* %PC.i231
  %17275 = add i64 %17274, 6
  store i64 %17275, i64* %PC.i231
  %17276 = inttoptr i64 %17271 to i32*
  store i32 %17272, i32* %17276
  store %struct.Memory* %loadMem_43fb1c, %struct.Memory** %MEMORY
  %loadMem_43fb22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17278 = getelementptr inbounds %struct.GPR, %struct.GPR* %17277, i32 0, i32 33
  %17279 = getelementptr inbounds %struct.Reg, %struct.Reg* %17278, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %17279 to i64*
  %17280 = load i64, i64* %PC.i230
  %17281 = add i64 %17280, 1
  store i64 %17281, i64* %PC.i230
  %17282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %17283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %17284 = bitcast %union.anon* %17283 to i32*
  %17285 = load i32, i32* %17284, align 8
  %17286 = sext i32 %17285 to i64
  %17287 = lshr i64 %17286, 32
  store i64 %17287, i64* %17282, align 8
  store %struct.Memory* %loadMem_43fb22, %struct.Memory** %MEMORY
  %loadMem_43fb23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17289 = getelementptr inbounds %struct.GPR, %struct.GPR* %17288, i32 0, i32 33
  %17290 = getelementptr inbounds %struct.Reg, %struct.Reg* %17289, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %17290 to i64*
  %17291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17292 = getelementptr inbounds %struct.GPR, %struct.GPR* %17291, i32 0, i32 5
  %17293 = getelementptr inbounds %struct.Reg, %struct.Reg* %17292, i32 0, i32 0
  %ECX.i226 = bitcast %union.anon* %17293 to i32*
  %17294 = load i32, i32* %ECX.i226
  %17295 = zext i32 %17294 to i64
  %17296 = load i64, i64* %PC.i225
  %17297 = add i64 %17296, 2
  store i64 %17297, i64* %PC.i225
  %17298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %17299 = bitcast %union.anon* %17298 to i32*
  %17300 = load i32, i32* %17299, align 8
  %17301 = zext i32 %17300 to i64
  %17302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %17303 = bitcast %union.anon* %17302 to i32*
  %17304 = load i32, i32* %17303, align 8
  %17305 = zext i32 %17304 to i64
  %17306 = shl i64 %17295, 32
  %17307 = ashr exact i64 %17306, 32
  %17308 = shl i64 %17305, 32
  %17309 = or i64 %17308, %17301
  %17310 = sdiv i64 %17309, %17307
  %17311 = shl i64 %17310, 32
  %17312 = ashr exact i64 %17311, 32
  %17313 = icmp eq i64 %17310, %17312
  br i1 %17313, label %17318, label %17314

; <label>:17314:                                  ; preds = %block_.L_43faea
  %17315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17316 = load i64, i64* %17315, align 8
  %17317 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %17316, %struct.Memory* %loadMem_43fb23)
  br label %routine_idivl__ecx.exit

; <label>:17318:                                  ; preds = %block_.L_43faea
  %17319 = srem i64 %17309, %17307
  %17320 = getelementptr inbounds %union.anon, %union.anon* %17298, i64 0, i32 0
  %17321 = and i64 %17310, 4294967295
  store i64 %17321, i64* %17320, align 8
  %17322 = getelementptr inbounds %union.anon, %union.anon* %17302, i64 0, i32 0
  %17323 = and i64 %17319, 4294967295
  store i64 %17323, i64* %17322, align 8
  %17324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17324, align 1
  %17325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %17325, align 1
  %17326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17326, align 1
  %17327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17327, align 1
  %17328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %17328, align 1
  %17329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17329, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %17314, %17318
  %17330 = phi %struct.Memory* [ %17317, %17314 ], [ %loadMem_43fb23, %17318 ]
  store %struct.Memory* %17330, %struct.Memory** %MEMORY
  %loadMem_43fb25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17332 = getelementptr inbounds %struct.GPR, %struct.GPR* %17331, i32 0, i32 33
  %17333 = getelementptr inbounds %struct.Reg, %struct.Reg* %17332, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %17333 to i64*
  %17334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17335 = getelementptr inbounds %struct.GPR, %struct.GPR* %17334, i32 0, i32 7
  %17336 = getelementptr inbounds %struct.Reg, %struct.Reg* %17335, i32 0, i32 0
  %RDX.i224 = bitcast %union.anon* %17336 to i64*
  %17337 = load i64, i64* %RDX.i224
  %17338 = load i64, i64* %PC.i223
  %17339 = add i64 %17338, 2
  store i64 %17339, i64* %PC.i223
  %17340 = trunc i64 %17337 to i32
  %17341 = shl i32 %17340, 1
  %17342 = icmp slt i32 %17340, 0
  %17343 = icmp slt i32 %17341, 0
  %17344 = xor i1 %17342, %17343
  %17345 = zext i32 %17341 to i64
  store i64 %17345, i64* %RDX.i224, align 8
  %17346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17347 = zext i1 %17342 to i8
  store i8 %17347, i8* %17346, align 1
  %17348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17349 = and i32 %17341, 254
  %17350 = call i32 @llvm.ctpop.i32(i32 %17349)
  %17351 = trunc i32 %17350 to i8
  %17352 = and i8 %17351, 1
  %17353 = xor i8 %17352, 1
  store i8 %17353, i8* %17348, align 1
  %17354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17354, align 1
  %17355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17356 = icmp eq i32 %17341, 0
  %17357 = zext i1 %17356 to i8
  store i8 %17357, i8* %17355, align 1
  %17358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17359 = lshr i32 %17341, 31
  %17360 = trunc i32 %17359 to i8
  store i8 %17360, i8* %17358, align 1
  %17361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17362 = zext i1 %17344 to i8
  store i8 %17362, i8* %17361, align 1
  store %struct.Memory* %loadMem_43fb25, %struct.Memory** %MEMORY
  %loadMem_43fb28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17364 = getelementptr inbounds %struct.GPR, %struct.GPR* %17363, i32 0, i32 33
  %17365 = getelementptr inbounds %struct.Reg, %struct.Reg* %17364, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %17365 to i64*
  %17366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17367 = getelementptr inbounds %struct.GPR, %struct.GPR* %17366, i32 0, i32 5
  %17368 = getelementptr inbounds %struct.Reg, %struct.Reg* %17367, i32 0, i32 0
  %RCX.i221 = bitcast %union.anon* %17368 to i64*
  %17369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17370 = getelementptr inbounds %struct.GPR, %struct.GPR* %17369, i32 0, i32 15
  %17371 = getelementptr inbounds %struct.Reg, %struct.Reg* %17370, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %17371 to i64*
  %17372 = load i64, i64* %RBP.i222
  %17373 = sub i64 %17372, 172
  %17374 = load i64, i64* %PC.i220
  %17375 = add i64 %17374, 6
  store i64 %17375, i64* %PC.i220
  %17376 = inttoptr i64 %17373 to i32*
  %17377 = load i32, i32* %17376
  %17378 = zext i32 %17377 to i64
  store i64 %17378, i64* %RCX.i221, align 8
  store %struct.Memory* %loadMem_43fb28, %struct.Memory** %MEMORY
  %loadMem_43fb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17380 = getelementptr inbounds %struct.GPR, %struct.GPR* %17379, i32 0, i32 33
  %17381 = getelementptr inbounds %struct.Reg, %struct.Reg* %17380, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %17381 to i64*
  %17382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17383 = getelementptr inbounds %struct.GPR, %struct.GPR* %17382, i32 0, i32 7
  %17384 = getelementptr inbounds %struct.Reg, %struct.Reg* %17383, i32 0, i32 0
  %EDX.i218 = bitcast %union.anon* %17384 to i32*
  %17385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17386 = getelementptr inbounds %struct.GPR, %struct.GPR* %17385, i32 0, i32 5
  %17387 = getelementptr inbounds %struct.Reg, %struct.Reg* %17386, i32 0, i32 0
  %RCX.i219 = bitcast %union.anon* %17387 to i64*
  %17388 = load i64, i64* %RCX.i219
  %17389 = load i32, i32* %EDX.i218
  %17390 = zext i32 %17389 to i64
  %17391 = load i64, i64* %PC.i217
  %17392 = add i64 %17391, 2
  store i64 %17392, i64* %PC.i217
  %17393 = trunc i64 %17388 to i32
  %17394 = sub i32 %17393, %17389
  %17395 = zext i32 %17394 to i64
  store i64 %17395, i64* %RCX.i219, align 8
  %17396 = icmp ult i32 %17393, %17389
  %17397 = zext i1 %17396 to i8
  %17398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17397, i8* %17398, align 1
  %17399 = and i32 %17394, 255
  %17400 = call i32 @llvm.ctpop.i32(i32 %17399)
  %17401 = trunc i32 %17400 to i8
  %17402 = and i8 %17401, 1
  %17403 = xor i8 %17402, 1
  %17404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17403, i8* %17404, align 1
  %17405 = xor i64 %17390, %17388
  %17406 = trunc i64 %17405 to i32
  %17407 = xor i32 %17406, %17394
  %17408 = lshr i32 %17407, 4
  %17409 = trunc i32 %17408 to i8
  %17410 = and i8 %17409, 1
  %17411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17410, i8* %17411, align 1
  %17412 = icmp eq i32 %17394, 0
  %17413 = zext i1 %17412 to i8
  %17414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17413, i8* %17414, align 1
  %17415 = lshr i32 %17394, 31
  %17416 = trunc i32 %17415 to i8
  %17417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17416, i8* %17417, align 1
  %17418 = lshr i32 %17393, 31
  %17419 = lshr i32 %17389, 31
  %17420 = xor i32 %17419, %17418
  %17421 = xor i32 %17415, %17418
  %17422 = add i32 %17421, %17420
  %17423 = icmp eq i32 %17422, 2
  %17424 = zext i1 %17423 to i8
  %17425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17424, i8* %17425, align 1
  store %struct.Memory* %loadMem_43fb2e, %struct.Memory** %MEMORY
  %loadMem_43fb30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17427 = getelementptr inbounds %struct.GPR, %struct.GPR* %17426, i32 0, i32 33
  %17428 = getelementptr inbounds %struct.Reg, %struct.Reg* %17427, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %17428 to i64*
  %17429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17430 = getelementptr inbounds %struct.GPR, %struct.GPR* %17429, i32 0, i32 7
  %17431 = getelementptr inbounds %struct.Reg, %struct.Reg* %17430, i32 0, i32 0
  %RDX.i215 = bitcast %union.anon* %17431 to i64*
  %17432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17433 = getelementptr inbounds %struct.GPR, %struct.GPR* %17432, i32 0, i32 15
  %17434 = getelementptr inbounds %struct.Reg, %struct.Reg* %17433, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %17434 to i64*
  %17435 = load i64, i64* %RBP.i216
  %17436 = sub i64 %17435, 168
  %17437 = load i64, i64* %PC.i214
  %17438 = add i64 %17437, 6
  store i64 %17438, i64* %PC.i214
  %17439 = inttoptr i64 %17436 to i32*
  %17440 = load i32, i32* %17439
  %17441 = zext i32 %17440 to i64
  store i64 %17441, i64* %RDX.i215, align 8
  store %struct.Memory* %loadMem_43fb30, %struct.Memory** %MEMORY
  %loadMem_43fb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17443 = getelementptr inbounds %struct.GPR, %struct.GPR* %17442, i32 0, i32 33
  %17444 = getelementptr inbounds %struct.Reg, %struct.Reg* %17443, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %17444 to i64*
  %17445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17446 = getelementptr inbounds %struct.GPR, %struct.GPR* %17445, i32 0, i32 5
  %17447 = getelementptr inbounds %struct.Reg, %struct.Reg* %17446, i32 0, i32 0
  %17448 = bitcast %union.anon* %17447 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %17448, i32 0, i32 0
  %17449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17450 = getelementptr inbounds %struct.GPR, %struct.GPR* %17449, i32 0, i32 7
  %17451 = getelementptr inbounds %struct.Reg, %struct.Reg* %17450, i32 0, i32 0
  %RDX.i213 = bitcast %union.anon* %17451 to i64*
  %17452 = load i64, i64* %RDX.i213
  %17453 = load i8, i8* %CL.i
  %17454 = zext i8 %17453 to i64
  %17455 = load i64, i64* %PC.i212
  %17456 = add i64 %17455, 2
  store i64 %17456, i64* %PC.i212
  %17457 = trunc i64 %17454 to i5
  switch i5 %17457, label %17464 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %17458
  ]

; <label>:17458:                                  ; preds = %routine_idivl__ecx.exit
  %17459 = trunc i64 %17452 to i32
  %17460 = shl i32 %17459, 1
  %17461 = icmp slt i32 %17459, 0
  %17462 = icmp slt i32 %17460, 0
  %17463 = xor i1 %17461, %17462
  br label %17473

; <label>:17464:                                  ; preds = %routine_idivl__ecx.exit
  %17465 = and i64 %17454, 31
  %17466 = add i64 %17465, 4294967295
  %17467 = and i64 %17452, 4294967295
  %17468 = and i64 %17466, 4294967295
  %17469 = shl i64 %17467, %17468
  %17470 = trunc i64 %17469 to i32
  %17471 = icmp slt i32 %17470, 0
  %17472 = shl i32 %17470, 1
  br label %17473

; <label>:17473:                                  ; preds = %17464, %17458
  %17474 = phi i1 [ %17461, %17458 ], [ %17471, %17464 ]
  %17475 = phi i1 [ %17463, %17458 ], [ false, %17464 ]
  %17476 = phi i32 [ %17460, %17458 ], [ %17472, %17464 ]
  %17477 = zext i32 %17476 to i64
  store i64 %17477, i64* %RDX.i213, align 8
  %17478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17479 = zext i1 %17474 to i8
  store i8 %17479, i8* %17478, align 1
  %17480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17481 = and i32 %17476, 254
  %17482 = call i32 @llvm.ctpop.i32(i32 %17481)
  %17483 = trunc i32 %17482 to i8
  %17484 = and i8 %17483, 1
  %17485 = xor i8 %17484, 1
  store i8 %17485, i8* %17480, align 1
  %17486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17486, align 1
  %17487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17488 = icmp eq i32 %17476, 0
  %17489 = zext i1 %17488 to i8
  store i8 %17489, i8* %17487, align 1
  %17490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17491 = lshr i32 %17476, 31
  %17492 = trunc i32 %17491 to i8
  store i8 %17492, i8* %17490, align 1
  %17493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17494 = zext i1 %17475 to i8
  store i8 %17494, i8* %17493, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %routine_idivl__ecx.exit, %17473
  store %struct.Memory* %loadMem_43fb36, %struct.Memory** %MEMORY
  %loadMem_43fb38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17496 = getelementptr inbounds %struct.GPR, %struct.GPR* %17495, i32 0, i32 33
  %17497 = getelementptr inbounds %struct.Reg, %struct.Reg* %17496, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %17497 to i64*
  %17498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17499 = getelementptr inbounds %struct.GPR, %struct.GPR* %17498, i32 0, i32 7
  %17500 = getelementptr inbounds %struct.Reg, %struct.Reg* %17499, i32 0, i32 0
  %RDX.i211 = bitcast %union.anon* %17500 to i64*
  %17501 = load i64, i64* %RDX.i211
  %17502 = load i64, i64* %PC.i210
  %17503 = add i64 %17502, 3
  store i64 %17503, i64* %PC.i210
  %17504 = xor i64 -1, %17501
  %17505 = trunc i64 %17504 to i32
  %17506 = and i64 %17504, 4294967295
  store i64 %17506, i64* %RDX.i211, align 8
  %17507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17507, align 1
  %17508 = and i32 %17505, 255
  %17509 = call i32 @llvm.ctpop.i32(i32 %17508)
  %17510 = trunc i32 %17509 to i8
  %17511 = and i8 %17510, 1
  %17512 = xor i8 %17511, 1
  %17513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17512, i8* %17513, align 1
  %17514 = icmp eq i32 %17505, 0
  %17515 = zext i1 %17514 to i8
  %17516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17515, i8* %17516, align 1
  %17517 = lshr i32 %17505, 31
  %17518 = trunc i32 %17517 to i8
  %17519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17518, i8* %17519, align 1
  %17520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17520, align 1
  %17521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17521, align 1
  store %struct.Memory* %loadMem_43fb38, %struct.Memory** %MEMORY
  %loadMem_43fb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17523 = getelementptr inbounds %struct.GPR, %struct.GPR* %17522, i32 0, i32 33
  %17524 = getelementptr inbounds %struct.Reg, %struct.Reg* %17523, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %17524 to i64*
  %17525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17526 = getelementptr inbounds %struct.GPR, %struct.GPR* %17525, i32 0, i32 7
  %17527 = getelementptr inbounds %struct.Reg, %struct.Reg* %17526, i32 0, i32 0
  %EDX.i208 = bitcast %union.anon* %17527 to i32*
  %17528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17529 = getelementptr inbounds %struct.GPR, %struct.GPR* %17528, i32 0, i32 9
  %17530 = getelementptr inbounds %struct.Reg, %struct.Reg* %17529, i32 0, i32 0
  %RSI.i209 = bitcast %union.anon* %17530 to i64*
  %17531 = load i32, i32* %EDX.i208
  %17532 = zext i32 %17531 to i64
  %17533 = load i64, i64* %PC.i207
  %17534 = add i64 %17533, 3
  store i64 %17534, i64* %PC.i207
  %17535 = shl i64 %17532, 32
  %17536 = ashr exact i64 %17535, 32
  store i64 %17536, i64* %RSI.i209, align 8
  store %struct.Memory* %loadMem_43fb3b, %struct.Memory** %MEMORY
  %loadMem_43fb3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17538 = getelementptr inbounds %struct.GPR, %struct.GPR* %17537, i32 0, i32 33
  %17539 = getelementptr inbounds %struct.Reg, %struct.Reg* %17538, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %17539 to i64*
  %17540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17541 = getelementptr inbounds %struct.GPR, %struct.GPR* %17540, i32 0, i32 15
  %17542 = getelementptr inbounds %struct.Reg, %struct.Reg* %17541, i32 0, i32 0
  %RBP.i205 = bitcast %union.anon* %17542 to i64*
  %17543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17544 = getelementptr inbounds %struct.GPR, %struct.GPR* %17543, i32 0, i32 17
  %17545 = getelementptr inbounds %struct.Reg, %struct.Reg* %17544, i32 0, i32 0
  %R8.i206 = bitcast %union.anon* %17545 to i64*
  %17546 = load i64, i64* %RBP.i205
  %17547 = sub i64 %17546, 32
  %17548 = load i64, i64* %PC.i204
  %17549 = add i64 %17548, 4
  store i64 %17549, i64* %PC.i204
  %17550 = inttoptr i64 %17547 to i64*
  %17551 = load i64, i64* %17550
  store i64 %17551, i64* %R8.i206, align 8
  store %struct.Memory* %loadMem_43fb3e, %struct.Memory** %MEMORY
  %loadMem_43fb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17553 = getelementptr inbounds %struct.GPR, %struct.GPR* %17552, i32 0, i32 33
  %17554 = getelementptr inbounds %struct.Reg, %struct.Reg* %17553, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %17554 to i64*
  %17555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17556 = getelementptr inbounds %struct.GPR, %struct.GPR* %17555, i32 0, i32 9
  %17557 = getelementptr inbounds %struct.Reg, %struct.Reg* %17556, i32 0, i32 0
  %RSI.i202 = bitcast %union.anon* %17557 to i64*
  %17558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17559 = getelementptr inbounds %struct.GPR, %struct.GPR* %17558, i32 0, i32 17
  %17560 = getelementptr inbounds %struct.Reg, %struct.Reg* %17559, i32 0, i32 0
  %R8.i203 = bitcast %union.anon* %17560 to i64*
  %17561 = load i64, i64* %RSI.i202
  %17562 = load i64, i64* %R8.i203
  %17563 = load i64, i64* %PC.i201
  %17564 = add i64 %17563, 3
  store i64 %17564, i64* %PC.i201
  %17565 = inttoptr i64 %17562 to i64*
  %17566 = load i64, i64* %17565
  %17567 = and i64 %17566, %17561
  store i64 %17567, i64* %RSI.i202, align 8
  %17568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17568, align 1
  %17569 = trunc i64 %17567 to i32
  %17570 = and i32 %17569, 255
  %17571 = call i32 @llvm.ctpop.i32(i32 %17570)
  %17572 = trunc i32 %17571 to i8
  %17573 = and i8 %17572, 1
  %17574 = xor i8 %17573, 1
  %17575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17574, i8* %17575, align 1
  %17576 = icmp eq i64 %17567, 0
  %17577 = zext i1 %17576 to i8
  %17578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17577, i8* %17578, align 1
  %17579 = lshr i64 %17567, 63
  %17580 = trunc i64 %17579 to i8
  %17581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17580, i8* %17581, align 1
  %17582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17582, align 1
  %17583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17583, align 1
  store %struct.Memory* %loadMem_43fb42, %struct.Memory** %MEMORY
  %loadMem_43fb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17585 = getelementptr inbounds %struct.GPR, %struct.GPR* %17584, i32 0, i32 33
  %17586 = getelementptr inbounds %struct.Reg, %struct.Reg* %17585, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %17586 to i64*
  %17587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17588 = getelementptr inbounds %struct.GPR, %struct.GPR* %17587, i32 0, i32 9
  %17589 = getelementptr inbounds %struct.Reg, %struct.Reg* %17588, i32 0, i32 0
  %RSI.i200 = bitcast %union.anon* %17589 to i64*
  %17590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17591 = getelementptr inbounds %struct.GPR, %struct.GPR* %17590, i32 0, i32 17
  %17592 = getelementptr inbounds %struct.Reg, %struct.Reg* %17591, i32 0, i32 0
  %R8.i = bitcast %union.anon* %17592 to i64*
  %17593 = load i64, i64* %R8.i
  %17594 = load i64, i64* %RSI.i200
  %17595 = load i64, i64* %PC.i199
  %17596 = add i64 %17595, 3
  store i64 %17596, i64* %PC.i199
  %17597 = inttoptr i64 %17593 to i64*
  store i64 %17594, i64* %17597
  store %struct.Memory* %loadMem_43fb45, %struct.Memory** %MEMORY
  %loadMem_43fb48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17599 = getelementptr inbounds %struct.GPR, %struct.GPR* %17598, i32 0, i32 33
  %17600 = getelementptr inbounds %struct.Reg, %struct.Reg* %17599, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %17600 to i64*
  %17601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17602 = getelementptr inbounds %struct.GPR, %struct.GPR* %17601, i32 0, i32 7
  %17603 = getelementptr inbounds %struct.Reg, %struct.Reg* %17602, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %17603 to i64*
  %17604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17605 = getelementptr inbounds %struct.GPR, %struct.GPR* %17604, i32 0, i32 15
  %17606 = getelementptr inbounds %struct.Reg, %struct.Reg* %17605, i32 0, i32 0
  %RBP.i198 = bitcast %union.anon* %17606 to i64*
  %17607 = load i64, i64* %RBP.i198
  %17608 = sub i64 %17607, 96
  %17609 = load i64, i64* %PC.i197
  %17610 = add i64 %17609, 3
  store i64 %17610, i64* %PC.i197
  %17611 = inttoptr i64 %17608 to i32*
  %17612 = load i32, i32* %17611
  %17613 = zext i32 %17612 to i64
  store i64 %17613, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_43fb48, %struct.Memory** %MEMORY
  %loadMem_43fb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17615 = getelementptr inbounds %struct.GPR, %struct.GPR* %17614, i32 0, i32 33
  %17616 = getelementptr inbounds %struct.Reg, %struct.Reg* %17615, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %17616 to i64*
  %17617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17618 = getelementptr inbounds %struct.GPR, %struct.GPR* %17617, i32 0, i32 7
  %17619 = getelementptr inbounds %struct.Reg, %struct.Reg* %17618, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %17619 to i32*
  %17620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17621 = getelementptr inbounds %struct.GPR, %struct.GPR* %17620, i32 0, i32 15
  %17622 = getelementptr inbounds %struct.Reg, %struct.Reg* %17621, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %17622 to i64*
  %17623 = load i64, i64* %RBP.i196
  %17624 = sub i64 %17623, 72
  %17625 = load i32, i32* %EDX.i
  %17626 = zext i32 %17625 to i64
  %17627 = load i64, i64* %PC.i195
  %17628 = add i64 %17627, 3
  store i64 %17628, i64* %PC.i195
  %17629 = inttoptr i64 %17624 to i32*
  store i32 %17625, i32* %17629
  store %struct.Memory* %loadMem_43fb4b, %struct.Memory** %MEMORY
  br label %block_.L_43fb4e

block_.L_43fb4e:                                  ; preds = %block_.L_43fc28, %routine_shll__cl___edx.exit
  %loadMem_43fb4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17631 = getelementptr inbounds %struct.GPR, %struct.GPR* %17630, i32 0, i32 33
  %17632 = getelementptr inbounds %struct.Reg, %struct.Reg* %17631, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %17632 to i64*
  %17633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17634 = getelementptr inbounds %struct.GPR, %struct.GPR* %17633, i32 0, i32 1
  %17635 = getelementptr inbounds %struct.Reg, %struct.Reg* %17634, i32 0, i32 0
  %RAX.i193 = bitcast %union.anon* %17635 to i64*
  %17636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17637 = getelementptr inbounds %struct.GPR, %struct.GPR* %17636, i32 0, i32 15
  %17638 = getelementptr inbounds %struct.Reg, %struct.Reg* %17637, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %17638 to i64*
  %17639 = load i64, i64* %RBP.i194
  %17640 = sub i64 %17639, 72
  %17641 = load i64, i64* %PC.i192
  %17642 = add i64 %17641, 3
  store i64 %17642, i64* %PC.i192
  %17643 = inttoptr i64 %17640 to i32*
  %17644 = load i32, i32* %17643
  %17645 = zext i32 %17644 to i64
  store i64 %17645, i64* %RAX.i193, align 8
  store %struct.Memory* %loadMem_43fb4e, %struct.Memory** %MEMORY
  %loadMem_43fb51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17647 = getelementptr inbounds %struct.GPR, %struct.GPR* %17646, i32 0, i32 33
  %17648 = getelementptr inbounds %struct.Reg, %struct.Reg* %17647, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %17648 to i64*
  %17649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17650 = getelementptr inbounds %struct.GPR, %struct.GPR* %17649, i32 0, i32 5
  %17651 = getelementptr inbounds %struct.Reg, %struct.Reg* %17650, i32 0, i32 0
  %RCX.i190 = bitcast %union.anon* %17651 to i64*
  %17652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17653 = getelementptr inbounds %struct.GPR, %struct.GPR* %17652, i32 0, i32 15
  %17654 = getelementptr inbounds %struct.Reg, %struct.Reg* %17653, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %17654 to i64*
  %17655 = load i64, i64* %RBP.i191
  %17656 = sub i64 %17655, 96
  %17657 = load i64, i64* %PC.i189
  %17658 = add i64 %17657, 3
  store i64 %17658, i64* %PC.i189
  %17659 = inttoptr i64 %17656 to i32*
  %17660 = load i32, i32* %17659
  %17661 = zext i32 %17660 to i64
  store i64 %17661, i64* %RCX.i190, align 8
  store %struct.Memory* %loadMem_43fb51, %struct.Memory** %MEMORY
  %loadMem_43fb54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17663 = getelementptr inbounds %struct.GPR, %struct.GPR* %17662, i32 0, i32 33
  %17664 = getelementptr inbounds %struct.Reg, %struct.Reg* %17663, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %17664 to i64*
  %17665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17666 = getelementptr inbounds %struct.GPR, %struct.GPR* %17665, i32 0, i32 5
  %17667 = getelementptr inbounds %struct.Reg, %struct.Reg* %17666, i32 0, i32 0
  %RCX.i188 = bitcast %union.anon* %17667 to i64*
  %17668 = load i64, i64* %RCX.i188
  %17669 = load i64, i64* %PC.i187
  %17670 = add i64 %17669, 3
  store i64 %17670, i64* %PC.i187
  %17671 = trunc i64 %17668 to i32
  %17672 = add i32 8, %17671
  %17673 = zext i32 %17672 to i64
  store i64 %17673, i64* %RCX.i188, align 8
  %17674 = icmp ult i32 %17672, %17671
  %17675 = icmp ult i32 %17672, 8
  %17676 = or i1 %17674, %17675
  %17677 = zext i1 %17676 to i8
  %17678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17677, i8* %17678, align 1
  %17679 = and i32 %17672, 255
  %17680 = call i32 @llvm.ctpop.i32(i32 %17679)
  %17681 = trunc i32 %17680 to i8
  %17682 = and i8 %17681, 1
  %17683 = xor i8 %17682, 1
  %17684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17683, i8* %17684, align 1
  %17685 = xor i64 8, %17668
  %17686 = trunc i64 %17685 to i32
  %17687 = xor i32 %17686, %17672
  %17688 = lshr i32 %17687, 4
  %17689 = trunc i32 %17688 to i8
  %17690 = and i8 %17689, 1
  %17691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17690, i8* %17691, align 1
  %17692 = icmp eq i32 %17672, 0
  %17693 = zext i1 %17692 to i8
  %17694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17693, i8* %17694, align 1
  %17695 = lshr i32 %17672, 31
  %17696 = trunc i32 %17695 to i8
  %17697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17696, i8* %17697, align 1
  %17698 = lshr i32 %17671, 31
  %17699 = xor i32 %17695, %17698
  %17700 = add i32 %17699, %17695
  %17701 = icmp eq i32 %17700, 2
  %17702 = zext i1 %17701 to i8
  %17703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17702, i8* %17703, align 1
  store %struct.Memory* %loadMem_43fb54, %struct.Memory** %MEMORY
  %loadMem_43fb57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17705 = getelementptr inbounds %struct.GPR, %struct.GPR* %17704, i32 0, i32 33
  %17706 = getelementptr inbounds %struct.Reg, %struct.Reg* %17705, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %17706 to i64*
  %17707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17708 = getelementptr inbounds %struct.GPR, %struct.GPR* %17707, i32 0, i32 1
  %17709 = getelementptr inbounds %struct.Reg, %struct.Reg* %17708, i32 0, i32 0
  %EAX.i185 = bitcast %union.anon* %17709 to i32*
  %17710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17711 = getelementptr inbounds %struct.GPR, %struct.GPR* %17710, i32 0, i32 5
  %17712 = getelementptr inbounds %struct.Reg, %struct.Reg* %17711, i32 0, i32 0
  %ECX.i186 = bitcast %union.anon* %17712 to i32*
  %17713 = load i32, i32* %EAX.i185
  %17714 = zext i32 %17713 to i64
  %17715 = load i32, i32* %ECX.i186
  %17716 = zext i32 %17715 to i64
  %17717 = load i64, i64* %PC.i184
  %17718 = add i64 %17717, 2
  store i64 %17718, i64* %PC.i184
  %17719 = sub i32 %17713, %17715
  %17720 = icmp ult i32 %17713, %17715
  %17721 = zext i1 %17720 to i8
  %17722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17721, i8* %17722, align 1
  %17723 = and i32 %17719, 255
  %17724 = call i32 @llvm.ctpop.i32(i32 %17723)
  %17725 = trunc i32 %17724 to i8
  %17726 = and i8 %17725, 1
  %17727 = xor i8 %17726, 1
  %17728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17727, i8* %17728, align 1
  %17729 = xor i64 %17716, %17714
  %17730 = trunc i64 %17729 to i32
  %17731 = xor i32 %17730, %17719
  %17732 = lshr i32 %17731, 4
  %17733 = trunc i32 %17732 to i8
  %17734 = and i8 %17733, 1
  %17735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17734, i8* %17735, align 1
  %17736 = icmp eq i32 %17719, 0
  %17737 = zext i1 %17736 to i8
  %17738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17737, i8* %17738, align 1
  %17739 = lshr i32 %17719, 31
  %17740 = trunc i32 %17739 to i8
  %17741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17740, i8* %17741, align 1
  %17742 = lshr i32 %17713, 31
  %17743 = lshr i32 %17715, 31
  %17744 = xor i32 %17743, %17742
  %17745 = xor i32 %17739, %17742
  %17746 = add i32 %17745, %17744
  %17747 = icmp eq i32 %17746, 2
  %17748 = zext i1 %17747 to i8
  %17749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17748, i8* %17749, align 1
  store %struct.Memory* %loadMem_43fb57, %struct.Memory** %MEMORY
  %loadMem_43fb59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17751 = getelementptr inbounds %struct.GPR, %struct.GPR* %17750, i32 0, i32 33
  %17752 = getelementptr inbounds %struct.Reg, %struct.Reg* %17751, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %17752 to i64*
  %17753 = load i64, i64* %PC.i183
  %17754 = add i64 %17753, 221
  %17755 = load i64, i64* %PC.i183
  %17756 = add i64 %17755, 6
  %17757 = load i64, i64* %PC.i183
  %17758 = add i64 %17757, 6
  store i64 %17758, i64* %PC.i183
  %17759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17760 = load i8, i8* %17759, align 1
  %17761 = icmp ne i8 %17760, 0
  %17762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17763 = load i8, i8* %17762, align 1
  %17764 = icmp ne i8 %17763, 0
  %17765 = xor i1 %17761, %17764
  %17766 = xor i1 %17765, true
  %17767 = zext i1 %17766 to i8
  store i8 %17767, i8* %BRANCH_TAKEN, align 1
  %17768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17769 = select i1 %17765, i64 %17756, i64 %17754
  store i64 %17769, i64* %17768, align 8
  store %struct.Memory* %loadMem_43fb59, %struct.Memory** %MEMORY
  %loadBr_43fb59 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fb59 = icmp eq i8 %loadBr_43fb59, 1
  br i1 %cmpBr_43fb59, label %block_.L_43fc36, label %block_43fb5f

block_43fb5f:                                     ; preds = %block_.L_43fb4e
  %loadMem_43fb5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17771 = getelementptr inbounds %struct.GPR, %struct.GPR* %17770, i32 0, i32 33
  %17772 = getelementptr inbounds %struct.Reg, %struct.Reg* %17771, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %17772 to i64*
  %17773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17774 = getelementptr inbounds %struct.GPR, %struct.GPR* %17773, i32 0, i32 1
  %17775 = getelementptr inbounds %struct.Reg, %struct.Reg* %17774, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %17775 to i64*
  %17776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17777 = getelementptr inbounds %struct.GPR, %struct.GPR* %17776, i32 0, i32 15
  %17778 = getelementptr inbounds %struct.Reg, %struct.Reg* %17777, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %17778 to i64*
  %17779 = load i64, i64* %RBP.i182
  %17780 = sub i64 %17779, 92
  %17781 = load i64, i64* %PC.i180
  %17782 = add i64 %17781, 3
  store i64 %17782, i64* %PC.i180
  %17783 = inttoptr i64 %17780 to i32*
  %17784 = load i32, i32* %17783
  %17785 = zext i32 %17784 to i64
  store i64 %17785, i64* %RAX.i181, align 8
  store %struct.Memory* %loadMem_43fb5f, %struct.Memory** %MEMORY
  %loadMem_43fb62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17787 = getelementptr inbounds %struct.GPR, %struct.GPR* %17786, i32 0, i32 33
  %17788 = getelementptr inbounds %struct.Reg, %struct.Reg* %17787, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %17788 to i64*
  %17789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17790 = getelementptr inbounds %struct.GPR, %struct.GPR* %17789, i32 0, i32 1
  %17791 = getelementptr inbounds %struct.Reg, %struct.Reg* %17790, i32 0, i32 0
  %EAX.i178 = bitcast %union.anon* %17791 to i32*
  %17792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17793 = getelementptr inbounds %struct.GPR, %struct.GPR* %17792, i32 0, i32 15
  %17794 = getelementptr inbounds %struct.Reg, %struct.Reg* %17793, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %17794 to i64*
  %17795 = load i64, i64* %RBP.i179
  %17796 = sub i64 %17795, 76
  %17797 = load i32, i32* %EAX.i178
  %17798 = zext i32 %17797 to i64
  %17799 = load i64, i64* %PC.i177
  %17800 = add i64 %17799, 3
  store i64 %17800, i64* %PC.i177
  %17801 = inttoptr i64 %17796 to i32*
  store i32 %17797, i32* %17801
  store %struct.Memory* %loadMem_43fb62, %struct.Memory** %MEMORY
  br label %block_.L_43fb65

block_.L_43fb65:                                  ; preds = %block_.L_43fc15, %block_43fb5f
  %loadMem_43fb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17803 = getelementptr inbounds %struct.GPR, %struct.GPR* %17802, i32 0, i32 33
  %17804 = getelementptr inbounds %struct.Reg, %struct.Reg* %17803, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %17804 to i64*
  %17805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17806 = getelementptr inbounds %struct.GPR, %struct.GPR* %17805, i32 0, i32 1
  %17807 = getelementptr inbounds %struct.Reg, %struct.Reg* %17806, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %17807 to i64*
  %17808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17809 = getelementptr inbounds %struct.GPR, %struct.GPR* %17808, i32 0, i32 15
  %17810 = getelementptr inbounds %struct.Reg, %struct.Reg* %17809, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %17810 to i64*
  %17811 = load i64, i64* %RBP.i176
  %17812 = sub i64 %17811, 76
  %17813 = load i64, i64* %PC.i174
  %17814 = add i64 %17813, 3
  store i64 %17814, i64* %PC.i174
  %17815 = inttoptr i64 %17812 to i32*
  %17816 = load i32, i32* %17815
  %17817 = zext i32 %17816 to i64
  store i64 %17817, i64* %RAX.i175, align 8
  store %struct.Memory* %loadMem_43fb65, %struct.Memory** %MEMORY
  %loadMem_43fb68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17819 = getelementptr inbounds %struct.GPR, %struct.GPR* %17818, i32 0, i32 33
  %17820 = getelementptr inbounds %struct.Reg, %struct.Reg* %17819, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %17820 to i64*
  %17821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17822 = getelementptr inbounds %struct.GPR, %struct.GPR* %17821, i32 0, i32 5
  %17823 = getelementptr inbounds %struct.Reg, %struct.Reg* %17822, i32 0, i32 0
  %RCX.i172 = bitcast %union.anon* %17823 to i64*
  %17824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17825 = getelementptr inbounds %struct.GPR, %struct.GPR* %17824, i32 0, i32 15
  %17826 = getelementptr inbounds %struct.Reg, %struct.Reg* %17825, i32 0, i32 0
  %RBP.i173 = bitcast %union.anon* %17826 to i64*
  %17827 = load i64, i64* %RBP.i173
  %17828 = sub i64 %17827, 92
  %17829 = load i64, i64* %PC.i171
  %17830 = add i64 %17829, 3
  store i64 %17830, i64* %PC.i171
  %17831 = inttoptr i64 %17828 to i32*
  %17832 = load i32, i32* %17831
  %17833 = zext i32 %17832 to i64
  store i64 %17833, i64* %RCX.i172, align 8
  store %struct.Memory* %loadMem_43fb68, %struct.Memory** %MEMORY
  %loadMem_43fb6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17835 = getelementptr inbounds %struct.GPR, %struct.GPR* %17834, i32 0, i32 33
  %17836 = getelementptr inbounds %struct.Reg, %struct.Reg* %17835, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %17836 to i64*
  %17837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17838 = getelementptr inbounds %struct.GPR, %struct.GPR* %17837, i32 0, i32 5
  %17839 = getelementptr inbounds %struct.Reg, %struct.Reg* %17838, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %17839 to i64*
  %17840 = load i64, i64* %RCX.i170
  %17841 = load i64, i64* %PC.i169
  %17842 = add i64 %17841, 3
  store i64 %17842, i64* %PC.i169
  %17843 = trunc i64 %17840 to i32
  %17844 = add i32 8, %17843
  %17845 = zext i32 %17844 to i64
  store i64 %17845, i64* %RCX.i170, align 8
  %17846 = icmp ult i32 %17844, %17843
  %17847 = icmp ult i32 %17844, 8
  %17848 = or i1 %17846, %17847
  %17849 = zext i1 %17848 to i8
  %17850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17849, i8* %17850, align 1
  %17851 = and i32 %17844, 255
  %17852 = call i32 @llvm.ctpop.i32(i32 %17851)
  %17853 = trunc i32 %17852 to i8
  %17854 = and i8 %17853, 1
  %17855 = xor i8 %17854, 1
  %17856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17855, i8* %17856, align 1
  %17857 = xor i64 8, %17840
  %17858 = trunc i64 %17857 to i32
  %17859 = xor i32 %17858, %17844
  %17860 = lshr i32 %17859, 4
  %17861 = trunc i32 %17860 to i8
  %17862 = and i8 %17861, 1
  %17863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17862, i8* %17863, align 1
  %17864 = icmp eq i32 %17844, 0
  %17865 = zext i1 %17864 to i8
  %17866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17865, i8* %17866, align 1
  %17867 = lshr i32 %17844, 31
  %17868 = trunc i32 %17867 to i8
  %17869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17868, i8* %17869, align 1
  %17870 = lshr i32 %17843, 31
  %17871 = xor i32 %17867, %17870
  %17872 = add i32 %17871, %17867
  %17873 = icmp eq i32 %17872, 2
  %17874 = zext i1 %17873 to i8
  %17875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17874, i8* %17875, align 1
  store %struct.Memory* %loadMem_43fb6b, %struct.Memory** %MEMORY
  %loadMem_43fb6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17877 = getelementptr inbounds %struct.GPR, %struct.GPR* %17876, i32 0, i32 33
  %17878 = getelementptr inbounds %struct.Reg, %struct.Reg* %17877, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %17878 to i64*
  %17879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17880 = getelementptr inbounds %struct.GPR, %struct.GPR* %17879, i32 0, i32 1
  %17881 = getelementptr inbounds %struct.Reg, %struct.Reg* %17880, i32 0, i32 0
  %EAX.i167 = bitcast %union.anon* %17881 to i32*
  %17882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17883 = getelementptr inbounds %struct.GPR, %struct.GPR* %17882, i32 0, i32 5
  %17884 = getelementptr inbounds %struct.Reg, %struct.Reg* %17883, i32 0, i32 0
  %ECX.i168 = bitcast %union.anon* %17884 to i32*
  %17885 = load i32, i32* %EAX.i167
  %17886 = zext i32 %17885 to i64
  %17887 = load i32, i32* %ECX.i168
  %17888 = zext i32 %17887 to i64
  %17889 = load i64, i64* %PC.i166
  %17890 = add i64 %17889, 2
  store i64 %17890, i64* %PC.i166
  %17891 = sub i32 %17885, %17887
  %17892 = icmp ult i32 %17885, %17887
  %17893 = zext i1 %17892 to i8
  %17894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17893, i8* %17894, align 1
  %17895 = and i32 %17891, 255
  %17896 = call i32 @llvm.ctpop.i32(i32 %17895)
  %17897 = trunc i32 %17896 to i8
  %17898 = and i8 %17897, 1
  %17899 = xor i8 %17898, 1
  %17900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17899, i8* %17900, align 1
  %17901 = xor i64 %17888, %17886
  %17902 = trunc i64 %17901 to i32
  %17903 = xor i32 %17902, %17891
  %17904 = lshr i32 %17903, 4
  %17905 = trunc i32 %17904 to i8
  %17906 = and i8 %17905, 1
  %17907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17906, i8* %17907, align 1
  %17908 = icmp eq i32 %17891, 0
  %17909 = zext i1 %17908 to i8
  %17910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17909, i8* %17910, align 1
  %17911 = lshr i32 %17891, 31
  %17912 = trunc i32 %17911 to i8
  %17913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17912, i8* %17913, align 1
  %17914 = lshr i32 %17885, 31
  %17915 = lshr i32 %17887, 31
  %17916 = xor i32 %17915, %17914
  %17917 = xor i32 %17911, %17914
  %17918 = add i32 %17917, %17916
  %17919 = icmp eq i32 %17918, 2
  %17920 = zext i1 %17919 to i8
  %17921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17920, i8* %17921, align 1
  store %struct.Memory* %loadMem_43fb6e, %struct.Memory** %MEMORY
  %loadMem_43fb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17923 = getelementptr inbounds %struct.GPR, %struct.GPR* %17922, i32 0, i32 33
  %17924 = getelementptr inbounds %struct.Reg, %struct.Reg* %17923, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %17924 to i64*
  %17925 = load i64, i64* %PC.i165
  %17926 = add i64 %17925, 179
  %17927 = load i64, i64* %PC.i165
  %17928 = add i64 %17927, 6
  %17929 = load i64, i64* %PC.i165
  %17930 = add i64 %17929, 6
  store i64 %17930, i64* %PC.i165
  %17931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17932 = load i8, i8* %17931, align 1
  %17933 = icmp ne i8 %17932, 0
  %17934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17935 = load i8, i8* %17934, align 1
  %17936 = icmp ne i8 %17935, 0
  %17937 = xor i1 %17933, %17936
  %17938 = xor i1 %17937, true
  %17939 = zext i1 %17938 to i8
  store i8 %17939, i8* %BRANCH_TAKEN, align 1
  %17940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17941 = select i1 %17937, i64 %17928, i64 %17926
  store i64 %17941, i64* %17940, align 8
  store %struct.Memory* %loadMem_43fb70, %struct.Memory** %MEMORY
  %loadBr_43fb70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fb70 = icmp eq i8 %loadBr_43fb70, 1
  br i1 %cmpBr_43fb70, label %block_.L_43fc23, label %block_43fb76

block_43fb76:                                     ; preds = %block_.L_43fb65
  %loadMem_43fb76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17943 = getelementptr inbounds %struct.GPR, %struct.GPR* %17942, i32 0, i32 33
  %17944 = getelementptr inbounds %struct.Reg, %struct.Reg* %17943, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %17944 to i64*
  %17945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17946 = getelementptr inbounds %struct.GPR, %struct.GPR* %17945, i32 0, i32 1
  %17947 = getelementptr inbounds %struct.Reg, %struct.Reg* %17946, i32 0, i32 0
  %RAX.i164 = bitcast %union.anon* %17947 to i64*
  %17948 = load i64, i64* %PC.i163
  %17949 = add i64 %17948, 8
  store i64 %17949, i64* %PC.i163
  %17950 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17950, i64* %RAX.i164, align 8
  store %struct.Memory* %loadMem_43fb76, %struct.Memory** %MEMORY
  %loadMem_43fb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17952 = getelementptr inbounds %struct.GPR, %struct.GPR* %17951, i32 0, i32 33
  %17953 = getelementptr inbounds %struct.Reg, %struct.Reg* %17952, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %17953 to i64*
  %17954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17955 = getelementptr inbounds %struct.GPR, %struct.GPR* %17954, i32 0, i32 1
  %17956 = getelementptr inbounds %struct.Reg, %struct.Reg* %17955, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %17956 to i64*
  %17957 = load i64, i64* %RAX.i162
  %17958 = add i64 %17957, 72724
  %17959 = load i64, i64* %PC.i161
  %17960 = add i64 %17959, 7
  store i64 %17960, i64* %PC.i161
  %17961 = inttoptr i64 %17958 to i32*
  %17962 = load i32, i32* %17961
  %17963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17963, align 1
  %17964 = and i32 %17962, 255
  %17965 = call i32 @llvm.ctpop.i32(i32 %17964)
  %17966 = trunc i32 %17965 to i8
  %17967 = and i8 %17966, 1
  %17968 = xor i8 %17967, 1
  %17969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17968, i8* %17969, align 1
  %17970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17970, align 1
  %17971 = icmp eq i32 %17962, 0
  %17972 = zext i1 %17971 to i8
  %17973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17972, i8* %17973, align 1
  %17974 = lshr i32 %17962, 31
  %17975 = trunc i32 %17974 to i8
  %17976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17975, i8* %17976, align 1
  %17977 = lshr i32 %17962, 31
  %17978 = xor i32 %17974, %17977
  %17979 = add i32 %17978, %17977
  %17980 = icmp eq i32 %17979, 2
  %17981 = zext i1 %17980 to i8
  %17982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17981, i8* %17982, align 1
  store %struct.Memory* %loadMem_43fb7e, %struct.Memory** %MEMORY
  %loadMem_43fb85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17984 = getelementptr inbounds %struct.GPR, %struct.GPR* %17983, i32 0, i32 33
  %17985 = getelementptr inbounds %struct.Reg, %struct.Reg* %17984, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %17985 to i64*
  %17986 = load i64, i64* %PC.i160
  %17987 = add i64 %17986, 107
  %17988 = load i64, i64* %PC.i160
  %17989 = add i64 %17988, 6
  %17990 = load i64, i64* %PC.i160
  %17991 = add i64 %17990, 6
  store i64 %17991, i64* %PC.i160
  %17992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17993 = load i8, i8* %17992, align 1
  %17994 = icmp eq i8 %17993, 0
  %17995 = zext i1 %17994 to i8
  store i8 %17995, i8* %BRANCH_TAKEN, align 1
  %17996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17997 = select i1 %17994, i64 %17987, i64 %17989
  store i64 %17997, i64* %17996, align 8
  store %struct.Memory* %loadMem_43fb85, %struct.Memory** %MEMORY
  %loadBr_43fb85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fb85 = icmp eq i8 %loadBr_43fb85, 1
  br i1 %cmpBr_43fb85, label %block_.L_43fbf0, label %block_43fb8b

block_43fb8b:                                     ; preds = %block_43fb76
  %loadMem_43fb8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17999 = getelementptr inbounds %struct.GPR, %struct.GPR* %17998, i32 0, i32 33
  %18000 = getelementptr inbounds %struct.Reg, %struct.Reg* %17999, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %18000 to i64*
  %18001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18002 = getelementptr inbounds %struct.GPR, %struct.GPR* %18001, i32 0, i32 1
  %18003 = getelementptr inbounds %struct.Reg, %struct.Reg* %18002, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %18003 to i64*
  %18004 = load i64, i64* %PC.i158
  %18005 = add i64 %18004, 8
  store i64 %18005, i64* %PC.i158
  %18006 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18006, i64* %RAX.i159, align 8
  store %struct.Memory* %loadMem_43fb8b, %struct.Memory** %MEMORY
  %loadMem_43fb93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18008 = getelementptr inbounds %struct.GPR, %struct.GPR* %18007, i32 0, i32 33
  %18009 = getelementptr inbounds %struct.Reg, %struct.Reg* %18008, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %18009 to i64*
  %18010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18011 = getelementptr inbounds %struct.GPR, %struct.GPR* %18010, i32 0, i32 1
  %18012 = getelementptr inbounds %struct.Reg, %struct.Reg* %18011, i32 0, i32 0
  %RAX.i157 = bitcast %union.anon* %18012 to i64*
  %18013 = load i64, i64* %RAX.i157
  %18014 = load i64, i64* %PC.i156
  %18015 = add i64 %18014, 6
  store i64 %18015, i64* %PC.i156
  %18016 = add i64 12600, %18013
  store i64 %18016, i64* %RAX.i157, align 8
  %18017 = icmp ult i64 %18016, %18013
  %18018 = icmp ult i64 %18016, 12600
  %18019 = or i1 %18017, %18018
  %18020 = zext i1 %18019 to i8
  %18021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18020, i8* %18021, align 1
  %18022 = trunc i64 %18016 to i32
  %18023 = and i32 %18022, 255
  %18024 = call i32 @llvm.ctpop.i32(i32 %18023)
  %18025 = trunc i32 %18024 to i8
  %18026 = and i8 %18025, 1
  %18027 = xor i8 %18026, 1
  %18028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18027, i8* %18028, align 1
  %18029 = xor i64 12600, %18013
  %18030 = xor i64 %18029, %18016
  %18031 = lshr i64 %18030, 4
  %18032 = trunc i64 %18031 to i8
  %18033 = and i8 %18032, 1
  %18034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18033, i8* %18034, align 1
  %18035 = icmp eq i64 %18016, 0
  %18036 = zext i1 %18035 to i8
  %18037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18036, i8* %18037, align 1
  %18038 = lshr i64 %18016, 63
  %18039 = trunc i64 %18038 to i8
  %18040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18039, i8* %18040, align 1
  %18041 = lshr i64 %18013, 63
  %18042 = xor i64 %18038, %18041
  %18043 = add i64 %18042, %18038
  %18044 = icmp eq i64 %18043, 2
  %18045 = zext i1 %18044 to i8
  %18046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18045, i8* %18046, align 1
  store %struct.Memory* %loadMem_43fb93, %struct.Memory** %MEMORY
  %loadMem_43fb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18048 = getelementptr inbounds %struct.GPR, %struct.GPR* %18047, i32 0, i32 33
  %18049 = getelementptr inbounds %struct.Reg, %struct.Reg* %18048, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %18049 to i64*
  %18050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18051 = getelementptr inbounds %struct.GPR, %struct.GPR* %18050, i32 0, i32 5
  %18052 = getelementptr inbounds %struct.Reg, %struct.Reg* %18051, i32 0, i32 0
  %RCX.i154 = bitcast %union.anon* %18052 to i64*
  %18053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18054 = getelementptr inbounds %struct.GPR, %struct.GPR* %18053, i32 0, i32 15
  %18055 = getelementptr inbounds %struct.Reg, %struct.Reg* %18054, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %18055 to i64*
  %18056 = load i64, i64* %RBP.i155
  %18057 = sub i64 %18056, 72
  %18058 = load i64, i64* %PC.i153
  %18059 = add i64 %18058, 4
  store i64 %18059, i64* %PC.i153
  %18060 = inttoptr i64 %18057 to i32*
  %18061 = load i32, i32* %18060
  %18062 = sext i32 %18061 to i64
  store i64 %18062, i64* %RCX.i154, align 8
  store %struct.Memory* %loadMem_43fb99, %struct.Memory** %MEMORY
  %loadMem_43fb9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18064 = getelementptr inbounds %struct.GPR, %struct.GPR* %18063, i32 0, i32 33
  %18065 = getelementptr inbounds %struct.Reg, %struct.Reg* %18064, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %18065 to i64*
  %18066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18067 = getelementptr inbounds %struct.GPR, %struct.GPR* %18066, i32 0, i32 5
  %18068 = getelementptr inbounds %struct.Reg, %struct.Reg* %18067, i32 0, i32 0
  %RCX.i152 = bitcast %union.anon* %18068 to i64*
  %18069 = load i64, i64* %RCX.i152
  %18070 = load i64, i64* %PC.i151
  %18071 = add i64 %18070, 4
  store i64 %18071, i64* %PC.i151
  %18072 = shl i64 %18069, 4
  %18073 = icmp slt i64 %18072, 0
  %18074 = shl i64 %18072, 1
  store i64 %18074, i64* %RCX.i152, align 8
  %18075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18076 = zext i1 %18073 to i8
  store i8 %18076, i8* %18075, align 1
  %18077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18078 = trunc i64 %18074 to i32
  %18079 = and i32 %18078, 254
  %18080 = call i32 @llvm.ctpop.i32(i32 %18079)
  %18081 = trunc i32 %18080 to i8
  %18082 = and i8 %18081, 1
  %18083 = xor i8 %18082, 1
  store i8 %18083, i8* %18077, align 1
  %18084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18084, align 1
  %18085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18086 = icmp eq i64 %18074, 0
  %18087 = zext i1 %18086 to i8
  store i8 %18087, i8* %18085, align 1
  %18088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18089 = lshr i64 %18074, 63
  %18090 = trunc i64 %18089 to i8
  store i8 %18090, i8* %18088, align 1
  %18091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18091, align 1
  store %struct.Memory* %loadMem_43fb9d, %struct.Memory** %MEMORY
  %loadMem_43fba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18093 = getelementptr inbounds %struct.GPR, %struct.GPR* %18092, i32 0, i32 33
  %18094 = getelementptr inbounds %struct.Reg, %struct.Reg* %18093, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %18094 to i64*
  %18095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18096 = getelementptr inbounds %struct.GPR, %struct.GPR* %18095, i32 0, i32 1
  %18097 = getelementptr inbounds %struct.Reg, %struct.Reg* %18096, i32 0, i32 0
  %RAX.i149 = bitcast %union.anon* %18097 to i64*
  %18098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18099 = getelementptr inbounds %struct.GPR, %struct.GPR* %18098, i32 0, i32 5
  %18100 = getelementptr inbounds %struct.Reg, %struct.Reg* %18099, i32 0, i32 0
  %RCX.i150 = bitcast %union.anon* %18100 to i64*
  %18101 = load i64, i64* %RAX.i149
  %18102 = load i64, i64* %RCX.i150
  %18103 = load i64, i64* %PC.i148
  %18104 = add i64 %18103, 3
  store i64 %18104, i64* %PC.i148
  %18105 = add i64 %18102, %18101
  store i64 %18105, i64* %RAX.i149, align 8
  %18106 = icmp ult i64 %18105, %18101
  %18107 = icmp ult i64 %18105, %18102
  %18108 = or i1 %18106, %18107
  %18109 = zext i1 %18108 to i8
  %18110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18109, i8* %18110, align 1
  %18111 = trunc i64 %18105 to i32
  %18112 = and i32 %18111, 255
  %18113 = call i32 @llvm.ctpop.i32(i32 %18112)
  %18114 = trunc i32 %18113 to i8
  %18115 = and i8 %18114, 1
  %18116 = xor i8 %18115, 1
  %18117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18116, i8* %18117, align 1
  %18118 = xor i64 %18102, %18101
  %18119 = xor i64 %18118, %18105
  %18120 = lshr i64 %18119, 4
  %18121 = trunc i64 %18120 to i8
  %18122 = and i8 %18121, 1
  %18123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18122, i8* %18123, align 1
  %18124 = icmp eq i64 %18105, 0
  %18125 = zext i1 %18124 to i8
  %18126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18125, i8* %18126, align 1
  %18127 = lshr i64 %18105, 63
  %18128 = trunc i64 %18127 to i8
  %18129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18128, i8* %18129, align 1
  %18130 = lshr i64 %18101, 63
  %18131 = lshr i64 %18102, 63
  %18132 = xor i64 %18127, %18130
  %18133 = xor i64 %18127, %18131
  %18134 = add i64 %18132, %18133
  %18135 = icmp eq i64 %18134, 2
  %18136 = zext i1 %18135 to i8
  %18137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18136, i8* %18137, align 1
  store %struct.Memory* %loadMem_43fba1, %struct.Memory** %MEMORY
  %loadMem_43fba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18139 = getelementptr inbounds %struct.GPR, %struct.GPR* %18138, i32 0, i32 33
  %18140 = getelementptr inbounds %struct.Reg, %struct.Reg* %18139, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %18140 to i64*
  %18141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18142 = getelementptr inbounds %struct.GPR, %struct.GPR* %18141, i32 0, i32 5
  %18143 = getelementptr inbounds %struct.Reg, %struct.Reg* %18142, i32 0, i32 0
  %RCX.i146 = bitcast %union.anon* %18143 to i64*
  %18144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18145 = getelementptr inbounds %struct.GPR, %struct.GPR* %18144, i32 0, i32 15
  %18146 = getelementptr inbounds %struct.Reg, %struct.Reg* %18145, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %18146 to i64*
  %18147 = load i64, i64* %RBP.i147
  %18148 = sub i64 %18147, 76
  %18149 = load i64, i64* %PC.i145
  %18150 = add i64 %18149, 4
  store i64 %18150, i64* %PC.i145
  %18151 = inttoptr i64 %18148 to i32*
  %18152 = load i32, i32* %18151
  %18153 = sext i32 %18152 to i64
  store i64 %18153, i64* %RCX.i146, align 8
  store %struct.Memory* %loadMem_43fba4, %struct.Memory** %MEMORY
  %loadMem_43fba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18155 = getelementptr inbounds %struct.GPR, %struct.GPR* %18154, i32 0, i32 33
  %18156 = getelementptr inbounds %struct.Reg, %struct.Reg* %18155, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %18156 to i64*
  %18157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18158 = getelementptr inbounds %struct.GPR, %struct.GPR* %18157, i32 0, i32 7
  %18159 = getelementptr inbounds %struct.Reg, %struct.Reg* %18158, i32 0, i32 0
  %DX.i142 = bitcast %union.anon* %18159 to i16*
  %18160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18161 = getelementptr inbounds %struct.GPR, %struct.GPR* %18160, i32 0, i32 1
  %18162 = getelementptr inbounds %struct.Reg, %struct.Reg* %18161, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %18162 to i64*
  %18163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18164 = getelementptr inbounds %struct.GPR, %struct.GPR* %18163, i32 0, i32 5
  %18165 = getelementptr inbounds %struct.Reg, %struct.Reg* %18164, i32 0, i32 0
  %RCX.i144 = bitcast %union.anon* %18165 to i64*
  %18166 = load i64, i64* %RAX.i143
  %18167 = load i64, i64* %RCX.i144
  %18168 = mul i64 %18167, 2
  %18169 = add i64 %18168, %18166
  %18170 = load i64, i64* %PC.i141
  %18171 = add i64 %18170, 4
  store i64 %18171, i64* %PC.i141
  %18172 = inttoptr i64 %18169 to i16*
  %18173 = load i16, i16* %18172
  store i16 %18173, i16* %DX.i142, align 2
  store %struct.Memory* %loadMem_43fba8, %struct.Memory** %MEMORY
  %loadMem_43fbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %18174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18175 = getelementptr inbounds %struct.GPR, %struct.GPR* %18174, i32 0, i32 33
  %18176 = getelementptr inbounds %struct.Reg, %struct.Reg* %18175, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %18176 to i64*
  %18177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18178 = getelementptr inbounds %struct.GPR, %struct.GPR* %18177, i32 0, i32 1
  %18179 = getelementptr inbounds %struct.Reg, %struct.Reg* %18178, i32 0, i32 0
  %RAX.i140 = bitcast %union.anon* %18179 to i64*
  %18180 = load i64, i64* %PC.i139
  %18181 = add i64 %18180, 8
  store i64 %18181, i64* %PC.i139
  %18182 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %18182, i64* %RAX.i140, align 8
  store %struct.Memory* %loadMem_43fbac, %struct.Memory** %MEMORY
  %loadMem_43fbb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18184 = getelementptr inbounds %struct.GPR, %struct.GPR* %18183, i32 0, i32 33
  %18185 = getelementptr inbounds %struct.Reg, %struct.Reg* %18184, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %18185 to i64*
  %18186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18187 = getelementptr inbounds %struct.GPR, %struct.GPR* %18186, i32 0, i32 1
  %18188 = getelementptr inbounds %struct.Reg, %struct.Reg* %18187, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %18188 to i64*
  %18189 = load i64, i64* %RAX.i138
  %18190 = add i64 %18189, 6424
  %18191 = load i64, i64* %PC.i137
  %18192 = add i64 %18191, 7
  store i64 %18192, i64* %PC.i137
  %18193 = inttoptr i64 %18190 to i64*
  %18194 = load i64, i64* %18193
  store i64 %18194, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_43fbb4, %struct.Memory** %MEMORY
  %loadMem_43fbbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18196 = getelementptr inbounds %struct.GPR, %struct.GPR* %18195, i32 0, i32 33
  %18197 = getelementptr inbounds %struct.Reg, %struct.Reg* %18196, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %18197 to i64*
  %18198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18199 = getelementptr inbounds %struct.GPR, %struct.GPR* %18198, i32 0, i32 5
  %18200 = getelementptr inbounds %struct.Reg, %struct.Reg* %18199, i32 0, i32 0
  %RCX.i136 = bitcast %union.anon* %18200 to i64*
  %18201 = load i64, i64* %PC.i135
  %18202 = add i64 %18201, 8
  store i64 %18202, i64* %PC.i135
  %18203 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18203, i64* %RCX.i136, align 8
  store %struct.Memory* %loadMem_43fbbb, %struct.Memory** %MEMORY
  %loadMem_43fbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18205 = getelementptr inbounds %struct.GPR, %struct.GPR* %18204, i32 0, i32 33
  %18206 = getelementptr inbounds %struct.Reg, %struct.Reg* %18205, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %18206 to i64*
  %18207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18208 = getelementptr inbounds %struct.GPR, %struct.GPR* %18207, i32 0, i32 5
  %18209 = getelementptr inbounds %struct.Reg, %struct.Reg* %18208, i32 0, i32 0
  %RCX.i133 = bitcast %union.anon* %18209 to i64*
  %18210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18211 = getelementptr inbounds %struct.GPR, %struct.GPR* %18210, i32 0, i32 9
  %18212 = getelementptr inbounds %struct.Reg, %struct.Reg* %18211, i32 0, i32 0
  %RSI.i134 = bitcast %union.anon* %18212 to i64*
  %18213 = load i64, i64* %RCX.i133
  %18214 = add i64 %18213, 156
  %18215 = load i64, i64* %PC.i132
  %18216 = add i64 %18215, 6
  store i64 %18216, i64* %PC.i132
  %18217 = inttoptr i64 %18214 to i32*
  %18218 = load i32, i32* %18217
  %18219 = zext i32 %18218 to i64
  store i64 %18219, i64* %RSI.i134, align 8
  store %struct.Memory* %loadMem_43fbc3, %struct.Memory** %MEMORY
  %loadMem_43fbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18221 = getelementptr inbounds %struct.GPR, %struct.GPR* %18220, i32 0, i32 33
  %18222 = getelementptr inbounds %struct.Reg, %struct.Reg* %18221, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %18222 to i64*
  %18223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18224 = getelementptr inbounds %struct.GPR, %struct.GPR* %18223, i32 0, i32 9
  %18225 = getelementptr inbounds %struct.Reg, %struct.Reg* %18224, i32 0, i32 0
  %RSI.i130 = bitcast %union.anon* %18225 to i64*
  %18226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18227 = getelementptr inbounds %struct.GPR, %struct.GPR* %18226, i32 0, i32 15
  %18228 = getelementptr inbounds %struct.Reg, %struct.Reg* %18227, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %18228 to i64*
  %18229 = load i64, i64* %RSI.i130
  %18230 = load i64, i64* %RBP.i131
  %18231 = sub i64 %18230, 76
  %18232 = load i64, i64* %PC.i129
  %18233 = add i64 %18232, 3
  store i64 %18233, i64* %PC.i129
  %18234 = trunc i64 %18229 to i32
  %18235 = inttoptr i64 %18231 to i32*
  %18236 = load i32, i32* %18235
  %18237 = add i32 %18236, %18234
  %18238 = zext i32 %18237 to i64
  store i64 %18238, i64* %RSI.i130, align 8
  %18239 = icmp ult i32 %18237, %18234
  %18240 = icmp ult i32 %18237, %18236
  %18241 = or i1 %18239, %18240
  %18242 = zext i1 %18241 to i8
  %18243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18242, i8* %18243, align 1
  %18244 = and i32 %18237, 255
  %18245 = call i32 @llvm.ctpop.i32(i32 %18244)
  %18246 = trunc i32 %18245 to i8
  %18247 = and i8 %18246, 1
  %18248 = xor i8 %18247, 1
  %18249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18248, i8* %18249, align 1
  %18250 = xor i32 %18236, %18234
  %18251 = xor i32 %18250, %18237
  %18252 = lshr i32 %18251, 4
  %18253 = trunc i32 %18252 to i8
  %18254 = and i8 %18253, 1
  %18255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18254, i8* %18255, align 1
  %18256 = icmp eq i32 %18237, 0
  %18257 = zext i1 %18256 to i8
  %18258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18257, i8* %18258, align 1
  %18259 = lshr i32 %18237, 31
  %18260 = trunc i32 %18259 to i8
  %18261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18260, i8* %18261, align 1
  %18262 = lshr i32 %18234, 31
  %18263 = lshr i32 %18236, 31
  %18264 = xor i32 %18259, %18262
  %18265 = xor i32 %18259, %18263
  %18266 = add i32 %18264, %18265
  %18267 = icmp eq i32 %18266, 2
  %18268 = zext i1 %18267 to i8
  %18269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18268, i8* %18269, align 1
  store %struct.Memory* %loadMem_43fbc9, %struct.Memory** %MEMORY
  %loadMem_43fbcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %18270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18271 = getelementptr inbounds %struct.GPR, %struct.GPR* %18270, i32 0, i32 33
  %18272 = getelementptr inbounds %struct.Reg, %struct.Reg* %18271, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %18272 to i64*
  %18273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18274 = getelementptr inbounds %struct.GPR, %struct.GPR* %18273, i32 0, i32 9
  %18275 = getelementptr inbounds %struct.Reg, %struct.Reg* %18274, i32 0, i32 0
  %ESI.i127 = bitcast %union.anon* %18275 to i32*
  %18276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18277 = getelementptr inbounds %struct.GPR, %struct.GPR* %18276, i32 0, i32 5
  %18278 = getelementptr inbounds %struct.Reg, %struct.Reg* %18277, i32 0, i32 0
  %RCX.i128 = bitcast %union.anon* %18278 to i64*
  %18279 = load i32, i32* %ESI.i127
  %18280 = zext i32 %18279 to i64
  %18281 = load i64, i64* %PC.i126
  %18282 = add i64 %18281, 3
  store i64 %18282, i64* %PC.i126
  %18283 = shl i64 %18280, 32
  %18284 = ashr exact i64 %18283, 32
  store i64 %18284, i64* %RCX.i128, align 8
  store %struct.Memory* %loadMem_43fbcc, %struct.Memory** %MEMORY
  %loadMem_43fbcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %18285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18286 = getelementptr inbounds %struct.GPR, %struct.GPR* %18285, i32 0, i32 33
  %18287 = getelementptr inbounds %struct.Reg, %struct.Reg* %18286, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %18287 to i64*
  %18288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18289 = getelementptr inbounds %struct.GPR, %struct.GPR* %18288, i32 0, i32 1
  %18290 = getelementptr inbounds %struct.Reg, %struct.Reg* %18289, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %18290 to i64*
  %18291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18292 = getelementptr inbounds %struct.GPR, %struct.GPR* %18291, i32 0, i32 5
  %18293 = getelementptr inbounds %struct.Reg, %struct.Reg* %18292, i32 0, i32 0
  %RCX.i125 = bitcast %union.anon* %18293 to i64*
  %18294 = load i64, i64* %RAX.i124
  %18295 = load i64, i64* %RCX.i125
  %18296 = mul i64 %18295, 8
  %18297 = add i64 %18296, %18294
  %18298 = load i64, i64* %PC.i123
  %18299 = add i64 %18298, 4
  store i64 %18299, i64* %PC.i123
  %18300 = inttoptr i64 %18297 to i64*
  %18301 = load i64, i64* %18300
  store i64 %18301, i64* %RAX.i124, align 8
  store %struct.Memory* %loadMem_43fbcf, %struct.Memory** %MEMORY
  %loadMem_43fbd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18303 = getelementptr inbounds %struct.GPR, %struct.GPR* %18302, i32 0, i32 33
  %18304 = getelementptr inbounds %struct.Reg, %struct.Reg* %18303, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %18304 to i64*
  %18305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18306 = getelementptr inbounds %struct.GPR, %struct.GPR* %18305, i32 0, i32 5
  %18307 = getelementptr inbounds %struct.Reg, %struct.Reg* %18306, i32 0, i32 0
  %RCX.i122 = bitcast %union.anon* %18307 to i64*
  %18308 = load i64, i64* %PC.i121
  %18309 = add i64 %18308, 8
  store i64 %18309, i64* %PC.i121
  %18310 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18310, i64* %RCX.i122, align 8
  store %struct.Memory* %loadMem_43fbd3, %struct.Memory** %MEMORY
  %loadMem_43fbdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18312 = getelementptr inbounds %struct.GPR, %struct.GPR* %18311, i32 0, i32 33
  %18313 = getelementptr inbounds %struct.Reg, %struct.Reg* %18312, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %18313 to i64*
  %18314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18315 = getelementptr inbounds %struct.GPR, %struct.GPR* %18314, i32 0, i32 5
  %18316 = getelementptr inbounds %struct.Reg, %struct.Reg* %18315, i32 0, i32 0
  %RCX.i119 = bitcast %union.anon* %18316 to i64*
  %18317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18318 = getelementptr inbounds %struct.GPR, %struct.GPR* %18317, i32 0, i32 9
  %18319 = getelementptr inbounds %struct.Reg, %struct.Reg* %18318, i32 0, i32 0
  %RSI.i120 = bitcast %union.anon* %18319 to i64*
  %18320 = load i64, i64* %RCX.i119
  %18321 = add i64 %18320, 152
  %18322 = load i64, i64* %PC.i118
  %18323 = add i64 %18322, 6
  store i64 %18323, i64* %PC.i118
  %18324 = inttoptr i64 %18321 to i32*
  %18325 = load i32, i32* %18324
  %18326 = zext i32 %18325 to i64
  store i64 %18326, i64* %RSI.i120, align 8
  store %struct.Memory* %loadMem_43fbdb, %struct.Memory** %MEMORY
  %loadMem_43fbe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18328 = getelementptr inbounds %struct.GPR, %struct.GPR* %18327, i32 0, i32 33
  %18329 = getelementptr inbounds %struct.Reg, %struct.Reg* %18328, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %18329 to i64*
  %18330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18331 = getelementptr inbounds %struct.GPR, %struct.GPR* %18330, i32 0, i32 9
  %18332 = getelementptr inbounds %struct.Reg, %struct.Reg* %18331, i32 0, i32 0
  %RSI.i116 = bitcast %union.anon* %18332 to i64*
  %18333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18334 = getelementptr inbounds %struct.GPR, %struct.GPR* %18333, i32 0, i32 15
  %18335 = getelementptr inbounds %struct.Reg, %struct.Reg* %18334, i32 0, i32 0
  %RBP.i117 = bitcast %union.anon* %18335 to i64*
  %18336 = load i64, i64* %RSI.i116
  %18337 = load i64, i64* %RBP.i117
  %18338 = sub i64 %18337, 72
  %18339 = load i64, i64* %PC.i115
  %18340 = add i64 %18339, 3
  store i64 %18340, i64* %PC.i115
  %18341 = trunc i64 %18336 to i32
  %18342 = inttoptr i64 %18338 to i32*
  %18343 = load i32, i32* %18342
  %18344 = add i32 %18343, %18341
  %18345 = zext i32 %18344 to i64
  store i64 %18345, i64* %RSI.i116, align 8
  %18346 = icmp ult i32 %18344, %18341
  %18347 = icmp ult i32 %18344, %18343
  %18348 = or i1 %18346, %18347
  %18349 = zext i1 %18348 to i8
  %18350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18349, i8* %18350, align 1
  %18351 = and i32 %18344, 255
  %18352 = call i32 @llvm.ctpop.i32(i32 %18351)
  %18353 = trunc i32 %18352 to i8
  %18354 = and i8 %18353, 1
  %18355 = xor i8 %18354, 1
  %18356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18355, i8* %18356, align 1
  %18357 = xor i32 %18343, %18341
  %18358 = xor i32 %18357, %18344
  %18359 = lshr i32 %18358, 4
  %18360 = trunc i32 %18359 to i8
  %18361 = and i8 %18360, 1
  %18362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18361, i8* %18362, align 1
  %18363 = icmp eq i32 %18344, 0
  %18364 = zext i1 %18363 to i8
  %18365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18364, i8* %18365, align 1
  %18366 = lshr i32 %18344, 31
  %18367 = trunc i32 %18366 to i8
  %18368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18367, i8* %18368, align 1
  %18369 = lshr i32 %18341, 31
  %18370 = lshr i32 %18343, 31
  %18371 = xor i32 %18366, %18369
  %18372 = xor i32 %18366, %18370
  %18373 = add i32 %18371, %18372
  %18374 = icmp eq i32 %18373, 2
  %18375 = zext i1 %18374 to i8
  %18376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18375, i8* %18376, align 1
  store %struct.Memory* %loadMem_43fbe1, %struct.Memory** %MEMORY
  %loadMem_43fbe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18378 = getelementptr inbounds %struct.GPR, %struct.GPR* %18377, i32 0, i32 33
  %18379 = getelementptr inbounds %struct.Reg, %struct.Reg* %18378, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %18379 to i64*
  %18380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18381 = getelementptr inbounds %struct.GPR, %struct.GPR* %18380, i32 0, i32 9
  %18382 = getelementptr inbounds %struct.Reg, %struct.Reg* %18381, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %18382 to i32*
  %18383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18384 = getelementptr inbounds %struct.GPR, %struct.GPR* %18383, i32 0, i32 5
  %18385 = getelementptr inbounds %struct.Reg, %struct.Reg* %18384, i32 0, i32 0
  %RCX.i114 = bitcast %union.anon* %18385 to i64*
  %18386 = load i32, i32* %ESI.i
  %18387 = zext i32 %18386 to i64
  %18388 = load i64, i64* %PC.i113
  %18389 = add i64 %18388, 3
  store i64 %18389, i64* %PC.i113
  %18390 = shl i64 %18387, 32
  %18391 = ashr exact i64 %18390, 32
  store i64 %18391, i64* %RCX.i114, align 8
  store %struct.Memory* %loadMem_43fbe4, %struct.Memory** %MEMORY
  %loadMem_43fbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18393 = getelementptr inbounds %struct.GPR, %struct.GPR* %18392, i32 0, i32 33
  %18394 = getelementptr inbounds %struct.Reg, %struct.Reg* %18393, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %18394 to i64*
  %18395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18396 = getelementptr inbounds %struct.GPR, %struct.GPR* %18395, i32 0, i32 7
  %18397 = getelementptr inbounds %struct.Reg, %struct.Reg* %18396, i32 0, i32 0
  %DX.i = bitcast %union.anon* %18397 to i16*
  %18398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18399 = getelementptr inbounds %struct.GPR, %struct.GPR* %18398, i32 0, i32 1
  %18400 = getelementptr inbounds %struct.Reg, %struct.Reg* %18399, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %18400 to i64*
  %18401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18402 = getelementptr inbounds %struct.GPR, %struct.GPR* %18401, i32 0, i32 5
  %18403 = getelementptr inbounds %struct.Reg, %struct.Reg* %18402, i32 0, i32 0
  %RCX.i112 = bitcast %union.anon* %18403 to i64*
  %18404 = load i64, i64* %RAX.i111
  %18405 = load i64, i64* %RCX.i112
  %18406 = mul i64 %18405, 2
  %18407 = add i64 %18406, %18404
  %18408 = load i16, i16* %DX.i
  %18409 = zext i16 %18408 to i64
  %18410 = load i64, i64* %PC.i110
  %18411 = add i64 %18410, 4
  store i64 %18411, i64* %PC.i110
  %18412 = inttoptr i64 %18407 to i16*
  store i16 %18408, i16* %18412
  store %struct.Memory* %loadMem_43fbe7, %struct.Memory** %MEMORY
  %loadMem_43fbeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18414 = getelementptr inbounds %struct.GPR, %struct.GPR* %18413, i32 0, i32 33
  %18415 = getelementptr inbounds %struct.Reg, %struct.Reg* %18414, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %18415 to i64*
  %18416 = load i64, i64* %PC.i109
  %18417 = add i64 %18416, 37
  %18418 = load i64, i64* %PC.i109
  %18419 = add i64 %18418, 5
  store i64 %18419, i64* %PC.i109
  %18420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18417, i64* %18420, align 8
  store %struct.Memory* %loadMem_43fbeb, %struct.Memory** %MEMORY
  br label %block_.L_43fc10

block_.L_43fbf0:                                  ; preds = %block_43fb76
  %loadMem_43fbf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18422 = getelementptr inbounds %struct.GPR, %struct.GPR* %18421, i32 0, i32 33
  %18423 = getelementptr inbounds %struct.Reg, %struct.Reg* %18422, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %18423 to i64*
  %18424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18425 = getelementptr inbounds %struct.GPR, %struct.GPR* %18424, i32 0, i32 1
  %18426 = getelementptr inbounds %struct.Reg, %struct.Reg* %18425, i32 0, i32 0
  %RAX.i108 = bitcast %union.anon* %18426 to i64*
  %18427 = load i64, i64* %PC.i107
  %18428 = add i64 %18427, 10
  store i64 %18428, i64* %PC.i107
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RAX.i108, align 8
  store %struct.Memory* %loadMem_43fbf0, %struct.Memory** %MEMORY
  %loadMem_43fbfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %18429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18430 = getelementptr inbounds %struct.GPR, %struct.GPR* %18429, i32 0, i32 33
  %18431 = getelementptr inbounds %struct.Reg, %struct.Reg* %18430, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %18431 to i64*
  %18432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18433 = getelementptr inbounds %struct.GPR, %struct.GPR* %18432, i32 0, i32 5
  %18434 = getelementptr inbounds %struct.Reg, %struct.Reg* %18433, i32 0, i32 0
  %RCX.i105 = bitcast %union.anon* %18434 to i64*
  %18435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18436 = getelementptr inbounds %struct.GPR, %struct.GPR* %18435, i32 0, i32 15
  %18437 = getelementptr inbounds %struct.Reg, %struct.Reg* %18436, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %18437 to i64*
  %18438 = load i64, i64* %RBP.i106
  %18439 = sub i64 %18438, 72
  %18440 = load i64, i64* %PC.i104
  %18441 = add i64 %18440, 4
  store i64 %18441, i64* %PC.i104
  %18442 = inttoptr i64 %18439 to i32*
  %18443 = load i32, i32* %18442
  %18444 = sext i32 %18443 to i64
  store i64 %18444, i64* %RCX.i105, align 8
  store %struct.Memory* %loadMem_43fbfa, %struct.Memory** %MEMORY
  %loadMem_43fbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %18445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18446 = getelementptr inbounds %struct.GPR, %struct.GPR* %18445, i32 0, i32 33
  %18447 = getelementptr inbounds %struct.Reg, %struct.Reg* %18446, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %18447 to i64*
  %18448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18449 = getelementptr inbounds %struct.GPR, %struct.GPR* %18448, i32 0, i32 5
  %18450 = getelementptr inbounds %struct.Reg, %struct.Reg* %18449, i32 0, i32 0
  %RCX.i103 = bitcast %union.anon* %18450 to i64*
  %18451 = load i64, i64* %RCX.i103
  %18452 = load i64, i64* %PC.i102
  %18453 = add i64 %18452, 4
  store i64 %18453, i64* %PC.i102
  %18454 = shl i64 %18451, 5
  %18455 = icmp slt i64 %18454, 0
  %18456 = shl i64 %18454, 1
  store i64 %18456, i64* %RCX.i103, align 8
  %18457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18458 = zext i1 %18455 to i8
  store i8 %18458, i8* %18457, align 1
  %18459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18460 = trunc i64 %18456 to i32
  %18461 = and i32 %18460, 254
  %18462 = call i32 @llvm.ctpop.i32(i32 %18461)
  %18463 = trunc i32 %18462 to i8
  %18464 = and i8 %18463, 1
  %18465 = xor i8 %18464, 1
  store i8 %18465, i8* %18459, align 1
  %18466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18466, align 1
  %18467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18468 = icmp eq i64 %18456, 0
  %18469 = zext i1 %18468 to i8
  store i8 %18469, i8* %18467, align 1
  %18470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18471 = lshr i64 %18456, 63
  %18472 = trunc i64 %18471 to i8
  store i8 %18472, i8* %18470, align 1
  %18473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18473, align 1
  store %struct.Memory* %loadMem_43fbfe, %struct.Memory** %MEMORY
  %loadMem_43fc02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18475 = getelementptr inbounds %struct.GPR, %struct.GPR* %18474, i32 0, i32 33
  %18476 = getelementptr inbounds %struct.Reg, %struct.Reg* %18475, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %18476 to i64*
  %18477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18478 = getelementptr inbounds %struct.GPR, %struct.GPR* %18477, i32 0, i32 1
  %18479 = getelementptr inbounds %struct.Reg, %struct.Reg* %18478, i32 0, i32 0
  %RAX.i100 = bitcast %union.anon* %18479 to i64*
  %18480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18481 = getelementptr inbounds %struct.GPR, %struct.GPR* %18480, i32 0, i32 5
  %18482 = getelementptr inbounds %struct.Reg, %struct.Reg* %18481, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %18482 to i64*
  %18483 = load i64, i64* %RAX.i100
  %18484 = load i64, i64* %RCX.i101
  %18485 = load i64, i64* %PC.i99
  %18486 = add i64 %18485, 3
  store i64 %18486, i64* %PC.i99
  %18487 = add i64 %18484, %18483
  store i64 %18487, i64* %RAX.i100, align 8
  %18488 = icmp ult i64 %18487, %18483
  %18489 = icmp ult i64 %18487, %18484
  %18490 = or i1 %18488, %18489
  %18491 = zext i1 %18490 to i8
  %18492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18491, i8* %18492, align 1
  %18493 = trunc i64 %18487 to i32
  %18494 = and i32 %18493, 255
  %18495 = call i32 @llvm.ctpop.i32(i32 %18494)
  %18496 = trunc i32 %18495 to i8
  %18497 = and i8 %18496, 1
  %18498 = xor i8 %18497, 1
  %18499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18498, i8* %18499, align 1
  %18500 = xor i64 %18484, %18483
  %18501 = xor i64 %18500, %18487
  %18502 = lshr i64 %18501, 4
  %18503 = trunc i64 %18502 to i8
  %18504 = and i8 %18503, 1
  %18505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18504, i8* %18505, align 1
  %18506 = icmp eq i64 %18487, 0
  %18507 = zext i1 %18506 to i8
  %18508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18507, i8* %18508, align 1
  %18509 = lshr i64 %18487, 63
  %18510 = trunc i64 %18509 to i8
  %18511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18510, i8* %18511, align 1
  %18512 = lshr i64 %18483, 63
  %18513 = lshr i64 %18484, 63
  %18514 = xor i64 %18509, %18512
  %18515 = xor i64 %18509, %18513
  %18516 = add i64 %18514, %18515
  %18517 = icmp eq i64 %18516, 2
  %18518 = zext i1 %18517 to i8
  %18519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18518, i8* %18519, align 1
  store %struct.Memory* %loadMem_43fc02, %struct.Memory** %MEMORY
  %loadMem_43fc05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18521 = getelementptr inbounds %struct.GPR, %struct.GPR* %18520, i32 0, i32 33
  %18522 = getelementptr inbounds %struct.Reg, %struct.Reg* %18521, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %18522 to i64*
  %18523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18524 = getelementptr inbounds %struct.GPR, %struct.GPR* %18523, i32 0, i32 5
  %18525 = getelementptr inbounds %struct.Reg, %struct.Reg* %18524, i32 0, i32 0
  %RCX.i97 = bitcast %union.anon* %18525 to i64*
  %18526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18527 = getelementptr inbounds %struct.GPR, %struct.GPR* %18526, i32 0, i32 15
  %18528 = getelementptr inbounds %struct.Reg, %struct.Reg* %18527, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %18528 to i64*
  %18529 = load i64, i64* %RBP.i98
  %18530 = sub i64 %18529, 76
  %18531 = load i64, i64* %PC.i96
  %18532 = add i64 %18531, 4
  store i64 %18532, i64* %PC.i96
  %18533 = inttoptr i64 %18530 to i32*
  %18534 = load i32, i32* %18533
  %18535 = sext i32 %18534 to i64
  store i64 %18535, i64* %RCX.i97, align 8
  store %struct.Memory* %loadMem_43fc05, %struct.Memory** %MEMORY
  %loadMem_43fc09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18537 = getelementptr inbounds %struct.GPR, %struct.GPR* %18536, i32 0, i32 33
  %18538 = getelementptr inbounds %struct.Reg, %struct.Reg* %18537, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %18538 to i64*
  %18539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18540 = getelementptr inbounds %struct.GPR, %struct.GPR* %18539, i32 0, i32 1
  %18541 = getelementptr inbounds %struct.Reg, %struct.Reg* %18540, i32 0, i32 0
  %RAX.i94 = bitcast %union.anon* %18541 to i64*
  %18542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18543 = getelementptr inbounds %struct.GPR, %struct.GPR* %18542, i32 0, i32 5
  %18544 = getelementptr inbounds %struct.Reg, %struct.Reg* %18543, i32 0, i32 0
  %RCX.i95 = bitcast %union.anon* %18544 to i64*
  %18545 = load i64, i64* %RAX.i94
  %18546 = load i64, i64* %RCX.i95
  %18547 = mul i64 %18546, 4
  %18548 = add i64 %18547, %18545
  %18549 = load i64, i64* %PC.i93
  %18550 = add i64 %18549, 7
  store i64 %18550, i64* %PC.i93
  %18551 = inttoptr i64 %18548 to i32*
  store i32 0, i32* %18551
  store %struct.Memory* %loadMem_43fc09, %struct.Memory** %MEMORY
  br label %block_.L_43fc10

block_.L_43fc10:                                  ; preds = %block_.L_43fbf0, %block_43fb8b
  %loadMem_43fc10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18553 = getelementptr inbounds %struct.GPR, %struct.GPR* %18552, i32 0, i32 33
  %18554 = getelementptr inbounds %struct.Reg, %struct.Reg* %18553, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %18554 to i64*
  %18555 = load i64, i64* %PC.i92
  %18556 = add i64 %18555, 5
  %18557 = load i64, i64* %PC.i92
  %18558 = add i64 %18557, 5
  store i64 %18558, i64* %PC.i92
  %18559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18556, i64* %18559, align 8
  store %struct.Memory* %loadMem_43fc10, %struct.Memory** %MEMORY
  br label %block_.L_43fc15

block_.L_43fc15:                                  ; preds = %block_.L_43fc10
  %loadMem_43fc15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18561 = getelementptr inbounds %struct.GPR, %struct.GPR* %18560, i32 0, i32 33
  %18562 = getelementptr inbounds %struct.Reg, %struct.Reg* %18561, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %18562 to i64*
  %18563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18564 = getelementptr inbounds %struct.GPR, %struct.GPR* %18563, i32 0, i32 1
  %18565 = getelementptr inbounds %struct.Reg, %struct.Reg* %18564, i32 0, i32 0
  %RAX.i90 = bitcast %union.anon* %18565 to i64*
  %18566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18567 = getelementptr inbounds %struct.GPR, %struct.GPR* %18566, i32 0, i32 15
  %18568 = getelementptr inbounds %struct.Reg, %struct.Reg* %18567, i32 0, i32 0
  %RBP.i91 = bitcast %union.anon* %18568 to i64*
  %18569 = load i64, i64* %RBP.i91
  %18570 = sub i64 %18569, 76
  %18571 = load i64, i64* %PC.i89
  %18572 = add i64 %18571, 3
  store i64 %18572, i64* %PC.i89
  %18573 = inttoptr i64 %18570 to i32*
  %18574 = load i32, i32* %18573
  %18575 = zext i32 %18574 to i64
  store i64 %18575, i64* %RAX.i90, align 8
  store %struct.Memory* %loadMem_43fc15, %struct.Memory** %MEMORY
  %loadMem_43fc18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18577 = getelementptr inbounds %struct.GPR, %struct.GPR* %18576, i32 0, i32 33
  %18578 = getelementptr inbounds %struct.Reg, %struct.Reg* %18577, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %18578 to i64*
  %18579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18580 = getelementptr inbounds %struct.GPR, %struct.GPR* %18579, i32 0, i32 1
  %18581 = getelementptr inbounds %struct.Reg, %struct.Reg* %18580, i32 0, i32 0
  %RAX.i88 = bitcast %union.anon* %18581 to i64*
  %18582 = load i64, i64* %RAX.i88
  %18583 = load i64, i64* %PC.i87
  %18584 = add i64 %18583, 3
  store i64 %18584, i64* %PC.i87
  %18585 = trunc i64 %18582 to i32
  %18586 = add i32 1, %18585
  %18587 = zext i32 %18586 to i64
  store i64 %18587, i64* %RAX.i88, align 8
  %18588 = icmp ult i32 %18586, %18585
  %18589 = icmp ult i32 %18586, 1
  %18590 = or i1 %18588, %18589
  %18591 = zext i1 %18590 to i8
  %18592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18591, i8* %18592, align 1
  %18593 = and i32 %18586, 255
  %18594 = call i32 @llvm.ctpop.i32(i32 %18593)
  %18595 = trunc i32 %18594 to i8
  %18596 = and i8 %18595, 1
  %18597 = xor i8 %18596, 1
  %18598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18597, i8* %18598, align 1
  %18599 = xor i64 1, %18582
  %18600 = trunc i64 %18599 to i32
  %18601 = xor i32 %18600, %18586
  %18602 = lshr i32 %18601, 4
  %18603 = trunc i32 %18602 to i8
  %18604 = and i8 %18603, 1
  %18605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18604, i8* %18605, align 1
  %18606 = icmp eq i32 %18586, 0
  %18607 = zext i1 %18606 to i8
  %18608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18607, i8* %18608, align 1
  %18609 = lshr i32 %18586, 31
  %18610 = trunc i32 %18609 to i8
  %18611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18610, i8* %18611, align 1
  %18612 = lshr i32 %18585, 31
  %18613 = xor i32 %18609, %18612
  %18614 = add i32 %18613, %18609
  %18615 = icmp eq i32 %18614, 2
  %18616 = zext i1 %18615 to i8
  %18617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18616, i8* %18617, align 1
  store %struct.Memory* %loadMem_43fc18, %struct.Memory** %MEMORY
  %loadMem_43fc1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18619 = getelementptr inbounds %struct.GPR, %struct.GPR* %18618, i32 0, i32 33
  %18620 = getelementptr inbounds %struct.Reg, %struct.Reg* %18619, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %18620 to i64*
  %18621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18622 = getelementptr inbounds %struct.GPR, %struct.GPR* %18621, i32 0, i32 1
  %18623 = getelementptr inbounds %struct.Reg, %struct.Reg* %18622, i32 0, i32 0
  %EAX.i85 = bitcast %union.anon* %18623 to i32*
  %18624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18625 = getelementptr inbounds %struct.GPR, %struct.GPR* %18624, i32 0, i32 15
  %18626 = getelementptr inbounds %struct.Reg, %struct.Reg* %18625, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %18626 to i64*
  %18627 = load i64, i64* %RBP.i86
  %18628 = sub i64 %18627, 76
  %18629 = load i32, i32* %EAX.i85
  %18630 = zext i32 %18629 to i64
  %18631 = load i64, i64* %PC.i84
  %18632 = add i64 %18631, 3
  store i64 %18632, i64* %PC.i84
  %18633 = inttoptr i64 %18628 to i32*
  store i32 %18629, i32* %18633
  store %struct.Memory* %loadMem_43fc1b, %struct.Memory** %MEMORY
  %loadMem_43fc1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18635 = getelementptr inbounds %struct.GPR, %struct.GPR* %18634, i32 0, i32 33
  %18636 = getelementptr inbounds %struct.Reg, %struct.Reg* %18635, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %18636 to i64*
  %18637 = load i64, i64* %PC.i83
  %18638 = add i64 %18637, -185
  %18639 = load i64, i64* %PC.i83
  %18640 = add i64 %18639, 5
  store i64 %18640, i64* %PC.i83
  %18641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18638, i64* %18641, align 8
  store %struct.Memory* %loadMem_43fc1e, %struct.Memory** %MEMORY
  br label %block_.L_43fb65

block_.L_43fc23:                                  ; preds = %block_.L_43fb65
  %loadMem_43fc23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18643 = getelementptr inbounds %struct.GPR, %struct.GPR* %18642, i32 0, i32 33
  %18644 = getelementptr inbounds %struct.Reg, %struct.Reg* %18643, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %18644 to i64*
  %18645 = load i64, i64* %PC.i82
  %18646 = add i64 %18645, 5
  %18647 = load i64, i64* %PC.i82
  %18648 = add i64 %18647, 5
  store i64 %18648, i64* %PC.i82
  %18649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18646, i64* %18649, align 8
  store %struct.Memory* %loadMem_43fc23, %struct.Memory** %MEMORY
  br label %block_.L_43fc28

block_.L_43fc28:                                  ; preds = %block_.L_43fc23
  %loadMem_43fc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18651 = getelementptr inbounds %struct.GPR, %struct.GPR* %18650, i32 0, i32 33
  %18652 = getelementptr inbounds %struct.Reg, %struct.Reg* %18651, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %18652 to i64*
  %18653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18654 = getelementptr inbounds %struct.GPR, %struct.GPR* %18653, i32 0, i32 1
  %18655 = getelementptr inbounds %struct.Reg, %struct.Reg* %18654, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %18655 to i64*
  %18656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18657 = getelementptr inbounds %struct.GPR, %struct.GPR* %18656, i32 0, i32 15
  %18658 = getelementptr inbounds %struct.Reg, %struct.Reg* %18657, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %18658 to i64*
  %18659 = load i64, i64* %RBP.i81
  %18660 = sub i64 %18659, 72
  %18661 = load i64, i64* %PC.i79
  %18662 = add i64 %18661, 3
  store i64 %18662, i64* %PC.i79
  %18663 = inttoptr i64 %18660 to i32*
  %18664 = load i32, i32* %18663
  %18665 = zext i32 %18664 to i64
  store i64 %18665, i64* %RAX.i80, align 8
  store %struct.Memory* %loadMem_43fc28, %struct.Memory** %MEMORY
  %loadMem_43fc2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18667 = getelementptr inbounds %struct.GPR, %struct.GPR* %18666, i32 0, i32 33
  %18668 = getelementptr inbounds %struct.Reg, %struct.Reg* %18667, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %18668 to i64*
  %18669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18670 = getelementptr inbounds %struct.GPR, %struct.GPR* %18669, i32 0, i32 1
  %18671 = getelementptr inbounds %struct.Reg, %struct.Reg* %18670, i32 0, i32 0
  %RAX.i78 = bitcast %union.anon* %18671 to i64*
  %18672 = load i64, i64* %RAX.i78
  %18673 = load i64, i64* %PC.i77
  %18674 = add i64 %18673, 3
  store i64 %18674, i64* %PC.i77
  %18675 = trunc i64 %18672 to i32
  %18676 = add i32 1, %18675
  %18677 = zext i32 %18676 to i64
  store i64 %18677, i64* %RAX.i78, align 8
  %18678 = icmp ult i32 %18676, %18675
  %18679 = icmp ult i32 %18676, 1
  %18680 = or i1 %18678, %18679
  %18681 = zext i1 %18680 to i8
  %18682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18681, i8* %18682, align 1
  %18683 = and i32 %18676, 255
  %18684 = call i32 @llvm.ctpop.i32(i32 %18683)
  %18685 = trunc i32 %18684 to i8
  %18686 = and i8 %18685, 1
  %18687 = xor i8 %18686, 1
  %18688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18687, i8* %18688, align 1
  %18689 = xor i64 1, %18672
  %18690 = trunc i64 %18689 to i32
  %18691 = xor i32 %18690, %18676
  %18692 = lshr i32 %18691, 4
  %18693 = trunc i32 %18692 to i8
  %18694 = and i8 %18693, 1
  %18695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18694, i8* %18695, align 1
  %18696 = icmp eq i32 %18676, 0
  %18697 = zext i1 %18696 to i8
  %18698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18697, i8* %18698, align 1
  %18699 = lshr i32 %18676, 31
  %18700 = trunc i32 %18699 to i8
  %18701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18700, i8* %18701, align 1
  %18702 = lshr i32 %18675, 31
  %18703 = xor i32 %18699, %18702
  %18704 = add i32 %18703, %18699
  %18705 = icmp eq i32 %18704, 2
  %18706 = zext i1 %18705 to i8
  %18707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18706, i8* %18707, align 1
  store %struct.Memory* %loadMem_43fc2b, %struct.Memory** %MEMORY
  %loadMem_43fc2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18709 = getelementptr inbounds %struct.GPR, %struct.GPR* %18708, i32 0, i32 33
  %18710 = getelementptr inbounds %struct.Reg, %struct.Reg* %18709, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %18710 to i64*
  %18711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18712 = getelementptr inbounds %struct.GPR, %struct.GPR* %18711, i32 0, i32 1
  %18713 = getelementptr inbounds %struct.Reg, %struct.Reg* %18712, i32 0, i32 0
  %EAX.i75 = bitcast %union.anon* %18713 to i32*
  %18714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18715 = getelementptr inbounds %struct.GPR, %struct.GPR* %18714, i32 0, i32 15
  %18716 = getelementptr inbounds %struct.Reg, %struct.Reg* %18715, i32 0, i32 0
  %RBP.i76 = bitcast %union.anon* %18716 to i64*
  %18717 = load i64, i64* %RBP.i76
  %18718 = sub i64 %18717, 72
  %18719 = load i32, i32* %EAX.i75
  %18720 = zext i32 %18719 to i64
  %18721 = load i64, i64* %PC.i74
  %18722 = add i64 %18721, 3
  store i64 %18722, i64* %PC.i74
  %18723 = inttoptr i64 %18718 to i32*
  store i32 %18719, i32* %18723
  store %struct.Memory* %loadMem_43fc2e, %struct.Memory** %MEMORY
  %loadMem_43fc31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18725 = getelementptr inbounds %struct.GPR, %struct.GPR* %18724, i32 0, i32 33
  %18726 = getelementptr inbounds %struct.Reg, %struct.Reg* %18725, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %18726 to i64*
  %18727 = load i64, i64* %PC.i73
  %18728 = add i64 %18727, -227
  %18729 = load i64, i64* %PC.i73
  %18730 = add i64 %18729, 5
  store i64 %18730, i64* %PC.i73
  %18731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18728, i64* %18731, align 8
  store %struct.Memory* %loadMem_43fc31, %struct.Memory** %MEMORY
  br label %block_.L_43fb4e

block_.L_43fc36:                                  ; preds = %block_.L_43fb4e
  %loadMem_43fc36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18733 = getelementptr inbounds %struct.GPR, %struct.GPR* %18732, i32 0, i32 33
  %18734 = getelementptr inbounds %struct.Reg, %struct.Reg* %18733, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %18734 to i64*
  %18735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18736 = getelementptr inbounds %struct.GPR, %struct.GPR* %18735, i32 0, i32 1
  %18737 = getelementptr inbounds %struct.Reg, %struct.Reg* %18736, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %18737 to i64*
  %18738 = load i64, i64* %PC.i71
  %18739 = add i64 %18738, 8
  store i64 %18739, i64* %PC.i71
  %18740 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18740, i64* %RAX.i72, align 8
  store %struct.Memory* %loadMem_43fc36, %struct.Memory** %MEMORY
  %loadMem_43fc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18742 = getelementptr inbounds %struct.GPR, %struct.GPR* %18741, i32 0, i32 33
  %18743 = getelementptr inbounds %struct.Reg, %struct.Reg* %18742, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %18743 to i64*
  %18744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18745 = getelementptr inbounds %struct.GPR, %struct.GPR* %18744, i32 0, i32 1
  %18746 = getelementptr inbounds %struct.Reg, %struct.Reg* %18745, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %18746 to i64*
  %18747 = load i64, i64* %RAX.i70
  %18748 = add i64 %18747, 24
  %18749 = load i64, i64* %PC.i69
  %18750 = add i64 %18749, 4
  store i64 %18750, i64* %PC.i69
  %18751 = inttoptr i64 %18748 to i32*
  %18752 = load i32, i32* %18751
  %18753 = sub i32 %18752, 3
  %18754 = icmp ult i32 %18752, 3
  %18755 = zext i1 %18754 to i8
  %18756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18755, i8* %18756, align 1
  %18757 = and i32 %18753, 255
  %18758 = call i32 @llvm.ctpop.i32(i32 %18757)
  %18759 = trunc i32 %18758 to i8
  %18760 = and i8 %18759, 1
  %18761 = xor i8 %18760, 1
  %18762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18761, i8* %18762, align 1
  %18763 = xor i32 %18752, 3
  %18764 = xor i32 %18763, %18753
  %18765 = lshr i32 %18764, 4
  %18766 = trunc i32 %18765 to i8
  %18767 = and i8 %18766, 1
  %18768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18767, i8* %18768, align 1
  %18769 = icmp eq i32 %18753, 0
  %18770 = zext i1 %18769 to i8
  %18771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18770, i8* %18771, align 1
  %18772 = lshr i32 %18753, 31
  %18773 = trunc i32 %18772 to i8
  %18774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18773, i8* %18774, align 1
  %18775 = lshr i32 %18752, 31
  %18776 = xor i32 %18772, %18775
  %18777 = add i32 %18776, %18775
  %18778 = icmp eq i32 %18777, 2
  %18779 = zext i1 %18778 to i8
  %18780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18779, i8* %18780, align 1
  store %struct.Memory* %loadMem_43fc3e, %struct.Memory** %MEMORY
  %loadMem_43fc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18782 = getelementptr inbounds %struct.GPR, %struct.GPR* %18781, i32 0, i32 33
  %18783 = getelementptr inbounds %struct.Reg, %struct.Reg* %18782, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %18783 to i64*
  %18784 = load i64, i64* %PC.i68
  %18785 = add i64 %18784, 101
  %18786 = load i64, i64* %PC.i68
  %18787 = add i64 %18786, 6
  %18788 = load i64, i64* %PC.i68
  %18789 = add i64 %18788, 6
  store i64 %18789, i64* %PC.i68
  %18790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18791 = load i8, i8* %18790, align 1
  %18792 = icmp eq i8 %18791, 0
  %18793 = zext i1 %18792 to i8
  store i8 %18793, i8* %BRANCH_TAKEN, align 1
  %18794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18795 = select i1 %18792, i64 %18785, i64 %18787
  store i64 %18795, i64* %18794, align 8
  store %struct.Memory* %loadMem_43fc42, %struct.Memory** %MEMORY
  %loadBr_43fc42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fc42 = icmp eq i8 %loadBr_43fc42, 1
  br i1 %cmpBr_43fc42, label %block_.L_43fca7, label %block_43fc48

block_43fc48:                                     ; preds = %block_.L_43fc36
  %loadMem_43fc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18797 = getelementptr inbounds %struct.GPR, %struct.GPR* %18796, i32 0, i32 33
  %18798 = getelementptr inbounds %struct.Reg, %struct.Reg* %18797, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %18798 to i64*
  %18799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18800 = getelementptr inbounds %struct.GPR, %struct.GPR* %18799, i32 0, i32 1
  %18801 = getelementptr inbounds %struct.Reg, %struct.Reg* %18800, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %18801 to i64*
  %18802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18803 = getelementptr inbounds %struct.GPR, %struct.GPR* %18802, i32 0, i32 15
  %18804 = getelementptr inbounds %struct.Reg, %struct.Reg* %18803, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %18804 to i64*
  %18805 = load i64, i64* %RBP.i67
  %18806 = sub i64 %18805, 96
  %18807 = load i64, i64* %PC.i65
  %18808 = add i64 %18807, 3
  store i64 %18808, i64* %PC.i65
  %18809 = inttoptr i64 %18806 to i32*
  %18810 = load i32, i32* %18809
  %18811 = zext i32 %18810 to i64
  store i64 %18811, i64* %RAX.i66, align 8
  store %struct.Memory* %loadMem_43fc48, %struct.Memory** %MEMORY
  %loadMem_43fc4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18813 = getelementptr inbounds %struct.GPR, %struct.GPR* %18812, i32 0, i32 33
  %18814 = getelementptr inbounds %struct.Reg, %struct.Reg* %18813, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %18814 to i64*
  %18815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18816 = getelementptr inbounds %struct.GPR, %struct.GPR* %18815, i32 0, i32 1
  %18817 = getelementptr inbounds %struct.Reg, %struct.Reg* %18816, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %18817 to i32*
  %18818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18819 = getelementptr inbounds %struct.GPR, %struct.GPR* %18818, i32 0, i32 15
  %18820 = getelementptr inbounds %struct.Reg, %struct.Reg* %18819, i32 0, i32 0
  %RBP.i64 = bitcast %union.anon* %18820 to i64*
  %18821 = load i64, i64* %RBP.i64
  %18822 = sub i64 %18821, 72
  %18823 = load i32, i32* %EAX.i63
  %18824 = zext i32 %18823 to i64
  %18825 = load i64, i64* %PC.i62
  %18826 = add i64 %18825, 3
  store i64 %18826, i64* %PC.i62
  %18827 = inttoptr i64 %18822 to i32*
  store i32 %18823, i32* %18827
  store %struct.Memory* %loadMem_43fc4b, %struct.Memory** %MEMORY
  br label %block_.L_43fc4e

block_.L_43fc4e:                                  ; preds = %block_.L_43fc94, %block_43fc48
  %loadMem_43fc4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18829 = getelementptr inbounds %struct.GPR, %struct.GPR* %18828, i32 0, i32 33
  %18830 = getelementptr inbounds %struct.Reg, %struct.Reg* %18829, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %18830 to i64*
  %18831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18832 = getelementptr inbounds %struct.GPR, %struct.GPR* %18831, i32 0, i32 1
  %18833 = getelementptr inbounds %struct.Reg, %struct.Reg* %18832, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %18833 to i64*
  %18834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18835 = getelementptr inbounds %struct.GPR, %struct.GPR* %18834, i32 0, i32 15
  %18836 = getelementptr inbounds %struct.Reg, %struct.Reg* %18835, i32 0, i32 0
  %RBP.i61 = bitcast %union.anon* %18836 to i64*
  %18837 = load i64, i64* %RBP.i61
  %18838 = sub i64 %18837, 72
  %18839 = load i64, i64* %PC.i59
  %18840 = add i64 %18839, 3
  store i64 %18840, i64* %PC.i59
  %18841 = inttoptr i64 %18838 to i32*
  %18842 = load i32, i32* %18841
  %18843 = zext i32 %18842 to i64
  store i64 %18843, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_43fc4e, %struct.Memory** %MEMORY
  %loadMem_43fc51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18845 = getelementptr inbounds %struct.GPR, %struct.GPR* %18844, i32 0, i32 33
  %18846 = getelementptr inbounds %struct.Reg, %struct.Reg* %18845, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %18846 to i64*
  %18847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18848 = getelementptr inbounds %struct.GPR, %struct.GPR* %18847, i32 0, i32 5
  %18849 = getelementptr inbounds %struct.Reg, %struct.Reg* %18848, i32 0, i32 0
  %RCX.i57 = bitcast %union.anon* %18849 to i64*
  %18850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18851 = getelementptr inbounds %struct.GPR, %struct.GPR* %18850, i32 0, i32 15
  %18852 = getelementptr inbounds %struct.Reg, %struct.Reg* %18851, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %18852 to i64*
  %18853 = load i64, i64* %RBP.i58
  %18854 = sub i64 %18853, 96
  %18855 = load i64, i64* %PC.i56
  %18856 = add i64 %18855, 3
  store i64 %18856, i64* %PC.i56
  %18857 = inttoptr i64 %18854 to i32*
  %18858 = load i32, i32* %18857
  %18859 = zext i32 %18858 to i64
  store i64 %18859, i64* %RCX.i57, align 8
  store %struct.Memory* %loadMem_43fc51, %struct.Memory** %MEMORY
  %loadMem_43fc54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18861 = getelementptr inbounds %struct.GPR, %struct.GPR* %18860, i32 0, i32 33
  %18862 = getelementptr inbounds %struct.Reg, %struct.Reg* %18861, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %18862 to i64*
  %18863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18864 = getelementptr inbounds %struct.GPR, %struct.GPR* %18863, i32 0, i32 5
  %18865 = getelementptr inbounds %struct.Reg, %struct.Reg* %18864, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %18865 to i64*
  %18866 = load i64, i64* %RCX.i55
  %18867 = load i64, i64* %PC.i54
  %18868 = add i64 %18867, 3
  store i64 %18868, i64* %PC.i54
  %18869 = trunc i64 %18866 to i32
  %18870 = add i32 8, %18869
  %18871 = zext i32 %18870 to i64
  store i64 %18871, i64* %RCX.i55, align 8
  %18872 = icmp ult i32 %18870, %18869
  %18873 = icmp ult i32 %18870, 8
  %18874 = or i1 %18872, %18873
  %18875 = zext i1 %18874 to i8
  %18876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18875, i8* %18876, align 1
  %18877 = and i32 %18870, 255
  %18878 = call i32 @llvm.ctpop.i32(i32 %18877)
  %18879 = trunc i32 %18878 to i8
  %18880 = and i8 %18879, 1
  %18881 = xor i8 %18880, 1
  %18882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18881, i8* %18882, align 1
  %18883 = xor i64 8, %18866
  %18884 = trunc i64 %18883 to i32
  %18885 = xor i32 %18884, %18870
  %18886 = lshr i32 %18885, 4
  %18887 = trunc i32 %18886 to i8
  %18888 = and i8 %18887, 1
  %18889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18888, i8* %18889, align 1
  %18890 = icmp eq i32 %18870, 0
  %18891 = zext i1 %18890 to i8
  %18892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18891, i8* %18892, align 1
  %18893 = lshr i32 %18870, 31
  %18894 = trunc i32 %18893 to i8
  %18895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18894, i8* %18895, align 1
  %18896 = lshr i32 %18869, 31
  %18897 = xor i32 %18893, %18896
  %18898 = add i32 %18897, %18893
  %18899 = icmp eq i32 %18898, 2
  %18900 = zext i1 %18899 to i8
  %18901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18900, i8* %18901, align 1
  store %struct.Memory* %loadMem_43fc54, %struct.Memory** %MEMORY
  %loadMem_43fc57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18903 = getelementptr inbounds %struct.GPR, %struct.GPR* %18902, i32 0, i32 33
  %18904 = getelementptr inbounds %struct.Reg, %struct.Reg* %18903, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %18904 to i64*
  %18905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18906 = getelementptr inbounds %struct.GPR, %struct.GPR* %18905, i32 0, i32 1
  %18907 = getelementptr inbounds %struct.Reg, %struct.Reg* %18906, i32 0, i32 0
  %EAX.i52 = bitcast %union.anon* %18907 to i32*
  %18908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18909 = getelementptr inbounds %struct.GPR, %struct.GPR* %18908, i32 0, i32 5
  %18910 = getelementptr inbounds %struct.Reg, %struct.Reg* %18909, i32 0, i32 0
  %ECX.i53 = bitcast %union.anon* %18910 to i32*
  %18911 = load i32, i32* %EAX.i52
  %18912 = zext i32 %18911 to i64
  %18913 = load i32, i32* %ECX.i53
  %18914 = zext i32 %18913 to i64
  %18915 = load i64, i64* %PC.i51
  %18916 = add i64 %18915, 2
  store i64 %18916, i64* %PC.i51
  %18917 = sub i32 %18911, %18913
  %18918 = icmp ult i32 %18911, %18913
  %18919 = zext i1 %18918 to i8
  %18920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18919, i8* %18920, align 1
  %18921 = and i32 %18917, 255
  %18922 = call i32 @llvm.ctpop.i32(i32 %18921)
  %18923 = trunc i32 %18922 to i8
  %18924 = and i8 %18923, 1
  %18925 = xor i8 %18924, 1
  %18926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18925, i8* %18926, align 1
  %18927 = xor i64 %18914, %18912
  %18928 = trunc i64 %18927 to i32
  %18929 = xor i32 %18928, %18917
  %18930 = lshr i32 %18929, 4
  %18931 = trunc i32 %18930 to i8
  %18932 = and i8 %18931, 1
  %18933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18932, i8* %18933, align 1
  %18934 = icmp eq i32 %18917, 0
  %18935 = zext i1 %18934 to i8
  %18936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18935, i8* %18936, align 1
  %18937 = lshr i32 %18917, 31
  %18938 = trunc i32 %18937 to i8
  %18939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18938, i8* %18939, align 1
  %18940 = lshr i32 %18911, 31
  %18941 = lshr i32 %18913, 31
  %18942 = xor i32 %18941, %18940
  %18943 = xor i32 %18937, %18940
  %18944 = add i32 %18943, %18942
  %18945 = icmp eq i32 %18944, 2
  %18946 = zext i1 %18945 to i8
  %18947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18946, i8* %18947, align 1
  store %struct.Memory* %loadMem_43fc57, %struct.Memory** %MEMORY
  %loadMem_43fc59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18949 = getelementptr inbounds %struct.GPR, %struct.GPR* %18948, i32 0, i32 33
  %18950 = getelementptr inbounds %struct.Reg, %struct.Reg* %18949, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %18950 to i64*
  %18951 = load i64, i64* %PC.i50
  %18952 = add i64 %18951, 73
  %18953 = load i64, i64* %PC.i50
  %18954 = add i64 %18953, 6
  %18955 = load i64, i64* %PC.i50
  %18956 = add i64 %18955, 6
  store i64 %18956, i64* %PC.i50
  %18957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18958 = load i8, i8* %18957, align 1
  %18959 = icmp ne i8 %18958, 0
  %18960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18961 = load i8, i8* %18960, align 1
  %18962 = icmp ne i8 %18961, 0
  %18963 = xor i1 %18959, %18962
  %18964 = xor i1 %18963, true
  %18965 = zext i1 %18964 to i8
  store i8 %18965, i8* %BRANCH_TAKEN, align 1
  %18966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18967 = select i1 %18963, i64 %18954, i64 %18952
  store i64 %18967, i64* %18966, align 8
  store %struct.Memory* %loadMem_43fc59, %struct.Memory** %MEMORY
  %loadBr_43fc59 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fc59 = icmp eq i8 %loadBr_43fc59, 1
  br i1 %cmpBr_43fc59, label %block_.L_43fca2, label %block_43fc5f

block_43fc5f:                                     ; preds = %block_.L_43fc4e
  %loadMem_43fc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18969 = getelementptr inbounds %struct.GPR, %struct.GPR* %18968, i32 0, i32 33
  %18970 = getelementptr inbounds %struct.Reg, %struct.Reg* %18969, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %18970 to i64*
  %18971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18972 = getelementptr inbounds %struct.GPR, %struct.GPR* %18971, i32 0, i32 1
  %18973 = getelementptr inbounds %struct.Reg, %struct.Reg* %18972, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %18973 to i64*
  %18974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18975 = getelementptr inbounds %struct.GPR, %struct.GPR* %18974, i32 0, i32 15
  %18976 = getelementptr inbounds %struct.Reg, %struct.Reg* %18975, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %18976 to i64*
  %18977 = load i64, i64* %RBP.i49
  %18978 = sub i64 %18977, 92
  %18979 = load i64, i64* %PC.i47
  %18980 = add i64 %18979, 3
  store i64 %18980, i64* %PC.i47
  %18981 = inttoptr i64 %18978 to i32*
  %18982 = load i32, i32* %18981
  %18983 = zext i32 %18982 to i64
  store i64 %18983, i64* %RAX.i48, align 8
  store %struct.Memory* %loadMem_43fc5f, %struct.Memory** %MEMORY
  %loadMem_43fc62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18985 = getelementptr inbounds %struct.GPR, %struct.GPR* %18984, i32 0, i32 33
  %18986 = getelementptr inbounds %struct.Reg, %struct.Reg* %18985, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %18986 to i64*
  %18987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18988 = getelementptr inbounds %struct.GPR, %struct.GPR* %18987, i32 0, i32 1
  %18989 = getelementptr inbounds %struct.Reg, %struct.Reg* %18988, i32 0, i32 0
  %EAX.i45 = bitcast %union.anon* %18989 to i32*
  %18990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18991 = getelementptr inbounds %struct.GPR, %struct.GPR* %18990, i32 0, i32 15
  %18992 = getelementptr inbounds %struct.Reg, %struct.Reg* %18991, i32 0, i32 0
  %RBP.i46 = bitcast %union.anon* %18992 to i64*
  %18993 = load i64, i64* %RBP.i46
  %18994 = sub i64 %18993, 76
  %18995 = load i32, i32* %EAX.i45
  %18996 = zext i32 %18995 to i64
  %18997 = load i64, i64* %PC.i44
  %18998 = add i64 %18997, 3
  store i64 %18998, i64* %PC.i44
  %18999 = inttoptr i64 %18994 to i32*
  store i32 %18995, i32* %18999
  store %struct.Memory* %loadMem_43fc62, %struct.Memory** %MEMORY
  br label %block_.L_43fc65

block_.L_43fc65:                                  ; preds = %block_43fc76, %block_43fc5f
  %loadMem_43fc65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19001 = getelementptr inbounds %struct.GPR, %struct.GPR* %19000, i32 0, i32 33
  %19002 = getelementptr inbounds %struct.Reg, %struct.Reg* %19001, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %19002 to i64*
  %19003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19004 = getelementptr inbounds %struct.GPR, %struct.GPR* %19003, i32 0, i32 1
  %19005 = getelementptr inbounds %struct.Reg, %struct.Reg* %19004, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %19005 to i64*
  %19006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19007 = getelementptr inbounds %struct.GPR, %struct.GPR* %19006, i32 0, i32 15
  %19008 = getelementptr inbounds %struct.Reg, %struct.Reg* %19007, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %19008 to i64*
  %19009 = load i64, i64* %RBP.i43
  %19010 = sub i64 %19009, 76
  %19011 = load i64, i64* %PC.i41
  %19012 = add i64 %19011, 3
  store i64 %19012, i64* %PC.i41
  %19013 = inttoptr i64 %19010 to i32*
  %19014 = load i32, i32* %19013
  %19015 = zext i32 %19014 to i64
  store i64 %19015, i64* %RAX.i42, align 8
  store %struct.Memory* %loadMem_43fc65, %struct.Memory** %MEMORY
  %loadMem_43fc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19017 = getelementptr inbounds %struct.GPR, %struct.GPR* %19016, i32 0, i32 33
  %19018 = getelementptr inbounds %struct.Reg, %struct.Reg* %19017, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %19018 to i64*
  %19019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19020 = getelementptr inbounds %struct.GPR, %struct.GPR* %19019, i32 0, i32 5
  %19021 = getelementptr inbounds %struct.Reg, %struct.Reg* %19020, i32 0, i32 0
  %RCX.i39 = bitcast %union.anon* %19021 to i64*
  %19022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19023 = getelementptr inbounds %struct.GPR, %struct.GPR* %19022, i32 0, i32 15
  %19024 = getelementptr inbounds %struct.Reg, %struct.Reg* %19023, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %19024 to i64*
  %19025 = load i64, i64* %RBP.i40
  %19026 = sub i64 %19025, 92
  %19027 = load i64, i64* %PC.i38
  %19028 = add i64 %19027, 3
  store i64 %19028, i64* %PC.i38
  %19029 = inttoptr i64 %19026 to i32*
  %19030 = load i32, i32* %19029
  %19031 = zext i32 %19030 to i64
  store i64 %19031, i64* %RCX.i39, align 8
  store %struct.Memory* %loadMem_43fc68, %struct.Memory** %MEMORY
  %loadMem_43fc6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19033 = getelementptr inbounds %struct.GPR, %struct.GPR* %19032, i32 0, i32 33
  %19034 = getelementptr inbounds %struct.Reg, %struct.Reg* %19033, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %19034 to i64*
  %19035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19036 = getelementptr inbounds %struct.GPR, %struct.GPR* %19035, i32 0, i32 5
  %19037 = getelementptr inbounds %struct.Reg, %struct.Reg* %19036, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %19037 to i64*
  %19038 = load i64, i64* %RCX.i
  %19039 = load i64, i64* %PC.i37
  %19040 = add i64 %19039, 3
  store i64 %19040, i64* %PC.i37
  %19041 = trunc i64 %19038 to i32
  %19042 = add i32 8, %19041
  %19043 = zext i32 %19042 to i64
  store i64 %19043, i64* %RCX.i, align 8
  %19044 = icmp ult i32 %19042, %19041
  %19045 = icmp ult i32 %19042, 8
  %19046 = or i1 %19044, %19045
  %19047 = zext i1 %19046 to i8
  %19048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19047, i8* %19048, align 1
  %19049 = and i32 %19042, 255
  %19050 = call i32 @llvm.ctpop.i32(i32 %19049)
  %19051 = trunc i32 %19050 to i8
  %19052 = and i8 %19051, 1
  %19053 = xor i8 %19052, 1
  %19054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19053, i8* %19054, align 1
  %19055 = xor i64 8, %19038
  %19056 = trunc i64 %19055 to i32
  %19057 = xor i32 %19056, %19042
  %19058 = lshr i32 %19057, 4
  %19059 = trunc i32 %19058 to i8
  %19060 = and i8 %19059, 1
  %19061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19060, i8* %19061, align 1
  %19062 = icmp eq i32 %19042, 0
  %19063 = zext i1 %19062 to i8
  %19064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19063, i8* %19064, align 1
  %19065 = lshr i32 %19042, 31
  %19066 = trunc i32 %19065 to i8
  %19067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19066, i8* %19067, align 1
  %19068 = lshr i32 %19041, 31
  %19069 = xor i32 %19065, %19068
  %19070 = add i32 %19069, %19065
  %19071 = icmp eq i32 %19070, 2
  %19072 = zext i1 %19071 to i8
  %19073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19072, i8* %19073, align 1
  store %struct.Memory* %loadMem_43fc6b, %struct.Memory** %MEMORY
  %loadMem_43fc6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19075 = getelementptr inbounds %struct.GPR, %struct.GPR* %19074, i32 0, i32 33
  %19076 = getelementptr inbounds %struct.Reg, %struct.Reg* %19075, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %19076 to i64*
  %19077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19078 = getelementptr inbounds %struct.GPR, %struct.GPR* %19077, i32 0, i32 1
  %19079 = getelementptr inbounds %struct.Reg, %struct.Reg* %19078, i32 0, i32 0
  %EAX.i36 = bitcast %union.anon* %19079 to i32*
  %19080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19081 = getelementptr inbounds %struct.GPR, %struct.GPR* %19080, i32 0, i32 5
  %19082 = getelementptr inbounds %struct.Reg, %struct.Reg* %19081, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %19082 to i32*
  %19083 = load i32, i32* %EAX.i36
  %19084 = zext i32 %19083 to i64
  %19085 = load i32, i32* %ECX.i
  %19086 = zext i32 %19085 to i64
  %19087 = load i64, i64* %PC.i35
  %19088 = add i64 %19087, 2
  store i64 %19088, i64* %PC.i35
  %19089 = sub i32 %19083, %19085
  %19090 = icmp ult i32 %19083, %19085
  %19091 = zext i1 %19090 to i8
  %19092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19091, i8* %19092, align 1
  %19093 = and i32 %19089, 255
  %19094 = call i32 @llvm.ctpop.i32(i32 %19093)
  %19095 = trunc i32 %19094 to i8
  %19096 = and i8 %19095, 1
  %19097 = xor i8 %19096, 1
  %19098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19097, i8* %19098, align 1
  %19099 = xor i64 %19086, %19084
  %19100 = trunc i64 %19099 to i32
  %19101 = xor i32 %19100, %19089
  %19102 = lshr i32 %19101, 4
  %19103 = trunc i32 %19102 to i8
  %19104 = and i8 %19103, 1
  %19105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19104, i8* %19105, align 1
  %19106 = icmp eq i32 %19089, 0
  %19107 = zext i1 %19106 to i8
  %19108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19107, i8* %19108, align 1
  %19109 = lshr i32 %19089, 31
  %19110 = trunc i32 %19109 to i8
  %19111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19110, i8* %19111, align 1
  %19112 = lshr i32 %19083, 31
  %19113 = lshr i32 %19085, 31
  %19114 = xor i32 %19113, %19112
  %19115 = xor i32 %19109, %19112
  %19116 = add i32 %19115, %19114
  %19117 = icmp eq i32 %19116, 2
  %19118 = zext i1 %19117 to i8
  %19119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19118, i8* %19119, align 1
  store %struct.Memory* %loadMem_43fc6e, %struct.Memory** %MEMORY
  %loadMem_43fc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19121 = getelementptr inbounds %struct.GPR, %struct.GPR* %19120, i32 0, i32 33
  %19122 = getelementptr inbounds %struct.Reg, %struct.Reg* %19121, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %19122 to i64*
  %19123 = load i64, i64* %PC.i34
  %19124 = add i64 %19123, 31
  %19125 = load i64, i64* %PC.i34
  %19126 = add i64 %19125, 6
  %19127 = load i64, i64* %PC.i34
  %19128 = add i64 %19127, 6
  store i64 %19128, i64* %PC.i34
  %19129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19130 = load i8, i8* %19129, align 1
  %19131 = icmp ne i8 %19130, 0
  %19132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19133 = load i8, i8* %19132, align 1
  %19134 = icmp ne i8 %19133, 0
  %19135 = xor i1 %19131, %19134
  %19136 = xor i1 %19135, true
  %19137 = zext i1 %19136 to i8
  store i8 %19137, i8* %BRANCH_TAKEN, align 1
  %19138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19139 = select i1 %19135, i64 %19126, i64 %19124
  store i64 %19139, i64* %19138, align 8
  store %struct.Memory* %loadMem_43fc70, %struct.Memory** %MEMORY
  %loadBr_43fc70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fc70 = icmp eq i8 %loadBr_43fc70, 1
  br i1 %cmpBr_43fc70, label %block_.L_43fc8f, label %block_43fc76

block_43fc76:                                     ; preds = %block_.L_43fc65
  %loadMem_43fc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19141 = getelementptr inbounds %struct.GPR, %struct.GPR* %19140, i32 0, i32 33
  %19142 = getelementptr inbounds %struct.Reg, %struct.Reg* %19141, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %19142 to i64*
  %19143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19144 = getelementptr inbounds %struct.GPR, %struct.GPR* %19143, i32 0, i32 11
  %19145 = getelementptr inbounds %struct.Reg, %struct.Reg* %19144, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %19145 to i64*
  %19146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19147 = getelementptr inbounds %struct.GPR, %struct.GPR* %19146, i32 0, i32 15
  %19148 = getelementptr inbounds %struct.Reg, %struct.Reg* %19147, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %19148 to i64*
  %19149 = load i64, i64* %RBP.i33
  %19150 = sub i64 %19149, 72
  %19151 = load i64, i64* %PC.i32
  %19152 = add i64 %19151, 3
  store i64 %19152, i64* %PC.i32
  %19153 = inttoptr i64 %19150 to i32*
  %19154 = load i32, i32* %19153
  %19155 = zext i32 %19154 to i64
  store i64 %19155, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_43fc76, %struct.Memory** %MEMORY
  %loadMem_43fc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19157 = getelementptr inbounds %struct.GPR, %struct.GPR* %19156, i32 0, i32 33
  %19158 = getelementptr inbounds %struct.Reg, %struct.Reg* %19157, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %19158 to i64*
  %19159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19160 = getelementptr inbounds %struct.GPR, %struct.GPR* %19159, i32 0, i32 9
  %19161 = getelementptr inbounds %struct.Reg, %struct.Reg* %19160, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %19161 to i64*
  %19162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19163 = getelementptr inbounds %struct.GPR, %struct.GPR* %19162, i32 0, i32 15
  %19164 = getelementptr inbounds %struct.Reg, %struct.Reg* %19163, i32 0, i32 0
  %RBP.i31 = bitcast %union.anon* %19164 to i64*
  %19165 = load i64, i64* %RBP.i31
  %19166 = sub i64 %19165, 76
  %19167 = load i64, i64* %PC.i30
  %19168 = add i64 %19167, 3
  store i64 %19168, i64* %PC.i30
  %19169 = inttoptr i64 %19166 to i32*
  %19170 = load i32, i32* %19169
  %19171 = zext i32 %19170 to i64
  store i64 %19171, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_43fc79, %struct.Memory** %MEMORY
  %loadMem1_43fc7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19173 = getelementptr inbounds %struct.GPR, %struct.GPR* %19172, i32 0, i32 33
  %19174 = getelementptr inbounds %struct.Reg, %struct.Reg* %19173, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %19174 to i64*
  %19175 = load i64, i64* %PC.i29
  %19176 = add i64 %19175, -198460
  %19177 = load i64, i64* %PC.i29
  %19178 = add i64 %19177, 5
  %19179 = load i64, i64* %PC.i29
  %19180 = add i64 %19179, 5
  store i64 %19180, i64* %PC.i29
  %19181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19182 = load i64, i64* %19181, align 8
  %19183 = add i64 %19182, -8
  %19184 = inttoptr i64 %19183 to i64*
  store i64 %19178, i64* %19184
  store i64 %19183, i64* %19181, align 8
  %19185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19176, i64* %19185, align 8
  store %struct.Memory* %loadMem1_43fc7c, %struct.Memory** %MEMORY
  %loadMem2_43fc7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fc7c = load i64, i64* %3
  %call2_43fc7c = call %struct.Memory* @sub_40f540.copyblock_sp(%struct.State* %0, i64 %loadPC_43fc7c, %struct.Memory* %loadMem2_43fc7c)
  store %struct.Memory* %call2_43fc7c, %struct.Memory** %MEMORY
  %loadMem_43fc81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19187 = getelementptr inbounds %struct.GPR, %struct.GPR* %19186, i32 0, i32 33
  %19188 = getelementptr inbounds %struct.Reg, %struct.Reg* %19187, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %19188 to i64*
  %19189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19190 = getelementptr inbounds %struct.GPR, %struct.GPR* %19189, i32 0, i32 1
  %19191 = getelementptr inbounds %struct.Reg, %struct.Reg* %19190, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %19191 to i64*
  %19192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19193 = getelementptr inbounds %struct.GPR, %struct.GPR* %19192, i32 0, i32 15
  %19194 = getelementptr inbounds %struct.Reg, %struct.Reg* %19193, i32 0, i32 0
  %RBP.i28 = bitcast %union.anon* %19194 to i64*
  %19195 = load i64, i64* %RBP.i28
  %19196 = sub i64 %19195, 76
  %19197 = load i64, i64* %PC.i26
  %19198 = add i64 %19197, 3
  store i64 %19198, i64* %PC.i26
  %19199 = inttoptr i64 %19196 to i32*
  %19200 = load i32, i32* %19199
  %19201 = zext i32 %19200 to i64
  store i64 %19201, i64* %RAX.i27, align 8
  store %struct.Memory* %loadMem_43fc81, %struct.Memory** %MEMORY
  %loadMem_43fc84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19203 = getelementptr inbounds %struct.GPR, %struct.GPR* %19202, i32 0, i32 33
  %19204 = getelementptr inbounds %struct.Reg, %struct.Reg* %19203, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %19204 to i64*
  %19205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19206 = getelementptr inbounds %struct.GPR, %struct.GPR* %19205, i32 0, i32 1
  %19207 = getelementptr inbounds %struct.Reg, %struct.Reg* %19206, i32 0, i32 0
  %RAX.i25 = bitcast %union.anon* %19207 to i64*
  %19208 = load i64, i64* %RAX.i25
  %19209 = load i64, i64* %PC.i24
  %19210 = add i64 %19209, 3
  store i64 %19210, i64* %PC.i24
  %19211 = trunc i64 %19208 to i32
  %19212 = add i32 4, %19211
  %19213 = zext i32 %19212 to i64
  store i64 %19213, i64* %RAX.i25, align 8
  %19214 = icmp ult i32 %19212, %19211
  %19215 = icmp ult i32 %19212, 4
  %19216 = or i1 %19214, %19215
  %19217 = zext i1 %19216 to i8
  %19218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19217, i8* %19218, align 1
  %19219 = and i32 %19212, 255
  %19220 = call i32 @llvm.ctpop.i32(i32 %19219)
  %19221 = trunc i32 %19220 to i8
  %19222 = and i8 %19221, 1
  %19223 = xor i8 %19222, 1
  %19224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19223, i8* %19224, align 1
  %19225 = xor i64 4, %19208
  %19226 = trunc i64 %19225 to i32
  %19227 = xor i32 %19226, %19212
  %19228 = lshr i32 %19227, 4
  %19229 = trunc i32 %19228 to i8
  %19230 = and i8 %19229, 1
  %19231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19230, i8* %19231, align 1
  %19232 = icmp eq i32 %19212, 0
  %19233 = zext i1 %19232 to i8
  %19234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19233, i8* %19234, align 1
  %19235 = lshr i32 %19212, 31
  %19236 = trunc i32 %19235 to i8
  %19237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19236, i8* %19237, align 1
  %19238 = lshr i32 %19211, 31
  %19239 = xor i32 %19235, %19238
  %19240 = add i32 %19239, %19235
  %19241 = icmp eq i32 %19240, 2
  %19242 = zext i1 %19241 to i8
  %19243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19242, i8* %19243, align 1
  store %struct.Memory* %loadMem_43fc84, %struct.Memory** %MEMORY
  %loadMem_43fc87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19245 = getelementptr inbounds %struct.GPR, %struct.GPR* %19244, i32 0, i32 33
  %19246 = getelementptr inbounds %struct.Reg, %struct.Reg* %19245, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %19246 to i64*
  %19247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19248 = getelementptr inbounds %struct.GPR, %struct.GPR* %19247, i32 0, i32 1
  %19249 = getelementptr inbounds %struct.Reg, %struct.Reg* %19248, i32 0, i32 0
  %EAX.i22 = bitcast %union.anon* %19249 to i32*
  %19250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19251 = getelementptr inbounds %struct.GPR, %struct.GPR* %19250, i32 0, i32 15
  %19252 = getelementptr inbounds %struct.Reg, %struct.Reg* %19251, i32 0, i32 0
  %RBP.i23 = bitcast %union.anon* %19252 to i64*
  %19253 = load i64, i64* %RBP.i23
  %19254 = sub i64 %19253, 76
  %19255 = load i32, i32* %EAX.i22
  %19256 = zext i32 %19255 to i64
  %19257 = load i64, i64* %PC.i21
  %19258 = add i64 %19257, 3
  store i64 %19258, i64* %PC.i21
  %19259 = inttoptr i64 %19254 to i32*
  store i32 %19255, i32* %19259
  store %struct.Memory* %loadMem_43fc87, %struct.Memory** %MEMORY
  %loadMem_43fc8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19261 = getelementptr inbounds %struct.GPR, %struct.GPR* %19260, i32 0, i32 33
  %19262 = getelementptr inbounds %struct.Reg, %struct.Reg* %19261, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %19262 to i64*
  %19263 = load i64, i64* %PC.i20
  %19264 = add i64 %19263, -37
  %19265 = load i64, i64* %PC.i20
  %19266 = add i64 %19265, 5
  store i64 %19266, i64* %PC.i20
  %19267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19264, i64* %19267, align 8
  store %struct.Memory* %loadMem_43fc8a, %struct.Memory** %MEMORY
  br label %block_.L_43fc65

block_.L_43fc8f:                                  ; preds = %block_.L_43fc65
  %loadMem_43fc8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19269 = getelementptr inbounds %struct.GPR, %struct.GPR* %19268, i32 0, i32 33
  %19270 = getelementptr inbounds %struct.Reg, %struct.Reg* %19269, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %19270 to i64*
  %19271 = load i64, i64* %PC.i19
  %19272 = add i64 %19271, 5
  %19273 = load i64, i64* %PC.i19
  %19274 = add i64 %19273, 5
  store i64 %19274, i64* %PC.i19
  %19275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19272, i64* %19275, align 8
  store %struct.Memory* %loadMem_43fc8f, %struct.Memory** %MEMORY
  br label %block_.L_43fc94

block_.L_43fc94:                                  ; preds = %block_.L_43fc8f
  %loadMem_43fc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19277 = getelementptr inbounds %struct.GPR, %struct.GPR* %19276, i32 0, i32 33
  %19278 = getelementptr inbounds %struct.Reg, %struct.Reg* %19277, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %19278 to i64*
  %19279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19280 = getelementptr inbounds %struct.GPR, %struct.GPR* %19279, i32 0, i32 1
  %19281 = getelementptr inbounds %struct.Reg, %struct.Reg* %19280, i32 0, i32 0
  %RAX.i17 = bitcast %union.anon* %19281 to i64*
  %19282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19283 = getelementptr inbounds %struct.GPR, %struct.GPR* %19282, i32 0, i32 15
  %19284 = getelementptr inbounds %struct.Reg, %struct.Reg* %19283, i32 0, i32 0
  %RBP.i18 = bitcast %union.anon* %19284 to i64*
  %19285 = load i64, i64* %RBP.i18
  %19286 = sub i64 %19285, 72
  %19287 = load i64, i64* %PC.i16
  %19288 = add i64 %19287, 3
  store i64 %19288, i64* %PC.i16
  %19289 = inttoptr i64 %19286 to i32*
  %19290 = load i32, i32* %19289
  %19291 = zext i32 %19290 to i64
  store i64 %19291, i64* %RAX.i17, align 8
  store %struct.Memory* %loadMem_43fc94, %struct.Memory** %MEMORY
  %loadMem_43fc97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19293 = getelementptr inbounds %struct.GPR, %struct.GPR* %19292, i32 0, i32 33
  %19294 = getelementptr inbounds %struct.Reg, %struct.Reg* %19293, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %19294 to i64*
  %19295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19296 = getelementptr inbounds %struct.GPR, %struct.GPR* %19295, i32 0, i32 1
  %19297 = getelementptr inbounds %struct.Reg, %struct.Reg* %19296, i32 0, i32 0
  %RAX.i15 = bitcast %union.anon* %19297 to i64*
  %19298 = load i64, i64* %RAX.i15
  %19299 = load i64, i64* %PC.i14
  %19300 = add i64 %19299, 3
  store i64 %19300, i64* %PC.i14
  %19301 = trunc i64 %19298 to i32
  %19302 = add i32 4, %19301
  %19303 = zext i32 %19302 to i64
  store i64 %19303, i64* %RAX.i15, align 8
  %19304 = icmp ult i32 %19302, %19301
  %19305 = icmp ult i32 %19302, 4
  %19306 = or i1 %19304, %19305
  %19307 = zext i1 %19306 to i8
  %19308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19307, i8* %19308, align 1
  %19309 = and i32 %19302, 255
  %19310 = call i32 @llvm.ctpop.i32(i32 %19309)
  %19311 = trunc i32 %19310 to i8
  %19312 = and i8 %19311, 1
  %19313 = xor i8 %19312, 1
  %19314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19313, i8* %19314, align 1
  %19315 = xor i64 4, %19298
  %19316 = trunc i64 %19315 to i32
  %19317 = xor i32 %19316, %19302
  %19318 = lshr i32 %19317, 4
  %19319 = trunc i32 %19318 to i8
  %19320 = and i8 %19319, 1
  %19321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19320, i8* %19321, align 1
  %19322 = icmp eq i32 %19302, 0
  %19323 = zext i1 %19322 to i8
  %19324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19323, i8* %19324, align 1
  %19325 = lshr i32 %19302, 31
  %19326 = trunc i32 %19325 to i8
  %19327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19326, i8* %19327, align 1
  %19328 = lshr i32 %19301, 31
  %19329 = xor i32 %19325, %19328
  %19330 = add i32 %19329, %19325
  %19331 = icmp eq i32 %19330, 2
  %19332 = zext i1 %19331 to i8
  %19333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19332, i8* %19333, align 1
  store %struct.Memory* %loadMem_43fc97, %struct.Memory** %MEMORY
  %loadMem_43fc9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19335 = getelementptr inbounds %struct.GPR, %struct.GPR* %19334, i32 0, i32 33
  %19336 = getelementptr inbounds %struct.Reg, %struct.Reg* %19335, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %19336 to i64*
  %19337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19338 = getelementptr inbounds %struct.GPR, %struct.GPR* %19337, i32 0, i32 1
  %19339 = getelementptr inbounds %struct.Reg, %struct.Reg* %19338, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %19339 to i32*
  %19340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19341 = getelementptr inbounds %struct.GPR, %struct.GPR* %19340, i32 0, i32 15
  %19342 = getelementptr inbounds %struct.Reg, %struct.Reg* %19341, i32 0, i32 0
  %RBP.i13 = bitcast %union.anon* %19342 to i64*
  %19343 = load i64, i64* %RBP.i13
  %19344 = sub i64 %19343, 72
  %19345 = load i32, i32* %EAX.i
  %19346 = zext i32 %19345 to i64
  %19347 = load i64, i64* %PC.i12
  %19348 = add i64 %19347, 3
  store i64 %19348, i64* %PC.i12
  %19349 = inttoptr i64 %19344 to i32*
  store i32 %19345, i32* %19349
  store %struct.Memory* %loadMem_43fc9a, %struct.Memory** %MEMORY
  %loadMem_43fc9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19351 = getelementptr inbounds %struct.GPR, %struct.GPR* %19350, i32 0, i32 33
  %19352 = getelementptr inbounds %struct.Reg, %struct.Reg* %19351, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %19352 to i64*
  %19353 = load i64, i64* %PC.i11
  %19354 = add i64 %19353, -79
  %19355 = load i64, i64* %PC.i11
  %19356 = add i64 %19355, 5
  store i64 %19356, i64* %PC.i11
  %19357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19354, i64* %19357, align 8
  store %struct.Memory* %loadMem_43fc9d, %struct.Memory** %MEMORY
  br label %block_.L_43fc4e

block_.L_43fca2:                                  ; preds = %block_.L_43fc4e
  %loadMem_43fca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19359 = getelementptr inbounds %struct.GPR, %struct.GPR* %19358, i32 0, i32 33
  %19360 = getelementptr inbounds %struct.Reg, %struct.Reg* %19359, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %19360 to i64*
  %19361 = load i64, i64* %PC.i10
  %19362 = add i64 %19361, 5
  %19363 = load i64, i64* %PC.i10
  %19364 = add i64 %19363, 5
  store i64 %19364, i64* %PC.i10
  %19365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19362, i64* %19365, align 8
  store %struct.Memory* %loadMem_43fca2, %struct.Memory** %MEMORY
  br label %block_.L_43fca7

block_.L_43fca7:                                  ; preds = %block_.L_43fca2, %block_.L_43fc36
  %loadMem_43fca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19367 = getelementptr inbounds %struct.GPR, %struct.GPR* %19366, i32 0, i32 33
  %19368 = getelementptr inbounds %struct.Reg, %struct.Reg* %19367, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %19368 to i64*
  %19369 = load i64, i64* %PC.i9
  %19370 = add i64 %19369, 5
  %19371 = load i64, i64* %PC.i9
  %19372 = add i64 %19371, 5
  store i64 %19372, i64* %PC.i9
  %19373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19370, i64* %19373, align 8
  store %struct.Memory* %loadMem_43fca7, %struct.Memory** %MEMORY
  br label %block_.L_43fcac

block_.L_43fcac:                                  ; preds = %block_.L_43fca7, %block_43fad5, %block_43faa9, %block_43fa9f, %block_.L_43fa8a
  %loadMem_43fcac = load %struct.Memory*, %struct.Memory** %MEMORY
  %19374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19375 = getelementptr inbounds %struct.GPR, %struct.GPR* %19374, i32 0, i32 33
  %19376 = getelementptr inbounds %struct.Reg, %struct.Reg* %19375, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %19376 to i64*
  %19377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19378 = getelementptr inbounds %struct.GPR, %struct.GPR* %19377, i32 0, i32 1
  %19379 = getelementptr inbounds %struct.Reg, %struct.Reg* %19378, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %19379 to i64*
  %19380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19381 = getelementptr inbounds %struct.GPR, %struct.GPR* %19380, i32 0, i32 15
  %19382 = getelementptr inbounds %struct.Reg, %struct.Reg* %19381, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %19382 to i64*
  %19383 = load i64, i64* %RBP.i8
  %19384 = sub i64 %19383, 88
  %19385 = load i64, i64* %PC.i7
  %19386 = add i64 %19385, 3
  store i64 %19386, i64* %PC.i7
  %19387 = inttoptr i64 %19384 to i32*
  %19388 = load i32, i32* %19387
  %19389 = zext i32 %19388 to i64
  store i64 %19389, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_43fcac, %struct.Memory** %MEMORY
  %loadMem_43fcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %19390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19391 = getelementptr inbounds %struct.GPR, %struct.GPR* %19390, i32 0, i32 33
  %19392 = getelementptr inbounds %struct.Reg, %struct.Reg* %19391, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %19392 to i64*
  %19393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19394 = getelementptr inbounds %struct.GPR, %struct.GPR* %19393, i32 0, i32 13
  %19395 = getelementptr inbounds %struct.Reg, %struct.Reg* %19394, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %19395 to i64*
  %19396 = load i64, i64* %RSP.i
  %19397 = load i64, i64* %PC.i6
  %19398 = add i64 %19397, 7
  store i64 %19398, i64* %PC.i6
  %19399 = add i64 176, %19396
  store i64 %19399, i64* %RSP.i, align 8
  %19400 = icmp ult i64 %19399, %19396
  %19401 = icmp ult i64 %19399, 176
  %19402 = or i1 %19400, %19401
  %19403 = zext i1 %19402 to i8
  %19404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19403, i8* %19404, align 1
  %19405 = trunc i64 %19399 to i32
  %19406 = and i32 %19405, 255
  %19407 = call i32 @llvm.ctpop.i32(i32 %19406)
  %19408 = trunc i32 %19407 to i8
  %19409 = and i8 %19408, 1
  %19410 = xor i8 %19409, 1
  %19411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19410, i8* %19411, align 1
  %19412 = xor i64 176, %19396
  %19413 = xor i64 %19412, %19399
  %19414 = lshr i64 %19413, 4
  %19415 = trunc i64 %19414 to i8
  %19416 = and i8 %19415, 1
  %19417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19416, i8* %19417, align 1
  %19418 = icmp eq i64 %19399, 0
  %19419 = zext i1 %19418 to i8
  %19420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19419, i8* %19420, align 1
  %19421 = lshr i64 %19399, 63
  %19422 = trunc i64 %19421 to i8
  %19423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19422, i8* %19423, align 1
  %19424 = lshr i64 %19396, 63
  %19425 = xor i64 %19421, %19424
  %19426 = add i64 %19425, %19421
  %19427 = icmp eq i64 %19426, 2
  %19428 = zext i1 %19427 to i8
  %19429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19428, i8* %19429, align 1
  store %struct.Memory* %loadMem_43fcaf, %struct.Memory** %MEMORY
  %loadMem_43fcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19431 = getelementptr inbounds %struct.GPR, %struct.GPR* %19430, i32 0, i32 33
  %19432 = getelementptr inbounds %struct.Reg, %struct.Reg* %19431, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %19432 to i64*
  %19433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19434 = getelementptr inbounds %struct.GPR, %struct.GPR* %19433, i32 0, i32 3
  %19435 = getelementptr inbounds %struct.Reg, %struct.Reg* %19434, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %19435 to i64*
  %19436 = load i64, i64* %PC.i5
  %19437 = add i64 %19436, 1
  store i64 %19437, i64* %PC.i5
  %19438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19439 = load i64, i64* %19438, align 8
  %19440 = add i64 %19439, 8
  %19441 = inttoptr i64 %19439 to i64*
  %19442 = load i64, i64* %19441
  store i64 %19442, i64* %RBX.i, align 8
  store i64 %19440, i64* %19438, align 8
  store %struct.Memory* %loadMem_43fcb6, %struct.Memory** %MEMORY
  %loadMem_43fcb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19444 = getelementptr inbounds %struct.GPR, %struct.GPR* %19443, i32 0, i32 33
  %19445 = getelementptr inbounds %struct.Reg, %struct.Reg* %19444, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %19445 to i64*
  %19446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19447 = getelementptr inbounds %struct.GPR, %struct.GPR* %19446, i32 0, i32 29
  %19448 = getelementptr inbounds %struct.Reg, %struct.Reg* %19447, i32 0, i32 0
  %R14.i = bitcast %union.anon* %19448 to i64*
  %19449 = load i64, i64* %PC.i4
  %19450 = add i64 %19449, 2
  store i64 %19450, i64* %PC.i4
  %19451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19452 = load i64, i64* %19451, align 8
  %19453 = add i64 %19452, 8
  %19454 = inttoptr i64 %19452 to i64*
  %19455 = load i64, i64* %19454
  store i64 %19455, i64* %R14.i, align 8
  store i64 %19453, i64* %19451, align 8
  store %struct.Memory* %loadMem_43fcb7, %struct.Memory** %MEMORY
  %loadMem_43fcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19457 = getelementptr inbounds %struct.GPR, %struct.GPR* %19456, i32 0, i32 33
  %19458 = getelementptr inbounds %struct.Reg, %struct.Reg* %19457, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %19458 to i64*
  %19459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19460 = getelementptr inbounds %struct.GPR, %struct.GPR* %19459, i32 0, i32 15
  %19461 = getelementptr inbounds %struct.Reg, %struct.Reg* %19460, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %19461 to i64*
  %19462 = load i64, i64* %PC.i2
  %19463 = add i64 %19462, 1
  store i64 %19463, i64* %PC.i2
  %19464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19465 = load i64, i64* %19464, align 8
  %19466 = add i64 %19465, 8
  %19467 = inttoptr i64 %19465 to i64*
  %19468 = load i64, i64* %19467
  store i64 %19468, i64* %RBP.i3, align 8
  store i64 %19466, i64* %19464, align 8
  store %struct.Memory* %loadMem_43fcb9, %struct.Memory** %MEMORY
  %loadMem_43fcba = load %struct.Memory*, %struct.Memory** %MEMORY
  %19469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19470 = getelementptr inbounds %struct.GPR, %struct.GPR* %19469, i32 0, i32 33
  %19471 = getelementptr inbounds %struct.Reg, %struct.Reg* %19470, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %19471 to i64*
  %19472 = load i64, i64* %PC.i1
  %19473 = add i64 %19472, 1
  store i64 %19473, i64* %PC.i1
  %19474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19476 = load i64, i64* %19475, align 8
  %19477 = inttoptr i64 %19476 to i64*
  %19478 = load i64, i64* %19477
  store i64 %19478, i64* %19474, align 8
  %19479 = add i64 %19476, 8
  store i64 %19479, i64* %19475, align 8
  store %struct.Memory* %loadMem_43fcba, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_43fcba
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xb0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 176
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 176
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 176, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx___ax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %AX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_0x18__rbp____r10w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R10W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_0x10__rbp____r11w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R11W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl___bl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %BL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R14D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 2, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax__MINUS0x26__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r11w__MINUS0x32__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 50
  %14 = load i16, i16* %R11W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r10w__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i16, i16* %R10W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R14D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_shll__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__bl__MINUS0x99__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 153
  %15 = load i8, i8* %BL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43ef69(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x99__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 153
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x99__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 153
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x80__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x23c__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 572
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x18__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43efc9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 8, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 8
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 8, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f934(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xac__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f918(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xa8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f1ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__edi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RDI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x26__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_MINUS0x32__rbp____ax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 50
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %AX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl__ax___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i16, i16* %AX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = trunc i64 %14 to i32
  %18 = shl i32 %17, 16
  %19 = ashr exact i32 %18, 16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x34__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i16*
  %18 = load i16, i16* %17
  %19 = sext i16 %18 to i64
  %20 = and i64 %19, 4294967295
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ChromaPrediction4x4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f118(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f105(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x725610___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x400___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 1024, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1024
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1024, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f095(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f10a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f084(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f1e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f1d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f162(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f1d7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f151(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f1ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x26__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 38
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl__ax___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i16, i16* %AX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = trunc i64 %14 to i32
  %18 = shl i32 %17, 16
  %19 = ashr exact i32 %18, 16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.LumaPrediction4x4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__r11_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f2c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f2bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f2a9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f23f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f2ae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f22e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f2c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43f4ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43f427(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f395(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f382(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x726418___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x48__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x48__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f2fb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f387(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f2ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11ac8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72392
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f422(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 116
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43f422(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f3df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x58__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_luma(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f3f1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_luma_sp(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f41d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_orq___rsi____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = or i64 %17, %12
  store i64 %18, i64* %RDX, align 8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = trunc i64 %18 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i64 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %18, 63
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_orl___rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = or i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RAX, align 8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %19, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f422(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f4e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f4e3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f4d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x68__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x6c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 108
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f43f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f4d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f42e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f8fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f7d3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f7c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x723720___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x723720_type* @G__0x723720 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d40f0_type* @G__0x6d40f0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f6fa0_type* @G__0x6f6fa0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x725610___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x725610_type* @G__0x725610 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x800___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2048, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2048
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2048, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x400___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 1024, %9
  store i64 %12, i64* %R8, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1024
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1024, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f6f90___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %11, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r9____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4c__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 76
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r10d___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r9__r11_8____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R11
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 68
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x48__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 72
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___r9__r11_2____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %R9
  %17 = load i64, i64* %R11
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i16*
  %23 = load i16, i16* %22
  %24 = zext i16 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RBX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ebx___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EBX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R9, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r9___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RBX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___r8__r9_4____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i32, i32* %R10D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %R8
  %19 = load i64, i64* %R9
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %16, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %15, align 8
  %28 = icmp ult i32 %16, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %16
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %16, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x726418___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x726418_type* @G_0x726418 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r10d___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r8__r9_8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___r8__r9_2____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i16*
  %23 = load i16, i16* %22
  %24 = zext i16 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ebx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EBX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rsi__r8_4____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i32, i32* %R10D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RSI
  %19 = load i64, i64* %R8
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %16, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %15, align 8
  %28 = icmp ult i32 %16, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %16
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %16, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f6f90_type* @G_0x6f6f90 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r10d___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__r8_2____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i16*
  %23 = load i16, i16* %22
  %24 = zext i16 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ebx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EBX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rdi__rsi_4____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i32, i32* %R10D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RDI
  %19 = load i64, i64* %RSI
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %16, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %15, align 8
  %28 = icmp ult i32 %16, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %16
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %16, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x90__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 144
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %13, %20
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %13, %20
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %21, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %20, %13
  %33 = xor i32 %32, %21
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %21, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %21, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %13, 31
  %45 = lshr i32 %20, 31
  %46 = xor i32 %45, %44
  %47 = xor i32 %41, %44
  %48 = add i32 %47, %46
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d____rdi__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R10D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x90__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 144
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rsi_4____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RBX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ebx___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EBX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = add i32 %15, %13
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  %21 = icmp ult i32 %19, %13
  %22 = icmp ult i32 %19, %15
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i64 %16, %14
  %33 = trunc i64 %32 to i32
  %34 = xor i32 %33, %19
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %19, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %13, 31
  %46 = lshr i32 %15, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x94__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 148
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %13, %20
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %13, %20
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %21, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %20, %13
  %33 = xor i32 %32, %21
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %21, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %21, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %13, 31
  %45 = lshr i32 %20, 31
  %46 = xor i32 %45, %44
  %47 = xor i32 %41, %44
  %48 = add i32 %47, %46
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ebx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EBX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d____rsi__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R10D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ebx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EBX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R10D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43f75d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f7ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f7b2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f505(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f7c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f4f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f8f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43f8f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f82a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f83c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f8c6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43f8b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x722ff0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x722ff0_type* @G__0x722ff0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f854(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f8b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f843(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f8f2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f8f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f901(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f008(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f91d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43efd6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fa8a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fa85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fa85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43f983(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x58__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__edx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.dct_luma8x8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fa27(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43fa22(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43fa0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x48__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f9b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fa14(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43f99f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fa27(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fa80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x33___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 51, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_orq___r8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = or i64 %17, %12
  store i64 %18, i64* %RDI, align 8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = trunc i64 %18 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i64 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %18, 63
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi____r8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_orl___rdi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = or i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %19, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fa85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fa8a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fcac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fcac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_43fcac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x28__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43faea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c00__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3f___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 63, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x64__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl___rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = and i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %19, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0xffffffff___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 -1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andq___r8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = and i64 %17, %12
  store i64 %18, i64* %RSI, align 8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = trunc i64 %18 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i64 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %18, 63
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi____r8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43fc36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43fc23(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fbf0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x48__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  store i16 %22, i16* %DX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x48__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fc10(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fc15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fb65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fc28(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fb4e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fca7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43fca2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43fc8f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.copyblock_sp(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fc65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fc94(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fc4e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fca7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fcac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xb0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 176, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 176
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 176, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
